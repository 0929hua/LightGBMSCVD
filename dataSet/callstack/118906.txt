Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x42]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x42
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x42
0xc: JUMPI 0x42 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x20]
---
Predecessors: [0x0]
Successors: [0x21, 0x47]
---
0xd PUSH1 0xe0
0xf PUSH1 0x2
0x11 EXP
0x12 PUSH1 0x0
0x14 CALLDATALOAD
0x15 DIV
0x16 PUSH4 0x1878d1f1
0x1b DUP2
0x1c EQ
0x1d PUSH2 0x47
0x20 JUMPI
---
0xd: V6 = 0xe0
0xf: V7 = 0x2
0x11: V8 = EXP 0x2 0xe0
0x12: V9 = 0x0
0x14: V10 = CALLDATALOAD 0x0
0x15: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x16: V12 = 0x1878d1f1
0x1c: V13 = EQ V11 0x1878d1f1
0x1d: V14 = 0x47
0x20: JUMPI 0x47 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x21
[0x21:0x2b]
---
Predecessors: [0xd]
Successors: [0x2c, 0x78]
---
0x21 DUP1
0x22 PUSH4 0x2e378429
0x27 EQ
0x28 PUSH2 0x78
0x2b JUMPI
---
0x22: V15 = 0x2e378429
0x27: V16 = EQ 0x2e378429 V11
0x28: V17 = 0x78
0x2b: JUMPI 0x78 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x2c
[0x2c:0x36]
---
Predecessors: [0x21]
Successors: [0x37, 0x8d]
---
0x2c DUP1
0x2d PUSH4 0xc660825c
0x32 EQ
0x33 PUSH2 0x8d
0x36 JUMPI
---
0x2d: V18 = 0xc660825c
0x32: V19 = EQ 0xc660825c V11
0x33: V20 = 0x8d
0x36: JUMPI 0x8d V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x37
[0x37:0x41]
---
Predecessors: [0x2c]
Successors: [0x42, 0x177]
---
0x37 DUP1
0x38 PUSH4 0xe3b5ce76
0x3d EQ
0x3e PUSH2 0x177
0x41 JUMPI
---
0x38: V21 = 0xe3b5ce76
0x3d: V22 = EQ 0xe3b5ce76 V11
0x3e: V23 = 0x177
0x41: JUMPI 0x177 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x42
[0x42:0x46]
---
Predecessors: [0x0, 0x37]
Successors: []
---
0x42 JUMPDEST
0x43 PUSH1 0x0
0x45 DUP1
0x46 REVERT
---
0x42: JUMPDEST 
0x43: V24 = 0x0
0x46: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x47
[0x47:0x4e]
---
Predecessors: [0xd]
Successors: [0x4f, 0x53]
---
0x47 JUMPDEST
0x48 CALLVALUE
0x49 DUP1
0x4a ISZERO
0x4b PUSH2 0x53
0x4e JUMPI
---
0x47: JUMPDEST 
0x48: V25 = CALLVALUE
0x4a: V26 = ISZERO V25
0x4b: V27 = 0x53
0x4e: JUMPI 0x53 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x4f
[0x4f:0x52]
---
Predecessors: [0x47]
Successors: []
---
0x4f PUSH1 0x0
0x51 DUP1
0x52 REVERT
---
0x4f: V28 = 0x0
0x52: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x53
[0x53:0x5b]
---
Predecessors: [0x47]
Successors: [0x18c]
---
0x53 JUMPDEST
0x54 POP
0x55 PUSH2 0x5c
0x58 PUSH2 0x18c
0x5b JUMP
---
0x53: JUMPDEST 
0x55: V29 = 0x5c
0x58: V30 = 0x18c
0x5b: JUMP 0x18c
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x5c]
Exit stack: [V11, 0x5c]

================================

Block 0x5c
[0x5c:0x77]
---
Predecessors: [0x18c, 0x1a4, 0x5ae]
Successors: []
---
0x5c JUMPDEST
0x5d PUSH1 0x40
0x5f DUP1
0x60 MLOAD
0x61 PUSH1 0x1
0x63 PUSH1 0xa0
0x65 PUSH1 0x2
0x67 EXP
0x68 SUB
0x69 SWAP1
0x6a SWAP3
0x6b AND
0x6c DUP3
0x6d MSTORE
0x6e MLOAD
0x6f SWAP1
0x70 DUP2
0x71 SWAP1
0x72 SUB
0x73 PUSH1 0x20
0x75 ADD
0x76 SWAP1
0x77 RETURN
---
0x5c: JUMPDEST 
0x5d: V31 = 0x40
0x60: V32 = M[0x40]
0x61: V33 = 0x1
0x63: V34 = 0xa0
0x65: V35 = 0x2
0x67: V36 = EXP 0x2 0xa0
0x68: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b: V38 = AND {0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee} 0xffffffffffffffffffffffffffffffffffffffff
0x6d: M[V32] = V38
0x6e: V39 = M[0x40]
0x72: V40 = SUB V32 V39
0x73: V41 = 0x20
0x75: V42 = ADD 0x20 V40
0x77: RETURN V39 V42
---
Entry stack: [V11, 0x5c, {0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x5c]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x21]
Successors: [0x80, 0x84]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a DUP1
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x78: JUMPDEST 
0x79: V43 = CALLVALUE
0x7b: V44 = ISZERO V43
0x7c: V45 = 0x84
0x7f: JUMPI 0x84 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x78]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V46 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0x84
[0x84:0x8c]
---
Predecessors: [0x78]
Successors: [0x1a4]
---
0x84 JUMPDEST
0x85 POP
0x86 PUSH2 0x5c
0x89 PUSH2 0x1a4
0x8c JUMP
---
0x84: JUMPDEST 
0x86: V47 = 0x5c
0x89: V48 = 0x1a4
0x8c: JUMP 0x1a4
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0x5c]
Exit stack: [V11, 0x5c]

================================

Block 0x8d
[0x8d:0x9e]
---
Predecessors: [0x2c]
Successors: [0x9f, 0xa3]
---
0x8d JUMPDEST
0x8e PUSH2 0x165
0x91 PUSH1 0x4
0x93 DUP1
0x94 CALLDATASIZE
0x95 SUB
0x96 PUSH1 0xe0
0x98 DUP2
0x99 LT
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x8d: JUMPDEST 
0x8e: V49 = 0x165
0x91: V50 = 0x4
0x94: V51 = CALLDATASIZE
0x95: V52 = SUB V51 0x4
0x96: V53 = 0xe0
0x99: V54 = LT V52 0xe0
0x9a: V55 = ISZERO V54
0x9b: V56 = 0xa3
0x9e: JUMPI 0xa3 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x165, 0x4, V52]
Exit stack: [V11, 0x165, 0x4, V52]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x8d]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V57 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, 0x4, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, 0x4, V52]

================================

Block 0xa3
[0xa3:0xeb]
---
Predecessors: [0x8d]
Successors: [0xec, 0xf0]
---
0xa3 JUMPDEST
0xa4 PUSH1 0x1
0xa6 PUSH1 0xa0
0xa8 PUSH1 0x2
0xaa EXP
0xab SUB
0xac DUP3
0xad CALLDATALOAD
0xae DUP2
0xaf AND
0xb0 SWAP3
0xb1 PUSH1 0x20
0xb3 DUP2
0xb4 ADD
0xb5 CALLDATALOAD
0xb6 SWAP3
0xb7 PUSH1 0x40
0xb9 DUP3
0xba ADD
0xbb CALLDATALOAD
0xbc DUP4
0xbd AND
0xbe SWAP3
0xbf PUSH1 0x60
0xc1 DUP4
0xc2 ADD
0xc3 CALLDATALOAD
0xc4 AND
0xc5 SWAP2
0xc6 PUSH1 0x80
0xc8 DUP2
0xc9 ADD
0xca CALLDATALOAD
0xcb SWAP2
0xcc PUSH1 0xa0
0xce DUP3
0xcf ADD
0xd0 CALLDATALOAD
0xd1 SWAP2
0xd2 SWAP1
0xd3 DUP2
0xd4 ADD
0xd5 SWAP1
0xd6 PUSH1 0xe0
0xd8 DUP2
0xd9 ADD
0xda PUSH1 0xc0
0xdc DUP3
0xdd ADD
0xde CALLDATALOAD
0xdf PUSH5 0x100000000
0xe5 DUP2
0xe6 GT
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xa3: JUMPDEST 
0xa4: V58 = 0x1
0xa6: V59 = 0xa0
0xa8: V60 = 0x2
0xaa: V61 = EXP 0x2 0xa0
0xab: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V63 = CALLDATALOAD 0x4
0xaf: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xb1: V65 = 0x20
0xb4: V66 = ADD 0x4 0x20
0xb5: V67 = CALLDATALOAD 0x24
0xb7: V68 = 0x40
0xba: V69 = ADD 0x4 0x40
0xbb: V70 = CALLDATALOAD 0x44
0xbd: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xbf: V72 = 0x60
0xc2: V73 = ADD 0x4 0x60
0xc3: V74 = CALLDATALOAD 0x64
0xc4: V75 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V76 = 0x80
0xc9: V77 = ADD 0x4 0x80
0xca: V78 = CALLDATALOAD 0x84
0xcc: V79 = 0xa0
0xcf: V80 = ADD 0x4 0xa0
0xd0: V81 = CALLDATALOAD 0xa4
0xd4: V82 = ADD 0x4 V52
0xd6: V83 = 0xe0
0xd9: V84 = ADD 0x4 0xe0
0xda: V85 = 0xc0
0xdd: V86 = ADD 0x4 0xc0
0xde: V87 = CALLDATALOAD 0xc4
0xdf: V88 = 0x100000000
0xe6: V89 = GT V87 0x100000000
0xe7: V90 = ISZERO V89
0xe8: V91 = 0xf0
0xeb: JUMPI 0xf0 V90
---
Entry stack: [V11, 0x165, 0x4, V52]
Stack pops: 2
Stack additions: [V64, V67, V71, V75, V78, V81, V82, S1, 0xe4, V87]
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V87]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xa3]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V92 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V87]

================================

Block 0xf0
[0xf0:0xfd]
---
Predecessors: [0xa3]
Successors: [0xfe, 0x102]
---
0xf0 JUMPDEST
0xf1 DUP3
0xf2 ADD
0xf3 DUP4
0xf4 PUSH1 0x20
0xf6 DUP3
0xf7 ADD
0xf8 GT
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf0: JUMPDEST 
0xf2: V93 = ADD 0x4 V87
0xf4: V94 = 0x20
0xf7: V95 = ADD V93 0x20
0xf8: V96 = GT V95 V82
0xf9: V97 = ISZERO V96
0xfa: V98 = 0x102
0xfd: JUMPI 0x102 V97
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V87]
Stack pops: 4
Stack additions: [S3, S2, S1, V93]
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V93]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf0]
Successors: []
---
0xfe PUSH1 0x0
0x100 DUP1
0x101 REVERT
---
0xfe: V99 = 0x0
0x101: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V93]

================================

Block 0x102
[0x102:0x11f]
---
Predecessors: [0xf0]
Successors: [0x120, 0x124]
---
0x102 JUMPDEST
0x103 DUP1
0x104 CALLDATALOAD
0x105 SWAP1
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP2
0x10a DUP5
0x10b PUSH1 0x1
0x10d DUP4
0x10e MUL
0x10f DUP5
0x110 ADD
0x111 GT
0x112 PUSH5 0x100000000
0x118 DUP4
0x119 GT
0x11a OR
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x102: JUMPDEST 
0x104: V100 = CALLDATALOAD V93
0x106: V101 = 0x20
0x108: V102 = ADD 0x20 V93
0x10b: V103 = 0x1
0x10e: V104 = MUL V100 0x1
0x110: V105 = ADD V102 V104
0x111: V106 = GT V105 V82
0x112: V107 = 0x100000000
0x119: V108 = GT V100 0x100000000
0x11a: V109 = OR V108 V106
0x11b: V110 = ISZERO V109
0x11c: V111 = 0x124
0x11f: JUMPI 0x124 V110
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, 0xe4, V93]
Stack pops: 4
Stack additions: [S3, S2, V102, V100, S1]
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, V102, V100, 0xe4]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x102]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V112 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, V102, V100, 0xe4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, V102, V100, 0xe4]

================================

Block 0x124
[0x124:0x164]
---
Predecessors: [0x102]
Successors: [0x1bc]
---
0x124 JUMPDEST
0x125 SWAP2
0x126 SWAP1
0x127 DUP1
0x128 DUP1
0x129 PUSH1 0x1f
0x12b ADD
0x12c PUSH1 0x20
0x12e DUP1
0x12f SWAP2
0x130 DIV
0x131 MUL
0x132 PUSH1 0x20
0x134 ADD
0x135 PUSH1 0x40
0x137 MLOAD
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b PUSH1 0x40
0x13d MSTORE
0x13e DUP1
0x13f SWAP4
0x140 SWAP3
0x141 SWAP2
0x142 SWAP1
0x143 DUP2
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x20
0x148 ADD
0x149 DUP4
0x14a DUP4
0x14b DUP1
0x14c DUP3
0x14d DUP5
0x14e CALLDATACOPY
0x14f PUSH1 0x0
0x151 SWAP3
0x152 ADD
0x153 SWAP2
0x154 SWAP1
0x155 SWAP2
0x156 MSTORE
0x157 POP
0x158 SWAP3
0x159 SWAP6
0x15a POP
0x15b PUSH2 0x1bc
0x15e SWAP5
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 JUMP
---
0x124: JUMPDEST 
0x129: V113 = 0x1f
0x12b: V114 = ADD 0x1f V100
0x12c: V115 = 0x20
0x130: V116 = DIV V114 0x20
0x131: V117 = MUL V116 0x20
0x132: V118 = 0x20
0x134: V119 = ADD 0x20 V117
0x135: V120 = 0x40
0x137: V121 = M[0x40]
0x13a: V122 = ADD V121 V119
0x13b: V123 = 0x40
0x13d: M[0x40] = V122
0x145: M[V121] = V100
0x146: V124 = 0x20
0x148: V125 = ADD 0x20 V121
0x14e: CALLDATACOPY V125 V102 V100
0x14f: V126 = 0x0
0x152: V127 = ADD V125 V100
0x156: M[V127] = 0x0
0x15b: V128 = 0x1bc
0x164: JUMP 0x1bc
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V82, 0x4, V102, V100, 0xe4]
Stack pops: 5
Stack additions: [V121]
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121]

================================

Block 0x165
[0x165:0x176]
---
Predecessors: [0x5a2, 0x64e]
Successors: []
---
0x165 JUMPDEST
0x166 PUSH1 0x40
0x168 DUP1
0x169 MLOAD
0x16a SWAP2
0x16b DUP3
0x16c MSTORE
0x16d MLOAD
0x16e SWAP1
0x16f DUP2
0x170 SWAP1
0x171 SUB
0x172 PUSH1 0x20
0x174 ADD
0x175 SWAP1
0x176 RETURN
---
0x165: JUMPDEST 
0x166: V129 = 0x40
0x169: V130 = M[0x40]
0x16c: M[V130] = S0
0x16d: V131 = M[0x40]
0x171: V132 = SUB V130 V131
0x172: V133 = 0x20
0x174: V134 = ADD 0x20 V132
0x176: RETURN V131 V134
---
Entry stack: [V11, 0x165, V64, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x165, V64, S2, S1]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0x37]
Successors: [0x17f, 0x183]
---
0x177 JUMPDEST
0x178 CALLVALUE
0x179 DUP1
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x177: JUMPDEST 
0x178: V135 = CALLVALUE
0x17a: V136 = ISZERO V135
0x17b: V137 = 0x183
0x17e: JUMPI 0x183 V136
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V135]
Exit stack: [V11, V135]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x177]
Successors: []
---
0x17f PUSH1 0x0
0x181 DUP1
0x182 REVERT
---
0x17f: V138 = 0x0
0x182: REVERT 0x0 0x0
---
Entry stack: [V11, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V135]

================================

Block 0x183
[0x183:0x18b]
---
Predecessors: [0x177]
Successors: [0x5ae]
---
0x183 JUMPDEST
0x184 POP
0x185 PUSH2 0x5c
0x188 PUSH2 0x5ae
0x18b JUMP
---
0x183: JUMPDEST 
0x185: V139 = 0x5c
0x188: V140 = 0x5ae
0x18b: JUMP 0x5ae
---
Entry stack: [V11, V135]
Stack pops: 1
Stack additions: [0x5c]
Exit stack: [V11, 0x5c]

================================

Block 0x18c
[0x18c:0x1a3]
---
Predecessors: [0x53]
Successors: [0x5c]
---
0x18c JUMPDEST
0x18d PUSH20 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x1a2 DUP2
0x1a3 JUMP
---
0x18c: JUMPDEST 
0x18d: V141 = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x1a3: JUMP 0x5c
---
Entry stack: [V11, 0x5c]
Stack pops: 1
Stack additions: [S0, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee]
Exit stack: [V11, 0x5c, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee]

================================

Block 0x1a4
[0x1a4:0x1bb]
---
Predecessors: [0x84]
Successors: [0x5c]
---
0x1a4 JUMPDEST
0x1a5 PUSH20 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56
0x1ba DUP2
0x1bb JUMP
---
0x1a4: JUMPDEST 
0x1a5: V142 = 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56
0x1bb: JUMP 0x5c
---
Entry stack: [V11, 0x5c]
Stack pops: 1
Stack additions: [S0, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56]
Exit stack: [V11, 0x5c, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56]

================================

Block 0x1bc
[0x1bc:0x1ea]
---
Predecessors: [0x124]
Successors: [0x1eb, 0x23e]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 SLOAD
0x1c1 PUSH1 0x1
0x1c3 ADD
0x1c4 DUP1
0x1c5 DUP3
0x1c6 SSTORE
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0xa0
0x1cb PUSH1 0x2
0x1cd EXP
0x1ce SUB
0x1cf DUP10
0x1d0 AND
0x1d1 PUSH20 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x1e6 EQ
0x1e7 PUSH2 0x23e
0x1ea JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V143 = 0x0
0x1c0: V144 = S[0x0]
0x1c1: V145 = 0x1
0x1c3: V146 = ADD 0x1 V144
0x1c6: S[0x0] = V146
0x1c7: V147 = 0x1
0x1c9: V148 = 0xa0
0x1cb: V149 = 0x2
0x1cd: V150 = EXP 0x2 0xa0
0x1ce: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V152 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V153 = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x1e6: V154 = EQ 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee V152
0x1e7: V155 = 0x23e
0x1ea: JUMPI 0x23e V154
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, V146]
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146]

================================

Block 0x1eb
[0x1eb:0x1f0]
---
Predecessors: [0x1bc]
Successors: [0x1f1, 0x1f5]
---
0x1eb CALLVALUE
0x1ec ISZERO
0x1ed PUSH2 0x1f5
0x1f0 JUMPI
---
0x1eb: V156 = CALLVALUE
0x1ec: V157 = ISZERO V156
0x1ed: V158 = 0x1f5
0x1f0: JUMPI 0x1f5 V157
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 REVERT
---
0x1f1: V159 = 0x0
0x1f4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146]

================================

Block 0x1f5
[0x1f5:0x20f]
---
Predecessors: [0x1eb]
Successors: [0x5c6]
---
0x1f5 JUMPDEST
0x1f6 PUSH2 0x210
0x1f9 PUSH1 0x1
0x1fb PUSH1 0xa0
0x1fd PUSH1 0x2
0x1ff EXP
0x200 SUB
0x201 DUP11
0x202 AND
0x203 CALLER
0x204 ADDRESS
0x205 DUP12
0x206 PUSH4 0xffffffff
0x20b PUSH2 0x5c6
0x20e AND
0x20f JUMP
---
0x1f5: JUMPDEST 
0x1f6: V160 = 0x210
0x1f9: V161 = 0x1
0x1fb: V162 = 0xa0
0x1fd: V163 = 0x2
0x1ff: V164 = EXP 0x2 0xa0
0x200: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V166 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0x203: V167 = CALLER
0x204: V168 = ADDRESS
0x206: V169 = 0xffffffff
0x20b: V170 = 0x5c6
0x20e: V171 = AND 0x5c6 0xffffffff
0x20f: JUMP 0x5c6
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x210, V166, V167, V168, S7]
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146, 0x210, V166, V167, V168, V67]

================================

Block 0x210
[0x210:0x23d]
---
Predecessors: [0x64e, 0x77e]
Successors: [0x654]
---
0x210 JUMPDEST
0x211 PUSH2 0x23e
0x214 PUSH1 0x1
0x216 PUSH1 0xa0
0x218 PUSH1 0x2
0x21a EXP
0x21b SUB
0x21c DUP11
0x21d AND
0x21e PUSH20 0x818e6fecd516ecc3849daf6845e3ec868087b755
0x233 DUP11
0x234 PUSH4 0xffffffff
0x239 PUSH2 0x654
0x23c AND
0x23d JUMP
---
0x210: JUMPDEST 
0x211: V172 = 0x23e
0x214: V173 = 0x1
0x216: V174 = 0xa0
0x218: V175 = 0x2
0x21a: V176 = EXP 0x2 0xa0
0x21b: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21d: V178 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V179 = 0x818e6fecd516ecc3849daf6845e3ec868087b755
0x234: V180 = 0xffffffff
0x239: V181 = 0x654
0x23c: V182 = AND 0x654 0xffffffff
0x23d: JUMP 0x654
---
Entry stack: [V11, 0x165, V64, V67, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x23e, V178, 0x818e6fecd516ecc3849daf6845e3ec868087b755, S7]
Exit stack: [V11, 0x165, V64, V67, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x23e, V178, 0x818e6fecd516ecc3849daf6845e3ec868087b755, S7]

================================

Block 0x23e
[0x23e:0x27e]
---
Predecessors: [0x1bc, 0x77e]
Successors: [0x27f, 0x285]
---
0x23e JUMPDEST
0x23f PUSH1 0x0
0x241 PUSH20 0x818e6fecd516ecc3849daf6845e3ec868087b755
0x256 PUSH4 0xcb3c28c7
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 DUP13
0x264 AND
0x265 PUSH20 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x27a EQ
0x27b PUSH2 0x285
0x27e JUMPI
---
0x23e: JUMPDEST 
0x23f: V183 = 0x0
0x241: V184 = 0x818e6fecd516ecc3849daf6845e3ec868087b755
0x256: V185 = 0xcb3c28c7
0x25b: V186 = 0x1
0x25d: V187 = 0xa0
0x25f: V188 = 0x2
0x261: V189 = EXP 0x2 0xa0
0x262: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V191 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x265: V192 = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x27a: V193 = EQ 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee V191
0x27b: V194 = 0x285
0x27e: JUMPI 0x285 V193
---
Entry stack: [V11, 0x165, V64, V67, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7]
Exit stack: [V11, 0x165, V64, V67, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7]

================================

Block 0x27f
[0x27f:0x284]
---
Predecessors: [0x23e]
Successors: [0x287]
---
0x27f PUSH1 0x0
0x281 PUSH2 0x287
0x284 JUMP
---
0x27f: V195 = 0x0
0x281: V196 = 0x287
0x284: JUMP 0x287
---
Entry stack: [V11, 0x165, V64, V67, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x165, V64, V67, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, 0x0]

================================

Block 0x285
[0x285:0x286]
---
Predecessors: [0x23e]
Successors: [0x287]
---
0x285 JUMPDEST
0x286 DUP11
---
0x285: JUMPDEST 
---
Entry stack: [V11, 0x165, V64, V67, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S10]
Exit stack: [V11, 0x165, V64, V67, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S10]

================================

Block 0x287
[0x287:0x2da]
---
Predecessors: [0x27f, 0x285]
Successors: [0x2db, 0x2df]
---
0x287 JUMPDEST
0x288 DUP13
0x289 DUP13
0x28a DUP13
0x28b ADDRESS
0x28c PUSH1 0x0
0x28e NOT
0x28f DUP14
0x290 PUSH20 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad AND
0x2ae PUSH4 0x8da5cb5b
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP2
0x2b7 PUSH4 0xffffffff
0x2bc AND
0x2bd PUSH1 0xe0
0x2bf PUSH1 0x2
0x2c1 EXP
0x2c2 MUL
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x4
0x2c7 ADD
0x2c8 PUSH1 0x20
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce DUP4
0x2cf SUB
0x2d0 DUP2
0x2d1 DUP7
0x2d2 DUP1
0x2d3 EXTCODESIZE
0x2d4 ISZERO
0x2d5 DUP1
0x2d6 ISZERO
0x2d7 PUSH2 0x2df
0x2da JUMPI
---
0x287: JUMPDEST 
0x28b: V197 = ADDRESS
0x28c: V198 = 0x0
0x28e: V199 = NOT 0x0
0x290: V200 = 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56
0x2a5: V201 = 0x1
0x2a7: V202 = 0xa0
0x2a9: V203 = 0x2
0x2ab: V204 = EXP 0x2 0xa0
0x2ac: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56
0x2ae: V207 = 0x8da5cb5b
0x2b3: V208 = 0x40
0x2b5: V209 = M[0x40]
0x2b7: V210 = 0xffffffff
0x2bc: V211 = AND 0xffffffff 0x8da5cb5b
0x2bd: V212 = 0xe0
0x2bf: V213 = 0x2
0x2c1: V214 = EXP 0x2 0xe0
0x2c2: V215 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x2c4: M[V209] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x2c5: V216 = 0x4
0x2c7: V217 = ADD 0x4 V209
0x2c8: V218 = 0x20
0x2ca: V219 = 0x40
0x2cc: V220 = M[0x40]
0x2cf: V221 = SUB V217 V220
0x2d3: V222 = EXTCODESIZE 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56
0x2d4: V223 = ISZERO V222
0x2d6: V224 = ISZERO V223
0x2d7: V225 = 0x2df
0x2da: JUMPI 0x2df V224
---
Entry stack: [V11, 0x165, V64, V67, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S12, S11, S10, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S8, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, 0x20, V220, V221, V220, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, V223]
Exit stack: [V11, 0x165, V64, V67, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S0, S12, S11, S10, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S8, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, 0x20, V220, V221, V220, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, V223]

================================

Block 0x2db
[0x2db:0x2de]
---
Predecessors: [0x287]
Successors: []
---
0x2db PUSH1 0x0
0x2dd DUP1
0x2de REVERT
---
0x2db: V226 = 0x0
0x2de: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S15, S14, S13, S12, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S9, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, 0x20, V220, V221, V220, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S15, S14, S13, S12, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S9, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, 0x20, V220, V221, V220, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, V223]

================================

Block 0x2df
[0x2df:0x2e9]
---
Predecessors: [0x287]
Successors: [0x2ea, 0x2f3]
---
0x2df JUMPDEST
0x2e0 POP
0x2e1 GAS
0x2e2 STATICCALL
0x2e3 ISZERO
0x2e4 DUP1
0x2e5 ISZERO
0x2e6 PUSH2 0x2f3
0x2e9 JUMPI
---
0x2df: JUMPDEST 
0x2e1: V227 = GAS
0x2e2: V228 = STATICCALL V227 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56 V220 V221 V220 0x20
0x2e3: V229 = ISZERO V228
0x2e5: V230 = ISZERO V229
0x2e6: V231 = 0x2f3
0x2e9: JUMPI 0x2f3 V230
---
Entry stack: [V11, 0x165, V64, V67, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S15, S14, S13, S12, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S9, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, 0x20, V220, V221, V220, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, V223]
Stack pops: 6
Stack additions: [V229]
Exit stack: [V11, 0x165, V64, V67, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S15, S14, S13, S12, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S9, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, V229]

================================

Block 0x2ea
[0x2ea:0x2f2]
---
Predecessors: [0x2df]
Successors: []
---
0x2ea RETURNDATASIZE
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee RETURNDATACOPY
0x2ef RETURNDATASIZE
0x2f0 PUSH1 0x0
0x2f2 REVERT
---
0x2ea: V232 = RETURNDATASIZE
0x2eb: V233 = 0x0
0x2ee: RETURNDATACOPY 0x0 0x0 V232
0x2ef: V234 = RETURNDATASIZE
0x2f0: V235 = 0x0
0x2f2: REVERT 0x0 V234
---
Entry stack: [V11, 0x165, V64, V67, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S10, S9, S8, S7, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S4, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S10, S9, S8, S7, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S4, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, V229]

================================

Block 0x2f3
[0x2f3:0x304]
---
Predecessors: [0x2df]
Successors: [0x305, 0x309]
---
0x2f3 JUMPDEST
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb RETURNDATASIZE
0x2fc PUSH1 0x20
0x2fe DUP2
0x2ff LT
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2f3: JUMPDEST 
0x2f8: V236 = 0x40
0x2fa: V237 = M[0x40]
0x2fb: V238 = RETURNDATASIZE
0x2fc: V239 = 0x20
0x2ff: V240 = LT V238 0x20
0x300: V241 = ISZERO V240
0x301: V242 = 0x309
0x304: JUMPI 0x309 V241
---
Entry stack: [V11, 0x165, V64, V67, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S10, S9, S8, S7, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S4, 0xe72ad2a335ae18e6c7cdb6daeb64b0330883cd56, 0x8da5cb5b, V217, V229]
Stack pops: 4
Stack additions: [V237, V238]
Exit stack: [V11, 0x165, V64, V67, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S10, S9, S8, S7, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S4, V237, V238]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2f3]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V243 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, S7, S6, S5, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S2, V237, V238]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, S7, S6, S5, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S2, V237, V238]

================================

Block 0x309
[0x309:0x379]
---
Predecessors: [0x2f3]
Successors: [0x37a, 0x37e]
---
0x309 JUMPDEST
0x30a POP
0x30b MLOAD
0x30c PUSH1 0x40
0x30e DUP1
0x30f MLOAD
0x310 PUSH1 0xe0
0x312 PUSH1 0x2
0x314 EXP
0x315 PUSH4 0xffffffff
0x31a DUP13
0x31b AND
0x31c MUL
0x31d DUP2
0x31e MSTORE
0x31f PUSH1 0x1
0x321 PUSH1 0xa0
0x323 PUSH1 0x2
0x325 EXP
0x326 SUB
0x327 SWAP9
0x328 DUP10
0x329 AND
0x32a PUSH1 0x4
0x32c DUP3
0x32d ADD
0x32e MSTORE
0x32f PUSH1 0x24
0x331 DUP2
0x332 ADD
0x333 SWAP8
0x334 SWAP1
0x335 SWAP8
0x336 MSTORE
0x337 SWAP5
0x338 DUP8
0x339 AND
0x33a PUSH1 0x44
0x33c DUP8
0x33d ADD
0x33e MSTORE
0x33f SWAP3
0x340 DUP7
0x341 AND
0x342 PUSH1 0x64
0x344 DUP7
0x345 ADD
0x346 MSTORE
0x347 PUSH1 0x84
0x349 DUP6
0x34a ADD
0x34b SWAP2
0x34c SWAP1
0x34d SWAP2
0x34e MSTORE
0x34f PUSH1 0xa4
0x351 DUP5
0x352 ADD
0x353 MSTORE
0x354 SWAP3
0x355 SWAP1
0x356 SWAP3
0x357 AND
0x358 PUSH1 0xc4
0x35a DUP3
0x35b ADD
0x35c MSTORE
0x35d SWAP1
0x35e MLOAD
0x35f PUSH1 0xe4
0x361 DUP1
0x362 DUP4
0x363 ADD
0x364 SWAP3
0x365 PUSH1 0x20
0x367 SWAP3
0x368 SWAP2
0x369 SWAP1
0x36a DUP3
0x36b SWAP1
0x36c SUB
0x36d ADD
0x36e DUP2
0x36f DUP6
0x370 DUP9
0x371 DUP1
0x372 EXTCODESIZE
0x373 ISZERO
0x374 DUP1
0x375 ISZERO
0x376 PUSH2 0x37e
0x379 JUMPI
---
0x309: JUMPDEST 
0x30b: V244 = M[V237]
0x30c: V245 = 0x40
0x30f: V246 = M[0x40]
0x310: V247 = 0xe0
0x312: V248 = 0x2
0x314: V249 = EXP 0x2 0xe0
0x315: V250 = 0xffffffff
0x31b: V251 = AND 0xcb3c28c7 0xffffffff
0x31c: V252 = MUL 0xcb3c28c7 0x100000000000000000000000000000000000000000000000000000000
0x31e: M[V246] = 0xcb3c28c700000000000000000000000000000000000000000000000000000000
0x31f: V253 = 0x1
0x321: V254 = 0xa0
0x323: V255 = 0x2
0x325: V256 = EXP 0x2 0xa0
0x326: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x32a: V259 = 0x4
0x32d: V260 = ADD V246 0x4
0x32e: M[V260] = V258
0x32f: V261 = 0x24
0x332: V262 = ADD V246 0x24
0x336: M[V262] = S6
0x339: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x33a: V264 = 0x44
0x33d: V265 = ADD V246 0x44
0x33e: M[V265] = V263
0x341: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x342: V267 = 0x64
0x345: V268 = ADD V246 0x64
0x346: M[V268] = V266
0x347: V269 = 0x84
0x34a: V270 = ADD V246 0x84
0x34e: M[V270] = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x34f: V271 = 0xa4
0x352: V272 = ADD V246 0xa4
0x353: M[V272] = S2
0x357: V273 = AND V244 0xffffffffffffffffffffffffffffffffffffffff
0x358: V274 = 0xc4
0x35b: V275 = ADD V246 0xc4
0x35c: M[V275] = V273
0x35e: V276 = M[0x40]
0x35f: V277 = 0xe4
0x363: V278 = ADD V246 0xe4
0x365: V279 = 0x20
0x36c: V280 = SUB V246 V276
0x36d: V281 = ADD V280 0xe4
0x372: V282 = EXTCODESIZE 0x818e6fecd516ecc3849daf6845e3ec868087b755
0x373: V283 = ISZERO V282
0x375: V284 = ISZERO V283
0x376: V285 = 0x37e
0x379: JUMPI 0x37e V284
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, S7, S6, S5, V197, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, S2, V237, V238]
Stack pops: 11
Stack additions: [S10, S9, S8, V278, 0x20, V276, V281, V276, S8, S10, V283]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, V278, 0x20, V276, V281, V276, S8, 0x818e6fecd516ecc3849daf6845e3ec868087b755, V283]

================================

Block 0x37a
[0x37a:0x37d]
---
Predecessors: [0x309]
Successors: []
---
0x37a PUSH1 0x0
0x37c DUP1
0x37d REVERT
---
0x37a: V286 = 0x0
0x37d: REVERT 0x0 0x0
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, V278, 0x20, V276, V281, V276, S2, 0x818e6fecd516ecc3849daf6845e3ec868087b755, V283]
Stack pops: 0
Stack additions: []
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, V278, 0x20, V276, V281, V276, S2, 0x818e6fecd516ecc3849daf6845e3ec868087b755, V283]

================================

Block 0x37e
[0x37e:0x388]
---
Predecessors: [0x309]
Successors: [0x389, 0x392]
---
0x37e JUMPDEST
0x37f POP
0x380 GAS
0x381 CALL
0x382 ISZERO
0x383 DUP1
0x384 ISZERO
0x385 PUSH2 0x392
0x388 JUMPI
---
0x37e: JUMPDEST 
0x380: V287 = GAS
0x381: V288 = CALL V287 0x818e6fecd516ecc3849daf6845e3ec868087b755 S2 V276 V281 V276 0x20
0x382: V289 = ISZERO V288
0x384: V290 = ISZERO V289
0x385: V291 = 0x392
0x388: JUMPI 0x392 V290
---
Entry stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, V278, 0x20, V276, V281, V276, S2, 0x818e6fecd516ecc3849daf6845e3ec868087b755, V283]
Stack pops: 7
Stack additions: [V289]
Exit stack: [S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S8, V278, V289]

================================

Block 0x389
[0x389:0x391]
---
Predecessors: [0x37e]
Successors: []
---
0x389 RETURNDATASIZE
0x38a PUSH1 0x0
0x38c DUP1
0x38d RETURNDATACOPY
0x38e RETURNDATASIZE
0x38f PUSH1 0x0
0x391 REVERT
---
0x389: V292 = RETURNDATASIZE
0x38a: V293 = 0x0
0x38d: RETURNDATACOPY 0x0 0x0 V292
0x38e: V294 = RETURNDATASIZE
0x38f: V295 = 0x0
0x391: REVERT 0x0 V294
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S2, V278, V289]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S2, V278, V289]

================================

Block 0x392
[0x392:0x3a4]
---
Predecessors: [0x37e]
Successors: [0x3a5, 0x3a9]
---
0x392 JUMPDEST
0x393 POP
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b RETURNDATASIZE
0x39c PUSH1 0x20
0x39e DUP2
0x39f LT
0x3a0 ISZERO
0x3a1 PUSH2 0x3a9
0x3a4 JUMPI
---
0x392: JUMPDEST 
0x398: V296 = 0x40
0x39a: V297 = M[0x40]
0x39b: V298 = RETURNDATASIZE
0x39c: V299 = 0x20
0x39f: V300 = LT V298 0x20
0x3a0: V301 = ISZERO V300
0x3a1: V302 = 0x3a9
0x3a4: JUMPI 0x3a9 V301
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x818e6fecd516ecc3849daf6845e3ec868087b755, 0xcb3c28c7, S2, V278, V289]
Stack pops: 5
Stack additions: [V297, V298]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, V297, V298]

================================

Block 0x3a5
[0x3a5:0x3a8]
---
Predecessors: [0x392]
Successors: []
---
0x3a5 PUSH1 0x0
0x3a7 DUP1
0x3a8 REVERT
---
0x3a5: V303 = 0x0
0x3a8: REVERT 0x0 0x0
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V297, V298]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V297, V298]

================================

Block 0x3a9
[0x3a9:0x3b5]
---
Predecessors: [0x392]
Successors: [0x3b6, 0x3ba]
---
0x3a9 JUMPDEST
0x3aa POP
0x3ab MLOAD
0x3ac SWAP1
0x3ad POP
0x3ae DUP5
0x3af DUP2
0x3b0 LT
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3a9: JUMPDEST 
0x3ab: V304 = M[V297]
0x3b0: V305 = LT V304 S6
0x3b1: V306 = ISZERO V305
0x3b2: V307 = 0x3ba
0x3b5: JUMPI 0x3ba V306
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V297, V298]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V304]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V304]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3a9]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V308 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V304]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V304]

================================

Block 0x3ba
[0x3ba:0x3de]
---
Predecessors: [0x3a9]
Successors: [0x3df, 0x3f8]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 DUP9
0x3c4 AND
0x3c5 PUSH20 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x3da EQ
0x3db PUSH2 0x3f8
0x3de JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V309 = 0x1
0x3bd: V310 = 0xa0
0x3bf: V311 = 0x2
0x3c1: V312 = EXP 0x2 0xa0
0x3c2: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c4: V314 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x3c5: V315 = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x3da: V316 = EQ 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee V314
0x3db: V317 = 0x3f8
0x3de: JUMPI 0x3f8 V316
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V304]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V304]

================================

Block 0x3df
[0x3df:0x3f7]
---
Predecessors: [0x3ba]
Successors: [0x654]
---
0x3df PUSH2 0x3f8
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0xa0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 SUB
0x3ea DUP10
0x3eb AND
0x3ec DUP9
0x3ed DUP4
0x3ee PUSH4 0xffffffff
0x3f3 PUSH2 0x654
0x3f6 AND
0x3f7 JUMP
---
0x3df: V318 = 0x3f8
0x3e2: V319 = 0x1
0x3e4: V320 = 0xa0
0x3e6: V321 = 0x2
0x3e8: V322 = EXP 0x2 0xa0
0x3e9: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3eb: V324 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x3ee: V325 = 0xffffffff
0x3f3: V326 = 0x654
0x3f6: V327 = AND 0x654 0xffffffff
0x3f7: JUMP 0x654
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V304]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x3f8, V324, S6, S0]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V304, 0x3f8, V324, S6, V304]

================================

Block 0x3f8
[0x3f8:0x422]
---
Predecessors: [0x3ba, 0x77e]
Successors: [0x423, 0x429]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x0
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 DUP1
0x404 DUP10
0x405 AND
0x406 SWAP1
0x407 DUP11
0x408 AND
0x409 PUSH20 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x41e EQ
0x41f PUSH2 0x429
0x422 JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V328 = 0x0
0x3fb: V329 = 0x1
0x3fd: V330 = 0xa0
0x3ff: V331 = 0x2
0x401: V332 = EXP 0x2 0xa0
0x402: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x405: V334 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x408: V335 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x409: V336 = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
0x41e: V337 = EQ 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee V335
0x41f: V338 = 0x429
0x422: JUMPI 0x429 V337
---
Entry stack: [V11, 0x165, V64, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V334]
Exit stack: [V11, 0x165, V64, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V334]

================================

Block 0x423
[0x423:0x428]
---
Predecessors: [0x3f8]
Successors: [0x42b]
---
0x423 PUSH1 0x0
0x425 PUSH2 0x42b
0x428 JUMP
---
0x423: V339 = 0x0
0x425: V340 = 0x42b
0x428: JUMP 0x42b
---
Entry stack: [V11, 0x165, V64, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V334]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x165, V64, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V334, 0x0]

================================

Block 0x429
[0x429:0x42a]
---
Predecessors: [0x3f8]
Successors: [0x42b]
---
0x429 JUMPDEST
0x42a DUP3
---
0x429: JUMPDEST 
---
Entry stack: [V11, 0x165, V64, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V334]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V11, 0x165, V64, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V334, S2]

================================

Block 0x42b
[0x42b:0x43b]
---
Predecessors: [0x423, 0x429]
Successors: [0x43c]
---
0x42b JUMPDEST
0x42c DUP7
0x42d PUSH1 0x40
0x42f MLOAD
0x430 DUP1
0x431 DUP3
0x432 DUP1
0x433 MLOAD
0x434 SWAP1
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP1
0x439 DUP1
0x43a DUP4
0x43b DUP4
---
0x42b: JUMPDEST 
0x42d: V341 = 0x40
0x42f: V342 = M[0x40]
0x433: V343 = M[S6]
0x435: V344 = 0x20
0x437: V345 = ADD 0x20 S6
---
Entry stack: [V11, 0x165, V64, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V334, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, V342, V342, V345, V343, V343, V342, V345]
Exit stack: [V11, 0x165, V64, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V334, S0, S6, V342, V342, V345, V343, V343, V342, V345]

================================

Block 0x43c
[0x43c:0x444]
---
Predecessors: [0x42b, 0x445]
Successors: [0x445, 0x45b]
---
0x43c JUMPDEST
0x43d PUSH1 0x20
0x43f DUP4
0x440 LT
0x441 PUSH2 0x45b
0x444 JUMPI
---
0x43c: JUMPDEST 
0x43d: V346 = 0x20
0x440: V347 = LT S2 0x20
0x441: V348 = 0x45b
0x444: JUMPI 0x45b V347
---
Entry stack: [V11, 0x165, V64, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V334, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x165, V64, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V334, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x445
[0x445:0x45a]
---
Predecessors: [0x43c]
Successors: [0x43c]
---
0x445 DUP1
0x446 MLOAD
0x447 DUP3
0x448 MSTORE
0x449 PUSH1 0x1f
0x44b NOT
0x44c SWAP1
0x44d SWAP3
0x44e ADD
0x44f SWAP2
0x450 PUSH1 0x20
0x452 SWAP2
0x453 DUP3
0x454 ADD
0x455 SWAP2
0x456 ADD
0x457 PUSH2 0x43c
0x45a JUMP
---
0x446: V349 = M[S0]
0x448: M[S1] = V349
0x449: V350 = 0x1f
0x44b: V351 = NOT 0x1f
0x44e: V352 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x450: V353 = 0x20
0x454: V354 = ADD 0x20 S1
0x456: V355 = ADD 0x20 S0
0x457: V356 = 0x43c
0x45a: JUMP 0x43c
---
Entry stack: [V11, 0x165, V64, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V334, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V352, V354, V355]
Exit stack: [V11, 0x165, V64, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V334, S8, S7, S6, S5, S4, S3, V352, V354, V355]

================================

Block 0x45b
[0x45b:0x49b]
---
Predecessors: [0x43c]
Successors: [0x49c, 0x4bd]
---
0x45b JUMPDEST
0x45c PUSH1 0x1
0x45e DUP4
0x45f PUSH1 0x20
0x461 SUB
0x462 PUSH2 0x100
0x465 EXP
0x466 SUB
0x467 DUP1
0x468 NOT
0x469 DUP3
0x46a MLOAD
0x46b AND
0x46c DUP2
0x46d DUP5
0x46e MLOAD
0x46f AND
0x470 DUP1
0x471 DUP3
0x472 OR
0x473 DUP6
0x474 MSTORE
0x475 POP
0x476 POP
0x477 POP
0x478 POP
0x479 POP
0x47a POP
0x47b SWAP1
0x47c POP
0x47d ADD
0x47e SWAP2
0x47f POP
0x480 POP
0x481 PUSH1 0x0
0x483 PUSH1 0x40
0x485 MLOAD
0x486 DUP1
0x487 DUP4
0x488 SUB
0x489 DUP2
0x48a DUP6
0x48b DUP8
0x48c GAS
0x48d CALL
0x48e SWAP3
0x48f POP
0x490 POP
0x491 POP
0x492 RETURNDATASIZE
0x493 DUP1
0x494 PUSH1 0x0
0x496 DUP2
0x497 EQ
0x498 PUSH2 0x4bd
0x49b JUMPI
---
0x45b: JUMPDEST 
0x45c: V357 = 0x1
0x45f: V358 = 0x20
0x461: V359 = SUB 0x20 S2
0x462: V360 = 0x100
0x465: V361 = EXP 0x100 V359
0x466: V362 = SUB V361 0x1
0x468: V363 = NOT V362
0x46a: V364 = M[S0]
0x46b: V365 = AND V364 V363
0x46e: V366 = M[S1]
0x46f: V367 = AND V366 V362
0x472: V368 = OR V365 V367
0x474: M[S1] = V368
0x47d: V369 = ADD S3 S5
0x481: V370 = 0x0
0x483: V371 = 0x40
0x485: V372 = M[0x40]
0x488: V373 = SUB V369 V372
0x48c: V374 = GAS
0x48d: V375 = CALL V374 V334 S8 V372 V373 V372 0x0
0x492: V376 = RETURNDATASIZE
0x494: V377 = 0x0
0x497: V378 = EQ V376 0x0
0x498: V379 = 0x4bd
0x49b: JUMPI 0x4bd V378
---
Entry stack: [V11, 0x165, V64, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V334, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [V375, V376, V376]
Exit stack: [V11, 0x165, V64, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V375, V376, V376]

================================

Block 0x49c
[0x49c:0x4bc]
---
Predecessors: [0x45b]
Successors: [0x4c2]
---
0x49c PUSH1 0x40
0x49e MLOAD
0x49f SWAP2
0x4a0 POP
0x4a1 PUSH1 0x1f
0x4a3 NOT
0x4a4 PUSH1 0x3f
0x4a6 RETURNDATASIZE
0x4a7 ADD
0x4a8 AND
0x4a9 DUP3
0x4aa ADD
0x4ab PUSH1 0x40
0x4ad MSTORE
0x4ae RETURNDATASIZE
0x4af DUP3
0x4b0 MSTORE
0x4b1 RETURNDATASIZE
0x4b2 PUSH1 0x0
0x4b4 PUSH1 0x20
0x4b6 DUP5
0x4b7 ADD
0x4b8 RETURNDATACOPY
0x4b9 PUSH2 0x4c2
0x4bc JUMP
---
0x49c: V380 = 0x40
0x49e: V381 = M[0x40]
0x4a1: V382 = 0x1f
0x4a3: V383 = NOT 0x1f
0x4a4: V384 = 0x3f
0x4a6: V385 = RETURNDATASIZE
0x4a7: V386 = ADD V385 0x3f
0x4a8: V387 = AND V386 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4aa: V388 = ADD V381 V387
0x4ab: V389 = 0x40
0x4ad: M[0x40] = V388
0x4ae: V390 = RETURNDATASIZE
0x4b0: M[V381] = V390
0x4b1: V391 = RETURNDATASIZE
0x4b2: V392 = 0x0
0x4b4: V393 = 0x20
0x4b7: V394 = ADD V381 0x20
0x4b8: RETURNDATACOPY V394 0x0 V391
0x4b9: V395 = 0x4c2
0x4bc: JUMP 0x4c2
---
Entry stack: [V11, 0x165, V64, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V375, V376, V376]
Stack pops: 2
Stack additions: [V381, S0]
Exit stack: [V11, 0x165, V64, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V375, V381, V376]

================================

Block 0x4bd
[0x4bd:0x4c1]
---
Predecessors: [0x45b]
Successors: [0x4c2]
---
0x4bd JUMPDEST
0x4be PUSH1 0x60
0x4c0 SWAP2
0x4c1 POP
---
0x4bd: JUMPDEST 
0x4be: V396 = 0x60
---
Entry stack: [V11, 0x165, V64, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V375, V376, V376]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V11, 0x165, V64, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, V375, 0x60, V376]

================================

Block 0x4c2
[0x4c2:0x4cd]
---
Predecessors: [0x49c, 0x4bd]
Successors: [0x4ce, 0x534]
---
0x4c2 JUMPDEST
0x4c3 POP
0x4c4 POP
0x4c5 SWAP1
0x4c6 POP
0x4c7 DUP1
0x4c8 ISZERO
0x4c9 ISZERO
0x4ca PUSH2 0x534
0x4cd JUMPI
---
0x4c2: JUMPDEST 
0x4c8: V397 = ISZERO S2
0x4c9: V398 = ISZERO V397
0x4ca: V399 = 0x534
0x4cd: JUMPI 0x534 V398
---
Entry stack: [V11, 0x165, V64, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V11, 0x165, V64, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S2]

================================

Block 0x4ce
[0x4ce:0x533]
---
Predecessors: [0x4c2]
Successors: []
---
0x4ce PUSH1 0x40
0x4d0 DUP1
0x4d1 MLOAD
0x4d2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4f3 DUP2
0x4f4 MSTORE
0x4f5 PUSH1 0x20
0x4f7 PUSH1 0x4
0x4f9 DUP3
0x4fa ADD
0x4fb MSTORE
0x4fc PUSH1 0x10
0x4fe PUSH1 0x24
0x500 DUP3
0x501 ADD
0x502 MSTORE
0x503 PUSH32 0x646573742063616c6c206661696c656400000000000000000000000000000000
0x524 PUSH1 0x44
0x526 DUP3
0x527 ADD
0x528 MSTORE
0x529 SWAP1
0x52a MLOAD
0x52b SWAP1
0x52c DUP2
0x52d SWAP1
0x52e SUB
0x52f PUSH1 0x64
0x531 ADD
0x532 SWAP1
0x533 REVERT
---
0x4ce: V400 = 0x40
0x4d1: V401 = M[0x40]
0x4d2: V402 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4f4: M[V401] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4f5: V403 = 0x20
0x4f7: V404 = 0x4
0x4fa: V405 = ADD V401 0x4
0x4fb: M[V405] = 0x20
0x4fc: V406 = 0x10
0x4fe: V407 = 0x24
0x501: V408 = ADD V401 0x24
0x502: M[V408] = 0x10
0x503: V409 = 0x646573742063616c6c206661696c656400000000000000000000000000000000
0x524: V410 = 0x44
0x527: V411 = ADD V401 0x44
0x528: M[V411] = 0x646573742063616c6c206661696c656400000000000000000000000000000000
0x52a: V412 = M[0x40]
0x52e: V413 = SUB V401 V412
0x52f: V414 = 0x64
0x531: V415 = ADD 0x64 V413
0x533: REVERT V412 V415
---
Entry stack: [V11, 0x165, V64, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x534
[0x534:0x59d]
---
Predecessors: [0x4c2]
Successors: [0x59e, 0x5a2]
---
0x534 JUMPDEST
0x535 DUP8
0x536 PUSH1 0x1
0x538 PUSH1 0xa0
0x53a PUSH1 0x2
0x53c EXP
0x53d SUB
0x53e AND
0x53f DUP10
0x540 PUSH1 0x1
0x542 PUSH1 0xa0
0x544 PUSH1 0x2
0x546 EXP
0x547 SUB
0x548 AND
0x549 DUP13
0x54a PUSH1 0x1
0x54c PUSH1 0xa0
0x54e PUSH1 0x2
0x550 EXP
0x551 SUB
0x552 AND
0x553 PUSH32 0xa72ae8236e17963d4f13d3a1b9d6aa306cd7b6f00197e6fd51e540513500c8ce
0x574 DUP14
0x575 DUP7
0x576 PUSH1 0x40
0x578 MLOAD
0x579 DUP1
0x57a DUP4
0x57b DUP2
0x57c MSTORE
0x57d PUSH1 0x20
0x57f ADD
0x580 DUP3
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x20
0x585 ADD
0x586 SWAP3
0x587 POP
0x588 POP
0x589 POP
0x58a PUSH1 0x40
0x58c MLOAD
0x58d DUP1
0x58e SWAP2
0x58f SUB
0x590 SWAP1
0x591 LOG4
0x592 POP
0x593 SWAP2
0x594 POP
0x595 PUSH1 0x0
0x597 SLOAD
0x598 DUP2
0x599 EQ
0x59a PUSH2 0x5a2
0x59d JUMPI
---
0x534: JUMPDEST 
0x536: V416 = 0x1
0x538: V417 = 0xa0
0x53a: V418 = 0x2
0x53c: V419 = EXP 0x2 0xa0
0x53d: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x540: V422 = 0x1
0x542: V423 = 0xa0
0x544: V424 = 0x2
0x546: V425 = EXP 0x2 0xa0
0x547: V426 = SUB 0x10000000000000000000000000000000000000000 0x1
0x548: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x54a: V428 = 0x1
0x54c: V429 = 0xa0
0x54e: V430 = 0x2
0x550: V431 = EXP 0x2 0xa0
0x551: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x552: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x553: V434 = 0xa72ae8236e17963d4f13d3a1b9d6aa306cd7b6f00197e6fd51e540513500c8ce
0x576: V435 = 0x40
0x578: V436 = M[0x40]
0x57c: M[V436] = S9
0x57d: V437 = 0x20
0x57f: V438 = ADD 0x20 V436
0x582: M[V438] = S1
0x583: V439 = 0x20
0x585: V440 = ADD 0x20 V438
0x58a: V441 = 0x40
0x58c: V442 = M[0x40]
0x58f: V443 = SUB V440 V442
0x591: LOG V442 V443 0xa72ae8236e17963d4f13d3a1b9d6aa306cd7b6f00197e6fd51e540513500c8ce V433 V427 V421
0x595: V444 = 0x0
0x597: V445 = S[0x0]
0x599: V446 = EQ S2 V445
0x59a: V447 = 0x5a2
0x59d: JUMPI 0x5a2 V446
---
Entry stack: [V11, 0x165, V64, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S1, S2]
Exit stack: [V11, 0x165, V64, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S1, S2]

================================

Block 0x59e
[0x59e:0x5a1]
---
Predecessors: [0x534]
Successors: []
---
0x59e PUSH1 0x0
0x5a0 DUP1
0x5a1 REVERT
---
0x59e: V448 = 0x0
0x5a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5a2
[0x5a2:0x5ad]
---
Predecessors: [0x534]
Successors: [0x165]
---
0x5a2 JUMPDEST
0x5a3 POP
0x5a4 SWAP8
0x5a5 SWAP7
0x5a6 POP
0x5a7 POP
0x5a8 POP
0x5a9 POP
0x5aa POP
0x5ab POP
0x5ac POP
0x5ad JUMP
---
0x5a2: JUMPDEST 
0x5ad: JUMP S9
---
Entry stack: [V11, 0x165, V64, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S1]
Exit stack: [V11, 0x165, V64, S11, S10, S1]

================================

Block 0x5ae
[0x5ae:0x5c5]
---
Predecessors: [0x183]
Successors: [0x5c]
---
0x5ae JUMPDEST
0x5af PUSH20 0x818e6fecd516ecc3849daf6845e3ec868087b755
0x5c4 DUP2
0x5c5 JUMP
---
0x5ae: JUMPDEST 
0x5af: V449 = 0x818e6fecd516ecc3849daf6845e3ec868087b755
0x5c5: JUMP 0x5c
---
Entry stack: [V11, 0x5c]
Stack pops: 1
Stack additions: [S0, 0x818e6fecd516ecc3849daf6845e3ec868087b755]
Exit stack: [V11, 0x5c, 0x818e6fecd516ecc3849daf6845e3ec868087b755]

================================

Block 0x5c6
[0x5c6:0x64d]
---
Predecessors: [0x1f5]
Successors: [0x783]
---
0x5c6 JUMPDEST
0x5c7 PUSH1 0x40
0x5c9 DUP1
0x5ca MLOAD
0x5cb PUSH1 0x1
0x5cd PUSH1 0xa0
0x5cf PUSH1 0x2
0x5d1 EXP
0x5d2 SUB
0x5d3 DUP6
0x5d4 DUP2
0x5d5 AND
0x5d6 PUSH1 0x24
0x5d8 DUP4
0x5d9 ADD
0x5da MSTORE
0x5db DUP5
0x5dc AND
0x5dd PUSH1 0x44
0x5df DUP3
0x5e0 ADD
0x5e1 MSTORE
0x5e2 PUSH1 0x64
0x5e4 DUP1
0x5e5 DUP3
0x5e6 ADD
0x5e7 DUP5
0x5e8 SWAP1
0x5e9 MSTORE
0x5ea DUP3
0x5eb MLOAD
0x5ec DUP1
0x5ed DUP4
0x5ee SUB
0x5ef SWAP1
0x5f0 SWAP2
0x5f1 ADD
0x5f2 DUP2
0x5f3 MSTORE
0x5f4 PUSH1 0x84
0x5f6 SWAP1
0x5f7 SWAP2
0x5f8 ADD
0x5f9 SWAP1
0x5fa SWAP2
0x5fb MSTORE
0x5fc PUSH1 0x20
0x5fe DUP2
0x5ff ADD
0x600 DUP1
0x601 MLOAD
0x602 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x61f AND
0x620 PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x641 OR
0x642 SWAP1
0x643 MSTORE
0x644 PUSH2 0x64e
0x647 SWAP1
0x648 DUP6
0x649 SWAP1
0x64a PUSH2 0x783
0x64d JUMP
---
0x5c6: JUMPDEST 
0x5c7: V450 = 0x40
0x5ca: V451 = M[0x40]
0x5cb: V452 = 0x1
0x5cd: V453 = 0xa0
0x5cf: V454 = 0x2
0x5d1: V455 = EXP 0x2 0xa0
0x5d2: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d5: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x5d6: V458 = 0x24
0x5d9: V459 = ADD V451 0x24
0x5da: M[V459] = V457
0x5dc: V460 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V461 = 0x44
0x5e0: V462 = ADD V451 0x44
0x5e1: M[V462] = V460
0x5e2: V463 = 0x64
0x5e6: V464 = ADD V451 0x64
0x5e9: M[V464] = V67
0x5eb: V465 = M[0x40]
0x5ee: V466 = SUB V451 V465
0x5f1: V467 = ADD 0x64 V466
0x5f3: M[V465] = V467
0x5f4: V468 = 0x84
0x5f8: V469 = ADD V451 0x84
0x5fb: M[0x40] = V469
0x5fc: V470 = 0x20
0x5ff: V471 = ADD V465 0x20
0x601: V472 = M[V471]
0x602: V473 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x61f: V474 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff V472
0x620: V475 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x641: V476 = OR 0x23b872dd00000000000000000000000000000000000000000000000000000000 V474
0x643: M[V471] = V476
0x644: V477 = 0x64e
0x64a: V478 = 0x783
0x64d: JUMP 0x783
---
Entry stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146, 0x210, V166, V167, V168, V67]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x64e, S3, V465]
Exit stack: [V11, 0x165, V64, V67, V71, V75, V78, V81, V121, 0x0, V146, 0x210, V166, V167, V168, V67, 0x64e, V166, V465]

================================

Block 0x64e
[0x64e:0x653]
---
Predecessors: [0x64e, 0x856, 0x875]
Successors: [0x165, 0x210, 0x64e, 0x77e]
---
0x64e JUMPDEST
0x64f POP
0x650 POP
0x651 POP
0x652 POP
0x653 JUMP
---
0x64e: JUMPDEST 
0x653: JUMP S4
---
Entry stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0x654
[0x654:0x65b]
---
Predecessors: [0x210, 0x3df]
Successors: [0x65c, 0x6f3]
---
0x654 JUMPDEST
0x655 DUP1
0x656 ISZERO
0x657 DUP1
0x658 PUSH2 0x6f3
0x65b JUMPI
---
0x654: JUMPDEST 
0x656: V479 = ISZERO S0
0x658: V480 = 0x6f3
0x65b: JUMPI 0x6f3 V479
---
Entry stack: [V11, 0x165, V64, V67, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x23e, 0x3f8}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V479]
Exit stack: [V11, 0x165, V64, V67, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x23e, 0x3f8}, S2, S1, S0, V479]

================================

Block 0x65c
[0x65c:0x6c0]
---
Predecessors: [0x654]
Successors: [0x6c1, 0x6c5]
---
0x65c POP
0x65d PUSH1 0x40
0x65f DUP1
0x660 MLOAD
0x661 PUSH32 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x682 DUP2
0x683 MSTORE
0x684 ADDRESS
0x685 PUSH1 0x4
0x687 DUP3
0x688 ADD
0x689 MSTORE
0x68a PUSH1 0x1
0x68c PUSH1 0xa0
0x68e PUSH1 0x2
0x690 EXP
0x691 SUB
0x692 DUP5
0x693 DUP2
0x694 AND
0x695 PUSH1 0x24
0x697 DUP4
0x698 ADD
0x699 MSTORE
0x69a SWAP2
0x69b MLOAD
0x69c SWAP2
0x69d DUP6
0x69e AND
0x69f SWAP2
0x6a0 PUSH4 0xdd62ed3e
0x6a5 SWAP2
0x6a6 PUSH1 0x44
0x6a8 DUP1
0x6a9 DUP3
0x6aa ADD
0x6ab SWAP3
0x6ac PUSH1 0x20
0x6ae SWAP3
0x6af SWAP1
0x6b0 SWAP2
0x6b1 SWAP1
0x6b2 DUP3
0x6b3 SWAP1
0x6b4 SUB
0x6b5 ADD
0x6b6 DUP2
0x6b7 DUP7
0x6b8 DUP1
0x6b9 EXTCODESIZE
0x6ba ISZERO
0x6bb DUP1
0x6bc ISZERO
0x6bd PUSH2 0x6c5
0x6c0 JUMPI
---
0x65d: V481 = 0x40
0x660: V482 = M[0x40]
0x661: V483 = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x683: M[V482] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x684: V484 = ADDRESS
0x685: V485 = 0x4
0x688: V486 = ADD V482 0x4
0x689: M[V486] = V484
0x68a: V487 = 0x1
0x68c: V488 = 0xa0
0x68e: V489 = 0x2
0x690: V490 = EXP 0x2 0xa0
0x691: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x694: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x695: V493 = 0x24
0x698: V494 = ADD V482 0x24
0x699: M[V494] = V492
0x69b: V495 = M[0x40]
0x69e: V496 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V497 = 0xdd62ed3e
0x6a6: V498 = 0x44
0x6aa: V499 = ADD V482 0x44
0x6ac: V500 = 0x20
0x6b4: V501 = SUB V482 V495
0x6b5: V502 = ADD V501 0x44
0x6b9: V503 = EXTCODESIZE V496
0x6ba: V504 = ISZERO V503
0x6bc: V505 = ISZERO V504
0x6bd: V506 = 0x6c5
0x6c0: JUMPI 0x6c5 V505
---
Entry stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x23e, 0x3f8}, S3, S2, S1, V479]
Stack pops: 4
Stack additions: [S3, S2, S1, V496, 0xdd62ed3e, V499, 0x20, V495, V502, V495, V496, V504]
Exit stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x23e, 0x3f8}, S3, S2, S1, V496, 0xdd62ed3e, V499, 0x20, V495, V502, V495, V496, V504]

================================

Block 0x6c1
[0x6c1:0x6c4]
---
Predecessors: [0x65c]
Successors: []
---
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 REVERT
---
0x6c1: V507 = 0x0
0x6c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x23e, 0x3f8}, S11, S10, S9, V496, 0xdd62ed3e, V499, 0x20, V495, V502, V495, V496, V504]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x23e, 0x3f8}, S11, S10, S9, V496, 0xdd62ed3e, V499, 0x20, V495, V502, V495, V496, V504]

================================

Block 0x6c5
[0x6c5:0x6cf]
---
Predecessors: [0x65c]
Successors: [0x6d0, 0x6d9]
---
0x6c5 JUMPDEST
0x6c6 POP
0x6c7 GAS
0x6c8 STATICCALL
0x6c9 ISZERO
0x6ca DUP1
0x6cb ISZERO
0x6cc PUSH2 0x6d9
0x6cf JUMPI
---
0x6c5: JUMPDEST 
0x6c7: V508 = GAS
0x6c8: V509 = STATICCALL V508 V496 V495 V502 V495 0x20
0x6c9: V510 = ISZERO V509
0x6cb: V511 = ISZERO V510
0x6cc: V512 = 0x6d9
0x6cf: JUMPI 0x6d9 V511
---
Entry stack: [V11, 0x165, V64, V67, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x23e, 0x3f8}, S11, S10, S9, V496, 0xdd62ed3e, V499, 0x20, V495, V502, V495, V496, V504]
Stack pops: 6
Stack additions: [V510]
Exit stack: [V11, 0x165, V64, V67, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x23e, 0x3f8}, S11, S10, S9, V496, 0xdd62ed3e, V499, V510]

================================

Block 0x6d0
[0x6d0:0x6d8]
---
Predecessors: [0x6c5]
Successors: []
---
0x6d0 RETURNDATASIZE
0x6d1 PUSH1 0x0
0x6d3 DUP1
0x6d4 RETURNDATACOPY
0x6d5 RETURNDATASIZE
0x6d6 PUSH1 0x0
0x6d8 REVERT
---
0x6d0: V513 = RETURNDATASIZE
0x6d1: V514 = 0x0
0x6d4: RETURNDATACOPY 0x0 0x0 V513
0x6d5: V515 = RETURNDATASIZE
0x6d6: V516 = 0x0
0x6d8: REVERT 0x0 V515
---
Entry stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x23e, 0x3f8}, S6, S5, S4, V496, 0xdd62ed3e, V499, V510]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x23e, 0x3f8}, S6, S5, S4, V496, 0xdd62ed3e, V499, V510]

================================

Block 0x6d9
[0x6d9:0x6ea]
---
Predecessors: [0x6c5]
Successors: [0x6eb, 0x6ef]
---
0x6d9 JUMPDEST
0x6da POP
0x6db POP
0x6dc POP
0x6dd POP
0x6de PUSH1 0x40
0x6e0 MLOAD
0x6e1 RETURNDATASIZE
0x6e2 PUSH1 0x20
0x6e4 DUP2
0x6e5 LT
0x6e6 ISZERO
0x6e7 PUSH2 0x6ef
0x6ea JUMPI
---
0x6d9: JUMPDEST 
0x6de: V517 = 0x40
0x6e0: V518 = M[0x40]
0x6e1: V519 = RETURNDATASIZE
0x6e2: V520 = 0x20
0x6e5: V521 = LT V519 0x20
0x6e6: V522 = ISZERO V521
0x6e7: V523 = 0x6ef
0x6ea: JUMPI 0x6ef V522
---
Entry stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x23e, 0x3f8}, S6, S5, S4, V496, 0xdd62ed3e, V499, V510]
Stack pops: 4
Stack additions: [V518, V519]
Exit stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x23e, 0x3f8}, S6, S5, S4, V518, V519]

================================

Block 0x6eb
[0x6eb:0x6ee]
---
Predecessors: [0x6d9]
Successors: []
---
0x6eb PUSH1 0x0
0x6ed DUP1
0x6ee REVERT
---
0x6eb: V524 = 0x0
0x6ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x23e, 0x3f8}, S4, S3, S2, V518, V519]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x23e, 0x3f8}, S4, S3, S2, V518, V519]

================================

Block 0x6ef
[0x6ef:0x6f2]
---
Predecessors: [0x6d9]
Successors: [0x6f3]
---
0x6ef JUMPDEST
0x6f0 POP
0x6f1 MLOAD
0x6f2 ISZERO
---
0x6ef: JUMPDEST 
0x6f1: V525 = M[V518]
0x6f2: V526 = ISZERO V525
---
Entry stack: [V11, 0x165, V64, V67, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x23e, 0x3f8}, S4, S3, S2, V518, V519]
Stack pops: 2
Stack additions: [V526]
Exit stack: [V11, 0x165, V64, V67, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x23e, 0x3f8}, S4, S3, S2, V526]

================================

Block 0x6f3
[0x6f3:0x6f9]
---
Predecessors: [0x654, 0x6ef]
Successors: [0x6fa, 0x6fe]
---
0x6f3 JUMPDEST
0x6f4 ISZERO
0x6f5 ISZERO
0x6f6 PUSH2 0x6fe
0x6f9 JUMPI
---
0x6f3: JUMPDEST 
0x6f4: V527 = ISZERO S0
0x6f5: V528 = ISZERO V527
0x6f6: V529 = 0x6fe
0x6f9: JUMPI 0x6fe V528
---
Entry stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x23e, 0x3f8}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x23e, 0x3f8}, S3, S2, S1]

================================

Block 0x6fa
[0x6fa:0x6fd]
---
Predecessors: [0x6f3]
Successors: []
---
0x6fa PUSH1 0x0
0x6fc DUP1
0x6fd REVERT
---
0x6fa: V530 = 0x0
0x6fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x23e, 0x3f8}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x23e, 0x3f8}, S2, S1, S0]

================================

Block 0x6fe
[0x6fe:0x77d]
---
Predecessors: [0x6f3]
Successors: [0x783]
---
0x6fe JUMPDEST
0x6ff PUSH1 0x40
0x701 DUP1
0x702 MLOAD
0x703 PUSH1 0x1
0x705 PUSH1 0xa0
0x707 PUSH1 0x2
0x709 EXP
0x70a SUB
0x70b DUP5
0x70c AND
0x70d PUSH1 0x24
0x70f DUP3
0x710 ADD
0x711 MSTORE
0x712 PUSH1 0x44
0x714 DUP1
0x715 DUP3
0x716 ADD
0x717 DUP5
0x718 SWAP1
0x719 MSTORE
0x71a DUP3
0x71b MLOAD
0x71c DUP1
0x71d DUP4
0x71e SUB
0x71f SWAP1
0x720 SWAP2
0x721 ADD
0x722 DUP2
0x723 MSTORE
0x724 PUSH1 0x64
0x726 SWAP1
0x727 SWAP2
0x728 ADD
0x729 SWAP1
0x72a SWAP2
0x72b MSTORE
0x72c PUSH1 0x20
0x72e DUP2
0x72f ADD
0x730 DUP1
0x731 MLOAD
0x732 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 PUSH32 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x771 OR
0x772 SWAP1
0x773 MSTORE
0x774 PUSH2 0x77e
0x777 SWAP1
0x778 DUP5
0x779 SWAP1
0x77a PUSH2 0x783
0x77d JUMP
---
0x6fe: JUMPDEST 
0x6ff: V531 = 0x40
0x702: V532 = M[0x40]
0x703: V533 = 0x1
0x705: V534 = 0xa0
0x707: V535 = 0x2
0x709: V536 = EXP 0x2 0xa0
0x70a: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70c: V538 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V539 = 0x24
0x710: V540 = ADD V532 0x24
0x711: M[V540] = V538
0x712: V541 = 0x44
0x716: V542 = ADD V532 0x44
0x719: M[V542] = S0
0x71b: V543 = M[0x40]
0x71e: V544 = SUB V532 V543
0x721: V545 = ADD 0x44 V544
0x723: M[V543] = V545
0x724: V546 = 0x64
0x728: V547 = ADD V532 0x64
0x72b: M[0x40] = V547
0x72c: V548 = 0x20
0x72f: V549 = ADD V543 0x20
0x731: V550 = M[V549]
0x732: V551 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x74f: V552 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff V550
0x750: V553 = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x771: V554 = OR 0x95ea7b300000000000000000000000000000000000000000000000000000000 V552
0x773: M[V549] = V554
0x774: V555 = 0x77e
0x77a: V556 = 0x783
0x77d: JUMP 0x783
---
Entry stack: [V11, 0x165, V64, V67, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x23e, 0x3f8}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x77e, S2, V543]
Exit stack: [V11, 0x165, V64, V67, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x23e, 0x3f8}, S2, S1, S0, 0x77e, S2, V543]

================================

Block 0x77e
[0x77e:0x782]
---
Predecessors: [0x64e]
Successors: [0x210, 0x23e, 0x3f8]
---
0x77e JUMPDEST
0x77f POP
0x780 POP
0x781 POP
0x782 JUMP
---
0x77e: JUMPDEST 
0x782: JUMP S3
---
Entry stack: [V11, 0x165, V64, V67, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x783
[0x783:0x794]
---
Predecessors: [0x5c6, 0x6fe]
Successors: [0x882]
---
0x783 JUMPDEST
0x784 PUSH2 0x795
0x787 DUP3
0x788 PUSH1 0x1
0x78a PUSH1 0xa0
0x78c PUSH1 0x2
0x78e EXP
0x78f SUB
0x790 AND
0x791 PUSH2 0x882
0x794 JUMP
---
0x783: JUMPDEST 
0x784: V557 = 0x795
0x788: V558 = 0x1
0x78a: V559 = 0xa0
0x78c: V560 = 0x2
0x78e: V561 = EXP 0x2 0xa0
0x78f: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x790: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x791: V564 = 0x882
0x794: JUMP 0x882
---
Entry stack: [V11, 0x165, V64, V67, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x77e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x795, V563]
Exit stack: [V11, 0x165, V64, V67, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x77e}, S1, S0, 0x795, V563]

================================

Block 0x795
[0x795:0x79b]
---
Predecessors: [0x882]
Successors: [0x79c, 0x7a0]
---
0x795 JUMPDEST
0x796 ISZERO
0x797 ISZERO
0x798 PUSH2 0x7a0
0x79b JUMPI
---
0x795: JUMPDEST 
0x796: V565 = ISZERO V658
0x797: V566 = ISZERO V565
0x798: V567 = 0x7a0
0x79b: JUMPI 0x7a0 V566
---
Entry stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x64e, 0x77e}, S2, S1, V658]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x64e, 0x77e}, S2, S1]

================================

Block 0x79c
[0x79c:0x79f]
---
Predecessors: [0x795]
Successors: []
---
0x79c PUSH1 0x0
0x79e DUP1
0x79f REVERT
---
0x79c: V568 = 0x0
0x79f: REVERT 0x0 0x0
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x77e}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x77e}, S1, S0]

================================

Block 0x7a0
[0x7a0:0x7be]
---
Predecessors: [0x795]
Successors: [0x7bf]
---
0x7a0 JUMPDEST
0x7a1 PUSH1 0x0
0x7a3 PUSH1 0x60
0x7a5 DUP4
0x7a6 PUSH1 0x1
0x7a8 PUSH1 0xa0
0x7aa PUSH1 0x2
0x7ac EXP
0x7ad SUB
0x7ae AND
0x7af DUP4
0x7b0 PUSH1 0x40
0x7b2 MLOAD
0x7b3 DUP1
0x7b4 DUP3
0x7b5 DUP1
0x7b6 MLOAD
0x7b7 SWAP1
0x7b8 PUSH1 0x20
0x7ba ADD
0x7bb SWAP1
0x7bc DUP1
0x7bd DUP4
0x7be DUP4
---
0x7a0: JUMPDEST 
0x7a1: V569 = 0x0
0x7a3: V570 = 0x60
0x7a6: V571 = 0x1
0x7a8: V572 = 0xa0
0x7aa: V573 = 0x2
0x7ac: V574 = EXP 0x2 0xa0
0x7ad: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ae: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7b0: V577 = 0x40
0x7b2: V578 = M[0x40]
0x7b6: V579 = M[S0]
0x7b8: V580 = 0x20
0x7ba: V581 = ADD 0x20 S0
---
Entry stack: [V11, 0x165, V64, V67, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x77e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x60, V576, S0, V578, V578, V581, V579, V579, V578, V581]
Exit stack: [S22, 0x165, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x64e, 0x77e}, S1, S0, 0x0, 0x60, V576, S0, V578, V578, V581, V579, V579, V578, V581]

================================

Block 0x7bf
[0x7bf:0x7c7]
---
Predecessors: [0x7a0, 0x7c8]
Successors: [0x7c8, 0x7de]
---
0x7bf JUMPDEST
0x7c0 PUSH1 0x20
0x7c2 DUP4
0x7c3 LT
0x7c4 PUSH2 0x7de
0x7c7 JUMPI
---
0x7bf: JUMPDEST 
0x7c0: V582 = 0x20
0x7c3: V583 = LT S2 0x20
0x7c4: V584 = 0x7de
0x7c7: JUMPI 0x7de V583
---
Entry stack: [V11, 0x165, V64, V67, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x64e, 0x77e}, S12, S11, 0x0, 0x60, V576, S7, V578, V578, V581, V579, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x165, V64, V67, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x64e, 0x77e}, S12, S11, 0x0, 0x60, V576, S7, V578, V578, V581, V579, S2, S1, S0]

================================

Block 0x7c8
[0x7c8:0x7dd]
---
Predecessors: [0x7bf]
Successors: [0x7bf]
---
0x7c8 DUP1
0x7c9 MLOAD
0x7ca DUP3
0x7cb MSTORE
0x7cc PUSH1 0x1f
0x7ce NOT
0x7cf SWAP1
0x7d0 SWAP3
0x7d1 ADD
0x7d2 SWAP2
0x7d3 PUSH1 0x20
0x7d5 SWAP2
0x7d6 DUP3
0x7d7 ADD
0x7d8 SWAP2
0x7d9 ADD
0x7da PUSH2 0x7bf
0x7dd JUMP
---
0x7c9: V585 = M[S0]
0x7cb: M[S1] = V585
0x7cc: V586 = 0x1f
0x7ce: V587 = NOT 0x1f
0x7d1: V588 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7d3: V589 = 0x20
0x7d7: V590 = ADD 0x20 S1
0x7d9: V591 = ADD 0x20 S0
0x7da: V592 = 0x7bf
0x7dd: JUMP 0x7bf
---
Entry stack: [V11, 0x165, V64, V67, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x64e, 0x77e}, S12, S11, 0x0, 0x60, V576, S7, V578, V578, V581, V579, S2, S1, S0]
Stack pops: 3
Stack additions: [V588, V590, V591]
Exit stack: [V11, 0x165, V64, V67, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x64e, 0x77e}, S12, S11, 0x0, 0x60, V576, S7, V578, V578, V581, V579, V588, V590, V591]

================================

Block 0x7de
[0x7de:0x81e]
---
Predecessors: [0x7bf]
Successors: [0x81f, 0x840]
---
0x7de JUMPDEST
0x7df PUSH1 0x1
0x7e1 DUP4
0x7e2 PUSH1 0x20
0x7e4 SUB
0x7e5 PUSH2 0x100
0x7e8 EXP
0x7e9 SUB
0x7ea DUP1
0x7eb NOT
0x7ec DUP3
0x7ed MLOAD
0x7ee AND
0x7ef DUP2
0x7f0 DUP5
0x7f1 MLOAD
0x7f2 AND
0x7f3 DUP1
0x7f4 DUP3
0x7f5 OR
0x7f6 DUP6
0x7f7 MSTORE
0x7f8 POP
0x7f9 POP
0x7fa POP
0x7fb POP
0x7fc POP
0x7fd POP
0x7fe SWAP1
0x7ff POP
0x800 ADD
0x801 SWAP2
0x802 POP
0x803 POP
0x804 PUSH1 0x0
0x806 PUSH1 0x40
0x808 MLOAD
0x809 DUP1
0x80a DUP4
0x80b SUB
0x80c DUP2
0x80d PUSH1 0x0
0x80f DUP7
0x810 GAS
0x811 CALL
0x812 SWAP2
0x813 POP
0x814 POP
0x815 RETURNDATASIZE
0x816 DUP1
0x817 PUSH1 0x0
0x819 DUP2
0x81a EQ
0x81b PUSH2 0x840
0x81e JUMPI
---
0x7de: JUMPDEST 
0x7df: V593 = 0x1
0x7e2: V594 = 0x20
0x7e4: V595 = SUB 0x20 S2
0x7e5: V596 = 0x100
0x7e8: V597 = EXP 0x100 V595
0x7e9: V598 = SUB V597 0x1
0x7eb: V599 = NOT V598
0x7ed: V600 = M[S0]
0x7ee: V601 = AND V600 V599
0x7f1: V602 = M[S1]
0x7f2: V603 = AND V602 V598
0x7f5: V604 = OR V601 V603
0x7f7: M[S1] = V604
0x800: V605 = ADD V579 V578
0x804: V606 = 0x0
0x806: V607 = 0x40
0x808: V608 = M[0x40]
0x80b: V609 = SUB V605 V608
0x80d: V610 = 0x0
0x810: V611 = GAS
0x811: V612 = CALL V611 V576 0x0 V608 V609 V608 0x0
0x815: V613 = RETURNDATASIZE
0x817: V614 = 0x0
0x81a: V615 = EQ V613 0x0
0x81b: V616 = 0x840
0x81e: JUMPI 0x840 V615
---
Entry stack: [V11, 0x165, V64, V67, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x64e, 0x77e}, S12, S11, 0x0, 0x60, V576, S7, V578, V578, V581, V579, S2, S1, S0]
Stack pops: 9
Stack additions: [V612, V613, V613]
Exit stack: [V11, 0x165, V64, V67, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, {0x64e, 0x77e}, S12, S11, 0x0, 0x60, V612, V613, V613]

================================

Block 0x81f
[0x81f:0x83f]
---
Predecessors: [0x7de]
Successors: [0x845]
---
0x81f PUSH1 0x40
0x821 MLOAD
0x822 SWAP2
0x823 POP
0x824 PUSH1 0x1f
0x826 NOT
0x827 PUSH1 0x3f
0x829 RETURNDATASIZE
0x82a ADD
0x82b AND
0x82c DUP3
0x82d ADD
0x82e PUSH1 0x40
0x830 MSTORE
0x831 RETURNDATASIZE
0x832 DUP3
0x833 MSTORE
0x834 RETURNDATASIZE
0x835 PUSH1 0x0
0x837 PUSH1 0x20
0x839 DUP5
0x83a ADD
0x83b RETURNDATACOPY
0x83c PUSH2 0x845
0x83f JUMP
---
0x81f: V617 = 0x40
0x821: V618 = M[0x40]
0x824: V619 = 0x1f
0x826: V620 = NOT 0x1f
0x827: V621 = 0x3f
0x829: V622 = RETURNDATASIZE
0x82a: V623 = ADD V622 0x3f
0x82b: V624 = AND V623 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x82d: V625 = ADD V618 V624
0x82e: V626 = 0x40
0x830: M[0x40] = V625
0x831: V627 = RETURNDATASIZE
0x833: M[V618] = V627
0x834: V628 = RETURNDATASIZE
0x835: V629 = 0x0
0x837: V630 = 0x20
0x83a: V631 = ADD V618 0x20
0x83b: RETURNDATACOPY V631 0x0 V628
0x83c: V632 = 0x845
0x83f: JUMP 0x845
---
Entry stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x64e, 0x77e}, S6, S5, 0x0, 0x60, V612, V613, V613]
Stack pops: 2
Stack additions: [V618, S0]
Exit stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x64e, 0x77e}, S6, S5, 0x0, 0x60, V612, V618, V613]

================================

Block 0x840
[0x840:0x844]
---
Predecessors: [0x7de]
Successors: [0x845]
---
0x840 JUMPDEST
0x841 PUSH1 0x60
0x843 SWAP2
0x844 POP
---
0x840: JUMPDEST 
0x841: V633 = 0x60
---
Entry stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x64e, 0x77e}, S6, S5, 0x0, 0x60, V612, V613, V613]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x64e, 0x77e}, S6, S5, 0x0, 0x60, V612, 0x60, V613]

================================

Block 0x845
[0x845:0x851]
---
Predecessors: [0x81f, 0x840]
Successors: [0x852, 0x856]
---
0x845 JUMPDEST
0x846 POP
0x847 SWAP2
0x848 POP
0x849 SWAP2
0x84a POP
0x84b DUP2
0x84c ISZERO
0x84d ISZERO
0x84e PUSH2 0x856
0x851 JUMPI
---
0x845: JUMPDEST 
0x84c: V634 = ISZERO V612
0x84d: V635 = ISZERO V634
0x84e: V636 = 0x856
0x851: JUMPI 0x856 V635
---
Entry stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x64e, 0x77e}, S6, S5, 0x0, 0x60, V612, S1, V613]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V11, 0x165, V64, V67, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x64e, 0x77e}, S6, S5, V612, S1]

================================

Block 0x852
[0x852:0x855]
---
Predecessors: [0x845]
Successors: []
---
0x852 PUSH1 0x0
0x854 DUP1
0x855 REVERT
---
0x852: V637 = 0x0
0x855: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0]

================================

Block 0x856
[0x856:0x860]
---
Predecessors: [0x845]
Successors: [0x64e, 0x861]
---
0x856 JUMPDEST
0x857 PUSH1 0x0
0x859 DUP2
0x85a MLOAD
0x85b GT
0x85c ISZERO
0x85d PUSH2 0x64e
0x860 JUMPI
---
0x856: JUMPDEST 
0x857: V638 = 0x0
0x85a: V639 = M[S0]
0x85b: V640 = GT V639 0x0
0x85c: V641 = ISZERO V640
0x85d: V642 = 0x64e
0x860: JUMPI 0x64e V641
---
Entry stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0]

================================

Block 0x861
[0x861:0x870]
---
Predecessors: [0x856]
Successors: [0x871, 0x875]
---
0x861 DUP1
0x862 DUP1
0x863 PUSH1 0x20
0x865 ADD
0x866 SWAP1
0x867 MLOAD
0x868 PUSH1 0x20
0x86a DUP2
0x86b LT
0x86c ISZERO
0x86d PUSH2 0x875
0x870 JUMPI
---
0x863: V643 = 0x20
0x865: V644 = ADD 0x20 S0
0x867: V645 = M[S0]
0x868: V646 = 0x20
0x86b: V647 = LT V645 0x20
0x86c: V648 = ISZERO V647
0x86d: V649 = 0x875
0x870: JUMPI 0x875 V648
---
Entry stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0]
Stack pops: 1
Stack additions: [S0, V644, V645]
Exit stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0, V644, V645]

================================

Block 0x871
[0x871:0x874]
---
Predecessors: [0x861]
Successors: []
---
0x871 PUSH1 0x0
0x873 DUP1
0x874 REVERT
---
0x871: V650 = 0x0
0x874: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x64e, 0x77e}, S5, S4, V612, S2, V644, V645]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x64e, 0x77e}, S5, S4, V612, S2, V644, V645]

================================

Block 0x875
[0x875:0x87d]
---
Predecessors: [0x861]
Successors: [0x64e, 0x87e]
---
0x875 JUMPDEST
0x876 POP
0x877 MLOAD
0x878 ISZERO
0x879 ISZERO
0x87a PUSH2 0x64e
0x87d JUMPI
---
0x875: JUMPDEST 
0x877: V651 = M[V644]
0x878: V652 = ISZERO V651
0x879: V653 = ISZERO V652
0x87a: V654 = 0x64e
0x87d: JUMPI 0x64e V653
---
Entry stack: [V11, 0x165, V64, V67, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x64e, 0x77e}, S5, S4, V612, S2, V644, V645]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x64e, 0x77e}, S5, S4, V612, S2]

================================

Block 0x87e
[0x87e:0x881]
---
Predecessors: [0x875]
Successors: []
---
0x87e PUSH1 0x0
0x880 DUP1
0x881 REVERT
---
0x87e: V655 = 0x0
0x881: REVERT 0x0 0x0
---
Entry stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x165, V64, V67, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V612, S0]

================================

Block 0x882
[0x882:0x889]
---
Predecessors: [0x783]
Successors: [0x795]
---
0x882 JUMPDEST
0x883 PUSH1 0x0
0x885 SWAP1
0x886 EXTCODESIZE
0x887 GT
0x888 SWAP1
0x889 JUMP
---
0x882: JUMPDEST 
0x883: V656 = 0x0
0x886: V657 = EXTCODESIZE V563
0x887: V658 = GT V657 0x0
0x889: JUMP 0x795
---
Entry stack: [V11, 0x165, V64, V67, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, 0x795, V563]
Stack pops: 2
Stack additions: [V658]
Exit stack: [V11, 0x165, V64, V67, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64e, 0x77e}, S3, S2, V658]

================================

Block 0x88a
[0x88a:0x8b5]
---
Predecessors: []
Successors: []
---
0x88a INVALID
0x88b LOG1
0x88c PUSH6 0x627a7a723058
0x893 SHA3
0x894 PUSH10 0x1fd814de2dec4a61d62c
0x89f ADD
0x8a0 MISSING 0xf8
0x8a1 MISSING 0x49
0x8a2 MISSING 0xaf
0x8a3 MISSING 0xbc
0x8a4 MISSING 0xa9
0x8a5 AND
0x8a6 SIGNEXTEND
0x8a7 MUL
0x8a8 MISSING 0xaa
0x8a9 BALANCE
0x8aa SWAP15
0x8ab CREATE
0x8ac MISSING 0xc1
0x8ad JUMPDEST
0x8ae MISSING 0xf
0x8af PUSH2 0x7315
0x8b2 COINBASE
0x8b3 MISSING 0xa6
0x8b4 STOP
0x8b5 MISSING 0x29
---
0x88a: INVALID 
0x88b: LOG S0 S1 S2
0x88c: V659 = 0x627a7a723058
0x893: V660 = SHA3 0x627a7a723058 S3
0x894: V661 = 0x1fd814de2dec4a61d62c
0x89f: V662 = ADD 0x1fd814de2dec4a61d62c V660
0x8a0: MISSING 0xf8
0x8a1: MISSING 0x49
0x8a2: MISSING 0xaf
0x8a3: MISSING 0xbc
0x8a4: MISSING 0xa9
0x8a5: V663 = AND S0 S1
0x8a6: V664 = SIGNEXTEND V663 S2
0x8a7: V665 = MUL V664 S3
0x8a8: MISSING 0xaa
0x8a9: V666 = BALANCE S0
0x8ab: V667 = CREATE S15 S1 S2
0x8ac: MISSING 0xc1
0x8ad: JUMPDEST 
0x8ae: MISSING 0xf
0x8af: V668 = 0x7315
0x8b2: V669 = COINBASE
0x8b3: MISSING 0xa6
0x8b4: STOP 
0x8b5: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V662, V665, V667, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V666, V669, 0x7315]
Exit stack: []

================================

Function 0:
Public function signature: 0x1878d1f1
Entry block: 0x47
Exit block: 0x5c
Body: 0x47, 0x4f, 0x53, 0x5c, 0x18c

Function 1:
Public function signature: 0x2e378429
Entry block: 0x78
Exit block: 0x5c
Body: 0x5c, 0x78, 0x80, 0x84, 0x1a4

Function 2:
Public function signature: 0xc660825c
Entry block: 0x8d
Exit block: 0x165
Body: 0x8d, 0x9f, 0xa3, 0xec, 0xf0, 0xfe, 0x102, 0x120, 0x124, 0x165, 0x1bc, 0x1eb, 0x1f1, 0x1f5, 0x2ea, 0x5c6, 0x64e, 0x79c

Function 3:
Public function signature: 0xe3b5ce76
Entry block: 0x177
Exit block: 0x5c
Body: 0x5c, 0x177, 0x17f, 0x183, 0x5ae

Function 4:
Public fallback function
Entry block: 0x42
Exit block: 0x42
Body: 0x42

Function 5:
Private function
Entry block: 0x654
Exit block: 0x77e
Body: 0x210, 0x23e, 0x27f, 0x285, 0x287, 0x2df, 0x2f3, 0x309, 0x37e, 0x392, 0x3a9, 0x3ba, 0x3df, 0x3f8, 0x654, 0x65c, 0x6c5, 0x6d9, 0x6ef, 0x6f3, 0x6fe, 0x77e

