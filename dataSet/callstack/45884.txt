Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x82
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x82
0xa: JUMPI 0x82 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x8a]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x10b1f5af
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x8a
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x10b1f5af
0x1a: V12 = EQ V10 0x10b1f5af
0x1b: V13 = 0x8a
0x1e: JUMPI 0x8a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa9]
---
0x1f DUP1
0x20 PUSH4 0x12065fe0
0x25 EQ
0x26 PUSH2 0xa9
0x29 JUMPI
---
0x20: V14 = 0x12065fe0
0x25: V15 = EQ 0x12065fe0 V10
0x26: V16 = 0xa9
0x29: JUMPI 0xa9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xc9]
---
0x2a DUP1
0x2b PUSH4 0x2f13b60c
0x30 EQ
0x31 PUSH2 0xc9
0x34 JUMPI
---
0x2b: V17 = 0x2f13b60c
0x30: V18 = EQ 0x2f13b60c V10
0x31: V19 = 0xc9
0x34: JUMPI 0xc9 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xd6]
---
0x35 DUP1
0x36 PUSH4 0x3f4bd063
0x3b EQ
0x3c PUSH2 0xd6
0x3f JUMPI
---
0x36: V20 = 0x3f4bd063
0x3b: V21 = EQ 0x3f4bd063 V10
0x3c: V22 = 0xd6
0x3f: JUMPI 0xd6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x130]
---
0x40 DUP1
0x41 PUSH4 0x41c0e1b5
0x46 EQ
0x47 PUSH2 0x130
0x4a JUMPI
---
0x41: V23 = 0x41c0e1b5
0x46: V24 = EQ 0x41c0e1b5 V10
0x47: V25 = 0x130
0x4a: JUMPI 0x130 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x16e]
---
0x4b DUP1
0x4c PUSH4 0x5f8d96de
0x51 EQ
0x52 PUSH2 0x16e
0x55 JUMPI
---
0x4c: V26 = 0x5f8d96de
0x51: V27 = EQ 0x5f8d96de V10
0x52: V28 = 0x16e
0x55: JUMPI 0x16e V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x179]
---
0x56 DUP1
0x57 PUSH4 0x740c0c44
0x5c EQ
0x5d PUSH2 0x179
0x60 JUMPI
---
0x57: V29 = 0x740c0c44
0x5c: V30 = EQ 0x740c0c44 V10
0x5d: V31 = 0x179
0x60: JUMPI 0x179 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x184]
---
0x61 DUP1
0x62 PUSH4 0x79ff433d
0x67 EQ
0x68 PUSH2 0x184
0x6b JUMPI
---
0x62: V32 = 0x79ff433d
0x67: V33 = EQ 0x79ff433d V10
0x68: V34 = 0x184
0x6b: JUMPI 0x184 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1b8]
---
0x6c DUP1
0x6d PUSH4 0xaeb7d9cc
0x72 EQ
0x73 PUSH2 0x1b8
0x76 JUMPI
---
0x6d: V35 = 0xaeb7d9cc
0x72: V36 = EQ 0xaeb7d9cc V10
0x73: V37 = 0x1b8
0x76: JUMPI 0x1b8 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1e5]
---
0x77 DUP1
0x78 PUSH4 0xd2d6a872
0x7d EQ
0x7e PUSH2 0x1e5
0x81 JUMPI
---
0x78: V38 = 0xd2d6a872
0x7d: V39 = EQ 0xd2d6a872 V10
0x7e: V40 = 0x1e5
0x81: JUMPI 0x1e5 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0x0, 0x77]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH2 0x1fd
0x86 PUSH2 0x2
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V41 = 0x1fd
0x86: V42 = 0x2
0x89: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd]
Exit stack: [V10, 0x1fd]

================================

Block 0x8a
[0x8a:0xa8]
---
Predecessors: [0xb]
Successors: [0x1fd]
---
0x8a JUMPDEST
0x8b PUSH2 0x1fd
0x8e PUSH1 0x0
0x90 DUP1
0x91 SLOAD
0x92 PUSH1 0x1
0x94 PUSH1 0xa0
0x96 PUSH1 0x2
0x98 EXP
0x99 SUB
0x9a NOT
0x9b AND
0x9c CALLER
0x9d OR
0x9e DUP2
0x9f SSTORE
0xa0 PUSH1 0x3
0xa2 DUP2
0xa3 SWAP1
0xa4 SSTORE
0xa5 PUSH1 0x4
0xa7 SSTORE
0xa8 JUMP
---
0x8a: JUMPDEST 
0x8b: V43 = 0x1fd
0x8e: V44 = 0x0
0x91: V45 = S[0x0]
0x92: V46 = 0x1
0x94: V47 = 0xa0
0x96: V48 = 0x2
0x98: V49 = EXP 0x2 0xa0
0x99: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V51 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9b: V52 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V45
0x9c: V53 = CALLER
0x9d: V54 = OR V53 V52
0x9f: S[0x0] = V54
0xa0: V55 = 0x3
0xa4: S[0x3] = 0x0
0xa5: V56 = 0x4
0xa7: S[0x4] = 0x0
0xa8: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa9
[0xa9:0xb7]
---
Predecessors: [0x1f]
Successors: [0xb8]
---
0xa9 JUMPDEST
0xaa PUSH2 0x201
0xad PUSH1 0x0
0xaf PUSH1 0x0
0xb1 CALLVALUE
0xb2 GT
0xb3 ISZERO
0xb4 PUSH2 0xb8
0xb7 JUMPI
---
0xa9: JUMPDEST 
0xaa: V57 = 0x201
0xad: V58 = 0x0
0xaf: V59 = 0x0
0xb1: V60 = CALLVALUE
0xb2: V61 = GT V60 0x0
0xb3: V62 = ISZERO V61
0xb4: V63 = 0xb8
0xb7: JUMPI 0xb8 V62
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201, 0x0]
Exit stack: [V10, 0x201, 0x0]

================================

Block 0xb8
[0xb8:0xc8]
---
Predecessors: [0xa9]
Successors: [0xd3]
---
0xb8 JUMPDEST
0xb9 POP
0xba PUSH1 0x1
0xbc PUSH1 0xa0
0xbe PUSH1 0x2
0xc0 EXP
0xc1 SUB
0xc2 ADDRESS
0xc3 AND
0xc4 BALANCE
0xc5 PUSH2 0xd3
0xc8 JUMP
---
0xb8: JUMPDEST 
0xba: V64 = 0x1
0xbc: V65 = 0xa0
0xbe: V66 = 0x2
0xc0: V67 = EXP 0x2 0xa0
0xc1: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V69 = ADDRESS
0xc3: V70 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V71 = BALANCE V70
0xc5: V72 = 0xd3
0xc8: JUMP 0xd3
---
Entry stack: [V10, 0x201, 0x0]
Stack pops: 1
Stack additions: [V71]
Exit stack: [V10, 0x201, V71]

================================

Block 0xc9
[0xc9:0xd2]
---
Predecessors: [0x2a]
Successors: [0xd3]
---
0xc9 JUMPDEST
0xca PUSH2 0x201
0xcd PUSH1 0x5
0xcf SLOAD
0xd0 PUSH1 0xff
0xd2 AND
---
0xc9: JUMPDEST 
0xca: V73 = 0x201
0xcd: V74 = 0x5
0xcf: V75 = S[0x5]
0xd0: V76 = 0xff
0xd2: V77 = AND 0xff V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201, V77]
Exit stack: [V10, 0x201, V77]

================================

Block 0xd3
[0xd3:0xd5]
---
Predecessors: [0xb8, 0xc9, 0x16e, 0x179]
Successors: [0x201]
---
0xd3 JUMPDEST
0xd4 SWAP1
0xd5 JUMP
---
0xd3: JUMPDEST 
0xd5: JUMP 0x201
---
Entry stack: [V10, 0x201, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0x35]
Successors: [0xda]
---
0xd6 JUMPDEST
0xd7 PUSH2 0x1fd
---
0xd6: JUMPDEST 
0xd7: V78 = 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd]
Exit stack: [V10, 0x1fd]

================================

Block 0xda
[0xda:0xed]
---
Predecessors: [0xd6, 0x167, 0x1f6]
Successors: [0xee, 0x4d6]
---
0xda JUMPDEST
0xdb PUSH1 0x0
0xdd PUSH1 0x0
0xdf PUSH1 0x0
0xe1 PUSH1 0x1
0xe3 PUSH1 0x0
0xe5 POP
0xe6 SLOAD
0xe7 TIMESTAMP
0xe8 GT
0xe9 ISZERO
0xea PUSH2 0x4d6
0xed JUMPI
---
0xda: JUMPDEST 
0xdb: V79 = 0x0
0xdd: V80 = 0x0
0xdf: V81 = 0x0
0xe1: V82 = 0x1
0xe3: V83 = 0x0
0xe6: V84 = S[0x1]
0xe7: V85 = TIMESTAMP
0xe8: V86 = GT V85 V84
0xe9: V87 = ISZERO V86
0xea: V88 = 0x4d6
0xed: JUMPI 0x4d6 V87
---
Entry stack: [V10, S2, S1, {0x1fd, 0x213, 0x221}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S2, S1, {0x1fd, 0x213, 0x221}, 0x0, 0x0, 0x0]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xda, 0x3e4]
Successors: [0xf9, 0x2fd]
---
0xee JUMPDEST
0xef PUSH1 0x3
0xf1 SLOAD
0xf2 DUP3
0xf3 LT
0xf4 ISZERO
0xf5 PUSH2 0x2fd
0xf8 JUMPI
---
0xee: JUMPDEST 
0xef: V89 = 0x3
0xf1: V90 = S[0x3]
0xf3: V91 = LT S1 V90
0xf4: V92 = ISZERO V91
0xf5: V93 = 0x2fd
0xf8: JUMPI 0x2fd V92
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]

================================

Block 0xf9
[0xf9:0x11c]
---
Predecessors: [0xee]
Successors: [0x11d, 0x4db]
---
0xf9 PUSH1 0x0
0xfb DUP3
0xfc DUP2
0xfd MSTORE
0xfe PUSH1 0x6
0x100 PUSH1 0x20
0x102 MSTORE
0x103 PUSH1 0x40
0x105 DUP2
0x106 SHA3
0x107 SLOAD
0x108 PUSH2 0x374
0x10b SWAP2
0x10c ADDRESS
0x10d PUSH1 0x1
0x10f PUSH1 0xa0
0x111 PUSH1 0x2
0x113 EXP
0x114 SUB
0x115 AND
0x116 BALANCE
0x117 DUP3
0x118 LT
0x119 PUSH2 0x4db
0x11c JUMPI
---
0xf9: V94 = 0x0
0xfd: M[0x0] = S1
0xfe: V95 = 0x6
0x100: V96 = 0x20
0x102: M[0x20] = 0x6
0x103: V97 = 0x40
0x106: V98 = SHA3 0x0 0x40
0x107: V99 = S[V98]
0x108: V100 = 0x374
0x10c: V101 = ADDRESS
0x10d: V102 = 0x1
0x10f: V103 = 0xa0
0x111: V104 = 0x2
0x113: V105 = EXP 0x2 0xa0
0x114: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x115: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x116: V108 = BALANCE V107
0x118: V109 = LT V99 V108
0x119: V110 = 0x4db
0x11c: JUMPI 0x4db V109
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x374, V99, 0x0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0, 0x374, V99, 0x0]

================================

Block 0x11d
[0x11d:0x12f]
---
Predecessors: [0xf9]
Successors: [0x4ea]
---
0x11d DUP2
0x11e ADDRESS
0x11f PUSH1 0x1
0x121 PUSH1 0xa0
0x123 PUSH1 0x2
0x125 EXP
0x126 SUB
0x127 AND
0x128 BALANCE
0x129 SUB
0x12a SWAP1
0x12b POP
0x12c PUSH2 0x4ea
0x12f JUMP
---
0x11e: V111 = ADDRESS
0x11f: V112 = 0x1
0x121: V113 = 0xa0
0x123: V114 = 0x2
0x125: V115 = EXP 0x2 0xa0
0x126: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x128: V118 = BALANCE V117
0x129: V119 = SUB V118 V99
0x12c: V120 = 0x4ea
0x12f: JUMP 0x4ea
---
Entry stack: [V10, S8, S7, {0x1fd, 0x213, 0x221}, S5, S4, 0x0, 0x374, V99, 0x0]
Stack pops: 2
Stack additions: [S1, V119]
Exit stack: [V10, S8, S7, {0x1fd, 0x213, 0x221}, S5, S4, 0x0, 0x374, V99, V119]

================================

Block 0x130
[0x130:0x13f]
---
Predecessors: [0x40]
Successors: [0x140, 0x154]
---
0x130 JUMPDEST
0x131 PUSH2 0x1fd
0x134 PUSH1 0x5
0x136 SLOAD
0x137 PUSH1 0xff
0x139 AND
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x154
0x13f JUMPI
---
0x130: JUMPDEST 
0x131: V121 = 0x1fd
0x134: V122 = 0x5
0x136: V123 = S[0x5]
0x137: V124 = 0xff
0x139: V125 = AND 0xff V123
0x13b: V126 = ISZERO V125
0x13c: V127 = 0x154
0x13f: JUMPI 0x154 V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V125]
Exit stack: [V10, 0x1fd, V125]

================================

Block 0x140
[0x140:0x153]
---
Predecessors: [0x130]
Successors: [0x154]
---
0x140 POP
0x141 PUSH1 0x0
0x143 SLOAD
0x144 PUSH1 0x1
0x146 PUSH1 0xa0
0x148 PUSH1 0x2
0x14a EXP
0x14b SUB
0x14c SWAP1
0x14d DUP2
0x14e AND
0x14f CALLER
0x150 SWAP1
0x151 SWAP2
0x152 AND
0x153 EQ
---
0x141: V128 = 0x0
0x143: V129 = S[0x0]
0x144: V130 = 0x1
0x146: V131 = 0xa0
0x148: V132 = 0x2
0x14a: V133 = EXP 0x2 0xa0
0x14b: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14e: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x14f: V136 = CALLER
0x152: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x153: V138 = EQ V137 V135
---
Entry stack: [V10, 0x1fd, V125]
Stack pops: 1
Stack additions: [V138]
Exit stack: [V10, 0x1fd, V138]

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0x130, 0x140]
Successors: [0x15b, 0x161]
---
0x154 JUMPDEST
0x155 DUP1
0x156 ISZERO
0x157 PUSH2 0x161
0x15a JUMPI
---
0x154: JUMPDEST 
0x156: V139 = ISZERO S0
0x157: V140 = 0x161
0x15a: JUMPI 0x161 V139
---
Entry stack: [V10, 0x1fd, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1fd, S0]

================================

Block 0x15b
[0x15b:0x160]
---
Predecessors: [0x154]
Successors: [0x161]
---
0x15b POP
0x15c PUSH1 0x1
0x15e SLOAD
0x15f TIMESTAMP
0x160 GT
---
0x15c: V141 = 0x1
0x15e: V142 = S[0x1]
0x15f: V143 = TIMESTAMP
0x160: V144 = GT V143 V142
---
Entry stack: [V10, 0x1fd, S0]
Stack pops: 1
Stack additions: [V144]
Exit stack: [V10, 0x1fd, V144]

================================

Block 0x161
[0x161:0x166]
---
Predecessors: [0x154, 0x15b]
Successors: [0x167, 0x1ff]
---
0x161 JUMPDEST
0x162 ISZERO
0x163 PUSH2 0x1ff
0x166 JUMPI
---
0x161: JUMPDEST 
0x162: V145 = ISZERO S0
0x163: V146 = 0x1ff
0x166: JUMPI 0x1ff V145
---
Entry stack: [V10, 0x1fd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fd]

================================

Block 0x167
[0x167:0x16d]
---
Predecessors: [0x161]
Successors: [0xda]
---
0x167 PUSH2 0x213
0x16a PUSH2 0xda
0x16d JUMP
---
0x167: V147 = 0x213
0x16a: V148 = 0xda
0x16d: JUMP 0xda
---
Entry stack: [V10, 0x1fd]
Stack pops: 0
Stack additions: [0x213]
Exit stack: [V10, 0x1fd, 0x213]

================================

Block 0x16e
[0x16e:0x178]
---
Predecessors: [0x4b]
Successors: [0xd3]
---
0x16e JUMPDEST
0x16f PUSH2 0x201
0x172 PUSH1 0x1
0x174 SLOAD
0x175 PUSH2 0xd3
0x178 JUMP
---
0x16e: JUMPDEST 
0x16f: V149 = 0x201
0x172: V150 = 0x1
0x174: V151 = S[0x1]
0x175: V152 = 0xd3
0x178: JUMP 0xd3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201, V151]
Exit stack: [V10, 0x201, V151]

================================

Block 0x179
[0x179:0x183]
---
Predecessors: [0x56]
Successors: [0xd3]
---
0x179 JUMPDEST
0x17a PUSH2 0x201
0x17d PUSH1 0x3
0x17f SLOAD
0x180 PUSH2 0xd3
0x183 JUMP
---
0x179: JUMPDEST 
0x17a: V153 = 0x201
0x17d: V154 = 0x3
0x17f: V155 = S[0x3]
0x180: V156 = 0xd3
0x183: JUMP 0xd3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x201, V155]
Exit stack: [V10, 0x201, V155]

================================

Block 0x184
[0x184:0x1a2]
---
Predecessors: [0x61]
Successors: [0x1a3, 0x1b5]
---
0x184 JUMPDEST
0x185 PUSH2 0x1fd
0x188 PUSH1 0x4
0x18a CALLDATALOAD
0x18b PUSH1 0x0
0x18d SLOAD
0x18e PUSH1 0x1
0x190 PUSH1 0xa0
0x192 PUSH1 0x2
0x194 EXP
0x195 SUB
0x196 SWAP1
0x197 DUP2
0x198 AND
0x199 CALLER
0x19a SWAP1
0x19b SWAP2
0x19c AND
0x19d EQ
0x19e ISZERO
0x19f PUSH2 0x1b5
0x1a2 JUMPI
---
0x184: JUMPDEST 
0x185: V157 = 0x1fd
0x188: V158 = 0x4
0x18a: V159 = CALLDATALOAD 0x4
0x18b: V160 = 0x0
0x18d: V161 = S[0x0]
0x18e: V162 = 0x1
0x190: V163 = 0xa0
0x192: V164 = 0x2
0x194: V165 = EXP 0x2 0xa0
0x195: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x199: V168 = CALLER
0x19c: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x19d: V170 = EQ V169 V167
0x19e: V171 = ISZERO V170
0x19f: V172 = 0x1b5
0x1a2: JUMPI 0x1b5 V171
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V159]
Exit stack: [V10, 0x1fd, V159]

================================

Block 0x1a3
[0x1a3:0x1b4]
---
Predecessors: [0x184]
Successors: [0x1b5]
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 SLOAD
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af NOT
0x1b0 AND
0x1b1 DUP3
0x1b2 OR
0x1b3 SWAP1
0x1b4 SSTORE
---
0x1a3: V173 = 0x0
0x1a6: V174 = S[0x0]
0x1a7: V175 = 0x1
0x1a9: V176 = 0xa0
0x1ab: V177 = 0x2
0x1ad: V178 = EXP 0x2 0xa0
0x1ae: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V180 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V181 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V174
0x1b2: V182 = OR V159 V181
0x1b4: S[0x0] = V182
---
Entry stack: [V10, 0x1fd, V159]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1fd, V159]

================================

Block 0x1b5
[0x1b5:0x1b7]
---
Predecessors: [0x184, 0x1a3, 0x1b8]
Successors: [0x1fd]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 JUMP
---
0x1b5: JUMPDEST 
0x1b7: JUMP 0x1fd
---
Entry stack: [V10, 0x1fd, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b8
[0x1b8:0x1d6]
---
Predecessors: [0x6c]
Successors: [0x1b5, 0x1d7]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x1fd
0x1bc PUSH1 0x4
0x1be CALLDATALOAD
0x1bf PUSH1 0x0
0x1c1 SLOAD
0x1c2 PUSH1 0x1
0x1c4 PUSH1 0xa0
0x1c6 PUSH1 0x2
0x1c8 EXP
0x1c9 SUB
0x1ca SWAP1
0x1cb DUP2
0x1cc AND
0x1cd CALLER
0x1ce SWAP1
0x1cf SWAP2
0x1d0 AND
0x1d1 EQ
0x1d2 ISZERO
0x1d3 PUSH2 0x1b5
0x1d6 JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V183 = 0x1fd
0x1bc: V184 = 0x4
0x1be: V185 = CALLDATALOAD 0x4
0x1bf: V186 = 0x0
0x1c1: V187 = S[0x0]
0x1c2: V188 = 0x1
0x1c4: V189 = 0xa0
0x1c6: V190 = 0x2
0x1c8: V191 = EXP 0x2 0xa0
0x1c9: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cc: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x1cd: V194 = CALLER
0x1d0: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x1d1: V196 = EQ V195 V193
0x1d2: V197 = ISZERO V196
0x1d3: V198 = 0x1b5
0x1d6: JUMPI 0x1b5 V197
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V185]
Exit stack: [V10, 0x1fd, V185]

================================

Block 0x1d7
[0x1d7:0x1e4]
---
Predecessors: [0x1b8]
Successors: [0x1fd]
---
0x1d7 PUSH1 0x5
0x1d9 DUP1
0x1da SLOAD
0x1db PUSH1 0xff
0x1dd NOT
0x1de AND
0x1df DUP3
0x1e0 OR
0x1e1 SWAP1
0x1e2 SSTORE
0x1e3 POP
0x1e4 JUMP
---
0x1d7: V199 = 0x5
0x1da: V200 = S[0x5]
0x1db: V201 = 0xff
0x1dd: V202 = NOT 0xff
0x1de: V203 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V200
0x1e0: V204 = OR V185 V203
0x1e2: S[0x5] = V204
0x1e4: JUMP 0x1fd
---
Entry stack: [V10, 0x1fd, V185]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e5
[0x1e5:0x1f5]
---
Predecessors: [0x77]
Successors: [0x1f6, 0x221]
---
0x1e5 JUMPDEST
0x1e6 PUSH2 0x1fd
0x1e9 PUSH1 0x4
0x1eb CALLDATALOAD
0x1ec PUSH1 0x1
0x1ee SLOAD
0x1ef TIMESTAMP
0x1f0 GT
0x1f1 ISZERO
0x1f2 PUSH2 0x221
0x1f5 JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V205 = 0x1fd
0x1e9: V206 = 0x4
0x1eb: V207 = CALLDATALOAD 0x4
0x1ec: V208 = 0x1
0x1ee: V209 = S[0x1]
0x1ef: V210 = TIMESTAMP
0x1f0: V211 = GT V210 V209
0x1f1: V212 = ISZERO V211
0x1f2: V213 = 0x221
0x1f5: JUMPI 0x221 V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V207]
Exit stack: [V10, 0x1fd, V207]

================================

Block 0x1f6
[0x1f6:0x1fc]
---
Predecessors: [0x1e5]
Successors: [0xda]
---
0x1f6 PUSH2 0x221
0x1f9 PUSH2 0xda
0x1fc JUMP
---
0x1f6: V214 = 0x221
0x1f9: V215 = 0xda
0x1fc: JUMP 0xda
---
Entry stack: [V10, 0x1fd, V207]
Stack pops: 0
Stack additions: [0x221]
Exit stack: [V10, 0x1fd, V207, 0x221]

================================

Block 0x1fd
[0x1fd:0x1fe]
---
Predecessors: [0x8a, 0x1b5, 0x1d7, 0x1ff, 0x247, 0x4d6]
Successors: []
---
0x1fd JUMPDEST
0x1fe STOP
---
0x1fd: JUMPDEST 
0x1fe: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x1ff
[0x1ff:0x200]
---
Predecessors: [0x161]
Successors: [0x1fd]
---
0x1ff JUMPDEST
0x200 JUMP
---
0x1ff: JUMPDEST 
0x200: JUMP 0x1fd
---
Entry stack: [V10, 0x1fd]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x201
[0x201:0x212]
---
Predecessors: [0xd3]
Successors: []
---
0x201 JUMPDEST
0x202 PUSH1 0x40
0x204 DUP1
0x205 MLOAD
0x206 SWAP2
0x207 DUP3
0x208 MSTORE
0x209 MLOAD
0x20a SWAP1
0x20b DUP2
0x20c SWAP1
0x20d SUB
0x20e PUSH1 0x20
0x210 ADD
0x211 SWAP1
0x212 RETURN
---
0x201: JUMPDEST 
0x202: V216 = 0x40
0x205: V217 = M[0x40]
0x208: M[V217] = S0
0x209: V218 = M[0x40]
0x20d: V219 = SUB V217 V218
0x20e: V220 = 0x20
0x210: V221 = ADD 0x20 V219
0x212: RETURN V218 V221
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x213
[0x213:0x220]
---
Predecessors: [0x4d6]
Successors: []
---
0x213 JUMPDEST
0x214 PUSH1 0x0
0x216 SLOAD
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f AND
0x220 SELFDESTRUCT
---
0x213: JUMPDEST 
0x214: V222 = 0x0
0x216: V223 = S[0x0]
0x217: V224 = 0x1
0x219: V225 = 0xa0
0x21b: V226 = 0x2
0x21d: V227 = EXP 0x2 0xa0
0x21e: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x220: SELFDESTRUCT V229
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x221
[0x221:0x22f]
---
Predecessors: [0x1e5, 0x4d6]
Successors: [0x230, 0x234]
---
0x221 JUMPDEST
0x222 PUSH7 0xb1a2bc2ec50000
0x22a CALLVALUE
0x22b EQ
0x22c PUSH2 0x234
0x22f JUMPI
---
0x221: JUMPDEST 
0x222: V230 = 0xb1a2bc2ec50000
0x22a: V231 = CALLVALUE
0x22b: V232 = EQ V231 0xb1a2bc2ec50000
0x22c: V233 = 0x234
0x22f: JUMPI 0x234 V232
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x221]
Successors: []
---
0x230 PUSH2 0x2
0x233 JUMP
---
0x230: V234 = 0x2
0x233: THROW 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x234
[0x234:0x242]
---
Predecessors: [0x221]
Successors: [0x243, 0x247]
---
0x234 JUMPDEST
0x235 PUSH1 0x5
0x237 SLOAD
0x238 PUSH1 0xff
0x23a AND
0x23b PUSH1 0x1
0x23d EQ
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x234: JUMPDEST 
0x235: V235 = 0x5
0x237: V236 = S[0x5]
0x238: V237 = 0xff
0x23a: V238 = AND 0xff V236
0x23b: V239 = 0x1
0x23d: V240 = EQ 0x1 V238
0x23e: V241 = ISZERO V240
0x23f: V242 = 0x247
0x242: JUMPI 0x247 V241
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x234]
Successors: []
---
0x243 PUSH2 0x2
0x246 JUMP
---
0x243: V243 = 0x2
0x246: THROW 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x247
[0x247:0x2fc]
---
Predecessors: [0x234]
Successors: [0x1fd]
---
0x247 JUMPDEST
0x248 PUSH1 0x3
0x24a DUP1
0x24b SLOAD
0x24c PUSH1 0x0
0x24e SWAP1
0x24f DUP2
0x250 MSTORE
0x251 PUSH1 0x6
0x253 PUSH1 0x20
0x255 MSTORE
0x256 PUSH1 0x40
0x258 DUP1
0x259 DUP3
0x25a SHA3
0x25b DUP5
0x25c SWAP1
0x25d SSTORE
0x25e DUP3
0x25f SLOAD
0x260 DUP3
0x261 MSTORE
0x262 DUP1
0x263 DUP3
0x264 SHA3
0x265 PUSH1 0x1
0x267 SWAP1
0x268 DUP2
0x269 ADD
0x26a DUP1
0x26b SLOAD
0x26c PUSH1 0x1
0x26e PUSH1 0xa0
0x270 PUSH1 0x2
0x272 EXP
0x273 SUB
0x274 NOT
0x275 AND
0x276 CALLER
0x277 OR
0x278 SWAP1
0x279 SSTORE
0x27a DUP4
0x27b SLOAD
0x27c DUP2
0x27d ADD
0x27e SWAP1
0x27f SWAP4
0x280 SSTORE
0x281 PUSH2 0x708
0x284 TIMESTAMP
0x285 ADD
0x286 SWAP1
0x287 SWAP3
0x288 SSTORE
0x289 SWAP1
0x28a MLOAD
0x28b DUP2
0x28c SLOAD
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 AND
0x296 SWAP2
0x297 SWAP1
0x298 PUSH1 0xa
0x29a PUSH1 0x64
0x29c CALLVALUE
0x29d DIV
0x29e MUL
0x29f SWAP1
0x2a0 DUP3
0x2a1 DUP2
0x2a2 DUP2
0x2a3 DUP2
0x2a4 DUP6
0x2a5 DUP9
0x2a6 DUP4
0x2a7 CALL
0x2a8 POP
0x2a9 POP
0x2aa PUSH1 0x40
0x2ac DUP1
0x2ad MLOAD
0x2ae DUP6
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 ADDRESS
0x2ba DUP2
0x2bb AND
0x2bc BALANCE
0x2bd PUSH1 0x20
0x2bf DUP4
0x2c0 ADD
0x2c1 MSTORE
0x2c2 TIMESTAMP
0x2c3 DUP3
0x2c4 DUP5
0x2c5 ADD
0x2c6 MSTORE
0x2c7 SWAP2
0x2c8 MLOAD
0x2c9 CALLER
0x2ca SWAP1
0x2cb SWAP3
0x2cc AND
0x2cd SWAP5
0x2ce POP
0x2cf PUSH32 0x8d466116dd3f7b5e3a703c5bd5104cdde755801bee5a4e7d640edef8f7e6cf84
0x2f0 SWAP4
0x2f1 POP
0x2f2 DUP2
0x2f3 SWAP1
0x2f4 SUB
0x2f5 PUSH1 0x60
0x2f7 ADD
0x2f8 SWAP2
0x2f9 POP
0x2fa LOG2
0x2fb POP
0x2fc JUMP
---
0x247: JUMPDEST 
0x248: V244 = 0x3
0x24b: V245 = S[0x3]
0x24c: V246 = 0x0
0x250: M[0x0] = V245
0x251: V247 = 0x6
0x253: V248 = 0x20
0x255: M[0x20] = 0x6
0x256: V249 = 0x40
0x25a: V250 = SHA3 0x0 0x40
0x25d: S[V250] = S0
0x25f: V251 = S[0x3]
0x261: M[0x0] = V251
0x264: V252 = SHA3 0x0 0x40
0x265: V253 = 0x1
0x269: V254 = ADD 0x1 V252
0x26b: V255 = S[V254]
0x26c: V256 = 0x1
0x26e: V257 = 0xa0
0x270: V258 = 0x2
0x272: V259 = EXP 0x2 0xa0
0x273: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V261 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x275: V262 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V255
0x276: V263 = CALLER
0x277: V264 = OR V263 V262
0x279: S[V254] = V264
0x27b: V265 = S[0x3]
0x27d: V266 = ADD 0x1 V265
0x280: S[0x3] = V266
0x281: V267 = 0x708
0x284: V268 = TIMESTAMP
0x285: V269 = ADD V268 0x708
0x288: S[0x1] = V269
0x28a: V270 = M[0x40]
0x28c: V271 = S[0x0]
0x28d: V272 = 0x1
0x28f: V273 = 0xa0
0x291: V274 = 0x2
0x293: V275 = EXP 0x2 0xa0
0x294: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x298: V278 = 0xa
0x29a: V279 = 0x64
0x29c: V280 = CALLVALUE
0x29d: V281 = DIV V280 0x64
0x29e: V282 = MUL V281 0xa
0x2a7: V283 = CALL 0x0 V277 V282 V270 0x0 V270 0x0
0x2aa: V284 = 0x40
0x2ad: V285 = M[0x40]
0x2b0: M[V285] = S0
0x2b1: V286 = 0x1
0x2b3: V287 = 0xa0
0x2b5: V288 = 0x2
0x2b7: V289 = EXP 0x2 0xa0
0x2b8: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V291 = ADDRESS
0x2bb: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x2bc: V293 = BALANCE V292
0x2bd: V294 = 0x20
0x2c0: V295 = ADD V285 0x20
0x2c1: M[V295] = V293
0x2c2: V296 = TIMESTAMP
0x2c5: V297 = ADD 0x40 V285
0x2c6: M[V297] = V296
0x2c8: V298 = M[0x40]
0x2c9: V299 = CALLER
0x2cc: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x2cf: V301 = 0x8d466116dd3f7b5e3a703c5bd5104cdde755801bee5a4e7d640edef8f7e6cf84
0x2f4: V302 = SUB V285 V298
0x2f5: V303 = 0x60
0x2f7: V304 = ADD 0x60 V302
0x2fa: LOG V298 V304 0x8d466116dd3f7b5e3a703c5bd5104cdde755801bee5a4e7d640edef8f7e6cf84 V300
0x2fc: JUMP S1
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fd
[0x2fd:0x301]
---
Predecessors: [0xee]
Successors: [0x302]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x0
0x300 SWAP2
0x301 POP
---
0x2fd: JUMPDEST 
0x2fe: V305 = 0x0
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, 0x0, 0x0]

================================

Block 0x302
[0x302:0x30c]
---
Predecessors: [0x2fd, 0x368]
Successors: [0x30d, 0x3f0]
---
0x302 JUMPDEST
0x303 PUSH1 0x3
0x305 SLOAD
0x306 DUP3
0x307 LT
0x308 ISZERO
0x309 PUSH2 0x3f0
0x30c JUMPI
---
0x302: JUMPDEST 
0x303: V306 = 0x3
0x305: V307 = S[0x3]
0x307: V308 = LT S1 V307
0x308: V309 = ISZERO V308
0x309: V310 = 0x3f0
0x30c: JUMPI 0x3f0 V309
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]

================================

Block 0x30d
[0x30d:0x325]
---
Predecessors: [0x302]
Successors: [0x326, 0x368]
---
0x30d PUSH1 0x0
0x30f DUP3
0x310 DUP2
0x311 MSTORE
0x312 PUSH1 0x6
0x314 PUSH1 0x20
0x316 MSTORE
0x317 PUSH1 0x40
0x319 SWAP1
0x31a SHA3
0x31b PUSH1 0x2
0x31d ADD
0x31e SLOAD
0x31f DUP4
0x320 EQ
0x321 ISZERO
0x322 PUSH2 0x368
0x325 JUMPI
---
0x30d: V311 = 0x0
0x311: M[0x0] = S1
0x312: V312 = 0x6
0x314: V313 = 0x20
0x316: M[0x20] = 0x6
0x317: V314 = 0x40
0x31a: V315 = SHA3 0x0 0x40
0x31b: V316 = 0x2
0x31d: V317 = ADD 0x2 V315
0x31e: V318 = S[V317]
0x320: V319 = EQ S2 V318
0x321: V320 = ISZERO V319
0x322: V321 = 0x368
0x325: JUMPI 0x368 V320
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]

================================

Block 0x326
[0x326:0x367]
---
Predecessors: [0x30d]
Successors: [0x368]
---
0x326 PUSH1 0x40
0x328 PUSH1 0x0
0x32a DUP2
0x32b DUP2
0x32c SHA3
0x32d PUSH1 0x1
0x32f SWAP1
0x330 DUP2
0x331 ADD
0x332 SLOAD
0x333 PUSH1 0x4
0x335 DUP1
0x336 SLOAD
0x337 DUP5
0x338 MSTORE
0x339 PUSH1 0x7
0x33b PUSH1 0x20
0x33d MSTORE
0x33e SWAP4
0x33f SWAP1
0x340 SWAP3
0x341 SHA3
0x342 DUP2
0x343 ADD
0x344 DUP1
0x345 SLOAD
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e NOT
0x34f AND
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 SWAP4
0x359 SWAP1
0x35a SWAP4
0x35b AND
0x35c SWAP3
0x35d SWAP1
0x35e SWAP3
0x35f OR
0x360 SWAP1
0x361 SWAP2
0x362 SSTORE
0x363 DUP2
0x364 SLOAD
0x365 ADD
0x366 SWAP1
0x367 SSTORE
---
0x326: V322 = 0x40
0x328: V323 = 0x0
0x32c: V324 = SHA3 0x0 0x40
0x32d: V325 = 0x1
0x331: V326 = ADD 0x1 V324
0x332: V327 = S[V326]
0x333: V328 = 0x4
0x336: V329 = S[0x4]
0x338: M[0x0] = V329
0x339: V330 = 0x7
0x33b: V331 = 0x20
0x33d: M[0x20] = 0x7
0x341: V332 = SHA3 0x0 0x40
0x343: V333 = ADD 0x1 V332
0x345: V334 = S[V333]
0x346: V335 = 0x1
0x348: V336 = 0xa0
0x34a: V337 = 0x2
0x34c: V338 = EXP 0x2 0xa0
0x34d: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34e: V340 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V341 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V334
0x350: V342 = 0x1
0x352: V343 = 0xa0
0x354: V344 = 0x2
0x356: V345 = EXP 0x2 0xa0
0x357: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x35f: V348 = OR V347 V341
0x362: S[V333] = V348
0x364: V349 = S[0x4]
0x365: V350 = ADD V349 0x1
0x367: S[0x4] = V350
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]

================================

Block 0x368
[0x368:0x373]
---
Predecessors: [0x30d, 0x326]
Successors: [0x302]
---
0x368 JUMPDEST
0x369 PUSH1 0x1
0x36b SWAP2
0x36c SWAP1
0x36d SWAP2
0x36e ADD
0x36f SWAP1
0x370 PUSH2 0x302
0x373 JUMP
---
0x368: JUMPDEST 
0x369: V351 = 0x1
0x36e: V352 = ADD 0x1 S1
0x370: V353 = 0x302
0x373: JUMP 0x302
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 2
Stack additions: [V352, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, V352, S0]

================================

Block 0x374
[0x374:0x390]
---
Predecessors: [0x4ea]
Successors: [0x391, 0x3b9]
---
0x374 JUMPDEST
0x375 PUSH1 0x0
0x377 DUP4
0x378 DUP2
0x379 MSTORE
0x37a PUSH1 0x6
0x37c PUSH1 0x20
0x37e MSTORE
0x37f PUSH1 0x40
0x381 DUP2
0x382 SHA3
0x383 PUSH1 0x2
0x385 ADD
0x386 SWAP2
0x387 SWAP1
0x388 SWAP2
0x389 SSTORE
0x38a DUP3
0x38b EQ
0x38c ISZERO
0x38d PUSH2 0x3b9
0x390 JUMPI
---
0x374: JUMPDEST 
0x375: V354 = 0x0
0x379: M[0x0] = S2
0x37a: V355 = 0x6
0x37c: V356 = 0x20
0x37e: M[0x20] = 0x6
0x37f: V357 = 0x40
0x382: V358 = SHA3 0x0 0x40
0x383: V359 = 0x2
0x385: V360 = ADD 0x2 V358
0x389: S[V360] = S0
0x38b: V361 = EQ S2 0x0
0x38c: V362 = ISZERO V361
0x38d: V363 = 0x3b9
0x390: JUMPI 0x3b9 V362
---
Entry stack: [V10, S6, S5, {0x1fd, 0x213, 0x221}, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V10, S6, S5, {0x1fd, 0x213, 0x221}, S3, S2, 0x0]

================================

Block 0x391
[0x391:0x3b8]
---
Predecessors: [0x374]
Successors: [0x3e4]
---
0x391 PUSH1 0x6
0x393 PUSH1 0x0
0x395 POP
0x396 PUSH1 0x0
0x398 DUP4
0x399 DUP2
0x39a MSTORE
0x39b PUSH1 0x20
0x39d ADD
0x39e SWAP1
0x39f DUP2
0x3a0 MSTORE
0x3a1 PUSH1 0x20
0x3a3 ADD
0x3a4 PUSH1 0x0
0x3a6 SHA3
0x3a7 PUSH1 0x0
0x3a9 POP
0x3aa PUSH1 0x2
0x3ac ADD
0x3ad PUSH1 0x0
0x3af POP
0x3b0 SLOAD
0x3b1 SWAP3
0x3b2 POP
0x3b3 DUP3
0x3b4 POP
0x3b5 PUSH2 0x3e4
0x3b8 JUMP
---
0x391: V364 = 0x6
0x393: V365 = 0x0
0x396: V366 = 0x0
0x39a: M[0x0] = S1
0x39b: V367 = 0x20
0x39d: V368 = ADD 0x20 0x0
0x3a0: M[0x20] = 0x6
0x3a1: V369 = 0x20
0x3a3: V370 = ADD 0x20 0x20
0x3a4: V371 = 0x0
0x3a6: V372 = SHA3 0x0 0x40
0x3a7: V373 = 0x0
0x3aa: V374 = 0x2
0x3ac: V375 = ADD 0x2 V372
0x3ad: V376 = 0x0
0x3b0: V377 = S[V375]
0x3b5: V378 = 0x3e4
0x3b8: JUMP 0x3e4
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V377, S1, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, V377, S1, 0x0]

================================

Block 0x3b9
[0x3b9:0x3d2]
---
Predecessors: [0x374]
Successors: [0x3d3, 0x3e4]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x0
0x3bc DUP3
0x3bd DUP2
0x3be MSTORE
0x3bf PUSH1 0x6
0x3c1 PUSH1 0x20
0x3c3 MSTORE
0x3c4 PUSH1 0x40
0x3c6 SWAP1
0x3c7 SHA3
0x3c8 PUSH1 0x2
0x3ca ADD
0x3cb SLOAD
0x3cc DUP4
0x3cd LT
0x3ce ISZERO
0x3cf PUSH2 0x3e4
0x3d2 JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V379 = 0x0
0x3be: M[0x0] = S1
0x3bf: V380 = 0x6
0x3c1: V381 = 0x20
0x3c3: M[0x20] = 0x6
0x3c4: V382 = 0x40
0x3c7: V383 = SHA3 0x0 0x40
0x3c8: V384 = 0x2
0x3ca: V385 = ADD 0x2 V383
0x3cb: V386 = S[V385]
0x3cd: V387 = LT S2 V386
0x3ce: V388 = ISZERO V387
0x3cf: V389 = 0x3e4
0x3d2: JUMPI 0x3e4 V388
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]

================================

Block 0x3d3
[0x3d3:0x3e3]
---
Predecessors: [0x3b9]
Successors: [0x3e4]
---
0x3d3 PUSH1 0x40
0x3d5 PUSH1 0x0
0x3d7 SWAP1
0x3d8 DUP2
0x3d9 SHA3
0x3da SWAP1
0x3db DUP4
0x3dc SWAP1
0x3dd MSTORE
0x3de PUSH1 0x2
0x3e0 ADD
0x3e1 SLOAD
0x3e2 SWAP3
0x3e3 POP
---
0x3d3: V390 = 0x40
0x3d5: V391 = 0x0
0x3d9: V392 = SHA3 0x0 0x40
0x3dd: M[0x0] = S1
0x3de: V393 = 0x2
0x3e0: V394 = ADD 0x2 V392
0x3e1: V395 = S[V394]
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V395, S1, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, V395, S1, 0x0]

================================

Block 0x3e4
[0x3e4:0x3ef]
---
Predecessors: [0x391, 0x3b9, 0x3d3]
Successors: [0xee]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x1
0x3e7 SWAP2
0x3e8 SWAP1
0x3e9 SWAP2
0x3ea ADD
0x3eb SWAP1
0x3ec PUSH2 0xee
0x3ef JUMP
---
0x3e4: JUMPDEST 
0x3e5: V396 = 0x1
0x3ea: V397 = ADD 0x1 S1
0x3ec: V398 = 0xee
0x3ef: JUMP 0xee
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [V397, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, V397, 0x0]

================================

Block 0x3f0
[0x3f0:0x404]
---
Predecessors: [0x302]
Successors: [0x405]
---
0x3f0 JUMPDEST
0x3f1 POP
0x3f2 POP
0x3f3 PUSH1 0x4
0x3f5 SLOAD
0x3f6 PUSH1 0x0
0x3f8 SWAP1
0x3f9 PUSH1 0x1
0x3fb PUSH1 0xa0
0x3fd PUSH1 0x2
0x3ff EXP
0x400 SUB
0x401 ADDRESS
0x402 AND
0x403 BALANCE
0x404 DIV
---
0x3f0: JUMPDEST 
0x3f3: V399 = 0x4
0x3f5: V400 = S[0x4]
0x3f6: V401 = 0x0
0x3f9: V402 = 0x1
0x3fb: V403 = 0xa0
0x3fd: V404 = 0x2
0x3ff: V405 = EXP 0x2 0xa0
0x400: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x401: V407 = ADDRESS
0x402: V408 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x403: V409 = BALANCE V408
0x404: V410 = DIV V409 V400
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0, V410]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, 0x0, V410]

================================

Block 0x405
[0x405:0x40f]
---
Predecessors: [0x3f0, 0x410]
Successors: [0x410, 0x4c3]
---
0x405 JUMPDEST
0x406 PUSH1 0x4
0x408 SLOAD
0x409 DUP3
0x40a LT
0x40b ISZERO
0x40c PUSH2 0x4c3
0x40f JUMPI
---
0x405: JUMPDEST 
0x406: V411 = 0x4
0x408: V412 = S[0x4]
0x40a: V413 = LT S1 V412
0x40b: V414 = ISZERO V413
0x40c: V415 = 0x4c3
0x40f: JUMPI 0x4c3 V414
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]

================================

Block 0x410
[0x410:0x4c2]
---
Predecessors: [0x405]
Successors: [0x405]
---
0x410 PUSH1 0x0
0x412 DUP3
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x7
0x417 PUSH1 0x20
0x419 MSTORE
0x41a PUSH1 0x40
0x41c DUP1
0x41d MLOAD
0x41e SWAP1
0x41f DUP3
0x420 SHA3
0x421 PUSH1 0x1
0x423 ADD
0x424 SLOAD
0x425 PUSH1 0x1
0x427 PUSH1 0xa0
0x429 PUSH1 0x2
0x42b EXP
0x42c SUB
0x42d AND
0x42e SWAP2
0x42f SWAP1
0x430 DUP4
0x431 SWAP1
0x432 DUP3
0x433 DUP2
0x434 DUP2
0x435 DUP2
0x436 DUP6
0x437 DUP9
0x438 DUP4
0x439 CALL
0x43a SWAP4
0x43b POP
0x43c POP
0x43d POP
0x43e POP
0x43f POP
0x440 PUSH1 0x7
0x442 PUSH1 0x0
0x444 POP
0x445 PUSH1 0x0
0x447 DUP4
0x448 DUP2
0x449 MSTORE
0x44a PUSH1 0x20
0x44c ADD
0x44d SWAP1
0x44e DUP2
0x44f MSTORE
0x450 PUSH1 0x20
0x452 ADD
0x453 PUSH1 0x0
0x455 SHA3
0x456 PUSH1 0x0
0x458 POP
0x459 PUSH1 0x1
0x45b ADD
0x45c PUSH1 0x0
0x45e SWAP1
0x45f SLOAD
0x460 SWAP1
0x461 PUSH2 0x100
0x464 EXP
0x465 SWAP1
0x466 DIV
0x467 PUSH1 0x1
0x469 PUSH1 0xa0
0x46b PUSH1 0x2
0x46d EXP
0x46e SUB
0x46f AND
0x470 PUSH1 0x1
0x472 PUSH1 0xa0
0x474 PUSH1 0x2
0x476 EXP
0x477 SUB
0x478 AND
0x479 PUSH32 0x16a74b524ea11b2247b00b53def27cdfee7b817e40dd2810aa14e4ec915c6a4e
0x49a DUP3
0x49b TIMESTAMP
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 DUP4
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 PUSH1 0x20
0x4a5 ADD
0x4a6 DUP3
0x4a7 DUP2
0x4a8 MSTORE
0x4a9 PUSH1 0x20
0x4ab ADD
0x4ac SWAP3
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 DUP1
0x4b4 SWAP2
0x4b5 SUB
0x4b6 SWAP1
0x4b7 LOG2
0x4b8 PUSH1 0x1
0x4ba SWAP2
0x4bb SWAP1
0x4bc SWAP2
0x4bd ADD
0x4be SWAP1
0x4bf PUSH2 0x405
0x4c2 JUMP
---
0x410: V416 = 0x0
0x414: M[0x0] = S1
0x415: V417 = 0x7
0x417: V418 = 0x20
0x419: M[0x20] = 0x7
0x41a: V419 = 0x40
0x41d: V420 = M[0x40]
0x420: V421 = SHA3 0x0 0x40
0x421: V422 = 0x1
0x423: V423 = ADD 0x1 V421
0x424: V424 = S[V423]
0x425: V425 = 0x1
0x427: V426 = 0xa0
0x429: V427 = 0x2
0x42b: V428 = EXP 0x2 0xa0
0x42c: V429 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x439: V431 = CALL 0x0 V430 S0 V420 0x0 V420 0x0
0x440: V432 = 0x7
0x442: V433 = 0x0
0x445: V434 = 0x0
0x449: M[0x0] = S1
0x44a: V435 = 0x20
0x44c: V436 = ADD 0x20 0x0
0x44f: M[0x20] = 0x7
0x450: V437 = 0x20
0x452: V438 = ADD 0x20 0x20
0x453: V439 = 0x0
0x455: V440 = SHA3 0x0 0x40
0x456: V441 = 0x0
0x459: V442 = 0x1
0x45b: V443 = ADD 0x1 V440
0x45c: V444 = 0x0
0x45f: V445 = S[V443]
0x461: V446 = 0x100
0x464: V447 = EXP 0x100 0x0
0x466: V448 = DIV V445 0x1
0x467: V449 = 0x1
0x469: V450 = 0xa0
0x46b: V451 = 0x2
0x46d: V452 = EXP 0x2 0xa0
0x46e: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46f: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x470: V455 = 0x1
0x472: V456 = 0xa0
0x474: V457 = 0x2
0x476: V458 = EXP 0x2 0xa0
0x477: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x478: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x479: V461 = 0x16a74b524ea11b2247b00b53def27cdfee7b817e40dd2810aa14e4ec915c6a4e
0x49b: V462 = TIMESTAMP
0x49c: V463 = 0x40
0x49e: V464 = M[0x40]
0x4a2: M[V464] = S0
0x4a3: V465 = 0x20
0x4a5: V466 = ADD 0x20 V464
0x4a8: M[V466] = V462
0x4a9: V467 = 0x20
0x4ab: V468 = ADD 0x20 V466
0x4b0: V469 = 0x40
0x4b2: V470 = M[0x40]
0x4b5: V471 = SUB V468 V470
0x4b7: LOG V470 V471 0x16a74b524ea11b2247b00b53def27cdfee7b817e40dd2810aa14e4ec915c6a4e V460
0x4b8: V472 = 0x1
0x4bd: V473 = ADD 0x1 S1
0x4bf: V474 = 0x405
0x4c2: JUMP 0x405
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 2
Stack additions: [V473, S0]
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, V473, S0]

================================

Block 0x4c3
[0x4c3:0x4d5]
---
Predecessors: [0x405]
Successors: [0x4d6]
---
0x4c3 JUMPDEST
0x4c4 PUSH2 0x4d6
0x4c7 PUSH1 0x0
0x4c9 PUSH1 0x3
0x4cb DUP2
0x4cc SWAP1
0x4cd SSTORE
0x4ce PUSH1 0x4
0x4d0 SSTORE
0x4d1 TIMESTAMP
0x4d2 PUSH1 0x2
0x4d4 SSTORE
0x4d5 JUMP
---
0x4c3: JUMPDEST 
0x4c4: V475 = 0x4d6
0x4c7: V476 = 0x0
0x4c9: V477 = 0x3
0x4cd: S[0x3] = 0x0
0x4ce: V478 = 0x4
0x4d0: S[0x4] = 0x0
0x4d1: V479 = TIMESTAMP
0x4d2: V480 = 0x2
0x4d4: S[0x2] = V479
0x4d5: JUMP 0x4d6
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]

================================

Block 0x4d6
[0x4d6:0x4da]
---
Predecessors: [0xda, 0x4c3]
Successors: [0x1fd, 0x213, 0x221]
---
0x4d6 JUMPDEST
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da JUMP
---
0x4d6: JUMPDEST 
0x4da: JUMP {0x1fd, 0x213, 0x221}
---
Entry stack: [V10, S5, S4, {0x1fd, 0x213, 0x221}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, S4]

================================

Block 0x4db
[0x4db:0x4e9]
---
Predecessors: [0xf9]
Successors: [0x4ea]
---
0x4db JUMPDEST
0x4dc POP
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 ADDRESS
0x4e6 AND
0x4e7 BALANCE
0x4e8 DUP2
0x4e9 SUB
---
0x4db: JUMPDEST 
0x4dd: V481 = 0x1
0x4df: V482 = 0xa0
0x4e1: V483 = 0x2
0x4e3: V484 = EXP 0x2 0xa0
0x4e4: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e5: V486 = ADDRESS
0x4e6: V487 = AND V486 0xffffffffffffffffffffffffffffffffffffffff
0x4e7: V488 = BALANCE V487
0x4e9: V489 = SUB V99 V488
---
Entry stack: [V10, S8, S7, {0x1fd, 0x213, 0x221}, S5, S4, 0x0, 0x374, V99, 0x0]
Stack pops: 2
Stack additions: [S1, V489]
Exit stack: [V10, S8, S7, {0x1fd, 0x213, 0x221}, S5, S4, 0x0, 0x374, V99, V489]

================================

Block 0x4ea
[0x4ea:0x4ee]
---
Predecessors: [0x11d, 0x4db]
Successors: [0x374]
---
0x4ea JUMPDEST
0x4eb SWAP2
0x4ec SWAP1
0x4ed POP
0x4ee JUMP
---
0x4ea: JUMPDEST 
0x4ee: JUMP 0x374
---
Entry stack: [V10, S8, S7, {0x1fd, 0x213, 0x221}, S5, S4, 0x0, 0x374, V99, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S8, S7, {0x1fd, 0x213, 0x221}, S5, S4, 0x0, S0]

================================

Function 0:
Public function signature: 0x10b1f5af
Entry block: 0x8a
Exit block: 0x1fd
Body: 0x8a, 0x1fd

Function 1:
Public function signature: 0x12065fe0
Entry block: 0xa9
Exit block: 0x201
Body: 0xa9, 0xb8, 0xd3, 0x201

Function 2:
Public function signature: 0x2f13b60c
Entry block: 0xc9
Exit block: 0x201
Body: 0xc9, 0x201

Function 3:
Public function signature: 0x3f4bd063
Entry block: 0xd6
Exit block: 0x1fd
Body: 0xd6, 0xda, 0xee, 0xf9, 0x11d, 0x1fd, 0x213, 0x221, 0x230, 0x234, 0x243, 0x247, 0x2fd, 0x302, 0x30d, 0x326, 0x368, 0x374, 0x391, 0x3b9, 0x3d3, 0x3e4, 0x3f0, 0x405, 0x410, 0x4c3, 0x4d6, 0x4db, 0x4ea

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0x130
Exit block: 0x1fd
Body: 0xda, 0xee, 0xf9, 0x11d, 0x130, 0x140, 0x154, 0x15b, 0x161, 0x167, 0x1fd, 0x1ff, 0x213, 0x221, 0x230, 0x234, 0x243, 0x247, 0x2fd, 0x302, 0x30d, 0x326, 0x368, 0x374, 0x391, 0x3b9, 0x3d3, 0x3e4, 0x3f0, 0x405, 0x410, 0x4c3, 0x4d6, 0x4db, 0x4ea

Function 5:
Public function signature: 0x5f8d96de
Entry block: 0x16e
Exit block: 0x201
Body: 0x16e, 0x201

Function 6:
Public function signature: 0x740c0c44
Entry block: 0x179
Exit block: 0x201
Body: 0x179, 0x201

Function 7:
Public function signature: 0x79ff433d
Entry block: 0x184
Exit block: 0x1fd
Body: 0x184, 0x1fd

Function 8:
Public function signature: 0xaeb7d9cc
Entry block: 0x1b8
Exit block: 0x1fd
Body: 0x1b8, 0x1fd

Function 9:
Public function signature: 0xd2d6a872
Entry block: 0x1e5
Exit block: 0x1fd
Body: 0xda, 0xee, 0xf9, 0x11d, 0x1e5, 0x1f6, 0x1fd, 0x213, 0x221, 0x230, 0x234, 0x243, 0x247, 0x2fd, 0x302, 0x30d, 0x326, 0x368, 0x374, 0x391, 0x3b9, 0x3d3, 0x3e4, 0x3f0, 0x405, 0x410, 0x4c3, 0x4d6, 0x4db, 0x4ea

Function 10:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

