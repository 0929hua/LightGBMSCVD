Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa2]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x193b135b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa2
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x193b135b
0x3b: V13 = EQ V11 0x193b135b
0x3c: V14 = 0xa2
0x3f: JUMPI 0xa2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xc3]
---
0x40 DUP1
0x41 PUSH4 0x1c02708d
0x46 EQ
0x47 PUSH2 0xc3
0x4a JUMPI
---
0x41: V15 = 0x1c02708d
0x46: V16 = EQ 0x1c02708d V11
0x47: V17 = 0xc3
0x4a: JUMPI 0xc3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xd8]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0xd8
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0xd8
0x55: JUMPI 0xd8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xed]
---
0x56 DUP1
0x57 PUSH4 0x5e572df6
0x5c EQ
0x5d PUSH2 0xed
0x60 JUMPI
---
0x57: V21 = 0x5e572df6
0x5c: V22 = EQ 0x5e572df6 V11
0x5d: V23 = 0xed
0x60: JUMPI 0xed V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x98]
---
0x61 DUP1
0x62 PUSH4 0xaa6ca808
0x67 EQ
0x68 PUSH2 0x98
0x6b JUMPI
---
0x62: V24 = 0xaa6ca808
0x67: V25 = EQ 0xaa6ca808 V11
0x68: V26 = 0x98
0x6b: JUMPI 0x98 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x105]
---
0x6c DUP1
0x6d PUSH4 0xbd814b78
0x72 EQ
0x73 PUSH2 0x105
0x76 JUMPI
---
0x6d: V27 = 0xbd814b78
0x72: V28 = EQ 0xbd814b78 V11
0x73: V29 = 0x105
0x76: JUMPI 0x105 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x126]
---
0x77 DUP1
0x78 PUSH4 0xcae539ce
0x7d EQ
0x7e PUSH2 0x126
0x81 JUMPI
---
0x78: V30 = 0xcae539ce
0x7d: V31 = EQ 0xcae539ce V11
0x7e: V32 = 0x126
0x81: JUMPI 0x126 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x13e]
---
0x82 DUP1
0x83 PUSH4 0xe58fc54c
0x88 EQ
0x89 PUSH2 0x13e
0x8c JUMPI
---
0x83: V33 = 0xe58fc54c
0x88: V34 = EQ 0xe58fc54c V11
0x89: V35 = 0x13e
0x8c: JUMPI 0x13e V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x173]
---
0x8d DUP1
0x8e PUSH4 0xf2fde38b
0x93 EQ
0x94 PUSH2 0x173
0x97 JUMPI
---
0x8e: V36 = 0xf2fde38b
0x93: V37 = EQ 0xf2fde38b V11
0x94: V38 = 0x173
0x97: JUMPI 0x173 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x0, 0x61, 0x8d]
Successors: [0x194]
---
0x98 JUMPDEST
0x99 PUSH2 0xa0
0x9c PUSH2 0x194
0x9f JUMP
---
0x98: JUMPDEST 
0x99: V39 = 0xa0
0x9c: V40 = 0x194
0x9f: JUMP 0x194
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xa0
[0xa0:0xa1]
---
Predecessors: [0x279, 0x296, 0x334, 0x34f, 0x36b, 0x3b1, 0x559]
Successors: []
---
0xa0 JUMPDEST
0xa1 STOP
---
0xa0: JUMPDEST 
0xa1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0xd]
Successors: [0xaa, 0xae]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 DUP1
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa2: JUMPDEST 
0xa3: V41 = CALLVALUE
0xa5: V42 = ISZERO V41
0xa6: V43 = 0xae
0xa9: JUMPI 0xae V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa2]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V44 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0xae
[0xae:0xc2]
---
Predecessors: [0xa2]
Successors: [0x27f]
---
0xae JUMPDEST
0xaf POP
0xb0 PUSH2 0xa0
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb PUSH1 0x4
0xbd CALLDATALOAD
0xbe AND
0xbf PUSH2 0x27f
0xc2 JUMP
---
0xae: JUMPDEST 
0xb0: V45 = 0xa0
0xb3: V46 = 0x1
0xb5: V47 = 0xa0
0xb7: V48 = 0x2
0xb9: V49 = EXP 0x2 0xa0
0xba: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V51 = 0x4
0xbd: V52 = CALLDATALOAD 0x4
0xbe: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V54 = 0x27f
0xc2: JUMP 0x27f
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0xa0, V53]
Exit stack: [V11, 0xa0, V53]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0x40]
Successors: [0xcb, 0xcf]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 DUP1
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc3: JUMPDEST 
0xc4: V55 = CALLVALUE
0xc6: V56 = ISZERO V55
0xc7: V57 = 0xcf
0xca: JUMPI 0xcf V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V55]
Exit stack: [V11, V55]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc3]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V58 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V11, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V55]

================================

Block 0xcf
[0xcf:0xd7]
---
Predecessors: [0xc3]
Successors: [0x2c5]
---
0xcf JUMPDEST
0xd0 POP
0xd1 PUSH2 0xa0
0xd4 PUSH2 0x2c5
0xd7 JUMP
---
0xcf: JUMPDEST 
0xd1: V59 = 0xa0
0xd4: V60 = 0x2c5
0xd7: JUMP 0x2c5
---
Entry stack: [V11, V55]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0x4b]
Successors: [0xe0, 0xe4]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda DUP1
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd8: JUMPDEST 
0xd9: V61 = CALLVALUE
0xdb: V62 = ISZERO V61
0xdc: V63 = 0xe4
0xdf: JUMPI 0xe4 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd8]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V64 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xe4
[0xe4:0xec]
---
Predecessors: [0xd8]
Successors: [0x2df]
---
0xe4 JUMPDEST
0xe5 POP
0xe6 PUSH2 0xa0
0xe9 PUSH2 0x2df
0xec JUMP
---
0xe4: JUMPDEST 
0xe6: V65 = 0xa0
0xe9: V66 = 0x2df
0xec: JUMP 0x2df
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0x56]
Successors: [0xf5, 0xf9]
---
0xed JUMPDEST
0xee CALLVALUE
0xef DUP1
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xed: JUMPDEST 
0xee: V67 = CALLVALUE
0xf0: V68 = ISZERO V67
0xf1: V69 = 0xf9
0xf4: JUMPI 0xf9 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xed]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V70 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xf9
[0xf9:0x104]
---
Predecessors: [0xed]
Successors: [0x338]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH2 0xa0
0xfe PUSH1 0x4
0x100 CALLDATALOAD
0x101 PUSH2 0x338
0x104 JUMP
---
0xf9: JUMPDEST 
0xfb: V71 = 0xa0
0xfe: V72 = 0x4
0x100: V73 = CALLDATALOAD 0x4
0x101: V74 = 0x338
0x104: JUMP 0x338
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0xa0, V73]
Exit stack: [V11, 0xa0, V73]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x6c]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V75 = CALLVALUE
0x108: V76 = ISZERO V75
0x109: V77 = 0x111
0x10c: JUMPI 0x111 V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V11, V75]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V78 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75]

================================

Block 0x111
[0x111:0x125]
---
Predecessors: [0x105]
Successors: [0x354]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0xa0
0x116 PUSH1 0x1
0x118 PUSH1 0xa0
0x11a PUSH1 0x2
0x11c EXP
0x11d SUB
0x11e PUSH1 0x4
0x120 CALLDATALOAD
0x121 AND
0x122 PUSH2 0x354
0x125 JUMP
---
0x111: JUMPDEST 
0x113: V79 = 0xa0
0x116: V80 = 0x1
0x118: V81 = 0xa0
0x11a: V82 = 0x2
0x11c: V83 = EXP 0x2 0xa0
0x11d: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V85 = 0x4
0x120: V86 = CALLDATALOAD 0x4
0x121: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x122: V88 = 0x354
0x125: JUMP 0x354
---
Entry stack: [V11, V75]
Stack pops: 1
Stack additions: [0xa0, V87]
Exit stack: [V11, 0xa0, V87]

================================

Block 0x126
[0x126:0x12d]
---
Predecessors: [0x77]
Successors: [0x12e, 0x132]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 DUP1
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x126: JUMPDEST 
0x127: V89 = CALLVALUE
0x129: V90 = ISZERO V89
0x12a: V91 = 0x132
0x12d: JUMPI 0x132 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x126]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V92 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x132
[0x132:0x13d]
---
Predecessors: [0x126]
Successors: [0x39a]
---
0x132 JUMPDEST
0x133 POP
0x134 PUSH2 0xa0
0x137 PUSH1 0x4
0x139 CALLDATALOAD
0x13a PUSH2 0x39a
0x13d JUMP
---
0x132: JUMPDEST 
0x134: V93 = 0xa0
0x137: V94 = 0x4
0x139: V95 = CALLDATALOAD 0x4
0x13a: V96 = 0x39a
0x13d: JUMP 0x39a
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0xa0, V95]
Exit stack: [V11, 0xa0, V95]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x82]
Successors: [0x146, 0x14a]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 DUP1
0x141 ISZERO
0x142 PUSH2 0x14a
0x145 JUMPI
---
0x13e: JUMPDEST 
0x13f: V97 = CALLVALUE
0x141: V98 = ISZERO V97
0x142: V99 = 0x14a
0x145: JUMPI 0x14a V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V97]
Exit stack: [V11, V97]

================================

Block 0x146
[0x146:0x149]
---
Predecessors: [0x13e]
Successors: []
---
0x146 PUSH1 0x0
0x148 DUP1
0x149 REVERT
---
0x146: V100 = 0x0
0x149: REVERT 0x0 0x0
---
Entry stack: [V11, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V97]

================================

Block 0x14a
[0x14a:0x15e]
---
Predecessors: [0x13e]
Successors: [0x3b6]
---
0x14a JUMPDEST
0x14b POP
0x14c PUSH2 0x15f
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 PUSH1 0x4
0x159 CALLDATALOAD
0x15a AND
0x15b PUSH2 0x3b6
0x15e JUMP
---
0x14a: JUMPDEST 
0x14c: V101 = 0x15f
0x14f: V102 = 0x1
0x151: V103 = 0xa0
0x153: V104 = 0x2
0x155: V105 = EXP 0x2 0xa0
0x156: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V107 = 0x4
0x159: V108 = CALLDATALOAD 0x4
0x15a: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V110 = 0x3b6
0x15e: JUMP 0x3b6
---
Entry stack: [V11, V97]
Stack pops: 1
Stack additions: [0x15f, V109]
Exit stack: [V11, 0x15f, V109]

================================

Block 0x15f
[0x15f:0x172]
---
Predecessors: [0x500]
Successors: []
---
0x15f JUMPDEST
0x160 PUSH1 0x40
0x162 DUP1
0x163 MLOAD
0x164 SWAP2
0x165 ISZERO
0x166 ISZERO
0x167 DUP3
0x168 MSTORE
0x169 MLOAD
0x16a SWAP1
0x16b DUP2
0x16c SWAP1
0x16d SUB
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 RETURN
---
0x15f: JUMPDEST 
0x160: V111 = 0x40
0x163: V112 = M[0x40]
0x165: V113 = ISZERO V447
0x166: V114 = ISZERO V113
0x168: M[V112] = V114
0x169: V115 = M[0x40]
0x16d: V116 = SUB V112 V115
0x16e: V117 = 0x20
0x170: V118 = ADD 0x20 V116
0x172: RETURN V115 V118
---
Entry stack: [V11, V447]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x8d]
Successors: [0x17b, 0x17f]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 DUP1
0x176 ISZERO
0x177 PUSH2 0x17f
0x17a JUMPI
---
0x173: JUMPDEST 
0x174: V119 = CALLVALUE
0x176: V120 = ISZERO V119
0x177: V121 = 0x17f
0x17a: JUMPI 0x17f V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, V119]

================================

Block 0x17b
[0x17b:0x17e]
---
Predecessors: [0x173]
Successors: []
---
0x17b PUSH1 0x0
0x17d DUP1
0x17e REVERT
---
0x17b: V122 = 0x0
0x17e: REVERT 0x0 0x0
---
Entry stack: [V11, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V119]

================================

Block 0x17f
[0x17f:0x193]
---
Predecessors: [0x173]
Successors: [0x50a]
---
0x17f JUMPDEST
0x180 POP
0x181 PUSH2 0xa0
0x184 PUSH1 0x1
0x186 PUSH1 0xa0
0x188 PUSH1 0x2
0x18a EXP
0x18b SUB
0x18c PUSH1 0x4
0x18e CALLDATALOAD
0x18f AND
0x190 PUSH2 0x50a
0x193 JUMP
---
0x17f: JUMPDEST 
0x181: V123 = 0xa0
0x184: V124 = 0x1
0x186: V125 = 0xa0
0x188: V126 = 0x2
0x18a: V127 = EXP 0x2 0xa0
0x18b: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V129 = 0x4
0x18e: V130 = CALLDATALOAD 0x4
0x18f: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x190: V132 = 0x50a
0x193: JUMP 0x50a
---
Entry stack: [V11, V119]
Stack pops: 1
Stack additions: [0xa0, V131]
Exit stack: [V11, 0xa0, V131]

================================

Block 0x194
[0x194:0x199]
---
Predecessors: [0x98]
Successors: [0x19a]
---
0x194 JUMPDEST
0x195 PUSH1 0x0
0x197 DUP1
0x198 DUP1
0x199 DUP1
---
0x194: JUMPDEST 
0x195: V133 = 0x0
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xa0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x19a
[0x19a:0x1a4]
---
Predecessors: [0x194, 0x200]
Successors: [0x1a5, 0x20e]
---
0x19a JUMPDEST
0x19b PUSH1 0x4
0x19d SLOAD
0x19e DUP5
0x19f LT
0x1a0 ISZERO
0x1a1 PUSH2 0x20e
0x1a4 JUMPI
---
0x19a: JUMPDEST 
0x19b: V134 = 0x4
0x19d: V135 = S[0x4]
0x19f: V136 = LT S3 V135
0x1a0: V137 = ISZERO V136
0x1a1: V138 = 0x20e
0x1a4: JUMPI 0x20e V137
---
Entry stack: [V11, 0xa0, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa0, S3, S2, 0x0, 0x0]

================================

Block 0x1a5
[0x1a5:0x1c0]
---
Predecessors: [0x19a]
Successors: [0x55c]
---
0x1a5 PUSH1 0x2
0x1a7 SLOAD
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab CALLER
0x1ac SWAP2
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 AND
0x1b8 SWAP2
0x1b9 AND
0x1ba PUSH2 0x1c1
0x1bd PUSH2 0x55c
0x1c0 JUMP
---
0x1a5: V139 = 0x2
0x1a7: V140 = S[0x2]
0x1a8: V141 = 0x1
0x1aa: V142 = S[0x1]
0x1ab: V143 = CALLER
0x1ad: V144 = 0x1
0x1af: V145 = 0xa0
0x1b1: V146 = 0x2
0x1b3: V147 = EXP 0x2 0xa0
0x1b4: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b7: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x1b9: V150 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V151 = 0x1c1
0x1bd: V152 = 0x55c
0x1c0: JUMP 0x55c
---
Entry stack: [V11, 0xa0, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [V143, V149, V150, 0x1c1]
Exit stack: [V11, 0xa0, S3, S2, 0x0, 0x0, V143, V149, V150, 0x1c1]

================================

Block 0x1c1
[0x1c1:0x1f6]
---
Predecessors: [0x55c]
Successors: [0x1f7, 0x200]
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x1
0x1c4 PUSH1 0xa0
0x1c6 PUSH1 0x2
0x1c8 EXP
0x1c9 SUB
0x1ca SWAP4
0x1cb DUP5
0x1cc AND
0x1cd DUP2
0x1ce MSTORE
0x1cf SWAP2
0x1d0 DUP4
0x1d1 AND
0x1d2 PUSH1 0x20
0x1d4 DUP4
0x1d5 ADD
0x1d6 MSTORE
0x1d7 SWAP1
0x1d8 SWAP2
0x1d9 AND
0x1da PUSH1 0x40
0x1dc DUP1
0x1dd DUP4
0x1de ADD
0x1df SWAP2
0x1e0 SWAP1
0x1e1 SWAP2
0x1e2 MSTORE
0x1e3 MLOAD
0x1e4 SWAP1
0x1e5 DUP2
0x1e6 SWAP1
0x1e7 SUB
0x1e8 PUSH1 0x60
0x1ea ADD
0x1eb SWAP1
0x1ec PUSH1 0x0
0x1ee CREATE
0x1ef DUP1
0x1f0 ISZERO
0x1f1 DUP1
0x1f2 ISZERO
0x1f3 PUSH2 0x200
0x1f6 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V153 = 0x1
0x1c4: V154 = 0xa0
0x1c6: V155 = 0x2
0x1c8: V156 = EXP 0x2 0xa0
0x1c9: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cc: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x1ce: M[V484] = V158
0x1d1: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x1d2: V160 = 0x20
0x1d5: V161 = ADD V484 0x20
0x1d6: M[V161] = V159
0x1d9: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x1da: V163 = 0x40
0x1de: V164 = ADD V484 0x40
0x1e2: M[V164] = V162
0x1e3: V165 = M[0x40]
0x1e7: V166 = SUB V484 V165
0x1e8: V167 = 0x60
0x1ea: V168 = ADD 0x60 V166
0x1ec: V169 = 0x0
0x1ee: V170 = CREATE 0x0 V165 V168
0x1f0: V171 = ISZERO V170
0x1f2: V172 = ISZERO V171
0x1f3: V173 = 0x200
0x1f6: JUMPI 0x200 V172
---
Entry stack: [V11, 0xa0, S7, S6, 0x0, 0x0, V143, V149, V150, V484]
Stack pops: 4
Stack additions: [V170, V171]
Exit stack: [V11, 0xa0, S7, S6, 0x0, 0x0, V170, V171]

================================

Block 0x1f7
[0x1f7:0x1ff]
---
Predecessors: [0x1c1]
Successors: []
---
0x1f7 RETURNDATASIZE
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb RETURNDATACOPY
0x1fc RETURNDATASIZE
0x1fd PUSH1 0x0
0x1ff REVERT
---
0x1f7: V174 = RETURNDATASIZE
0x1f8: V175 = 0x0
0x1fb: RETURNDATACOPY 0x0 0x0 V174
0x1fc: V176 = RETURNDATASIZE
0x1fd: V177 = 0x0
0x1ff: REVERT 0x0 V176
---
Entry stack: [V11, 0xa0, S5, S4, 0x0, 0x0, V170, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, S5, S4, 0x0, 0x0, V170, V171]

================================

Block 0x200
[0x200:0x20d]
---
Predecessors: [0x1c1]
Successors: [0x19a]
---
0x200 JUMPDEST
0x201 POP
0x202 PUSH1 0x1
0x204 SWAP1
0x205 SWAP5
0x206 ADD
0x207 SWAP4
0x208 SWAP3
0x209 POP
0x20a PUSH2 0x19a
0x20d JUMP
---
0x200: JUMPDEST 
0x202: V178 = 0x1
0x206: V179 = ADD S5 0x1
0x20a: V180 = 0x19a
0x20d: JUMP 0x19a
---
Entry stack: [V11, 0xa0, S5, S4, 0x0, 0x0, V170, V171]
Stack pops: 6
Stack additions: [V179, S1, S3, S2]
Exit stack: [V11, 0xa0, V179, V170, 0x0, 0x0]

================================

Block 0x20e
[0x20e:0x212]
---
Predecessors: [0x19a]
Successors: [0x213]
---
0x20e JUMPDEST
0x20f PUSH1 0x0
0x211 SWAP2
0x212 POP
---
0x20e: JUMPDEST 
0x20f: V181 = 0x0
---
Entry stack: [V11, 0xa0, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0xa0, S3, S2, 0x0, 0x0]

================================

Block 0x213
[0x213:0x21d]
---
Predecessors: [0x20e, 0x26b]
Successors: [0x21e, 0x279]
---
0x213 JUMPDEST
0x214 PUSH1 0x3
0x216 SLOAD
0x217 DUP3
0x218 LT
0x219 ISZERO
0x21a PUSH2 0x279
0x21d JUMPI
---
0x213: JUMPDEST 
0x214: V182 = 0x3
0x216: V183 = S[0x3]
0x218: V184 = LT S1 V183
0x219: V185 = ISZERO V184
0x21a: V186 = 0x279
0x21d: JUMPI 0x279 V185
---
Entry stack: [V11, 0xa0, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa0, S3, S2, S1, S0]

================================

Block 0x21e
[0x21e:0x237]
---
Predecessors: [0x213]
Successors: [0x56c]
---
0x21e PUSH1 0x2
0x220 SLOAD
0x221 PUSH1 0x1
0x223 SLOAD
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c SWAP2
0x22d DUP3
0x22e AND
0x22f SWAP2
0x230 AND
0x231 PUSH2 0x238
0x234 PUSH2 0x56c
0x237 JUMP
---
0x21e: V187 = 0x2
0x220: V188 = S[0x2]
0x221: V189 = 0x1
0x223: V190 = S[0x1]
0x224: V191 = 0x1
0x226: V192 = 0xa0
0x228: V193 = 0x2
0x22a: V194 = EXP 0x2 0xa0
0x22b: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x230: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x231: V198 = 0x238
0x234: V199 = 0x56c
0x237: JUMP 0x56c
---
Entry stack: [V11, 0xa0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V196, V197, 0x238]
Exit stack: [V11, 0xa0, S3, S2, S1, S0, V196, V197, 0x238]

================================

Block 0x238
[0x238:0x261]
---
Predecessors: [0x56c]
Successors: [0x262, 0x26b]
---
0x238 JUMPDEST
0x239 PUSH1 0x1
0x23b PUSH1 0xa0
0x23d PUSH1 0x2
0x23f EXP
0x240 SUB
0x241 SWAP3
0x242 DUP4
0x243 AND
0x244 DUP2
0x245 MSTORE
0x246 SWAP2
0x247 AND
0x248 PUSH1 0x20
0x24a DUP3
0x24b ADD
0x24c MSTORE
0x24d PUSH1 0x40
0x24f DUP1
0x250 MLOAD
0x251 SWAP2
0x252 DUP3
0x253 SWAP1
0x254 SUB
0x255 ADD
0x256 SWAP1
0x257 PUSH1 0x0
0x259 CREATE
0x25a DUP1
0x25b ISZERO
0x25c DUP1
0x25d ISZERO
0x25e PUSH2 0x26b
0x261 JUMPI
---
0x238: JUMPDEST 
0x239: V200 = 0x1
0x23b: V201 = 0xa0
0x23d: V202 = 0x2
0x23f: V203 = EXP 0x2 0xa0
0x240: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x245: M[V489] = V205
0x247: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x248: V207 = 0x20
0x24b: V208 = ADD V489 0x20
0x24c: M[V208] = V206
0x24d: V209 = 0x40
0x250: V210 = M[0x40]
0x254: V211 = SUB V489 V210
0x255: V212 = ADD V211 0x40
0x257: V213 = 0x0
0x259: V214 = CREATE 0x0 V210 V212
0x25b: V215 = ISZERO V214
0x25d: V216 = ISZERO V215
0x25e: V217 = 0x26b
0x261: JUMPI 0x26b V216
---
Entry stack: [V11, 0xa0, S6, S5, S4, S3, V196, V197, V489]
Stack pops: 3
Stack additions: [V214, V215]
Exit stack: [V11, 0xa0, S6, S5, S4, S3, V214, V215]

================================

Block 0x262
[0x262:0x26a]
---
Predecessors: [0x238]
Successors: []
---
0x262 RETURNDATASIZE
0x263 PUSH1 0x0
0x265 DUP1
0x266 RETURNDATACOPY
0x267 RETURNDATASIZE
0x268 PUSH1 0x0
0x26a REVERT
---
0x262: V218 = RETURNDATASIZE
0x263: V219 = 0x0
0x266: RETURNDATACOPY 0x0 0x0 V218
0x267: V220 = RETURNDATASIZE
0x268: V221 = 0x0
0x26a: REVERT 0x0 V220
---
Entry stack: [V11, 0xa0, S5, S4, S3, S2, V214, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, S5, S4, S3, S2, V214, V215]

================================

Block 0x26b
[0x26b:0x278]
---
Predecessors: [0x238]
Successors: [0x213]
---
0x26b JUMPDEST
0x26c POP
0x26d PUSH1 0x1
0x26f SWAP1
0x270 SWAP3
0x271 ADD
0x272 SWAP2
0x273 SWAP1
0x274 POP
0x275 PUSH2 0x213
0x278 JUMP
---
0x26b: JUMPDEST 
0x26d: V222 = 0x1
0x271: V223 = ADD S3 0x1
0x275: V224 = 0x213
0x278: JUMP 0x213
---
Entry stack: [V11, 0xa0, S5, S4, S3, S2, V214, V215]
Stack pops: 4
Stack additions: [V223, S1]
Exit stack: [V11, 0xa0, S5, S4, V223, V214]

================================

Block 0x279
[0x279:0x27e]
---
Predecessors: [0x213]
Successors: [0xa0]
---
0x279 JUMPDEST
0x27a POP
0x27b POP
0x27c POP
0x27d POP
0x27e JUMP
---
0x279: JUMPDEST 
0x27e: JUMP 0xa0
---
Entry stack: [V11, 0xa0, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x27f
[0x27f:0x291]
---
Predecessors: [0xae]
Successors: [0x292, 0x296]
---
0x27f JUMPDEST
0x280 PUSH1 0x0
0x282 SLOAD
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b AND
0x28c CALLER
0x28d EQ
0x28e PUSH2 0x296
0x291 JUMPI
---
0x27f: JUMPDEST 
0x280: V225 = 0x0
0x282: V226 = S[0x0]
0x283: V227 = 0x1
0x285: V228 = 0xa0
0x287: V229 = 0x2
0x289: V230 = EXP 0x2 0xa0
0x28a: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28b: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x28c: V233 = CALLER
0x28d: V234 = EQ V233 V232
0x28e: V235 = 0x296
0x291: JUMPI 0x296 V234
---
Entry stack: [V11, 0xa0, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V53]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x27f]
Successors: []
---
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x292: V236 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V53]

================================

Block 0x296
[0x296:0x2c4]
---
Predecessors: [0x27f]
Successors: [0xa0]
---
0x296 JUMPDEST
0x297 PUSH1 0x2
0x299 DUP1
0x29a SLOAD
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 NOT
0x2b1 AND
0x2b2 PUSH1 0x1
0x2b4 PUSH1 0xa0
0x2b6 PUSH1 0x2
0x2b8 EXP
0x2b9 SUB
0x2ba SWAP3
0x2bb SWAP1
0x2bc SWAP3
0x2bd AND
0x2be SWAP2
0x2bf SWAP1
0x2c0 SWAP2
0x2c1 OR
0x2c2 SWAP1
0x2c3 SSTORE
0x2c4 JUMP
---
0x296: JUMPDEST 
0x297: V237 = 0x2
0x29a: V238 = S[0x2]
0x29b: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V240 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V241 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V238
0x2b2: V242 = 0x1
0x2b4: V243 = 0xa0
0x2b6: V244 = 0x2
0x2b8: V245 = EXP 0x2 0xa0
0x2b9: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bd: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x2c1: V248 = OR V247 V241
0x2c3: S[0x2] = V248
0x2c4: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V53]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c5
[0x2c5:0x2d7]
---
Predecessors: [0xcf]
Successors: [0x2d8, 0x2dc]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x0
0x2c8 SLOAD
0x2c9 PUSH1 0x1
0x2cb PUSH1 0xa0
0x2cd PUSH1 0x2
0x2cf EXP
0x2d0 SUB
0x2d1 AND
0x2d2 CALLER
0x2d3 EQ
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V249 = 0x0
0x2c8: V250 = S[0x0]
0x2c9: V251 = 0x1
0x2cb: V252 = 0xa0
0x2cd: V253 = 0x2
0x2cf: V254 = EXP 0x2 0xa0
0x2d0: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d1: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x2d2: V257 = CALLER
0x2d3: V258 = EQ V257 V256
0x2d4: V259 = 0x2dc
0x2d7: JUMPI 0x2dc V258
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2c5]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V260 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x2dc
[0x2dc:0x2de]
---
Predecessors: [0x2c5]
Successors: []
---
0x2dc JUMPDEST
0x2dd CALLER
0x2de SELFDESTRUCT
---
0x2dc: JUMPDEST 
0x2dd: V261 = CALLER
0x2de: SELFDESTRUCT V261
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0]

================================

Block 0x2df
[0x2df:0x2f2]
---
Predecessors: [0xe4]
Successors: [0x2f3, 0x2f7]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 SLOAD
0x2e4 PUSH1 0x1
0x2e6 PUSH1 0xa0
0x2e8 PUSH1 0x2
0x2ea EXP
0x2eb SUB
0x2ec AND
0x2ed CALLER
0x2ee EQ
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V262 = 0x0
0x2e3: V263 = S[0x0]
0x2e4: V264 = 0x1
0x2e6: V265 = 0xa0
0x2e8: V266 = 0x2
0x2ea: V267 = EXP 0x2 0xa0
0x2eb: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ec: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x2ed: V270 = CALLER
0x2ee: V271 = EQ V270 V269
0x2ef: V272 = 0x2f7
0x2f2: JUMPI 0x2f7 V271
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa0, 0x0]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2df]
Successors: []
---
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 REVERT
---
0x2f3: V273 = 0x0
0x2f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, 0x0]

================================

Block 0x2f7
[0x2f7:0x32a]
---
Predecessors: [0x2df]
Successors: [0x32b, 0x334]
---
0x2f7 JUMPDEST
0x2f8 POP
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc SLOAD
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 ADDRESS
0x301 BALANCE
0x302 SWAP3
0x303 PUSH1 0x1
0x305 PUSH1 0xa0
0x307 PUSH1 0x2
0x309 EXP
0x30a SUB
0x30b SWAP1
0x30c SWAP3
0x30d AND
0x30e SWAP2
0x30f PUSH2 0x8fc
0x312 DUP5
0x313 ISZERO
0x314 MUL
0x315 SWAP2
0x316 DUP5
0x317 SWAP2
0x318 DUP2
0x319 DUP2
0x31a DUP2
0x31b DUP6
0x31c DUP9
0x31d DUP9
0x31e CALL
0x31f SWAP4
0x320 POP
0x321 POP
0x322 POP
0x323 POP
0x324 ISZERO
0x325 DUP1
0x326 ISZERO
0x327 PUSH2 0x334
0x32a JUMPI
---
0x2f7: JUMPDEST 
0x2f9: V274 = 0x0
0x2fc: V275 = S[0x0]
0x2fd: V276 = 0x40
0x2ff: V277 = M[0x40]
0x300: V278 = ADDRESS
0x301: V279 = BALANCE V278
0x303: V280 = 0x1
0x305: V281 = 0xa0
0x307: V282 = 0x2
0x309: V283 = EXP 0x2 0xa0
0x30a: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V285 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V286 = 0x8fc
0x313: V287 = ISZERO V279
0x314: V288 = MUL V287 0x8fc
0x31e: V289 = CALL V288 V285 V279 V277 0x0 V277 0x0
0x324: V290 = ISZERO V289
0x326: V291 = ISZERO V290
0x327: V292 = 0x334
0x32a: JUMPI 0x334 V291
---
Entry stack: [V11, 0xa0, 0x0]
Stack pops: 1
Stack additions: [V279, V290]
Exit stack: [V11, 0xa0, V279, V290]

================================

Block 0x32b
[0x32b:0x333]
---
Predecessors: [0x2f7]
Successors: []
---
0x32b RETURNDATASIZE
0x32c PUSH1 0x0
0x32e DUP1
0x32f RETURNDATACOPY
0x330 RETURNDATASIZE
0x331 PUSH1 0x0
0x333 REVERT
---
0x32b: V293 = RETURNDATASIZE
0x32c: V294 = 0x0
0x32f: RETURNDATACOPY 0x0 0x0 V293
0x330: V295 = RETURNDATASIZE
0x331: V296 = 0x0
0x333: REVERT 0x0 V295
---
Entry stack: [V11, 0xa0, V279, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V279, V290]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x2f7]
Successors: [0xa0]
---
0x334 JUMPDEST
0x335 POP
0x336 POP
0x337 JUMP
---
0x334: JUMPDEST 
0x337: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V279, V290]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x338
[0x338:0x34a]
---
Predecessors: [0xf9]
Successors: [0x34b, 0x34f]
---
0x338 JUMPDEST
0x339 PUSH1 0x0
0x33b SLOAD
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 AND
0x345 CALLER
0x346 EQ
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x338: JUMPDEST 
0x339: V297 = 0x0
0x33b: V298 = S[0x0]
0x33c: V299 = 0x1
0x33e: V300 = 0xa0
0x340: V301 = 0x2
0x342: V302 = EXP 0x2 0xa0
0x343: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x345: V305 = CALLER
0x346: V306 = EQ V305 V304
0x347: V307 = 0x34f
0x34a: JUMPI 0x34f V306
---
Entry stack: [V11, 0xa0, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V73]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x338]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V308 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V73]

================================

Block 0x34f
[0x34f:0x353]
---
Predecessors: [0x338]
Successors: [0xa0]
---
0x34f JUMPDEST
0x350 PUSH1 0x4
0x352 SSTORE
0x353 JUMP
---
0x34f: JUMPDEST 
0x350: V309 = 0x4
0x352: S[0x4] = V73
0x353: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x354
[0x354:0x366]
---
Predecessors: [0x111]
Successors: [0x367, 0x36b]
---
0x354 JUMPDEST
0x355 PUSH1 0x0
0x357 SLOAD
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 AND
0x361 CALLER
0x362 EQ
0x363 PUSH2 0x36b
0x366 JUMPI
---
0x354: JUMPDEST 
0x355: V310 = 0x0
0x357: V311 = S[0x0]
0x358: V312 = 0x1
0x35a: V313 = 0xa0
0x35c: V314 = 0x2
0x35e: V315 = EXP 0x2 0xa0
0x35f: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x361: V318 = CALLER
0x362: V319 = EQ V318 V317
0x363: V320 = 0x36b
0x366: JUMPI 0x36b V319
---
Entry stack: [V11, 0xa0, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V87]

================================

Block 0x367
[0x367:0x36a]
---
Predecessors: [0x354]
Successors: []
---
0x367 PUSH1 0x0
0x369 DUP1
0x36a REVERT
---
0x367: V321 = 0x0
0x36a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V87]

================================

Block 0x36b
[0x36b:0x399]
---
Predecessors: [0x354]
Successors: [0xa0]
---
0x36b JUMPDEST
0x36c PUSH1 0x1
0x36e DUP1
0x36f SLOAD
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 NOT
0x386 AND
0x387 PUSH1 0x1
0x389 PUSH1 0xa0
0x38b PUSH1 0x2
0x38d EXP
0x38e SUB
0x38f SWAP3
0x390 SWAP1
0x391 SWAP3
0x392 AND
0x393 SWAP2
0x394 SWAP1
0x395 SWAP2
0x396 OR
0x397 SWAP1
0x398 SSTORE
0x399 JUMP
---
0x36b: JUMPDEST 
0x36c: V322 = 0x1
0x36f: V323 = S[0x1]
0x370: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V325 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x386: V326 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V323
0x387: V327 = 0x1
0x389: V328 = 0xa0
0x38b: V329 = 0x2
0x38d: V330 = EXP 0x2 0xa0
0x38e: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x392: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x396: V333 = OR V332 V326
0x398: S[0x1] = V333
0x399: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V87]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x39a
[0x39a:0x3ac]
---
Predecessors: [0x132]
Successors: [0x3ad, 0x3b1]
---
0x39a JUMPDEST
0x39b PUSH1 0x0
0x39d SLOAD
0x39e PUSH1 0x1
0x3a0 PUSH1 0xa0
0x3a2 PUSH1 0x2
0x3a4 EXP
0x3a5 SUB
0x3a6 AND
0x3a7 CALLER
0x3a8 EQ
0x3a9 PUSH2 0x3b1
0x3ac JUMPI
---
0x39a: JUMPDEST 
0x39b: V334 = 0x0
0x39d: V335 = S[0x0]
0x39e: V336 = 0x1
0x3a0: V337 = 0xa0
0x3a2: V338 = 0x2
0x3a4: V339 = EXP 0x2 0xa0
0x3a5: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a6: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x3a7: V342 = CALLER
0x3a8: V343 = EQ V342 V341
0x3a9: V344 = 0x3b1
0x3ac: JUMPI 0x3b1 V343
---
Entry stack: [V11, 0xa0, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V95]

================================

Block 0x3ad
[0x3ad:0x3b0]
---
Predecessors: [0x39a]
Successors: []
---
0x3ad PUSH1 0x0
0x3af DUP1
0x3b0 REVERT
---
0x3ad: V345 = 0x0
0x3b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V95]

================================

Block 0x3b1
[0x3b1:0x3b5]
---
Predecessors: [0x39a]
Successors: [0xa0]
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x3
0x3b4 SSTORE
0x3b5 JUMP
---
0x3b1: JUMPDEST 
0x3b2: V346 = 0x3
0x3b4: S[0x3] = V95
0x3b5: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V95]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b6
[0x3b6:0x3cd]
---
Predecessors: [0x14a]
Successors: [0x3ce, 0x3d2]
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba SLOAD
0x3bb DUP2
0x3bc SWAP1
0x3bd DUP2
0x3be SWAP1
0x3bf PUSH1 0x1
0x3c1 PUSH1 0xa0
0x3c3 PUSH1 0x2
0x3c5 EXP
0x3c6 SUB
0x3c7 AND
0x3c8 CALLER
0x3c9 EQ
0x3ca PUSH2 0x3d2
0x3cd JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V347 = 0x0
0x3ba: V348 = S[0x0]
0x3bf: V349 = 0x1
0x3c1: V350 = 0xa0
0x3c3: V351 = 0x2
0x3c5: V352 = EXP 0x2 0xa0
0x3c6: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c7: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x3c8: V355 = CALLER
0x3c9: V356 = EQ V355 V354
0x3ca: V357 = 0x3d2
0x3cd: JUMPI 0x3d2 V356
---
Entry stack: [V11, 0x15f, V109]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]

================================

Block 0x3ce
[0x3ce:0x3d1]
---
Predecessors: [0x3b6]
Successors: []
---
0x3ce PUSH1 0x0
0x3d0 DUP1
0x3d1 REVERT
---
0x3ce: V358 = 0x0
0x3d1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]

================================

Block 0x3d2
[0x3d2:0x431]
---
Predecessors: [0x3b6]
Successors: [0x432, 0x436]
---
0x3d2 JUMPDEST
0x3d3 PUSH1 0x40
0x3d5 DUP1
0x3d6 MLOAD
0x3d7 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3f8 DUP2
0x3f9 MSTORE
0x3fa ADDRESS
0x3fb PUSH1 0x4
0x3fd DUP3
0x3fe ADD
0x3ff MSTORE
0x400 SWAP1
0x401 MLOAD
0x402 DUP6
0x403 SWAP4
0x404 POP
0x405 PUSH1 0x1
0x407 PUSH1 0xa0
0x409 PUSH1 0x2
0x40b EXP
0x40c SUB
0x40d DUP5
0x40e AND
0x40f SWAP2
0x410 PUSH4 0x70a08231
0x415 SWAP2
0x416 PUSH1 0x24
0x418 DUP1
0x419 DUP4
0x41a ADD
0x41b SWAP3
0x41c PUSH1 0x20
0x41e SWAP3
0x41f SWAP2
0x420 SWAP1
0x421 DUP3
0x422 SWAP1
0x423 SUB
0x424 ADD
0x425 DUP2
0x426 PUSH1 0x0
0x428 DUP8
0x429 DUP1
0x42a EXTCODESIZE
0x42b ISZERO
0x42c DUP1
0x42d ISZERO
0x42e PUSH2 0x436
0x431 JUMPI
---
0x3d2: JUMPDEST 
0x3d3: V359 = 0x40
0x3d6: V360 = M[0x40]
0x3d7: V361 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3f9: M[V360] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3fa: V362 = ADDRESS
0x3fb: V363 = 0x4
0x3fe: V364 = ADD V360 0x4
0x3ff: M[V364] = V362
0x401: V365 = M[0x40]
0x405: V366 = 0x1
0x407: V367 = 0xa0
0x409: V368 = 0x2
0x40b: V369 = EXP 0x2 0xa0
0x40c: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V371 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x410: V372 = 0x70a08231
0x416: V373 = 0x24
0x41a: V374 = ADD V360 0x24
0x41c: V375 = 0x20
0x423: V376 = SUB V360 V365
0x424: V377 = ADD V376 0x24
0x426: V378 = 0x0
0x42a: V379 = EXTCODESIZE V371
0x42b: V380 = ISZERO V379
0x42d: V381 = ISZERO V380
0x42e: V382 = 0x436
0x431: JUMPI 0x436 V381
---
Entry stack: [V11, 0x15f, V109, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V371, 0x70a08231, V374, 0x20, V365, V377, V365, 0x0, V371, V380]
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, 0x20, V365, V377, V365, 0x0, V371, V380]

================================

Block 0x432
[0x432:0x435]
---
Predecessors: [0x3d2]
Successors: []
---
0x432 PUSH1 0x0
0x434 DUP1
0x435 REVERT
---
0x432: V383 = 0x0
0x435: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, 0x20, V365, V377, V365, 0x0, V371, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, 0x20, V365, V377, V365, 0x0, V371, V380]

================================

Block 0x436
[0x436:0x440]
---
Predecessors: [0x3d2]
Successors: [0x441, 0x44a]
---
0x436 JUMPDEST
0x437 POP
0x438 GAS
0x439 CALL
0x43a ISZERO
0x43b DUP1
0x43c ISZERO
0x43d PUSH2 0x44a
0x440 JUMPI
---
0x436: JUMPDEST 
0x438: V384 = GAS
0x439: V385 = CALL V384 V371 0x0 V365 V377 V365 0x20
0x43a: V386 = ISZERO V385
0x43c: V387 = ISZERO V386
0x43d: V388 = 0x44a
0x440: JUMPI 0x44a V387
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, 0x20, V365, V377, V365, 0x0, V371, V380]
Stack pops: 7
Stack additions: [V386]
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, V386]

================================

Block 0x441
[0x441:0x449]
---
Predecessors: [0x436]
Successors: []
---
0x441 RETURNDATASIZE
0x442 PUSH1 0x0
0x444 DUP1
0x445 RETURNDATACOPY
0x446 RETURNDATASIZE
0x447 PUSH1 0x0
0x449 REVERT
---
0x441: V389 = RETURNDATASIZE
0x442: V390 = 0x0
0x445: RETURNDATACOPY 0x0 0x0 V389
0x446: V391 = RETURNDATASIZE
0x447: V392 = 0x0
0x449: REVERT 0x0 V391
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, V386]

================================

Block 0x44a
[0x44a:0x45b]
---
Predecessors: [0x436]
Successors: [0x45c, 0x460]
---
0x44a JUMPDEST
0x44b POP
0x44c POP
0x44d POP
0x44e POP
0x44f PUSH1 0x40
0x451 MLOAD
0x452 RETURNDATASIZE
0x453 PUSH1 0x20
0x455 DUP2
0x456 LT
0x457 ISZERO
0x458 PUSH2 0x460
0x45b JUMPI
---
0x44a: JUMPDEST 
0x44f: V393 = 0x40
0x451: V394 = M[0x40]
0x452: V395 = RETURNDATASIZE
0x453: V396 = 0x20
0x456: V397 = LT V395 0x20
0x457: V398 = ISZERO V397
0x458: V399 = 0x460
0x45b: JUMPI 0x460 V398
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V371, 0x70a08231, V374, V386]
Stack pops: 4
Stack additions: [V394, V395]
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V394, V395]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x44a]
Successors: []
---
0x45c PUSH1 0x0
0x45e DUP1
0x45f REVERT
---
0x45c: V400 = 0x0
0x45f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V394, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V394, V395]

================================

Block 0x460
[0x460:0x4d1]
---
Predecessors: [0x44a]
Successors: [0x4d2, 0x4d6]
---
0x460 JUMPDEST
0x461 POP
0x462 MLOAD
0x463 PUSH1 0x0
0x465 DUP1
0x466 SLOAD
0x467 PUSH1 0x40
0x469 DUP1
0x46a MLOAD
0x46b PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x48c DUP2
0x48d MSTORE
0x48e PUSH1 0x1
0x490 PUSH1 0xa0
0x492 PUSH1 0x2
0x494 EXP
0x495 SUB
0x496 SWAP3
0x497 DUP4
0x498 AND
0x499 PUSH1 0x4
0x49b DUP3
0x49c ADD
0x49d MSTORE
0x49e PUSH1 0x24
0x4a0 DUP2
0x4a1 ADD
0x4a2 DUP6
0x4a3 SWAP1
0x4a4 MSTORE
0x4a5 SWAP1
0x4a6 MLOAD
0x4a7 SWAP4
0x4a8 SWAP5
0x4a9 POP
0x4aa SWAP1
0x4ab DUP6
0x4ac AND
0x4ad SWAP3
0x4ae PUSH4 0xa9059cbb
0x4b3 SWAP3
0x4b4 PUSH1 0x44
0x4b6 DUP1
0x4b7 DUP5
0x4b8 ADD
0x4b9 SWAP4
0x4ba PUSH1 0x20
0x4bc SWAP4
0x4bd SWAP3
0x4be SWAP1
0x4bf DUP4
0x4c0 SWAP1
0x4c1 SUB
0x4c2 SWAP1
0x4c3 SWAP2
0x4c4 ADD
0x4c5 SWAP1
0x4c6 DUP3
0x4c7 SWAP1
0x4c8 DUP8
0x4c9 DUP1
0x4ca EXTCODESIZE
0x4cb ISZERO
0x4cc DUP1
0x4cd ISZERO
0x4ce PUSH2 0x4d6
0x4d1 JUMPI
---
0x460: JUMPDEST 
0x462: V401 = M[V394]
0x463: V402 = 0x0
0x466: V403 = S[0x0]
0x467: V404 = 0x40
0x46a: V405 = M[0x40]
0x46b: V406 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x48d: M[V405] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x48e: V407 = 0x1
0x490: V408 = 0xa0
0x492: V409 = 0x2
0x494: V410 = EXP 0x2 0xa0
0x495: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x499: V413 = 0x4
0x49c: V414 = ADD V405 0x4
0x49d: M[V414] = V412
0x49e: V415 = 0x24
0x4a1: V416 = ADD V405 0x24
0x4a4: M[V416] = V401
0x4a6: V417 = M[0x40]
0x4ac: V418 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x4ae: V419 = 0xa9059cbb
0x4b4: V420 = 0x44
0x4b8: V421 = ADD V405 0x44
0x4ba: V422 = 0x20
0x4c1: V423 = SUB V405 V417
0x4c4: V424 = ADD 0x44 V423
0x4ca: V425 = EXTCODESIZE V418
0x4cb: V426 = ISZERO V425
0x4cd: V427 = ISZERO V426
0x4ce: V428 = 0x4d6
0x4d1: JUMPI 0x4d6 V427
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, 0x0, V394, V395]
Stack pops: 4
Stack additions: [S3, V401, V418, 0xa9059cbb, V421, 0x20, V417, V424, V417, 0x0, V418, V426]
Exit stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, 0x20, V417, V424, V417, 0x0, V418, V426]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x460]
Successors: []
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
---
0x4d2: V429 = 0x0
0x4d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, 0x20, V417, V424, V417, 0x0, V418, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, 0x20, V417, V424, V417, 0x0, V418, V426]

================================

Block 0x4d6
[0x4d6:0x4e0]
---
Predecessors: [0x460]
Successors: [0x4e1, 0x4ea]
---
0x4d6 JUMPDEST
0x4d7 POP
0x4d8 GAS
0x4d9 CALL
0x4da ISZERO
0x4db DUP1
0x4dc ISZERO
0x4dd PUSH2 0x4ea
0x4e0 JUMPI
---
0x4d6: JUMPDEST 
0x4d8: V430 = GAS
0x4d9: V431 = CALL V430 V418 0x0 V417 V424 V417 0x20
0x4da: V432 = ISZERO V431
0x4dc: V433 = ISZERO V432
0x4dd: V434 = 0x4ea
0x4e0: JUMPI 0x4ea V433
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, 0x20, V417, V424, V417, 0x0, V418, V426]
Stack pops: 7
Stack additions: [V432]
Exit stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, V432]

================================

Block 0x4e1
[0x4e1:0x4e9]
---
Predecessors: [0x4d6]
Successors: []
---
0x4e1 RETURNDATASIZE
0x4e2 PUSH1 0x0
0x4e4 DUP1
0x4e5 RETURNDATACOPY
0x4e6 RETURNDATASIZE
0x4e7 PUSH1 0x0
0x4e9 REVERT
---
0x4e1: V435 = RETURNDATASIZE
0x4e2: V436 = 0x0
0x4e5: RETURNDATACOPY 0x0 0x0 V435
0x4e6: V437 = RETURNDATASIZE
0x4e7: V438 = 0x0
0x4e9: REVERT 0x0 V437
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, V432]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, V432]

================================

Block 0x4ea
[0x4ea:0x4fb]
---
Predecessors: [0x4d6]
Successors: [0x4fc, 0x500]
---
0x4ea JUMPDEST
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee POP
0x4ef PUSH1 0x40
0x4f1 MLOAD
0x4f2 RETURNDATASIZE
0x4f3 PUSH1 0x20
0x4f5 DUP2
0x4f6 LT
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x4ea: JUMPDEST 
0x4ef: V439 = 0x40
0x4f1: V440 = M[0x40]
0x4f2: V441 = RETURNDATASIZE
0x4f3: V442 = 0x20
0x4f6: V443 = LT V441 0x20
0x4f7: V444 = ISZERO V443
0x4f8: V445 = 0x500
0x4fb: JUMPI 0x500 V444
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V401, V418, 0xa9059cbb, V421, V432]
Stack pops: 4
Stack additions: [V440, V441]
Exit stack: [V11, 0x15f, V109, 0x0, V109, V401, V440, V441]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x4ea]
Successors: []
---
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff REVERT
---
0x4fc: V446 = 0x0
0x4ff: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V401, V440, V441]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V109, 0x0, V109, V401, V440, V441]

================================

Block 0x500
[0x500:0x509]
---
Predecessors: [0x4ea]
Successors: [0x15f]
---
0x500 JUMPDEST
0x501 POP
0x502 MLOAD
0x503 SWAP5
0x504 SWAP4
0x505 POP
0x506 POP
0x507 POP
0x508 POP
0x509 JUMP
---
0x500: JUMPDEST 
0x502: V447 = M[V440]
0x509: JUMP 0x15f
---
Entry stack: [V11, 0x15f, V109, 0x0, V109, V401, V440, V441]
Stack pops: 7
Stack additions: [V447]
Exit stack: [V11, V447]

================================

Block 0x50a
[0x50a:0x51c]
---
Predecessors: [0x17f]
Successors: [0x51d, 0x521]
---
0x50a JUMPDEST
0x50b PUSH1 0x0
0x50d SLOAD
0x50e PUSH1 0x1
0x510 PUSH1 0xa0
0x512 PUSH1 0x2
0x514 EXP
0x515 SUB
0x516 AND
0x517 CALLER
0x518 EQ
0x519 PUSH2 0x521
0x51c JUMPI
---
0x50a: JUMPDEST 
0x50b: V448 = 0x0
0x50d: V449 = S[0x0]
0x50e: V450 = 0x1
0x510: V451 = 0xa0
0x512: V452 = 0x2
0x514: V453 = EXP 0x2 0xa0
0x515: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x516: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x517: V456 = CALLER
0x518: V457 = EQ V456 V455
0x519: V458 = 0x521
0x51c: JUMPI 0x521 V457
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V131]

================================

Block 0x51d
[0x51d:0x520]
---
Predecessors: [0x50a]
Successors: []
---
0x51d PUSH1 0x0
0x51f DUP1
0x520 REVERT
---
0x51d: V459 = 0x0
0x520: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa0, V131]

================================

Block 0x521
[0x521:0x530]
---
Predecessors: [0x50a]
Successors: [0x531, 0x559]
---
0x521 JUMPDEST
0x522 PUSH1 0x1
0x524 PUSH1 0xa0
0x526 PUSH1 0x2
0x528 EXP
0x529 SUB
0x52a DUP2
0x52b AND
0x52c ISZERO
0x52d PUSH2 0x559
0x530 JUMPI
---
0x521: JUMPDEST 
0x522: V460 = 0x1
0x524: V461 = 0xa0
0x526: V462 = 0x2
0x528: V463 = EXP 0x2 0xa0
0x529: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52b: V465 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x52c: V466 = ISZERO V465
0x52d: V467 = 0x559
0x530: JUMPI 0x559 V466
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa0, V131]

================================

Block 0x531
[0x531:0x558]
---
Predecessors: [0x521]
Successors: [0x559]
---
0x531 PUSH1 0x0
0x533 DUP1
0x534 SLOAD
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a NOT
0x54b AND
0x54c PUSH1 0x1
0x54e PUSH1 0xa0
0x550 PUSH1 0x2
0x552 EXP
0x553 SUB
0x554 DUP4
0x555 AND
0x556 OR
0x557 SWAP1
0x558 SSTORE
---
0x531: V468 = 0x0
0x534: V469 = S[0x0]
0x535: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V471 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V472 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V469
0x54c: V473 = 0x1
0x54e: V474 = 0xa0
0x550: V475 = 0x2
0x552: V476 = EXP 0x2 0xa0
0x553: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x555: V478 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x556: V479 = OR V478 V472
0x558: S[0x0] = V479
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa0, V131]

================================

Block 0x559
[0x559:0x55b]
---
Predecessors: [0x521, 0x531]
Successors: [0xa0]
---
0x559 JUMPDEST
0x55a POP
0x55b JUMP
---
0x559: JUMPDEST 
0x55b: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V131]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x55c
[0x55c:0x56b]
---
Predecessors: [0x1a5]
Successors: [0x1c1]
---
0x55c JUMPDEST
0x55d PUSH1 0x40
0x55f MLOAD
0x560 PUSH2 0x1a0
0x563 DUP1
0x564 PUSH2 0x57d
0x567 DUP4
0x568 CODECOPY
0x569 ADD
0x56a SWAP1
0x56b JUMP
---
0x55c: JUMPDEST 
0x55d: V480 = 0x40
0x55f: V481 = M[0x40]
0x560: V482 = 0x1a0
0x564: V483 = 0x57d
0x568: CODECOPY V481 0x57d 0x1a0
0x569: V484 = ADD 0x1a0 V481
0x56b: JUMP 0x1c1
---
Entry stack: [V11, 0xa0, S7, S6, 0x0, 0x0, V143, V149, V150, 0x1c1]
Stack pops: 1
Stack additions: [V484]
Exit stack: [V11, 0xa0, S7, S6, 0x0, 0x0, V143, V149, V150, V484]

================================

Block 0x56c
[0x56c:0x57b]
---
Predecessors: [0x21e]
Successors: [0x238]
---
0x56c JUMPDEST
0x56d PUSH1 0x40
0x56f MLOAD
0x570 PUSH2 0x198
0x573 DUP1
0x574 PUSH2 0x71d
0x577 DUP4
0x578 CODECOPY
0x579 ADD
0x57a SWAP1
0x57b JUMP
---
0x56c: JUMPDEST 
0x56d: V485 = 0x40
0x56f: V486 = M[0x40]
0x570: V487 = 0x198
0x574: V488 = 0x71d
0x578: CODECOPY V486 0x71d 0x198
0x579: V489 = ADD 0x198 V486
0x57b: JUMP 0x238
---
Entry stack: [V11, 0xa0, S6, S5, S4, S3, V196, V197, 0x238]
Stack pops: 1
Stack additions: [V489]
Exit stack: [V11, 0xa0, S6, S5, S4, S3, V196, V197, V489]

================================

Block 0x57c
[0x57c:0x681]
---
Predecessors: []
Successors: [0x682]
---
0x57c STOP
0x57d PUSH1 0x80
0x57f PUSH1 0x40
0x581 MSTORE
0x582 PUSH1 0x40
0x584 MLOAD
0x585 PUSH1 0x60
0x587 DUP1
0x588 PUSH2 0x1a0
0x58b DUP4
0x58c CODECOPY
0x58d DUP2
0x58e ADD
0x58f PUSH1 0x40
0x591 DUP2
0x592 DUP2
0x593 MSTORE
0x594 DUP3
0x595 MLOAD
0x596 PUSH1 0x20
0x598 DUP5
0x599 ADD
0x59a MLOAD
0x59b SWAP2
0x59c SWAP1
0x59d SWAP4
0x59e ADD
0x59f MLOAD
0x5a0 SWAP1
0x5a1 SWAP2
0x5a2 PUSH20 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x5b7 SWAP1
0x5b8 PUSH1 0x1
0x5ba PUSH1 0xa0
0x5bc PUSH1 0x2
0x5be EXP
0x5bf SUB
0x5c0 DUP4
0x5c1 AND
0x5c2 SWAP1
0x5c3 CALLVALUE
0x5c4 SWAP1
0x5c5 PUSH1 0x0
0x5c7 DUP2
0x5c8 DUP2
0x5c9 DUP2
0x5ca DUP6
0x5cb DUP8
0x5cc GAS
0x5cd CALL
0x5ce POP
0x5cf POP
0x5d0 PUSH1 0x40
0x5d2 DUP1
0x5d3 MLOAD
0x5d4 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5f5 DUP2
0x5f6 MSTORE
0x5f7 DUP2
0x5f8 MLOAD
0x5f9 SWAP1
0x5fa DUP2
0x5fb SWAP1
0x5fc SUB
0x5fd PUSH1 0x19
0x5ff ADD
0x600 DUP2
0x601 SHA3
0x602 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x623 DUP3
0x624 MSTORE
0x625 ADDRESS
0x626 PUSH1 0x4
0x628 DUP4
0x629 ADD
0x62a MSTORE
0x62b SWAP2
0x62c MLOAD
0x62d PUSH1 0x1
0x62f PUSH1 0xa0
0x631 PUSH1 0x2
0x633 EXP
0x634 SUB
0x635 DUP9
0x636 AND
0x637 SWAP5
0x638 POP
0x639 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x657 SWAP1
0x658 SWAP3
0x659 DIV
0x65a SWAP3
0x65b POP
0x65c DUP8
0x65d SWAP2
0x65e DUP5
0x65f SWAP2
0x660 PUSH4 0x70a08231
0x665 SWAP2
0x666 PUSH1 0x24
0x668 DUP1
0x669 DUP4
0x66a ADD
0x66b SWAP3
0x66c PUSH1 0x20
0x66e SWAP3
0x66f SWAP2
0x670 SWAP1
0x671 DUP3
0x672 SWAP1
0x673 SUB
0x674 ADD
0x675 DUP2
0x676 PUSH1 0x0
0x678 DUP8
0x679 DUP1
0x67a EXTCODESIZE
0x67b ISZERO
0x67c DUP1
0x67d ISZERO
0x67e PUSH2 0x109
0x681 JUMPI
---
0x57c: STOP 
0x57d: V490 = 0x80
0x57f: V491 = 0x40
0x581: M[0x40] = 0x80
0x582: V492 = 0x40
0x584: V493 = M[0x40]
0x585: V494 = 0x60
0x588: V495 = 0x1a0
0x58c: CODECOPY V493 0x1a0 0x60
0x58e: V496 = ADD V493 0x60
0x58f: V497 = 0x40
0x593: M[0x40] = V496
0x595: V498 = M[V493]
0x596: V499 = 0x20
0x599: V500 = ADD V493 0x20
0x59a: V501 = M[V500]
0x59e: V502 = ADD V493 0x40
0x59f: V503 = M[V502]
0x5a2: V504 = 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x5b8: V505 = 0x1
0x5ba: V506 = 0xa0
0x5bc: V507 = 0x2
0x5be: V508 = EXP 0x2 0xa0
0x5bf: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c1: V510 = AND V503 0xffffffffffffffffffffffffffffffffffffffff
0x5c3: V511 = CALLVALUE
0x5c5: V512 = 0x0
0x5cc: V513 = GAS
0x5cd: V514 = CALL V513 V510 V511 V496 0x0 V496 0x0
0x5d0: V515 = 0x40
0x5d3: V516 = M[0x40]
0x5d4: V517 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5f6: M[V516] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5f8: V518 = M[0x40]
0x5fc: V519 = SUB V516 V518
0x5fd: V520 = 0x19
0x5ff: V521 = ADD 0x19 V519
0x601: V522 = SHA3 V518 V521
0x602: V523 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x624: M[V518] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x625: V524 = ADDRESS
0x626: V525 = 0x4
0x629: V526 = ADD V518 0x4
0x62a: M[V526] = V524
0x62c: V527 = M[0x40]
0x62d: V528 = 0x1
0x62f: V529 = 0xa0
0x631: V530 = 0x2
0x633: V531 = EXP 0x2 0xa0
0x634: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x636: V533 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x639: V534 = 0x100000000000000000000000000000000000000000000000000000000
0x659: V535 = DIV V522 0x100000000000000000000000000000000000000000000000000000000
0x660: V536 = 0x70a08231
0x666: V537 = 0x24
0x66a: V538 = ADD V518 0x24
0x66c: V539 = 0x20
0x673: V540 = SUB V518 V527
0x674: V541 = ADD V540 0x24
0x676: V542 = 0x0
0x67a: V543 = EXTCODESIZE V533
0x67b: V544 = ISZERO V543
0x67d: V545 = ISZERO V544
0x67e: V546 = 0x109
0x681: THROWI V545
---
Entry stack: []
Stack pops: 0
Stack additions: [V544, V533, 0x0, V527, V541, V527, 0x20, V538, 0x70a08231, V533, V498, V535, V533, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V503, V501, V498]
Exit stack: []

================================

Block 0x682
[0x682:0x690]
---
Predecessors: [0x57c]
Successors: [0x691]
---
0x682 PUSH1 0x0
0x684 DUP1
0x685 REVERT
0x686 JUMPDEST
0x687 POP
0x688 GAS
0x689 CALL
0x68a ISZERO
0x68b DUP1
0x68c ISZERO
0x68d PUSH2 0x11d
0x690 JUMPI
---
0x682: V547 = 0x0
0x685: REVERT 0x0 0x0
0x686: JUMPDEST 
0x688: V548 = GAS
0x689: V549 = CALL V548 S1 S2 S3 S4 S5 S6
0x68a: V550 = ISZERO V549
0x68c: V551 = ISZERO V550
0x68d: V552 = 0x11d
0x690: THROWI V551
---
Entry stack: [V498, V501, V503, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V533, V535, V498, V533, 0x70a08231, V538, 0x20, V527, V541, V527, 0x0, V533, V544]
Stack pops: 0
Stack additions: [V550]
Exit stack: []

================================

Block 0x691
[0x691:0x6ab]
---
Predecessors: [0x682]
Successors: [0x6ac]
---
0x691 RETURNDATASIZE
0x692 PUSH1 0x0
0x694 DUP1
0x695 RETURNDATACOPY
0x696 RETURNDATASIZE
0x697 PUSH1 0x0
0x699 REVERT
0x69a JUMPDEST
0x69b POP
0x69c POP
0x69d POP
0x69e POP
0x69f PUSH1 0x40
0x6a1 MLOAD
0x6a2 RETURNDATASIZE
0x6a3 PUSH1 0x20
0x6a5 DUP2
0x6a6 LT
0x6a7 ISZERO
0x6a8 PUSH2 0x133
0x6ab JUMPI
---
0x691: V553 = RETURNDATASIZE
0x692: V554 = 0x0
0x695: RETURNDATACOPY 0x0 0x0 V553
0x696: V555 = RETURNDATASIZE
0x697: V556 = 0x0
0x699: REVERT 0x0 V555
0x69a: JUMPDEST 
0x69f: V557 = 0x40
0x6a1: V558 = M[0x40]
0x6a2: V559 = RETURNDATASIZE
0x6a3: V560 = 0x20
0x6a6: V561 = LT V559 0x20
0x6a7: V562 = ISZERO V561
0x6a8: V563 = 0x133
0x6ab: THROWI V562
---
Entry stack: [V550]
Stack pops: 0
Stack additions: [V559, V558]
Exit stack: []

================================

Block 0x6ac
[0x6ac:0x819]
---
Predecessors: [0x691]
Successors: [0x81a]
---
0x6ac PUSH1 0x0
0x6ae DUP1
0x6af REVERT
0x6b0 JUMPDEST
0x6b1 POP
0x6b2 MLOAD
0x6b3 PUSH1 0x40
0x6b5 DUP1
0x6b6 MLOAD
0x6b7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6d5 PUSH4 0xffffffff
0x6da DUP7
0x6db AND
0x6dc MUL
0x6dd DUP2
0x6de MSTORE
0x6df PUSH1 0x1
0x6e1 PUSH1 0xa0
0x6e3 PUSH1 0x2
0x6e5 EXP
0x6e6 SUB
0x6e7 SWAP1
0x6e8 SWAP4
0x6e9 AND
0x6ea PUSH1 0x4
0x6ec DUP5
0x6ed ADD
0x6ee MSTORE
0x6ef PUSH1 0x24
0x6f1 DUP4
0x6f2 ADD
0x6f3 SWAP2
0x6f4 SWAP1
0x6f5 SWAP2
0x6f6 MSTORE
0x6f7 MLOAD
0x6f8 PUSH1 0x44
0x6fa DUP1
0x6fb DUP4
0x6fc ADD
0x6fd SWAP3
0x6fe PUSH1 0x0
0x700 SWAP3
0x701 SWAP2
0x702 SWAP1
0x703 DUP3
0x704 SWAP1
0x705 SUB
0x706 ADD
0x707 DUP2
0x708 DUP4
0x709 DUP8
0x70a GAS
0x70b CALL
0x70c SWAP3
0x70d POP
0x70e POP
0x70f POP
0x710 POP
0x711 DUP1
0x712 PUSH1 0x1
0x714 PUSH1 0xa0
0x716 PUSH1 0x2
0x718 EXP
0x719 SUB
0x71a AND
0x71b SELFDESTRUCT
0x71c STOP
0x71d PUSH1 0x80
0x71f PUSH1 0x40
0x721 DUP2
0x722 DUP2
0x723 MSTORE
0x724 DUP1
0x725 PUSH2 0x198
0x728 DUP4
0x729 CODECOPY
0x72a DUP2
0x72b ADD
0x72c PUSH1 0x40
0x72e DUP2
0x72f SWAP1
0x730 MSTORE
0x731 DUP2
0x732 MLOAD
0x733 PUSH1 0x20
0x735 SWAP1
0x736 SWAP3
0x737 ADD
0x738 MLOAD
0x739 SWAP1
0x73a PUSH20 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x74f SWAP1
0x750 PUSH1 0x1
0x752 PUSH1 0xa0
0x754 PUSH1 0x2
0x756 EXP
0x757 SUB
0x758 DUP4
0x759 AND
0x75a SWAP1
0x75b CALLVALUE
0x75c SWAP1
0x75d PUSH1 0x0
0x75f DUP2
0x760 DUP2
0x761 DUP2
0x762 DUP6
0x763 DUP8
0x764 GAS
0x765 CALL
0x766 POP
0x767 POP
0x768 PUSH1 0x40
0x76a DUP1
0x76b MLOAD
0x76c PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x78d DUP2
0x78e MSTORE
0x78f DUP2
0x790 MLOAD
0x791 SWAP1
0x792 DUP2
0x793 SWAP1
0x794 SUB
0x795 PUSH1 0x19
0x797 ADD
0x798 DUP2
0x799 SHA3
0x79a PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7bb DUP3
0x7bc MSTORE
0x7bd ADDRESS
0x7be PUSH1 0x4
0x7c0 DUP4
0x7c1 ADD
0x7c2 MSTORE
0x7c3 SWAP2
0x7c4 MLOAD
0x7c5 PUSH1 0x1
0x7c7 PUSH1 0xa0
0x7c9 PUSH1 0x2
0x7cb EXP
0x7cc SUB
0x7cd DUP9
0x7ce AND
0x7cf SWAP5
0x7d0 POP
0x7d1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7ef SWAP1
0x7f0 SWAP3
0x7f1 DIV
0x7f2 SWAP3
0x7f3 POP
0x7f4 DUP5
0x7f5 SWAP2
0x7f6 DUP5
0x7f7 SWAP2
0x7f8 PUSH4 0x70a08231
0x7fd SWAP2
0x7fe PUSH1 0x24
0x800 DUP1
0x801 DUP4
0x802 ADD
0x803 SWAP3
0x804 PUSH1 0x20
0x806 SWAP3
0x807 SWAP2
0x808 SWAP1
0x809 DUP3
0x80a SWAP1
0x80b SUB
0x80c ADD
0x80d DUP2
0x80e PUSH1 0x0
0x810 DUP8
0x811 DUP1
0x812 EXTCODESIZE
0x813 ISZERO
0x814 DUP1
0x815 ISZERO
0x816 PUSH2 0x101
0x819 JUMPI
---
0x6ac: V564 = 0x0
0x6af: REVERT 0x0 0x0
0x6b0: JUMPDEST 
0x6b2: V565 = M[S1]
0x6b3: V566 = 0x40
0x6b6: V567 = M[0x40]
0x6b7: V568 = 0x100000000000000000000000000000000000000000000000000000000
0x6d5: V569 = 0xffffffff
0x6db: V570 = AND S3 0xffffffff
0x6dc: V571 = MUL V570 0x100000000000000000000000000000000000000000000000000000000
0x6de: M[V567] = V571
0x6df: V572 = 0x1
0x6e1: V573 = 0xa0
0x6e3: V574 = 0x2
0x6e5: V575 = EXP 0x2 0xa0
0x6e6: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e9: V577 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x6ea: V578 = 0x4
0x6ed: V579 = ADD V567 0x4
0x6ee: M[V579] = V577
0x6ef: V580 = 0x24
0x6f2: V581 = ADD V567 0x24
0x6f6: M[V581] = V565
0x6f7: V582 = M[0x40]
0x6f8: V583 = 0x44
0x6fc: V584 = ADD V567 0x44
0x6fe: V585 = 0x0
0x705: V586 = SUB V567 V582
0x706: V587 = ADD V586 0x44
0x70a: V588 = GAS
0x70b: V589 = CALL V588 S4 0x0 V582 V587 V582 0x0
0x712: V590 = 0x1
0x714: V591 = 0xa0
0x716: V592 = 0x2
0x718: V593 = EXP 0x2 0xa0
0x719: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71a: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x71b: SELFDESTRUCT V595
0x71c: STOP 
0x71d: V596 = 0x80
0x71f: V597 = 0x40
0x723: M[0x40] = 0x80
0x725: V598 = 0x198
0x729: CODECOPY 0x80 0x198 0x40
0x72b: V599 = ADD 0x80 0x40
0x72c: V600 = 0x40
0x730: M[0x40] = 0xc0
0x732: V601 = M[0x80]
0x733: V602 = 0x20
0x737: V603 = ADD 0x80 0x20
0x738: V604 = M[0xa0]
0x73a: V605 = 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x750: V606 = 0x1
0x752: V607 = 0xa0
0x754: V608 = 0x2
0x756: V609 = EXP 0x2 0xa0
0x757: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x759: V611 = AND V604 0xffffffffffffffffffffffffffffffffffffffff
0x75b: V612 = CALLVALUE
0x75d: V613 = 0x0
0x764: V614 = GAS
0x765: V615 = CALL V614 V611 V612 0xc0 0x0 0xc0 0x0
0x768: V616 = 0x40
0x76b: V617 = M[0x40]
0x76c: V618 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x78e: M[V617] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x790: V619 = M[0x40]
0x794: V620 = SUB V617 V619
0x795: V621 = 0x19
0x797: V622 = ADD 0x19 V620
0x799: V623 = SHA3 V619 V622
0x79a: V624 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7bc: M[V619] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7bd: V625 = ADDRESS
0x7be: V626 = 0x4
0x7c1: V627 = ADD V619 0x4
0x7c2: M[V627] = V625
0x7c4: V628 = M[0x40]
0x7c5: V629 = 0x1
0x7c7: V630 = 0xa0
0x7c9: V631 = 0x2
0x7cb: V632 = EXP 0x2 0xa0
0x7cc: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ce: V634 = AND V601 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V635 = 0x100000000000000000000000000000000000000000000000000000000
0x7f1: V636 = DIV V623 0x100000000000000000000000000000000000000000000000000000000
0x7f8: V637 = 0x70a08231
0x7fe: V638 = 0x24
0x802: V639 = ADD V619 0x24
0x804: V640 = 0x20
0x80b: V641 = SUB V619 V628
0x80c: V642 = ADD V641 0x24
0x80e: V643 = 0x0
0x812: V644 = EXTCODESIZE V634
0x813: V645 = ISZERO V644
0x815: V646 = ISZERO V645
0x816: V647 = 0x101
0x819: THROWI V646
---
Entry stack: [V558, V559]
Stack pops: 0
Stack additions: [S5, V645, V634, 0x0, V628, V642, V628, 0x20, V639, 0x70a08231, V634, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V636, V634, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V604, V601]
Exit stack: []

================================

Block 0x81a
[0x81a:0x828]
---
Predecessors: [0x6ac]
Successors: [0x829]
---
0x81a PUSH1 0x0
0x81c DUP1
0x81d REVERT
0x81e JUMPDEST
0x81f POP
0x820 GAS
0x821 CALL
0x822 ISZERO
0x823 DUP1
0x824 ISZERO
0x825 PUSH2 0x115
0x828 JUMPI
---
0x81a: V648 = 0x0
0x81d: REVERT 0x0 0x0
0x81e: JUMPDEST 
0x820: V649 = GAS
0x821: V650 = CALL V649 S1 S2 S3 S4 S5 S6
0x822: V651 = ISZERO V650
0x824: V652 = ISZERO V651
0x825: V653 = 0x115
0x828: THROWI V652
---
Entry stack: [V601, V604, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V634, V636, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V634, 0x70a08231, V639, 0x20, V628, V642, V628, 0x0, V634, V645]
Stack pops: 0
Stack additions: [V651]
Exit stack: []

================================

Block 0x829
[0x829:0x843]
---
Predecessors: [0x81a]
Successors: [0x844]
---
0x829 RETURNDATASIZE
0x82a PUSH1 0x0
0x82c DUP1
0x82d RETURNDATACOPY
0x82e RETURNDATASIZE
0x82f PUSH1 0x0
0x831 REVERT
0x832 JUMPDEST
0x833 POP
0x834 POP
0x835 POP
0x836 POP
0x837 PUSH1 0x40
0x839 MLOAD
0x83a RETURNDATASIZE
0x83b PUSH1 0x20
0x83d DUP2
0x83e LT
0x83f ISZERO
0x840 PUSH2 0x12b
0x843 JUMPI
---
0x829: V654 = RETURNDATASIZE
0x82a: V655 = 0x0
0x82d: RETURNDATACOPY 0x0 0x0 V654
0x82e: V656 = RETURNDATASIZE
0x82f: V657 = 0x0
0x831: REVERT 0x0 V656
0x832: JUMPDEST 
0x837: V658 = 0x40
0x839: V659 = M[0x40]
0x83a: V660 = RETURNDATASIZE
0x83b: V661 = 0x20
0x83e: V662 = LT V660 0x20
0x83f: V663 = ISZERO V662
0x840: V664 = 0x12b
0x843: THROWI V663
---
Entry stack: [V651]
Stack pops: 0
Stack additions: [V660, V659]
Exit stack: []

================================

Block 0x844
[0x844:0x8df]
---
Predecessors: [0x829]
Successors: []
---
0x844 PUSH1 0x0
0x846 DUP1
0x847 REVERT
0x848 JUMPDEST
0x849 POP
0x84a MLOAD
0x84b PUSH1 0x40
0x84d DUP1
0x84e MLOAD
0x84f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x86d PUSH4 0xffffffff
0x872 DUP7
0x873 AND
0x874 MUL
0x875 DUP2
0x876 MSTORE
0x877 PUSH1 0x1
0x879 PUSH1 0xa0
0x87b PUSH1 0x2
0x87d EXP
0x87e SUB
0x87f SWAP1
0x880 SWAP4
0x881 AND
0x882 PUSH1 0x4
0x884 DUP5
0x885 ADD
0x886 MSTORE
0x887 PUSH1 0x24
0x889 DUP4
0x88a ADD
0x88b SWAP2
0x88c SWAP1
0x88d SWAP2
0x88e MSTORE
0x88f MLOAD
0x890 PUSH1 0x44
0x892 DUP1
0x893 DUP4
0x894 ADD
0x895 SWAP3
0x896 PUSH1 0x0
0x898 SWAP3
0x899 SWAP2
0x89a SWAP1
0x89b DUP3
0x89c SWAP1
0x89d SUB
0x89e ADD
0x89f DUP2
0x8a0 DUP4
0x8a1 DUP8
0x8a2 GAS
0x8a3 CALL
0x8a4 SWAP3
0x8a5 POP
0x8a6 POP
0x8a7 POP
0x8a8 POP
0x8a9 DUP1
0x8aa PUSH1 0x1
0x8ac PUSH1 0xa0
0x8ae PUSH1 0x2
0x8b0 EXP
0x8b1 SUB
0x8b2 AND
0x8b3 SELFDESTRUCT
0x8b4 STOP
0x8b5 LOG1
0x8b6 PUSH6 0x627a7a723058
0x8bd SHA3
0x8be MISSING 0xe7
0x8bf ADD
0x8c0 PUSH2 0x1e1e
0x8c3 MISSING 0xf6
0x8c4 MISSING 0xd2
0x8c5 BYTE
0x8c6 MISSING 0xa5
0x8c7 PUSH21 0xbd187e80bb100ec5adf457297a502019bdcb158d91
0x8dd MISSING 0x2f
0x8de STOP
0x8df MISSING 0x29
---
0x844: V665 = 0x0
0x847: REVERT 0x0 0x0
0x848: JUMPDEST 
0x84a: V666 = M[S1]
0x84b: V667 = 0x40
0x84e: V668 = M[0x40]
0x84f: V669 = 0x100000000000000000000000000000000000000000000000000000000
0x86d: V670 = 0xffffffff
0x873: V671 = AND S3 0xffffffff
0x874: V672 = MUL V671 0x100000000000000000000000000000000000000000000000000000000
0x876: M[V668] = V672
0x877: V673 = 0x1
0x879: V674 = 0xa0
0x87b: V675 = 0x2
0x87d: V676 = EXP 0x2 0xa0
0x87e: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x881: V678 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x882: V679 = 0x4
0x885: V680 = ADD V668 0x4
0x886: M[V680] = V678
0x887: V681 = 0x24
0x88a: V682 = ADD V668 0x24
0x88e: M[V682] = V666
0x88f: V683 = M[0x40]
0x890: V684 = 0x44
0x894: V685 = ADD V668 0x44
0x896: V686 = 0x0
0x89d: V687 = SUB V668 V683
0x89e: V688 = ADD V687 0x44
0x8a2: V689 = GAS
0x8a3: V690 = CALL V689 S4 0x0 V683 V688 V683 0x0
0x8aa: V691 = 0x1
0x8ac: V692 = 0xa0
0x8ae: V693 = 0x2
0x8b0: V694 = EXP 0x2 0xa0
0x8b1: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b2: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x8b3: SELFDESTRUCT V696
0x8b4: STOP 
0x8b5: LOG S0 S1 S2
0x8b6: V697 = 0x627a7a723058
0x8bd: V698 = SHA3 0x627a7a723058 S3
0x8be: MISSING 0xe7
0x8bf: V699 = ADD S0 S1
0x8c0: V700 = 0x1e1e
0x8c3: MISSING 0xf6
0x8c4: MISSING 0xd2
0x8c5: V701 = BYTE S0 S1
0x8c6: MISSING 0xa5
0x8c7: V702 = 0xbd187e80bb100ec5adf457297a502019bdcb158d91
0x8dd: MISSING 0x2f
0x8de: STOP 
0x8df: MISSING 0x29
---
Entry stack: [V659, V660]
Stack pops: 0
Stack additions: [S5, V698, 0x1e1e, V699, V701, 0xbd187e80bb100ec5adf457297a502019bdcb158d91]
Exit stack: []

================================

Function 0:
Public function signature: 0x193b135b
Entry block: 0xa2
Exit block: 0xa0
Body: 0xa0, 0xa2, 0xaa, 0xae, 0x27f, 0x292, 0x296

Function 1:
Public function signature: 0x1c02708d
Entry block: 0xc3
Exit block: 0x2dc
Body: 0xc3, 0xcb, 0xcf, 0x2c5, 0x2d8, 0x2dc

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xd8
Exit block: 0xa0
Body: 0xa0, 0xd8, 0xe0, 0xe4, 0x2df, 0x2f3, 0x2f7, 0x32b, 0x334

Function 3:
Public function signature: 0x5e572df6
Entry block: 0xed
Exit block: 0xa0
Body: 0xa0, 0xed, 0xf5, 0xf9, 0x338, 0x34b, 0x34f

Function 4:
Public function signature: 0xaa6ca808
Entry block: 0x98
Exit block: 0x262
Body: 0x98, 0xa0, 0x194, 0x19a, 0x1a5, 0x1c1, 0x1f7, 0x200, 0x20e, 0x213, 0x21e, 0x238, 0x262, 0x26b, 0x279, 0x55c, 0x56c

Function 5:
Public function signature: 0xbd814b78
Entry block: 0x105
Exit block: 0xa0
Body: 0xa0, 0x105, 0x10d, 0x111, 0x354, 0x367, 0x36b

Function 6:
Public function signature: 0xcae539ce
Entry block: 0x126
Exit block: 0xa0
Body: 0xa0, 0x126, 0x12e, 0x132, 0x39a, 0x3ad, 0x3b1

Function 7:
Public function signature: 0xe58fc54c
Entry block: 0x13e
Exit block: 0x15f
Body: 0x13e, 0x146, 0x14a, 0x15f, 0x3b6, 0x3ce, 0x3d2, 0x432, 0x436, 0x441, 0x44a, 0x45c, 0x460, 0x4d2, 0x4d6, 0x4e1, 0x4ea, 0x4fc, 0x500

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x173
Exit block: 0xa0
Body: 0xa0, 0x173, 0x17b, 0x17f, 0x50a, 0x51d, 0x521, 0x531, 0x559

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x262
Body: 0x98, 0xa0, 0x194, 0x19a, 0x1a5, 0x1c1, 0x1f7, 0x200, 0x20e, 0x213, 0x21e, 0x238, 0x262, 0x26b, 0x279, 0x55c, 0x56c

