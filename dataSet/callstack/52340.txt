Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x68]
---
0x41 DUP1
0x42 PUSH4 0xc2381296
0x47 EQ
0x48 PUSH2 0x68
0x4b JUMPI
---
0x42: V15 = 0xc2381296
0x47: V16 = EQ 0xc2381296 V11
0x48: V17 = 0x68
0x4b: JUMPI 0x68 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0x7f]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0x7f
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0x7f
0x65: JUMP 0x7f
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0x15a]
Successors: []
---
0x66 JUMPDEST
0x67 STOP
---
0x66: JUMPDEST 
0x67: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x68
[0x68:0x6f]
---
Predecessors: [0x41]
Successors: [0x70, 0x74]
---
0x68 JUMPDEST
0x69 CALLVALUE
0x6a DUP1
0x6b ISZERO
0x6c PUSH2 0x74
0x6f JUMPI
---
0x68: JUMPDEST 
0x69: V25 = CALLVALUE
0x6b: V26 = ISZERO V25
0x6c: V27 = 0x74
0x6f: JUMPI 0x74 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x68]
Successors: []
---
0x70 PUSH1 0x0
0x72 DUP1
0x73 REVERT
---
0x70: V28 = 0x0
0x73: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x74
[0x74:0x7c]
---
Predecessors: [0x68]
Successors: [0x15d]
---
0x74 JUMPDEST
0x75 POP
0x76 PUSH2 0x7d
0x79 PUSH2 0x15d
0x7c JUMP
---
0x74: JUMPDEST 
0x76: V29 = 0x7d
0x79: V30 = 0x15d
0x7c: JUMP 0x15d
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x7d]
Exit stack: [V11, 0x7d]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x1f1]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0xd6]
---
Predecessors: [0x5d]
Successors: [0xd7, 0xdb]
---
0x7f JUMPDEST
0x80 PUSH1 0x1
0x82 PUSH1 0x0
0x84 SWAP1
0x85 SLOAD
0x86 SWAP1
0x87 PUSH2 0x100
0x8a EXP
0x8b SWAP1
0x8c DIV
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 CALLER
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 EQ
0xd1 ISZERO
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0x7f: JUMPDEST 
0x80: V31 = 0x1
0x82: V32 = 0x0
0x85: V33 = S[0x1]
0x87: V34 = 0x100
0x8a: V35 = EXP 0x100 0x0
0x8c: V36 = DIV V33 0x1
0x8d: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa3: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xb9: V41 = CALLER
0xba: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xd0: V44 = EQ V43 V40
0xd1: V45 = ISZERO V44
0xd2: V46 = ISZERO V45
0xd3: V47 = 0xdb
0xd6: JUMPI 0xdb V46
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0x7f]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V48 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xdb
[0xdb:0x150]
---
Predecessors: [0x7f]
Successors: [0x151, 0x15a]
---
0xdb JUMPDEST
0xdc PUSH1 0x1
0xde PUSH1 0x0
0xe0 SWAP1
0xe1 SLOAD
0xe2 SWAP1
0xe3 PUSH2 0x100
0xe6 EXP
0xe7 SWAP1
0xe8 DIV
0xe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe AND
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 PUSH2 0x8fc
0x118 ADDRESS
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f BALANCE
0x130 SWAP1
0x131 DUP2
0x132 ISZERO
0x133 MUL
0x134 SWAP1
0x135 PUSH1 0x40
0x137 MLOAD
0x138 PUSH1 0x0
0x13a PUSH1 0x40
0x13c MLOAD
0x13d DUP1
0x13e DUP4
0x13f SUB
0x140 DUP2
0x141 DUP6
0x142 DUP9
0x143 DUP9
0x144 CALL
0x145 SWAP4
0x146 POP
0x147 POP
0x148 POP
0x149 POP
0x14a ISZERO
0x14b DUP1
0x14c ISZERO
0x14d PUSH2 0x15a
0x150 JUMPI
---
0xdb: JUMPDEST 
0xdc: V49 = 0x1
0xde: V50 = 0x0
0xe1: V51 = S[0x1]
0xe3: V52 = 0x100
0xe6: V53 = EXP 0x100 0x0
0xe8: V54 = DIV V51 0x1
0xe9: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xff: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x115: V59 = 0x8fc
0x118: V60 = ADDRESS
0x119: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x12f: V63 = BALANCE V62
0x132: V64 = ISZERO V63
0x133: V65 = MUL V64 0x8fc
0x135: V66 = 0x40
0x137: V67 = M[0x40]
0x138: V68 = 0x0
0x13a: V69 = 0x40
0x13c: V70 = M[0x40]
0x13f: V71 = SUB V67 V70
0x144: V72 = CALL V65 V58 V63 V70 V71 V70 0x0
0x14a: V73 = ISZERO V72
0x14c: V74 = ISZERO V73
0x14d: V75 = 0x15a
0x150: JUMPI 0x15a V74
---
Entry stack: [V11, 0x66]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, 0x66, V73]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0xdb]
Successors: []
---
0x151 RETURNDATASIZE
0x152 PUSH1 0x0
0x154 DUP1
0x155 RETURNDATACOPY
0x156 RETURNDATASIZE
0x157 PUSH1 0x0
0x159 REVERT
---
0x151: V76 = RETURNDATASIZE
0x152: V77 = 0x0
0x155: RETURNDATACOPY 0x0 0x0 V76
0x156: V78 = RETURNDATASIZE
0x157: V79 = 0x0
0x159: REVERT 0x0 V78
---
Entry stack: [V11, 0x66, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x66, V73]

================================

Block 0x15a
[0x15a:0x15c]
---
Predecessors: [0xdb]
Successors: [0x66]
---
0x15a JUMPDEST
0x15b POP
0x15c JUMP
---
0x15a: JUMPDEST 
0x15c: JUMP 0x66
---
Entry stack: [V11, 0x66, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x15d
[0x15d:0x1b9]
---
Predecessors: [0x74]
Successors: [0x1ba, 0x1be]
---
0x15d JUMPDEST
0x15e PUSH1 0x0
0x160 DUP1
0x161 PUSH1 0x0
0x163 PUSH1 0x1
0x165 PUSH1 0x0
0x167 SWAP1
0x168 SLOAD
0x169 SWAP1
0x16a PUSH2 0x100
0x16d EXP
0x16e SWAP1
0x16f DIV
0x170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x185 AND
0x186 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19b AND
0x19c CALLER
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 EQ
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 PUSH2 0x1be
0x1b9 JUMPI
---
0x15d: JUMPDEST 
0x15e: V80 = 0x0
0x161: V81 = 0x0
0x163: V82 = 0x1
0x165: V83 = 0x0
0x168: V84 = S[0x1]
0x16a: V85 = 0x100
0x16d: V86 = EXP 0x100 0x0
0x16f: V87 = DIV V84 0x1
0x170: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x185: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x186: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x19c: V92 = CALLER
0x19d: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1b3: V95 = EQ V94 V91
0x1b4: V96 = ISZERO V95
0x1b5: V97 = ISZERO V96
0x1b6: V98 = 0x1be
0x1b9: JUMPI 0x1be V97
---
Entry stack: [V11, 0x7d]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0]

================================

Block 0x1ba
[0x1ba:0x1bd]
---
Predecessors: [0x15d]
Successors: []
---
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd REVERT
---
0x1ba: V99 = 0x0
0x1bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0]

================================

Block 0x1be
[0x1be:0x1c5]
---
Predecessors: [0x15d]
Successors: [0x1f6]
---
0x1be JUMPDEST
0x1bf PUSH2 0x1c6
0x1c2 PUSH2 0x1f6
0x1c5 JUMP
---
0x1be: JUMPDEST 
0x1bf: V100 = 0x1c6
0x1c2: V101 = 0x1f6
0x1c5: JUMP 0x1f6
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x1c6]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6]

================================

Block 0x1c6
[0x1c6:0x1e6]
---
Predecessors: [0x7a0]
Successors: [0x1e7, 0x1f1]
---
0x1c6 JUMPDEST
0x1c7 DUP1
0x1c8 SWAP4
0x1c9 POP
0x1ca DUP2
0x1cb SWAP5
0x1cc POP
0x1cd DUP3
0x1ce SWAP6
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x8
0x1d5 SLOAD
0x1d6 PUSH8 0x16345785d8a0000
0x1df DUP5
0x1e0 ADD
0x1e1 LT
0x1e2 ISZERO
0x1e3 PUSH2 0x1f1
0x1e6 JUMPI
---
0x1c6: JUMPDEST 
0x1d3: V102 = 0x8
0x1d5: V103 = S[0x8]
0x1d6: V104 = 0x16345785d8a0000
0x1e0: V105 = ADD S2 0x16345785d8a0000
0x1e1: V106 = LT V105 V103
0x1e2: V107 = ISZERO V106
0x1e3: V108 = 0x1f1
0x1e6: JUMPI 0x1f1 V107
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, S2, S1, S0]

================================

Block 0x1e7
[0x1e7:0x1ef]
---
Predecessors: [0x1c6]
Successors: [0x7b5]
---
0x1e7 PUSH2 0x1f0
0x1ea DUP3
0x1eb DUP3
0x1ec PUSH2 0x7b5
0x1ef JUMP
---
0x1e7: V109 = 0x1f0
0x1ec: V110 = 0x7b5
0x1ef: JUMP 0x7b5
---
Entry stack: [V11, 0x7d, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1f0, S1, S0]
Exit stack: [V11, 0x7d, S2, S1, S0, 0x1f0, S1, S0]

================================

Block 0x1f0
[0x1f0:0x1f0]
---
Predecessors: [0x85d]
Successors: [0x1f1]
---
0x1f0 JUMPDEST
---
0x1f0: JUMPDEST 
---
Entry stack: [V11, 0x7d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, S2, S1, S0]

================================

Block 0x1f1
[0x1f1:0x1f5]
---
Predecessors: [0x1c6, 0x1f0]
Successors: [0x7d]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 JUMP
---
0x1f1: JUMPDEST 
0x1f5: JUMP 0x7d
---
Entry stack: [V11, 0x7d, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f6
[0x1f6:0x2d3]
---
Predecessors: [0x1be]
Successors: [0x2d4]
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 PUSH1 0x0
0x202 DUP1
0x203 PUSH1 0x0
0x205 DUP1
0x206 PUSH1 0xd6
0x208 PUSH1 0x94
0x20a ADDRESS
0x20b DUP5
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x20
0x211 ADD
0x212 DUP1
0x213 DUP6
0x214 PUSH1 0xff
0x216 AND
0x217 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x238 MUL
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x1
0x23d ADD
0x23e DUP5
0x23f PUSH1 0xff
0x241 AND
0x242 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x263 MUL
0x264 DUP2
0x265 MSTORE
0x266 PUSH1 0x1
0x268 ADD
0x269 DUP4
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 PUSH13 0x1000000000000000000000000
0x2a4 MUL
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x14
0x2a9 ADD
0x2aa DUP3
0x2ab DUP2
0x2ac MSTORE
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP5
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 PUSH1 0x20
0x2bb DUP2
0x2bc DUP4
0x2bd SUB
0x2be SUB
0x2bf DUP2
0x2c0 MSTORE
0x2c1 SWAP1
0x2c2 PUSH1 0x40
0x2c4 MSTORE
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 DUP3
0x2ca DUP1
0x2cb MLOAD
0x2cc SWAP1
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 SWAP1
0x2d1 DUP1
0x2d2 DUP4
0x2d3 DUP4
---
0x1f6: JUMPDEST 
0x1f7: V111 = 0x0
0x1fa: V112 = 0x0
0x1fd: V113 = 0x0
0x200: V114 = 0x0
0x203: V115 = 0x0
0x206: V116 = 0xd6
0x208: V117 = 0x94
0x20a: V118 = ADDRESS
0x20c: V119 = 0x40
0x20e: V120 = M[0x40]
0x20f: V121 = 0x20
0x211: V122 = ADD 0x20 V120
0x214: V123 = 0xff
0x216: V124 = AND 0xff 0xd6
0x217: V125 = 0x100000000000000000000000000000000000000000000000000000000000000
0x238: V126 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x23a: M[V122] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x23b: V127 = 0x1
0x23d: V128 = ADD 0x1 V122
0x23f: V129 = 0xff
0x241: V130 = AND 0xff 0x94
0x242: V131 = 0x100000000000000000000000000000000000000000000000000000000000000
0x263: V132 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x265: M[V128] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x266: V133 = 0x1
0x268: V134 = ADD 0x1 V128
0x26a: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x280: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x296: V139 = 0x1000000000000000000000000
0x2a4: V140 = MUL 0x1000000000000000000000000 V138
0x2a6: M[V134] = V140
0x2a7: V141 = 0x14
0x2a9: V142 = ADD 0x14 V134
0x2ac: M[V142] = 0x0
0x2ad: V143 = 0x20
0x2af: V144 = ADD 0x20 V142
0x2b6: V145 = 0x40
0x2b8: V146 = M[0x40]
0x2b9: V147 = 0x20
0x2bd: V148 = SUB V144 V146
0x2be: V149 = SUB V148 0x20
0x2c0: M[V146] = V149
0x2c2: V150 = 0x40
0x2c4: M[0x40] = V144
0x2c5: V151 = 0x40
0x2c7: V152 = M[0x40]
0x2cb: V153 = M[V146]
0x2cd: V154 = 0x20
0x2cf: V155 = ADD 0x20 V146
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V146, V152, V152, V155, V153, V153, V152, V155]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V146, V152, V152, V155, V153, V153, V152, V155]

================================

Block 0x2d4
[0x2d4:0x2de]
---
Predecessors: [0x1f6, 0x2df]
Successors: [0x2df, 0x2f9]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x20
0x2d7 DUP4
0x2d8 LT
0x2d9 ISZERO
0x2da ISZERO
0x2db PUSH2 0x2f9
0x2de JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V156 = 0x20
0x2d8: V157 = LT S2 0x20
0x2d9: V158 = ISZERO V157
0x2da: V159 = ISZERO V158
0x2db: V160 = 0x2f9
0x2de: JUMPI 0x2f9 V159
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V146, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V146, V152, V152, V155, V153, S2, S1, S0]

================================

Block 0x2df
[0x2df:0x2f8]
---
Predecessors: [0x2d4]
Successors: [0x2d4]
---
0x2df DUP1
0x2e0 MLOAD
0x2e1 DUP3
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 DUP3
0x2e6 ADD
0x2e7 SWAP2
0x2e8 POP
0x2e9 PUSH1 0x20
0x2eb DUP2
0x2ec ADD
0x2ed SWAP1
0x2ee POP
0x2ef PUSH1 0x20
0x2f1 DUP4
0x2f2 SUB
0x2f3 SWAP3
0x2f4 POP
0x2f5 PUSH2 0x2d4
0x2f8 JUMP
---
0x2e0: V161 = M[S0]
0x2e2: M[S1] = V161
0x2e3: V162 = 0x20
0x2e6: V163 = ADD S1 0x20
0x2e9: V164 = 0x20
0x2ec: V165 = ADD S0 0x20
0x2ef: V166 = 0x20
0x2f2: V167 = SUB S2 0x20
0x2f5: V168 = 0x2d4
0x2f8: JUMP 0x2d4
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V146, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 3
Stack additions: [V167, V163, V165]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V146, V152, V152, V155, V153, V167, V163, V165]

================================

Block 0x2f9
[0x2f9:0x3b8]
---
Predecessors: [0x2d4]
Successors: [0x3b9, 0x3bd]
---
0x2f9 JUMPDEST
0x2fa PUSH1 0x1
0x2fc DUP4
0x2fd PUSH1 0x20
0x2ff SUB
0x300 PUSH2 0x100
0x303 EXP
0x304 SUB
0x305 DUP1
0x306 NOT
0x307 DUP3
0x308 MLOAD
0x309 AND
0x30a DUP2
0x30b DUP5
0x30c MLOAD
0x30d AND
0x30e DUP1
0x30f DUP3
0x310 OR
0x311 DUP6
0x312 MSTORE
0x313 POP
0x314 POP
0x315 POP
0x316 POP
0x317 POP
0x318 POP
0x319 SWAP1
0x31a POP
0x31b ADD
0x31c SWAP2
0x31d POP
0x31e POP
0x31f PUSH1 0x40
0x321 MLOAD
0x322 DUP1
0x323 SWAP2
0x324 SUB
0x325 SWAP1
0x326 SHA3
0x327 PUSH1 0x1
0x329 SWAP1
0x32a DIV
0x32b SWAP7
0x32c POP
0x32d PUSH1 0x0
0x32f SWAP6
0x330 POP
0x331 PUSH1 0x0
0x333 SWAP5
0x334 POP
0x335 PUSH1 0x0
0x337 SWAP4
0x338 POP
0x339 PUSH1 0x0
0x33b DUP1
0x33c SWAP1
0x33d SLOAD
0x33e SWAP1
0x33f PUSH2 0x100
0x342 EXP
0x343 SWAP1
0x344 DIV
0x345 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35a AND
0x35b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x370 AND
0x371 PUSH4 0x11a09ae7
0x376 PUSH1 0x40
0x378 MLOAD
0x379 DUP2
0x37a PUSH4 0xffffffff
0x37f AND
0x380 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x39e MUL
0x39f DUP2
0x3a0 MSTORE
0x3a1 PUSH1 0x4
0x3a3 ADD
0x3a4 PUSH1 0x20
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 DUP1
0x3aa DUP4
0x3ab SUB
0x3ac DUP2
0x3ad PUSH1 0x0
0x3af DUP8
0x3b0 DUP1
0x3b1 EXTCODESIZE
0x3b2 ISZERO
0x3b3 DUP1
0x3b4 ISZERO
0x3b5 PUSH2 0x3bd
0x3b8 JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V169 = 0x1
0x2fd: V170 = 0x20
0x2ff: V171 = SUB 0x20 S2
0x300: V172 = 0x100
0x303: V173 = EXP 0x100 V171
0x304: V174 = SUB V173 0x1
0x306: V175 = NOT V174
0x308: V176 = M[S0]
0x309: V177 = AND V176 V175
0x30c: V178 = M[S1]
0x30d: V179 = AND V178 V174
0x310: V180 = OR V177 V179
0x312: M[S1] = V180
0x31b: V181 = ADD V153 V152
0x31f: V182 = 0x40
0x321: V183 = M[0x40]
0x324: V184 = SUB V181 V183
0x326: V185 = SHA3 V183 V184
0x327: V186 = 0x1
0x32a: V187 = DIV V185 0x1
0x32d: V188 = 0x0
0x331: V189 = 0x0
0x335: V190 = 0x0
0x339: V191 = 0x0
0x33d: V192 = S[0x0]
0x33f: V193 = 0x100
0x342: V194 = EXP 0x100 0x0
0x344: V195 = DIV V192 0x1
0x345: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x35b: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x370: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x371: V200 = 0x11a09ae7
0x376: V201 = 0x40
0x378: V202 = M[0x40]
0x37a: V203 = 0xffffffff
0x37f: V204 = AND 0xffffffff 0x11a09ae7
0x380: V205 = 0x100000000000000000000000000000000000000000000000000000000
0x39e: V206 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x3a0: M[V202] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x3a1: V207 = 0x4
0x3a3: V208 = ADD 0x4 V202
0x3a4: V209 = 0x20
0x3a6: V210 = 0x40
0x3a8: V211 = M[0x40]
0x3ab: V212 = SUB V208 V211
0x3ad: V213 = 0x0
0x3b1: V214 = EXTCODESIZE V199
0x3b2: V215 = ISZERO V214
0x3b4: V216 = ISZERO V215
0x3b5: V217 = 0x3bd
0x3b8: JUMPI 0x3bd V216
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V146, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 15
Stack additions: [V187, 0x0, 0x0, 0x0, S10, S9, S8, V199, 0x11a09ae7, V208, 0x20, V211, V212, V211, 0x0, V199, V215]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, 0x20, V211, V212, V211, 0x0, V199, V215]

================================

Block 0x3b9
[0x3b9:0x3bc]
---
Predecessors: [0x2f9]
Successors: []
---
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc REVERT
---
0x3b9: V218 = 0x0
0x3bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, 0x20, V211, V212, V211, 0x0, V199, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, 0x20, V211, V212, V211, 0x0, V199, V215]

================================

Block 0x3bd
[0x3bd:0x3c7]
---
Predecessors: [0x2f9]
Successors: [0x3c8, 0x3d1]
---
0x3bd JUMPDEST
0x3be POP
0x3bf GAS
0x3c0 CALL
0x3c1 ISZERO
0x3c2 DUP1
0x3c3 ISZERO
0x3c4 PUSH2 0x3d1
0x3c7 JUMPI
---
0x3bd: JUMPDEST 
0x3bf: V219 = GAS
0x3c0: V220 = CALL V219 V199 0x0 V211 V212 V211 0x20
0x3c1: V221 = ISZERO V220
0x3c3: V222 = ISZERO V221
0x3c4: V223 = 0x3d1
0x3c7: JUMPI 0x3d1 V222
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, 0x20, V211, V212, V211, 0x0, V199, V215]
Stack pops: 7
Stack additions: [V221]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, V221]

================================

Block 0x3c8
[0x3c8:0x3d0]
---
Predecessors: [0x3bd]
Successors: []
---
0x3c8 RETURNDATASIZE
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc RETURNDATACOPY
0x3cd RETURNDATASIZE
0x3ce PUSH1 0x0
0x3d0 REVERT
---
0x3c8: V224 = RETURNDATASIZE
0x3c9: V225 = 0x0
0x3cc: RETURNDATACOPY 0x0 0x0 V224
0x3cd: V226 = RETURNDATASIZE
0x3ce: V227 = 0x0
0x3d0: REVERT 0x0 V226
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, V221]

================================

Block 0x3d1
[0x3d1:0x3e2]
---
Predecessors: [0x3bd]
Successors: [0x3e3, 0x3e7]
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 RETURNDATASIZE
0x3da PUSH1 0x20
0x3dc DUP2
0x3dd LT
0x3de ISZERO
0x3df PUSH2 0x3e7
0x3e2 JUMPI
---
0x3d1: JUMPDEST 
0x3d6: V228 = 0x40
0x3d8: V229 = M[0x40]
0x3d9: V230 = RETURNDATASIZE
0x3da: V231 = 0x20
0x3dd: V232 = LT V230 0x20
0x3de: V233 = ISZERO V232
0x3df: V234 = 0x3e7
0x3e2: JUMPI 0x3e7 V233
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V199, 0x11a09ae7, V208, V221]
Stack pops: 4
Stack additions: [V229, V230]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V229, V230]

================================

Block 0x3e3
[0x3e3:0x3e6]
---
Predecessors: [0x3d1]
Successors: []
---
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 REVERT
---
0x3e3: V235 = 0x0
0x3e6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V229, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V229, V230]

================================

Block 0x3e7
[0x3e7:0x402]
---
Predecessors: [0x3d1]
Successors: [0x403]
---
0x3e7 JUMPDEST
0x3e8 DUP2
0x3e9 ADD
0x3ea SWAP1
0x3eb DUP1
0x3ec DUP1
0x3ed MLOAD
0x3ee SWAP1
0x3ef PUSH1 0x20
0x3f1 ADD
0x3f2 SWAP1
0x3f3 SWAP3
0x3f4 SWAP2
0x3f5 SWAP1
0x3f6 POP
0x3f7 POP
0x3f8 POP
0x3f9 SWAP3
0x3fa POP
0x3fb PUSH1 0x1
0x3fd SWAP2
0x3fe POP
0x3ff PUSH1 0x0
0x401 SWAP1
0x402 POP
---
0x3e7: JUMPDEST 
0x3e9: V236 = ADD V229 V230
0x3ed: V237 = M[V229]
0x3ef: V238 = 0x20
0x3f1: V239 = ADD 0x20 V229
0x3fb: V240 = 0x1
0x3ff: V241 = 0x0
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V229, V230]
Stack pops: 5
Stack additions: [V237, 0x1, 0x0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V187, 0x0, 0x0, 0x0, V237, 0x1, 0x0]

================================

Block 0x403
[0x403:0x40a]
---
Predecessors: [0x3e7, 0x79b]
Successors: [0x40b, 0x7a0]
---
0x403 JUMPDEST
0x404 DUP1
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x7a0
0x40a JUMPI
---
0x403: JUMPDEST 
0x405: V242 = ISZERO {0x0, 0x1}
0x406: V243 = ISZERO V242
0x407: V244 = 0x7a0
0x40a: JUMPI 0x7a0 V243
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, S3, V237, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, S3, V237, S1, {0x0, 0x1}]

================================

Block 0x40b
[0x40b:0x476]
---
Predecessors: [0x403]
Successors: [0x477]
---
0x40b NUMBER
0x40c TIMESTAMP
0x40d DUP9
0x40e PUSH1 0x40
0x410 MLOAD
0x411 PUSH1 0x20
0x413 ADD
0x414 DUP1
0x415 DUP3
0x416 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42b AND
0x42c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x441 AND
0x442 PUSH13 0x1000000000000000000000000
0x450 MUL
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x14
0x455 ADD
0x456 SWAP2
0x457 POP
0x458 POP
0x459 PUSH1 0x40
0x45b MLOAD
0x45c PUSH1 0x20
0x45e DUP2
0x45f DUP4
0x460 SUB
0x461 SUB
0x462 DUP2
0x463 MSTORE
0x464 SWAP1
0x465 PUSH1 0x40
0x467 MSTORE
0x468 PUSH1 0x40
0x46a MLOAD
0x46b DUP1
0x46c DUP3
0x46d DUP1
0x46e MLOAD
0x46f SWAP1
0x470 PUSH1 0x20
0x472 ADD
0x473 SWAP1
0x474 DUP1
0x475 DUP4
0x476 DUP4
---
0x40b: V245 = NUMBER
0x40c: V246 = TIMESTAMP
0x40e: V247 = 0x40
0x410: V248 = M[0x40]
0x411: V249 = 0x20
0x413: V250 = ADD 0x20 V248
0x416: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x42b: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x42c: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x441: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x442: V255 = 0x1000000000000000000000000
0x450: V256 = MUL 0x1000000000000000000000000 V254
0x452: M[V250] = V256
0x453: V257 = 0x14
0x455: V258 = ADD 0x14 V250
0x459: V259 = 0x40
0x45b: V260 = M[0x40]
0x45c: V261 = 0x20
0x460: V262 = SUB V258 V260
0x461: V263 = SUB V262 0x20
0x463: M[V260] = V263
0x465: V264 = 0x40
0x467: M[0x40] = V258
0x468: V265 = 0x40
0x46a: V266 = M[0x40]
0x46e: V267 = M[V260]
0x470: V268 = 0x20
0x472: V269 = ADD 0x20 V260
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, S3, V237, S1, {0x0, 0x1}]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V245, V246, V260, V266, V266, V269, V267, V267, V266, V269]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, S3, V237, S1, {0x0, 0x1}, V245, V246, V260, V266, V266, V269, V267, V267, V266, V269]

================================

Block 0x477
[0x477:0x481]
---
Predecessors: [0x40b, 0x482]
Successors: [0x482, 0x49c]
---
0x477 JUMPDEST
0x478 PUSH1 0x20
0x47a DUP4
0x47b LT
0x47c ISZERO
0x47d ISZERO
0x47e PUSH2 0x49c
0x481 JUMPI
---
0x477: JUMPDEST 
0x478: V270 = 0x20
0x47b: V271 = LT S2 0x20
0x47c: V272 = ISZERO V271
0x47d: V273 = ISZERO V272
0x47e: V274 = 0x49c
0x481: JUMPI 0x49c V273
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S16, S15, S14, S13, V237, S11, {0x0, 0x1}, V245, V246, V260, V266, V266, V269, V267, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S16, S15, S14, S13, V237, S11, {0x0, 0x1}, V245, V246, V260, V266, V266, V269, V267, S2, S1, S0]

================================

Block 0x482
[0x482:0x49b]
---
Predecessors: [0x477]
Successors: [0x477]
---
0x482 DUP1
0x483 MLOAD
0x484 DUP3
0x485 MSTORE
0x486 PUSH1 0x20
0x488 DUP3
0x489 ADD
0x48a SWAP2
0x48b POP
0x48c PUSH1 0x20
0x48e DUP2
0x48f ADD
0x490 SWAP1
0x491 POP
0x492 PUSH1 0x20
0x494 DUP4
0x495 SUB
0x496 SWAP3
0x497 POP
0x498 PUSH2 0x477
0x49b JUMP
---
0x483: V275 = M[S0]
0x485: M[S1] = V275
0x486: V276 = 0x20
0x489: V277 = ADD S1 0x20
0x48c: V278 = 0x20
0x48f: V279 = ADD S0 0x20
0x492: V280 = 0x20
0x495: V281 = SUB S2 0x20
0x498: V282 = 0x477
0x49b: JUMP 0x477
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S16, S15, S14, S13, V237, S11, {0x0, 0x1}, V245, V246, V260, V266, V266, V269, V267, S2, S1, S0]
Stack pops: 3
Stack additions: [V281, V277, V279]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S16, S15, S14, S13, V237, S11, {0x0, 0x1}, V245, V246, V260, V266, V266, V269, V267, V281, V277, V279]

================================

Block 0x49c
[0x49c:0x4d4]
---
Predecessors: [0x477]
Successors: [0x4d5, 0x4d6]
---
0x49c JUMPDEST
0x49d PUSH1 0x1
0x49f DUP4
0x4a0 PUSH1 0x20
0x4a2 SUB
0x4a3 PUSH2 0x100
0x4a6 EXP
0x4a7 SUB
0x4a8 DUP1
0x4a9 NOT
0x4aa DUP3
0x4ab MLOAD
0x4ac AND
0x4ad DUP2
0x4ae DUP5
0x4af MLOAD
0x4b0 AND
0x4b1 DUP1
0x4b2 DUP3
0x4b3 OR
0x4b4 DUP6
0x4b5 MSTORE
0x4b6 POP
0x4b7 POP
0x4b8 POP
0x4b9 POP
0x4ba POP
0x4bb POP
0x4bc SWAP1
0x4bd POP
0x4be ADD
0x4bf SWAP2
0x4c0 POP
0x4c1 POP
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 SHA3
0x4ca PUSH1 0x1
0x4cc SWAP1
0x4cd DIV
0x4ce DUP2
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 PUSH2 0x4d6
0x4d4 JUMPI
---
0x49c: JUMPDEST 
0x49d: V283 = 0x1
0x4a0: V284 = 0x20
0x4a2: V285 = SUB 0x20 S2
0x4a3: V286 = 0x100
0x4a6: V287 = EXP 0x100 V285
0x4a7: V288 = SUB V287 0x1
0x4a9: V289 = NOT V288
0x4ab: V290 = M[S0]
0x4ac: V291 = AND V290 V289
0x4af: V292 = M[S1]
0x4b0: V293 = AND V292 V288
0x4b3: V294 = OR V291 V293
0x4b5: M[S1] = V294
0x4be: V295 = ADD V267 V266
0x4c2: V296 = 0x40
0x4c4: V297 = M[0x40]
0x4c7: V298 = SUB V295 V297
0x4c9: V299 = SHA3 V297 V298
0x4ca: V300 = 0x1
0x4cd: V301 = DIV V299 0x1
0x4cf: V302 = ISZERO V246
0x4d0: V303 = ISZERO V302
0x4d1: V304 = 0x4d6
0x4d4: JUMPI 0x4d6 V303
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S16, S15, S14, S13, V237, S11, {0x0, 0x1}, V245, V246, V260, V266, V266, V269, V267, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V301]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S16, S15, S14, S13, V237, S11, {0x0, 0x1}, V245, V246, V301]

================================

Block 0x4d5
[0x4d5:0x4d5]
---
Predecessors: [0x49c]
Successors: []
---
0x4d5 INVALID
---
0x4d5: INVALID 
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, S6, V237, S4, {0x0, 0x1}, V245, V246, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, S6, V237, S4, {0x0, 0x1}, V245, V246, V301]

================================

Block 0x4d6
[0x4d6:0x543]
---
Predecessors: [0x49c]
Successors: [0x544]
---
0x4d6 JUMPDEST
0x4d7 DIV
0x4d8 GASLIMIT
0x4d9 TIMESTAMP
0x4da COINBASE
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de PUSH1 0x20
0x4e0 ADD
0x4e1 DUP1
0x4e2 DUP3
0x4e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f8 AND
0x4f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50e AND
0x50f PUSH13 0x1000000000000000000000000
0x51d MUL
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x14
0x522 ADD
0x523 SWAP2
0x524 POP
0x525 POP
0x526 PUSH1 0x40
0x528 MLOAD
0x529 PUSH1 0x20
0x52b DUP2
0x52c DUP4
0x52d SUB
0x52e SUB
0x52f DUP2
0x530 MSTORE
0x531 SWAP1
0x532 PUSH1 0x40
0x534 MSTORE
0x535 PUSH1 0x40
0x537 MLOAD
0x538 DUP1
0x539 DUP3
0x53a DUP1
0x53b MLOAD
0x53c SWAP1
0x53d PUSH1 0x20
0x53f ADD
0x540 SWAP1
0x541 DUP1
0x542 DUP4
0x543 DUP4
---
0x4d6: JUMPDEST 
0x4d7: V305 = DIV V301 V246
0x4d8: V306 = GASLIMIT
0x4d9: V307 = TIMESTAMP
0x4da: V308 = COINBASE
0x4db: V309 = 0x40
0x4dd: V310 = M[0x40]
0x4de: V311 = 0x20
0x4e0: V312 = ADD 0x20 V310
0x4e3: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x4f9: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x50f: V317 = 0x1000000000000000000000000
0x51d: V318 = MUL 0x1000000000000000000000000 V316
0x51f: M[V312] = V318
0x520: V319 = 0x14
0x522: V320 = ADD 0x14 V312
0x526: V321 = 0x40
0x528: V322 = M[0x40]
0x529: V323 = 0x20
0x52d: V324 = SUB V320 V322
0x52e: V325 = SUB V324 0x20
0x530: M[V322] = V325
0x532: V326 = 0x40
0x534: M[0x40] = V320
0x535: V327 = 0x40
0x537: V328 = M[0x40]
0x53b: V329 = M[V322]
0x53d: V330 = 0x20
0x53f: V331 = ADD 0x20 V322
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, S6, V237, S4, {0x0, 0x1}, V245, V246, V301]
Stack pops: 2
Stack additions: [V305, V306, V307, V322, V328, V328, V331, V329, V329, V328, V331]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S9, S8, S7, S6, V237, S4, {0x0, 0x1}, V245, V305, V306, V307, V322, V328, V328, V331, V329, V329, V328, V331]

================================

Block 0x544
[0x544:0x54e]
---
Predecessors: [0x4d6, 0x54f]
Successors: [0x54f, 0x569]
---
0x544 JUMPDEST
0x545 PUSH1 0x20
0x547 DUP4
0x548 LT
0x549 ISZERO
0x54a ISZERO
0x54b PUSH2 0x569
0x54e JUMPI
---
0x544: JUMPDEST 
0x545: V332 = 0x20
0x548: V333 = LT S2 0x20
0x549: V334 = ISZERO V333
0x54a: V335 = ISZERO V334
0x54b: V336 = 0x569
0x54e: JUMPI 0x569 V335
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S18, S17, S16, S15, V237, S13, {0x0, 0x1}, V245, V305, V306, V307, V322, V328, V328, V331, V329, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S18, S17, S16, S15, V237, S13, {0x0, 0x1}, V245, V305, V306, V307, V322, V328, V328, V331, V329, S2, S1, S0]

================================

Block 0x54f
[0x54f:0x568]
---
Predecessors: [0x544]
Successors: [0x544]
---
0x54f DUP1
0x550 MLOAD
0x551 DUP3
0x552 MSTORE
0x553 PUSH1 0x20
0x555 DUP3
0x556 ADD
0x557 SWAP2
0x558 POP
0x559 PUSH1 0x20
0x55b DUP2
0x55c ADD
0x55d SWAP1
0x55e POP
0x55f PUSH1 0x20
0x561 DUP4
0x562 SUB
0x563 SWAP3
0x564 POP
0x565 PUSH2 0x544
0x568 JUMP
---
0x550: V337 = M[S0]
0x552: M[S1] = V337
0x553: V338 = 0x20
0x556: V339 = ADD S1 0x20
0x559: V340 = 0x20
0x55c: V341 = ADD S0 0x20
0x55f: V342 = 0x20
0x562: V343 = SUB S2 0x20
0x565: V344 = 0x544
0x568: JUMP 0x544
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S18, S17, S16, S15, V237, S13, {0x0, 0x1}, V245, V305, V306, V307, V322, V328, V328, V331, V329, S2, S1, S0]
Stack pops: 3
Stack additions: [V343, V339, V341]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S18, S17, S16, S15, V237, S13, {0x0, 0x1}, V245, V305, V306, V307, V322, V328, V328, V331, V329, V343, V339, V341]

================================

Block 0x569
[0x569:0x5a1]
---
Predecessors: [0x544]
Successors: [0x5a2, 0x5a3]
---
0x569 JUMPDEST
0x56a PUSH1 0x1
0x56c DUP4
0x56d PUSH1 0x20
0x56f SUB
0x570 PUSH2 0x100
0x573 EXP
0x574 SUB
0x575 DUP1
0x576 NOT
0x577 DUP3
0x578 MLOAD
0x579 AND
0x57a DUP2
0x57b DUP5
0x57c MLOAD
0x57d AND
0x57e DUP1
0x57f DUP3
0x580 OR
0x581 DUP6
0x582 MSTORE
0x583 POP
0x584 POP
0x585 POP
0x586 POP
0x587 POP
0x588 POP
0x589 SWAP1
0x58a POP
0x58b ADD
0x58c SWAP2
0x58d POP
0x58e POP
0x58f PUSH1 0x40
0x591 MLOAD
0x592 DUP1
0x593 SWAP2
0x594 SUB
0x595 SWAP1
0x596 SHA3
0x597 PUSH1 0x1
0x599 SWAP1
0x59a DIV
0x59b DUP2
0x59c ISZERO
0x59d ISZERO
0x59e PUSH2 0x5a3
0x5a1 JUMPI
---
0x569: JUMPDEST 
0x56a: V345 = 0x1
0x56d: V346 = 0x20
0x56f: V347 = SUB 0x20 S2
0x570: V348 = 0x100
0x573: V349 = EXP 0x100 V347
0x574: V350 = SUB V349 0x1
0x576: V351 = NOT V350
0x578: V352 = M[S0]
0x579: V353 = AND V352 V351
0x57c: V354 = M[S1]
0x57d: V355 = AND V354 V350
0x580: V356 = OR V353 V355
0x582: M[S1] = V356
0x58b: V357 = ADD V329 V328
0x58f: V358 = 0x40
0x591: V359 = M[0x40]
0x594: V360 = SUB V357 V359
0x596: V361 = SHA3 V359 V360
0x597: V362 = 0x1
0x59a: V363 = DIV V361 0x1
0x59c: V364 = ISZERO V307
0x59d: V365 = ISZERO V364
0x59e: V366 = 0x5a3
0x5a1: JUMPI 0x5a3 V365
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S18, S17, S16, S15, V237, S13, {0x0, 0x1}, V245, V305, V306, V307, V322, V328, V328, V331, V329, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V363]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S18, S17, S16, S15, V237, S13, {0x0, 0x1}, V245, V305, V306, V307, V363]

================================

Block 0x5a2
[0x5a2:0x5a2]
---
Predecessors: [0x569]
Successors: []
---
0x5a2 INVALID
---
0x5a2: INVALID 
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S11, S10, S9, S8, V237, S6, {0x0, 0x1}, V245, V305, V306, V307, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S11, S10, S9, S8, V237, S6, {0x0, 0x1}, V245, V305, V306, V307, V363]

================================

Block 0x5a3
[0x5a3:0x5d9]
---
Predecessors: [0x569]
Successors: [0x5da]
---
0x5a3 JUMPDEST
0x5a4 DIV
0x5a5 DIFFICULTY
0x5a6 TIMESTAMP
0x5a7 ADD
0x5a8 ADD
0x5a9 ADD
0x5aa ADD
0x5ab ADD
0x5ac PUSH1 0x40
0x5ae MLOAD
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 DUP1
0x5b3 DUP3
0x5b4 DUP2
0x5b5 MSTORE
0x5b6 PUSH1 0x20
0x5b8 ADD
0x5b9 SWAP2
0x5ba POP
0x5bb POP
0x5bc PUSH1 0x40
0x5be MLOAD
0x5bf PUSH1 0x20
0x5c1 DUP2
0x5c2 DUP4
0x5c3 SUB
0x5c4 SUB
0x5c5 DUP2
0x5c6 MSTORE
0x5c7 SWAP1
0x5c8 PUSH1 0x40
0x5ca MSTORE
0x5cb PUSH1 0x40
0x5cd MLOAD
0x5ce DUP1
0x5cf DUP3
0x5d0 DUP1
0x5d1 MLOAD
0x5d2 SWAP1
0x5d3 PUSH1 0x20
0x5d5 ADD
0x5d6 SWAP1
0x5d7 DUP1
0x5d8 DUP4
0x5d9 DUP4
---
0x5a3: JUMPDEST 
0x5a4: V367 = DIV V363 V307
0x5a5: V368 = DIFFICULTY
0x5a6: V369 = TIMESTAMP
0x5a7: V370 = ADD V369 V368
0x5a8: V371 = ADD V370 V367
0x5a9: V372 = ADD V371 V306
0x5aa: V373 = ADD V372 V305
0x5ab: V374 = ADD V373 V245
0x5ac: V375 = 0x40
0x5ae: V376 = M[0x40]
0x5af: V377 = 0x20
0x5b1: V378 = ADD 0x20 V376
0x5b5: M[V378] = V374
0x5b6: V379 = 0x20
0x5b8: V380 = ADD 0x20 V378
0x5bc: V381 = 0x40
0x5be: V382 = M[0x40]
0x5bf: V383 = 0x20
0x5c3: V384 = SUB V380 V382
0x5c4: V385 = SUB V384 0x20
0x5c6: M[V382] = V385
0x5c8: V386 = 0x40
0x5ca: M[0x40] = V380
0x5cb: V387 = 0x40
0x5cd: V388 = M[0x40]
0x5d1: V389 = M[V382]
0x5d3: V390 = 0x20
0x5d5: V391 = ADD 0x20 V382
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S11, S10, S9, S8, V237, S6, {0x0, 0x1}, V245, V305, V306, V307, V363]
Stack pops: 5
Stack additions: [V382, V388, V388, V391, V389, V389, V388, V391]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S11, S10, S9, S8, V237, S6, {0x0, 0x1}, V382, V388, V388, V391, V389, V389, V388, V391]

================================

Block 0x5da
[0x5da:0x5e4]
---
Predecessors: [0x5a3, 0x5e5]
Successors: [0x5e5, 0x5ff]
---
0x5da JUMPDEST
0x5db PUSH1 0x20
0x5dd DUP4
0x5de LT
0x5df ISZERO
0x5e0 ISZERO
0x5e1 PUSH2 0x5ff
0x5e4 JUMPI
---
0x5da: JUMPDEST 
0x5db: V392 = 0x20
0x5de: V393 = LT S2 0x20
0x5df: V394 = ISZERO V393
0x5e0: V395 = ISZERO V394
0x5e1: V396 = 0x5ff
0x5e4: JUMPI 0x5ff V395
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, S11, V237, S9, {0x0, 0x1}, V382, V388, V388, V391, V389, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, S11, V237, S9, {0x0, 0x1}, V382, V388, V388, V391, V389, S2, S1, S0]

================================

Block 0x5e5
[0x5e5:0x5fe]
---
Predecessors: [0x5da]
Successors: [0x5da]
---
0x5e5 DUP1
0x5e6 MLOAD
0x5e7 DUP3
0x5e8 MSTORE
0x5e9 PUSH1 0x20
0x5eb DUP3
0x5ec ADD
0x5ed SWAP2
0x5ee POP
0x5ef PUSH1 0x20
0x5f1 DUP2
0x5f2 ADD
0x5f3 SWAP1
0x5f4 POP
0x5f5 PUSH1 0x20
0x5f7 DUP4
0x5f8 SUB
0x5f9 SWAP3
0x5fa POP
0x5fb PUSH2 0x5da
0x5fe JUMP
---
0x5e6: V397 = M[S0]
0x5e8: M[S1] = V397
0x5e9: V398 = 0x20
0x5ec: V399 = ADD S1 0x20
0x5ef: V400 = 0x20
0x5f2: V401 = ADD S0 0x20
0x5f5: V402 = 0x20
0x5f8: V403 = SUB S2 0x20
0x5fb: V404 = 0x5da
0x5fe: JUMP 0x5da
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, S11, V237, S9, {0x0, 0x1}, V382, V388, V388, V391, V389, S2, S1, S0]
Stack pops: 3
Stack additions: [V403, V399, V401]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, S11, V237, S9, {0x0, 0x1}, V382, V388, V388, V391, V389, V403, V399, V401]

================================

Block 0x5ff
[0x5ff:0x63f]
---
Predecessors: [0x5da]
Successors: [0x640, 0x641]
---
0x5ff JUMPDEST
0x600 PUSH1 0x1
0x602 DUP4
0x603 PUSH1 0x20
0x605 SUB
0x606 PUSH2 0x100
0x609 EXP
0x60a SUB
0x60b DUP1
0x60c NOT
0x60d DUP3
0x60e MLOAD
0x60f AND
0x610 DUP2
0x611 DUP5
0x612 MLOAD
0x613 AND
0x614 DUP1
0x615 DUP3
0x616 OR
0x617 DUP6
0x618 MSTORE
0x619 POP
0x61a POP
0x61b POP
0x61c POP
0x61d POP
0x61e POP
0x61f SWAP1
0x620 POP
0x621 ADD
0x622 SWAP2
0x623 POP
0x624 POP
0x625 PUSH1 0x40
0x627 MLOAD
0x628 DUP1
0x629 SWAP2
0x62a SUB
0x62b SWAP1
0x62c SHA3
0x62d PUSH1 0x1
0x62f SWAP1
0x630 DIV
0x631 SWAP4
0x632 POP
0x633 DUP3
0x634 PUSH2 0x3e8
0x637 DUP1
0x638 DUP7
0x639 DUP2
0x63a ISZERO
0x63b ISZERO
0x63c PUSH2 0x641
0x63f JUMPI
---
0x5ff: JUMPDEST 
0x600: V405 = 0x1
0x603: V406 = 0x20
0x605: V407 = SUB 0x20 S2
0x606: V408 = 0x100
0x609: V409 = EXP 0x100 V407
0x60a: V410 = SUB V409 0x1
0x60c: V411 = NOT V410
0x60e: V412 = M[S0]
0x60f: V413 = AND V412 V411
0x612: V414 = M[S1]
0x613: V415 = AND V414 V410
0x616: V416 = OR V413 V415
0x618: M[S1] = V416
0x621: V417 = ADD V389 V388
0x625: V418 = 0x40
0x627: V419 = M[0x40]
0x62a: V420 = SUB V417 V419
0x62c: V421 = SHA3 V419 V420
0x62d: V422 = 0x1
0x630: V423 = DIV V421 0x1
0x634: V424 = 0x3e8
0x63a: V425 = ISZERO 0x3e8
0x63b: V426 = ISZERO 0x0
0x63c: V427 = 0x641
0x63f: JUMPI 0x641 0x1
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, S11, V237, S9, {0x0, 0x1}, V382, V388, V388, V391, V389, S2, S1, S0]
Stack pops: 12
Stack additions: [V423, S10, S9, S8, S10, 0x3e8, 0x3e8, V423]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, V423, V237, S9, {0x0, 0x1}, V237, 0x3e8, 0x3e8, V423]

================================

Block 0x640
[0x640:0x640]
---
Predecessors: [0x5ff]
Successors: []
---
0x640 INVALID
---
0x640: INVALID 
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, V423, V237, S5, {0x0, 0x1}, V237, 0x3e8, 0x3e8, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, V423, V237, S5, {0x0, 0x1}, V237, 0x3e8, 0x3e8, V423]

================================

Block 0x641
[0x641:0x64c]
---
Predecessors: [0x5ff]
Successors: [0x64d, 0x78f]
---
0x641 JUMPDEST
0x642 DIV
0x643 MUL
0x644 DUP6
0x645 SUB
0x646 LT
0x647 ISZERO
0x648 ISZERO
0x649 PUSH2 0x78f
0x64c JUMPI
---
0x641: JUMPDEST 
0x642: V428 = DIV V423 0x3e8
0x643: V429 = MUL V428 0x3e8
0x645: V430 = SUB V423 V429
0x646: V431 = LT V430 V237
0x647: V432 = ISZERO V431
0x648: V433 = ISZERO V432
0x649: V434 = 0x78f
0x64c: JUMPI 0x78f V433
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, V423, V237, S5, {0x0, 0x1}, V237, 0x3e8, 0x3e8, V423]
Stack pops: 8
Stack additions: [S7, S6, S5, S4]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S10, S9, S8, V423, V237, S5, {0x0, 0x1}]

================================

Block 0x64d
[0x64d:0x71a]
---
Predecessors: [0x641]
Successors: [0x71b]
---
0x64d PUSH1 0xd6
0x64f PUSH1 0x94
0x651 DUP9
0x652 DUP5
0x653 PUSH1 0x40
0x655 MLOAD
0x656 PUSH1 0x20
0x658 ADD
0x659 DUP1
0x65a DUP6
0x65b PUSH1 0xff
0x65d AND
0x65e PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x67f MUL
0x680 DUP2
0x681 MSTORE
0x682 PUSH1 0x1
0x684 ADD
0x685 DUP5
0x686 PUSH1 0xff
0x688 AND
0x689 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x6aa MUL
0x6ab DUP2
0x6ac MSTORE
0x6ad PUSH1 0x1
0x6af ADD
0x6b0 DUP4
0x6b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c6 AND
0x6c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6dc AND
0x6dd PUSH13 0x1000000000000000000000000
0x6eb MUL
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x14
0x6f0 ADD
0x6f1 DUP3
0x6f2 DUP2
0x6f3 MSTORE
0x6f4 PUSH1 0x20
0x6f6 ADD
0x6f7 SWAP5
0x6f8 POP
0x6f9 POP
0x6fa POP
0x6fb POP
0x6fc POP
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 PUSH1 0x20
0x702 DUP2
0x703 DUP4
0x704 SUB
0x705 SUB
0x706 DUP2
0x707 MSTORE
0x708 SWAP1
0x709 PUSH1 0x40
0x70b MSTORE
0x70c PUSH1 0x40
0x70e MLOAD
0x70f DUP1
0x710 DUP3
0x711 DUP1
0x712 MLOAD
0x713 SWAP1
0x714 PUSH1 0x20
0x716 ADD
0x717 SWAP1
0x718 DUP1
0x719 DUP4
0x71a DUP4
---
0x64d: V435 = 0xd6
0x64f: V436 = 0x94
0x653: V437 = 0x40
0x655: V438 = M[0x40]
0x656: V439 = 0x20
0x658: V440 = ADD 0x20 V438
0x65b: V441 = 0xff
0x65d: V442 = AND 0xff 0xd6
0x65e: V443 = 0x100000000000000000000000000000000000000000000000000000000000000
0x67f: V444 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x681: M[V440] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x682: V445 = 0x1
0x684: V446 = ADD 0x1 V440
0x686: V447 = 0xff
0x688: V448 = AND 0xff 0x94
0x689: V449 = 0x100000000000000000000000000000000000000000000000000000000000000
0x6aa: V450 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x6ac: M[V446] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x6ad: V451 = 0x1
0x6af: V452 = ADD 0x1 V446
0x6b1: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c6: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x6c7: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x6dc: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x6dd: V457 = 0x1000000000000000000000000
0x6eb: V458 = MUL 0x1000000000000000000000000 V456
0x6ed: M[V452] = V458
0x6ee: V459 = 0x14
0x6f0: V460 = ADD 0x14 V452
0x6f3: M[V460] = S1
0x6f4: V461 = 0x20
0x6f6: V462 = ADD 0x20 V460
0x6fd: V463 = 0x40
0x6ff: V464 = M[0x40]
0x700: V465 = 0x20
0x704: V466 = SUB V462 V464
0x705: V467 = SUB V466 0x20
0x707: M[V464] = V467
0x709: V468 = 0x40
0x70b: M[0x40] = V462
0x70c: V469 = 0x40
0x70e: V470 = M[0x40]
0x712: V471 = M[V464]
0x714: V472 = 0x20
0x716: V473 = ADD 0x20 V464
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, V423, V237, S1, {0x0, 0x1}]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V464, V470, V470, V473, V471, V471, V470, V473]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, V423, V237, S1, {0x0, 0x1}, V464, V470, V470, V473, V471, V471, V470, V473]

================================

Block 0x71b
[0x71b:0x725]
---
Predecessors: [0x64d, 0x726]
Successors: [0x726, 0x740]
---
0x71b JUMPDEST
0x71c PUSH1 0x20
0x71e DUP4
0x71f LT
0x720 ISZERO
0x721 ISZERO
0x722 PUSH2 0x740
0x725 JUMPI
---
0x71b: JUMPDEST 
0x71c: V474 = 0x20
0x71f: V475 = LT S2 0x20
0x720: V476 = ISZERO V475
0x721: V477 = ISZERO V476
0x722: V478 = 0x740
0x725: JUMPI 0x740 V477
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, V423, V237, S9, {0x0, 0x1}, V464, V470, V470, V473, V471, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, V423, V237, S9, {0x0, 0x1}, V464, V470, V470, V473, V471, S2, S1, S0]

================================

Block 0x726
[0x726:0x73f]
---
Predecessors: [0x71b]
Successors: [0x71b]
---
0x726 DUP1
0x727 MLOAD
0x728 DUP3
0x729 MSTORE
0x72a PUSH1 0x20
0x72c DUP3
0x72d ADD
0x72e SWAP2
0x72f POP
0x730 PUSH1 0x20
0x732 DUP2
0x733 ADD
0x734 SWAP1
0x735 POP
0x736 PUSH1 0x20
0x738 DUP4
0x739 SUB
0x73a SWAP3
0x73b POP
0x73c PUSH2 0x71b
0x73f JUMP
---
0x727: V479 = M[S0]
0x729: M[S1] = V479
0x72a: V480 = 0x20
0x72d: V481 = ADD S1 0x20
0x730: V482 = 0x20
0x733: V483 = ADD S0 0x20
0x736: V484 = 0x20
0x739: V485 = SUB S2 0x20
0x73c: V486 = 0x71b
0x73f: JUMP 0x71b
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, V423, V237, S9, {0x0, 0x1}, V464, V470, V470, V473, V471, S2, S1, S0]
Stack pops: 3
Stack additions: [V485, V481, V483]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, V423, V237, S9, {0x0, 0x1}, V464, V470, V470, V473, V471, V485, V481, V483]

================================

Block 0x740
[0x740:0x78e]
---
Predecessors: [0x71b]
Successors: [0x79b]
---
0x740 JUMPDEST
0x741 PUSH1 0x1
0x743 DUP4
0x744 PUSH1 0x20
0x746 SUB
0x747 PUSH2 0x100
0x74a EXP
0x74b SUB
0x74c DUP1
0x74d NOT
0x74e DUP3
0x74f MLOAD
0x750 AND
0x751 DUP2
0x752 DUP5
0x753 MLOAD
0x754 AND
0x755 DUP1
0x756 DUP3
0x757 OR
0x758 DUP6
0x759 MSTORE
0x75a POP
0x75b POP
0x75c POP
0x75d POP
0x75e POP
0x75f POP
0x760 SWAP1
0x761 POP
0x762 ADD
0x763 SWAP2
0x764 POP
0x765 POP
0x766 PUSH1 0x40
0x768 MLOAD
0x769 DUP1
0x76a SWAP2
0x76b SUB
0x76c SWAP1
0x76d SHA3
0x76e PUSH1 0x1
0x770 SWAP1
0x771 DIV
0x772 SWAP7
0x773 POP
0x774 DUP2
0x775 DUP1
0x776 PUSH1 0x1
0x778 ADD
0x779 SWAP3
0x77a POP
0x77b POP
0x77c DUP6
0x77d DUP1
0x77e PUSH1 0x1
0x780 ADD
0x781 SWAP7
0x782 POP
0x783 POP
0x784 PUSH1 0x6
0x786 SLOAD
0x787 DUP6
0x788 ADD
0x789 SWAP5
0x78a POP
0x78b PUSH2 0x79b
0x78e JUMP
---
0x740: JUMPDEST 
0x741: V487 = 0x1
0x744: V488 = 0x20
0x746: V489 = SUB 0x20 S2
0x747: V490 = 0x100
0x74a: V491 = EXP 0x100 V489
0x74b: V492 = SUB V491 0x1
0x74d: V493 = NOT V492
0x74f: V494 = M[S0]
0x750: V495 = AND V494 V493
0x753: V496 = M[S1]
0x754: V497 = AND V496 V492
0x757: V498 = OR V495 V497
0x759: M[S1] = V498
0x762: V499 = ADD V471 V470
0x766: V500 = 0x40
0x768: V501 = M[0x40]
0x76b: V502 = SUB V499 V501
0x76d: V503 = SHA3 V501 V502
0x76e: V504 = 0x1
0x771: V505 = DIV V503 0x1
0x776: V506 = 0x1
0x778: V507 = ADD 0x1 S9
0x77e: V508 = 0x1
0x780: V509 = ADD 0x1 S13
0x784: V510 = 0x6
0x786: V511 = S[0x6]
0x788: V512 = ADD S12 V511
0x78b: V513 = 0x79b
0x78e: JUMP 0x79b
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S14, S13, S12, V423, V237, S9, {0x0, 0x1}, V464, V470, V470, V473, V471, S2, S1, S0]
Stack pops: 15
Stack additions: [V505, V509, V512, S11, S10, V507, S8]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, V505, V509, V512, V423, V237, V507, {0x0, 0x1}]

================================

Block 0x78f
[0x78f:0x79a]
---
Predecessors: [0x641]
Successors: [0x79b]
---
0x78f JUMPDEST
0x790 PUSH1 0x1
0x792 SWAP1
0x793 POP
0x794 PUSH1 0x7
0x796 SLOAD
0x797 DUP6
0x798 ADD
0x799 SWAP5
0x79a POP
---
0x78f: JUMPDEST 
0x790: V514 = 0x1
0x794: V515 = 0x7
0x796: V516 = S[0x7]
0x798: V517 = ADD S4 V516
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, V423, V237, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: [V517, S3, S2, S1, 0x1]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, V517, V423, V237, S1, 0x1]

================================

Block 0x79b
[0x79b:0x79f]
---
Predecessors: [0x740, 0x78f]
Successors: [0x403]
---
0x79b JUMPDEST
0x79c PUSH2 0x403
0x79f JUMP
---
0x79b: JUMPDEST 
0x79c: V518 = 0x403
0x79f: JUMP 0x403
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, V423, V237, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, V423, V237, S1, {0x0, 0x1}]

================================

Block 0x7a0
[0x7a0:0x7b4]
---
Predecessors: [0x403]
Successors: [0x1c6]
---
0x7a0 JUMPDEST
0x7a1 DUP5
0x7a2 DUP7
0x7a3 DUP9
0x7a4 SWAP10
0x7a5 POP
0x7a6 SWAP10
0x7a7 POP
0x7a8 SWAP10
0x7a9 POP
0x7aa POP
0x7ab POP
0x7ac POP
0x7ad POP
0x7ae POP
0x7af POP
0x7b0 POP
0x7b1 SWAP1
0x7b2 SWAP2
0x7b3 SWAP3
0x7b4 JUMP
---
0x7a0: JUMPDEST 
0x7b4: JUMP 0x1c6
---
Entry stack: [V11, 0x7d, 0x0, 0x0, 0x0, 0x1c6, 0x0, 0x0, 0x0, S6, S5, S4, S3, V237, S1, {0x0, 0x1}]
Stack pops: 11
Stack additions: [S4, S5, S6]
Exit stack: [V11, 0x7d, 0x0, 0x0, 0x0, S4, S5, S6]

================================

Block 0x7b5
[0x7b5:0x7b7]
---
Predecessors: [0x1e7]
Successors: [0x7b8]
---
0x7b5 JUMPDEST
0x7b6 PUSH1 0x0
---
0x7b5: JUMPDEST 
0x7b6: V519 = 0x0
---
Entry stack: [V11, 0x7d, S5, S4, S3, 0x1f0, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x7d, S5, S4, S3, 0x1f0, S1, S0, 0x0]

================================

Block 0x7b8
[0x7b8:0x7c0]
---
Predecessors: [0x7b5, 0x84e]
Successors: [0x7c1, 0x85d]
---
0x7b8 JUMPDEST
0x7b9 DUP3
0x7ba DUP2
0x7bb LT
0x7bc ISZERO
0x7bd PUSH2 0x85d
0x7c0 JUMPI
---
0x7b8: JUMPDEST 
0x7bb: V520 = LT S0 S2
0x7bc: V521 = ISZERO V520
0x7bd: V522 = 0x85d
0x7c0: JUMPI 0x85d V521
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]

================================

Block 0x7c1
[0x7c1:0x7ce]
---
Predecessors: [0x7b8]
Successors: [0x7cf, 0x82a]
---
0x7c1 DUP3
0x7c2 DUP2
0x7c3 DUP1
0x7c4 PUSH1 0x1
0x7c6 ADD
0x7c7 SWAP3
0x7c8 POP
0x7c9 EQ
0x7ca ISZERO
0x7cb PUSH2 0x82a
0x7ce JUMPI
---
0x7c4: V523 = 0x1
0x7c6: V524 = ADD 0x1 S0
0x7c9: V525 = EQ S0 S2
0x7ca: V526 = ISZERO V525
0x7cb: V527 = 0x82a
0x7ce: JUMPI 0x82a V526
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V524]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V524]

================================

Block 0x7cf
[0x7cf:0x80a]
---
Predecessors: [0x7c1]
Successors: [0x862]
---
0x7cf DUP2
0x7d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e5 AND
0x7e6 PUSH8 0x16345785d8a0000
0x7ef PUSH1 0x40
0x7f1 MLOAD
0x7f2 PUSH1 0x0
0x7f4 PUSH1 0x40
0x7f6 MLOAD
0x7f7 DUP1
0x7f8 DUP4
0x7f9 SUB
0x7fa DUP2
0x7fb DUP6
0x7fc DUP8
0x7fd GAS
0x7fe CALL
0x7ff SWAP3
0x800 POP
0x801 POP
0x802 POP
0x803 POP
0x804 PUSH2 0x80b
0x807 PUSH2 0x862
0x80a JUMP
---
0x7d0: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7e6: V530 = 0x16345785d8a0000
0x7ef: V531 = 0x40
0x7f1: V532 = M[0x40]
0x7f2: V533 = 0x0
0x7f4: V534 = 0x40
0x7f6: V535 = M[0x40]
0x7f9: V536 = SUB V532 V535
0x7fd: V537 = GAS
0x7fe: V538 = CALL V537 V529 0x16345785d8a0000 V535 V536 V535 0x0
0x804: V539 = 0x80b
0x807: V540 = 0x862
0x80a: JUMP 0x862
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V524]
Stack pops: 2
Stack additions: [S1, S0, 0x80b]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V524, 0x80b]

================================

Block 0x80b
[0x80b:0x81d]
---
Predecessors: [0x862]
Successors: [0x81e, 0x827]
---
0x80b JUMPDEST
0x80c PUSH1 0x40
0x80e MLOAD
0x80f DUP1
0x810 SWAP2
0x811 SUB
0x812 SWAP1
0x813 PUSH1 0x0
0x815 CREATE
0x816 DUP1
0x817 ISZERO
0x818 DUP1
0x819 ISZERO
0x81a PUSH2 0x827
0x81d JUMPI
---
0x80b: JUMPDEST 
0x80c: V541 = 0x40
0x80e: V542 = M[0x40]
0x811: V543 = SUB V574 V542
0x813: V544 = 0x0
0x815: V545 = CREATE 0x0 V542 V543
0x817: V546 = ISZERO V545
0x819: V547 = ISZERO V546
0x81a: V548 = 0x827
0x81d: JUMPI 0x827 V547
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, V574]
Stack pops: 1
Stack additions: [V545, V546]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, V545, V546]

================================

Block 0x81e
[0x81e:0x826]
---
Predecessors: [0x80b]
Successors: []
---
0x81e RETURNDATASIZE
0x81f PUSH1 0x0
0x821 DUP1
0x822 RETURNDATACOPY
0x823 RETURNDATASIZE
0x824 PUSH1 0x0
0x826 REVERT
---
0x81e: V549 = RETURNDATASIZE
0x81f: V550 = 0x0
0x822: RETURNDATACOPY 0x0 0x0 V549
0x823: V551 = RETURNDATASIZE
0x824: V552 = 0x0
0x826: REVERT 0x0 V551
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V524, V545, V546]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V524, V545, V546]

================================

Block 0x827
[0x827:0x829]
---
Predecessors: [0x80b]
Successors: [0x82a]
---
0x827 JUMPDEST
0x828 POP
0x829 POP
---
0x827: JUMPDEST 
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V524, V545, V546]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V524]

================================

Block 0x82a
[0x82a:0x831]
---
Predecessors: [0x7c1, 0x827]
Successors: [0x872]
---
0x82a JUMPDEST
0x82b PUSH2 0x832
0x82e PUSH2 0x872
0x831 JUMP
---
0x82a: JUMPDEST 
0x82b: V553 = 0x832
0x82e: V554 = 0x872
0x831: JUMP 0x872
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V524]
Stack pops: 0
Stack additions: [0x832]
Exit stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, V524, 0x832]

================================

Block 0x832
[0x832:0x844]
---
Predecessors: [0x872]
Successors: [0x845, 0x84e]
---
0x832 JUMPDEST
0x833 PUSH1 0x40
0x835 MLOAD
0x836 DUP1
0x837 SWAP2
0x838 SUB
0x839 SWAP1
0x83a PUSH1 0x0
0x83c CREATE
0x83d DUP1
0x83e ISZERO
0x83f DUP1
0x840 ISZERO
0x841 PUSH2 0x84e
0x844 JUMPI
---
0x832: JUMPDEST 
0x833: V555 = 0x40
0x835: V556 = M[0x40]
0x838: V557 = SUB V579 V556
0x83a: V558 = 0x0
0x83c: V559 = CREATE 0x0 V556 V557
0x83e: V560 = ISZERO V559
0x840: V561 = ISZERO V560
0x841: V562 = 0x84e
0x844: JUMPI 0x84e V561
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, V579]
Stack pops: 1
Stack additions: [V559, V560]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, V559, V560]

================================

Block 0x845
[0x845:0x84d]
---
Predecessors: [0x832]
Successors: []
---
0x845 RETURNDATASIZE
0x846 PUSH1 0x0
0x848 DUP1
0x849 RETURNDATACOPY
0x84a RETURNDATASIZE
0x84b PUSH1 0x0
0x84d REVERT
---
0x845: V563 = RETURNDATASIZE
0x846: V564 = 0x0
0x849: RETURNDATACOPY 0x0 0x0 V563
0x84a: V565 = RETURNDATASIZE
0x84b: V566 = 0x0
0x84d: REVERT 0x0 V565
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V524, V559, V560]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V524, V559, V560]

================================

Block 0x84e
[0x84e:0x85c]
---
Predecessors: [0x832]
Successors: [0x7b8]
---
0x84e JUMPDEST
0x84f POP
0x850 POP
0x851 DUP1
0x852 DUP1
0x853 PUSH1 0x1
0x855 ADD
0x856 SWAP2
0x857 POP
0x858 POP
0x859 PUSH2 0x7b8
0x85c JUMP
---
0x84e: JUMPDEST 
0x853: V567 = 0x1
0x855: V568 = ADD 0x1 V524
0x859: V569 = 0x7b8
0x85c: JUMP 0x7b8
---
Entry stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V524, V559, V560]
Stack pops: 3
Stack additions: [V568]
Exit stack: [V11, 0x7d, S8, S7, S6, 0x1f0, S4, S3, V568]

================================

Block 0x85d
[0x85d:0x861]
---
Predecessors: [0x7b8]
Successors: [0x1f0]
---
0x85d JUMPDEST
0x85e POP
0x85f POP
0x860 POP
0x861 JUMP
---
0x85d: JUMPDEST 
0x861: JUMP 0x1f0
---
Entry stack: [V11, 0x7d, S6, S5, S4, 0x1f0, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x7d, S6, S5, S4]

================================

Block 0x862
[0x862:0x871]
---
Predecessors: [0x7cf]
Successors: [0x80b]
---
0x862 JUMPDEST
0x863 PUSH1 0x40
0x865 MLOAD
0x866 PUSH2 0x1b9
0x869 DUP1
0x86a PUSH2 0x882
0x86d DUP4
0x86e CODECOPY
0x86f ADD
0x870 SWAP1
0x871 JUMP
---
0x862: JUMPDEST 
0x863: V570 = 0x40
0x865: V571 = M[0x40]
0x866: V572 = 0x1b9
0x86a: V573 = 0x882
0x86e: CODECOPY V571 0x882 0x1b9
0x86f: V574 = ADD 0x1b9 V571
0x871: JUMP 0x80b
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, 0x80b]
Stack pops: 1
Stack additions: [V574]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, V574]

================================

Block 0x872
[0x872:0x880]
---
Predecessors: [0x82a]
Successors: [0x832]
---
0x872 JUMPDEST
0x873 PUSH1 0x40
0x875 MLOAD
0x876 PUSH1 0x52
0x878 DUP1
0x879 PUSH2 0xa3b
0x87c DUP4
0x87d CODECOPY
0x87e ADD
0x87f SWAP1
0x880 JUMP
---
0x872: JUMPDEST 
0x873: V575 = 0x40
0x875: V576 = M[0x40]
0x876: V577 = 0x52
0x879: V578 = 0xa3b
0x87d: CODECOPY V576 0xa3b 0x52
0x87e: V579 = ADD 0x52 V576
0x880: JUMP 0x832
---
Entry stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, 0x832]
Stack pops: 1
Stack additions: [V579]
Exit stack: [V11, 0x7d, S7, S6, S5, 0x1f0, S3, S2, V524, V579]

================================

Block 0x881
[0x881:0x8e1]
---
Predecessors: []
Successors: [0x8e2]
---
0x881 STOP
0x882 PUSH1 0x80
0x884 PUSH1 0x40
0x886 MSTORE
0x887 PUSH20 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x89c PUSH1 0x0
0x89e DUP1
0x89f PUSH2 0x100
0x8a2 EXP
0x8a3 DUP2
0x8a4 SLOAD
0x8a5 DUP2
0x8a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bb MUL
0x8bc NOT
0x8bd AND
0x8be SWAP1
0x8bf DUP4
0x8c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d5 AND
0x8d6 MUL
0x8d7 OR
0x8d8 SWAP1
0x8d9 SSTORE
0x8da POP
0x8db CALLVALUE
0x8dc DUP1
0x8dd ISZERO
0x8de PUSH2 0x64
0x8e1 JUMPI
---
0x881: STOP 
0x882: V580 = 0x80
0x884: V581 = 0x40
0x886: M[0x40] = 0x80
0x887: V582 = 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x89c: V583 = 0x0
0x89f: V584 = 0x100
0x8a2: V585 = EXP 0x100 0x0
0x8a4: V586 = S[0x0]
0x8a6: V587 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: V588 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8bc: V589 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8bd: V590 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V586
0x8c0: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d5: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c
0x8d6: V593 = MUL 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c 0x1
0x8d7: V594 = OR 0xdd9fd6b6f8f7ea932997992bbe67eabb3e316f3c V590
0x8d9: S[0x0] = V594
0x8db: V595 = CALLVALUE
0x8dd: V596 = ISZERO V595
0x8de: V597 = 0x64
0x8e1: THROWI V596
---
Entry stack: []
Stack pops: 0
Stack additions: [V595]
Exit stack: []

================================

Block 0x8e2
[0x8e2:0x942]
---
Predecessors: [0x881]
Successors: [0x943]
---
0x8e2 PUSH1 0x0
0x8e4 DUP1
0x8e5 REVERT
0x8e6 JUMPDEST
0x8e7 POP
0x8e8 PUSH1 0x0
0x8ea DUP1
0x8eb SWAP1
0x8ec SLOAD
0x8ed SWAP1
0x8ee PUSH2 0x100
0x8f1 EXP
0x8f2 SWAP1
0x8f3 DIV
0x8f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x909 AND
0x90a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91f AND
0x920 PUSH8 0x16345785d8a0000
0x929 PUSH1 0x40
0x92b MLOAD
0x92c PUSH1 0x0
0x92e PUSH1 0x40
0x930 MLOAD
0x931 DUP1
0x932 DUP4
0x933 SUB
0x934 DUP2
0x935 DUP6
0x936 DUP8
0x937 GAS
0x938 CALL
0x939 SWAP3
0x93a POP
0x93b POP
0x93c POP
0x93d ISZERO
0x93e ISZERO
0x93f PUSH2 0x176
0x942 JUMPI
---
0x8e2: V598 = 0x0
0x8e5: REVERT 0x0 0x0
0x8e6: JUMPDEST 
0x8e8: V599 = 0x0
0x8ec: V600 = S[0x0]
0x8ee: V601 = 0x100
0x8f1: V602 = EXP 0x100 0x0
0x8f3: V603 = DIV V600 0x1
0x8f4: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0x909: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x90a: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0x91f: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x920: V608 = 0x16345785d8a0000
0x929: V609 = 0x40
0x92b: V610 = M[0x40]
0x92c: V611 = 0x0
0x92e: V612 = 0x40
0x930: V613 = M[0x40]
0x933: V614 = SUB V610 V613
0x937: V615 = GAS
0x938: V616 = CALL V615 V607 0x16345785d8a0000 V613 V614 V613 0x0
0x93d: V617 = ISZERO V616
0x93e: V618 = ISZERO V617
0x93f: V619 = 0x176
0x942: THROWI V618
---
Entry stack: [V595]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x943
[0x943:0x9c2]
---
Predecessors: [0x8e2]
Successors: [0x9c3]
---
0x943 PUSH1 0x0
0x945 DUP1
0x946 SWAP1
0x947 SLOAD
0x948 SWAP1
0x949 PUSH2 0x100
0x94c EXP
0x94d SWAP1
0x94e DIV
0x94f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x964 AND
0x965 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97a AND
0x97b PUSH4 0x3ccfd60b
0x980 PUSH1 0x40
0x982 MLOAD
0x983 DUP2
0x984 PUSH4 0xffffffff
0x989 AND
0x98a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9a8 MUL
0x9a9 DUP2
0x9aa MSTORE
0x9ab PUSH1 0x4
0x9ad ADD
0x9ae PUSH1 0x0
0x9b0 PUSH1 0x40
0x9b2 MLOAD
0x9b3 DUP1
0x9b4 DUP4
0x9b5 SUB
0x9b6 DUP2
0x9b7 PUSH1 0x0
0x9b9 DUP8
0x9ba DUP1
0x9bb EXTCODESIZE
0x9bc ISZERO
0x9bd DUP1
0x9be ISZERO
0x9bf PUSH2 0x145
0x9c2 JUMPI
---
0x943: V620 = 0x0
0x947: V621 = S[0x0]
0x949: V622 = 0x100
0x94c: V623 = EXP 0x100 0x0
0x94e: V624 = DIV V621 0x1
0x94f: V625 = 0xffffffffffffffffffffffffffffffffffffffff
0x964: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x965: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0x97a: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V626
0x97b: V629 = 0x3ccfd60b
0x980: V630 = 0x40
0x982: V631 = M[0x40]
0x984: V632 = 0xffffffff
0x989: V633 = AND 0xffffffff 0x3ccfd60b
0x98a: V634 = 0x100000000000000000000000000000000000000000000000000000000
0x9a8: V635 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x9aa: M[V631] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x9ab: V636 = 0x4
0x9ad: V637 = ADD 0x4 V631
0x9ae: V638 = 0x0
0x9b0: V639 = 0x40
0x9b2: V640 = M[0x40]
0x9b5: V641 = SUB V637 V640
0x9b7: V642 = 0x0
0x9bb: V643 = EXTCODESIZE V628
0x9bc: V644 = ISZERO V643
0x9be: V645 = ISZERO V644
0x9bf: V646 = 0x145
0x9c2: THROWI V645
---
Entry stack: []
Stack pops: 0
Stack additions: [V628, 0x3ccfd60b, V637, 0x0, V640, V641, V640, 0x0, V628, V644]
Exit stack: [V628, 0x3ccfd60b, V637, 0x0, V640, V641, V640, 0x0, V628, V644]

================================

Block 0x9c3
[0x9c3:0x9d1]
---
Predecessors: [0x943]
Successors: [0x9d2]
---
0x9c3 PUSH1 0x0
0x9c5 DUP1
0x9c6 REVERT
0x9c7 JUMPDEST
0x9c8 POP
0x9c9 GAS
0x9ca CALL
0x9cb ISZERO
0x9cc DUP1
0x9cd ISZERO
0x9ce PUSH2 0x159
0x9d1 JUMPI
---
0x9c3: V647 = 0x0
0x9c6: REVERT 0x0 0x0
0x9c7: JUMPDEST 
0x9c9: V648 = GAS
0x9ca: V649 = CALL V648 S1 S2 S3 S4 S5 S6
0x9cb: V650 = ISZERO V649
0x9cd: V651 = ISZERO V650
0x9ce: V652 = 0x159
0x9d1: THROWI V651
---
Entry stack: [V628, 0x3ccfd60b, V637, 0x0, V640, V641, V640, 0x0, V628, V644]
Stack pops: 0
Stack additions: [V650]
Exit stack: []

================================

Block 0x9d2
[0x9d2:0xa45]
---
Predecessors: [0x9c3]
Successors: [0xa46]
---
0x9d2 RETURNDATASIZE
0x9d3 PUSH1 0x0
0x9d5 DUP1
0x9d6 RETURNDATACOPY
0x9d7 RETURNDATASIZE
0x9d8 PUSH1 0x0
0x9da REVERT
0x9db JUMPDEST
0x9dc POP
0x9dd POP
0x9de POP
0x9df POP
0x9e0 CALLER
0x9e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f6 AND
0x9f7 SELFDESTRUCT
0x9f8 JUMPDEST
0x9f9 PUSH1 0x35
0x9fb DUP1
0x9fc PUSH2 0x184
0x9ff PUSH1 0x0
0xa01 CODECOPY
0xa02 PUSH1 0x0
0xa04 RETURN
0xa05 STOP
0xa06 PUSH1 0x80
0xa08 PUSH1 0x40
0xa0a MSTORE
0xa0b PUSH1 0x0
0xa0d DUP1
0xa0e REVERT
0xa0f STOP
0xa10 LOG1
0xa11 PUSH6 0x627a7a723058
0xa18 SHA3
0xa19 MISSING 0xd9
0xa1a SWAP16
0xa1b CALLCODE
0xa1c MISSING 0x29
0xa1d MISSING 0x1e
0xa1e MISSING 0xd8
0xa1f MSTORE8
0xa20 MISSING 0xb6
0xa21 EQ
0xa22 RETURNDATASIZE
0xa23 MISSING 0xc7
0xa24 PUSH23 0x5303ac7171f50baa880b57724a85761024ad667b002960
0xa3c DUP1
0xa3d PUSH1 0x40
0xa3f MSTORE
0xa40 CALLVALUE
0xa41 DUP1
0xa42 ISZERO
0xa43 PUSH1 0xf
0xa45 JUMPI
---
0x9d2: V653 = RETURNDATASIZE
0x9d3: V654 = 0x0
0x9d6: RETURNDATACOPY 0x0 0x0 V653
0x9d7: V655 = RETURNDATASIZE
0x9d8: V656 = 0x0
0x9da: REVERT 0x0 V655
0x9db: JUMPDEST 
0x9e0: V657 = CALLER
0x9e1: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f6: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x9f7: SELFDESTRUCT V659
0x9f8: JUMPDEST 
0x9f9: V660 = 0x35
0x9fc: V661 = 0x184
0x9ff: V662 = 0x0
0xa01: CODECOPY 0x0 0x184 0x35
0xa02: V663 = 0x0
0xa04: RETURN 0x0 0x35
0xa05: STOP 
0xa06: V664 = 0x80
0xa08: V665 = 0x40
0xa0a: M[0x40] = 0x80
0xa0b: V666 = 0x0
0xa0e: REVERT 0x0 0x0
0xa0f: STOP 
0xa10: LOG S0 S1 S2
0xa11: V667 = 0x627a7a723058
0xa18: V668 = SHA3 0x627a7a723058 S3
0xa19: MISSING 0xd9
0xa1b: V669 = CALLCODE S16 S1 S2 S3 S4 S5 S6
0xa1c: MISSING 0x29
0xa1d: MISSING 0x1e
0xa1e: MISSING 0xd8
0xa1f: M8[S0] = S1
0xa20: MISSING 0xb6
0xa21: V670 = EQ S0 S1
0xa22: V671 = RETURNDATASIZE
0xa23: MISSING 0xc7
0xa24: V672 = 0x5303ac7171f50baa880b57724a85761024ad667b002960
0xa3d: V673 = 0x40
0xa3f: M[0x40] = 0x5303ac7171f50baa880b57724a85761024ad667b002960
0xa40: V674 = CALLVALUE
0xa42: V675 = ISZERO V674
0xa43: V676 = 0xf
0xa45: THROWI V675
---
Entry stack: [V650]
Stack pops: 0
Stack additions: [V668, V669, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V671, V670, V674, 0x5303ac7171f50baa880b57724a85761024ad667b002960]
Exit stack: []

================================

Block 0xa46
[0xa46:0xab7]
---
Predecessors: [0x9d2]
Successors: []
---
0xa46 PUSH1 0x0
0xa48 DUP1
0xa49 REVERT
0xa4a JUMPDEST
0xa4b POP
0xa4c PUSH1 0x35
0xa4e DUP1
0xa4f PUSH1 0x1d
0xa51 PUSH1 0x0
0xa53 CODECOPY
0xa54 PUSH1 0x0
0xa56 RETURN
0xa57 STOP
0xa58 PUSH1 0x80
0xa5a PUSH1 0x40
0xa5c MSTORE
0xa5d PUSH1 0x0
0xa5f DUP1
0xa60 REVERT
0xa61 STOP
0xa62 LOG1
0xa63 PUSH6 0x627a7a723058
0xa6a SHA3
0xa6b MISSING 0xd6
0xa6c MISSING 0x4b
0xa6d MISSING 0x27
0xa6e MISSING 0x5f
0xa6f PUSH23 0xb3f2a0e50e8e3abeea7f26c5ddacc62e0c8393e011aea9
0xa87 MISSING 0xd3
0xa88 MISSING 0x25
0xa89 SWAP5
0xa8a CALL
0xa8b STOP
0xa8c MISSING 0x29
0xa8d LOG1
0xa8e PUSH6 0x627a7a723058
0xa95 SHA3
0xa96 PUSH6 0xdfc78027313d
0xa9d MISSING 0x5c
0xa9e PUSH22 0xec8b556d81fe383ef3e3a35f8bba0dea614f08e6174f
0xab5 MISSING 0xd6
0xab6 STOP
0xab7 MISSING 0x29
---
0xa46: V677 = 0x0
0xa49: REVERT 0x0 0x0
0xa4a: JUMPDEST 
0xa4c: V678 = 0x35
0xa4f: V679 = 0x1d
0xa51: V680 = 0x0
0xa53: CODECOPY 0x0 0x1d 0x35
0xa54: V681 = 0x0
0xa56: RETURN 0x0 0x35
0xa57: STOP 
0xa58: V682 = 0x80
0xa5a: V683 = 0x40
0xa5c: M[0x40] = 0x80
0xa5d: V684 = 0x0
0xa60: REVERT 0x0 0x0
0xa61: STOP 
0xa62: LOG S0 S1 S2
0xa63: V685 = 0x627a7a723058
0xa6a: V686 = SHA3 0x627a7a723058 S3
0xa6b: MISSING 0xd6
0xa6c: MISSING 0x4b
0xa6d: MISSING 0x27
0xa6e: MISSING 0x5f
0xa6f: V687 = 0xb3f2a0e50e8e3abeea7f26c5ddacc62e0c8393e011aea9
0xa87: MISSING 0xd3
0xa88: MISSING 0x25
0xa8a: V688 = CALL S5 S1 S2 S3 S4 S0 S6
0xa8b: STOP 
0xa8c: MISSING 0x29
0xa8d: LOG S0 S1 S2
0xa8e: V689 = 0x627a7a723058
0xa95: V690 = SHA3 0x627a7a723058 S3
0xa96: V691 = 0xdfc78027313d
0xa9d: MISSING 0x5c
0xa9e: V692 = 0xec8b556d81fe383ef3e3a35f8bba0dea614f08e6174f
0xab5: MISSING 0xd6
0xab6: STOP 
0xab7: MISSING 0x29
---
Entry stack: [0x5303ac7171f50baa880b57724a85761024ad667b002960, V674]
Stack pops: 0
Stack additions: [V686, 0xb3f2a0e50e8e3abeea7f26c5ddacc62e0c8393e011aea9, V688, 0xdfc78027313d, V690, 0xec8b556d81fe383ef3e3a35f8bba0dea614f08e6174f]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0x7f, 0xd7, 0xdb, 0x151, 0x15a

Function 1:
Public function signature: 0xc2381296
Entry block: 0x68
Exit block: 0x640
Body: 0x68, 0x70, 0x74, 0x7d, 0x15d, 0x1ba, 0x1be, 0x1c6, 0x1e7, 0x1f0, 0x1f1, 0x1f6, 0x2d4, 0x2df, 0x2f9, 0x3b9, 0x3bd, 0x3c8, 0x3d1, 0x3e3, 0x3e7, 0x403, 0x40b, 0x477, 0x482, 0x49c, 0x4d5, 0x4d6, 0x544, 0x54f, 0x569, 0x5a2, 0x5a3, 0x5da, 0x5e5, 0x5ff, 0x640, 0x641, 0x64d, 0x71b, 0x726, 0x740, 0x78f, 0x79b, 0x7a0, 0x7b5, 0x7b8, 0x7c1, 0x7cf, 0x80b, 0x81e, 0x827, 0x82a, 0x832, 0x845, 0x84e, 0x85d, 0x862, 0x872

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

