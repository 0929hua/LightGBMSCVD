Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x32]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x32
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x32
0xc: JUMPI 0x32 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x37]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2e52d606
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x37
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2e52d606
0x22: V15 = EQ V13 0x2e52d606
0x23: V16 = 0x37
0x26: JUMPI 0x37 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x5e]
---
0x27 DUP1
0x28 PUSH4 0x939a743a
0x2d EQ
0x2e PUSH2 0x5e
0x31 JUMPI
---
0x28: V17 = 0x939a743a
0x2d: V18 = EQ 0x939a743a V13
0x2e: V19 = 0x5e
0x31: JUMPI 0x5e V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x36]
---
Predecessors: [0x0, 0x27]
Successors: []
---
0x32 JUMPDEST
0x33 PUSH1 0x0
0x35 DUP1
0x36 REVERT
---
0x32: JUMPDEST 
0x33: V20 = 0x0
0x36: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x37
[0x37:0x3e]
---
Predecessors: [0xd]
Successors: [0x3f, 0x43]
---
0x37 JUMPDEST
0x38 CALLVALUE
0x39 DUP1
0x3a ISZERO
0x3b PUSH2 0x43
0x3e JUMPI
---
0x37: JUMPDEST 
0x38: V21 = CALLVALUE
0x3a: V22 = ISZERO V21
0x3b: V23 = 0x43
0x3e: JUMPI 0x43 V22
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V21]
Exit stack: [V13, V21]

================================

Block 0x3f
[0x3f:0x42]
---
Predecessors: [0x37]
Successors: []
---
0x3f PUSH1 0x0
0x41 DUP1
0x42 REVERT
---
0x3f: V24 = 0x0
0x42: REVERT 0x0 0x0
---
Entry stack: [V13, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V21]

================================

Block 0x43
[0x43:0x4b]
---
Predecessors: [0x37]
Successors: [0x74]
---
0x43 JUMPDEST
0x44 POP
0x45 PUSH2 0x4c
0x48 PUSH2 0x74
0x4b JUMP
---
0x43: JUMPDEST 
0x45: V25 = 0x4c
0x48: V26 = 0x74
0x4b: JUMP 0x74
---
Entry stack: [V13, V21]
Stack pops: 1
Stack additions: [0x4c]
Exit stack: [V13, 0x4c]

================================

Block 0x4c
[0x4c:0x5d]
---
Predecessors: [0x74]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x40
0x4f DUP1
0x50 MLOAD
0x51 SWAP2
0x52 DUP3
0x53 MSTORE
0x54 MLOAD
0x55 SWAP1
0x56 DUP2
0x57 SWAP1
0x58 SUB
0x59 PUSH1 0x20
0x5b ADD
0x5c SWAP1
0x5d RETURN
---
0x4c: JUMPDEST 
0x4d: V27 = 0x40
0x50: V28 = M[0x40]
0x53: M[V28] = V44
0x54: V29 = M[0x40]
0x58: V30 = SUB V28 V29
0x59: V31 = 0x20
0x5b: V32 = ADD 0x20 V30
0x5d: RETURN V29 V32
---
Entry stack: [V13, 0x4c, V44]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x4c]

================================

Block 0x5e
[0x5e:0x71]
---
Predecessors: [0x27]
Successors: [0x7a]
---
0x5e JUMPDEST
0x5f PUSH2 0x72
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a PUSH1 0x4
0x6c CALLDATALOAD
0x6d AND
0x6e PUSH2 0x7a
0x71 JUMP
---
0x5e: JUMPDEST 
0x5f: V33 = 0x72
0x62: V34 = 0x1
0x64: V35 = 0xa0
0x66: V36 = 0x2
0x68: V37 = EXP 0x2 0xa0
0x69: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V39 = 0x4
0x6c: V40 = CALLDATALOAD 0x4
0x6d: V41 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x6e: V42 = 0x7a
0x71: JUMP 0x7a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x72, V41]
Exit stack: [V13, 0x72, V41]

================================

Block 0x72
[0x72:0x73]
---
Predecessors: [0x29d]
Successors: []
---
0x72 JUMPDEST
0x73 STOP
---
0x72: JUMPDEST 
0x73: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x74
[0x74:0x79]
---
Predecessors: [0x43]
Successors: [0x4c]
---
0x74 JUMPDEST
0x75 PUSH1 0x1
0x77 SLOAD
0x78 DUP2
0x79 JUMP
---
0x74: JUMPDEST 
0x75: V43 = 0x1
0x77: V44 = S[0x1]
0x79: JUMP 0x4c
---
Entry stack: [V13, 0x4c]
Stack pops: 1
Stack additions: [S0, V44]
Exit stack: [V13, 0x4c, V44]

================================

Block 0x7a
[0x7a:0x91]
---
Predecessors: [0x5e]
Successors: [0x92, 0x96]
---
0x7a JUMPDEST
0x7b PUSH1 0x0
0x7d DUP1
0x7e SLOAD
0x7f DUP2
0x80 SWAP1
0x81 DUP2
0x82 SWAP1
0x83 PUSH1 0x1
0x85 PUSH1 0xa0
0x87 PUSH1 0x2
0x89 EXP
0x8a SUB
0x8b AND
0x8c CALLER
0x8d EQ
0x8e PUSH2 0x96
0x91 JUMPI
---
0x7a: JUMPDEST 
0x7b: V45 = 0x0
0x7e: V46 = S[0x0]
0x83: V47 = 0x1
0x85: V48 = 0xa0
0x87: V49 = 0x2
0x89: V50 = EXP 0x2 0xa0
0x8a: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x8c: V53 = CALLER
0x8d: V54 = EQ V53 V52
0x8e: V55 = 0x96
0x91: JUMPI 0x96 V54
---
Entry stack: [V13, 0x72, V41]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x7a]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V56 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]

================================

Block 0x96
[0x96:0xa6]
---
Predecessors: [0x7a]
Successors: [0xa7, 0xab]
---
0x96 JUMPDEST
0x97 PUSH8 0x16345785d8a0000
0xa0 CALLVALUE
0xa1 LT
0xa2 ISZERO
0xa3 PUSH2 0xab
0xa6 JUMPI
---
0x96: JUMPDEST 
0x97: V57 = 0x16345785d8a0000
0xa0: V58 = CALLVALUE
0xa1: V59 = LT V58 0x16345785d8a0000
0xa2: V60 = ISZERO V59
0xa3: V61 = 0xab
0xa6: JUMPI 0xab V60
---
Entry stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]

================================

Block 0xa7
[0xa7:0xaa]
---
Predecessors: [0x96]
Successors: []
---
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa REVERT
---
0xa7: V62 = 0x0
0xaa: REVERT 0x0 0x0
---
Entry stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]

================================

Block 0xab
[0xab:0xf0]
---
Predecessors: [0x96]
Successors: [0xf1, 0xf5]
---
0xab JUMPDEST
0xac DUP4
0xad SWAP3
0xae POP
0xaf PUSH8 0x58d15e176280000
0xb8 DUP4
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 AND
0xc2 PUSH4 0xd87574e0
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP2
0xcb PUSH4 0xffffffff
0xd0 AND
0xd1 PUSH1 0xe0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 MUL
0xd7 DUP2
0xd8 MSTORE
0xd9 PUSH1 0x4
0xdb ADD
0xdc PUSH1 0x20
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP4
0xe3 SUB
0xe4 DUP2
0xe5 PUSH1 0x0
0xe7 DUP8
0xe8 DUP1
0xe9 EXTCODESIZE
0xea ISZERO
0xeb DUP1
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xab: JUMPDEST 
0xaf: V63 = 0x58d15e176280000
0xb9: V64 = 0x1
0xbb: V65 = 0xa0
0xbd: V66 = 0x2
0xbf: V67 = EXP 0x2 0xa0
0xc0: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xc2: V70 = 0xd87574e0
0xc7: V71 = 0x40
0xc9: V72 = M[0x40]
0xcb: V73 = 0xffffffff
0xd0: V74 = AND 0xffffffff 0xd87574e0
0xd1: V75 = 0xe0
0xd3: V76 = 0x2
0xd5: V77 = EXP 0x2 0xe0
0xd6: V78 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0xd8: M[V72] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0xd9: V79 = 0x4
0xdb: V80 = ADD 0x4 V72
0xdc: V81 = 0x20
0xde: V82 = 0x40
0xe0: V83 = M[0x40]
0xe3: V84 = SUB V80 V83
0xe5: V85 = 0x0
0xe9: V86 = EXTCODESIZE V69
0xea: V87 = ISZERO V86
0xec: V88 = ISZERO V87
0xed: V89 = 0xf5
0xf0: JUMPI 0xf5 V88
---
Entry stack: [V13, 0x72, V41, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, S1, S0, 0x58d15e176280000, V69, 0xd87574e0, V80, 0x20, V83, V84, V83, 0x0, V69, V87]
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, 0x20, V83, V84, V83, 0x0, V69, V87]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xab]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V90 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, 0x20, V83, V84, V83, 0x0, V69, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, 0x20, V83, V84, V83, 0x0, V69, V87]

================================

Block 0xf5
[0xf5:0xff]
---
Predecessors: [0xab]
Successors: [0x100, 0x109]
---
0xf5 JUMPDEST
0xf6 POP
0xf7 GAS
0xf8 CALL
0xf9 ISZERO
0xfa DUP1
0xfb ISZERO
0xfc PUSH2 0x109
0xff JUMPI
---
0xf5: JUMPDEST 
0xf7: V91 = GAS
0xf8: V92 = CALL V91 V69 0x0 V83 V84 V83 0x20
0xf9: V93 = ISZERO V92
0xfb: V94 = ISZERO V93
0xfc: V95 = 0x109
0xff: JUMPI 0x109 V94
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, 0x20, V83, V84, V83, 0x0, V69, V87]
Stack pops: 7
Stack additions: [V93]
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, V93]

================================

Block 0x100
[0x100:0x108]
---
Predecessors: [0xf5]
Successors: []
---
0x100 RETURNDATASIZE
0x101 PUSH1 0x0
0x103 DUP1
0x104 RETURNDATACOPY
0x105 RETURNDATASIZE
0x106 PUSH1 0x0
0x108 REVERT
---
0x100: V96 = RETURNDATASIZE
0x101: V97 = 0x0
0x104: RETURNDATACOPY 0x0 0x0 V96
0x105: V98 = RETURNDATASIZE
0x106: V99 = 0x0
0x108: REVERT 0x0 V98
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, V93]

================================

Block 0x109
[0x109:0x11a]
---
Predecessors: [0xf5]
Successors: [0x11b, 0x11f]
---
0x109 JUMPDEST
0x10a POP
0x10b POP
0x10c POP
0x10d POP
0x10e PUSH1 0x40
0x110 MLOAD
0x111 RETURNDATASIZE
0x112 PUSH1 0x20
0x114 DUP2
0x115 LT
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x109: JUMPDEST 
0x10e: V100 = 0x40
0x110: V101 = M[0x40]
0x111: V102 = RETURNDATASIZE
0x112: V103 = 0x20
0x115: V104 = LT V102 0x20
0x116: V105 = ISZERO V104
0x117: V106 = 0x11f
0x11a: JUMPI 0x11f V105
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V69, 0xd87574e0, V80, V93]
Stack pops: 4
Stack additions: [V101, V102]
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V101, V102]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x109]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V107 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V101, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V101, V102]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x109]
Successors: [0x128, 0x12c]
---
0x11f JUMPDEST
0x120 POP
0x121 MLOAD
0x122 LT
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x11f: JUMPDEST 
0x121: V108 = M[V101]
0x122: V109 = LT V108 0x58d15e176280000
0x123: V110 = ISZERO V109
0x124: V111 = 0x12c
0x127: JUMPI 0x12c V110
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, 0x58d15e176280000, V101, V102]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x11f]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V112 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0]

================================

Block 0x12c
[0x12c:0x165]
---
Predecessors: [0x11f]
Successors: [0x166, 0x16a]
---
0x12c JUMPDEST
0x12d DUP3
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 AND
0x137 PUSH4 0x11a09ae7
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP2
0x140 PUSH4 0xffffffff
0x145 AND
0x146 PUSH1 0xe0
0x148 PUSH1 0x2
0x14a EXP
0x14b MUL
0x14c DUP2
0x14d MSTORE
0x14e PUSH1 0x4
0x150 ADD
0x151 PUSH1 0x20
0x153 PUSH1 0x40
0x155 MLOAD
0x156 DUP1
0x157 DUP4
0x158 SUB
0x159 DUP2
0x15a PUSH1 0x0
0x15c DUP8
0x15d DUP1
0x15e EXTCODESIZE
0x15f ISZERO
0x160 DUP1
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x12c: JUMPDEST 
0x12e: V113 = 0x1
0x130: V114 = 0xa0
0x132: V115 = 0x2
0x134: V116 = EXP 0x2 0xa0
0x135: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x137: V119 = 0x11a09ae7
0x13c: V120 = 0x40
0x13e: V121 = M[0x40]
0x140: V122 = 0xffffffff
0x145: V123 = AND 0xffffffff 0x11a09ae7
0x146: V124 = 0xe0
0x148: V125 = 0x2
0x14a: V126 = EXP 0x2 0xe0
0x14b: V127 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x14d: M[V121] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x14e: V128 = 0x4
0x150: V129 = ADD 0x4 V121
0x151: V130 = 0x20
0x153: V131 = 0x40
0x155: V132 = M[0x40]
0x158: V133 = SUB V129 V132
0x15a: V134 = 0x0
0x15e: V135 = EXTCODESIZE V118
0x15f: V136 = ISZERO V135
0x161: V137 = ISZERO V136
0x162: V138 = 0x16a
0x165: JUMPI 0x16a V137
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V118, 0x11a09ae7, V129, 0x20, V132, V133, V132, 0x0, V118, V136]
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, 0x20, V132, V133, V132, 0x0, V118, V136]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x12c]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V139 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, 0x20, V132, V133, V132, 0x0, V118, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, 0x20, V132, V133, V132, 0x0, V118, V136]

================================

Block 0x16a
[0x16a:0x174]
---
Predecessors: [0x12c]
Successors: [0x175, 0x17e]
---
0x16a JUMPDEST
0x16b POP
0x16c GAS
0x16d CALL
0x16e ISZERO
0x16f DUP1
0x170 ISZERO
0x171 PUSH2 0x17e
0x174 JUMPI
---
0x16a: JUMPDEST 
0x16c: V140 = GAS
0x16d: V141 = CALL V140 V118 0x0 V132 V133 V132 0x20
0x16e: V142 = ISZERO V141
0x170: V143 = ISZERO V142
0x171: V144 = 0x17e
0x174: JUMPI 0x17e V143
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, 0x20, V132, V133, V132, 0x0, V118, V136]
Stack pops: 7
Stack additions: [V142]
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, V142]

================================

Block 0x175
[0x175:0x17d]
---
Predecessors: [0x16a]
Successors: []
---
0x175 RETURNDATASIZE
0x176 PUSH1 0x0
0x178 DUP1
0x179 RETURNDATACOPY
0x17a RETURNDATASIZE
0x17b PUSH1 0x0
0x17d REVERT
---
0x175: V145 = RETURNDATASIZE
0x176: V146 = 0x0
0x179: RETURNDATACOPY 0x0 0x0 V145
0x17a: V147 = RETURNDATASIZE
0x17b: V148 = 0x0
0x17d: REVERT 0x0 V147
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, V142]

================================

Block 0x17e
[0x17e:0x18f]
---
Predecessors: [0x16a]
Successors: [0x190, 0x194]
---
0x17e JUMPDEST
0x17f POP
0x180 POP
0x181 POP
0x182 POP
0x183 PUSH1 0x40
0x185 MLOAD
0x186 RETURNDATASIZE
0x187 PUSH1 0x20
0x189 DUP2
0x18a LT
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x17e: JUMPDEST 
0x183: V149 = 0x40
0x185: V150 = M[0x40]
0x186: V151 = RETURNDATASIZE
0x187: V152 = 0x20
0x18a: V153 = LT V151 0x20
0x18b: V154 = ISZERO V153
0x18c: V155 = 0x194
0x18f: JUMPI 0x194 V154
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, V118, 0x11a09ae7, V129, V142]
Stack pops: 4
Stack additions: [V150, V151]
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, V150, V151]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x17e]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V156 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, V150, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x72, V41, V41, 0x0, 0x0, V150, V151]

================================

Block 0x194
[0x194:0x1a6]
---
Predecessors: [0x17e]
Successors: [0x2a4]
---
0x194 JUMPDEST
0x195 POP
0x196 MLOAD
0x197 PUSH1 0x1
0x199 SLOAD
0x19a SWAP1
0x19b SWAP3
0x19c POP
0x19d PUSH2 0x1a7
0x1a0 SWAP1
0x1a1 ADDRESS
0x1a2 SWAP1
0x1a3 PUSH2 0x2a4
0x1a6 JUMP
---
0x194: JUMPDEST 
0x196: V157 = M[V150]
0x197: V158 = 0x1
0x199: V159 = S[0x1]
0x19d: V160 = 0x1a7
0x1a1: V161 = ADDRESS
0x1a3: V162 = 0x2a4
0x1a6: JUMP 0x2a4
---
Entry stack: [V13, 0x72, V41, V41, 0x0, 0x0, V150, V151]
Stack pops: 4
Stack additions: [V157, S2, 0x1a7, V161, V159]
Exit stack: [V13, 0x72, V41, V41, V157, 0x0, 0x1a7, V161, V159]

================================

Block 0x1a7
[0x1a7:0x1a9]
---
Predecessors: [0x6b9]
Successors: [0x1aa]
---
0x1a7 JUMPDEST
0x1a8 SWAP1
0x1a9 POP
---
0x1a7: JUMPDEST 
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x1aa
[0x1aa:0x1b3]
---
Predecessors: [0x1a7, 0x1f5]
Successors: [0x6bf]
---
0x1aa JUMPDEST
0x1ab PUSH2 0x1b4
0x1ae DUP2
0x1af DUP4
0x1b0 PUSH2 0x6bf
0x1b3 JUMP
---
0x1aa: JUMPDEST 
0x1ab: V163 = 0x1b4
0x1b0: V164 = 0x6bf
0x1b3: JUMP 0x6bf
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1b4, S0, S1]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1b4, S0, S1]

================================

Block 0x1b4
[0x1b4:0x1ba]
---
Predecessors: [0x6b9, 0x8db]
Successors: [0x1bb, 0x1fc]
---
0x1b4 JUMPDEST
0x1b5 ISZERO
0x1b6 ISZERO
0x1b7 PUSH2 0x1fc
0x1ba JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V165 = ISZERO {0x0, 0x1}
0x1b6: V166 = ISZERO V165
0x1b7: V167 = 0x1fc
0x1ba: JUMPI 0x1fc V166
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x1b4]
Successors: [0x954]
---
0x1bb PUSH2 0x1c2
0x1be PUSH2 0x954
0x1c1 JUMP
---
0x1bb: V168 = 0x1c2
0x1be: V169 = 0x954
0x1c1: JUMP 0x954
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x1c2]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1c2]

================================

Block 0x1c2
[0x1c2:0x1d4]
---
Predecessors: [0x954]
Successors: [0x1d5, 0x1de]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca PUSH1 0x0
0x1cc CREATE
0x1cd DUP1
0x1ce ISZERO
0x1cf DUP1
0x1d0 ISZERO
0x1d1 PUSH2 0x1de
0x1d4 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V170 = 0x40
0x1c5: V171 = M[0x40]
0x1c8: V172 = SUB V695 V171
0x1ca: V173 = 0x0
0x1cc: V174 = CREATE 0x0 V171 V172
0x1ce: V175 = ISZERO V174
0x1d0: V176 = ISZERO V175
0x1d1: V177 = 0x1de
0x1d4: JUMPI 0x1de V176
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V695]
Stack pops: 1
Stack additions: [V174, V175]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V174, V175]

================================

Block 0x1d5
[0x1d5:0x1dd]
---
Predecessors: [0x1c2]
Successors: []
---
0x1d5 RETURNDATASIZE
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 RETURNDATACOPY
0x1da RETURNDATASIZE
0x1db PUSH1 0x0
0x1dd REVERT
---
0x1d5: V178 = RETURNDATASIZE
0x1d6: V179 = 0x0
0x1d9: RETURNDATACOPY 0x0 0x0 V178
0x1da: V180 = RETURNDATASIZE
0x1db: V181 = 0x0
0x1dd: REVERT 0x0 V180
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V174, V175]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V174, V175]

================================

Block 0x1de
[0x1de:0x1f4]
---
Predecessors: [0x1c2]
Successors: [0x2a4]
---
0x1de JUMPDEST
0x1df POP
0x1e0 POP
0x1e1 PUSH1 0x1
0x1e3 DUP1
0x1e4 SLOAD
0x1e5 DUP2
0x1e6 ADD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 SWAP1
0x1ea SSTORE
0x1eb PUSH2 0x1f5
0x1ee SWAP1
0x1ef ADDRESS
0x1f0 SWAP1
0x1f1 PUSH2 0x2a4
0x1f4 JUMP
---
0x1de: JUMPDEST 
0x1e1: V182 = 0x1
0x1e4: V183 = S[0x1]
0x1e6: V184 = ADD 0x1 V183
0x1ea: S[0x1] = V184
0x1eb: V185 = 0x1f5
0x1ef: V186 = ADDRESS
0x1f1: V187 = 0x2a4
0x1f4: JUMP 0x2a4
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V174, V175]
Stack pops: 2
Stack additions: [0x1f5, V186, V184]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1f5, V186, V184]

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x6b9]
Successors: [0x1aa]
---
0x1f5 JUMPDEST
0x1f6 SWAP1
0x1f7 POP
0x1f8 PUSH2 0x1aa
0x1fb JUMP
---
0x1f5: JUMPDEST 
0x1f8: V188 = 0x1aa
0x1fb: JUMP 0x1aa
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x1fc
[0x1fc:0x22a]
---
Predecessors: [0x1b4]
Successors: [0x963]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 DUP3
0x209 AND
0x20a SWAP1
0x20b PUSH8 0x16345785d8a0000
0x214 SWAP1
0x215 PUSH1 0x0
0x217 DUP2
0x218 DUP2
0x219 DUP2
0x21a DUP6
0x21b DUP8
0x21c GAS
0x21d CALL
0x21e SWAP3
0x21f POP
0x220 POP
0x221 POP
0x222 POP
0x223 DUP3
0x224 PUSH2 0x22b
0x227 PUSH2 0x963
0x22a JUMP
---
0x1fc: JUMPDEST 
0x1fd: V189 = 0x40
0x1ff: V190 = M[0x40]
0x200: V191 = 0x1
0x202: V192 = 0xa0
0x204: V193 = 0x2
0x206: V194 = EXP 0x2 0xa0
0x207: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V196 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V197 = 0x16345785d8a0000
0x215: V198 = 0x0
0x21c: V199 = GAS
0x21d: V200 = CALL V199 V196 0x16345785d8a0000 V190 0x0 V190 0x0
0x224: V201 = 0x22b
0x227: V202 = 0x963
0x22a: JUMP 0x963
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x22b]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S2, 0x22b]

================================

Block 0x22b
[0x22b:0x24e]
---
Predecessors: [0x963]
Successors: [0x24f, 0x258]
---
0x22b JUMPDEST
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 SWAP2
0x236 AND
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x40
0x23b MLOAD
0x23c SWAP1
0x23d DUP2
0x23e SWAP1
0x23f SUB
0x240 PUSH1 0x20
0x242 ADD
0x243 SWAP1
0x244 PUSH1 0x0
0x246 CREATE
0x247 DUP1
0x248 ISZERO
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x258
0x24e JUMPI
---
0x22b: JUMPDEST 
0x22c: V203 = 0x1
0x22e: V204 = 0xa0
0x230: V205 = 0x2
0x232: V206 = EXP 0x2 0xa0
0x233: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V208 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x238: M[V700] = V208
0x239: V209 = 0x40
0x23b: V210 = M[0x40]
0x23f: V211 = SUB V700 V210
0x240: V212 = 0x20
0x242: V213 = ADD 0x20 V211
0x244: V214 = 0x0
0x246: V215 = CREATE 0x0 V210 V213
0x248: V216 = ISZERO V215
0x24a: V217 = ISZERO V216
0x24b: V218 = 0x258
0x24e: JUMPI 0x258 V217
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V700]
Stack pops: 2
Stack additions: [V215, V216]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V215, V216]

================================

Block 0x24f
[0x24f:0x257]
---
Predecessors: [0x22b]
Successors: []
---
0x24f RETURNDATASIZE
0x250 PUSH1 0x0
0x252 DUP1
0x253 RETURNDATACOPY
0x254 RETURNDATASIZE
0x255 PUSH1 0x0
0x257 REVERT
---
0x24f: V219 = RETURNDATASIZE
0x250: V220 = 0x0
0x253: RETURNDATACOPY 0x0 0x0 V219
0x254: V221 = RETURNDATASIZE
0x255: V222 = 0x0
0x257: REVERT 0x0 V221
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V215, V216]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V215, V216]

================================

Block 0x258
[0x258:0x293]
---
Predecessors: [0x22b]
Successors: [0x294, 0x29d]
---
0x258 JUMPDEST
0x259 POP
0x25a POP
0x25b PUSH1 0x1
0x25d DUP1
0x25e SLOAD
0x25f DUP2
0x260 ADD
0x261 SWAP1
0x262 SSTORE
0x263 PUSH1 0x0
0x265 DUP1
0x266 SLOAD
0x267 PUSH1 0x40
0x269 MLOAD
0x26a PUSH1 0x1
0x26c PUSH1 0xa0
0x26e PUSH1 0x2
0x270 EXP
0x271 SUB
0x272 SWAP1
0x273 SWAP2
0x274 AND
0x275 SWAP2
0x276 ADDRESS
0x277 BALANCE
0x278 DUP1
0x279 ISZERO
0x27a PUSH2 0x8fc
0x27d MUL
0x27e SWAP3
0x27f SWAP1
0x280 SWAP2
0x281 DUP2
0x282 DUP2
0x283 DUP2
0x284 DUP6
0x285 DUP9
0x286 DUP9
0x287 CALL
0x288 SWAP4
0x289 POP
0x28a POP
0x28b POP
0x28c POP
0x28d ISZERO
0x28e DUP1
0x28f ISZERO
0x290 PUSH2 0x29d
0x293 JUMPI
---
0x258: JUMPDEST 
0x25b: V223 = 0x1
0x25e: V224 = S[0x1]
0x260: V225 = ADD 0x1 V224
0x262: S[0x1] = V225
0x263: V226 = 0x0
0x266: V227 = S[0x0]
0x267: V228 = 0x40
0x269: V229 = M[0x40]
0x26a: V230 = 0x1
0x26c: V231 = 0xa0
0x26e: V232 = 0x2
0x270: V233 = EXP 0x2 0xa0
0x271: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V235 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x276: V236 = ADDRESS
0x277: V237 = BALANCE V236
0x279: V238 = ISZERO V237
0x27a: V239 = 0x8fc
0x27d: V240 = MUL 0x8fc V238
0x287: V241 = CALL V240 V235 V237 V229 0x0 V229 0x0
0x28d: V242 = ISZERO V241
0x28f: V243 = ISZERO V242
0x290: V244 = 0x29d
0x293: JUMPI 0x29d V243
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V215, V216]
Stack pops: 2
Stack additions: [V242]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V242]

================================

Block 0x294
[0x294:0x29c]
---
Predecessors: [0x258]
Successors: []
---
0x294 RETURNDATASIZE
0x295 PUSH1 0x0
0x297 DUP1
0x298 RETURNDATACOPY
0x299 RETURNDATASIZE
0x29a PUSH1 0x0
0x29c REVERT
---
0x294: V245 = RETURNDATASIZE
0x295: V246 = 0x0
0x298: RETURNDATACOPY 0x0 0x0 V245
0x299: V247 = RETURNDATASIZE
0x29a: V248 = 0x0
0x29c: REVERT 0x0 V247
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V242]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V242]

================================

Block 0x29d
[0x29d:0x2a3]
---
Predecessors: [0x258]
Successors: [0x72]
---
0x29d JUMPDEST
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 JUMP
---
0x29d: JUMPDEST 
0x2a3: JUMP S5
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V242]
Stack pops: 6
Stack additions: []
Exit stack: [S12, S11, S10, S9, S8, S7, S6]

================================

Block 0x2a4
[0x2a4:0x2ad]
---
Predecessors: [0x194, 0x1de]
Successors: [0x2ae, 0x336]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x0
0x2a7 DUP2
0x2a8 ISZERO
0x2a9 ISZERO
0x2aa PUSH2 0x336
0x2ad JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V249 = 0x0
0x2a8: V250 = ISZERO S0
0x2a9: V251 = ISZERO V250
0x2aa: V252 = 0x336
0x2ad: JUMPI 0x336 V251
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x1a7, 0x1f5}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x1a7, 0x1f5}, S1, S0, 0x0]

================================

Block 0x2ae
[0x2ae:0x335]
---
Predecessors: [0x2a4]
Successors: [0x6b9]
---
0x2ae POP
0x2af PUSH1 0x40
0x2b1 DUP1
0x2b2 MLOAD
0x2b3 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 PUSH1 0xfa
0x2d8 PUSH1 0x2
0x2da EXP
0x2db PUSH1 0x25
0x2dd MUL
0x2de PUSH1 0x1
0x2e0 DUP3
0x2e1 ADD
0x2e2 MSTORE
0x2e3 PUSH13 0x1000000000000000000000000
0x2f1 PUSH1 0x1
0x2f3 PUSH1 0xa0
0x2f5 PUSH1 0x2
0x2f7 EXP
0x2f8 SUB
0x2f9 DUP6
0x2fa AND
0x2fb MUL
0x2fc PUSH1 0x2
0x2fe DUP3
0x2ff ADD
0x300 MSTORE
0x301 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000
0x322 PUSH1 0x16
0x324 DUP3
0x325 ADD
0x326 MSTORE
0x327 SWAP1
0x328 MLOAD
0x329 SWAP1
0x32a DUP2
0x32b SWAP1
0x32c SUB
0x32d PUSH1 0x17
0x32f ADD
0x330 SWAP1
0x331 SHA3
0x332 PUSH2 0x6b9
0x335 JUMP
---
0x2af: V253 = 0x40
0x2b2: V254 = M[0x40]
0x2b3: V255 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x2d5: M[V254] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x2d6: V256 = 0xfa
0x2d8: V257 = 0x2
0x2da: V258 = EXP 0x2 0xfa
0x2db: V259 = 0x25
0x2dd: V260 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x2de: V261 = 0x1
0x2e1: V262 = ADD V254 0x1
0x2e2: M[V262] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x2e3: V263 = 0x1000000000000000000000000
0x2f1: V264 = 0x1
0x2f3: V265 = 0xa0
0x2f5: V266 = 0x2
0x2f7: V267 = EXP 0x2 0xa0
0x2f8: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fa: V269 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V270 = MUL V269 0x1000000000000000000000000
0x2fc: V271 = 0x2
0x2ff: V272 = ADD V254 0x2
0x300: M[V272] = V270
0x301: V273 = 0x8000000000000000000000000000000000000000000000000000000000000000
0x322: V274 = 0x16
0x325: V275 = ADD V254 0x16
0x326: M[V275] = 0x8000000000000000000000000000000000000000000000000000000000000000
0x328: V276 = M[0x40]
0x32c: V277 = SUB V254 V276
0x32d: V278 = 0x17
0x32f: V279 = ADD 0x17 V277
0x331: V280 = SHA3 V276 V279
0x332: V281 = 0x6b9
0x335: JUMP 0x6b9
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V280]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, V280]

================================

Block 0x336
[0x336:0x33e]
---
Predecessors: [0x2a4]
Successors: [0x33f, 0x3eb]
---
0x336 JUMPDEST
0x337 PUSH1 0x7f
0x339 DUP3
0x33a GT
0x33b PUSH2 0x3eb
0x33e JUMPI
---
0x336: JUMPDEST 
0x337: V282 = 0x7f
0x33a: V283 = GT S1 0x7f
0x33b: V284 = 0x3eb
0x33e: JUMPI 0x3eb V283
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]

================================

Block 0x33f
[0x33f:0x3ea]
---
Predecessors: [0x336]
Successors: [0x6b9]
---
0x33f POP
0x340 PUSH1 0x40
0x342 DUP1
0x343 MLOAD
0x344 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0xfa
0x369 PUSH1 0x2
0x36b EXP
0x36c PUSH1 0x25
0x36e MUL
0x36f PUSH1 0x1
0x371 DUP3
0x372 ADD
0x373 MSTORE
0x374 PUSH13 0x1000000000000000000000000
0x382 PUSH1 0x1
0x384 PUSH1 0xa0
0x386 PUSH1 0x2
0x388 EXP
0x389 SUB
0x38a DUP6
0x38b AND
0x38c MUL
0x38d PUSH1 0x2
0x38f DUP3
0x390 ADD
0x391 MSTORE
0x392 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x3b3 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x3d4 DUP5
0x3d5 MUL
0x3d6 AND
0x3d7 PUSH1 0x16
0x3d9 DUP3
0x3da ADD
0x3db MSTORE
0x3dc SWAP1
0x3dd MLOAD
0x3de SWAP1
0x3df DUP2
0x3e0 SWAP1
0x3e1 SUB
0x3e2 PUSH1 0x17
0x3e4 ADD
0x3e5 SWAP1
0x3e6 SHA3
0x3e7 PUSH2 0x6b9
0x3ea JUMP
---
0x340: V285 = 0x40
0x343: V286 = M[0x40]
0x344: V287 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x366: M[V286] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x367: V288 = 0xfa
0x369: V289 = 0x2
0x36b: V290 = EXP 0x2 0xfa
0x36c: V291 = 0x25
0x36e: V292 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x36f: V293 = 0x1
0x372: V294 = ADD V286 0x1
0x373: M[V294] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x374: V295 = 0x1000000000000000000000000
0x382: V296 = 0x1
0x384: V297 = 0xa0
0x386: V298 = 0x2
0x388: V299 = EXP 0x2 0xa0
0x389: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38b: V301 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x38c: V302 = MUL V301 0x1000000000000000000000000
0x38d: V303 = 0x2
0x390: V304 = ADD V286 0x2
0x391: M[V304] = V302
0x392: V305 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x3b3: V306 = 0x100000000000000000000000000000000000000000000000000000000000000
0x3d5: V307 = MUL S1 0x100000000000000000000000000000000000000000000000000000000000000
0x3d6: V308 = AND V307 0xff00000000000000000000000000000000000000000000000000000000000000
0x3d7: V309 = 0x16
0x3da: V310 = ADD V286 0x16
0x3db: M[V310] = V308
0x3dd: V311 = M[0x40]
0x3e1: V312 = SUB V286 V311
0x3e2: V313 = 0x17
0x3e4: V314 = ADD 0x17 V312
0x3e6: V315 = SHA3 V311 V314
0x3e7: V316 = 0x6b9
0x3ea: JUMP 0x6b9
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V315]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, V315]

================================

Block 0x3eb
[0x3eb:0x3f3]
---
Predecessors: [0x336]
Successors: [0x3f4, 0x4a7]
---
0x3eb JUMPDEST
0x3ec PUSH1 0xff
0x3ee DUP3
0x3ef GT
0x3f0 PUSH2 0x4a7
0x3f3 JUMPI
---
0x3eb: JUMPDEST 
0x3ec: V317 = 0xff
0x3ef: V318 = GT S1 0xff
0x3f0: V319 = 0x4a7
0x3f3: JUMPI 0x4a7 V318
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]

================================

Block 0x3f4
[0x3f4:0x4a6]
---
Predecessors: [0x3eb]
Successors: [0x6b9]
---
0x3f4 POP
0x3f5 PUSH1 0x40
0x3f7 DUP1
0x3f8 MLOAD
0x3f9 PUSH32 0xd700000000000000000000000000000000000000000000000000000000000000
0x41a DUP2
0x41b MSTORE
0x41c PUSH1 0xfa
0x41e PUSH1 0x2
0x420 EXP
0x421 PUSH1 0x25
0x423 MUL
0x424 PUSH1 0x1
0x426 DUP3
0x427 ADD
0x428 MSTORE
0x429 PUSH13 0x1000000000000000000000000
0x437 PUSH1 0x1
0x439 PUSH1 0xa0
0x43b PUSH1 0x2
0x43d EXP
0x43e SUB
0x43f DUP6
0x440 AND
0x441 MUL
0x442 PUSH1 0x2
0x444 DUP3
0x445 ADD
0x446 MSTORE
0x447 PUSH32 0x8100000000000000000000000000000000000000000000000000000000000000
0x468 PUSH1 0x16
0x46a DUP3
0x46b ADD
0x46c MSTORE
0x46d PUSH1 0xff
0x46f DUP4
0x470 AND
0x471 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x492 MUL
0x493 PUSH1 0x17
0x495 DUP3
0x496 ADD
0x497 MSTORE
0x498 SWAP1
0x499 MLOAD
0x49a SWAP1
0x49b DUP2
0x49c SWAP1
0x49d SUB
0x49e PUSH1 0x18
0x4a0 ADD
0x4a1 SWAP1
0x4a2 SHA3
0x4a3 PUSH2 0x6b9
0x4a6 JUMP
---
0x3f5: V320 = 0x40
0x3f8: V321 = M[0x40]
0x3f9: V322 = 0xd700000000000000000000000000000000000000000000000000000000000000
0x41b: M[V321] = 0xd700000000000000000000000000000000000000000000000000000000000000
0x41c: V323 = 0xfa
0x41e: V324 = 0x2
0x420: V325 = EXP 0x2 0xfa
0x421: V326 = 0x25
0x423: V327 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x424: V328 = 0x1
0x427: V329 = ADD V321 0x1
0x428: M[V329] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x429: V330 = 0x1000000000000000000000000
0x437: V331 = 0x1
0x439: V332 = 0xa0
0x43b: V333 = 0x2
0x43d: V334 = EXP 0x2 0xa0
0x43e: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x440: V336 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x441: V337 = MUL V336 0x1000000000000000000000000
0x442: V338 = 0x2
0x445: V339 = ADD V321 0x2
0x446: M[V339] = V337
0x447: V340 = 0x8100000000000000000000000000000000000000000000000000000000000000
0x468: V341 = 0x16
0x46b: V342 = ADD V321 0x16
0x46c: M[V342] = 0x8100000000000000000000000000000000000000000000000000000000000000
0x46d: V343 = 0xff
0x470: V344 = AND S1 0xff
0x471: V345 = 0x100000000000000000000000000000000000000000000000000000000000000
0x492: V346 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V344
0x493: V347 = 0x17
0x496: V348 = ADD V321 0x17
0x497: M[V348] = V346
0x499: V349 = M[0x40]
0x49d: V350 = SUB V321 V349
0x49e: V351 = 0x18
0x4a0: V352 = ADD 0x18 V350
0x4a2: V353 = SHA3 V349 V352
0x4a3: V354 = 0x6b9
0x4a6: JUMP 0x6b9
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V353]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, V353]

================================

Block 0x4a7
[0x4a7:0x4b0]
---
Predecessors: [0x3eb]
Successors: [0x4b1, 0x564]
---
0x4a7 JUMPDEST
0x4a8 PUSH2 0xffff
0x4ab DUP3
0x4ac GT
0x4ad PUSH2 0x564
0x4b0 JUMPI
---
0x4a7: JUMPDEST 
0x4a8: V355 = 0xffff
0x4ac: V356 = GT S1 0xffff
0x4ad: V357 = 0x564
0x4b0: JUMPI 0x564 V356
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]

================================

Block 0x4b1
[0x4b1:0x563]
---
Predecessors: [0x4a7]
Successors: [0x6b9]
---
0x4b1 POP
0x4b2 PUSH1 0x40
0x4b4 DUP1
0x4b5 MLOAD
0x4b6 PUSH32 0xd800000000000000000000000000000000000000000000000000000000000000
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 PUSH1 0xfa
0x4db PUSH1 0x2
0x4dd EXP
0x4de PUSH1 0x25
0x4e0 MUL
0x4e1 PUSH1 0x1
0x4e3 DUP3
0x4e4 ADD
0x4e5 MSTORE
0x4e6 PUSH13 0x1000000000000000000000000
0x4f4 PUSH1 0x1
0x4f6 PUSH1 0xa0
0x4f8 PUSH1 0x2
0x4fa EXP
0x4fb SUB
0x4fc DUP6
0x4fd AND
0x4fe MUL
0x4ff PUSH1 0x2
0x501 DUP3
0x502 ADD
0x503 MSTORE
0x504 PUSH32 0x8200000000000000000000000000000000000000000000000000000000000000
0x525 PUSH1 0x16
0x527 DUP3
0x528 ADD
0x529 MSTORE
0x52a PUSH31 0x1000000000000000000000000000000000000000000000000000000000000
0x54a PUSH2 0xffff
0x54d DUP5
0x54e AND
0x54f MUL
0x550 PUSH1 0x17
0x552 DUP3
0x553 ADD
0x554 MSTORE
0x555 SWAP1
0x556 MLOAD
0x557 SWAP1
0x558 DUP2
0x559 SWAP1
0x55a SUB
0x55b PUSH1 0x19
0x55d ADD
0x55e SWAP1
0x55f SHA3
0x560 PUSH2 0x6b9
0x563 JUMP
---
0x4b2: V358 = 0x40
0x4b5: V359 = M[0x40]
0x4b6: V360 = 0xd800000000000000000000000000000000000000000000000000000000000000
0x4d8: M[V359] = 0xd800000000000000000000000000000000000000000000000000000000000000
0x4d9: V361 = 0xfa
0x4db: V362 = 0x2
0x4dd: V363 = EXP 0x2 0xfa
0x4de: V364 = 0x25
0x4e0: V365 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x4e1: V366 = 0x1
0x4e4: V367 = ADD V359 0x1
0x4e5: M[V367] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x4e6: V368 = 0x1000000000000000000000000
0x4f4: V369 = 0x1
0x4f6: V370 = 0xa0
0x4f8: V371 = 0x2
0x4fa: V372 = EXP 0x2 0xa0
0x4fb: V373 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V374 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x4fe: V375 = MUL V374 0x1000000000000000000000000
0x4ff: V376 = 0x2
0x502: V377 = ADD V359 0x2
0x503: M[V377] = V375
0x504: V378 = 0x8200000000000000000000000000000000000000000000000000000000000000
0x525: V379 = 0x16
0x528: V380 = ADD V359 0x16
0x529: M[V380] = 0x8200000000000000000000000000000000000000000000000000000000000000
0x52a: V381 = 0x1000000000000000000000000000000000000000000000000000000000000
0x54a: V382 = 0xffff
0x54e: V383 = AND S1 0xffff
0x54f: V384 = MUL V383 0x1000000000000000000000000000000000000000000000000000000000000
0x550: V385 = 0x17
0x553: V386 = ADD V359 0x17
0x554: M[V386] = V384
0x556: V387 = M[0x40]
0x55a: V388 = SUB V359 V387
0x55b: V389 = 0x19
0x55d: V390 = ADD 0x19 V388
0x55f: V391 = SHA3 V387 V390
0x560: V392 = 0x6b9
0x563: JUMP 0x6b9
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V391]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, V391]

================================

Block 0x564
[0x564:0x56e]
---
Predecessors: [0x4a7]
Successors: [0x56f, 0x622]
---
0x564 JUMPDEST
0x565 PUSH3 0xffffff
0x569 DUP3
0x56a GT
0x56b PUSH2 0x622
0x56e JUMPI
---
0x564: JUMPDEST 
0x565: V393 = 0xffffff
0x56a: V394 = GT S1 0xffffff
0x56b: V395 = 0x622
0x56e: JUMPI 0x622 V394
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]

================================

Block 0x56f
[0x56f:0x621]
---
Predecessors: [0x564]
Successors: [0x6b9]
---
0x56f POP
0x570 PUSH1 0x40
0x572 DUP1
0x573 MLOAD
0x574 PUSH32 0xd900000000000000000000000000000000000000000000000000000000000000
0x595 DUP2
0x596 MSTORE
0x597 PUSH1 0xfa
0x599 PUSH1 0x2
0x59b EXP
0x59c PUSH1 0x25
0x59e MUL
0x59f PUSH1 0x1
0x5a1 DUP3
0x5a2 ADD
0x5a3 MSTORE
0x5a4 PUSH13 0x1000000000000000000000000
0x5b2 PUSH1 0x1
0x5b4 PUSH1 0xa0
0x5b6 PUSH1 0x2
0x5b8 EXP
0x5b9 SUB
0x5ba DUP6
0x5bb AND
0x5bc MUL
0x5bd PUSH1 0x2
0x5bf DUP3
0x5c0 ADD
0x5c1 MSTORE
0x5c2 PUSH32 0x8300000000000000000000000000000000000000000000000000000000000000
0x5e3 PUSH1 0x16
0x5e5 DUP3
0x5e6 ADD
0x5e7 MSTORE
0x5e8 PUSH30 0x10000000000000000000000000000000000000000000000000000000000
0x607 PUSH3 0xffffff
0x60b DUP5
0x60c AND
0x60d MUL
0x60e PUSH1 0x17
0x610 DUP3
0x611 ADD
0x612 MSTORE
0x613 SWAP1
0x614 MLOAD
0x615 SWAP1
0x616 DUP2
0x617 SWAP1
0x618 SUB
0x619 PUSH1 0x1a
0x61b ADD
0x61c SWAP1
0x61d SHA3
0x61e PUSH2 0x6b9
0x621 JUMP
---
0x570: V396 = 0x40
0x573: V397 = M[0x40]
0x574: V398 = 0xd900000000000000000000000000000000000000000000000000000000000000
0x596: M[V397] = 0xd900000000000000000000000000000000000000000000000000000000000000
0x597: V399 = 0xfa
0x599: V400 = 0x2
0x59b: V401 = EXP 0x2 0xfa
0x59c: V402 = 0x25
0x59e: V403 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x59f: V404 = 0x1
0x5a2: V405 = ADD V397 0x1
0x5a3: M[V405] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x5a4: V406 = 0x1000000000000000000000000
0x5b2: V407 = 0x1
0x5b4: V408 = 0xa0
0x5b6: V409 = 0x2
0x5b8: V410 = EXP 0x2 0xa0
0x5b9: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bb: V412 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x5bc: V413 = MUL V412 0x1000000000000000000000000
0x5bd: V414 = 0x2
0x5c0: V415 = ADD V397 0x2
0x5c1: M[V415] = V413
0x5c2: V416 = 0x8300000000000000000000000000000000000000000000000000000000000000
0x5e3: V417 = 0x16
0x5e6: V418 = ADD V397 0x16
0x5e7: M[V418] = 0x8300000000000000000000000000000000000000000000000000000000000000
0x5e8: V419 = 0x10000000000000000000000000000000000000000000000000000000000
0x607: V420 = 0xffffff
0x60c: V421 = AND S1 0xffffff
0x60d: V422 = MUL V421 0x10000000000000000000000000000000000000000000000000000000000
0x60e: V423 = 0x17
0x611: V424 = ADD V397 0x17
0x612: M[V424] = V422
0x614: V425 = M[0x40]
0x618: V426 = SUB V397 V425
0x619: V427 = 0x1a
0x61b: V428 = ADD 0x1a V426
0x61d: V429 = SHA3 V425 V428
0x61e: V430 = 0x6b9
0x621: JUMP 0x6b9
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V429]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, V429]

================================

Block 0x622
[0x622:0x6b8]
---
Predecessors: [0x564]
Successors: [0x6b9]
---
0x622 JUMPDEST
0x623 POP
0x624 PUSH1 0x40
0x626 DUP1
0x627 MLOAD
0x628 PUSH32 0xda00000000000000000000000000000000000000000000000000000000000000
0x649 DUP2
0x64a MSTORE
0x64b PUSH1 0xfa
0x64d PUSH1 0x2
0x64f EXP
0x650 PUSH1 0x25
0x652 MUL
0x653 PUSH1 0x1
0x655 DUP3
0x656 ADD
0x657 MSTORE
0x658 PUSH13 0x1000000000000000000000000
0x666 PUSH1 0x1
0x668 PUSH1 0xa0
0x66a PUSH1 0x2
0x66c EXP
0x66d SUB
0x66e DUP6
0x66f AND
0x670 MUL
0x671 PUSH1 0x2
0x673 DUP3
0x674 ADD
0x675 MSTORE
0x676 PUSH32 0x8400000000000000000000000000000000000000000000000000000000000000
0x697 PUSH1 0x16
0x699 DUP3
0x69a ADD
0x69b MSTORE
0x69c PUSH1 0xe0
0x69e PUSH1 0x2
0x6a0 EXP
0x6a1 PUSH4 0xffffffff
0x6a6 DUP5
0x6a7 AND
0x6a8 MUL
0x6a9 PUSH1 0x17
0x6ab DUP3
0x6ac ADD
0x6ad MSTORE
0x6ae SWAP1
0x6af MLOAD
0x6b0 SWAP1
0x6b1 DUP2
0x6b2 SWAP1
0x6b3 SUB
0x6b4 PUSH1 0x1b
0x6b6 ADD
0x6b7 SWAP1
0x6b8 SHA3
---
0x622: JUMPDEST 
0x624: V431 = 0x40
0x627: V432 = M[0x40]
0x628: V433 = 0xda00000000000000000000000000000000000000000000000000000000000000
0x64a: M[V432] = 0xda00000000000000000000000000000000000000000000000000000000000000
0x64b: V434 = 0xfa
0x64d: V435 = 0x2
0x64f: V436 = EXP 0x2 0xfa
0x650: V437 = 0x25
0x652: V438 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x653: V439 = 0x1
0x656: V440 = ADD V432 0x1
0x657: M[V440] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x658: V441 = 0x1000000000000000000000000
0x666: V442 = 0x1
0x668: V443 = 0xa0
0x66a: V444 = 0x2
0x66c: V445 = EXP 0x2 0xa0
0x66d: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66f: V447 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x670: V448 = MUL V447 0x1000000000000000000000000
0x671: V449 = 0x2
0x674: V450 = ADD V432 0x2
0x675: M[V450] = V448
0x676: V451 = 0x8400000000000000000000000000000000000000000000000000000000000000
0x697: V452 = 0x16
0x69a: V453 = ADD V432 0x16
0x69b: M[V453] = 0x8400000000000000000000000000000000000000000000000000000000000000
0x69c: V454 = 0xe0
0x69e: V455 = 0x2
0x6a0: V456 = EXP 0x2 0xe0
0x6a1: V457 = 0xffffffff
0x6a7: V458 = AND S1 0xffffffff
0x6a8: V459 = MUL V458 0x100000000000000000000000000000000000000000000000000000000
0x6a9: V460 = 0x17
0x6ac: V461 = ADD V432 0x17
0x6ad: M[V461] = V459
0x6af: V462 = M[0x40]
0x6b3: V463 = SUB V432 V462
0x6b4: V464 = 0x1b
0x6b6: V465 = ADD 0x1b V463
0x6b8: V466 = SHA3 V462 V465
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V466]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x1a7, 0x1f5}, S2, S1, V466]

================================

Block 0x6b9
[0x6b9:0x6be]
---
Predecessors: [0x2ae, 0x33f, 0x3f4, 0x4b1, 0x56f, 0x622, 0x8e2]
Successors: [0x1a7, 0x1b4, 0x1f5, 0x830, 0x83c]
---
0x6b9 JUMPDEST
0x6ba SWAP3
0x6bb SWAP2
0x6bc POP
0x6bd POP
0x6be JUMP
---
0x6b9: JUMPDEST 
0x6be: JUMP S3
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x6bf
[0x6bf:0x71a]
---
Predecessors: [0x1aa]
Successors: [0x71b]
---
0x6bf JUMPDEST
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 PUSH2 0x83c
0x6c6 NUMBER
0x6c7 PUSH2 0x830
0x6ca TIMESTAMP
0x6cb DUP8
0x6cc PUSH1 0x40
0x6ce MLOAD
0x6cf PUSH1 0x20
0x6d1 ADD
0x6d2 DUP1
0x6d3 DUP3
0x6d4 PUSH1 0x1
0x6d6 PUSH1 0xa0
0x6d8 PUSH1 0x2
0x6da EXP
0x6db SUB
0x6dc AND
0x6dd PUSH1 0x1
0x6df PUSH1 0xa0
0x6e1 PUSH1 0x2
0x6e3 EXP
0x6e4 SUB
0x6e5 AND
0x6e6 PUSH13 0x1000000000000000000000000
0x6f4 MUL
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x14
0x6f9 ADD
0x6fa SWAP2
0x6fb POP
0x6fc POP
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 PUSH1 0x20
0x702 DUP2
0x703 DUP4
0x704 SUB
0x705 SUB
0x706 DUP2
0x707 MSTORE
0x708 SWAP1
0x709 PUSH1 0x40
0x70b MSTORE
0x70c PUSH1 0x40
0x70e MLOAD
0x70f DUP1
0x710 DUP3
0x711 DUP1
0x712 MLOAD
0x713 SWAP1
0x714 PUSH1 0x20
0x716 ADD
0x717 SWAP1
0x718 DUP1
0x719 DUP4
0x71a DUP4
---
0x6bf: JUMPDEST 
0x6c0: V467 = 0x0
0x6c3: V468 = 0x83c
0x6c6: V469 = NUMBER
0x6c7: V470 = 0x830
0x6ca: V471 = TIMESTAMP
0x6cc: V472 = 0x40
0x6ce: V473 = M[0x40]
0x6cf: V474 = 0x20
0x6d1: V475 = ADD 0x20 V473
0x6d4: V476 = 0x1
0x6d6: V477 = 0xa0
0x6d8: V478 = 0x2
0x6da: V479 = EXP 0x2 0xa0
0x6db: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dc: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6dd: V482 = 0x1
0x6df: V483 = 0xa0
0x6e1: V484 = 0x2
0x6e3: V485 = EXP 0x2 0xa0
0x6e4: V486 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e5: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x6e6: V488 = 0x1000000000000000000000000
0x6f4: V489 = MUL 0x1000000000000000000000000 V487
0x6f6: M[V475] = V489
0x6f7: V490 = 0x14
0x6f9: V491 = ADD 0x14 V475
0x6fd: V492 = 0x40
0x6ff: V493 = M[0x40]
0x700: V494 = 0x20
0x704: V495 = SUB V491 V493
0x705: V496 = SUB V495 0x20
0x707: M[V493] = V496
0x709: V497 = 0x40
0x70b: M[0x40] = V491
0x70c: V498 = 0x40
0x70e: V499 = M[0x40]
0x712: V500 = M[V493]
0x714: V501 = 0x20
0x716: V502 = ADD 0x20 V493
---
Entry stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1b4, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x83c, V469, 0x830, V471, V493, V499, V499, V502, V500, V500, V499, V502]
Exit stack: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1b4, S1, S0, 0x0, 0x0, 0x83c, V469, 0x830, V471, V493, V499, V499, V502, V500, V500, V499, V502]

================================

Block 0x71b
[0x71b:0x723]
---
Predecessors: [0x6bf, 0x724]
Successors: [0x724, 0x73a]
---
0x71b JUMPDEST
0x71c PUSH1 0x20
0x71e DUP4
0x71f LT
0x720 PUSH2 0x73a
0x723 JUMPI
---
0x71b: JUMPDEST 
0x71c: V503 = 0x20
0x71f: V504 = LT S2 0x20
0x720: V505 = 0x73a
0x723: JUMPI 0x73a V504
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x1b4, S15, S14, 0x0, 0x0, 0x83c, V469, 0x830, V471, V493, V499, V499, V502, V500, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x1b4, S15, S14, 0x0, 0x0, 0x83c, V469, 0x830, V471, V493, V499, V499, V502, V500, S2, S1, S0]

================================

Block 0x724
[0x724:0x739]
---
Predecessors: [0x71b]
Successors: [0x71b]
---
0x724 DUP1
0x725 MLOAD
0x726 DUP3
0x727 MSTORE
0x728 PUSH1 0x1f
0x72a NOT
0x72b SWAP1
0x72c SWAP3
0x72d ADD
0x72e SWAP2
0x72f PUSH1 0x20
0x731 SWAP2
0x732 DUP3
0x733 ADD
0x734 SWAP2
0x735 ADD
0x736 PUSH2 0x71b
0x739 JUMP
---
0x725: V506 = M[S0]
0x727: M[S1] = V506
0x728: V507 = 0x1f
0x72a: V508 = NOT 0x1f
0x72d: V509 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x72f: V510 = 0x20
0x733: V511 = ADD 0x20 S1
0x735: V512 = ADD 0x20 S0
0x736: V513 = 0x71b
0x739: JUMP 0x71b
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x1b4, S15, S14, 0x0, 0x0, 0x83c, V469, 0x830, V471, V493, V499, V499, V502, V500, S2, S1, S0]
Stack pops: 3
Stack additions: [V509, V511, V512]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x1b4, S15, S14, 0x0, 0x0, 0x83c, V469, 0x830, V471, V493, V499, V499, V502, V500, V509, V511, V512]

================================

Block 0x73a
[0x73a:0x76e]
---
Predecessors: [0x71b]
Successors: [0x76f, 0x770]
---
0x73a JUMPDEST
0x73b MLOAD
0x73c DUP2
0x73d MLOAD
0x73e PUSH1 0x20
0x740 SWAP4
0x741 SWAP1
0x742 SWAP4
0x743 SUB
0x744 PUSH2 0x100
0x747 EXP
0x748 PUSH1 0x0
0x74a NOT
0x74b ADD
0x74c DUP1
0x74d NOT
0x74e SWAP1
0x74f SWAP2
0x750 AND
0x751 SWAP3
0x752 AND
0x753 SWAP2
0x754 SWAP1
0x755 SWAP2
0x756 OR
0x757 SWAP1
0x758 MSTORE
0x759 PUSH1 0x40
0x75b MLOAD
0x75c SWAP3
0x75d ADD
0x75e DUP3
0x75f SWAP1
0x760 SUB
0x761 SWAP1
0x762 SWAP2
0x763 SHA3
0x764 SWAP3
0x765 POP
0x766 POP
0x767 POP
0x768 DUP2
0x769 ISZERO
0x76a ISZERO
0x76b PUSH2 0x770
0x76e JUMPI
---
0x73a: JUMPDEST 
0x73b: V514 = M[S0]
0x73d: V515 = M[S1]
0x73e: V516 = 0x20
0x743: V517 = SUB 0x20 S2
0x744: V518 = 0x100
0x747: V519 = EXP 0x100 V517
0x748: V520 = 0x0
0x74a: V521 = NOT 0x0
0x74b: V522 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V519
0x74d: V523 = NOT V522
0x750: V524 = AND V514 V523
0x752: V525 = AND V515 V522
0x756: V526 = OR V525 V524
0x758: M[S1] = V526
0x759: V527 = 0x40
0x75b: V528 = M[0x40]
0x75d: V529 = ADD V499 V500
0x760: V530 = SUB V529 V528
0x763: V531 = SHA3 V528 V530
0x769: V532 = ISZERO V471
0x76a: V533 = ISZERO V532
0x76b: V534 = 0x770
0x76e: JUMPI 0x770 V533
---
Entry stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x1b4, S15, S14, 0x0, 0x0, 0x83c, V469, 0x830, V471, V493, V499, V499, V502, V500, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V531]
Exit stack: [S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x1b4, S15, S14, 0x0, 0x0, 0x83c, V469, 0x830, V471, V531]

================================

Block 0x76f
[0x76f:0x76f]
---
Predecessors: [0x73a]
Successors: []
---
0x76f INVALID
---
0x76f: INVALID 
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x1b4, S8, S7, 0x0, 0x0, 0x83c, V469, 0x830, V471, V531]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x1b4, S8, S7, 0x0, 0x0, 0x83c, V469, 0x830, V471, V531]

================================

Block 0x770
[0x770:0x7c9]
---
Predecessors: [0x73a]
Successors: [0x7ca]
---
0x770 JUMPDEST
0x771 DIV
0x772 PUSH2 0x830
0x775 GASLIMIT
0x776 PUSH2 0x830
0x779 TIMESTAMP
0x77a COINBASE
0x77b PUSH1 0x40
0x77d MLOAD
0x77e PUSH1 0x20
0x780 ADD
0x781 DUP1
0x782 DUP3
0x783 PUSH1 0x1
0x785 PUSH1 0xa0
0x787 PUSH1 0x2
0x789 EXP
0x78a SUB
0x78b AND
0x78c PUSH1 0x1
0x78e PUSH1 0xa0
0x790 PUSH1 0x2
0x792 EXP
0x793 SUB
0x794 AND
0x795 PUSH13 0x1000000000000000000000000
0x7a3 MUL
0x7a4 DUP2
0x7a5 MSTORE
0x7a6 PUSH1 0x14
0x7a8 ADD
0x7a9 SWAP2
0x7aa POP
0x7ab POP
0x7ac PUSH1 0x40
0x7ae MLOAD
0x7af PUSH1 0x20
0x7b1 DUP2
0x7b2 DUP4
0x7b3 SUB
0x7b4 SUB
0x7b5 DUP2
0x7b6 MSTORE
0x7b7 SWAP1
0x7b8 PUSH1 0x40
0x7ba MSTORE
0x7bb PUSH1 0x40
0x7bd MLOAD
0x7be DUP1
0x7bf DUP3
0x7c0 DUP1
0x7c1 MLOAD
0x7c2 SWAP1
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 SWAP1
0x7c7 DUP1
0x7c8 DUP4
0x7c9 DUP4
---
0x770: JUMPDEST 
0x771: V535 = DIV V531 V471
0x772: V536 = 0x830
0x775: V537 = GASLIMIT
0x776: V538 = 0x830
0x779: V539 = TIMESTAMP
0x77a: V540 = COINBASE
0x77b: V541 = 0x40
0x77d: V542 = M[0x40]
0x77e: V543 = 0x20
0x780: V544 = ADD 0x20 V542
0x783: V545 = 0x1
0x785: V546 = 0xa0
0x787: V547 = 0x2
0x789: V548 = EXP 0x2 0xa0
0x78a: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78b: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V540
0x78c: V551 = 0x1
0x78e: V552 = 0xa0
0x790: V553 = 0x2
0x792: V554 = EXP 0x2 0xa0
0x793: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x794: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x795: V557 = 0x1000000000000000000000000
0x7a3: V558 = MUL 0x1000000000000000000000000 V556
0x7a5: M[V544] = V558
0x7a6: V559 = 0x14
0x7a8: V560 = ADD 0x14 V544
0x7ac: V561 = 0x40
0x7ae: V562 = M[0x40]
0x7af: V563 = 0x20
0x7b3: V564 = SUB V560 V562
0x7b4: V565 = SUB V564 0x20
0x7b6: M[V562] = V565
0x7b8: V566 = 0x40
0x7ba: M[0x40] = V560
0x7bb: V567 = 0x40
0x7bd: V568 = M[0x40]
0x7c1: V569 = M[V562]
0x7c3: V570 = 0x20
0x7c5: V571 = ADD 0x20 V562
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x1b4, S8, S7, 0x0, 0x0, 0x83c, V469, 0x830, V471, V531]
Stack pops: 2
Stack additions: [V535, 0x830, V537, 0x830, V539, V562, V568, V568, V571, V569, V569, V568, V571]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x1b4, S8, S7, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V562, V568, V568, V571, V569, V569, V568, V571]

================================

Block 0x7ca
[0x7ca:0x7d2]
---
Predecessors: [0x770, 0x7d3]
Successors: [0x7d3, 0x7e9]
---
0x7ca JUMPDEST
0x7cb PUSH1 0x20
0x7cd DUP4
0x7ce LT
0x7cf PUSH2 0x7e9
0x7d2 JUMPI
---
0x7ca: JUMPDEST 
0x7cb: V572 = 0x20
0x7ce: V573 = LT S2 0x20
0x7cf: V574 = 0x7e9
0x7d2: JUMPI 0x7e9 V573
---
Entry stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, 0x1b4, S19, S18, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V562, V568, V568, V571, V569, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, 0x1b4, S19, S18, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V562, V568, V568, V571, V569, S2, S1, S0]

================================

Block 0x7d3
[0x7d3:0x7e8]
---
Predecessors: [0x7ca]
Successors: [0x7ca]
---
0x7d3 DUP1
0x7d4 MLOAD
0x7d5 DUP3
0x7d6 MSTORE
0x7d7 PUSH1 0x1f
0x7d9 NOT
0x7da SWAP1
0x7db SWAP3
0x7dc ADD
0x7dd SWAP2
0x7de PUSH1 0x20
0x7e0 SWAP2
0x7e1 DUP3
0x7e2 ADD
0x7e3 SWAP2
0x7e4 ADD
0x7e5 PUSH2 0x7ca
0x7e8 JUMP
---
0x7d4: V575 = M[S0]
0x7d6: M[S1] = V575
0x7d7: V576 = 0x1f
0x7d9: V577 = NOT 0x1f
0x7dc: V578 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7de: V579 = 0x20
0x7e2: V580 = ADD 0x20 S1
0x7e4: V581 = ADD 0x20 S0
0x7e5: V582 = 0x7ca
0x7e8: JUMP 0x7ca
---
Entry stack: [S26, S25, S24, S23, S22, S21, 0x1b4, S19, S18, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V562, V568, V568, V571, V569, S2, S1, S0]
Stack pops: 3
Stack additions: [V578, V580, V581]
Exit stack: [S26, S25, S24, S23, S22, S21, 0x1b4, S19, S18, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V562, V568, V568, V571, V569, V578, V580, V581]

================================

Block 0x7e9
[0x7e9:0x81d]
---
Predecessors: [0x7ca]
Successors: [0x81e, 0x81f]
---
0x7e9 JUMPDEST
0x7ea MLOAD
0x7eb DUP2
0x7ec MLOAD
0x7ed PUSH1 0x20
0x7ef SWAP4
0x7f0 SWAP1
0x7f1 SWAP4
0x7f2 SUB
0x7f3 PUSH2 0x100
0x7f6 EXP
0x7f7 PUSH1 0x0
0x7f9 NOT
0x7fa ADD
0x7fb DUP1
0x7fc NOT
0x7fd SWAP1
0x7fe SWAP2
0x7ff AND
0x800 SWAP3
0x801 AND
0x802 SWAP2
0x803 SWAP1
0x804 SWAP2
0x805 OR
0x806 SWAP1
0x807 MSTORE
0x808 PUSH1 0x40
0x80a MLOAD
0x80b SWAP3
0x80c ADD
0x80d DUP3
0x80e SWAP1
0x80f SUB
0x810 SWAP1
0x811 SWAP2
0x812 SHA3
0x813 SWAP3
0x814 POP
0x815 POP
0x816 POP
0x817 DUP2
0x818 ISZERO
0x819 ISZERO
0x81a PUSH2 0x81f
0x81d JUMPI
---
0x7e9: JUMPDEST 
0x7ea: V583 = M[S0]
0x7ec: V584 = M[S1]
0x7ed: V585 = 0x20
0x7f2: V586 = SUB 0x20 S2
0x7f3: V587 = 0x100
0x7f6: V588 = EXP 0x100 V586
0x7f7: V589 = 0x0
0x7f9: V590 = NOT 0x0
0x7fa: V591 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V588
0x7fc: V592 = NOT V591
0x7ff: V593 = AND V583 V592
0x801: V594 = AND V584 V591
0x805: V595 = OR V594 V593
0x807: M[S1] = V595
0x808: V596 = 0x40
0x80a: V597 = M[0x40]
0x80c: V598 = ADD V568 V569
0x80f: V599 = SUB V598 V597
0x812: V600 = SHA3 V597 V599
0x818: V601 = ISZERO V539
0x819: V602 = ISZERO V601
0x81a: V603 = 0x81f
0x81d: JUMPI 0x81f V602
---
Entry stack: [S26, S25, S24, S23, S22, S21, 0x1b4, S19, S18, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V562, V568, V568, V571, V569, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V600]
Exit stack: [S26, S25, S24, S23, S22, S21, 0x1b4, S19, S18, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V600]

================================

Block 0x81e
[0x81e:0x81e]
---
Predecessors: [0x7e9]
Successors: []
---
0x81e INVALID
---
0x81e: INVALID 
---
Entry stack: [S19, S18, S17, S16, S15, S14, 0x1b4, S12, S11, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V600]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, 0x1b4, S12, S11, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V600]

================================

Block 0x81f
[0x81f:0x82f]
---
Predecessors: [0x7e9]
Successors: [0x8e2]
---
0x81f JUMPDEST
0x820 DIV
0x821 PUSH2 0x830
0x824 TIMESTAMP
0x825 DIFFICULTY
0x826 PUSH4 0xffffffff
0x82b PUSH2 0x8e2
0x82e AND
0x82f JUMP
---
0x81f: JUMPDEST 
0x820: V604 = DIV V600 V539
0x821: V605 = 0x830
0x824: V606 = TIMESTAMP
0x825: V607 = DIFFICULTY
0x826: V608 = 0xffffffff
0x82b: V609 = 0x8e2
0x82e: V610 = AND 0x8e2 0xffffffff
0x82f: JUMP 0x8e2
---
Entry stack: [S19, S18, S17, S16, S15, S14, 0x1b4, S12, S11, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V539, V600]
Stack pops: 2
Stack additions: [V604, 0x830, V606, V607]
Exit stack: [S19, S18, S17, S16, S15, S14, 0x1b4, S12, S11, 0x0, 0x0, 0x83c, V469, 0x830, V535, 0x830, V537, 0x830, V604, 0x830, V606, V607]

================================

Block 0x830
[0x830:0x83b]
---
Predecessors: [0x6b9]
Successors: [0x8e2]
---
0x830 JUMPDEST
0x831 SWAP1
0x832 PUSH4 0xffffffff
0x837 PUSH2 0x8e2
0x83a AND
0x83b JUMP
---
0x830: JUMPDEST 
0x832: V611 = 0xffffffff
0x837: V612 = 0x8e2
0x83a: V613 = AND 0x8e2 0xffffffff
0x83b: JUMP 0x8e2
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0x83c
[0x83c:0x86a]
---
Predecessors: [0x6b9]
Successors: [0x86b]
---
0x83c JUMPDEST
0x83d PUSH1 0x40
0x83f MLOAD
0x840 PUSH1 0x20
0x842 ADD
0x843 DUP1
0x844 DUP3
0x845 DUP2
0x846 MSTORE
0x847 PUSH1 0x20
0x849 ADD
0x84a SWAP2
0x84b POP
0x84c POP
0x84d PUSH1 0x40
0x84f MLOAD
0x850 PUSH1 0x20
0x852 DUP2
0x853 DUP4
0x854 SUB
0x855 SUB
0x856 DUP2
0x857 MSTORE
0x858 SWAP1
0x859 PUSH1 0x40
0x85b MSTORE
0x85c PUSH1 0x40
0x85e MLOAD
0x85f DUP1
0x860 DUP3
0x861 DUP1
0x862 MLOAD
0x863 SWAP1
0x864 PUSH1 0x20
0x866 ADD
0x867 SWAP1
0x868 DUP1
0x869 DUP4
0x86a DUP4
---
0x83c: JUMPDEST 
0x83d: V614 = 0x40
0x83f: V615 = M[0x40]
0x840: V616 = 0x20
0x842: V617 = ADD 0x20 V615
0x846: M[V617] = S0
0x847: V618 = 0x20
0x849: V619 = ADD 0x20 V617
0x84d: V620 = 0x40
0x84f: V621 = M[0x40]
0x850: V622 = 0x20
0x854: V623 = SUB V619 V621
0x855: V624 = SUB V623 0x20
0x857: M[V621] = V624
0x859: V625 = 0x40
0x85b: M[0x40] = V619
0x85c: V626 = 0x40
0x85e: V627 = M[0x40]
0x862: V628 = M[V621]
0x864: V629 = 0x20
0x866: V630 = ADD 0x20 V621
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V621, V627, V627, V630, V628, V628, V627, V630]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V621, V627, V627, V630, V628, V628, V627, V630]

================================

Block 0x86b
[0x86b:0x873]
---
Predecessors: [0x83c, 0x874]
Successors: [0x874, 0x88a]
---
0x86b JUMPDEST
0x86c PUSH1 0x20
0x86e DUP4
0x86f LT
0x870 PUSH2 0x88a
0x873 JUMPI
---
0x86b: JUMPDEST 
0x86c: V631 = 0x20
0x86f: V632 = LT S2 0x20
0x870: V633 = 0x88a
0x873: JUMPI 0x88a V632
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V621, V627, V627, V630, V628, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V621, V627, V627, V630, V628, S2, S1, S0]

================================

Block 0x874
[0x874:0x889]
---
Predecessors: [0x86b]
Successors: [0x86b]
---
0x874 DUP1
0x875 MLOAD
0x876 DUP3
0x877 MSTORE
0x878 PUSH1 0x1f
0x87a NOT
0x87b SWAP1
0x87c SWAP3
0x87d ADD
0x87e SWAP2
0x87f PUSH1 0x20
0x881 SWAP2
0x882 DUP3
0x883 ADD
0x884 SWAP2
0x885 ADD
0x886 PUSH2 0x86b
0x889 JUMP
---
0x875: V634 = M[S0]
0x877: M[S1] = V634
0x878: V635 = 0x1f
0x87a: V636 = NOT 0x1f
0x87d: V637 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x87f: V638 = 0x20
0x883: V639 = ADD 0x20 S1
0x885: V640 = ADD 0x20 S0
0x886: V641 = 0x86b
0x889: JUMP 0x86b
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V621, V627, V627, V630, V628, S2, S1, S0]
Stack pops: 3
Stack additions: [V637, V639, V640]
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V621, V627, V627, V630, V628, V637, V639, V640]

================================

Block 0x88a
[0x88a:0x8cd]
---
Predecessors: [0x86b]
Successors: [0x8ce, 0x8d6]
---
0x88a JUMPDEST
0x88b MLOAD
0x88c DUP2
0x88d MLOAD
0x88e PUSH1 0x20
0x890 SWAP4
0x891 SWAP1
0x892 SWAP4
0x893 SUB
0x894 PUSH2 0x100
0x897 EXP
0x898 PUSH1 0x0
0x89a NOT
0x89b ADD
0x89c DUP1
0x89d NOT
0x89e SWAP1
0x89f SWAP2
0x8a0 AND
0x8a1 SWAP3
0x8a2 AND
0x8a3 SWAP2
0x8a4 SWAP1
0x8a5 SWAP2
0x8a6 OR
0x8a7 SWAP1
0x8a8 MSTORE
0x8a9 PUSH1 0x40
0x8ab MLOAD
0x8ac SWAP3
0x8ad ADD
0x8ae DUP3
0x8af SWAP1
0x8b0 SUB
0x8b1 SWAP1
0x8b2 SWAP2
0x8b3 SHA3
0x8b4 SWAP4
0x8b5 POP
0x8b6 DUP6
0x8b7 SWAP3
0x8b8 POP
0x8b9 PUSH2 0x3e8
0x8bc SWAP2
0x8bd POP
0x8be DUP4
0x8bf SWAP1
0x8c0 POP
0x8c1 DIV
0x8c2 PUSH2 0x3e8
0x8c5 MUL
0x8c6 DUP3
0x8c7 SUB
0x8c8 LT
0x8c9 ISZERO
0x8ca PUSH2 0x8d6
0x8cd JUMPI
---
0x88a: JUMPDEST 
0x88b: V642 = M[S0]
0x88d: V643 = M[S1]
0x88e: V644 = 0x20
0x893: V645 = SUB 0x20 S2
0x894: V646 = 0x100
0x897: V647 = EXP 0x100 V645
0x898: V648 = 0x0
0x89a: V649 = NOT 0x0
0x89b: V650 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V647
0x89d: V651 = NOT V650
0x8a0: V652 = AND V642 V651
0x8a2: V653 = AND V643 V650
0x8a6: V654 = OR V653 V652
0x8a8: M[S1] = V654
0x8a9: V655 = 0x40
0x8ab: V656 = M[0x40]
0x8ad: V657 = ADD V627 V628
0x8b0: V658 = SUB V657 V656
0x8b3: V659 = SHA3 V656 V658
0x8b9: V660 = 0x3e8
0x8c1: V661 = DIV V659 0x3e8
0x8c2: V662 = 0x3e8
0x8c5: V663 = MUL 0x3e8 V661
0x8c7: V664 = SUB V659 V663
0x8c8: V665 = LT V664 S10
0x8c9: V666 = ISZERO V665
0x8ca: V667 = 0x8d6
0x8cd: JUMPI 0x8d6 V666
---
Entry stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V621, V627, V627, V630, V628, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V659]
Exit stack: [S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V659]

================================

Block 0x8ce
[0x8ce:0x8d5]
---
Predecessors: [0x88a]
Successors: [0x8db]
---
0x8ce PUSH1 0x1
0x8d0 SWAP2
0x8d1 POP
0x8d2 PUSH2 0x8db
0x8d5 JUMP
---
0x8ce: V668 = 0x1
0x8d2: V669 = 0x8db
0x8d5: JUMP 0x8db
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V659]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, V659]

================================

Block 0x8d6
[0x8d6:0x8da]
---
Predecessors: [0x88a]
Successors: [0x8db]
---
0x8d6 JUMPDEST
0x8d7 PUSH1 0x0
0x8d9 SWAP2
0x8da POP
---
0x8d6: JUMPDEST 
0x8d7: V670 = 0x0
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V659]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V659]

================================

Block 0x8db
[0x8db:0x8e1]
---
Predecessors: [0x8ce, 0x8d6]
Successors: [0x1b4]
---
0x8db JUMPDEST
0x8dc POP
0x8dd SWAP3
0x8de SWAP2
0x8df POP
0x8e0 POP
0x8e1 JUMP
---
0x8db: JUMPDEST 
0x8e1: JUMP S4
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x1}]

================================

Block 0x8e2
[0x8e2:0x8ed]
---
Predecessors: [0x81f, 0x830]
Successors: [0x6b9, 0x8ee]
---
0x8e2 JUMPDEST
0x8e3 DUP2
0x8e4 DUP2
0x8e5 ADD
0x8e6 DUP3
0x8e7 DUP2
0x8e8 LT
0x8e9 ISZERO
0x8ea PUSH2 0x6b9
0x8ed JUMPI
---
0x8e2: JUMPDEST 
0x8e5: V671 = ADD S0 S1
0x8e8: V672 = LT V671 S1
0x8e9: V673 = ISZERO V672
0x8ea: V674 = 0x6b9
0x8ed: JUMPI 0x6b9 V673
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V671]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V671]

================================

Block 0x8ee
[0x8ee:0x953]
---
Predecessors: [0x8e2]
Successors: []
---
0x8ee PUSH1 0x40
0x8f0 DUP1
0x8f1 MLOAD
0x8f2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x913 DUP2
0x914 MSTORE
0x915 PUSH1 0x20
0x917 PUSH1 0x4
0x919 DUP3
0x91a ADD
0x91b MSTORE
0x91c PUSH1 0x13
0x91e PUSH1 0x24
0x920 DUP3
0x921 ADD
0x922 MSTORE
0x923 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x944 PUSH1 0x44
0x946 DUP3
0x947 ADD
0x948 MSTORE
0x949 SWAP1
0x94a MLOAD
0x94b SWAP1
0x94c DUP2
0x94d SWAP1
0x94e SUB
0x94f PUSH1 0x64
0x951 ADD
0x952 SWAP1
0x953 REVERT
---
0x8ee: V675 = 0x40
0x8f1: V676 = M[0x40]
0x8f2: V677 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x914: M[V676] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x915: V678 = 0x20
0x917: V679 = 0x4
0x91a: V680 = ADD V676 0x4
0x91b: M[V680] = 0x20
0x91c: V681 = 0x13
0x91e: V682 = 0x24
0x921: V683 = ADD V676 0x24
0x922: M[V683] = 0x13
0x923: V684 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x944: V685 = 0x44
0x947: V686 = ADD V676 0x44
0x948: M[V686] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x94a: V687 = M[0x40]
0x94e: V688 = SUB V676 V687
0x94f: V689 = 0x64
0x951: V690 = ADD 0x64 V688
0x953: REVERT V687 V690
---
Entry stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V671]
Stack pops: 0
Stack additions: []
Exit stack: [S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V671]

================================

Block 0x954
[0x954:0x962]
---
Predecessors: [0x1bb]
Successors: [0x1c2]
---
0x954 JUMPDEST
0x955 PUSH1 0x40
0x957 MLOAD
0x958 PUSH1 0x52
0x95a DUP1
0x95b PUSH2 0x973
0x95e DUP4
0x95f CODECOPY
0x960 ADD
0x961 SWAP1
0x962 JUMP
---
0x954: JUMPDEST 
0x955: V691 = 0x40
0x957: V692 = M[0x40]
0x958: V693 = 0x52
0x95b: V694 = 0x973
0x95f: CODECOPY V692 0x973 0x52
0x960: V695 = ADD 0x52 V692
0x962: JUMP 0x1c2
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1c2]
Stack pops: 1
Stack additions: [V695]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V695]

================================

Block 0x963
[0x963:0x971]
---
Predecessors: [0x1fc]
Successors: [0x22b]
---
0x963 JUMPDEST
0x964 PUSH1 0x40
0x966 MLOAD
0x967 PUSH1 0xbb
0x969 DUP1
0x96a PUSH2 0x9c5
0x96d DUP4
0x96e CODECOPY
0x96f ADD
0x970 SWAP1
0x971 JUMP
---
0x963: JUMPDEST 
0x964: V696 = 0x40
0x966: V697 = M[0x40]
0x967: V698 = 0xbb
0x96a: V699 = 0x9c5
0x96e: CODECOPY V697 0x9c5 0xbb
0x96f: V700 = ADD 0xbb V697
0x971: JUMP 0x22b
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x22b]
Stack pops: 1
Stack additions: [V700]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V700]

================================

Block 0x972
[0x972:0x97d]
---
Predecessors: []
Successors: [0x97e]
---
0x972 STOP
0x973 PUSH1 0x80
0x975 PUSH1 0x40
0x977 MSTORE
0x978 CALLVALUE
0x979 DUP1
0x97a ISZERO
0x97b PUSH1 0xf
0x97d JUMPI
---
0x972: STOP 
0x973: V701 = 0x80
0x975: V702 = 0x40
0x977: M[0x40] = 0x80
0x978: V703 = CALLVALUE
0x97a: V704 = ISZERO V703
0x97b: V705 = 0xf
0x97d: THROWI V704
---
Entry stack: []
Stack pops: 0
Stack additions: [V703]
Exit stack: []

================================

Block 0x97e
[0x97e:0x9cf]
---
Predecessors: [0x972]
Successors: [0x9d0]
---
0x97e PUSH1 0x0
0x980 DUP1
0x981 REVERT
0x982 JUMPDEST
0x983 POP
0x984 PUSH1 0x35
0x986 DUP1
0x987 PUSH1 0x1d
0x989 PUSH1 0x0
0x98b CODECOPY
0x98c PUSH1 0x0
0x98e RETURN
0x98f STOP
0x990 PUSH1 0x80
0x992 PUSH1 0x40
0x994 MSTORE
0x995 PUSH1 0x0
0x997 DUP1
0x998 REVERT
0x999 STOP
0x99a LOG1
0x99b PUSH6 0x627a7a723058
0x9a2 SHA3
0x9a3 MISSING 0x2d
0x9a4 MISSING 0x4f
0x9a5 MISSING 0xdf
0x9a6 SSTORE
0x9a7 DIV
0x9a8 MISSING 0xd6
0x9a9 MISSING 0xdf
0x9aa MISSING 0xd9
0x9ab MISSING 0x4e
0x9ac LOG3
0x9ad MISSING 0x4f
0x9ae PUSH21 0x3eb286033685853a89a745834c247e24e798413900
0x9c4 MISSING 0x29
0x9c5 PUSH1 0x80
0x9c7 PUSH1 0x40
0x9c9 MSTORE
0x9ca CALLVALUE
0x9cb DUP1
0x9cc ISZERO
0x9cd PUSH1 0xf
0x9cf JUMPI
---
0x97e: V706 = 0x0
0x981: REVERT 0x0 0x0
0x982: JUMPDEST 
0x984: V707 = 0x35
0x987: V708 = 0x1d
0x989: V709 = 0x0
0x98b: CODECOPY 0x0 0x1d 0x35
0x98c: V710 = 0x0
0x98e: RETURN 0x0 0x35
0x98f: STOP 
0x990: V711 = 0x80
0x992: V712 = 0x40
0x994: M[0x40] = 0x80
0x995: V713 = 0x0
0x998: REVERT 0x0 0x0
0x999: STOP 
0x99a: LOG S0 S1 S2
0x99b: V714 = 0x627a7a723058
0x9a2: V715 = SHA3 0x627a7a723058 S3
0x9a3: MISSING 0x2d
0x9a4: MISSING 0x4f
0x9a5: MISSING 0xdf
0x9a6: S[S0] = S1
0x9a7: V716 = DIV S2 S3
0x9a8: MISSING 0xd6
0x9a9: MISSING 0xdf
0x9aa: MISSING 0xd9
0x9ab: MISSING 0x4e
0x9ac: LOG S0 S1 S2 S3 S4
0x9ad: MISSING 0x4f
0x9ae: V717 = 0x3eb286033685853a89a745834c247e24e798413900
0x9c4: MISSING 0x29
0x9c5: V718 = 0x80
0x9c7: V719 = 0x40
0x9c9: M[0x40] = 0x80
0x9ca: V720 = CALLVALUE
0x9cc: V721 = ISZERO V720
0x9cd: V722 = 0xf
0x9cf: THROWI V721
---
Entry stack: [V703]
Stack pops: 0
Stack additions: [V715, V716, 0x3eb286033685853a89a745834c247e24e798413900, V720]
Exit stack: []

================================

Block 0x9d0
[0x9d0:0xa5f]
---
Predecessors: [0x97e]
Successors: [0xa60]
---
0x9d0 PUSH1 0x0
0x9d2 DUP1
0x9d3 REVERT
0x9d4 JUMPDEST
0x9d5 POP
0x9d6 PUSH1 0x40
0x9d8 MLOAD
0x9d9 PUSH1 0x20
0x9db DUP1
0x9dc PUSH1 0xbb
0x9de DUP4
0x9df CODECOPY
0x9e0 DUP2
0x9e1 ADD
0x9e2 PUSH1 0x40
0x9e4 DUP2
0x9e5 SWAP1
0x9e6 MSTORE
0x9e7 SWAP1
0x9e8 MLOAD
0x9e9 SWAP1
0x9ea DUP2
0x9eb SWAP1
0x9ec PUSH1 0x1
0x9ee PUSH1 0xa0
0x9f0 PUSH1 0x2
0x9f2 EXP
0x9f3 SUB
0x9f4 DUP3
0x9f5 AND
0x9f6 SWAP1
0x9f7 PUSH8 0x16345785d8a0000
0xa00 SWAP1
0xa01 PUSH1 0x0
0xa03 DUP2
0xa04 DUP2
0xa05 DUP2
0xa06 DUP6
0xa07 DUP8
0xa08 GAS
0xa09 CALL
0xa0a SWAP3
0xa0b POP
0xa0c POP
0xa0d POP
0xa0e POP
0xa0f DUP1
0xa10 PUSH1 0x1
0xa12 PUSH1 0xa0
0xa14 PUSH1 0x2
0xa16 EXP
0xa17 SUB
0xa18 AND
0xa19 PUSH4 0x3ccfd60b
0xa1e PUSH1 0x40
0xa20 MLOAD
0xa21 DUP2
0xa22 PUSH4 0xffffffff
0xa27 AND
0xa28 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa46 MUL
0xa47 DUP2
0xa48 MSTORE
0xa49 PUSH1 0x4
0xa4b ADD
0xa4c PUSH1 0x0
0xa4e PUSH1 0x40
0xa50 MLOAD
0xa51 DUP1
0xa52 DUP4
0xa53 SUB
0xa54 DUP2
0xa55 PUSH1 0x0
0xa57 DUP8
0xa58 DUP1
0xa59 EXTCODESIZE
0xa5a ISZERO
0xa5b DUP1
0xa5c ISZERO
0xa5d PUSH1 0x9f
0xa5f JUMPI
---
0x9d0: V723 = 0x0
0x9d3: REVERT 0x0 0x0
0x9d4: JUMPDEST 
0x9d6: V724 = 0x40
0x9d8: V725 = M[0x40]
0x9d9: V726 = 0x20
0x9dc: V727 = 0xbb
0x9df: CODECOPY V725 0xbb 0x20
0x9e1: V728 = ADD V725 0x20
0x9e2: V729 = 0x40
0x9e6: M[0x40] = V728
0x9e8: V730 = M[V725]
0x9ec: V731 = 0x1
0x9ee: V732 = 0xa0
0x9f0: V733 = 0x2
0x9f2: V734 = EXP 0x2 0xa0
0x9f3: V735 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f5: V736 = AND V730 0xffffffffffffffffffffffffffffffffffffffff
0x9f7: V737 = 0x16345785d8a0000
0xa01: V738 = 0x0
0xa08: V739 = GAS
0xa09: V740 = CALL V739 V736 0x16345785d8a0000 V728 0x0 V728 0x0
0xa10: V741 = 0x1
0xa12: V742 = 0xa0
0xa14: V743 = 0x2
0xa16: V744 = EXP 0x2 0xa0
0xa17: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa18: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0xa19: V747 = 0x3ccfd60b
0xa1e: V748 = 0x40
0xa20: V749 = M[0x40]
0xa22: V750 = 0xffffffff
0xa27: V751 = AND 0xffffffff 0x3ccfd60b
0xa28: V752 = 0x100000000000000000000000000000000000000000000000000000000
0xa46: V753 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0xa48: M[V749] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xa49: V754 = 0x4
0xa4b: V755 = ADD 0x4 V749
0xa4c: V756 = 0x0
0xa4e: V757 = 0x40
0xa50: V758 = M[0x40]
0xa53: V759 = SUB V755 V758
0xa55: V760 = 0x0
0xa59: V761 = EXTCODESIZE V746
0xa5a: V762 = ISZERO V761
0xa5c: V763 = ISZERO V762
0xa5d: V764 = 0x9f
0xa5f: THROWI V763
---
Entry stack: [V720]
Stack pops: 0
Stack additions: [V762, V746, 0x0, V758, V759, V758, 0x0, V755, 0x3ccfd60b, V746, V730, V730]
Exit stack: []

================================

Block 0xa60
[0xa60:0xa6d]
---
Predecessors: [0x9d0]
Successors: [0xa6e]
---
0xa60 PUSH1 0x0
0xa62 DUP1
0xa63 REVERT
0xa64 JUMPDEST
0xa65 POP
0xa66 GAS
0xa67 CALL
0xa68 ISZERO
0xa69 DUP1
0xa6a ISZERO
0xa6b PUSH1 0xb2
0xa6d JUMPI
---
0xa60: V765 = 0x0
0xa63: REVERT 0x0 0x0
0xa64: JUMPDEST 
0xa66: V766 = GAS
0xa67: V767 = CALL V766 S1 S2 S3 S4 S5 S6
0xa68: V768 = ISZERO V767
0xa6a: V769 = ISZERO V768
0xa6b: V770 = 0xb2
0xa6d: THROWI V769
---
Entry stack: [V730, V730, V746, 0x3ccfd60b, V755, 0x0, V758, V759, V758, 0x0, V746, V762]
Stack pops: 0
Stack additions: [V768]
Exit stack: []

================================

Block 0xa6e
[0xa6e:0xaaa]
---
Predecessors: [0xa60]
Successors: []
---
0xa6e RETURNDATASIZE
0xa6f PUSH1 0x0
0xa71 DUP1
0xa72 RETURNDATACOPY
0xa73 RETURNDATASIZE
0xa74 PUSH1 0x0
0xa76 REVERT
0xa77 JUMPDEST
0xa78 POP
0xa79 CALLER
0xa7a SWAP3
0xa7b POP
0xa7c POP
0xa7d POP
0xa7e SELFDESTRUCT
0xa7f STOP
0xa80 LOG1
0xa81 PUSH6 0x627a7a723058
0xa88 SHA3
0xa89 SWAP13
0xa8a SWAP1
0xa8b MISSING 0x4b
0xa8c MISSING 0xa7
0xa8d DUP4
0xa8e MISSING 0xd8
0xa8f SHR
0xa90 MISSING 0xa7
0xa91 EXTCODEHASH
0xa92 MISSING 0xbf
0xa93 CALLER
0xa94 PUSH11 0x20aaf05f8e0b373dc82b73
0xaa0 MISSING 0xd7
0xaa1 BLOCKHASH
0xaa2 RETURN
0xaa3 CALLCODE
0xaa4 MISSING 0xd8
0xaa5 MISSING 0xe7
0xaa6 MISSING 0xb4
0xaa7 MISSING 0x48
0xaa8 MSTORE8
0xaa9 STOP
0xaaa MISSING 0x29
---
0xa6e: V771 = RETURNDATASIZE
0xa6f: V772 = 0x0
0xa72: RETURNDATACOPY 0x0 0x0 V771
0xa73: V773 = RETURNDATASIZE
0xa74: V774 = 0x0
0xa76: REVERT 0x0 V773
0xa77: JUMPDEST 
0xa79: V775 = CALLER
0xa7e: SELFDESTRUCT V775
0xa7f: STOP 
0xa80: LOG S0 S1 S2
0xa81: V776 = 0x627a7a723058
0xa88: V777 = SHA3 0x627a7a723058 S3
0xa8b: MISSING 0x4b
0xa8c: MISSING 0xa7
0xa8e: MISSING 0xd8
0xa8f: V778 = SHR S0 S1
0xa90: MISSING 0xa7
0xa91: V779 = EXTCODEHASH S0
0xa92: MISSING 0xbf
0xa93: V780 = CALLER
0xa94: V781 = 0x20aaf05f8e0b373dc82b73
0xaa0: MISSING 0xd7
0xaa1: V782 = BLOCKHASH S0
0xaa2: RETURN V782 S1
0xaa3: V783 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xaa4: MISSING 0xd8
0xaa5: MISSING 0xe7
0xaa6: MISSING 0xb4
0xaa7: MISSING 0x48
0xaa8: M8[S0] = S1
0xaa9: STOP 
0xaaa: MISSING 0x29
---
Entry stack: [V768]
Stack pops: 0
Stack additions: [S4, S16, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V777, S3, S0, S1, S2, S3, V778, V779, 0x20aaf05f8e0b373dc82b73, V780, V783]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e52d606
Entry block: 0x37
Exit block: 0x4c
Body: 0x37, 0x3f, 0x43, 0x4c, 0x74

Function 1:
Public function signature: 0x939a743a
Entry block: 0x5e
Exit block: 0x76f
Body: 0x5e, 0x7a, 0x92, 0x96, 0xa7, 0xab, 0xf1, 0xf5, 0x100, 0x109, 0x11b, 0x11f, 0x128, 0x12c, 0x166, 0x16a, 0x175, 0x17e, 0x190, 0x194, 0x1a7, 0x76f

Function 2:
Public fallback function
Entry block: 0x32
Exit block: 0x32
Body: 0x32

Function 3:
Private function
Entry block: 0x2a4
Exit block: 0x6b9
Body: 0x1aa, 0x1b4, 0x1bb, 0x1c2, 0x1de, 0x1f5, 0x2a4, 0x2ae, 0x336, 0x33f, 0x3eb, 0x3f4, 0x4a7, 0x4b1, 0x564, 0x56f, 0x622, 0x6b9, 0x6bf, 0x71b, 0x724, 0x73a, 0x770, 0x7ca, 0x7d3, 0x7e9, 0x81f, 0x830, 0x83c, 0x86b, 0x874, 0x88a, 0x8ce, 0x8d6, 0x8db, 0x8e2, 0x954

