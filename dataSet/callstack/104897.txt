Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x6a]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0xee2cb10
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x6a
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0xee2cb10
0x1a: V12 = EQ V10 0xee2cb10
0x1b: V13 = 0x6a
0x1e: JUMPI 0x6a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x93]
---
0x1f DUP1
0x20 PUSH4 0x12065fe0
0x25 EQ
0x26 PUSH2 0x93
0x29 JUMPI
---
0x20: V14 = 0x12065fe0
0x25: V15 = EQ 0x12065fe0 V10
0x26: V16 = 0x93
0x29: JUMPI 0x93 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xb2]
---
0x2a DUP1
0x2b PUSH4 0x41c0e1b5
0x30 EQ
0x31 PUSH2 0xb2
0x34 JUMPI
---
0x2b: V17 = 0x41c0e1b5
0x30: V18 = EQ 0x41c0e1b5 V10
0x31: V19 = 0xb2
0x34: JUMPI 0xb2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xc1]
---
0x35 DUP1
0x36 PUSH4 0x590e1ae3
0x3b EQ
0x3c PUSH2 0xc1
0x3f JUMPI
---
0x36: V20 = 0x590e1ae3
0x3b: V21 = EQ 0x590e1ae3 V10
0x3c: V22 = 0xc1
0x3f: JUMPI 0xc1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xe2]
---
0x40 DUP1
0x41 PUSH4 0xa8d5fd65
0x46 EQ
0x47 PUSH2 0xe2
0x4a JUMPI
---
0x41: V23 = 0xa8d5fd65
0x46: V24 = EQ 0xa8d5fd65 V10
0x47: V25 = 0xe2
0x4a: JUMPI 0xe2 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x103]
---
0x4b DUP1
0x4c PUSH4 0xd49710cb
0x51 EQ
0x52 PUSH2 0x103
0x55 JUMPI
---
0x4c: V26 = 0xd49710cb
0x51: V27 = EQ 0xd49710cb V10
0x52: V28 = 0x103
0x55: JUMPI 0x103 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x122]
---
0x56 DUP1
0x57 PUSH4 0xfa94b844
0x5c EQ
0x5d PUSH2 0x122
0x60 JUMPI
---
0x57: V29 = 0xfa94b844
0x5c: V30 = EQ 0xfa94b844 V10
0x5d: V31 = 0x122
0x60: JUMPI 0x122 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x64]
---
Predecessors: [0x0, 0x56]
Successors: [0x65]
---
0x61 JUMPDEST
0x62 PUSH2 0x68
---
0x61: JUMPDEST 
0x62: V32 = 0x68
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V10, 0x68]

================================

Block 0x65
[0x65:0x65]
---
Predecessors: [0x61, 0x153]
Successors: [0x66]
---
0x65 JUMPDEST
---
0x65: JUMPDEST 
---
Entry stack: [V10, 0x68]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x68]

================================

Block 0x66
[0x66:0x67]
---
Predecessors: [0x65]
Successors: [0x68]
---
0x66 JUMPDEST
0x67 JUMP
---
0x66: JUMPDEST 
0x67: JUMP 0x68
---
Entry stack: [V10, 0x68]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x68
[0x68:0x69]
---
Predecessors: [0x66, 0x4ff]
Successors: []
---
0x68 JUMPDEST
0x69 STOP
---
0x68: JUMPDEST 
0x69: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x6f]
---
Predecessors: [0xb]
Successors: [0x70]
---
0x6a JUMPDEST
0x6b CALLVALUE
0x6c PUSH2 0x0
0x6f JUMPI
---
0x6a: JUMPDEST 
0x6b: V33 = CALLVALUE
0x6c: V34 = 0x0
0x6f: THROWI V33
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x70
[0x70:0x76]
---
Predecessors: [0x6a]
Successors: [0x134]
---
0x70 PUSH2 0x77
0x73 PUSH2 0x134
0x76 JUMP
---
0x70: V35 = 0x77
0x73: V36 = 0x134
0x76: JUMP 0x134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V10, 0x77]

================================

Block 0x77
[0x77:0x92]
---
Predecessors: [0x141]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a DUP1
0x7b MLOAD
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 SWAP1
0x85 SWAP3
0x86 AND
0x87 DUP3
0x88 MSTORE
0x89 MLOAD
0x8a SWAP1
0x8b DUP2
0x8c SWAP1
0x8d SUB
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 RETURN
---
0x77: JUMPDEST 
0x78: V37 = 0x40
0x7b: V38 = M[0x40]
0x7c: V39 = 0x1
0x7e: V40 = 0xa0
0x80: V41 = 0x2
0x82: V42 = EXP 0x2 0xa0
0x83: V43 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86: V44 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x88: M[V38] = V44
0x89: V45 = M[0x40]
0x8d: V46 = SUB V38 V45
0x8e: V47 = 0x20
0x90: V48 = ADD 0x20 V46
0x92: RETURN V45 V48
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x93
[0x93:0x98]
---
Predecessors: [0x1f]
Successors: [0x99]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 PUSH2 0x0
0x98 JUMPI
---
0x93: JUMPDEST 
0x94: V49 = CALLVALUE
0x95: V50 = 0x0
0x98: THROWI V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x99
[0x99:0x9f]
---
Predecessors: [0x93]
Successors: [0x144]
---
0x99 PUSH2 0xa0
0x9c PUSH2 0x144
0x9f JUMP
---
0x99: V51 = 0xa0
0x9c: V52 = 0x144
0x9f: JUMP 0x144
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa0]
Exit stack: [V10, 0xa0]

================================

Block 0xa0
[0xa0:0xb1]
---
Predecessors: [0x150, 0x4de]
Successors: []
---
0xa0 JUMPDEST
0xa1 PUSH1 0x40
0xa3 DUP1
0xa4 MLOAD
0xa5 SWAP2
0xa6 DUP3
0xa7 MSTORE
0xa8 MLOAD
0xa9 SWAP1
0xaa DUP2
0xab SWAP1
0xac SUB
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 RETURN
---
0xa0: JUMPDEST 
0xa1: V53 = 0x40
0xa4: V54 = M[0x40]
0xa7: M[V54] = S0
0xa8: V55 = M[0x40]
0xac: V56 = SUB V54 V55
0xad: V57 = 0x20
0xaf: V58 = ADD 0x20 V56
0xb1: RETURN V55 V58
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2
[0xb2:0xb7]
---
Predecessors: [0x2a]
Successors: [0xb8]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 PUSH2 0x0
0xb7 JUMPI
---
0xb2: JUMPDEST 
0xb3: V59 = CALLVALUE
0xb4: V60 = 0x0
0xb7: THROWI V59
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xbe]
---
Predecessors: [0xb2]
Successors: [0x153]
---
0xb8 PUSH2 0x68
0xbb PUSH2 0x153
0xbe JUMP
---
0xb8: V61 = 0x68
0xbb: V62 = 0x153
0xbe: JUMP 0x153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V10, 0x68]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: []
Successors: []
---
0xbf JUMPDEST
0xc0 STOP
---
0xbf: JUMPDEST 
0xc0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc1
[0xc1:0xc6]
---
Predecessors: [0x35]
Successors: [0xc7]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 PUSH2 0x0
0xc6 JUMPI
---
0xc1: JUMPDEST 
0xc2: V63 = CALLVALUE
0xc3: V64 = 0x0
0xc6: THROWI V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc7
[0xc7:0xcd]
---
Predecessors: [0xc1]
Successors: [0x17b]
---
0xc7 PUSH2 0xce
0xca PUSH2 0x17b
0xcd JUMP
---
0xc7: V65 = 0xce
0xca: V66 = 0x17b
0xcd: JUMP 0x17b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V10, 0xce]

================================

Block 0xce
[0xce:0xe1]
---
Predecessors: [0x141, 0x4d5]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 DUP1
0xd2 MLOAD
0xd3 SWAP2
0xd4 ISZERO
0xd5 ISZERO
0xd6 DUP3
0xd7 MSTORE
0xd8 MLOAD
0xd9 SWAP1
0xda DUP2
0xdb SWAP1
0xdc SUB
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 RETURN
---
0xce: JUMPDEST 
0xcf: V67 = 0x40
0xd2: V68 = M[0x40]
0xd4: V69 = ISZERO S0
0xd5: V70 = ISZERO V69
0xd7: M[V68] = V70
0xd8: V71 = M[0x40]
0xdc: V72 = SUB V68 V71
0xdd: V73 = 0x20
0xdf: V74 = ADD 0x20 V72
0xe1: RETURN V71 V74
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xe2
[0xe2:0xe7]
---
Predecessors: [0x40]
Successors: [0xe8]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 PUSH2 0x0
0xe7 JUMPI
---
0xe2: JUMPDEST 
0xe3: V75 = CALLVALUE
0xe4: V76 = 0x0
0xe7: THROWI V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0xe2]
Successors: [0x1cc]
---
0xe8 PUSH2 0xce
0xeb PUSH2 0x1cc
0xee JUMP
---
0xe8: V77 = 0xce
0xeb: V78 = 0x1cc
0xee: JUMP 0x1cc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V10, 0xce]

================================

Block 0xef
[0xef:0x102]
---
Predecessors: []
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 DUP1
0xf3 MLOAD
0xf4 SWAP2
0xf5 ISZERO
0xf6 ISZERO
0xf7 DUP3
0xf8 MSTORE
0xf9 MLOAD
0xfa SWAP1
0xfb DUP2
0xfc SWAP1
0xfd SUB
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 RETURN
---
0xef: JUMPDEST 
0xf0: V79 = 0x40
0xf3: V80 = M[0x40]
0xf5: V81 = ISZERO S0
0xf6: V82 = ISZERO V81
0xf8: M[V80] = V82
0xf9: V83 = M[0x40]
0xfd: V84 = SUB V80 V83
0xfe: V85 = 0x20
0x100: V86 = ADD 0x20 V84
0x102: RETURN V83 V86
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x103
[0x103:0x108]
---
Predecessors: [0x4b]
Successors: [0x109]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 PUSH2 0x0
0x108 JUMPI
---
0x103: JUMPDEST 
0x104: V87 = CALLVALUE
0x105: V88 = 0x0
0x108: THROWI V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x109
[0x109:0x10f]
---
Predecessors: [0x103]
Successors: [0x4da]
---
0x109 PUSH2 0xa0
0x10c PUSH2 0x4da
0x10f JUMP
---
0x109: V89 = 0xa0
0x10c: V90 = 0x4da
0x10f: JUMP 0x4da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa0]
Exit stack: [V10, 0xa0]

================================

Block 0x110
[0x110:0x121]
---
Predecessors: []
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x40
0x113 DUP1
0x114 MLOAD
0x115 SWAP2
0x116 DUP3
0x117 MSTORE
0x118 MLOAD
0x119 SWAP1
0x11a DUP2
0x11b SWAP1
0x11c SUB
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 RETURN
---
0x110: JUMPDEST 
0x111: V91 = 0x40
0x114: V92 = M[0x40]
0x117: M[V92] = S0
0x118: V93 = M[0x40]
0x11c: V94 = SUB V92 V93
0x11d: V95 = 0x20
0x11f: V96 = ADD 0x20 V94
0x121: RETURN V93 V96
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x122
[0x122:0x127]
---
Predecessors: [0x56]
Successors: [0x128]
---
0x122 JUMPDEST
0x123 CALLVALUE
0x124 PUSH2 0x0
0x127 JUMPI
---
0x122: JUMPDEST 
0x123: V97 = CALLVALUE
0x124: V98 = 0x0
0x127: THROWI V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x128
[0x128:0x131]
---
Predecessors: [0x122]
Successors: [0x4e1]
---
0x128 PUSH2 0x68
0x12b PUSH1 0x4
0x12d CALLDATALOAD
0x12e PUSH2 0x4e1
0x131 JUMP
---
0x128: V99 = 0x68
0x12b: V100 = 0x4
0x12d: V101 = CALLDATALOAD 0x4
0x12e: V102 = 0x4e1
0x131: JUMP 0x4e1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x68, V101]
Exit stack: [V10, 0x68, V101]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: []
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x134
[0x134:0x140]
---
Predecessors: [0x70]
Successors: [0x141]
---
0x134 JUMPDEST
0x135 PUSH1 0x0
0x137 SLOAD
0x138 PUSH1 0x1
0x13a PUSH1 0xa0
0x13c PUSH1 0x2
0x13e EXP
0x13f SUB
0x140 AND
---
0x134: JUMPDEST 
0x135: V103 = 0x0
0x137: V104 = S[0x0]
0x138: V105 = 0x1
0x13a: V106 = 0xa0
0x13c: V107 = 0x2
0x13e: V108 = EXP 0x2 0xa0
0x13f: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x140: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
---
Entry stack: [V10, 0x77]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V10, 0x77, V110]

================================

Block 0x141
[0x141:0x143]
---
Predecessors: [0x134, 0x17b, 0x194]
Successors: [0x77, 0xce]
---
0x141 JUMPDEST
0x142 SWAP1
0x143 JUMP
---
0x141: JUMPDEST 
0x143: JUMP {0x77, 0xce}
---
Entry stack: [V10, {0x77, 0xce}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x144
[0x144:0x14f]
---
Predecessors: [0x99]
Successors: [0x150]
---
0x144 JUMPDEST
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d ADDRESS
0x14e AND
0x14f BALANCE
---
0x144: JUMPDEST 
0x145: V111 = 0x1
0x147: V112 = 0xa0
0x149: V113 = 0x2
0x14b: V114 = EXP 0x2 0xa0
0x14c: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14d: V116 = ADDRESS
0x14e: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V118 = BALANCE V117
---
Entry stack: [V10, 0xa0]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V10, 0xa0, V118]

================================

Block 0x150
[0x150:0x152]
---
Predecessors: [0x144]
Successors: [0xa0]
---
0x150 JUMPDEST
0x151 SWAP1
0x152 JUMP
---
0x150: JUMPDEST 
0x152: JUMP 0xa0
---
Entry stack: [V10, 0xa0, V118]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V118]

================================

Block 0x153
[0x153:0x16a]
---
Predecessors: [0xb8]
Successors: [0x65, 0x16b]
---
0x153 JUMPDEST
0x154 PUSH1 0x0
0x156 SLOAD
0x157 CALLER
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 SWAP1
0x161 DUP2
0x162 AND
0x163 SWAP2
0x164 AND
0x165 EQ
0x166 ISZERO
0x167 PUSH2 0x65
0x16a JUMPI
---
0x153: JUMPDEST 
0x154: V119 = 0x0
0x156: V120 = S[0x0]
0x157: V121 = CALLER
0x158: V122 = 0x1
0x15a: V123 = 0xa0
0x15c: V124 = 0x2
0x15e: V125 = EXP 0x2 0xa0
0x15f: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x164: V128 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x165: V129 = EQ V128 V127
0x166: V130 = ISZERO V129
0x167: V131 = 0x65
0x16a: JUMPI 0x65 V130
---
Entry stack: [V10, 0x68]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x68]

================================

Block 0x16b
[0x16b:0x177]
---
Predecessors: [0x153]
Successors: []
---
0x16b PUSH1 0x0
0x16d SLOAD
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 AND
0x177 SELFDESTRUCT
---
0x16b: V132 = 0x0
0x16d: V133 = S[0x0]
0x16e: V134 = 0x1
0x170: V135 = 0xa0
0x172: V136 = 0x2
0x174: V137 = EXP 0x2 0xa0
0x175: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x177: SELFDESTRUCT V139
---
Entry stack: [V10, 0x68]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x68]

================================

Block 0x178
[0x178:0x178]
---
Predecessors: []
Successors: [0x179]
---
0x178 JUMPDEST
---
0x178: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: [0x178]
Successors: []
Has unresolved jump.
---
0x179 JUMPDEST
0x17a JUMP
---
0x179: JUMPDEST 
0x17a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x17b
[0x17b:0x193]
---
Predecessors: [0xc7]
Successors: [0x141, 0x194]
---
0x17b JUMPDEST
0x17c PUSH1 0x0
0x17e DUP1
0x17f SLOAD
0x180 CALLER
0x181 PUSH1 0x1
0x183 PUSH1 0xa0
0x185 PUSH1 0x2
0x187 EXP
0x188 SUB
0x189 SWAP1
0x18a DUP2
0x18b AND
0x18c SWAP2
0x18d AND
0x18e EQ
0x18f ISZERO
0x190 PUSH2 0x141
0x193 JUMPI
---
0x17b: JUMPDEST 
0x17c: V140 = 0x0
0x17f: V141 = S[0x0]
0x180: V142 = CALLER
0x181: V143 = 0x1
0x183: V144 = 0xa0
0x185: V145 = 0x2
0x187: V146 = EXP 0x2 0xa0
0x188: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18b: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x18d: V149 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V150 = EQ V149 V148
0x18f: V151 = ISZERO V150
0x190: V152 = 0x141
0x193: JUMPI 0x141 V151
---
Entry stack: [V10, 0xce]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xce, 0x0]

================================

Block 0x194
[0x194:0x1c7]
---
Predecessors: [0x17b]
Successors: [0x141]
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 SLOAD
0x198 PUSH1 0x40
0x19a MLOAD
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 SWAP2
0x1a4 DUP3
0x1a5 AND
0x1a6 SWAP3
0x1a7 ADDRESS
0x1a8 SWAP1
0x1a9 SWAP3
0x1aa AND
0x1ab BALANCE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x8fc
0x1b1 MUL
0x1b2 SWAP3
0x1b3 SWAP1
0x1b4 SWAP2
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 DUP2
0x1b8 DUP2
0x1b9 DUP6
0x1ba DUP9
0x1bb DUP9
0x1bc CALL
0x1bd SWAP4
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 POP
0x1c2 SWAP1
0x1c3 POP
0x1c4 PUSH2 0x141
0x1c7 JUMP
---
0x194: V153 = 0x0
0x197: V154 = S[0x0]
0x198: V155 = 0x40
0x19a: V156 = M[0x40]
0x19b: V157 = 0x1
0x19d: V158 = 0xa0
0x19f: V159 = 0x2
0x1a1: V160 = EXP 0x2 0xa0
0x1a2: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x1a7: V163 = ADDRESS
0x1aa: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1ab: V165 = BALANCE V164
0x1ad: V166 = ISZERO V165
0x1ae: V167 = 0x8fc
0x1b1: V168 = MUL 0x8fc V166
0x1bc: V169 = CALL V168 V162 V165 V156 0x0 V156 0x0
0x1c4: V170 = 0x141
0x1c7: JUMP 0x141
---
Entry stack: [V10, 0xce, 0x0]
Stack pops: 1
Stack additions: [V169]
Exit stack: [V10, 0xce, V169]

================================

Block 0x1c8
[0x1c8:0x1c8]
---
Predecessors: []
Successors: [0x1c9]
---
0x1c8 JUMPDEST
---
0x1c8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c9
[0x1c9:0x1cb]
---
Predecessors: [0x1c8]
Successors: []
Has unresolved jump.
---
0x1c9 JUMPDEST
0x1ca SWAP1
0x1cb JUMP
---
0x1c9: JUMPDEST 
0x1cb: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x1cc
[0x1cc:0x1e8]
---
Predecessors: [0xe8]
Successors: [0x1e9, 0x4ce]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 SLOAD
0x1d1 DUP2
0x1d2 SWAP1
0x1d3 DUP2
0x1d4 SWAP1
0x1d5 CALLER
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0xa0
0x1da PUSH1 0x2
0x1dc EXP
0x1dd SUB
0x1de SWAP1
0x1df DUP2
0x1e0 AND
0x1e1 SWAP2
0x1e2 AND
0x1e3 EQ
0x1e4 ISZERO
0x1e5 PUSH2 0x4ce
0x1e8 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V171 = 0x0
0x1d0: V172 = S[0x0]
0x1d5: V173 = CALLER
0x1d6: V174 = 0x1
0x1d8: V175 = 0xa0
0x1da: V176 = 0x2
0x1dc: V177 = EXP 0x2 0xa0
0x1dd: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e0: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x1e2: V180 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V181 = EQ V180 V179
0x1e4: V182 = ISZERO V181
0x1e5: V183 = 0x4ce
0x1e8: JUMPI 0x4ce V182
---
Entry stack: [V10, 0xce]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0xce, 0x0, 0x0, 0x0]

================================

Block 0x1e9
[0x1e9:0x1fb]
---
Predecessors: [0x1cc]
Successors: [0x1fc, 0x4ce]
---
0x1e9 PUSH1 0x1
0x1eb SLOAD
0x1ec PUSH1 0x1
0x1ee PUSH1 0xa0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 SUB
0x1f4 ADDRESS
0x1f5 AND
0x1f6 BALANCE
0x1f7 LT
0x1f8 PUSH2 0x4ce
0x1fb JUMPI
---
0x1e9: V184 = 0x1
0x1eb: V185 = S[0x1]
0x1ec: V186 = 0x1
0x1ee: V187 = 0xa0
0x1f0: V188 = 0x2
0x1f2: V189 = EXP 0x2 0xa0
0x1f3: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V191 = ADDRESS
0x1f5: V192 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V193 = BALANCE V192
0x1f7: V194 = LT V193 V185
0x1f8: V195 = 0x4ce
0x1fb: JUMPI 0x4ce V194
---
Entry stack: [V10, 0xce, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xce, 0x0, 0x0, 0x0]

================================

Block 0x1fc
[0x1fc:0x284]
---
Predecessors: [0x1e9]
Successors: [0x285]
---
0x1fc POP
0x1fd POP
0x1fe PUSH1 0x40
0x200 DUP1
0x201 MLOAD
0x202 PUSH32 0x6a656e7300000000000000000000000000000000000000000000000000000000
0x223 DUP1
0x224 DUP3
0x225 MSTORE
0x226 PUSH1 0x2
0x228 PUSH1 0x4
0x22a DUP1
0x22b DUP5
0x22c ADD
0x22d SWAP2
0x22e SWAP1
0x22f SWAP2
0x230 MSTORE
0x231 DUP4
0x232 MLOAD
0x233 PUSH1 0x24
0x235 SWAP4
0x236 DUP2
0x237 SWAP1
0x238 SUB
0x239 DUP5
0x23a ADD
0x23b DUP2
0x23c SHA3
0x23d SLOAD
0x23e SWAP3
0x23f DUP2
0x240 MSTORE
0x241 PUSH1 0x3
0x243 SWAP2
0x244 DUP2
0x245 ADD
0x246 SWAP2
0x247 SWAP1
0x248 SWAP2
0x249 MSTORE
0x24a SWAP3
0x24b MLOAD
0x24c SWAP3
0x24d DUP4
0x24e SWAP1
0x24f SUB
0x250 SWAP1
0x251 SWAP2
0x252 ADD
0x253 DUP3
0x254 SHA3
0x255 SLOAD
0x256 PUSH1 0x1
0x258 SWAP3
0x259 ADDRESS
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 SWAP1
0x263 DUP2
0x264 AND
0x265 BALANCE
0x266 SWAP4
0x267 AND
0x268 SWAP2
0x269 PUSH2 0x3e8
0x26c SWAP1
0x26d DUP5
0x26e MUL
0x26f DIV
0x270 DUP1
0x271 ISZERO
0x272 PUSH2 0x8fc
0x275 MUL
0x276 SWAP2
0x277 PUSH1 0x0
0x279 DUP2
0x27a DUP2
0x27b DUP2
0x27c DUP6
0x27d DUP9
0x27e DUP9
0x27f CALL
0x280 SWAP4
0x281 POP
0x282 POP
0x283 POP
0x284 POP
---
0x1fe: V196 = 0x40
0x201: V197 = M[0x40]
0x202: V198 = 0x6a656e7300000000000000000000000000000000000000000000000000000000
0x225: M[V197] = 0x6a656e7300000000000000000000000000000000000000000000000000000000
0x226: V199 = 0x2
0x228: V200 = 0x4
0x22c: V201 = ADD V197 0x4
0x230: M[V201] = 0x2
0x232: V202 = M[0x40]
0x233: V203 = 0x24
0x238: V204 = SUB V197 V202
0x23a: V205 = ADD 0x24 V204
0x23c: V206 = SHA3 V202 V205
0x23d: V207 = S[V206]
0x240: M[V202] = 0x6a656e7300000000000000000000000000000000000000000000000000000000
0x241: V208 = 0x3
0x245: V209 = ADD V202 0x4
0x249: M[V209] = 0x3
0x24b: V210 = M[0x40]
0x24f: V211 = SUB V202 V210
0x252: V212 = ADD 0x24 V211
0x254: V213 = SHA3 V210 V212
0x255: V214 = S[V213]
0x256: V215 = 0x1
0x259: V216 = ADDRESS
0x25a: V217 = 0x1
0x25c: V218 = 0xa0
0x25e: V219 = 0x2
0x260: V220 = EXP 0x2 0xa0
0x261: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x265: V223 = BALANCE V222
0x267: V224 = AND V207 0xffffffffffffffffffffffffffffffffffffffff
0x269: V225 = 0x3e8
0x26e: V226 = MUL V223 V214
0x26f: V227 = DIV V226 0x3e8
0x271: V228 = ISZERO V227
0x272: V229 = 0x8fc
0x275: V230 = MUL 0x8fc V228
0x277: V231 = 0x0
0x27f: V232 = CALL V230 V224 V227 V210 0x0 V210 0x0
---
Entry stack: [V10, 0xce, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x1, V223, V232]
Exit stack: [V10, 0xce, 0x0, 0x1, V223, V232]

================================

Block 0x285
[0x285:0x28e]
---
Predecessors: [0x1fc]
Successors: [0x28f, 0x313]
---
0x285 JUMPDEST
0x286 SWAP2
0x287 POP
0x288 DUP2
0x289 DUP1
0x28a ISZERO
0x28b PUSH2 0x313
0x28e JUMPI
---
0x285: JUMPDEST 
0x28a: V233 = ISZERO V232
0x28b: V234 = 0x313
0x28e: JUMPI 0x313 V233
---
Entry stack: [V10, 0xce, 0x0, 0x1, V223, V232]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V10, 0xce, 0x0, V232, V223, V232]

================================

Block 0x28f
[0x28f:0x312]
---
Predecessors: [0x285]
Successors: [0x313]
---
0x28f POP
0x290 PUSH1 0x40
0x292 DUP1
0x293 MLOAD
0x294 PUSH32 0x6e696b6f6c617300000000000000000000000000000000000000000000000000
0x2b5 DUP1
0x2b6 DUP3
0x2b7 MSTORE
0x2b8 PUSH1 0x2
0x2ba PUSH1 0x7
0x2bc DUP1
0x2bd DUP5
0x2be ADD
0x2bf SWAP2
0x2c0 SWAP1
0x2c1 SWAP2
0x2c2 MSTORE
0x2c3 DUP4
0x2c4 MLOAD
0x2c5 PUSH1 0x27
0x2c7 SWAP4
0x2c8 DUP2
0x2c9 SWAP1
0x2ca SUB
0x2cb DUP5
0x2cc ADD
0x2cd DUP2
0x2ce SHA3
0x2cf SLOAD
0x2d0 SWAP3
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x3
0x2d5 SWAP2
0x2d6 DUP2
0x2d7 ADD
0x2d8 SWAP2
0x2d9 SWAP1
0x2da SWAP2
0x2db MSTORE
0x2dc SWAP3
0x2dd MLOAD
0x2de SWAP3
0x2df DUP4
0x2e0 SWAP1
0x2e1 SUB
0x2e2 SWAP1
0x2e3 SWAP2
0x2e4 ADD
0x2e5 DUP3
0x2e6 SHA3
0x2e7 SLOAD
0x2e8 PUSH1 0x1
0x2ea PUSH1 0xa0
0x2ec PUSH1 0x2
0x2ee EXP
0x2ef SUB
0x2f0 SWAP1
0x2f1 SWAP2
0x2f2 AND
0x2f3 SWAP2
0x2f4 PUSH2 0x3e8
0x2f7 SWAP2
0x2f8 DUP5
0x2f9 MUL
0x2fa SWAP2
0x2fb SWAP1
0x2fc SWAP2
0x2fd DIV
0x2fe DUP1
0x2ff ISZERO
0x300 PUSH2 0x8fc
0x303 MUL
0x304 SWAP2
0x305 PUSH1 0x0
0x307 DUP2
0x308 DUP2
0x309 DUP2
0x30a DUP6
0x30b DUP9
0x30c DUP9
0x30d CALL
0x30e SWAP4
0x30f POP
0x310 POP
0x311 POP
0x312 POP
---
0x290: V235 = 0x40
0x293: V236 = M[0x40]
0x294: V237 = 0x6e696b6f6c617300000000000000000000000000000000000000000000000000
0x2b7: M[V236] = 0x6e696b6f6c617300000000000000000000000000000000000000000000000000
0x2b8: V238 = 0x2
0x2ba: V239 = 0x7
0x2be: V240 = ADD V236 0x7
0x2c2: M[V240] = 0x2
0x2c4: V241 = M[0x40]
0x2c5: V242 = 0x27
0x2ca: V243 = SUB V236 V241
0x2cc: V244 = ADD 0x27 V243
0x2ce: V245 = SHA3 V241 V244
0x2cf: V246 = S[V245]
0x2d2: M[V241] = 0x6e696b6f6c617300000000000000000000000000000000000000000000000000
0x2d3: V247 = 0x3
0x2d7: V248 = ADD V241 0x7
0x2db: M[V248] = 0x3
0x2dd: V249 = M[0x40]
0x2e1: V250 = SUB V241 V249
0x2e4: V251 = ADD 0x27 V250
0x2e6: V252 = SHA3 V249 V251
0x2e7: V253 = S[V252]
0x2e8: V254 = 0x1
0x2ea: V255 = 0xa0
0x2ec: V256 = 0x2
0x2ee: V257 = EXP 0x2 0xa0
0x2ef: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f2: V259 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V260 = 0x3e8
0x2f9: V261 = MUL V223 V253
0x2fd: V262 = DIV V261 0x3e8
0x2ff: V263 = ISZERO V262
0x300: V264 = 0x8fc
0x303: V265 = MUL 0x8fc V263
0x305: V266 = 0x0
0x30d: V267 = CALL V265 V259 V262 V249 0x0 V249 0x0
---
Entry stack: [V10, 0xce, 0x0, V232, V223, V232]
Stack pops: 2
Stack additions: [S1, V267]
Exit stack: [V10, 0xce, 0x0, V232, V223, V267]

================================

Block 0x313
[0x313:0x31c]
---
Predecessors: [0x285, 0x28f]
Successors: [0x31d, 0x3a1]
---
0x313 JUMPDEST
0x314 SWAP2
0x315 POP
0x316 DUP2
0x317 DUP1
0x318 ISZERO
0x319 PUSH2 0x3a1
0x31c JUMPI
---
0x313: JUMPDEST 
0x318: V268 = ISZERO S0
0x319: V269 = 0x3a1
0x31c: JUMPI 0x3a1 V268
---
Entry stack: [V10, 0xce, 0x0, V232, V223, S0]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V10, 0xce, 0x0, S0, V223, S0]

================================

Block 0x31d
[0x31d:0x3a0]
---
Predecessors: [0x313]
Successors: [0x3a1]
---
0x31d POP
0x31e PUSH1 0x40
0x320 DUP1
0x321 MLOAD
0x322 PUSH32 0x6b75727400000000000000000000000000000000000000000000000000000000
0x343 DUP1
0x344 DUP3
0x345 MSTORE
0x346 PUSH1 0x2
0x348 PUSH1 0x4
0x34a DUP1
0x34b DUP5
0x34c ADD
0x34d SWAP2
0x34e SWAP1
0x34f SWAP2
0x350 MSTORE
0x351 DUP4
0x352 MLOAD
0x353 PUSH1 0x24
0x355 SWAP4
0x356 DUP2
0x357 SWAP1
0x358 SUB
0x359 DUP5
0x35a ADD
0x35b DUP2
0x35c SHA3
0x35d SLOAD
0x35e SWAP3
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x3
0x363 SWAP2
0x364 DUP2
0x365 ADD
0x366 SWAP2
0x367 SWAP1
0x368 SWAP2
0x369 MSTORE
0x36a SWAP3
0x36b MLOAD
0x36c SWAP3
0x36d DUP4
0x36e SWAP1
0x36f SUB
0x370 SWAP1
0x371 SWAP2
0x372 ADD
0x373 DUP3
0x374 SHA3
0x375 SLOAD
0x376 PUSH1 0x1
0x378 PUSH1 0xa0
0x37a PUSH1 0x2
0x37c EXP
0x37d SUB
0x37e SWAP1
0x37f SWAP2
0x380 AND
0x381 SWAP2
0x382 PUSH2 0x3e8
0x385 SWAP2
0x386 DUP5
0x387 MUL
0x388 SWAP2
0x389 SWAP1
0x38a SWAP2
0x38b DIV
0x38c DUP1
0x38d ISZERO
0x38e PUSH2 0x8fc
0x391 MUL
0x392 SWAP2
0x393 PUSH1 0x0
0x395 DUP2
0x396 DUP2
0x397 DUP2
0x398 DUP6
0x399 DUP9
0x39a DUP9
0x39b CALL
0x39c SWAP4
0x39d POP
0x39e POP
0x39f POP
0x3a0 POP
---
0x31e: V270 = 0x40
0x321: V271 = M[0x40]
0x322: V272 = 0x6b75727400000000000000000000000000000000000000000000000000000000
0x345: M[V271] = 0x6b75727400000000000000000000000000000000000000000000000000000000
0x346: V273 = 0x2
0x348: V274 = 0x4
0x34c: V275 = ADD V271 0x4
0x350: M[V275] = 0x2
0x352: V276 = M[0x40]
0x353: V277 = 0x24
0x358: V278 = SUB V271 V276
0x35a: V279 = ADD 0x24 V278
0x35c: V280 = SHA3 V276 V279
0x35d: V281 = S[V280]
0x360: M[V276] = 0x6b75727400000000000000000000000000000000000000000000000000000000
0x361: V282 = 0x3
0x365: V283 = ADD V276 0x4
0x369: M[V283] = 0x3
0x36b: V284 = M[0x40]
0x36f: V285 = SUB V276 V284
0x372: V286 = ADD 0x24 V285
0x374: V287 = SHA3 V284 V286
0x375: V288 = S[V287]
0x376: V289 = 0x1
0x378: V290 = 0xa0
0x37a: V291 = 0x2
0x37c: V292 = EXP 0x2 0xa0
0x37d: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V294 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x382: V295 = 0x3e8
0x387: V296 = MUL V223 V288
0x38b: V297 = DIV V296 0x3e8
0x38d: V298 = ISZERO V297
0x38e: V299 = 0x8fc
0x391: V300 = MUL 0x8fc V298
0x393: V301 = 0x0
0x39b: V302 = CALL V300 V294 V297 V284 0x0 V284 0x0
---
Entry stack: [V10, 0xce, 0x0, S2, V223, S0]
Stack pops: 2
Stack additions: [S1, V302]
Exit stack: [V10, 0xce, 0x0, S2, V223, V302]

================================

Block 0x3a1
[0x3a1:0x3aa]
---
Predecessors: [0x313, 0x31d]
Successors: [0x3ab, 0x42f]
---
0x3a1 JUMPDEST
0x3a2 SWAP2
0x3a3 POP
0x3a4 DUP2
0x3a5 DUP1
0x3a6 ISZERO
0x3a7 PUSH2 0x42f
0x3aa JUMPI
---
0x3a1: JUMPDEST 
0x3a6: V303 = ISZERO S0
0x3a7: V304 = 0x42f
0x3aa: JUMPI 0x42f V303
---
Entry stack: [V10, 0xce, 0x0, S2, V223, S0]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V10, 0xce, 0x0, S0, V223, S0]

================================

Block 0x3ab
[0x3ab:0x42e]
---
Predecessors: [0x3a1]
Successors: [0x42f]
---
0x3ab POP
0x3ac PUSH1 0x40
0x3ae DUP1
0x3af MLOAD
0x3b0 PUSH32 0x646176696e6f0000000000000000000000000000000000000000000000000000
0x3d1 DUP1
0x3d2 DUP3
0x3d3 MSTORE
0x3d4 PUSH1 0x2
0x3d6 PUSH1 0x6
0x3d8 DUP1
0x3d9 DUP5
0x3da ADD
0x3db SWAP2
0x3dc SWAP1
0x3dd SWAP2
0x3de MSTORE
0x3df DUP4
0x3e0 MLOAD
0x3e1 PUSH1 0x26
0x3e3 SWAP4
0x3e4 DUP2
0x3e5 SWAP1
0x3e6 SUB
0x3e7 DUP5
0x3e8 ADD
0x3e9 DUP2
0x3ea SHA3
0x3eb SLOAD
0x3ec SWAP3
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH1 0x3
0x3f1 SWAP2
0x3f2 DUP2
0x3f3 ADD
0x3f4 SWAP2
0x3f5 SWAP1
0x3f6 SWAP2
0x3f7 MSTORE
0x3f8 SWAP3
0x3f9 MLOAD
0x3fa SWAP3
0x3fb DUP4
0x3fc SWAP1
0x3fd SUB
0x3fe SWAP1
0x3ff SWAP2
0x400 ADD
0x401 DUP3
0x402 SHA3
0x403 SLOAD
0x404 PUSH1 0x1
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SUB
0x40c SWAP1
0x40d SWAP2
0x40e AND
0x40f SWAP2
0x410 PUSH2 0x3e8
0x413 SWAP2
0x414 DUP5
0x415 MUL
0x416 SWAP2
0x417 SWAP1
0x418 SWAP2
0x419 DIV
0x41a DUP1
0x41b ISZERO
0x41c PUSH2 0x8fc
0x41f MUL
0x420 SWAP2
0x421 PUSH1 0x0
0x423 DUP2
0x424 DUP2
0x425 DUP2
0x426 DUP6
0x427 DUP9
0x428 DUP9
0x429 CALL
0x42a SWAP4
0x42b POP
0x42c POP
0x42d POP
0x42e POP
---
0x3ac: V305 = 0x40
0x3af: V306 = M[0x40]
0x3b0: V307 = 0x646176696e6f0000000000000000000000000000000000000000000000000000
0x3d3: M[V306] = 0x646176696e6f0000000000000000000000000000000000000000000000000000
0x3d4: V308 = 0x2
0x3d6: V309 = 0x6
0x3da: V310 = ADD V306 0x6
0x3de: M[V310] = 0x2
0x3e0: V311 = M[0x40]
0x3e1: V312 = 0x26
0x3e6: V313 = SUB V306 V311
0x3e8: V314 = ADD 0x26 V313
0x3ea: V315 = SHA3 V311 V314
0x3eb: V316 = S[V315]
0x3ee: M[V311] = 0x646176696e6f0000000000000000000000000000000000000000000000000000
0x3ef: V317 = 0x3
0x3f3: V318 = ADD V311 0x6
0x3f7: M[V318] = 0x3
0x3f9: V319 = M[0x40]
0x3fd: V320 = SUB V311 V319
0x400: V321 = ADD 0x26 V320
0x402: V322 = SHA3 V319 V321
0x403: V323 = S[V322]
0x404: V324 = 0x1
0x406: V325 = 0xa0
0x408: V326 = 0x2
0x40a: V327 = EXP 0x2 0xa0
0x40b: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V329 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x410: V330 = 0x3e8
0x415: V331 = MUL V223 V323
0x419: V332 = DIV V331 0x3e8
0x41b: V333 = ISZERO V332
0x41c: V334 = 0x8fc
0x41f: V335 = MUL 0x8fc V333
0x421: V336 = 0x0
0x429: V337 = CALL V335 V329 V332 V319 0x0 V319 0x0
---
Entry stack: [V10, 0xce, 0x0, S2, V223, S0]
Stack pops: 2
Stack additions: [S1, V337]
Exit stack: [V10, 0xce, 0x0, S2, V223, V337]

================================

Block 0x42f
[0x42f:0x438]
---
Predecessors: [0x3a1, 0x3ab]
Successors: [0x439, 0x4bd]
---
0x42f JUMPDEST
0x430 SWAP2
0x431 POP
0x432 DUP2
0x433 DUP1
0x434 ISZERO
0x435 PUSH2 0x4bd
0x438 JUMPI
---
0x42f: JUMPDEST 
0x434: V338 = ISZERO S0
0x435: V339 = 0x4bd
0x438: JUMPI 0x4bd V338
---
Entry stack: [V10, 0xce, 0x0, S2, V223, S0]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V10, 0xce, 0x0, S0, V223, S0]

================================

Block 0x439
[0x439:0x4bc]
---
Predecessors: [0x42f]
Successors: [0x4bd]
---
0x439 POP
0x43a PUSH1 0x40
0x43c DUP1
0x43d MLOAD
0x43e PUSH32 0x76616c656e74696a6e0000000000000000000000000000000000000000000000
0x45f DUP1
0x460 DUP3
0x461 MSTORE
0x462 PUSH1 0x2
0x464 PUSH1 0x9
0x466 DUP1
0x467 DUP5
0x468 ADD
0x469 SWAP2
0x46a SWAP1
0x46b SWAP2
0x46c MSTORE
0x46d DUP4
0x46e MLOAD
0x46f PUSH1 0x29
0x471 SWAP4
0x472 DUP2
0x473 SWAP1
0x474 SUB
0x475 DUP5
0x476 ADD
0x477 DUP2
0x478 SHA3
0x479 SLOAD
0x47a SWAP3
0x47b DUP2
0x47c MSTORE
0x47d PUSH1 0x3
0x47f SWAP2
0x480 DUP2
0x481 ADD
0x482 SWAP2
0x483 SWAP1
0x484 SWAP2
0x485 MSTORE
0x486 SWAP3
0x487 MLOAD
0x488 SWAP3
0x489 DUP4
0x48a SWAP1
0x48b SUB
0x48c SWAP1
0x48d SWAP2
0x48e ADD
0x48f DUP3
0x490 SHA3
0x491 SLOAD
0x492 PUSH1 0x1
0x494 PUSH1 0xa0
0x496 PUSH1 0x2
0x498 EXP
0x499 SUB
0x49a SWAP1
0x49b SWAP2
0x49c AND
0x49d SWAP2
0x49e PUSH2 0x3e8
0x4a1 SWAP2
0x4a2 DUP5
0x4a3 MUL
0x4a4 SWAP2
0x4a5 SWAP1
0x4a6 SWAP2
0x4a7 DIV
0x4a8 DUP1
0x4a9 ISZERO
0x4aa PUSH2 0x8fc
0x4ad MUL
0x4ae SWAP2
0x4af PUSH1 0x0
0x4b1 DUP2
0x4b2 DUP2
0x4b3 DUP2
0x4b4 DUP6
0x4b5 DUP9
0x4b6 DUP9
0x4b7 CALL
0x4b8 SWAP4
0x4b9 POP
0x4ba POP
0x4bb POP
0x4bc POP
---
0x43a: V340 = 0x40
0x43d: V341 = M[0x40]
0x43e: V342 = 0x76616c656e74696a6e0000000000000000000000000000000000000000000000
0x461: M[V341] = 0x76616c656e74696a6e0000000000000000000000000000000000000000000000
0x462: V343 = 0x2
0x464: V344 = 0x9
0x468: V345 = ADD V341 0x9
0x46c: M[V345] = 0x2
0x46e: V346 = M[0x40]
0x46f: V347 = 0x29
0x474: V348 = SUB V341 V346
0x476: V349 = ADD 0x29 V348
0x478: V350 = SHA3 V346 V349
0x479: V351 = S[V350]
0x47c: M[V346] = 0x76616c656e74696a6e0000000000000000000000000000000000000000000000
0x47d: V352 = 0x3
0x481: V353 = ADD V346 0x9
0x485: M[V353] = 0x3
0x487: V354 = M[0x40]
0x48b: V355 = SUB V346 V354
0x48e: V356 = ADD 0x29 V355
0x490: V357 = SHA3 V354 V356
0x491: V358 = S[V357]
0x492: V359 = 0x1
0x494: V360 = 0xa0
0x496: V361 = 0x2
0x498: V362 = EXP 0x2 0xa0
0x499: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V364 = AND V351 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V365 = 0x3e8
0x4a3: V366 = MUL V223 V358
0x4a7: V367 = DIV V366 0x3e8
0x4a9: V368 = ISZERO V367
0x4aa: V369 = 0x8fc
0x4ad: V370 = MUL 0x8fc V368
0x4af: V371 = 0x0
0x4b7: V372 = CALL V370 V364 V367 V354 0x0 V354 0x0
---
Entry stack: [V10, 0xce, 0x0, S2, V223, S0]
Stack pops: 2
Stack additions: [S1, V372]
Exit stack: [V10, 0xce, 0x0, S2, V223, V372]

================================

Block 0x4bd
[0x4bd:0x4c5]
---
Predecessors: [0x42f, 0x439]
Successors: [0x4c6, 0x4ce]
---
0x4bd JUMPDEST
0x4be SWAP2
0x4bf POP
0x4c0 DUP2
0x4c1 ISZERO
0x4c2 PUSH2 0x4ce
0x4c5 JUMPI
---
0x4bd: JUMPDEST 
0x4c1: V373 = ISZERO S0
0x4c2: V374 = 0x4ce
0x4c5: JUMPI 0x4ce V373
---
Entry stack: [V10, 0xce, 0x0, S2, V223, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V10, 0xce, 0x0, S0, V223]

================================

Block 0x4c6
[0x4c6:0x4cd]
---
Predecessors: [0x4bd]
Successors: [0x4d5]
---
0x4c6 PUSH1 0x1
0x4c8 SWAP3
0x4c9 POP
0x4ca PUSH2 0x4d5
0x4cd JUMP
---
0x4c6: V375 = 0x1
0x4ca: V376 = 0x4d5
0x4cd: JUMP 0x4d5
---
Entry stack: [V10, 0xce, 0x0, S1, V223]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V10, 0xce, 0x1, S1, V223]

================================

Block 0x4ce
[0x4ce:0x4ce]
---
Predecessors: [0x1cc, 0x1e9, 0x4bd]
Successors: [0x4cf]
---
0x4ce JUMPDEST
---
0x4ce: JUMPDEST 
---
Entry stack: [V10, 0xce, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xce, 0x0, S1, S0]

================================

Block 0x4cf
[0x4cf:0x4cf]
---
Predecessors: [0x4ce]
Successors: [0x4d0]
---
0x4cf JUMPDEST
---
0x4cf: JUMPDEST 
---
Entry stack: [V10, 0xce, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xce, 0x0, S1, S0]

================================

Block 0x4d0
[0x4d0:0x4d4]
---
Predecessors: [0x4cf]
Successors: [0x4d5]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x0
0x4d3 SWAP3
0x4d4 POP
---
0x4d0: JUMPDEST 
0x4d1: V377 = 0x0
---
Entry stack: [V10, 0xce, 0x0, S1, S0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, 0xce, 0x0, S1, S0]

================================

Block 0x4d5
[0x4d5:0x4d9]
---
Predecessors: [0x4c6, 0x4d0]
Successors: [0xce]
---
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 POP
0x4d8 SWAP1
0x4d9 JUMP
---
0x4d5: JUMPDEST 
0x4d9: JUMP 0xce
---
Entry stack: [V10, 0xce, {0x0, 0x1}, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x4da
[0x4da:0x4dd]
---
Predecessors: [0x109]
Successors: [0x4de]
---
0x4da JUMPDEST
0x4db PUSH1 0x1
0x4dd SLOAD
---
0x4da: JUMPDEST 
0x4db: V378 = 0x1
0x4dd: V379 = S[0x1]
---
Entry stack: [V10, 0xa0]
Stack pops: 0
Stack additions: [V379]
Exit stack: [V10, 0xa0, V379]

================================

Block 0x4de
[0x4de:0x4e0]
---
Predecessors: [0x4da]
Successors: [0xa0]
---
0x4de JUMPDEST
0x4df SWAP1
0x4e0 JUMP
---
0x4de: JUMPDEST 
0x4e0: JUMP 0xa0
---
Entry stack: [V10, 0xa0, V379]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V379]

================================

Block 0x4e1
[0x4e1:0x4f8]
---
Predecessors: [0x128]
Successors: [0x4f9, 0x4fe]
---
0x4e1 JUMPDEST
0x4e2 PUSH1 0x0
0x4e4 SLOAD
0x4e5 CALLER
0x4e6 PUSH1 0x1
0x4e8 PUSH1 0xa0
0x4ea PUSH1 0x2
0x4ec EXP
0x4ed SUB
0x4ee SWAP1
0x4ef DUP2
0x4f0 AND
0x4f1 SWAP2
0x4f2 AND
0x4f3 EQ
0x4f4 ISZERO
0x4f5 PUSH2 0x4fe
0x4f8 JUMPI
---
0x4e1: JUMPDEST 
0x4e2: V380 = 0x0
0x4e4: V381 = S[0x0]
0x4e5: V382 = CALLER
0x4e6: V383 = 0x1
0x4e8: V384 = 0xa0
0x4ea: V385 = 0x2
0x4ec: V386 = EXP 0x2 0xa0
0x4ed: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f0: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x4f2: V389 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x4f3: V390 = EQ V389 V388
0x4f4: V391 = ISZERO V390
0x4f5: V392 = 0x4fe
0x4f8: JUMPI 0x4fe V391
---
Entry stack: [V10, 0x68, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x68, V101]

================================

Block 0x4f9
[0x4f9:0x4fd]
---
Predecessors: [0x4e1]
Successors: [0x4fe]
---
0x4f9 PUSH1 0x1
0x4fb DUP2
0x4fc SWAP1
0x4fd SSTORE
---
0x4f9: V393 = 0x1
0x4fd: S[0x1] = V101
---
Entry stack: [V10, 0x68, V101]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x68, V101]

================================

Block 0x4fe
[0x4fe:0x4fe]
---
Predecessors: [0x4e1, 0x4f9]
Successors: [0x4ff]
---
0x4fe JUMPDEST
---
0x4fe: JUMPDEST 
---
Entry stack: [V10, 0x68, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x68, V101]

================================

Block 0x4ff
[0x4ff:0x501]
---
Predecessors: [0x4fe]
Successors: [0x68]
---
0x4ff JUMPDEST
0x500 POP
0x501 JUMP
---
0x4ff: JUMPDEST 
0x501: JUMP 0x68
---
Entry stack: [V10, 0x68, V101]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0xee2cb10
Entry block: 0x6a
Exit block: 0xce
Body: 0x6a, 0x70, 0x77, 0xce, 0x134, 0x141

Function 1:
Public function signature: 0x12065fe0
Entry block: 0x93
Exit block: 0xa0
Body: 0x93, 0x99, 0xa0, 0x144, 0x150

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xb2
Exit block: 0x68
Body: 0x65, 0x66, 0x68, 0xb2, 0xb8, 0x153, 0x16b

Function 3:
Public function signature: 0x590e1ae3
Entry block: 0xc1
Exit block: 0xce
Body: 0x77, 0xc1, 0xc7, 0xce, 0x141, 0x17b, 0x194

Function 4:
Public function signature: 0xa8d5fd65
Entry block: 0xe2
Exit block: 0xce
Body: 0xce, 0xe2, 0xe8, 0x1cc, 0x1e9, 0x1fc, 0x285, 0x28f, 0x313, 0x31d, 0x3a1, 0x3ab, 0x42f, 0x439, 0x4bd, 0x4c6, 0x4ce, 0x4cf, 0x4d0, 0x4d5

Function 5:
Public function signature: 0xd49710cb
Entry block: 0x103
Exit block: 0xa0
Body: 0xa0, 0x103, 0x109, 0x4da, 0x4de

Function 6:
Public function signature: 0xfa94b844
Entry block: 0x122
Exit block: 0x68
Body: 0x68, 0x122, 0x128, 0x4e1, 0x4f9, 0x4fe, 0x4ff

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x68
Body: 0x61, 0x65, 0x66, 0x68

