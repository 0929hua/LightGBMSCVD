Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xac298dc
0x34 EQ
0x35 PUSH2 0x54
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xac298dc
0x34: V9 = EQ 0xac298dc V7
0x35: V10 = 0x54
0x38: JUMPI 0x54 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xa9]
---
0x39 DUP1
0x3a PUSH4 0x253c8bd4
0x3f EQ
0x40 PUSH2 0xa9
0x43 JUMPI
---
0x3a: V11 = 0x253c8bd4
0x3f: V12 = EQ 0x253c8bd4 V7
0x40: V13 = 0xa9
0x43: JUMPI 0xa9 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xe2]
---
0x44 DUP1
0x45 PUSH4 0xb61d27f6
0x4a EQ
0x4b PUSH2 0xe2
0x4e JUMPI
---
0x45: V14 = 0xb61d27f6
0x4a: V15 = EQ 0xb61d27f6 V7
0x4b: V16 = 0xe2
0x4e: JUMPI 0xe2 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x53]
---
Predecessors: [0x44]
Successors: []
---
0x4f JUMPDEST
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x4f: JUMPDEST 
0x50: V17 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5a]
---
Predecessors: [0x0]
Successors: [0x5b, 0x5f]
---
0x54 JUMPDEST
0x55 CALLVALUE
0x56 ISZERO
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x54: JUMPDEST 
0x55: V18 = CALLVALUE
0x56: V19 = ISZERO V18
0x57: V20 = 0x5f
0x5a: JUMPI 0x5f V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x54]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V21 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x66]
---
Predecessors: [0x54]
Successors: [0x150]
---
0x5f JUMPDEST
0x60 PUSH2 0x67
0x63 PUSH2 0x150
0x66 JUMP
---
0x5f: JUMPDEST 
0x60: V22 = 0x67
0x63: V23 = 0x150
0x66: JUMP 0x150
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x67]
Exit stack: [V7, 0x67]

================================

Block 0x67
[0x67:0xa8]
---
Predecessors: [0x177]
Successors: []
---
0x67 JUMPDEST
0x68 PUSH1 0x40
0x6a MLOAD
0x6b DUP1
0x6c DUP3
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 DUP2
0x9a MSTORE
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP2
0x9f POP
0xa0 POP
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 DUP1
0xa5 SWAP2
0xa6 SUB
0xa7 SWAP1
0xa8 RETURN
---
0x67: JUMPDEST 
0x68: V24 = 0x40
0x6a: V25 = M[0x40]
0x6d: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x83: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x9a: M[V25] = V29
0x9b: V30 = 0x20
0x9d: V31 = ADD 0x20 V25
0xa1: V32 = 0x40
0xa3: V33 = M[0x40]
0xa6: V34 = SUB V31 V33
0xa8: RETURN V33 V34
---
Entry stack: [V7, V87]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xa9
[0xa9:0xaf]
---
Predecessors: [0x39]
Successors: [0xb0, 0xb4]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa9: JUMPDEST 
0xaa: V35 = CALLVALUE
0xab: V36 = ISZERO V35
0xac: V37 = 0xb4
0xaf: JUMPI 0xb4 V36
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa9]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V38 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb4
[0xb4:0xdf]
---
Predecessors: [0xa9]
Successors: [0x17a]
---
0xb4 JUMPDEST
0xb5 PUSH2 0xe0
0xb8 PUSH1 0x4
0xba DUP1
0xbb DUP1
0xbc CALLDATALOAD
0xbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2 AND
0xd3 SWAP1
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 SWAP1
0xd8 SWAP2
0xd9 SWAP1
0xda POP
0xdb POP
0xdc PUSH2 0x17a
0xdf JUMP
---
0xb4: JUMPDEST 
0xb5: V39 = 0xe0
0xb8: V40 = 0x4
0xbc: V41 = CALLDATALOAD 0x4
0xbd: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xd4: V44 = 0x20
0xd6: V45 = ADD 0x20 0x4
0xdc: V46 = 0x17a
0xdf: JUMP 0x17a
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xe0, V43]
Exit stack: [V7, 0xe0, V43]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0x212]
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0x44]
Successors: [0xe9, 0xed]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V47 = CALLVALUE
0xe4: V48 = ISZERO V47
0xe5: V49 = 0xed
0xe8: JUMPI 0xed V48
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V50 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xed
[0xed:0x135]
---
Predecessors: [0xe2]
Successors: [0x215]
---
0xed JUMPDEST
0xee PUSH2 0x136
0xf1 PUSH1 0x4
0xf3 DUP1
0xf4 DUP1
0xf5 CALLDATALOAD
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 SWAP2
0x112 SWAP1
0x113 DUP1
0x114 CALLDATALOAD
0x115 SWAP1
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP1
0x11a SWAP2
0x11b SWAP1
0x11c DUP1
0x11d CALLDATALOAD
0x11e SWAP1
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP1
0x123 DUP3
0x124 ADD
0x125 DUP1
0x126 CALLDATALOAD
0x127 SWAP1
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP2
0x12c SWAP1
0x12d SWAP2
0x12e SWAP3
0x12f SWAP1
0x130 POP
0x131 POP
0x132 PUSH2 0x215
0x135 JUMP
---
0xed: JUMPDEST 
0xee: V51 = 0x136
0xf1: V52 = 0x4
0xf5: V53 = CALLDATALOAD 0x4
0xf6: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x10d: V56 = 0x20
0x10f: V57 = ADD 0x20 0x4
0x114: V58 = CALLDATALOAD 0x24
0x116: V59 = 0x20
0x118: V60 = ADD 0x20 0x24
0x11d: V61 = CALLDATALOAD 0x44
0x11f: V62 = 0x20
0x121: V63 = ADD 0x20 0x44
0x124: V64 = ADD 0x4 V61
0x126: V65 = CALLDATALOAD V64
0x128: V66 = 0x20
0x12a: V67 = ADD 0x20 V64
0x132: V68 = 0x215
0x135: JUMP 0x215
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x136, V55, V58, V67, V65]
Exit stack: [V7, 0x136, V55, V58, V67, V65]

================================

Block 0x136
[0x136:0x14f]
---
Predecessors: [0x2b3]
Successors: []
---
0x136 JUMPDEST
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b DUP3
0x13c ISZERO
0x13d ISZERO
0x13e ISZERO
0x13f ISZERO
0x140 DUP2
0x141 MSTORE
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP2
0x146 POP
0x147 POP
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c SWAP2
0x14d SUB
0x14e SWAP1
0x14f RETURN
---
0x136: JUMPDEST 
0x137: V69 = 0x40
0x139: V70 = M[0x40]
0x13c: V71 = ISZERO S0
0x13d: V72 = ISZERO V71
0x13e: V73 = ISZERO V72
0x13f: V74 = ISZERO V73
0x141: M[V70] = V74
0x142: V75 = 0x20
0x144: V76 = ADD 0x20 V70
0x148: V77 = 0x40
0x14a: V78 = M[0x40]
0x14d: V79 = SUB V76 V78
0x14f: RETURN V78 V79
---
Entry stack: [V7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x150
[0x150:0x176]
---
Predecessors: [0x5f]
Successors: [0x177]
---
0x150 JUMPDEST
0x151 PUSH1 0x0
0x153 DUP1
0x154 PUSH1 0x0
0x156 SWAP1
0x157 SLOAD
0x158 SWAP1
0x159 PUSH2 0x100
0x15c EXP
0x15d SWAP1
0x15e DIV
0x15f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x174 AND
0x175 SWAP1
0x176 POP
---
0x150: JUMPDEST 
0x151: V80 = 0x0
0x154: V81 = 0x0
0x157: V82 = S[0x0]
0x159: V83 = 0x100
0x15c: V84 = EXP 0x100 0x0
0x15e: V85 = DIV V82 0x1
0x15f: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x174: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
---
Entry stack: [V7, 0x67]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V7, 0x67, V87]

================================

Block 0x177
[0x177:0x179]
---
Predecessors: [0x150]
Successors: [0x67]
---
0x177 JUMPDEST
0x178 SWAP1
0x179 JUMP
---
0x177: JUMPDEST 
0x179: JUMP 0x67
---
Entry stack: [V7, 0x67, V87]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V87]

================================

Block 0x17a
[0x17a:0x1cf]
---
Predecessors: [0xb4]
Successors: [0x1d0, 0x211]
---
0x17a JUMPDEST
0x17b CALLER
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 PUSH1 0x0
0x194 DUP1
0x195 SWAP1
0x196 SLOAD
0x197 SWAP1
0x198 PUSH2 0x100
0x19b EXP
0x19c SWAP1
0x19d DIV
0x19e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b3 AND
0x1b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c9 AND
0x1ca EQ
0x1cb ISZERO
0x1cc PUSH2 0x211
0x1cf JUMPI
---
0x17a: JUMPDEST 
0x17b: V88 = CALLER
0x17c: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x192: V91 = 0x0
0x196: V92 = S[0x0]
0x198: V93 = 0x100
0x19b: V94 = EXP 0x100 0x0
0x19d: V95 = DIV V92 0x1
0x19e: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1b4: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1ca: V100 = EQ V99 V90
0x1cb: V101 = ISZERO V100
0x1cc: V102 = 0x211
0x1cf: JUMPI 0x211 V101
---
Entry stack: [V7, 0xe0, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe0, V43]

================================

Block 0x1d0
[0x1d0:0x20f]
---
Predecessors: [0x17a]
Successors: [0x210]
---
0x1d0 DUP1
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 PUSH2 0x100
0x1d7 EXP
0x1d8 DUP2
0x1d9 SLOAD
0x1da DUP2
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 MUL
0x1f1 NOT
0x1f2 AND
0x1f3 SWAP1
0x1f4 DUP4
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b MUL
0x20c OR
0x20d SWAP1
0x20e SSTORE
0x20f POP
---
0x1d1: V103 = 0x0
0x1d4: V104 = 0x100
0x1d7: V105 = EXP 0x100 0x0
0x1d9: V106 = S[0x0]
0x1db: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V108 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1f1: V109 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V110 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V106
0x1f5: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x20b: V113 = MUL V112 0x1
0x20c: V114 = OR V113 V110
0x20e: S[0x0] = V114
---
Entry stack: [V7, 0xe0, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0xe0, V43]

================================

Block 0x210
[0x210:0x210]
---
Predecessors: [0x1d0]
Successors: [0x211]
---
0x210 JUMPDEST
---
0x210: JUMPDEST 
---
Entry stack: [V7, 0xe0, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe0, V43]

================================

Block 0x211
[0x211:0x211]
---
Predecessors: [0x17a, 0x210]
Successors: [0x212]
---
0x211 JUMPDEST
---
0x211: JUMPDEST 
---
Entry stack: [V7, 0xe0, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe0, V43]

================================

Block 0x212
[0x212:0x214]
---
Predecessors: [0x211]
Successors: [0xe0]
---
0x212 JUMPDEST
0x213 POP
0x214 JUMP
---
0x212: JUMPDEST 
0x214: JUMP 0xe0
---
Entry stack: [V7, 0xe0, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x215
[0x215:0x26c]
---
Predecessors: [0xed]
Successors: [0x26d, 0x2b2]
---
0x215 JUMPDEST
0x216 PUSH1 0x0
0x218 CALLER
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f PUSH1 0x0
0x231 DUP1
0x232 SWAP1
0x233 SLOAD
0x234 SWAP1
0x235 PUSH2 0x100
0x238 EXP
0x239 SWAP1
0x23a DIV
0x23b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x250 AND
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 EQ
0x268 ISZERO
0x269 PUSH2 0x2b2
0x26c JUMPI
---
0x215: JUMPDEST 
0x216: V115 = 0x0
0x218: V116 = CALLER
0x219: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x22f: V119 = 0x0
0x233: V120 = S[0x0]
0x235: V121 = 0x100
0x238: V122 = EXP 0x100 0x0
0x23a: V123 = DIV V120 0x1
0x23b: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x250: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x251: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x267: V128 = EQ V127 V118
0x268: V129 = ISZERO V128
0x269: V130 = 0x2b2
0x26c: JUMPI 0x2b2 V129
---
Entry stack: [V7, 0x136, V55, V58, V67, V65]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V7, 0x136, V55, V58, V67, V65, 0x0]

================================

Block 0x26d
[0x26d:0x2b0]
---
Predecessors: [0x215]
Successors: [0x2b1]
---
0x26d DUP5
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 DUP5
0x285 DUP5
0x286 DUP5
0x287 PUSH1 0x40
0x289 MLOAD
0x28a DUP1
0x28b DUP4
0x28c DUP4
0x28d DUP1
0x28e DUP3
0x28f DUP5
0x290 CALLDATACOPY
0x291 DUP3
0x292 ADD
0x293 SWAP2
0x294 POP
0x295 POP
0x296 SWAP3
0x297 POP
0x298 POP
0x299 POP
0x29a PUSH1 0x0
0x29c PUSH1 0x40
0x29e MLOAD
0x29f DUP1
0x2a0 DUP4
0x2a1 SUB
0x2a2 DUP2
0x2a3 DUP6
0x2a4 DUP8
0x2a5 PUSH2 0x8796
0x2a8 GAS
0x2a9 SUB
0x2aa CALL
0x2ab SWAP3
0x2ac POP
0x2ad POP
0x2ae POP
0x2af SWAP1
0x2b0 POP
---
0x26e: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x287: V133 = 0x40
0x289: V134 = M[0x40]
0x290: CALLDATACOPY V134 V67 V65
0x292: V135 = ADD V134 V65
0x29a: V136 = 0x0
0x29c: V137 = 0x40
0x29e: V138 = M[0x40]
0x2a1: V139 = SUB V135 V138
0x2a5: V140 = 0x8796
0x2a8: V141 = GAS
0x2a9: V142 = SUB V141 0x8796
0x2aa: V143 = CALL V142 V132 V58 V138 V139 V138 0x0
---
Entry stack: [V7, 0x136, V55, V58, V67, V65, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V143]
Exit stack: [V7, 0x136, V55, V58, V67, V65, V143]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x26d]
Successors: [0x2b2]
---
0x2b1 JUMPDEST
---
0x2b1: JUMPDEST 
---
Entry stack: [V7, 0x136, V55, V58, V67, V65, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x136, V55, V58, V67, V65, V143]

================================

Block 0x2b2
[0x2b2:0x2b2]
---
Predecessors: [0x215, 0x2b1]
Successors: [0x2b3]
---
0x2b2 JUMPDEST
---
0x2b2: JUMPDEST 
---
Entry stack: [V7, 0x136, V55, V58, V67, V65, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x136, V55, V58, V67, V65, S0]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x2b2]
Successors: [0x136]
---
0x2b3 JUMPDEST
0x2b4 SWAP5
0x2b5 SWAP4
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba JUMP
---
0x2b3: JUMPDEST 
0x2ba: JUMP 0x136
---
Entry stack: [V7, 0x136, V55, V58, V67, V65, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V7, S0]

================================

Block 0x2bb
[0x2bb:0x2e6]
---
Predecessors: []
Successors: []
---
0x2bb STOP
0x2bc LOG1
0x2bd PUSH6 0x627a7a723058
0x2c4 SHA3
0x2c5 PUSH30 0x1744ccd0ee37eaeb21919732a689e49cfd122bd598450fedb6e2303a67af
0x2e4 STATICCALL
0x2e5 STOP
0x2e6 MISSING 0x29
---
0x2bb: STOP 
0x2bc: LOG S0 S1 S2
0x2bd: V144 = 0x627a7a723058
0x2c4: V145 = SHA3 0x627a7a723058 S3
0x2c5: V146 = 0x1744ccd0ee37eaeb21919732a689e49cfd122bd598450fedb6e2303a67af
0x2e4: V147 = STATICCALL 0x1744ccd0ee37eaeb21919732a689e49cfd122bd598450fedb6e2303a67af V145 S4 S5 S6 S7
0x2e5: STOP 
0x2e6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V147]
Exit stack: []

================================

Function 0:
Public function signature: 0xac298dc
Entry block: 0x54
Exit block: 0x67
Body: 0x54, 0x5b, 0x5f, 0x67, 0x150, 0x177

Function 1:
Public function signature: 0x253c8bd4
Entry block: 0xa9
Exit block: 0xe0
Body: 0xa9, 0xb0, 0xb4, 0xe0, 0x17a, 0x1d0, 0x210, 0x211, 0x212

Function 2:
Public function signature: 0xb61d27f6
Entry block: 0xe2
Exit block: 0x136
Body: 0xe2, 0xe9, 0xed, 0x136, 0x215, 0x26d, 0x2b1, 0x2b2, 0x2b3

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

