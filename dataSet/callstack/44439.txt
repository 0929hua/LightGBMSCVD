Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x97]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1c02708d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x97
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1c02708d
0x3b: V13 = EQ V11 0x1c02708d
0x3c: V14 = 0x97
0x3f: JUMPI 0x97 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xac]
---
0x40 DUP1
0x41 PUSH4 0x3ccfd60b
0x46 EQ
0x47 PUSH2 0xac
0x4a JUMPI
---
0x41: V15 = 0x3ccfd60b
0x46: V16 = EQ 0x3ccfd60b V11
0x47: V17 = 0xac
0x4a: JUMPI 0xac V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc1]
---
0x4b DUP1
0x4c PUSH4 0x5e572df6
0x51 EQ
0x52 PUSH2 0xc1
0x55 JUMPI
---
0x4c: V18 = 0x5e572df6
0x51: V19 = EQ 0x5e572df6 V11
0x52: V20 = 0xc1
0x55: JUMPI 0xc1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xd9]
---
0x56 DUP1
0x57 PUSH4 0x85a30c33
0x5c EQ
0x5d PUSH2 0xd9
0x60 JUMPI
---
0x57: V21 = 0x85a30c33
0x5c: V22 = EQ 0x85a30c33 V11
0x5d: V23 = 0xd9
0x60: JUMPI 0xd9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x8d]
---
0x61 DUP1
0x62 PUSH4 0xaa6ca808
0x67 EQ
0x68 PUSH2 0x8d
0x6b JUMPI
---
0x62: V24 = 0xaa6ca808
0x67: V25 = EQ 0xaa6ca808 V11
0x68: V26 = 0x8d
0x6b: JUMPI 0x8d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0xfa]
---
0x6c DUP1
0x6d PUSH4 0xcae539ce
0x72 EQ
0x73 PUSH2 0xfa
0x76 JUMPI
---
0x6d: V27 = 0xcae539ce
0x72: V28 = EQ 0xcae539ce V11
0x73: V29 = 0xfa
0x76: JUMPI 0xfa V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x112]
---
0x77 DUP1
0x78 PUSH4 0xe58fc54c
0x7d EQ
0x7e PUSH2 0x112
0x81 JUMPI
---
0x78: V30 = 0xe58fc54c
0x7d: V31 = EQ 0xe58fc54c V11
0x7e: V32 = 0x112
0x81: JUMPI 0x112 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x147]
---
0x82 DUP1
0x83 PUSH4 0xf2fde38b
0x88 EQ
0x89 PUSH2 0x147
0x8c JUMPI
---
0x83: V33 = 0xf2fde38b
0x88: V34 = EQ 0xf2fde38b V11
0x89: V35 = 0x147
0x8c: JUMPI 0x147 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x94]
---
Predecessors: [0x0, 0x61, 0x82]
Successors: [0x168]
---
0x8d JUMPDEST
0x8e PUSH2 0x95
0x91 PUSH2 0x168
0x94 JUMP
---
0x8d: JUMPDEST 
0x8e: V36 = 0x95
0x91: V37 = 0x168
0x94: JUMP 0x168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x95]
Exit stack: [V11, 0x95]

================================

Block 0x95
[0x95:0x96]
---
Predecessors: [0x22d, 0x2a2, 0x2bd, 0x2d9, 0x31f, 0x4c7]
Successors: []
---
0x95 JUMPDEST
0x96 STOP
---
0x95: JUMPDEST 
0x96: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x97
[0x97:0x9e]
---
Predecessors: [0xd]
Successors: [0x9f, 0xa3]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 DUP1
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x97: JUMPDEST 
0x98: V38 = CALLVALUE
0x9a: V39 = ISZERO V38
0x9b: V40 = 0xa3
0x9e: JUMPI 0xa3 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V11, V38]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x97]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V41 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V11, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38]

================================

Block 0xa3
[0xa3:0xab]
---
Predecessors: [0x97]
Successors: [0x233]
---
0xa3 JUMPDEST
0xa4 POP
0xa5 PUSH2 0x95
0xa8 PUSH2 0x233
0xab JUMP
---
0xa3: JUMPDEST 
0xa5: V42 = 0x95
0xa8: V43 = 0x233
0xab: JUMP 0x233
---
Entry stack: [V11, V38]
Stack pops: 1
Stack additions: [0x95]
Exit stack: [V11, 0x95]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0x40]
Successors: [0xb4, 0xb8]
---
0xac JUMPDEST
0xad CALLVALUE
0xae DUP1
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xac: JUMPDEST 
0xad: V44 = CALLVALUE
0xaf: V45 = ISZERO V44
0xb0: V46 = 0xb8
0xb3: JUMPI 0xb8 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xac]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V47 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xb8
[0xb8:0xc0]
---
Predecessors: [0xac]
Successors: [0x24d]
---
0xb8 JUMPDEST
0xb9 POP
0xba PUSH2 0x95
0xbd PUSH2 0x24d
0xc0 JUMP
---
0xb8: JUMPDEST 
0xba: V48 = 0x95
0xbd: V49 = 0x24d
0xc0: JUMP 0x24d
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0x95]
Exit stack: [V11, 0x95]

================================

Block 0xc1
[0xc1:0xc8]
---
Predecessors: [0x4b]
Successors: [0xc9, 0xcd]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 DUP1
0xc4 ISZERO
0xc5 PUSH2 0xcd
0xc8 JUMPI
---
0xc1: JUMPDEST 
0xc2: V50 = CALLVALUE
0xc4: V51 = ISZERO V50
0xc5: V52 = 0xcd
0xc8: JUMPI 0xcd V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xc9
[0xc9:0xcc]
---
Predecessors: [0xc1]
Successors: []
---
0xc9 PUSH1 0x0
0xcb DUP1
0xcc REVERT
---
0xc9: V53 = 0x0
0xcc: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xcd
[0xcd:0xd8]
---
Predecessors: [0xc1]
Successors: [0x2a6]
---
0xcd JUMPDEST
0xce POP
0xcf PUSH2 0x95
0xd2 PUSH1 0x4
0xd4 CALLDATALOAD
0xd5 PUSH2 0x2a6
0xd8 JUMP
---
0xcd: JUMPDEST 
0xcf: V54 = 0x95
0xd2: V55 = 0x4
0xd4: V56 = CALLDATALOAD 0x4
0xd5: V57 = 0x2a6
0xd8: JUMP 0x2a6
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0x95, V56]
Exit stack: [V11, 0x95, V56]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x56]
Successors: [0xe1, 0xe5]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb DUP1
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xd9: JUMPDEST 
0xda: V58 = CALLVALUE
0xdc: V59 = ISZERO V58
0xdd: V60 = 0xe5
0xe0: JUMPI 0xe5 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xd9]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V61 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xe5
[0xe5:0xf9]
---
Predecessors: [0xd9]
Successors: [0x2c2]
---
0xe5 JUMPDEST
0xe6 POP
0xe7 PUSH2 0x95
0xea PUSH1 0x1
0xec PUSH1 0xa0
0xee PUSH1 0x2
0xf0 EXP
0xf1 SUB
0xf2 PUSH1 0x4
0xf4 CALLDATALOAD
0xf5 AND
0xf6 PUSH2 0x2c2
0xf9 JUMP
---
0xe5: JUMPDEST 
0xe7: V62 = 0x95
0xea: V63 = 0x1
0xec: V64 = 0xa0
0xee: V65 = 0x2
0xf0: V66 = EXP 0x2 0xa0
0xf1: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2: V68 = 0x4
0xf4: V69 = CALLDATALOAD 0x4
0xf5: V70 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xf6: V71 = 0x2c2
0xf9: JUMP 0x2c2
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0x95, V70]
Exit stack: [V11, 0x95, V70]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x6c]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V72 = CALLVALUE
0xfd: V73 = ISZERO V72
0xfe: V74 = 0x106
0x101: JUMPI 0x106 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V72]
Exit stack: [V11, V72]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V75 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V72]

================================

Block 0x106
[0x106:0x111]
---
Predecessors: [0xfa]
Successors: [0x308]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0x95
0x10b PUSH1 0x4
0x10d CALLDATALOAD
0x10e PUSH2 0x308
0x111 JUMP
---
0x106: JUMPDEST 
0x108: V76 = 0x95
0x10b: V77 = 0x4
0x10d: V78 = CALLDATALOAD 0x4
0x10e: V79 = 0x308
0x111: JUMP 0x308
---
Entry stack: [V11, V72]
Stack pops: 1
Stack additions: [0x95, V78]
Exit stack: [V11, 0x95, V78]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0x77]
Successors: [0x11a, 0x11e]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 DUP1
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x112: JUMPDEST 
0x113: V80 = CALLVALUE
0x115: V81 = ISZERO V80
0x116: V82 = 0x11e
0x119: JUMPI 0x11e V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V11, V80]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x112]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V83 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V11, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V80]

================================

Block 0x11e
[0x11e:0x132]
---
Predecessors: [0x112]
Successors: [0x324]
---
0x11e JUMPDEST
0x11f POP
0x120 PUSH2 0x133
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b PUSH1 0x4
0x12d CALLDATALOAD
0x12e AND
0x12f PUSH2 0x324
0x132 JUMP
---
0x11e: JUMPDEST 
0x120: V84 = 0x133
0x123: V85 = 0x1
0x125: V86 = 0xa0
0x127: V87 = 0x2
0x129: V88 = EXP 0x2 0xa0
0x12a: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b: V90 = 0x4
0x12d: V91 = CALLDATALOAD 0x4
0x12e: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V93 = 0x324
0x132: JUMP 0x324
---
Entry stack: [V11, V80]
Stack pops: 1
Stack additions: [0x133, V92]
Exit stack: [V11, 0x133, V92]

================================

Block 0x133
[0x133:0x146]
---
Predecessors: [0x46e]
Successors: []
---
0x133 JUMPDEST
0x134 PUSH1 0x40
0x136 DUP1
0x137 MLOAD
0x138 SWAP2
0x139 ISZERO
0x13a ISZERO
0x13b DUP3
0x13c MSTORE
0x13d MLOAD
0x13e SWAP1
0x13f DUP2
0x140 SWAP1
0x141 SUB
0x142 PUSH1 0x20
0x144 ADD
0x145 SWAP1
0x146 RETURN
---
0x133: JUMPDEST 
0x134: V94 = 0x40
0x137: V95 = M[0x40]
0x139: V96 = ISZERO V395
0x13a: V97 = ISZERO V96
0x13c: M[V95] = V97
0x13d: V98 = M[0x40]
0x141: V99 = SUB V95 V98
0x142: V100 = 0x20
0x144: V101 = ADD 0x20 V99
0x146: RETURN V98 V101
---
Entry stack: [V11, V395]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x82]
Successors: [0x14f, 0x153]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 DUP1
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0x147: JUMPDEST 
0x148: V102 = CALLVALUE
0x14a: V103 = ISZERO V102
0x14b: V104 = 0x153
0x14e: JUMPI 0x153 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x147]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V105 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x153
[0x153:0x167]
---
Predecessors: [0x147]
Successors: [0x478]
---
0x153 JUMPDEST
0x154 POP
0x155 PUSH2 0x95
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 PUSH1 0x4
0x162 CALLDATALOAD
0x163 AND
0x164 PUSH2 0x478
0x167 JUMP
---
0x153: JUMPDEST 
0x155: V106 = 0x95
0x158: V107 = 0x1
0x15a: V108 = 0xa0
0x15c: V109 = 0x2
0x15e: V110 = EXP 0x2 0xa0
0x15f: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V112 = 0x4
0x162: V113 = CALLDATALOAD 0x4
0x163: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x164: V115 = 0x478
0x167: JUMP 0x478
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x95, V114]
Exit stack: [V11, 0x95, V114]

================================

Block 0x168
[0x168:0x16d]
---
Predecessors: [0x8d]
Successors: [0x16e]
---
0x168 JUMPDEST
0x169 PUSH1 0x0
0x16b DUP1
0x16c DUP1
0x16d DUP1
---
0x168: JUMPDEST 
0x169: V116 = 0x0
---
Entry stack: [V11, 0x95]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x95, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x16e
[0x16e:0x178]
---
Predecessors: [0x168, 0x1c1]
Successors: [0x179, 0x1cf]
---
0x16e JUMPDEST
0x16f PUSH1 0x3
0x171 SLOAD
0x172 DUP5
0x173 LT
0x174 ISZERO
0x175 PUSH2 0x1cf
0x178 JUMPI
---
0x16e: JUMPDEST 
0x16f: V117 = 0x3
0x171: V118 = S[0x3]
0x173: V119 = LT S3 V118
0x174: V120 = ISZERO V119
0x175: V121 = 0x1cf
0x178: JUMPI 0x1cf V120
---
Entry stack: [V11, 0x95, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x95, S3, S2, 0x0, 0x0]

================================

Block 0x179
[0x179:0x18d]
---
Predecessors: [0x16e]
Successors: [0x4ca]
---
0x179 PUSH1 0x1
0x17b SLOAD
0x17c CALLER
0x17d SWAP1
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 AND
0x187 PUSH2 0x18e
0x18a PUSH2 0x4ca
0x18d JUMP
---
0x179: V122 = 0x1
0x17b: V123 = S[0x1]
0x17c: V124 = CALLER
0x17e: V125 = 0x1
0x180: V126 = 0xa0
0x182: V127 = 0x2
0x184: V128 = EXP 0x2 0xa0
0x185: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x187: V131 = 0x18e
0x18a: V132 = 0x4ca
0x18d: JUMP 0x4ca
---
Entry stack: [V11, 0x95, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [V124, V130, 0x18e]
Exit stack: [V11, 0x95, S3, S2, 0x0, 0x0, V124, V130, 0x18e]

================================

Block 0x18e
[0x18e:0x1b7]
---
Predecessors: [0x4ca]
Successors: [0x1b8, 0x1c1]
---
0x18e JUMPDEST
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 SWAP3
0x198 DUP4
0x199 AND
0x19a DUP2
0x19b MSTORE
0x19c SWAP2
0x19d AND
0x19e PUSH1 0x20
0x1a0 DUP3
0x1a1 ADD
0x1a2 MSTORE
0x1a3 PUSH1 0x40
0x1a5 DUP1
0x1a6 MLOAD
0x1a7 SWAP2
0x1a8 DUP3
0x1a9 SWAP1
0x1aa SUB
0x1ab ADD
0x1ac SWAP1
0x1ad PUSH1 0x0
0x1af CREATE
0x1b0 DUP1
0x1b1 ISZERO
0x1b2 DUP1
0x1b3 ISZERO
0x1b4 PUSH2 0x1c1
0x1b7 JUMPI
---
0x18e: JUMPDEST 
0x18f: V133 = 0x1
0x191: V134 = 0xa0
0x193: V135 = 0x2
0x195: V136 = EXP 0x2 0xa0
0x196: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x19b: M[V432] = V138
0x19d: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x19e: V140 = 0x20
0x1a1: V141 = ADD V432 0x20
0x1a2: M[V141] = V139
0x1a3: V142 = 0x40
0x1a6: V143 = M[0x40]
0x1aa: V144 = SUB V432 V143
0x1ab: V145 = ADD V144 0x40
0x1ad: V146 = 0x0
0x1af: V147 = CREATE 0x0 V143 V145
0x1b1: V148 = ISZERO V147
0x1b3: V149 = ISZERO V148
0x1b4: V150 = 0x1c1
0x1b7: JUMPI 0x1c1 V149
---
Entry stack: [V11, 0x95, S6, S5, 0x0, 0x0, V124, V130, V432]
Stack pops: 3
Stack additions: [V147, V148]
Exit stack: [V11, 0x95, S6, S5, 0x0, 0x0, V147, V148]

================================

Block 0x1b8
[0x1b8:0x1c0]
---
Predecessors: [0x18e]
Successors: []
---
0x1b8 RETURNDATASIZE
0x1b9 PUSH1 0x0
0x1bb DUP1
0x1bc RETURNDATACOPY
0x1bd RETURNDATASIZE
0x1be PUSH1 0x0
0x1c0 REVERT
---
0x1b8: V151 = RETURNDATASIZE
0x1b9: V152 = 0x0
0x1bc: RETURNDATACOPY 0x0 0x0 V151
0x1bd: V153 = RETURNDATASIZE
0x1be: V154 = 0x0
0x1c0: REVERT 0x0 V153
---
Entry stack: [V11, 0x95, S5, S4, 0x0, 0x0, V147, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, S5, S4, 0x0, 0x0, V147, V148]

================================

Block 0x1c1
[0x1c1:0x1ce]
---
Predecessors: [0x18e]
Successors: [0x16e]
---
0x1c1 JUMPDEST
0x1c2 POP
0x1c3 PUSH1 0x1
0x1c5 SWAP1
0x1c6 SWAP5
0x1c7 ADD
0x1c8 SWAP4
0x1c9 SWAP3
0x1ca POP
0x1cb PUSH2 0x16e
0x1ce JUMP
---
0x1c1: JUMPDEST 
0x1c3: V155 = 0x1
0x1c7: V156 = ADD S5 0x1
0x1cb: V157 = 0x16e
0x1ce: JUMP 0x16e
---
Entry stack: [V11, 0x95, S5, S4, 0x0, 0x0, V147, V148]
Stack pops: 6
Stack additions: [V156, S1, S3, S2]
Exit stack: [V11, 0x95, V156, V147, 0x0, 0x0]

================================

Block 0x1cf
[0x1cf:0x1d3]
---
Predecessors: [0x16e]
Successors: [0x1d4]
---
0x1cf JUMPDEST
0x1d0 PUSH1 0x0
0x1d2 SWAP2
0x1d3 POP
---
0x1cf: JUMPDEST 
0x1d0: V158 = 0x0
---
Entry stack: [V11, 0x95, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x95, S3, S2, 0x0, 0x0]

================================

Block 0x1d4
[0x1d4:0x1de]
---
Predecessors: [0x1cf, 0x21f]
Successors: [0x1df, 0x22d]
---
0x1d4 JUMPDEST
0x1d5 PUSH1 0x2
0x1d7 SLOAD
0x1d8 DUP3
0x1d9 LT
0x1da ISZERO
0x1db PUSH2 0x22d
0x1de JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V159 = 0x2
0x1d7: V160 = S[0x2]
0x1d9: V161 = LT S1 V160
0x1da: V162 = ISZERO V161
0x1db: V163 = 0x22d
0x1de: JUMPI 0x22d V162
---
Entry stack: [V11, 0x95, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x95, S3, S2, S1, S0]

================================

Block 0x1df
[0x1df:0x1f1]
---
Predecessors: [0x1d4]
Successors: [0x4da]
---
0x1df PUSH1 0x1
0x1e1 SLOAD
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea AND
0x1eb PUSH2 0x1f2
0x1ee PUSH2 0x4da
0x1f1 JUMP
---
0x1df: V164 = 0x1
0x1e1: V165 = S[0x1]
0x1e2: V166 = 0x1
0x1e4: V167 = 0xa0
0x1e6: V168 = 0x2
0x1e8: V169 = EXP 0x2 0xa0
0x1e9: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1eb: V172 = 0x1f2
0x1ee: V173 = 0x4da
0x1f1: JUMP 0x4da
---
Entry stack: [V11, 0x95, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V171, 0x1f2]
Exit stack: [V11, 0x95, S3, S2, S1, S0, V171, 0x1f2]

================================

Block 0x1f2
[0x1f2:0x215]
---
Predecessors: [0x4da]
Successors: [0x216, 0x21f]
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0xa0
0x1f7 PUSH1 0x2
0x1f9 EXP
0x1fa SUB
0x1fb SWAP1
0x1fc SWAP2
0x1fd AND
0x1fe DUP2
0x1ff MSTORE
0x200 PUSH1 0x40
0x202 MLOAD
0x203 SWAP1
0x204 DUP2
0x205 SWAP1
0x206 SUB
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b PUSH1 0x0
0x20d CREATE
0x20e DUP1
0x20f ISZERO
0x210 DUP1
0x211 ISZERO
0x212 PUSH2 0x21f
0x215 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V174 = 0x1
0x1f5: V175 = 0xa0
0x1f7: V176 = 0x2
0x1f9: V177 = EXP 0x2 0xa0
0x1fa: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V179 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: M[V437] = V179
0x200: V180 = 0x40
0x202: V181 = M[0x40]
0x206: V182 = SUB V437 V181
0x207: V183 = 0x20
0x209: V184 = ADD 0x20 V182
0x20b: V185 = 0x0
0x20d: V186 = CREATE 0x0 V181 V184
0x20f: V187 = ISZERO V186
0x211: V188 = ISZERO V187
0x212: V189 = 0x21f
0x215: JUMPI 0x21f V188
---
Entry stack: [V11, 0x95, S5, S4, S3, S2, V171, V437]
Stack pops: 2
Stack additions: [V186, V187]
Exit stack: [V11, 0x95, S5, S4, S3, S2, V186, V187]

================================

Block 0x216
[0x216:0x21e]
---
Predecessors: [0x1f2]
Successors: []
---
0x216 RETURNDATASIZE
0x217 PUSH1 0x0
0x219 DUP1
0x21a RETURNDATACOPY
0x21b RETURNDATASIZE
0x21c PUSH1 0x0
0x21e REVERT
---
0x216: V190 = RETURNDATASIZE
0x217: V191 = 0x0
0x21a: RETURNDATACOPY 0x0 0x0 V190
0x21b: V192 = RETURNDATASIZE
0x21c: V193 = 0x0
0x21e: REVERT 0x0 V192
---
Entry stack: [V11, 0x95, S5, S4, S3, S2, V186, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, S5, S4, S3, S2, V186, V187]

================================

Block 0x21f
[0x21f:0x22c]
---
Predecessors: [0x1f2]
Successors: [0x1d4]
---
0x21f JUMPDEST
0x220 POP
0x221 PUSH1 0x1
0x223 SWAP1
0x224 SWAP3
0x225 ADD
0x226 SWAP2
0x227 SWAP1
0x228 POP
0x229 PUSH2 0x1d4
0x22c JUMP
---
0x21f: JUMPDEST 
0x221: V194 = 0x1
0x225: V195 = ADD S3 0x1
0x229: V196 = 0x1d4
0x22c: JUMP 0x1d4
---
Entry stack: [V11, 0x95, S5, S4, S3, S2, V186, V187]
Stack pops: 4
Stack additions: [V195, S1]
Exit stack: [V11, 0x95, S5, S4, V195, V186]

================================

Block 0x22d
[0x22d:0x232]
---
Predecessors: [0x1d4]
Successors: [0x95]
---
0x22d JUMPDEST
0x22e POP
0x22f POP
0x230 POP
0x231 POP
0x232 JUMP
---
0x22d: JUMPDEST 
0x232: JUMP 0x95
---
Entry stack: [V11, 0x95, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x233
[0x233:0x245]
---
Predecessors: [0xa3]
Successors: [0x246, 0x24a]
---
0x233 JUMPDEST
0x234 PUSH1 0x0
0x236 SLOAD
0x237 PUSH1 0x1
0x239 PUSH1 0xa0
0x23b PUSH1 0x2
0x23d EXP
0x23e SUB
0x23f AND
0x240 CALLER
0x241 EQ
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x233: JUMPDEST 
0x234: V197 = 0x0
0x236: V198 = S[0x0]
0x237: V199 = 0x1
0x239: V200 = 0xa0
0x23b: V201 = 0x2
0x23d: V202 = EXP 0x2 0xa0
0x23e: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23f: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x240: V205 = CALLER
0x241: V206 = EQ V205 V204
0x242: V207 = 0x24a
0x245: JUMPI 0x24a V206
---
Entry stack: [V11, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x233]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V208 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V11, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95]

================================

Block 0x24a
[0x24a:0x24c]
---
Predecessors: [0x233]
Successors: []
---
0x24a JUMPDEST
0x24b CALLER
0x24c SELFDESTRUCT
---
0x24a: JUMPDEST 
0x24b: V209 = CALLER
0x24c: SELFDESTRUCT V209
---
Entry stack: [V11, 0x95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95]

================================

Block 0x24d
[0x24d:0x260]
---
Predecessors: [0xb8]
Successors: [0x261, 0x265]
---
0x24d JUMPDEST
0x24e PUSH1 0x0
0x250 DUP1
0x251 SLOAD
0x252 PUSH1 0x1
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SUB
0x25a AND
0x25b CALLER
0x25c EQ
0x25d PUSH2 0x265
0x260 JUMPI
---
0x24d: JUMPDEST 
0x24e: V210 = 0x0
0x251: V211 = S[0x0]
0x252: V212 = 0x1
0x254: V213 = 0xa0
0x256: V214 = 0x2
0x258: V215 = EXP 0x2 0xa0
0x259: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25a: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x25b: V218 = CALLER
0x25c: V219 = EQ V218 V217
0x25d: V220 = 0x265
0x260: JUMPI 0x265 V219
---
Entry stack: [V11, 0x95]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x95, 0x0]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x24d]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V221 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V11, 0x95, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, 0x0]

================================

Block 0x265
[0x265:0x298]
---
Predecessors: [0x24d]
Successors: [0x299, 0x2a2]
---
0x265 JUMPDEST
0x266 POP
0x267 PUSH1 0x0
0x269 DUP1
0x26a SLOAD
0x26b PUSH1 0x40
0x26d MLOAD
0x26e ADDRESS
0x26f BALANCE
0x270 SWAP3
0x271 PUSH1 0x1
0x273 PUSH1 0xa0
0x275 PUSH1 0x2
0x277 EXP
0x278 SUB
0x279 SWAP1
0x27a SWAP3
0x27b AND
0x27c SWAP2
0x27d PUSH2 0x8fc
0x280 DUP5
0x281 ISZERO
0x282 MUL
0x283 SWAP2
0x284 DUP5
0x285 SWAP2
0x286 DUP2
0x287 DUP2
0x288 DUP2
0x289 DUP6
0x28a DUP9
0x28b DUP9
0x28c CALL
0x28d SWAP4
0x28e POP
0x28f POP
0x290 POP
0x291 POP
0x292 ISZERO
0x293 DUP1
0x294 ISZERO
0x295 PUSH2 0x2a2
0x298 JUMPI
---
0x265: JUMPDEST 
0x267: V222 = 0x0
0x26a: V223 = S[0x0]
0x26b: V224 = 0x40
0x26d: V225 = M[0x40]
0x26e: V226 = ADDRESS
0x26f: V227 = BALANCE V226
0x271: V228 = 0x1
0x273: V229 = 0xa0
0x275: V230 = 0x2
0x277: V231 = EXP 0x2 0xa0
0x278: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27b: V233 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V234 = 0x8fc
0x281: V235 = ISZERO V227
0x282: V236 = MUL V235 0x8fc
0x28c: V237 = CALL V236 V233 V227 V225 0x0 V225 0x0
0x292: V238 = ISZERO V237
0x294: V239 = ISZERO V238
0x295: V240 = 0x2a2
0x298: JUMPI 0x2a2 V239
---
Entry stack: [V11, 0x95, 0x0]
Stack pops: 1
Stack additions: [V227, V238]
Exit stack: [V11, 0x95, V227, V238]

================================

Block 0x299
[0x299:0x2a1]
---
Predecessors: [0x265]
Successors: []
---
0x299 RETURNDATASIZE
0x29a PUSH1 0x0
0x29c DUP1
0x29d RETURNDATACOPY
0x29e RETURNDATASIZE
0x29f PUSH1 0x0
0x2a1 REVERT
---
0x299: V241 = RETURNDATASIZE
0x29a: V242 = 0x0
0x29d: RETURNDATACOPY 0x0 0x0 V241
0x29e: V243 = RETURNDATASIZE
0x29f: V244 = 0x0
0x2a1: REVERT 0x0 V243
---
Entry stack: [V11, 0x95, V227, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V227, V238]

================================

Block 0x2a2
[0x2a2:0x2a5]
---
Predecessors: [0x265]
Successors: [0x95]
---
0x2a2 JUMPDEST
0x2a3 POP
0x2a4 POP
0x2a5 JUMP
---
0x2a2: JUMPDEST 
0x2a5: JUMP 0x95
---
Entry stack: [V11, 0x95, V227, V238]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a6
[0x2a6:0x2b8]
---
Predecessors: [0xcd]
Successors: [0x2b9, 0x2bd]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x0
0x2a9 SLOAD
0x2aa PUSH1 0x1
0x2ac PUSH1 0xa0
0x2ae PUSH1 0x2
0x2b0 EXP
0x2b1 SUB
0x2b2 AND
0x2b3 CALLER
0x2b4 EQ
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V245 = 0x0
0x2a9: V246 = S[0x0]
0x2aa: V247 = 0x1
0x2ac: V248 = 0xa0
0x2ae: V249 = 0x2
0x2b0: V250 = EXP 0x2 0xa0
0x2b1: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b2: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x2b3: V253 = CALLER
0x2b4: V254 = EQ V253 V252
0x2b5: V255 = 0x2bd
0x2b8: JUMPI 0x2bd V254
---
Entry stack: [V11, 0x95, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V56]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2a6]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V256 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x95, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V56]

================================

Block 0x2bd
[0x2bd:0x2c1]
---
Predecessors: [0x2a6]
Successors: [0x95]
---
0x2bd JUMPDEST
0x2be PUSH1 0x3
0x2c0 SSTORE
0x2c1 JUMP
---
0x2bd: JUMPDEST 
0x2be: V257 = 0x3
0x2c0: S[0x3] = V56
0x2c1: JUMP 0x95
---
Entry stack: [V11, 0x95, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c2
[0x2c2:0x2d4]
---
Predecessors: [0xe5]
Successors: [0x2d5, 0x2d9]
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x0
0x2c5 SLOAD
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce AND
0x2cf CALLER
0x2d0 EQ
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V258 = 0x0
0x2c5: V259 = S[0x0]
0x2c6: V260 = 0x1
0x2c8: V261 = 0xa0
0x2ca: V262 = 0x2
0x2cc: V263 = EXP 0x2 0xa0
0x2cd: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2cf: V266 = CALLER
0x2d0: V267 = EQ V266 V265
0x2d1: V268 = 0x2d9
0x2d4: JUMPI 0x2d9 V267
---
Entry stack: [V11, 0x95, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V70]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x2c2]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V269 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x95, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V70]

================================

Block 0x2d9
[0x2d9:0x307]
---
Predecessors: [0x2c2]
Successors: [0x95]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x1
0x2dc DUP1
0x2dd SLOAD
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 NOT
0x2f4 AND
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd SWAP3
0x2fe SWAP1
0x2ff SWAP3
0x300 AND
0x301 SWAP2
0x302 SWAP1
0x303 SWAP2
0x304 OR
0x305 SWAP1
0x306 SSTORE
0x307 JUMP
---
0x2d9: JUMPDEST 
0x2da: V270 = 0x1
0x2dd: V271 = S[0x1]
0x2de: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V273 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V274 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V271
0x2f5: V275 = 0x1
0x2f7: V276 = 0xa0
0x2f9: V277 = 0x2
0x2fb: V278 = EXP 0x2 0xa0
0x2fc: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x300: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x304: V281 = OR V280 V274
0x306: S[0x1] = V281
0x307: JUMP 0x95
---
Entry stack: [V11, 0x95, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x308
[0x308:0x31a]
---
Predecessors: [0x106]
Successors: [0x31b, 0x31f]
---
0x308 JUMPDEST
0x309 PUSH1 0x0
0x30b SLOAD
0x30c PUSH1 0x1
0x30e PUSH1 0xa0
0x310 PUSH1 0x2
0x312 EXP
0x313 SUB
0x314 AND
0x315 CALLER
0x316 EQ
0x317 PUSH2 0x31f
0x31a JUMPI
---
0x308: JUMPDEST 
0x309: V282 = 0x0
0x30b: V283 = S[0x0]
0x30c: V284 = 0x1
0x30e: V285 = 0xa0
0x310: V286 = 0x2
0x312: V287 = EXP 0x2 0xa0
0x313: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x314: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x315: V290 = CALLER
0x316: V291 = EQ V290 V289
0x317: V292 = 0x31f
0x31a: JUMPI 0x31f V291
---
Entry stack: [V11, 0x95, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V78]

================================

Block 0x31b
[0x31b:0x31e]
---
Predecessors: [0x308]
Successors: []
---
0x31b PUSH1 0x0
0x31d DUP1
0x31e REVERT
---
0x31b: V293 = 0x0
0x31e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x95, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V78]

================================

Block 0x31f
[0x31f:0x323]
---
Predecessors: [0x308]
Successors: [0x95]
---
0x31f JUMPDEST
0x320 PUSH1 0x2
0x322 SSTORE
0x323 JUMP
---
0x31f: JUMPDEST 
0x320: V294 = 0x2
0x322: S[0x2] = V78
0x323: JUMP 0x95
---
Entry stack: [V11, 0x95, V78]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x324
[0x324:0x33b]
---
Predecessors: [0x11e]
Successors: [0x33c, 0x340]
---
0x324 JUMPDEST
0x325 PUSH1 0x0
0x327 DUP1
0x328 SLOAD
0x329 DUP2
0x32a SWAP1
0x32b DUP2
0x32c SWAP1
0x32d PUSH1 0x1
0x32f PUSH1 0xa0
0x331 PUSH1 0x2
0x333 EXP
0x334 SUB
0x335 AND
0x336 CALLER
0x337 EQ
0x338 PUSH2 0x340
0x33b JUMPI
---
0x324: JUMPDEST 
0x325: V295 = 0x0
0x328: V296 = S[0x0]
0x32d: V297 = 0x1
0x32f: V298 = 0xa0
0x331: V299 = 0x2
0x333: V300 = EXP 0x2 0xa0
0x334: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x336: V303 = CALLER
0x337: V304 = EQ V303 V302
0x338: V305 = 0x340
0x33b: JUMPI 0x340 V304
---
Entry stack: [V11, 0x133, V92]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x133, V92, 0x0, 0x0, 0x0]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x324]
Successors: []
---
0x33c PUSH1 0x0
0x33e DUP1
0x33f REVERT
---
0x33c: V306 = 0x0
0x33f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V92, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V92, 0x0, 0x0, 0x0]

================================

Block 0x340
[0x340:0x39f]
---
Predecessors: [0x324]
Successors: [0x3a0, 0x3a4]
---
0x340 JUMPDEST
0x341 PUSH1 0x40
0x343 DUP1
0x344 MLOAD
0x345 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x366 DUP2
0x367 MSTORE
0x368 ADDRESS
0x369 PUSH1 0x4
0x36b DUP3
0x36c ADD
0x36d MSTORE
0x36e SWAP1
0x36f MLOAD
0x370 DUP6
0x371 SWAP4
0x372 POP
0x373 PUSH1 0x1
0x375 PUSH1 0xa0
0x377 PUSH1 0x2
0x379 EXP
0x37a SUB
0x37b DUP5
0x37c AND
0x37d SWAP2
0x37e PUSH4 0x70a08231
0x383 SWAP2
0x384 PUSH1 0x24
0x386 DUP1
0x387 DUP4
0x388 ADD
0x389 SWAP3
0x38a PUSH1 0x20
0x38c SWAP3
0x38d SWAP2
0x38e SWAP1
0x38f DUP3
0x390 SWAP1
0x391 SUB
0x392 ADD
0x393 DUP2
0x394 PUSH1 0x0
0x396 DUP8
0x397 DUP1
0x398 EXTCODESIZE
0x399 ISZERO
0x39a DUP1
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x340: JUMPDEST 
0x341: V307 = 0x40
0x344: V308 = M[0x40]
0x345: V309 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x367: M[V308] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x368: V310 = ADDRESS
0x369: V311 = 0x4
0x36c: V312 = ADD V308 0x4
0x36d: M[V312] = V310
0x36f: V313 = M[0x40]
0x373: V314 = 0x1
0x375: V315 = 0xa0
0x377: V316 = 0x2
0x379: V317 = EXP 0x2 0xa0
0x37a: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37c: V319 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V320 = 0x70a08231
0x384: V321 = 0x24
0x388: V322 = ADD V308 0x24
0x38a: V323 = 0x20
0x391: V324 = SUB V308 V313
0x392: V325 = ADD V324 0x24
0x394: V326 = 0x0
0x398: V327 = EXTCODESIZE V319
0x399: V328 = ISZERO V327
0x39b: V329 = ISZERO V328
0x39c: V330 = 0x3a4
0x39f: JUMPI 0x3a4 V329
---
Entry stack: [V11, 0x133, V92, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V319, 0x70a08231, V322, 0x20, V313, V325, V313, 0x0, V319, V328]
Exit stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, 0x20, V313, V325, V313, 0x0, V319, V328]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x340]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V331 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, 0x20, V313, V325, V313, 0x0, V319, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, 0x20, V313, V325, V313, 0x0, V319, V328]

================================

Block 0x3a4
[0x3a4:0x3ae]
---
Predecessors: [0x340]
Successors: [0x3af, 0x3b8]
---
0x3a4 JUMPDEST
0x3a5 POP
0x3a6 GAS
0x3a7 CALL
0x3a8 ISZERO
0x3a9 DUP1
0x3aa ISZERO
0x3ab PUSH2 0x3b8
0x3ae JUMPI
---
0x3a4: JUMPDEST 
0x3a6: V332 = GAS
0x3a7: V333 = CALL V332 V319 0x0 V313 V325 V313 0x20
0x3a8: V334 = ISZERO V333
0x3aa: V335 = ISZERO V334
0x3ab: V336 = 0x3b8
0x3ae: JUMPI 0x3b8 V335
---
Entry stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, 0x20, V313, V325, V313, 0x0, V319, V328]
Stack pops: 7
Stack additions: [V334]
Exit stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, V334]

================================

Block 0x3af
[0x3af:0x3b7]
---
Predecessors: [0x3a4]
Successors: []
---
0x3af RETURNDATASIZE
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 RETURNDATACOPY
0x3b4 RETURNDATASIZE
0x3b5 PUSH1 0x0
0x3b7 REVERT
---
0x3af: V337 = RETURNDATASIZE
0x3b0: V338 = 0x0
0x3b3: RETURNDATACOPY 0x0 0x0 V337
0x3b4: V339 = RETURNDATASIZE
0x3b5: V340 = 0x0
0x3b7: REVERT 0x0 V339
---
Entry stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, V334]

================================

Block 0x3b8
[0x3b8:0x3c9]
---
Predecessors: [0x3a4]
Successors: [0x3ca, 0x3ce]
---
0x3b8 JUMPDEST
0x3b9 POP
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 RETURNDATASIZE
0x3c1 PUSH1 0x20
0x3c3 DUP2
0x3c4 LT
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3b8: JUMPDEST 
0x3bd: V341 = 0x40
0x3bf: V342 = M[0x40]
0x3c0: V343 = RETURNDATASIZE
0x3c1: V344 = 0x20
0x3c4: V345 = LT V343 0x20
0x3c5: V346 = ISZERO V345
0x3c6: V347 = 0x3ce
0x3c9: JUMPI 0x3ce V346
---
Entry stack: [V11, 0x133, V92, 0x0, V92, 0x0, V319, 0x70a08231, V322, V334]
Stack pops: 4
Stack additions: [V342, V343]
Exit stack: [V11, 0x133, V92, 0x0, V92, 0x0, V342, V343]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3b8]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V348 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V92, 0x0, V92, 0x0, V342, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V92, 0x0, V92, 0x0, V342, V343]

================================

Block 0x3ce
[0x3ce:0x43f]
---
Predecessors: [0x3b8]
Successors: [0x440, 0x444]
---
0x3ce JUMPDEST
0x3cf POP
0x3d0 MLOAD
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 SLOAD
0x3d5 PUSH1 0x40
0x3d7 DUP1
0x3d8 MLOAD
0x3d9 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x1
0x3fe PUSH1 0xa0
0x400 PUSH1 0x2
0x402 EXP
0x403 SUB
0x404 SWAP3
0x405 DUP4
0x406 AND
0x407 PUSH1 0x4
0x409 DUP3
0x40a ADD
0x40b MSTORE
0x40c PUSH1 0x24
0x40e DUP2
0x40f ADD
0x410 DUP6
0x411 SWAP1
0x412 MSTORE
0x413 SWAP1
0x414 MLOAD
0x415 SWAP4
0x416 SWAP5
0x417 POP
0x418 SWAP1
0x419 DUP6
0x41a AND
0x41b SWAP3
0x41c PUSH4 0xa9059cbb
0x421 SWAP3
0x422 PUSH1 0x44
0x424 DUP1
0x425 DUP5
0x426 ADD
0x427 SWAP4
0x428 PUSH1 0x20
0x42a SWAP4
0x42b SWAP3
0x42c SWAP1
0x42d DUP4
0x42e SWAP1
0x42f SUB
0x430 SWAP1
0x431 SWAP2
0x432 ADD
0x433 SWAP1
0x434 DUP3
0x435 SWAP1
0x436 DUP8
0x437 DUP1
0x438 EXTCODESIZE
0x439 ISZERO
0x43a DUP1
0x43b ISZERO
0x43c PUSH2 0x444
0x43f JUMPI
---
0x3ce: JUMPDEST 
0x3d0: V349 = M[V342]
0x3d1: V350 = 0x0
0x3d4: V351 = S[0x0]
0x3d5: V352 = 0x40
0x3d8: V353 = M[0x40]
0x3d9: V354 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3fb: M[V353] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3fc: V355 = 0x1
0x3fe: V356 = 0xa0
0x400: V357 = 0x2
0x402: V358 = EXP 0x2 0xa0
0x403: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x407: V361 = 0x4
0x40a: V362 = ADD V353 0x4
0x40b: M[V362] = V360
0x40c: V363 = 0x24
0x40f: V364 = ADD V353 0x24
0x412: M[V364] = V349
0x414: V365 = M[0x40]
0x41a: V366 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x41c: V367 = 0xa9059cbb
0x422: V368 = 0x44
0x426: V369 = ADD V353 0x44
0x428: V370 = 0x20
0x42f: V371 = SUB V353 V365
0x432: V372 = ADD 0x44 V371
0x438: V373 = EXTCODESIZE V366
0x439: V374 = ISZERO V373
0x43b: V375 = ISZERO V374
0x43c: V376 = 0x444
0x43f: JUMPI 0x444 V375
---
Entry stack: [V11, 0x133, V92, 0x0, V92, 0x0, V342, V343]
Stack pops: 4
Stack additions: [S3, V349, V366, 0xa9059cbb, V369, 0x20, V365, V372, V365, 0x0, V366, V374]
Exit stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, 0x20, V365, V372, V365, 0x0, V366, V374]

================================

Block 0x440
[0x440:0x443]
---
Predecessors: [0x3ce]
Successors: []
---
0x440 PUSH1 0x0
0x442 DUP1
0x443 REVERT
---
0x440: V377 = 0x0
0x443: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, 0x20, V365, V372, V365, 0x0, V366, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, 0x20, V365, V372, V365, 0x0, V366, V374]

================================

Block 0x444
[0x444:0x44e]
---
Predecessors: [0x3ce]
Successors: [0x44f, 0x458]
---
0x444 JUMPDEST
0x445 POP
0x446 GAS
0x447 CALL
0x448 ISZERO
0x449 DUP1
0x44a ISZERO
0x44b PUSH2 0x458
0x44e JUMPI
---
0x444: JUMPDEST 
0x446: V378 = GAS
0x447: V379 = CALL V378 V366 0x0 V365 V372 V365 0x20
0x448: V380 = ISZERO V379
0x44a: V381 = ISZERO V380
0x44b: V382 = 0x458
0x44e: JUMPI 0x458 V381
---
Entry stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, 0x20, V365, V372, V365, 0x0, V366, V374]
Stack pops: 7
Stack additions: [V380]
Exit stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, V380]

================================

Block 0x44f
[0x44f:0x457]
---
Predecessors: [0x444]
Successors: []
---
0x44f RETURNDATASIZE
0x450 PUSH1 0x0
0x452 DUP1
0x453 RETURNDATACOPY
0x454 RETURNDATASIZE
0x455 PUSH1 0x0
0x457 REVERT
---
0x44f: V383 = RETURNDATASIZE
0x450: V384 = 0x0
0x453: RETURNDATACOPY 0x0 0x0 V383
0x454: V385 = RETURNDATASIZE
0x455: V386 = 0x0
0x457: REVERT 0x0 V385
---
Entry stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, V380]

================================

Block 0x458
[0x458:0x469]
---
Predecessors: [0x444]
Successors: [0x46a, 0x46e]
---
0x458 JUMPDEST
0x459 POP
0x45a POP
0x45b POP
0x45c POP
0x45d PUSH1 0x40
0x45f MLOAD
0x460 RETURNDATASIZE
0x461 PUSH1 0x20
0x463 DUP2
0x464 LT
0x465 ISZERO
0x466 PUSH2 0x46e
0x469 JUMPI
---
0x458: JUMPDEST 
0x45d: V387 = 0x40
0x45f: V388 = M[0x40]
0x460: V389 = RETURNDATASIZE
0x461: V390 = 0x20
0x464: V391 = LT V389 0x20
0x465: V392 = ISZERO V391
0x466: V393 = 0x46e
0x469: JUMPI 0x46e V392
---
Entry stack: [V11, 0x133, V92, 0x0, V92, V349, V366, 0xa9059cbb, V369, V380]
Stack pops: 4
Stack additions: [V388, V389]
Exit stack: [V11, 0x133, V92, 0x0, V92, V349, V388, V389]

================================

Block 0x46a
[0x46a:0x46d]
---
Predecessors: [0x458]
Successors: []
---
0x46a PUSH1 0x0
0x46c DUP1
0x46d REVERT
---
0x46a: V394 = 0x0
0x46d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x133, V92, 0x0, V92, V349, V388, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x133, V92, 0x0, V92, V349, V388, V389]

================================

Block 0x46e
[0x46e:0x477]
---
Predecessors: [0x458]
Successors: [0x133]
---
0x46e JUMPDEST
0x46f POP
0x470 MLOAD
0x471 SWAP5
0x472 SWAP4
0x473 POP
0x474 POP
0x475 POP
0x476 POP
0x477 JUMP
---
0x46e: JUMPDEST 
0x470: V395 = M[V388]
0x477: JUMP 0x133
---
Entry stack: [V11, 0x133, V92, 0x0, V92, V349, V388, V389]
Stack pops: 7
Stack additions: [V395]
Exit stack: [V11, V395]

================================

Block 0x478
[0x478:0x48a]
---
Predecessors: [0x153]
Successors: [0x48b, 0x48f]
---
0x478 JUMPDEST
0x479 PUSH1 0x0
0x47b SLOAD
0x47c PUSH1 0x1
0x47e PUSH1 0xa0
0x480 PUSH1 0x2
0x482 EXP
0x483 SUB
0x484 AND
0x485 CALLER
0x486 EQ
0x487 PUSH2 0x48f
0x48a JUMPI
---
0x478: JUMPDEST 
0x479: V396 = 0x0
0x47b: V397 = S[0x0]
0x47c: V398 = 0x1
0x47e: V399 = 0xa0
0x480: V400 = 0x2
0x482: V401 = EXP 0x2 0xa0
0x483: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x484: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x485: V404 = CALLER
0x486: V405 = EQ V404 V403
0x487: V406 = 0x48f
0x48a: JUMPI 0x48f V405
---
Entry stack: [V11, 0x95, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V114]

================================

Block 0x48b
[0x48b:0x48e]
---
Predecessors: [0x478]
Successors: []
---
0x48b PUSH1 0x0
0x48d DUP1
0x48e REVERT
---
0x48b: V407 = 0x0
0x48e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x95, V114]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V114]

================================

Block 0x48f
[0x48f:0x49e]
---
Predecessors: [0x478]
Successors: [0x49f, 0x4c7]
---
0x48f JUMPDEST
0x490 PUSH1 0x1
0x492 PUSH1 0xa0
0x494 PUSH1 0x2
0x496 EXP
0x497 SUB
0x498 DUP2
0x499 AND
0x49a ISZERO
0x49b PUSH2 0x4c7
0x49e JUMPI
---
0x48f: JUMPDEST 
0x490: V408 = 0x1
0x492: V409 = 0xa0
0x494: V410 = 0x2
0x496: V411 = EXP 0x2 0xa0
0x497: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x499: V413 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V414 = ISZERO V413
0x49b: V415 = 0x4c7
0x49e: JUMPI 0x4c7 V414
---
Entry stack: [V11, 0x95, V114]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x95, V114]

================================

Block 0x49f
[0x49f:0x4c6]
---
Predecessors: [0x48f]
Successors: [0x4c7]
---
0x49f PUSH1 0x0
0x4a1 DUP1
0x4a2 SLOAD
0x4a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b8 NOT
0x4b9 AND
0x4ba PUSH1 0x1
0x4bc PUSH1 0xa0
0x4be PUSH1 0x2
0x4c0 EXP
0x4c1 SUB
0x4c2 DUP4
0x4c3 AND
0x4c4 OR
0x4c5 SWAP1
0x4c6 SSTORE
---
0x49f: V416 = 0x0
0x4a2: V417 = S[0x0]
0x4a3: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b8: V419 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V420 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V417
0x4ba: V421 = 0x1
0x4bc: V422 = 0xa0
0x4be: V423 = 0x2
0x4c0: V424 = EXP 0x2 0xa0
0x4c1: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c3: V426 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x4c4: V427 = OR V426 V420
0x4c6: S[0x0] = V427
---
Entry stack: [V11, 0x95, V114]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x95, V114]

================================

Block 0x4c7
[0x4c7:0x4c9]
---
Predecessors: [0x48f, 0x49f]
Successors: [0x95]
---
0x4c7 JUMPDEST
0x4c8 POP
0x4c9 JUMP
---
0x4c7: JUMPDEST 
0x4c9: JUMP 0x95
---
Entry stack: [V11, 0x95, V114]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ca
[0x4ca:0x4d9]
---
Predecessors: [0x179]
Successors: [0x18e]
---
0x4ca JUMPDEST
0x4cb PUSH1 0x40
0x4cd MLOAD
0x4ce PUSH2 0x204
0x4d1 DUP1
0x4d2 PUSH2 0x4eb
0x4d5 DUP4
0x4d6 CODECOPY
0x4d7 ADD
0x4d8 SWAP1
0x4d9 JUMP
---
0x4ca: JUMPDEST 
0x4cb: V428 = 0x40
0x4cd: V429 = M[0x40]
0x4ce: V430 = 0x204
0x4d2: V431 = 0x4eb
0x4d6: CODECOPY V429 0x4eb 0x204
0x4d7: V432 = ADD 0x204 V429
0x4d9: JUMP 0x18e
---
Entry stack: [V11, 0x95, S6, S5, 0x0, 0x0, V124, V130, 0x18e]
Stack pops: 1
Stack additions: [V432]
Exit stack: [V11, 0x95, S6, S5, 0x0, 0x0, V124, V130, V432]

================================

Block 0x4da
[0x4da:0x4e9]
---
Predecessors: [0x1df]
Successors: [0x1f2]
---
0x4da JUMPDEST
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de PUSH2 0x1fe
0x4e1 DUP1
0x4e2 PUSH2 0x6ef
0x4e5 DUP4
0x4e6 CODECOPY
0x4e7 ADD
0x4e8 SWAP1
0x4e9 JUMP
---
0x4da: JUMPDEST 
0x4db: V433 = 0x40
0x4dd: V434 = M[0x40]
0x4de: V435 = 0x1fe
0x4e2: V436 = 0x6ef
0x4e6: CODECOPY V434 0x6ef 0x1fe
0x4e7: V437 = ADD 0x1fe V434
0x4e9: JUMP 0x1f2
---
Entry stack: [V11, 0x95, S5, S4, S3, S2, V171, 0x1f2]
Stack pops: 1
Stack additions: [V437]
Exit stack: [V11, 0x95, S5, S4, S3, S2, V171, V437]

================================

Block 0x4ea
[0x4ea:0x653]
---
Predecessors: []
Successors: [0x654]
---
0x4ea STOP
0x4eb PUSH1 0x80
0x4ed PUSH1 0x40
0x4ef DUP2
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 DUP1
0x4f3 PUSH2 0x204
0x4f6 DUP4
0x4f7 CODECOPY
0x4f8 DUP2
0x4f9 ADD
0x4fa PUSH1 0x40
0x4fc DUP2
0x4fd DUP2
0x4fe MSTORE
0x4ff DUP3
0x500 MLOAD
0x501 PUSH1 0x20
0x503 SWAP1
0x504 SWAP4
0x505 ADD
0x506 MLOAD
0x507 PUSH32 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x528 DUP4
0x529 MSTORE
0x52a DUP2
0x52b MLOAD
0x52c SWAP3
0x52d DUP4
0x52e SWAP1
0x52f SUB
0x530 PUSH1 0xb
0x532 ADD
0x533 DUP4
0x534 SHA3
0x535 PUSH4 0xffffffff
0x53a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x558 SWAP2
0x559 DUP3
0x55a SWAP1
0x55b DIV
0x55c SWAP1
0x55d DUP2
0x55e AND
0x55f SWAP1
0x560 SWAP2
0x561 MUL
0x562 DUP5
0x563 MSTORE
0x564 SWAP2
0x565 MLOAD
0x566 SWAP1
0x567 SWAP3
0x568 PUSH20 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x57d SWAP3
0x57e PUSH1 0x1
0x580 PUSH1 0xa0
0x582 PUSH1 0x2
0x584 EXP
0x585 SUB
0x586 DUP6
0x587 AND
0x588 SWAP3
0x589 SWAP1
0x58a SWAP2
0x58b PUSH1 0x4
0x58d DUP1
0x58e DUP3
0x58f ADD
0x590 SWAP3
0x591 PUSH1 0x0
0x593 SWAP3
0x594 SWAP1
0x595 SWAP2
0x596 SWAP1
0x597 DUP3
0x598 SWAP1
0x599 SUB
0x59a ADD
0x59b DUP2
0x59c DUP4
0x59d DUP8
0x59e GAS
0x59f CALL
0x5a0 POP
0x5a1 POP
0x5a2 PUSH1 0x40
0x5a4 DUP1
0x5a5 MLOAD
0x5a6 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5c7 DUP2
0x5c8 MSTORE
0x5c9 DUP2
0x5ca MLOAD
0x5cb SWAP1
0x5cc DUP2
0x5cd SWAP1
0x5ce SUB
0x5cf PUSH1 0x19
0x5d1 ADD
0x5d2 DUP2
0x5d3 SHA3
0x5d4 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5f5 DUP3
0x5f6 MSTORE
0x5f7 ADDRESS
0x5f8 PUSH1 0x4
0x5fa DUP4
0x5fb ADD
0x5fc MSTORE
0x5fd SWAP2
0x5fe MLOAD
0x5ff PUSH1 0x1
0x601 PUSH1 0xa0
0x603 PUSH1 0x2
0x605 EXP
0x606 SUB
0x607 DUP8
0x608 AND
0x609 SWAP5
0x60a POP
0x60b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x629 SWAP1
0x62a SWAP3
0x62b DIV
0x62c SWAP3
0x62d POP
0x62e DUP7
0x62f SWAP2
0x630 DUP5
0x631 SWAP2
0x632 PUSH4 0x70a08231
0x637 SWAP2
0x638 PUSH1 0x24
0x63a DUP1
0x63b DUP4
0x63c ADD
0x63d SWAP3
0x63e PUSH1 0x20
0x640 SWAP3
0x641 SWAP2
0x642 SWAP1
0x643 DUP3
0x644 SWAP1
0x645 SUB
0x646 ADD
0x647 DUP2
0x648 PUSH1 0x0
0x64a DUP8
0x64b DUP1
0x64c EXTCODESIZE
0x64d ISZERO
0x64e DUP1
0x64f ISZERO
0x650 PUSH2 0x16d
0x653 JUMPI
---
0x4ea: STOP 
0x4eb: V438 = 0x80
0x4ed: V439 = 0x40
0x4f1: M[0x40] = 0x80
0x4f3: V440 = 0x204
0x4f7: CODECOPY 0x80 0x204 0x40
0x4f9: V441 = ADD 0x80 0x40
0x4fa: V442 = 0x40
0x4fe: M[0x40] = 0xc0
0x500: V443 = M[0x80]
0x501: V444 = 0x20
0x505: V445 = ADD 0x80 0x20
0x506: V446 = M[0xa0]
0x507: V447 = 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x529: M[0xc0] = 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x52b: V448 = M[0x40]
0x52f: V449 = SUB 0xc0 V448
0x530: V450 = 0xb
0x532: V451 = ADD 0xb V449
0x534: V452 = SHA3 V448 V451
0x535: V453 = 0xffffffff
0x53a: V454 = 0x100000000000000000000000000000000000000000000000000000000
0x55b: V455 = DIV V452 0x100000000000000000000000000000000000000000000000000000000
0x55e: V456 = AND V455 0xffffffff
0x561: V457 = MUL 0x100000000000000000000000000000000000000000000000000000000 V456
0x563: M[V448] = V457
0x565: V458 = M[0x40]
0x568: V459 = 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x57e: V460 = 0x1
0x580: V461 = 0xa0
0x582: V462 = 0x2
0x584: V463 = EXP 0x2 0xa0
0x585: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V465 = AND V446 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V466 = 0x4
0x58f: V467 = ADD V448 0x4
0x591: V468 = 0x0
0x599: V469 = SUB V448 V458
0x59a: V470 = ADD V469 0x4
0x59e: V471 = GAS
0x59f: V472 = CALL V471 V465 0x0 V458 V470 V458 0x0
0x5a2: V473 = 0x40
0x5a5: V474 = M[0x40]
0x5a6: V475 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5c8: M[V474] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x5ca: V476 = M[0x40]
0x5ce: V477 = SUB V474 V476
0x5cf: V478 = 0x19
0x5d1: V479 = ADD 0x19 V477
0x5d3: V480 = SHA3 V476 V479
0x5d4: V481 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5f6: M[V476] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5f7: V482 = ADDRESS
0x5f8: V483 = 0x4
0x5fb: V484 = ADD V476 0x4
0x5fc: M[V484] = V482
0x5fe: V485 = M[0x40]
0x5ff: V486 = 0x1
0x601: V487 = 0xa0
0x603: V488 = 0x2
0x605: V489 = EXP 0x2 0xa0
0x606: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x608: V491 = AND V446 0xffffffffffffffffffffffffffffffffffffffff
0x60b: V492 = 0x100000000000000000000000000000000000000000000000000000000
0x62b: V493 = DIV V480 0x100000000000000000000000000000000000000000000000000000000
0x632: V494 = 0x70a08231
0x638: V495 = 0x24
0x63c: V496 = ADD V476 0x24
0x63e: V497 = 0x20
0x645: V498 = SUB V476 V485
0x646: V499 = ADD V498 0x24
0x648: V500 = 0x0
0x64c: V501 = EXTCODESIZE V491
0x64d: V502 = ISZERO V501
0x64f: V503 = ISZERO V502
0x650: V504 = 0x16d
0x653: THROWI V503
---
Entry stack: []
Stack pops: 0
Stack additions: [V502, V491, 0x0, V485, V499, V485, 0x20, V496, 0x70a08231, V491, V443, V493, V491, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V446, V443]
Exit stack: []

================================

Block 0x654
[0x654:0x662]
---
Predecessors: [0x4ea]
Successors: [0x663]
---
0x654 PUSH1 0x0
0x656 DUP1
0x657 REVERT
0x658 JUMPDEST
0x659 POP
0x65a GAS
0x65b CALL
0x65c ISZERO
0x65d DUP1
0x65e ISZERO
0x65f PUSH2 0x181
0x662 JUMPI
---
0x654: V505 = 0x0
0x657: REVERT 0x0 0x0
0x658: JUMPDEST 
0x65a: V506 = GAS
0x65b: V507 = CALL V506 S1 S2 S3 S4 S5 S6
0x65c: V508 = ISZERO V507
0x65e: V509 = ISZERO V508
0x65f: V510 = 0x181
0x662: THROWI V509
---
Entry stack: [V443, V446, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V491, V493, V443, V491, 0x70a08231, V496, 0x20, V485, V499, V485, 0x0, V491, V502]
Stack pops: 0
Stack additions: [V508]
Exit stack: []

================================

Block 0x663
[0x663:0x67d]
---
Predecessors: [0x654]
Successors: [0x67e]
---
0x663 RETURNDATASIZE
0x664 PUSH1 0x0
0x666 DUP1
0x667 RETURNDATACOPY
0x668 RETURNDATASIZE
0x669 PUSH1 0x0
0x66b REVERT
0x66c JUMPDEST
0x66d POP
0x66e POP
0x66f POP
0x670 POP
0x671 PUSH1 0x40
0x673 MLOAD
0x674 RETURNDATASIZE
0x675 PUSH1 0x20
0x677 DUP2
0x678 LT
0x679 ISZERO
0x67a PUSH2 0x197
0x67d JUMPI
---
0x663: V511 = RETURNDATASIZE
0x664: V512 = 0x0
0x667: RETURNDATACOPY 0x0 0x0 V511
0x668: V513 = RETURNDATASIZE
0x669: V514 = 0x0
0x66b: REVERT 0x0 V513
0x66c: JUMPDEST 
0x671: V515 = 0x40
0x673: V516 = M[0x40]
0x674: V517 = RETURNDATASIZE
0x675: V518 = 0x20
0x678: V519 = LT V517 0x20
0x679: V520 = ISZERO V519
0x67a: V521 = 0x197
0x67d: THROWI V520
---
Entry stack: [V508]
Stack pops: 0
Stack additions: [V517, V516]
Exit stack: []

================================

Block 0x67e
[0x67e:0x851]
---
Predecessors: [0x663]
Successors: [0x852]
---
0x67e PUSH1 0x0
0x680 DUP1
0x681 REVERT
0x682 JUMPDEST
0x683 POP
0x684 MLOAD
0x685 PUSH1 0x40
0x687 DUP1
0x688 MLOAD
0x689 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6a7 PUSH4 0xffffffff
0x6ac DUP7
0x6ad AND
0x6ae MUL
0x6af DUP2
0x6b0 MSTORE
0x6b1 PUSH1 0x1
0x6b3 PUSH1 0xa0
0x6b5 PUSH1 0x2
0x6b7 EXP
0x6b8 SUB
0x6b9 SWAP1
0x6ba SWAP4
0x6bb AND
0x6bc PUSH1 0x4
0x6be DUP5
0x6bf ADD
0x6c0 MSTORE
0x6c1 PUSH1 0x24
0x6c3 DUP4
0x6c4 ADD
0x6c5 SWAP2
0x6c6 SWAP1
0x6c7 SWAP2
0x6c8 MSTORE
0x6c9 MLOAD
0x6ca PUSH1 0x44
0x6cc DUP1
0x6cd DUP4
0x6ce ADD
0x6cf SWAP3
0x6d0 PUSH1 0x0
0x6d2 SWAP3
0x6d3 SWAP2
0x6d4 SWAP1
0x6d5 DUP3
0x6d6 SWAP1
0x6d7 SUB
0x6d8 ADD
0x6d9 DUP2
0x6da DUP4
0x6db DUP8
0x6dc GAS
0x6dd CALL
0x6de SWAP3
0x6df POP
0x6e0 POP
0x6e1 POP
0x6e2 POP
0x6e3 DUP1
0x6e4 PUSH1 0x1
0x6e6 PUSH1 0xa0
0x6e8 PUSH1 0x2
0x6ea EXP
0x6eb SUB
0x6ec AND
0x6ed SELFDESTRUCT
0x6ee STOP
0x6ef PUSH1 0x80
0x6f1 PUSH1 0x40
0x6f3 MSTORE
0x6f4 PUSH1 0x40
0x6f6 MLOAD
0x6f7 PUSH1 0x20
0x6f9 DUP1
0x6fa PUSH2 0x1fe
0x6fd DUP4
0x6fe CODECOPY
0x6ff DUP2
0x700 ADD
0x701 PUSH1 0x40
0x703 DUP2
0x704 DUP2
0x705 MSTORE
0x706 SWAP2
0x707 MLOAD
0x708 PUSH32 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x729 DUP3
0x72a MSTORE
0x72b DUP3
0x72c MLOAD
0x72d SWAP2
0x72e DUP3
0x72f SWAP1
0x730 SUB
0x731 PUSH1 0xb
0x733 ADD
0x734 DUP3
0x735 SHA3
0x736 PUSH4 0xffffffff
0x73b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x759 SWAP2
0x75a DUP3
0x75b SWAP1
0x75c DIV
0x75d SWAP1
0x75e DUP2
0x75f AND
0x760 SWAP1
0x761 SWAP2
0x762 MUL
0x763 DUP4
0x764 MSTORE
0x765 SWAP3
0x766 MLOAD
0x767 SWAP1
0x768 SWAP3
0x769 PUSH20 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x77e SWAP3
0x77f PUSH1 0x1
0x781 PUSH1 0xa0
0x783 PUSH1 0x2
0x785 EXP
0x786 SUB
0x787 DUP6
0x788 AND
0x789 SWAP3
0x78a PUSH1 0x4
0x78c DUP1
0x78d DUP4
0x78e ADD
0x78f SWAP3
0x790 PUSH1 0x0
0x792 SWAP3
0x793 SWAP2
0x794 SWAP1
0x795 DUP3
0x796 SWAP1
0x797 SUB
0x798 ADD
0x799 DUP2
0x79a DUP4
0x79b DUP8
0x79c GAS
0x79d CALL
0x79e POP
0x79f POP
0x7a0 PUSH1 0x40
0x7a2 DUP1
0x7a3 MLOAD
0x7a4 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x7c5 DUP2
0x7c6 MSTORE
0x7c7 DUP2
0x7c8 MLOAD
0x7c9 SWAP1
0x7ca DUP2
0x7cb SWAP1
0x7cc SUB
0x7cd PUSH1 0x19
0x7cf ADD
0x7d0 DUP2
0x7d1 SHA3
0x7d2 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7f3 DUP3
0x7f4 MSTORE
0x7f5 ADDRESS
0x7f6 PUSH1 0x4
0x7f8 DUP4
0x7f9 ADD
0x7fa MSTORE
0x7fb SWAP2
0x7fc MLOAD
0x7fd PUSH1 0x1
0x7ff PUSH1 0xa0
0x801 PUSH1 0x2
0x803 EXP
0x804 SUB
0x805 DUP8
0x806 AND
0x807 SWAP5
0x808 POP
0x809 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x827 SWAP1
0x828 SWAP3
0x829 DIV
0x82a SWAP3
0x82b POP
0x82c DUP5
0x82d SWAP2
0x82e DUP5
0x82f SWAP2
0x830 PUSH4 0x70a08231
0x835 SWAP2
0x836 PUSH1 0x24
0x838 DUP1
0x839 DUP4
0x83a ADD
0x83b SWAP3
0x83c PUSH1 0x20
0x83e SWAP3
0x83f SWAP2
0x840 SWAP1
0x841 DUP3
0x842 SWAP1
0x843 SUB
0x844 ADD
0x845 DUP2
0x846 PUSH1 0x0
0x848 DUP8
0x849 DUP1
0x84a EXTCODESIZE
0x84b ISZERO
0x84c DUP1
0x84d ISZERO
0x84e PUSH2 0x167
0x851 JUMPI
---
0x67e: V522 = 0x0
0x681: REVERT 0x0 0x0
0x682: JUMPDEST 
0x684: V523 = M[S1]
0x685: V524 = 0x40
0x688: V525 = M[0x40]
0x689: V526 = 0x100000000000000000000000000000000000000000000000000000000
0x6a7: V527 = 0xffffffff
0x6ad: V528 = AND S3 0xffffffff
0x6ae: V529 = MUL V528 0x100000000000000000000000000000000000000000000000000000000
0x6b0: M[V525] = V529
0x6b1: V530 = 0x1
0x6b3: V531 = 0xa0
0x6b5: V532 = 0x2
0x6b7: V533 = EXP 0x2 0xa0
0x6b8: V534 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bb: V535 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: V536 = 0x4
0x6bf: V537 = ADD V525 0x4
0x6c0: M[V537] = V535
0x6c1: V538 = 0x24
0x6c4: V539 = ADD V525 0x24
0x6c8: M[V539] = V523
0x6c9: V540 = M[0x40]
0x6ca: V541 = 0x44
0x6ce: V542 = ADD V525 0x44
0x6d0: V543 = 0x0
0x6d7: V544 = SUB V525 V540
0x6d8: V545 = ADD V544 0x44
0x6dc: V546 = GAS
0x6dd: V547 = CALL V546 S4 0x0 V540 V545 V540 0x0
0x6e4: V548 = 0x1
0x6e6: V549 = 0xa0
0x6e8: V550 = 0x2
0x6ea: V551 = EXP 0x2 0xa0
0x6eb: V552 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ec: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6ed: SELFDESTRUCT V553
0x6ee: STOP 
0x6ef: V554 = 0x80
0x6f1: V555 = 0x40
0x6f3: M[0x40] = 0x80
0x6f4: V556 = 0x40
0x6f6: V557 = M[0x40]
0x6f7: V558 = 0x20
0x6fa: V559 = 0x1fe
0x6fe: CODECOPY V557 0x1fe 0x20
0x700: V560 = ADD V557 0x20
0x701: V561 = 0x40
0x705: M[0x40] = V560
0x707: V562 = M[V557]
0x708: V563 = 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x72a: M[V560] = 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x72c: V564 = M[0x40]
0x730: V565 = SUB V560 V564
0x731: V566 = 0xb
0x733: V567 = ADD 0xb V565
0x735: V568 = SHA3 V564 V567
0x736: V569 = 0xffffffff
0x73b: V570 = 0x100000000000000000000000000000000000000000000000000000000
0x75c: V571 = DIV V568 0x100000000000000000000000000000000000000000000000000000000
0x75f: V572 = AND V571 0xffffffff
0x762: V573 = MUL 0x100000000000000000000000000000000000000000000000000000000 V572
0x764: M[V564] = V573
0x766: V574 = M[0x40]
0x769: V575 = 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88
0x77f: V576 = 0x1
0x781: V577 = 0xa0
0x783: V578 = 0x2
0x785: V579 = EXP 0x2 0xa0
0x786: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x788: V581 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V582 = 0x4
0x78e: V583 = ADD V564 0x4
0x790: V584 = 0x0
0x797: V585 = SUB V564 V574
0x798: V586 = ADD V585 0x4
0x79c: V587 = GAS
0x79d: V588 = CALL V587 V581 0x0 V574 V586 V574 0x0
0x7a0: V589 = 0x40
0x7a3: V590 = M[0x40]
0x7a4: V591 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x7c6: M[V590] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0x7c8: V592 = M[0x40]
0x7cc: V593 = SUB V590 V592
0x7cd: V594 = 0x19
0x7cf: V595 = ADD 0x19 V593
0x7d1: V596 = SHA3 V592 V595
0x7d2: V597 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7f4: M[V592] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x7f5: V598 = ADDRESS
0x7f6: V599 = 0x4
0x7f9: V600 = ADD V592 0x4
0x7fa: M[V600] = V598
0x7fc: V601 = M[0x40]
0x7fd: V602 = 0x1
0x7ff: V603 = 0xa0
0x801: V604 = 0x2
0x803: V605 = EXP 0x2 0xa0
0x804: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x806: V607 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0x809: V608 = 0x100000000000000000000000000000000000000000000000000000000
0x829: V609 = DIV V596 0x100000000000000000000000000000000000000000000000000000000
0x830: V610 = 0x70a08231
0x836: V611 = 0x24
0x83a: V612 = ADD V592 0x24
0x83c: V613 = 0x20
0x843: V614 = SUB V592 V601
0x844: V615 = ADD V614 0x24
0x846: V616 = 0x0
0x84a: V617 = EXTCODESIZE V607
0x84b: V618 = ISZERO V617
0x84d: V619 = ISZERO V618
0x84e: V620 = 0x167
0x851: THROWI V619
---
Entry stack: [V516, V517]
Stack pops: 0
Stack additions: [S5, V618, V607, 0x0, V601, V615, V601, 0x20, V612, 0x70a08231, V607, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V609, V607, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V562]
Exit stack: []

================================

Block 0x852
[0x852:0x860]
---
Predecessors: [0x67e]
Successors: [0x861]
---
0x852 PUSH1 0x0
0x854 DUP1
0x855 REVERT
0x856 JUMPDEST
0x857 POP
0x858 GAS
0x859 CALL
0x85a ISZERO
0x85b DUP1
0x85c ISZERO
0x85d PUSH2 0x17b
0x860 JUMPI
---
0x852: V621 = 0x0
0x855: REVERT 0x0 0x0
0x856: JUMPDEST 
0x858: V622 = GAS
0x859: V623 = CALL V622 S1 S2 S3 S4 S5 S6
0x85a: V624 = ISZERO V623
0x85c: V625 = ISZERO V624
0x85d: V626 = 0x17b
0x860: THROWI V625
---
Entry stack: [V562, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V607, V609, 0xeff8670ff8b9a6b31586f0b6d491a3800edb2d88, V607, 0x70a08231, V612, 0x20, V601, V615, V601, 0x0, V607, V618]
Stack pops: 0
Stack additions: [V624]
Exit stack: []

================================

Block 0x861
[0x861:0x87b]
---
Predecessors: [0x852]
Successors: [0x87c]
---
0x861 RETURNDATASIZE
0x862 PUSH1 0x0
0x864 DUP1
0x865 RETURNDATACOPY
0x866 RETURNDATASIZE
0x867 PUSH1 0x0
0x869 REVERT
0x86a JUMPDEST
0x86b POP
0x86c POP
0x86d POP
0x86e POP
0x86f PUSH1 0x40
0x871 MLOAD
0x872 RETURNDATASIZE
0x873 PUSH1 0x20
0x875 DUP2
0x876 LT
0x877 ISZERO
0x878 PUSH2 0x191
0x87b JUMPI
---
0x861: V627 = RETURNDATASIZE
0x862: V628 = 0x0
0x865: RETURNDATACOPY 0x0 0x0 V627
0x866: V629 = RETURNDATASIZE
0x867: V630 = 0x0
0x869: REVERT 0x0 V629
0x86a: JUMPDEST 
0x86f: V631 = 0x40
0x871: V632 = M[0x40]
0x872: V633 = RETURNDATASIZE
0x873: V634 = 0x20
0x876: V635 = LT V633 0x20
0x877: V636 = ISZERO V635
0x878: V637 = 0x191
0x87b: THROWI V636
---
Entry stack: [V624]
Stack pops: 0
Stack additions: [V633, V632]
Exit stack: []

================================

Block 0x87c
[0x87c:0x917]
---
Predecessors: [0x861]
Successors: []
---
0x87c PUSH1 0x0
0x87e DUP1
0x87f REVERT
0x880 JUMPDEST
0x881 POP
0x882 MLOAD
0x883 PUSH1 0x40
0x885 DUP1
0x886 MLOAD
0x887 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8a5 PUSH4 0xffffffff
0x8aa DUP7
0x8ab AND
0x8ac MUL
0x8ad DUP2
0x8ae MSTORE
0x8af PUSH1 0x1
0x8b1 PUSH1 0xa0
0x8b3 PUSH1 0x2
0x8b5 EXP
0x8b6 SUB
0x8b7 SWAP1
0x8b8 SWAP4
0x8b9 AND
0x8ba PUSH1 0x4
0x8bc DUP5
0x8bd ADD
0x8be MSTORE
0x8bf PUSH1 0x24
0x8c1 DUP4
0x8c2 ADD
0x8c3 SWAP2
0x8c4 SWAP1
0x8c5 SWAP2
0x8c6 MSTORE
0x8c7 MLOAD
0x8c8 PUSH1 0x44
0x8ca DUP1
0x8cb DUP4
0x8cc ADD
0x8cd SWAP3
0x8ce PUSH1 0x0
0x8d0 SWAP3
0x8d1 SWAP2
0x8d2 SWAP1
0x8d3 DUP3
0x8d4 SWAP1
0x8d5 SUB
0x8d6 ADD
0x8d7 DUP2
0x8d8 DUP4
0x8d9 DUP8
0x8da GAS
0x8db CALL
0x8dc SWAP3
0x8dd POP
0x8de POP
0x8df POP
0x8e0 POP
0x8e1 DUP1
0x8e2 PUSH1 0x1
0x8e4 PUSH1 0xa0
0x8e6 PUSH1 0x2
0x8e8 EXP
0x8e9 SUB
0x8ea AND
0x8eb SELFDESTRUCT
0x8ec STOP
0x8ed LOG1
0x8ee PUSH6 0x627a7a723058
0x8f5 SHA3
0x8f6 MISSING 0x2e
0x8f7 MISSING 0xd2
0x8f8 DUP12
0x8f9 PUSH2 0x7d23
0x8fc MISSING 0xdb
0x8fd BLOCKHASH
0x8fe MISSING 0xd4
0x8ff MISSING 0xdd
0x900 PUSH13 0x73a37eded7941a334b8d1efb9b
0x90e MISSING 0x5e
0x90f MISSING 0xea
0x910 BALANCE
0x911 SWAP11
0x912 MISSING 0xf9
0x913 MISSING 0xe5
0x914 PUSH3 0xa00029
---
0x87c: V638 = 0x0
0x87f: REVERT 0x0 0x0
0x880: JUMPDEST 
0x882: V639 = M[S1]
0x883: V640 = 0x40
0x886: V641 = M[0x40]
0x887: V642 = 0x100000000000000000000000000000000000000000000000000000000
0x8a5: V643 = 0xffffffff
0x8ab: V644 = AND S3 0xffffffff
0x8ac: V645 = MUL V644 0x100000000000000000000000000000000000000000000000000000000
0x8ae: M[V641] = V645
0x8af: V646 = 0x1
0x8b1: V647 = 0xa0
0x8b3: V648 = 0x2
0x8b5: V649 = EXP 0x2 0xa0
0x8b6: V650 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b9: V651 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x8ba: V652 = 0x4
0x8bd: V653 = ADD V641 0x4
0x8be: M[V653] = V651
0x8bf: V654 = 0x24
0x8c2: V655 = ADD V641 0x24
0x8c6: M[V655] = V639
0x8c7: V656 = M[0x40]
0x8c8: V657 = 0x44
0x8cc: V658 = ADD V641 0x44
0x8ce: V659 = 0x0
0x8d5: V660 = SUB V641 V656
0x8d6: V661 = ADD V660 0x44
0x8da: V662 = GAS
0x8db: V663 = CALL V662 S4 0x0 V656 V661 V656 0x0
0x8e2: V664 = 0x1
0x8e4: V665 = 0xa0
0x8e6: V666 = 0x2
0x8e8: V667 = EXP 0x2 0xa0
0x8e9: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ea: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x8eb: SELFDESTRUCT V669
0x8ec: STOP 
0x8ed: LOG S0 S1 S2
0x8ee: V670 = 0x627a7a723058
0x8f5: V671 = SHA3 0x627a7a723058 S3
0x8f6: MISSING 0x2e
0x8f7: MISSING 0xd2
0x8f9: V672 = 0x7d23
0x8fc: MISSING 0xdb
0x8fd: V673 = BLOCKHASH S0
0x8fe: MISSING 0xd4
0x8ff: MISSING 0xdd
0x900: V674 = 0x73a37eded7941a334b8d1efb9b
0x90e: MISSING 0x5e
0x90f: MISSING 0xea
0x910: V675 = BALANCE S0
0x912: MISSING 0xf9
0x913: MISSING 0xe5
0x914: V676 = 0xa00029
---
Entry stack: [V632, V633]
Stack pops: 0
Stack additions: [S5, V671, 0x7d23, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V673, 0x73a37eded7941a334b8d1efb9b, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V675, 0xa00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1c02708d
Entry block: 0x97
Exit block: 0x24a
Body: 0x97, 0x9f, 0xa3, 0x233, 0x246, 0x24a

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xac
Exit block: 0x95
Body: 0x95, 0xac, 0xb4, 0xb8, 0x24d, 0x261, 0x265, 0x299, 0x2a2

Function 2:
Public function signature: 0x5e572df6
Entry block: 0xc1
Exit block: 0x95
Body: 0x95, 0xc1, 0xc9, 0xcd, 0x2a6, 0x2b9, 0x2bd

Function 3:
Public function signature: 0x85a30c33
Entry block: 0xd9
Exit block: 0x95
Body: 0x95, 0xd9, 0xe1, 0xe5, 0x2c2, 0x2d5, 0x2d9

Function 4:
Public function signature: 0xaa6ca808
Entry block: 0x8d
Exit block: 0x216
Body: 0x8d, 0x95, 0x168, 0x16e, 0x179, 0x18e, 0x1b8, 0x1c1, 0x1cf, 0x1d4, 0x1df, 0x1f2, 0x216, 0x21f, 0x22d, 0x4ca, 0x4da

Function 5:
Public function signature: 0xcae539ce
Entry block: 0xfa
Exit block: 0x95
Body: 0x95, 0xfa, 0x102, 0x106, 0x308, 0x31b, 0x31f

Function 6:
Public function signature: 0xe58fc54c
Entry block: 0x112
Exit block: 0x133
Body: 0x112, 0x11a, 0x11e, 0x133, 0x324, 0x33c, 0x340, 0x3a0, 0x3a4, 0x3af, 0x3b8, 0x3ca, 0x3ce, 0x440, 0x444, 0x44f, 0x458, 0x46a, 0x46e

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x147
Exit block: 0x95
Body: 0x95, 0x147, 0x14f, 0x153, 0x478, 0x48b, 0x48f, 0x49f, 0x4c7

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x216
Body: 0x8d, 0x95, 0x168, 0x16e, 0x179, 0x18e, 0x1b8, 0x1c1, 0x1cf, 0x1d4, 0x1df, 0x1f2, 0x216, 0x21f, 0x22d, 0x4ca, 0x4da

