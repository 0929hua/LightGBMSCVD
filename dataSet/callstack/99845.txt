Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x41c0e1b5
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x41c0e1b5
0x3c: V13 = EQ 0x41c0e1b5 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x71]
---
0x41 DUP1
0x42 PUSH4 0x74523e77
0x47 EQ
0x48 PUSH2 0x71
0x4b JUMPI
---
0x42: V15 = 0x74523e77
0x47: V16 = EQ 0x74523e77 V11
0x48: V17 = 0x71
0x4b: JUMPI 0x71 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xcf]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0xcf
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0xcf
0x56: JUMPI 0xcf V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x124]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x124
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x124
0x6e: JUMP 0x124
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0x70]
---
Predecessors: [0x1b3]
Successors: []
---
0x6f JUMPDEST
0x70 STOP
---
0x6f: JUMPDEST 
0x70: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x77]
---
Predecessors: [0x41]
Successors: [0x78, 0x7c]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 ISZERO
0x74 PUSH2 0x7c
0x77 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x73: V29 = ISZERO V28
0x74: V30 = 0x7c
0x77: JUMPI 0x7c V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7b]
---
Predecessors: [0x71]
Successors: []
---
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x78: V31 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x90]
---
Predecessors: [0x71]
Successors: [0x1b5]
---
0x7c JUMPDEST
0x7d PUSH2 0x91
0x80 PUSH1 0x4
0x82 DUP1
0x83 DUP1
0x84 PUSH2 0x140
0x87 ADD
0x88 SWAP1
0x89 SWAP2
0x8a SWAP1
0x8b POP
0x8c POP
0x8d PUSH2 0x1b5
0x90 JUMP
---
0x7c: JUMPDEST 
0x7d: V32 = 0x91
0x80: V33 = 0x4
0x84: V34 = 0x140
0x87: V35 = ADD 0x140 0x4
0x8d: V36 = 0x1b5
0x90: JUMP 0x1b5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x91, 0x4]
Exit stack: [V11, 0x91, 0x4]

================================

Block 0x91
[0x91:0xa0]
---
Predecessors: [0x734]
Successors: [0xa1]
---
0x91 JUMPDEST
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 DUP3
0x97 PUSH1 0xa
0x99 PUSH1 0x20
0x9b MUL
0x9c DUP1
0x9d DUP4
0x9e DUP4
0x9f PUSH1 0x0
---
0x91: JUMPDEST 
0x92: V37 = 0x40
0x94: V38 = M[0x40]
0x97: V39 = 0xa
0x99: V40 = 0x20
0x9b: V41 = MUL 0x20 0xa
0x9f: V42 = 0x0
---
Entry stack: [V11, V488]
Stack pops: 1
Stack additions: [S0, V38, V38, S0, 0x140, 0x140, V38, S0, 0x0]
Exit stack: [V11, V488, V38, V38, V488, 0x140, 0x140, V38, V488, 0x0]

================================

Block 0xa1
[0xa1:0xa9]
---
Predecessors: [0x91, 0xaa]
Successors: [0xaa, 0xbc]
---
0xa1 JUMPDEST
0xa2 DUP4
0xa3 DUP2
0xa4 LT
0xa5 ISZERO
0xa6 PUSH2 0xbc
0xa9 JUMPI
---
0xa1: JUMPDEST 
0xa4: V43 = LT S0 0x140
0xa5: V44 = ISZERO V43
0xa6: V45 = 0xbc
0xa9: JUMPI 0xbc V44
---
Entry stack: [V11, V488, V38, V38, V488, 0x140, 0x140, V38, V488, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V488, V38, V38, V488, 0x140, 0x140, V38, V488, S0]

================================

Block 0xaa
[0xaa:0xbb]
---
Predecessors: [0xa1]
Successors: [0xa1]
---
0xaa DUP1
0xab DUP3
0xac ADD
0xad MLOAD
0xae DUP2
0xaf DUP5
0xb0 ADD
0xb1 MSTORE
0xb2 PUSH1 0x20
0xb4 DUP2
0xb5 ADD
0xb6 SWAP1
0xb7 POP
0xb8 PUSH2 0xa1
0xbb JUMP
---
0xac: V46 = ADD V488 S0
0xad: V47 = M[V46]
0xb0: V48 = ADD V38 S0
0xb1: M[V48] = V47
0xb2: V49 = 0x20
0xb5: V50 = ADD S0 0x20
0xb8: V51 = 0xa1
0xbb: JUMP 0xa1
---
Entry stack: [V11, V488, V38, V38, V488, 0x140, 0x140, V38, V488, S0]
Stack pops: 3
Stack additions: [S2, S1, V50]
Exit stack: [V11, V488, V38, V38, V488, 0x140, 0x140, V38, V488, V50]

================================

Block 0xbc
[0xbc:0xce]
---
Predecessors: [0xa1]
Successors: []
---
0xbc JUMPDEST
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 SWAP1
0xc2 POP
0xc3 ADD
0xc4 SWAP2
0xc5 POP
0xc6 POP
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce RETURN
---
0xbc: JUMPDEST 
0xc3: V52 = ADD 0x140 V38
0xc7: V53 = 0x40
0xc9: V54 = M[0x40]
0xcc: V55 = SUB V52 V54
0xce: RETURN V54 V55
---
Entry stack: [V11, V488, V38, V38, V488, 0x140, 0x140, V38, V488, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd5]
---
Predecessors: [0x4c]
Successors: [0xd6, 0xda]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xcf: JUMPDEST 
0xd0: V56 = CALLVALUE
0xd1: V57 = ISZERO V56
0xd2: V58 = 0xda
0xd5: JUMPI 0xda V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xcf]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V59 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0xcf]
Successors: [0x740]
---
0xda JUMPDEST
0xdb PUSH2 0xe2
0xde PUSH2 0x740
0xe1 JUMP
---
0xda: JUMPDEST 
0xdb: V60 = 0xe2
0xde: V61 = 0x740
0xe1: JUMP 0x740
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V11, 0xe2]

================================

Block 0xe2
[0xe2:0x123]
---
Predecessors: [0x740]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 DUP3
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113 AND
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0xe2: JUMPDEST 
0xe3: V62 = 0x40
0xe5: V63 = M[0x40]
0xe8: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0xfe: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x113: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x115: M[V63] = V67
0x116: V68 = 0x20
0x118: V69 = ADD 0x20 V63
0x11c: V70 = 0x40
0x11e: V71 = M[0x40]
0x121: V72 = SUB V69 V71
0x123: RETURN V71 V72
---
Entry stack: [V11, 0xe2, V406]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe2]

================================

Block 0x124
[0x124:0x179]
---
Predecessors: [0x67]
Successors: [0x17a, 0x1b3]
---
0x124 JUMPDEST
0x125 PUSH1 0x0
0x127 DUP1
0x128 SWAP1
0x129 SLOAD
0x12a SWAP1
0x12b PUSH2 0x100
0x12e EXP
0x12f SWAP1
0x130 DIV
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d CALLER
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 EQ
0x175 ISZERO
0x176 PUSH2 0x1b3
0x179 JUMPI
---
0x124: JUMPDEST 
0x125: V73 = 0x0
0x129: V74 = S[0x0]
0x12b: V75 = 0x100
0x12e: V76 = EXP 0x100 0x0
0x130: V77 = DIV V74 0x1
0x131: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x147: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x15d: V82 = CALLER
0x15e: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x174: V85 = EQ V84 V81
0x175: V86 = ISZERO V85
0x176: V87 = 0x1b3
0x179: JUMPI 0x1b3 V86
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x17a
[0x17a:0x1b2]
---
Predecessors: [0x124]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d SWAP1
0x17e SLOAD
0x17f SWAP1
0x180 PUSH2 0x100
0x183 EXP
0x184 SWAP1
0x185 DIV
0x186 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19b AND
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 SELFDESTRUCT
---
0x17a: V88 = 0x0
0x17e: V89 = S[0x0]
0x180: V90 = 0x100
0x183: V91 = EXP 0x100 0x0
0x185: V92 = DIV V89 0x1
0x186: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x19c: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1b2: SELFDESTRUCT V96
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x1b3
[0x1b3:0x1b4]
---
Predecessors: [0x124]
Successors: [0x6f]
---
0x1b3 JUMPDEST
0x1b4 JUMP
---
0x1b3: JUMPDEST 
0x1b4: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b5
[0x1b5:0x1bc]
---
Predecessors: [0x7c]
Successors: [0x883]
---
0x1b5 JUMPDEST
0x1b6 PUSH2 0x1bd
0x1b9 PUSH2 0x883
0x1bc JUMP
---
0x1b5: JUMPDEST 
0x1b6: V97 = 0x1bd
0x1b9: V98 = 0x883
0x1bc: JUMP 0x883
---
Entry stack: [V11, 0x91, 0x4]
Stack pops: 0
Stack additions: [0x1bd]
Exit stack: [V11, 0x91, 0x4, 0x1bd]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x8a7]
Successors: [0x8ac]
---
0x1bd JUMPDEST
0x1be PUSH2 0x1c5
0x1c1 PUSH2 0x8ac
0x1c4 JUMP
---
0x1bd: JUMPDEST 
0x1be: V99 = 0x1c5
0x1c1: V100 = 0x8ac
0x1c4: JUMP 0x8ac
---
Entry stack: [V11, 0x91, 0x4, V488]
Stack pops: 0
Stack additions: [0x1c5]
Exit stack: [V11, 0x91, 0x4, V488, 0x1c5]

================================

Block 0x1c5
[0x1c5:0x220]
---
Predecessors: [0x8ac]
Successors: [0x221, 0x273]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x0
0x1c8 DUP1
0x1c9 PUSH1 0x0
0x1cb PUSH1 0x2
0x1cd PUSH1 0x0
0x1cf SWAP1
0x1d0 SLOAD
0x1d1 SWAP1
0x1d2 PUSH2 0x100
0x1d5 EXP
0x1d6 SWAP1
0x1d7 DIV
0x1d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ed AND
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 CALLER
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b EQ
0x21c DUP1
0x21d PUSH2 0x273
0x220 JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V101 = 0x0
0x1c9: V102 = 0x0
0x1cb: V103 = 0x2
0x1cd: V104 = 0x0
0x1d0: V105 = S[0x2]
0x1d2: V106 = 0x100
0x1d5: V107 = EXP 0x100 0x0
0x1d7: V108 = DIV V105 0x1
0x1d8: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1ee: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x204: V113 = CALLER
0x205: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x21b: V116 = EQ V115 V112
0x21d: V117 = 0x273
0x220: JUMPI 0x273 V116
---
Entry stack: [V11, 0x91, 0x4, V488, V500]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V116]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V116]

================================

Block 0x221
[0x221:0x272]
---
Predecessors: [0x1c5]
Successors: [0x273]
---
0x221 POP
0x222 PUSH1 0x3
0x224 PUSH1 0x0
0x226 SWAP1
0x227 SLOAD
0x228 SWAP1
0x229 PUSH2 0x100
0x22c EXP
0x22d SWAP1
0x22e DIV
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 AND
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a AND
0x25b CALLER
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 EQ
---
0x222: V118 = 0x3
0x224: V119 = 0x0
0x227: V120 = S[0x3]
0x229: V121 = 0x100
0x22c: V122 = EXP 0x100 0x0
0x22e: V123 = DIV V120 0x1
0x22f: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x245: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x25b: V128 = CALLER
0x25c: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x272: V131 = EQ V130 V127
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V116]
Stack pops: 1
Stack additions: [V131]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V131]

================================

Block 0x273
[0x273:0x278]
---
Predecessors: [0x1c5, 0x221]
Successors: [0x279, 0x2cb]
---
0x273 JUMPDEST
0x274 DUP1
0x275 PUSH2 0x2cb
0x278 JUMPI
---
0x273: JUMPDEST 
0x275: V132 = 0x2cb
0x278: JUMPI 0x2cb S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x279
[0x279:0x2ca]
---
Predecessors: [0x273]
Successors: [0x2cb]
---
0x279 POP
0x27a PUSH1 0x4
0x27c PUSH1 0x0
0x27e SWAP1
0x27f SLOAD
0x280 SWAP1
0x281 PUSH2 0x100
0x284 EXP
0x285 SWAP1
0x286 DIV
0x287 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29c AND
0x29d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b2 AND
0x2b3 CALLER
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca EQ
---
0x27a: V133 = 0x4
0x27c: V134 = 0x0
0x27f: V135 = S[0x4]
0x281: V136 = 0x100
0x284: V137 = EXP 0x100 0x0
0x286: V138 = DIV V135 0x1
0x287: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x29c: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x29d: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b2: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x2b3: V143 = CALLER
0x2b4: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2ca: V146 = EQ V145 V142
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V146]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V146]

================================

Block 0x2cb
[0x2cb:0x2d0]
---
Predecessors: [0x273, 0x279]
Successors: [0x2d1, 0x323]
---
0x2cb JUMPDEST
0x2cc DUP1
0x2cd PUSH2 0x323
0x2d0 JUMPI
---
0x2cb: JUMPDEST 
0x2cd: V147 = 0x323
0x2d0: JUMPI 0x323 S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x2d1
[0x2d1:0x322]
---
Predecessors: [0x2cb]
Successors: [0x323]
---
0x2d1 POP
0x2d2 PUSH1 0x5
0x2d4 PUSH1 0x0
0x2d6 SWAP1
0x2d7 SLOAD
0x2d8 SWAP1
0x2d9 PUSH2 0x100
0x2dc EXP
0x2dd SWAP1
0x2de DIV
0x2df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f4 AND
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b CALLER
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 EQ
---
0x2d2: V148 = 0x5
0x2d4: V149 = 0x0
0x2d7: V150 = S[0x5]
0x2d9: V151 = 0x100
0x2dc: V152 = EXP 0x100 0x0
0x2de: V153 = DIV V150 0x1
0x2df: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2f5: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x30b: V158 = CALLER
0x30c: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x322: V161 = EQ V160 V157
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V161]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V161]

================================

Block 0x323
[0x323:0x328]
---
Predecessors: [0x2cb, 0x2d1]
Successors: [0x329, 0x37b]
---
0x323 JUMPDEST
0x324 DUP1
0x325 PUSH2 0x37b
0x328 JUMPI
---
0x323: JUMPDEST 
0x325: V162 = 0x37b
0x328: JUMPI 0x37b S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x329
[0x329:0x37a]
---
Predecessors: [0x323]
Successors: [0x37b]
---
0x329 POP
0x32a PUSH1 0x6
0x32c PUSH1 0x0
0x32e SWAP1
0x32f SLOAD
0x330 SWAP1
0x331 PUSH2 0x100
0x334 EXP
0x335 SWAP1
0x336 DIV
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x362 AND
0x363 CALLER
0x364 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x379 AND
0x37a EQ
---
0x32a: V163 = 0x6
0x32c: V164 = 0x0
0x32f: V165 = S[0x6]
0x331: V166 = 0x100
0x334: V167 = EXP 0x100 0x0
0x336: V168 = DIV V165 0x1
0x337: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x34d: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x362: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x363: V173 = CALLER
0x364: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x379: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x37a: V176 = EQ V175 V172
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V176]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V176]

================================

Block 0x37b
[0x37b:0x380]
---
Predecessors: [0x323, 0x329]
Successors: [0x381, 0x3d3]
---
0x37b JUMPDEST
0x37c DUP1
0x37d PUSH2 0x3d3
0x380 JUMPI
---
0x37b: JUMPDEST 
0x37d: V177 = 0x3d3
0x380: JUMPI 0x3d3 S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x381
[0x381:0x3d2]
---
Predecessors: [0x37b]
Successors: [0x3d3]
---
0x381 POP
0x382 PUSH1 0x7
0x384 PUSH1 0x0
0x386 SWAP1
0x387 SLOAD
0x388 SWAP1
0x389 PUSH2 0x100
0x38c EXP
0x38d SWAP1
0x38e DIV
0x38f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a4 AND
0x3a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ba AND
0x3bb CALLER
0x3bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d1 AND
0x3d2 EQ
---
0x382: V178 = 0x7
0x384: V179 = 0x0
0x387: V180 = S[0x7]
0x389: V181 = 0x100
0x38c: V182 = EXP 0x100 0x0
0x38e: V183 = DIV V180 0x1
0x38f: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x3a5: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ba: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x3bb: V188 = CALLER
0x3bc: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x3d2: V191 = EQ V190 V187
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V191]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V191]

================================

Block 0x3d3
[0x3d3:0x3d8]
---
Predecessors: [0x37b, 0x381]
Successors: [0x3d9, 0x42b]
---
0x3d3 JUMPDEST
0x3d4 DUP1
0x3d5 PUSH2 0x42b
0x3d8 JUMPI
---
0x3d3: JUMPDEST 
0x3d5: V192 = 0x42b
0x3d8: JUMPI 0x42b S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x3d9
[0x3d9:0x42a]
---
Predecessors: [0x3d3]
Successors: [0x42b]
---
0x3d9 POP
0x3da PUSH1 0x8
0x3dc PUSH1 0x0
0x3de SWAP1
0x3df SLOAD
0x3e0 SWAP1
0x3e1 PUSH2 0x100
0x3e4 EXP
0x3e5 SWAP1
0x3e6 DIV
0x3e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fc AND
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 CALLER
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a EQ
---
0x3da: V193 = 0x8
0x3dc: V194 = 0x0
0x3df: V195 = S[0x8]
0x3e1: V196 = 0x100
0x3e4: V197 = EXP 0x100 0x0
0x3e6: V198 = DIV V195 0x1
0x3e7: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x3fd: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x413: V203 = CALLER
0x414: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x42a: V206 = EQ V205 V202
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V206]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V206]

================================

Block 0x42b
[0x42b:0x430]
---
Predecessors: [0x3d3, 0x3d9]
Successors: [0x431, 0x483]
---
0x42b JUMPDEST
0x42c DUP1
0x42d PUSH2 0x483
0x430 JUMPI
---
0x42b: JUMPDEST 
0x42d: V207 = 0x483
0x430: JUMPI 0x483 S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x431
[0x431:0x482]
---
Predecessors: [0x42b]
Successors: [0x483]
---
0x431 POP
0x432 PUSH1 0x9
0x434 PUSH1 0x0
0x436 SWAP1
0x437 SLOAD
0x438 SWAP1
0x439 PUSH2 0x100
0x43c EXP
0x43d SWAP1
0x43e DIV
0x43f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x454 AND
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b CALLER
0x46c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x481 AND
0x482 EQ
---
0x432: V208 = 0x9
0x434: V209 = 0x0
0x437: V210 = S[0x9]
0x439: V211 = 0x100
0x43c: V212 = EXP 0x100 0x0
0x43e: V213 = DIV V210 0x1
0x43f: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x454: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x455: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x46b: V218 = CALLER
0x46c: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x481: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x482: V221 = EQ V220 V217
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V221]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V221]

================================

Block 0x483
[0x483:0x488]
---
Predecessors: [0x42b, 0x431]
Successors: [0x489, 0x4db]
---
0x483 JUMPDEST
0x484 DUP1
0x485 PUSH2 0x4db
0x488 JUMPI
---
0x483: JUMPDEST 
0x485: V222 = 0x4db
0x488: JUMPI 0x4db S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x489
[0x489:0x4da]
---
Predecessors: [0x483]
Successors: [0x4db]
---
0x489 POP
0x48a PUSH1 0xa
0x48c PUSH1 0x0
0x48e SWAP1
0x48f SLOAD
0x490 SWAP1
0x491 PUSH2 0x100
0x494 EXP
0x495 SWAP1
0x496 DIV
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 AND
0x4c3 CALLER
0x4c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d9 AND
0x4da EQ
---
0x48a: V223 = 0xa
0x48c: V224 = 0x0
0x48f: V225 = S[0xa]
0x491: V226 = 0x100
0x494: V227 = EXP 0x100 0x0
0x496: V228 = DIV V225 0x1
0x497: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x4ad: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x4c3: V233 = CALLER
0x4c4: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d9: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x4da: V236 = EQ V235 V232
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V236]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V236]

================================

Block 0x4db
[0x4db:0x4e0]
---
Predecessors: [0x483, 0x489]
Successors: [0x4e1, 0x533]
---
0x4db JUMPDEST
0x4dc DUP1
0x4dd PUSH2 0x533
0x4e0 JUMPI
---
0x4db: JUMPDEST 
0x4dd: V237 = 0x533
0x4e0: JUMPI 0x533 S0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]

================================

Block 0x4e1
[0x4e1:0x532]
---
Predecessors: [0x4db]
Successors: [0x533]
---
0x4e1 POP
0x4e2 PUSH1 0xb
0x4e4 PUSH1 0x0
0x4e6 SWAP1
0x4e7 SLOAD
0x4e8 SWAP1
0x4e9 PUSH2 0x100
0x4ec EXP
0x4ed SWAP1
0x4ee DIV
0x4ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x504 AND
0x505 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51a AND
0x51b CALLER
0x51c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x531 AND
0x532 EQ
---
0x4e2: V238 = 0xb
0x4e4: V239 = 0x0
0x4e7: V240 = S[0xb]
0x4e9: V241 = 0x100
0x4ec: V242 = EXP 0x100 0x0
0x4ee: V243 = DIV V240 0x1
0x4ef: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x504: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x505: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x51b: V248 = CALLER
0x51c: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x531: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x532: V251 = EQ V250 V247
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V251]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, V251]

================================

Block 0x533
[0x533:0x539]
---
Predecessors: [0x4db, 0x4e1]
Successors: [0x53a, 0x53e]
---
0x533 JUMPDEST
0x534 ISZERO
0x535 ISZERO
0x536 PUSH2 0x53e
0x539 JUMPI
---
0x533: JUMPDEST 
0x534: V252 = ISZERO S0
0x535: V253 = ISZERO V252
0x536: V254 = 0x53e
0x539: JUMPI 0x53e V253
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0]

================================

Block 0x53a
[0x53a:0x53d]
---
Predecessors: [0x533]
Successors: []
---
0x53a PUSH1 0x0
0x53c DUP1
0x53d REVERT
---
0x53a: V255 = 0x0
0x53d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0]

================================

Block 0x53e
[0x53e:0x54a]
---
Predecessors: [0x533]
Successors: [0x54b, 0x54d]
---
0x53e JUMPDEST
0x53f PUSH1 0xa
0x541 PUSH1 0x40
0x543 MLOAD
0x544 DUP1
0x545 MSIZE
0x546 LT
0x547 PUSH2 0x54d
0x54a JUMPI
---
0x53e: JUMPDEST 
0x53f: V256 = 0xa
0x541: V257 = 0x40
0x543: V258 = M[0x40]
0x545: V259 = MSIZE
0x546: V260 = LT V259 V258
0x547: V261 = 0x54d
0x54a: JUMPI 0x54d V260
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xa, V258]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, 0xa, V258]

================================

Block 0x54b
[0x54b:0x54c]
---
Predecessors: [0x53e]
Successors: [0x54d]
---
0x54b POP
0x54c MSIZE
---
0x54c: V262 = MSIZE
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, 0xa, V258]
Stack pops: 1
Stack additions: [V262]
Exit stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, 0xa, V262]

================================

Block 0x54d
[0x54d:0x570]
---
Predecessors: [0x53e, 0x54b]
Successors: [0x571]
---
0x54d JUMPDEST
0x54e SWAP1
0x54f DUP1
0x550 DUP3
0x551 MSTORE
0x552 DUP1
0x553 PUSH1 0x20
0x555 MUL
0x556 PUSH1 0x20
0x558 ADD
0x559 DUP3
0x55a ADD
0x55b PUSH1 0x40
0x55d MSTORE
0x55e POP
0x55f SWAP4
0x560 POP
0x561 PUSH1 0x0
0x563 SWAP3
0x564 POP
0x565 PUSH1 0x0
0x567 SWAP2
0x568 POP
0x569 PUSH1 0x0
0x56b SWAP1
0x56c POP
0x56d PUSH1 0x0
0x56f SWAP3
0x570 POP
---
0x54d: JUMPDEST 
0x551: M[S0] = 0xa
0x553: V263 = 0x20
0x555: V264 = MUL 0x20 0xa
0x556: V265 = 0x20
0x558: V266 = ADD 0x20 0x140
0x55a: V267 = ADD S0 0x160
0x55b: V268 = 0x40
0x55d: M[0x40] = V267
0x561: V269 = 0x0
0x565: V270 = 0x0
0x569: V271 = 0x0
0x56d: V272 = 0x0
---
Entry stack: [V11, 0x91, 0x4, V488, V500, 0x0, 0x0, 0x0, 0xa, S0]
Stack pops: 6
Stack additions: [S0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x91, 0x4, V488, S0, 0x0, 0x0, 0x0]

================================

Block 0x571
[0x571:0x57a]
---
Predecessors: [0x54d, 0x5be]
Successors: [0x57b, 0x5cb]
---
0x571 JUMPDEST
0x572 PUSH1 0xa
0x574 DUP4
0x575 LT
0x576 ISZERO
0x577 PUSH2 0x5cb
0x57a JUMPI
---
0x571: JUMPDEST 
0x572: V273 = 0xa
0x575: V274 = LT S2 0xa
0x576: V275 = ISZERO V274
0x577: V276 = 0x5cb
0x57a: JUMPI 0x5cb V275
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0]

================================

Block 0x57b
[0x57b:0x589]
---
Predecessors: [0x571]
Successors: [0x58a, 0x58b]
---
0x57b PUSH2 0x595
0x57e DUP7
0x57f DUP5
0x580 PUSH1 0xa
0x582 DUP2
0x583 LT
0x584 ISZERO
0x585 ISZERO
0x586 PUSH2 0x58b
0x589 JUMPI
---
0x57b: V277 = 0x595
0x580: V278 = 0xa
0x583: V279 = LT S2 0xa
0x584: V280 = ISZERO V279
0x585: V281 = ISZERO V280
0x586: V282 = 0x58b
0x589: JUMPI 0x58b V281
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x595, S5, S2]
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0, 0x595, 0x4, S2]

================================

Block 0x58a
[0x58a:0x58a]
---
Predecessors: [0x57b]
Successors: []
---
0x58a INVALID
---
0x58a: INVALID 
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0, 0x595, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0, 0x595, 0x4, S0]

================================

Block 0x58b
[0x58b:0x594]
---
Predecessors: [0x57b]
Successors: [0x765]
---
0x58b JUMPDEST
0x58c PUSH1 0x20
0x58e MUL
0x58f ADD
0x590 CALLDATALOAD
0x591 PUSH2 0x765
0x594 JUMP
---
0x58b: JUMPDEST 
0x58c: V283 = 0x20
0x58e: V284 = MUL 0x20 S0
0x58f: V285 = ADD V284 0x4
0x590: V286 = CALLDATALOAD V285
0x591: V287 = 0x765
0x594: JUMP 0x765
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0, 0x595, 0x4, S0]
Stack pops: 2
Stack additions: [V286]
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0, 0x595, V286]

================================

Block 0x595
[0x595:0x5a0]
---
Predecessors: [0x87c]
Successors: [0x5a1, 0x5be]
---
0x595 JUMPDEST
0x596 SWAP2
0x597 POP
0x598 PUSH1 0x0
0x59a DUP3
0x59b GT
0x59c ISZERO
0x59d PUSH2 0x5be
0x5a0 JUMPI
---
0x595: JUMPDEST 
0x598: V288 = 0x0
0x59b: V289 = GT S0 0x0
0x59c: V290 = ISZERO V289
0x59d: V291 = 0x5be
0x5a0: JUMPI 0x5be V290
---
Entry stack: [V11, 0x91, 0x4, V488, S4, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V11, 0x91, 0x4, V488, S4, S3, S0, 0x0]

================================

Block 0x5a1
[0x5a1:0x5ad]
---
Predecessors: [0x595]
Successors: [0x5ae, 0x5af]
---
0x5a1 DUP2
0x5a2 DUP5
0x5a3 DUP5
0x5a4 DUP2
0x5a5 MLOAD
0x5a6 DUP2
0x5a7 LT
0x5a8 ISZERO
0x5a9 ISZERO
0x5aa PUSH2 0x5af
0x5ad JUMPI
---
0x5a5: V292 = M[S3]
0x5a7: V293 = LT S2 V292
0x5a8: V294 = ISZERO V293
0x5a9: V295 = ISZERO V294
0x5aa: V296 = 0x5af
0x5ad: JUMPI 0x5af V295
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, S3, S2]
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0, S1, S3, S2]

================================

Block 0x5ae
[0x5ae:0x5ae]
---
Predecessors: [0x5a1]
Successors: []
---
0x5ae INVALID
---
0x5ae: INVALID 
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0, S2, S1, S0]

================================

Block 0x5af
[0x5af:0x5bd]
---
Predecessors: [0x5a1]
Successors: [0x5be]
---
0x5af JUMPDEST
0x5b0 SWAP1
0x5b1 PUSH1 0x20
0x5b3 ADD
0x5b4 SWAP1
0x5b5 PUSH1 0x20
0x5b7 MUL
0x5b8 ADD
0x5b9 DUP2
0x5ba DUP2
0x5bb MSTORE
0x5bc POP
0x5bd POP
---
0x5af: JUMPDEST 
0x5b1: V297 = 0x20
0x5b3: V298 = ADD 0x20 S1
0x5b5: V299 = 0x20
0x5b7: V300 = MUL 0x20 S0
0x5b8: V301 = ADD V300 V298
0x5bb: M[V301] = S2
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, 0x0]

================================

Block 0x5be
[0x5be:0x5ca]
---
Predecessors: [0x595, 0x5af]
Successors: [0x571]
---
0x5be JUMPDEST
0x5bf DUP3
0x5c0 DUP1
0x5c1 PUSH1 0x1
0x5c3 ADD
0x5c4 SWAP4
0x5c5 POP
0x5c6 POP
0x5c7 PUSH2 0x571
0x5ca JUMP
---
0x5be: JUMPDEST 
0x5c1: V302 = 0x1
0x5c3: V303 = ADD 0x1 S2
0x5c7: V304 = 0x571
0x5ca: JUMP 0x571
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V303, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S3, V303, S1, 0x0]

================================

Block 0x5cb
[0x5cb:0x5cf]
---
Predecessors: [0x571]
Successors: [0x5d0]
---
0x5cb JUMPDEST
0x5cc PUSH1 0x0
0x5ce SWAP3
0x5cf POP
---
0x5cb: JUMPDEST 
0x5cc: V305 = 0x0
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S3, 0x0, S1, 0x0]

================================

Block 0x5d0
[0x5d0:0x5d9]
---
Predecessors: [0x5cb, 0x727]
Successors: [0x5da, 0x734]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0xa
0x5d3 DUP4
0x5d4 LT
0x5d5 ISZERO
0x5d6 PUSH2 0x734
0x5d9 JUMPI
---
0x5d0: JUMPDEST 
0x5d1: V306 = 0xa
0x5d4: V307 = LT S2 0xa
0x5d5: V308 = ISZERO V307
0x5d6: V309 = 0x734
0x5d9: JUMPI 0x734 V308
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0]

================================

Block 0x5da
[0x5da:0x5e7]
---
Predecessors: [0x5d0]
Successors: [0x5e8, 0x5e9]
---
0x5da PUSH1 0x0
0x5dc DUP5
0x5dd DUP5
0x5de DUP2
0x5df MLOAD
0x5e0 DUP2
0x5e1 LT
0x5e2 ISZERO
0x5e3 ISZERO
0x5e4 PUSH2 0x5e9
0x5e7 JUMPI
---
0x5da: V310 = 0x0
0x5df: V311 = M[S3]
0x5e1: V312 = LT S2 V311
0x5e2: V313 = ISZERO V312
0x5e3: V314 = ISZERO V313
0x5e4: V315 = 0x5e9
0x5e7: JUMPI 0x5e9 V314
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, S3, S2]
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0, 0x0, S3, S2]

================================

Block 0x5e8
[0x5e8:0x5e8]
---
Predecessors: [0x5da]
Successors: []
---
0x5e8 INVALID
---
0x5e8: INVALID 
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, S3, 0x0, S1, S0]

================================

Block 0x5e9
[0x5e9:0x5f9]
---
Predecessors: [0x5da]
Successors: [0x5fa, 0x727]
---
0x5e9 JUMPDEST
0x5ea SWAP1
0x5eb PUSH1 0x20
0x5ed ADD
0x5ee SWAP1
0x5ef PUSH1 0x20
0x5f1 MUL
0x5f2 ADD
0x5f3 MLOAD
0x5f4 GT
0x5f5 ISZERO
0x5f6 PUSH2 0x727
0x5f9 JUMPI
---
0x5e9: JUMPDEST 
0x5eb: V316 = 0x20
0x5ed: V317 = ADD 0x20 S1
0x5ef: V318 = 0x20
0x5f1: V319 = MUL 0x20 S0
0x5f2: V320 = ADD V319 V317
0x5f3: V321 = M[V320]
0x5f4: V322 = GT V321 0x0
0x5f5: V323 = ISZERO V322
0x5f6: V324 = 0x727
0x5f9: JUMPI 0x727 V323
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, S3]

================================

Block 0x5fa
[0x5fa:0x694]
---
Predecessors: [0x5e9]
Successors: [0x695, 0x696]
---
0x5fa PUSH1 0x1
0x5fc PUSH1 0x0
0x5fe SWAP1
0x5ff SLOAD
0x600 SWAP1
0x601 PUSH2 0x100
0x604 EXP
0x605 SWAP1
0x606 DIV
0x607 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61c AND
0x61d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x632 AND
0x633 PUSH1 0x40
0x635 MLOAD
0x636 DUP1
0x637 DUP1
0x638 PUSH32 0x6769766542697274682875696e74323536290000000000000000000000000000
0x659 DUP2
0x65a MSTORE
0x65b POP
0x65c PUSH1 0x12
0x65e ADD
0x65f SWAP1
0x660 POP
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 SWAP2
0x666 SUB
0x667 SWAP1
0x668 SHA3
0x669 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x687 SWAP1
0x688 DIV
0x689 DUP6
0x68a DUP6
0x68b DUP2
0x68c MLOAD
0x68d DUP2
0x68e LT
0x68f ISZERO
0x690 ISZERO
0x691 PUSH2 0x696
0x694 JUMPI
---
0x5fa: V325 = 0x1
0x5fc: V326 = 0x0
0x5ff: V327 = S[0x1]
0x601: V328 = 0x100
0x604: V329 = EXP 0x100 0x0
0x606: V330 = DIV V327 0x1
0x607: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x61c: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x61d: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x632: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x633: V335 = 0x40
0x635: V336 = M[0x40]
0x638: V337 = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x65a: M[V336] = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x65c: V338 = 0x12
0x65e: V339 = ADD 0x12 V336
0x661: V340 = 0x40
0x663: V341 = M[0x40]
0x666: V342 = SUB V339 V341
0x668: V343 = SHA3 V341 V342
0x669: V344 = 0x100000000000000000000000000000000000000000000000000000000
0x688: V345 = DIV V343 0x100000000000000000000000000000000000000000000000000000000
0x68c: V346 = M[S3]
0x68e: V347 = LT S2 V346
0x68f: V348 = ISZERO V347
0x690: V349 = ISZERO V348
0x691: V350 = 0x696
0x694: JUMPI 0x696 V349
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V334, V345, S3, S2]
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0, V334, V345, S3, S2]

================================

Block 0x695
[0x695:0x695]
---
Predecessors: [0x5fa]
Successors: []
---
0x695 INVALID
---
0x695: INVALID 
---
Entry stack: [V11, 0x91, 0x4, V488, S7, S6, S5, S4, V334, V345, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S7, S6, S5, S4, V334, V345, S1, S0]

================================

Block 0x696
[0x696:0x6f6]
---
Predecessors: [0x5fa]
Successors: [0x6f7, 0x726]
---
0x696 JUMPDEST
0x697 SWAP1
0x698 PUSH1 0x20
0x69a ADD
0x69b SWAP1
0x69c PUSH1 0x20
0x69e MUL
0x69f ADD
0x6a0 MLOAD
0x6a1 PUSH1 0x40
0x6a3 MLOAD
0x6a4 DUP3
0x6a5 PUSH4 0xffffffff
0x6aa AND
0x6ab PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6c9 MUL
0x6ca DUP2
0x6cb MSTORE
0x6cc PUSH1 0x4
0x6ce ADD
0x6cf DUP1
0x6d0 DUP3
0x6d1 DUP2
0x6d2 MSTORE
0x6d3 PUSH1 0x20
0x6d5 ADD
0x6d6 SWAP2
0x6d7 POP
0x6d8 POP
0x6d9 PUSH1 0x0
0x6db PUSH1 0x40
0x6dd MLOAD
0x6de DUP1
0x6df DUP4
0x6e0 SUB
0x6e1 DUP2
0x6e2 PUSH1 0x0
0x6e4 DUP8
0x6e5 PUSH2 0x646e
0x6e8 GAS
0x6e9 SUB
0x6ea CALL
0x6eb SWAP3
0x6ec POP
0x6ed POP
0x6ee POP
0x6ef SWAP1
0x6f0 POP
0x6f1 DUP1
0x6f2 ISZERO
0x6f3 PUSH2 0x726
0x6f6 JUMPI
---
0x696: JUMPDEST 
0x698: V351 = 0x20
0x69a: V352 = ADD 0x20 S1
0x69c: V353 = 0x20
0x69e: V354 = MUL 0x20 S0
0x69f: V355 = ADD V354 V352
0x6a0: V356 = M[V355]
0x6a1: V357 = 0x40
0x6a3: V358 = M[0x40]
0x6a5: V359 = 0xffffffff
0x6aa: V360 = AND 0xffffffff V345
0x6ab: V361 = 0x100000000000000000000000000000000000000000000000000000000
0x6c9: V362 = MUL 0x100000000000000000000000000000000000000000000000000000000 V360
0x6cb: M[V358] = V362
0x6cc: V363 = 0x4
0x6ce: V364 = ADD 0x4 V358
0x6d2: M[V364] = V356
0x6d3: V365 = 0x20
0x6d5: V366 = ADD 0x20 V364
0x6d9: V367 = 0x0
0x6db: V368 = 0x40
0x6dd: V369 = M[0x40]
0x6e0: V370 = SUB V366 V369
0x6e2: V371 = 0x0
0x6e5: V372 = 0x646e
0x6e8: V373 = GAS
0x6e9: V374 = SUB V373 0x646e
0x6ea: V375 = CALL V374 V334 0x0 V369 V370 V369 0x0
0x6f2: V376 = ISZERO V375
0x6f3: V377 = 0x726
0x6f6: JUMPI 0x726 V376
---
Entry stack: [V11, 0x91, 0x4, V488, S7, S6, S5, S4, V334, V345, S1, S0]
Stack pops: 5
Stack additions: [V375]
Exit stack: [V11, 0x91, 0x4, V488, S7, S6, S5, V375]

================================

Block 0x6f7
[0x6f7:0x702]
---
Predecessors: [0x696]
Successors: [0x703, 0x704]
---
0x6f7 DUP4
0x6f8 DUP4
0x6f9 DUP2
0x6fa MLOAD
0x6fb DUP2
0x6fc LT
0x6fd ISZERO
0x6fe ISZERO
0x6ff PUSH2 0x704
0x702 JUMPI
---
0x6fa: V378 = M[S3]
0x6fc: V379 = LT S2 V378
0x6fd: V380 = ISZERO V379
0x6fe: V381 = ISZERO V380
0x6ff: V382 = 0x704
0x702: JUMPI 0x704 V381
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, V375]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S2]
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, V375, S3, S2]

================================

Block 0x703
[0x703:0x703]
---
Predecessors: [0x6f7]
Successors: []
---
0x703 INVALID
---
0x703: INVALID 
---
Entry stack: [V11, 0x91, 0x4, V488, S5, S4, S3, V375, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S5, S4, S3, V375, S1, S0]

================================

Block 0x704
[0x704:0x71a]
---
Predecessors: [0x6f7]
Successors: [0x71b, 0x71c]
---
0x704 JUMPDEST
0x705 SWAP1
0x706 PUSH1 0x20
0x708 ADD
0x709 SWAP1
0x70a PUSH1 0x20
0x70c MUL
0x70d ADD
0x70e MLOAD
0x70f DUP6
0x710 DUP5
0x711 PUSH1 0xa
0x713 DUP2
0x714 LT
0x715 ISZERO
0x716 ISZERO
0x717 PUSH2 0x71c
0x71a JUMPI
---
0x704: JUMPDEST 
0x706: V383 = 0x20
0x708: V384 = ADD 0x20 S1
0x70a: V385 = 0x20
0x70c: V386 = MUL 0x20 S0
0x70d: V387 = ADD V386 V384
0x70e: V388 = M[V387]
0x711: V389 = 0xa
0x714: V390 = LT S4 0xa
0x715: V391 = ISZERO V390
0x716: V392 = ISZERO V391
0x717: V393 = 0x71c
0x71a: JUMPI 0x71c V392
---
Entry stack: [V11, 0x91, 0x4, V488, S5, S4, S3, V375, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V388, S6, S4]
Exit stack: [V11, 0x91, 0x4, V488, S5, S4, S3, V375, V388, V488, S4]

================================

Block 0x71b
[0x71b:0x71b]
---
Predecessors: [0x704]
Successors: []
---
0x71b INVALID
---
0x71b: INVALID 
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, V375, V388, V488, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, V375, V388, V488, S0]

================================

Block 0x71c
[0x71c:0x725]
---
Predecessors: [0x704]
Successors: [0x726]
---
0x71c JUMPDEST
0x71d PUSH1 0x20
0x71f MUL
0x720 ADD
0x721 DUP2
0x722 DUP2
0x723 MSTORE
0x724 POP
0x725 POP
---
0x71c: JUMPDEST 
0x71d: V394 = 0x20
0x71f: V395 = MUL 0x20 S0
0x720: V396 = ADD V395 V488
0x723: M[V396] = V388
---
Entry stack: [V11, 0x91, 0x4, V488, S6, S5, S4, V375, V388, V488, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S6, S5, S4, V375]

================================

Block 0x726
[0x726:0x726]
---
Predecessors: [0x696, 0x71c]
Successors: [0x727]
---
0x726 JUMPDEST
---
0x726: JUMPDEST 
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, V375]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S3, S2, S1, V375]

================================

Block 0x727
[0x727:0x733]
---
Predecessors: [0x5e9, 0x726]
Successors: [0x5d0]
---
0x727 JUMPDEST
0x728 DUP3
0x729 DUP1
0x72a PUSH1 0x1
0x72c ADD
0x72d SWAP4
0x72e POP
0x72f POP
0x730 PUSH2 0x5d0
0x733 JUMP
---
0x727: JUMPDEST 
0x72a: V397 = 0x1
0x72c: V398 = ADD 0x1 S2
0x730: V399 = 0x5d0
0x733: JUMP 0x5d0
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V398, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S3, V398, S1, S0]

================================

Block 0x734
[0x734:0x73f]
---
Predecessors: [0x5d0]
Successors: [0x91]
---
0x734 JUMPDEST
0x735 DUP5
0x736 SWAP5
0x737 POP
0x738 POP
0x739 POP
0x73a POP
0x73b POP
0x73c SWAP2
0x73d SWAP1
0x73e POP
0x73f JUMP
---
0x734: JUMPDEST 
0x73f: JUMP 0x91
---
Entry stack: [V11, 0x91, 0x4, V488, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S4]
Exit stack: [V11, V488]

================================

Block 0x740
[0x740:0x764]
---
Predecessors: [0xda]
Successors: [0xe2]
---
0x740 JUMPDEST
0x741 PUSH1 0x0
0x743 DUP1
0x744 SWAP1
0x745 SLOAD
0x746 SWAP1
0x747 PUSH2 0x100
0x74a EXP
0x74b SWAP1
0x74c DIV
0x74d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x762 AND
0x763 DUP2
0x764 JUMP
---
0x740: JUMPDEST 
0x741: V400 = 0x0
0x745: V401 = S[0x0]
0x747: V402 = 0x100
0x74a: V403 = EXP 0x100 0x0
0x74c: V404 = DIV V401 0x1
0x74d: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x762: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x764: JUMP 0xe2
---
Entry stack: [V11, 0xe2]
Stack pops: 1
Stack additions: [S0, V406]
Exit stack: [V11, 0xe2, V406]

================================

Block 0x765
[0x765:0x772]
---
Predecessors: [0x58b]
Successors: [0x773, 0x877]
---
0x765 JUMPDEST
0x766 PUSH1 0x0
0x768 DUP1
0x769 PUSH1 0x0
0x76b DUP1
0x76c DUP5
0x76d GT
0x76e ISZERO
0x76f PUSH2 0x877
0x772 JUMPI
---
0x765: JUMPDEST 
0x766: V407 = 0x0
0x769: V408 = 0x0
0x76d: V409 = GT V286 0x0
0x76e: V410 = ISZERO V409
0x76f: V411 = 0x877
0x772: JUMPI 0x877 V410
---
Entry stack: [V11, 0x91, 0x4, V488, S5, S4, S3, 0x0, 0x595, V286]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x91, 0x4, V488, S5, S4, S3, 0x0, 0x595, V286, 0x0, 0x0, 0x0]

================================

Block 0x773
[0x773:0x787]
---
Predecessors: [0x765]
Successors: [0x788, 0x789]
---
0x773 PUSH3 0x49e9e0
0x777 PUSH3 0xc990c
0x77b PUSH3 0xde470c
0x77f DUP7
0x780 SUB
0x781 DUP2
0x782 ISZERO
0x783 ISZERO
0x784 PUSH2 0x789
0x787 JUMPI
---
0x773: V412 = 0x49e9e0
0x777: V413 = 0xc990c
0x77b: V414 = 0xde470c
0x780: V415 = SUB V286 0xde470c
0x782: V416 = ISZERO 0xc990c
0x783: V417 = ISZERO 0x0
0x784: V418 = 0x789
0x787: JUMPI 0x789 0x1
---
Entry stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x49e9e0, 0xc990c, V415]
Exit stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, 0x0, 0x0, 0x0, 0x49e9e0, 0xc990c, V415]

================================

Block 0x788
[0x788:0x788]
---
Predecessors: [0x773]
Successors: []
---
0x788 INVALID
---
0x788: INVALID 
---
Entry stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, 0x0, 0x0, 0x49e9e0, 0xc990c, V415]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, 0x0, 0x0, 0x49e9e0, 0xc990c, V415]

================================

Block 0x789
[0x789:0x835]
---
Predecessors: [0x773]
Successors: [0x836, 0x83a]
---
0x789 JUMPDEST
0x78a DIV
0x78b ADD
0x78c SWAP2
0x78d POP
0x78e PUSH3 0xc990c
0x792 PUSH3 0x49e9e0
0x796 DUP4
0x797 SUB
0x798 MUL
0x799 PUSH3 0xde470c
0x79d DUP6
0x79e SUB
0x79f SUB
0x7a0 SWAP1
0x7a1 POP
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0x0
0x7a6 SWAP1
0x7a7 SLOAD
0x7a8 SWAP1
0x7a9 PUSH2 0x100
0x7ac EXP
0x7ad SWAP1
0x7ae DIV
0x7af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c4 AND
0x7c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7da AND
0x7db PUSH4 0x1940a936
0x7e0 DUP3
0x7e1 PUSH1 0x0
0x7e3 PUSH1 0x40
0x7e5 MLOAD
0x7e6 PUSH1 0x20
0x7e8 ADD
0x7e9 MSTORE
0x7ea PUSH1 0x40
0x7ec MLOAD
0x7ed DUP3
0x7ee PUSH4 0xffffffff
0x7f3 AND
0x7f4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x812 MUL
0x813 DUP2
0x814 MSTORE
0x815 PUSH1 0x4
0x817 ADD
0x818 DUP1
0x819 DUP3
0x81a DUP2
0x81b MSTORE
0x81c PUSH1 0x20
0x81e ADD
0x81f SWAP2
0x820 POP
0x821 POP
0x822 PUSH1 0x20
0x824 PUSH1 0x40
0x826 MLOAD
0x827 DUP1
0x828 DUP4
0x829 SUB
0x82a DUP2
0x82b PUSH1 0x0
0x82d DUP8
0x82e DUP1
0x82f EXTCODESIZE
0x830 ISZERO
0x831 ISZERO
0x832 PUSH2 0x83a
0x835 JUMPI
---
0x789: JUMPDEST 
0x78a: V419 = DIV V415 0xc990c
0x78b: V420 = ADD V419 0x49e9e0
0x78e: V421 = 0xc990c
0x792: V422 = 0x49e9e0
0x797: V423 = SUB V420 0x49e9e0
0x798: V424 = MUL V423 0xc990c
0x799: V425 = 0xde470c
0x79e: V426 = SUB V286 0xde470c
0x79f: V427 = SUB V426 V424
0x7a2: V428 = 0x1
0x7a4: V429 = 0x0
0x7a7: V430 = S[0x1]
0x7a9: V431 = 0x100
0x7ac: V432 = EXP 0x100 0x0
0x7ae: V433 = DIV V430 0x1
0x7af: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c4: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x7c5: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x7da: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x7db: V438 = 0x1940a936
0x7e1: V439 = 0x0
0x7e3: V440 = 0x40
0x7e5: V441 = M[0x40]
0x7e6: V442 = 0x20
0x7e8: V443 = ADD 0x20 V441
0x7e9: M[V443] = 0x0
0x7ea: V444 = 0x40
0x7ec: V445 = M[0x40]
0x7ee: V446 = 0xffffffff
0x7f3: V447 = AND 0xffffffff 0x1940a936
0x7f4: V448 = 0x100000000000000000000000000000000000000000000000000000000
0x812: V449 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1940a936
0x814: M[V445] = 0x1940a93600000000000000000000000000000000000000000000000000000000
0x815: V450 = 0x4
0x817: V451 = ADD 0x4 V445
0x81b: M[V451] = V427
0x81c: V452 = 0x20
0x81e: V453 = ADD 0x20 V451
0x822: V454 = 0x20
0x824: V455 = 0x40
0x826: V456 = M[0x40]
0x829: V457 = SUB V453 V456
0x82b: V458 = 0x0
0x82f: V459 = EXTCODESIZE V437
0x830: V460 = ISZERO V459
0x831: V461 = ISZERO V460
0x832: V462 = 0x83a
0x835: JUMPI 0x83a V461
---
Entry stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, 0x0, 0x0, 0x49e9e0, 0xc990c, V415]
Stack pops: 7
Stack additions: [S6, S5, V420, V427, V437, 0x1940a936, V453, 0x20, V456, V457, V456, 0x0, V437]
Exit stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453, 0x20, V456, V457, V456, 0x0, V437]

================================

Block 0x836
[0x836:0x839]
---
Predecessors: [0x789]
Successors: []
---
0x836 PUSH1 0x0
0x838 DUP1
0x839 REVERT
---
0x836: V463 = 0x0
0x839: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91, 0x4, V488, S17, S16, S15, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453, 0x20, V456, V457, V456, 0x0, V437]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S17, S16, S15, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453, 0x20, V456, V457, V456, 0x0, V437]

================================

Block 0x83a
[0x83a:0x846]
---
Predecessors: [0x789]
Successors: [0x847, 0x84b]
---
0x83a JUMPDEST
0x83b PUSH2 0x2c6
0x83e GAS
0x83f SUB
0x840 CALL
0x841 ISZERO
0x842 ISZERO
0x843 PUSH2 0x84b
0x846 JUMPI
---
0x83a: JUMPDEST 
0x83b: V464 = 0x2c6
0x83e: V465 = GAS
0x83f: V466 = SUB V465 0x2c6
0x840: V467 = CALL V466 V437 0x0 V456 V457 V456 0x20
0x841: V468 = ISZERO V467
0x842: V469 = ISZERO V468
0x843: V470 = 0x84b
0x846: JUMPI 0x84b V469
---
Entry stack: [V11, 0x91, 0x4, V488, S17, S16, S15, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453, 0x20, V456, V457, V456, 0x0, V437]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S17, S16, S15, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453]

================================

Block 0x847
[0x847:0x84a]
---
Predecessors: [0x83a]
Successors: []
---
0x847 PUSH1 0x0
0x849 DUP1
0x84a REVERT
---
0x847: V471 = 0x0
0x84a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453]

================================

Block 0x84b
[0x84b:0x85b]
---
Predecessors: [0x83a]
Successors: [0x85c, 0x861]
---
0x84b JUMPDEST
0x84c POP
0x84d POP
0x84e POP
0x84f PUSH1 0x40
0x851 MLOAD
0x852 DUP1
0x853 MLOAD
0x854 SWAP1
0x855 POP
0x856 DUP1
0x857 ISZERO
0x858 PUSH2 0x861
0x85b JUMPI
---
0x84b: JUMPDEST 
0x84f: V472 = 0x40
0x851: V473 = M[0x40]
0x853: V474 = M[V473]
0x857: V475 = ISZERO V474
0x858: V476 = 0x861
0x85b: JUMPI 0x861 V475
---
Entry stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, V420, V427, V437, 0x1940a936, V453]
Stack pops: 3
Stack additions: [V474]
Exit stack: [V11, 0x91, 0x4, V488, S11, S10, S9, 0x0, 0x595, V286, 0x0, V420, V427, V474]

================================

Block 0x85c
[0x85c:0x860]
---
Predecessors: [0x84b]
Successors: [0x861]
---
0x85c POP
0x85d NUMBER
0x85e DUP3
0x85f GT
0x860 ISZERO
---
0x85d: V477 = NUMBER
0x85f: V478 = GT V420 V477
0x860: V479 = ISZERO V478
---
Entry stack: [V11, 0x91, 0x4, V488, S9, S8, S7, 0x0, 0x595, V286, 0x0, V420, V427, V474]
Stack pops: 3
Stack additions: [S2, S1, V479]
Exit stack: [V11, 0x91, 0x4, V488, S9, S8, S7, 0x0, 0x595, V286, 0x0, V420, V427, V479]

================================

Block 0x861
[0x861:0x866]
---
Predecessors: [0x84b, 0x85c]
Successors: [0x867, 0x86e]
---
0x861 JUMPDEST
0x862 ISZERO
0x863 PUSH2 0x86e
0x866 JUMPI
---
0x861: JUMPDEST 
0x862: V480 = ISZERO S0
0x863: V481 = 0x86e
0x866: JUMPI 0x86e V480
---
Entry stack: [V11, 0x91, 0x4, V488, S9, S8, S7, 0x0, 0x595, V286, 0x0, V420, V427, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x91, 0x4, V488, S9, S8, S7, 0x0, 0x595, V286, 0x0, V420, V427]

================================

Block 0x867
[0x867:0x86d]
---
Predecessors: [0x861]
Successors: [0x87c]
---
0x867 DUP1
0x868 SWAP3
0x869 POP
0x86a PUSH2 0x87c
0x86d JUMP
---
0x86a: V482 = 0x87c
0x86d: JUMP 0x87c
---
Entry stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, 0x0, V420, V427]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, V427, V420, V427]

================================

Block 0x86e
[0x86e:0x876]
---
Predecessors: [0x861]
Successors: [0x87c]
---
0x86e JUMPDEST
0x86f PUSH1 0x0
0x871 SWAP3
0x872 POP
0x873 PUSH2 0x87c
0x876 JUMP
---
0x86e: JUMPDEST 
0x86f: V483 = 0x0
0x873: V484 = 0x87c
0x876: JUMP 0x87c
---
Entry stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, 0x0, V420, V427]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, 0x0, V420, V427]

================================

Block 0x877
[0x877:0x87b]
---
Predecessors: [0x765]
Successors: [0x87c]
---
0x877 JUMPDEST
0x878 PUSH1 0x0
0x87a SWAP3
0x87b POP
---
0x877: JUMPDEST 
0x878: V485 = 0x0
---
Entry stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, 0x0, 0x0, 0x0]

================================

Block 0x87c
[0x87c:0x882]
---
Predecessors: [0x867, 0x86e, 0x877]
Successors: [0x595]
---
0x87c JUMPDEST
0x87d POP
0x87e POP
0x87f SWAP2
0x880 SWAP1
0x881 POP
0x882 JUMP
---
0x87c: JUMPDEST 
0x882: JUMP 0x595
---
Entry stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, 0x595, V286, S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V11, 0x91, 0x4, V488, S8, S7, S6, 0x0, S2]

================================

Block 0x883
[0x883:0x893]
---
Predecessors: [0x1b5]
Successors: [0x894]
---
0x883 JUMPDEST
0x884 PUSH2 0x140
0x887 PUSH1 0x40
0x889 MLOAD
0x88a SWAP1
0x88b DUP2
0x88c ADD
0x88d PUSH1 0x40
0x88f MSTORE
0x890 DUP1
0x891 PUSH1 0xa
0x893 SWAP1
---
0x883: JUMPDEST 
0x884: V486 = 0x140
0x887: V487 = 0x40
0x889: V488 = M[0x40]
0x88c: V489 = ADD V488 0x140
0x88d: V490 = 0x40
0x88f: M[0x40] = V489
0x891: V491 = 0xa
---
Entry stack: [V11, 0x91, 0x4, 0x1bd]
Stack pops: 0
Stack additions: [V488, 0xa, V488]
Exit stack: [V11, 0x91, 0x4, 0x1bd, V488, 0xa, V488]

================================

Block 0x894
[0x894:0x8a6]
---
Predecessors: [0x883, 0x894]
Successors: [0x894, 0x8a7]
---
0x894 JUMPDEST
0x895 PUSH1 0x0
0x897 DUP2
0x898 MSTORE
0x899 PUSH1 0x20
0x89b ADD
0x89c SWAP1
0x89d PUSH1 0x1
0x89f SWAP1
0x8a0 SUB
0x8a1 SWAP1
0x8a2 DUP2
0x8a3 PUSH2 0x894
0x8a6 JUMPI
---
0x894: JUMPDEST 
0x895: V492 = 0x0
0x898: M[S0] = 0x0
0x899: V493 = 0x20
0x89b: V494 = ADD 0x20 S0
0x89d: V495 = 0x1
0x8a0: V496 = SUB S1 0x1
0x8a3: V497 = 0x894
0x8a6: JUMPI 0x894 V496
---
Entry stack: [V11, 0x91, 0x4, 0x1bd, V488, S1, S0]
Stack pops: 2
Stack additions: [V496, V494]
Exit stack: [V11, 0x91, 0x4, 0x1bd, V488, V496, V494]

================================

Block 0x8a7
[0x8a7:0x8ab]
---
Predecessors: [0x894]
Successors: [0x1bd]
---
0x8a7 SWAP1
0x8a8 POP
0x8a9 POP
0x8aa SWAP1
0x8ab JUMP
---
0x8ab: JUMP 0x1bd
---
Entry stack: [V11, 0x91, 0x4, 0x1bd, V488, V496, V494]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V11, 0x91, 0x4, V488]

================================

Block 0x8ac
[0x8ac:0x8bf]
---
Predecessors: [0x1bd]
Successors: [0x1c5]
---
0x8ac JUMPDEST
0x8ad PUSH1 0x20
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 SWAP1
0x8b3 DUP2
0x8b4 ADD
0x8b5 PUSH1 0x40
0x8b7 MSTORE
0x8b8 DUP1
0x8b9 PUSH1 0x0
0x8bb DUP2
0x8bc MSTORE
0x8bd POP
0x8be SWAP1
0x8bf JUMP
---
0x8ac: JUMPDEST 
0x8ad: V498 = 0x20
0x8af: V499 = 0x40
0x8b1: V500 = M[0x40]
0x8b4: V501 = ADD V500 0x20
0x8b5: V502 = 0x40
0x8b7: M[0x40] = V501
0x8b9: V503 = 0x0
0x8bc: M[V500] = 0x0
0x8bf: JUMP 0x1c5
---
Entry stack: [V11, 0x91, 0x4, V488, 0x1c5]
Stack pops: 1
Stack additions: [V500]
Exit stack: [V11, 0x91, 0x4, V488, V500]

================================

Block 0x8c0
[0x8c0:0x8eb]
---
Predecessors: []
Successors: []
---
0x8c0 STOP
0x8c1 LOG1
0x8c2 PUSH6 0x627a7a723058
0x8c9 SHA3
0x8ca MISSING 0x26
0x8cb DUP9
0x8cc MISSING 0xbd
0x8cd MISSING 0xc
0x8ce MISSING 0xdf
0x8cf MISSING 0xed
0x8d0 DUP15
0x8d1 PUSH24 0x4789d0d37309a5fe8710c1e27e83e85426636a3c39e665f
0x8ea STOP
0x8eb MISSING 0x29
---
0x8c0: STOP 
0x8c1: LOG S0 S1 S2
0x8c2: V504 = 0x627a7a723058
0x8c9: V505 = SHA3 0x627a7a723058 S3
0x8ca: MISSING 0x26
0x8cc: MISSING 0xbd
0x8cd: MISSING 0xc
0x8ce: MISSING 0xdf
0x8cf: MISSING 0xed
0x8d1: V506 = 0x4789d0d37309a5fe8710c1e27e83e85426636a3c39e665f
0x8ea: STOP 
0x8eb: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V505, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x4789d0d37309a5fe8710c1e27e83e85426636a3c39e665f, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x124, 0x17a, 0x1b3

Function 1:
Public function signature: 0x74523e77
Entry block: 0x71
Exit block: 0x71b
Body: 0x71, 0x78, 0x7c, 0x91, 0xa1, 0xaa, 0xbc, 0x1b5, 0x1bd, 0x1c5, 0x221, 0x273, 0x279, 0x2cb, 0x2d1, 0x323, 0x329, 0x37b, 0x381, 0x3d3, 0x3d9, 0x42b, 0x431, 0x483, 0x489, 0x4db, 0x4e1, 0x533, 0x53a, 0x53e, 0x54b, 0x54d, 0x571, 0x57b, 0x58a, 0x58b, 0x595, 0x5a1, 0x5ae, 0x5af, 0x5be, 0x5cb, 0x5d0, 0x5da, 0x5e8, 0x5e9, 0x5fa, 0x695, 0x696, 0x6f7, 0x703, 0x704, 0x71b, 0x71c, 0x726, 0x727, 0x734, 0x765, 0x773, 0x788, 0x789, 0x836, 0x83a, 0x847, 0x84b, 0x85c, 0x861, 0x867, 0x86e, 0x877, 0x87c, 0x883, 0x894, 0x8a7, 0x8ac

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xcf
Exit block: 0xe2
Body: 0xcf, 0xd6, 0xda, 0xe2, 0x740

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

