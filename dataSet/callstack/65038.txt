Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x6e]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x7bc6fad
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x6e
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x7bc6fad
0x1a: V12 = EQ V10 0x7bc6fad
0x1b: V13 = 0x6e
0x1e: JUMPI 0x6e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x156]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0x156
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0x156
0x29: JUMPI 0x156 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x199]
---
0x2a DUP1
0x2b PUSH4 0x27e235e3
0x30 EQ
0x31 PUSH2 0x199
0x34 JUMPI
---
0x2b: V17 = 0x27e235e3
0x30: V18 = EQ 0x27e235e3 V10
0x31: V19 = 0x199
0x34: JUMPI 0x199 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x1b1]
---
0x35 DUP1
0x36 PUSH4 0x893d20e8
0x3b EQ
0x3c PUSH2 0x1b1
0x3f JUMPI
---
0x36: V20 = 0x893d20e8
0x3b: V21 = EQ 0x893d20e8 V10
0x3c: V22 = 0x1b1
0x3f: JUMPI 0x1b1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x1c4]
---
0x40 DUP1
0x41 PUSH4 0xab470f05
0x46 EQ
0x47 PUSH2 0x1c4
0x4a JUMPI
---
0x41: V23 = 0xab470f05
0x46: V24 = EQ 0xab470f05 V10
0x47: V25 = 0x1c4
0x4a: JUMPI 0x1c4 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1d8]
---
0x4b DUP1
0x4c PUSH4 0xbeb92f55
0x51 EQ
0x52 PUSH2 0x1d8
0x55 JUMPI
---
0x4c: V26 = 0xbeb92f55
0x51: V27 = EQ 0xbeb92f55 V10
0x52: V28 = 0x1d8
0x55: JUMPI 0x1d8 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x21c]
---
0x56 DUP1
0x57 PUSH4 0xec2ac54e
0x5c EQ
0x5d PUSH2 0x21c
0x60 JUMPI
---
0x57: V29 = 0xec2ac54e
0x5c: V30 = EQ 0xec2ac54e V10
0x5d: V31 = 0x21c
0x60: JUMPI 0x21c V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x2a0]
---
0x61 DUP1
0x62 PUSH4 0xf8b2cb4f
0x67 EQ
0x68 PUSH2 0x2a0
0x6b JUMPI
---
0x62: V32 = 0xf8b2cb4f
0x67: V33 = EQ 0xf8b2cb4f V10
0x68: V34 = 0x2a0
0x6b: JUMPI 0x2a0 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6e
[0x6e:0x99]
---
Predecessors: [0xb]
Successors: [0x9a, 0x14d]
---
0x6e JUMPDEST
0x6f PUSH2 0x2c5
0x72 PUSH1 0x4
0x74 CALLDATALOAD
0x75 PUSH1 0x24
0x77 CALLDATALOAD
0x78 PUSH1 0x44
0x7a CALLDATALOAD
0x7b PUSH1 0x64
0x7d CALLDATALOAD
0x7e PUSH1 0x1
0x80 SLOAD
0x81 PUSH1 0x0
0x83 SWAP1
0x84 DUP2
0x85 SWAP1
0x86 CALLER
0x87 PUSH1 0x1
0x89 PUSH1 0xa0
0x8b PUSH1 0x2
0x8d EXP
0x8e SUB
0x8f SWAP1
0x90 DUP2
0x91 AND
0x92 SWAP2
0x93 AND
0x94 EQ
0x95 ISZERO
0x96 PUSH2 0x14d
0x99 JUMPI
---
0x6e: JUMPDEST 
0x6f: V35 = 0x2c5
0x72: V36 = 0x4
0x74: V37 = CALLDATALOAD 0x4
0x75: V38 = 0x24
0x77: V39 = CALLDATALOAD 0x24
0x78: V40 = 0x44
0x7a: V41 = CALLDATALOAD 0x44
0x7b: V42 = 0x64
0x7d: V43 = CALLDATALOAD 0x64
0x7e: V44 = 0x1
0x80: V45 = S[0x1]
0x81: V46 = 0x0
0x86: V47 = CALLER
0x87: V48 = 0x1
0x89: V49 = 0xa0
0x8b: V50 = 0x2
0x8d: V51 = EXP 0x2 0xa0
0x8e: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x93: V54 = AND V45 0xffffffffffffffffffffffffffffffffffffffff
0x94: V55 = EQ V54 V53
0x95: V56 = ISZERO V55
0x96: V57 = 0x14d
0x99: JUMPI 0x14d V56
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c5, V37, V39, V41, V43, 0x0, 0x0]
Exit stack: [V10, 0x2c5, V37, V39, V41, V43, 0x0, 0x0]

================================

Block 0x9a
[0x9a:0xb7]
---
Predecessors: [0x6e]
Successors: [0xb8, 0x14d]
---
0x9a POP
0x9b PUSH1 0x1
0x9d PUSH1 0xa0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 SUB
0xa3 DUP6
0xa4 AND
0xa5 DUP2
0xa6 MSTORE
0xa7 PUSH1 0x2
0xa9 PUSH1 0x20
0xab MSTORE
0xac PUSH1 0x40
0xae DUP2
0xaf SHA3
0xb0 SLOAD
0xb1 DUP5
0xb2 DUP2
0xb3 LT
0xb4 PUSH2 0x14d
0xb7 JUMPI
---
0x9b: V58 = 0x1
0x9d: V59 = 0xa0
0x9f: V60 = 0x2
0xa1: V61 = EXP 0x2 0xa0
0xa2: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4: V63 = AND V37 0xffffffffffffffffffffffffffffffffffffffff
0xa6: M[0x0] = V63
0xa7: V64 = 0x2
0xa9: V65 = 0x20
0xab: M[0x20] = 0x2
0xac: V66 = 0x40
0xaf: V67 = SHA3 0x0 0x40
0xb0: V68 = S[V67]
0xb3: V69 = LT V68 V39
0xb4: V70 = 0x14d
0xb7: JUMPI 0x14d V69
---
Entry stack: [V10, 0x2c5, V37, V39, V41, V43, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V68]
Exit stack: [V10, 0x2c5, V37, V39, V41, V43, 0x0, V68]

================================

Block 0xb8
[0xb8:0x14c]
---
Predecessors: [0x9a]
Successors: [0x14d]
---
0xb8 CALLER
0xb9 PUSH1 0x1
0xbb PUSH1 0xa0
0xbd PUSH1 0x2
0xbf EXP
0xc0 SUB
0xc1 AND
0xc2 DUP3
0xc3 DUP7
0xc4 PUSH1 0x60
0xc6 DUP3
0xc7 DUP2
0xc8 DUP2
0xc9 DUP2
0xca DUP6
0xcb DUP9
0xcc DUP4
0xcd CALL
0xce SWAP4
0xcf POP
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 DUP5
0xd5 DUP2
0xd6 SUB
0xd7 PUSH1 0x2
0xd9 PUSH1 0x0
0xdb POP
0xdc PUSH1 0x0
0xde DUP9
0xdf PUSH1 0x1
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SUB
0xe7 AND
0xe8 DUP2
0xe9 MSTORE
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 PUSH1 0x0
0xf5 SHA3
0xf6 PUSH1 0x0
0xf8 POP
0xf9 DUP2
0xfa SWAP1
0xfb SSTORE
0xfc POP
0xfd PUSH1 0x0
0xff DUP7
0x100 PUSH1 0x1
0x102 PUSH1 0xa0
0x104 PUSH1 0x2
0x106 EXP
0x107 SUB
0x108 AND
0x109 DUP6
0x10a PUSH32 0xea0f544916910bb1ff33390cbe54a3f5d36d298328578399311cde3c9a750686
0x12b DUP7
0x12c DUP10
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 DUP4
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x20
0x136 ADD
0x137 DUP3
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c ADD
0x13d SWAP3
0x13e POP
0x13f POP
0x140 POP
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 LOG4
0x149 PUSH1 0x1
0x14b SWAP2
0x14c POP
---
0xb8: V71 = CALLER
0xb9: V72 = 0x1
0xbb: V73 = 0xa0
0xbd: V74 = 0x2
0xbf: V75 = EXP 0x2 0xa0
0xc0: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xc4: V78 = 0x60
0xcd: V79 = CALL 0x0 V77 V39 0x60 0x0 0x60 0x0
0xd6: V80 = SUB V68 V39
0xd7: V81 = 0x2
0xd9: V82 = 0x0
0xdc: V83 = 0x0
0xdf: V84 = 0x1
0xe1: V85 = 0xa0
0xe3: V86 = 0x2
0xe5: V87 = EXP 0x2 0xa0
0xe6: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xe9: M[0x0] = V89
0xea: V90 = 0x20
0xec: V91 = ADD 0x20 0x0
0xef: M[0x20] = 0x2
0xf0: V92 = 0x20
0xf2: V93 = ADD 0x20 0x20
0xf3: V94 = 0x0
0xf5: V95 = SHA3 0x0 0x40
0xf6: V96 = 0x0
0xfb: S[V95] = V80
0xfd: V97 = 0x0
0x100: V98 = 0x1
0x102: V99 = 0xa0
0x104: V100 = 0x2
0x106: V101 = EXP 0x2 0xa0
0x107: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x10a: V104 = 0xea0f544916910bb1ff33390cbe54a3f5d36d298328578399311cde3c9a750686
0x12d: V105 = 0x40
0x12f: V106 = M[0x40]
0x133: M[V106] = V43
0x134: V107 = 0x20
0x136: V108 = ADD 0x20 V106
0x139: M[V108] = V39
0x13a: V109 = 0x20
0x13c: V110 = ADD 0x20 V108
0x141: V111 = 0x40
0x143: V112 = M[0x40]
0x146: V113 = SUB V110 V112
0x148: LOG V112 V113 0xea0f544916910bb1ff33390cbe54a3f5d36d298328578399311cde3c9a750686 V41 V103 0x0
0x149: V114 = 0x1
---
Entry stack: [V10, 0x2c5, V37, V39, V41, V43, 0x0, V68]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, 0x1, S0]
Exit stack: [V10, 0x2c5, V37, V39, V41, V43, 0x1, V68]

================================

Block 0x14d
[0x14d:0x155]
---
Predecessors: [0x6e, 0x9a, 0xb8]
Successors: [0x2c5]
---
0x14d JUMPDEST
0x14e POP
0x14f SWAP5
0x150 SWAP4
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 JUMP
---
0x14d: JUMPDEST 
0x155: JUMP 0x2c5
---
Entry stack: [V10, 0x2c5, V37, V39, V41, V43, {0x0, 0x1}, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x156
[0x156:0x175]
---
Predecessors: [0x1f]
Successors: [0x176, 0x2ea]
---
0x156 JUMPDEST
0x157 PUSH2 0x2c5
0x15a PUSH1 0x4
0x15c CALLDATALOAD
0x15d PUSH1 0x0
0x15f DUP1
0x160 SLOAD
0x161 PUSH1 0x1
0x163 PUSH1 0xa0
0x165 PUSH1 0x2
0x167 EXP
0x168 SUB
0x169 SWAP1
0x16a DUP2
0x16b AND
0x16c CALLER
0x16d SWAP1
0x16e SWAP2
0x16f AND
0x170 EQ
0x171 ISZERO
0x172 PUSH2 0x2ea
0x175 JUMPI
---
0x156: JUMPDEST 
0x157: V115 = 0x2c5
0x15a: V116 = 0x4
0x15c: V117 = CALLDATALOAD 0x4
0x15d: V118 = 0x0
0x160: V119 = S[0x0]
0x161: V120 = 0x1
0x163: V121 = 0xa0
0x165: V122 = 0x2
0x167: V123 = EXP 0x2 0xa0
0x168: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x16c: V126 = CALLER
0x16f: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x170: V128 = EQ V127 V125
0x171: V129 = ISZERO V128
0x172: V130 = 0x2ea
0x175: JUMPI 0x2ea V129
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c5, V117, 0x0]
Exit stack: [V10, 0x2c5, V117, 0x0]

================================

Block 0x176
[0x176:0x198]
---
Predecessors: [0x156]
Successors: [0x2c0]
---
0x176 DUP1
0x177 SLOAD
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d NOT
0x18e AND
0x18f DUP3
0x190 OR
0x191 SWAP1
0x192 SSTORE
0x193 PUSH1 0x1
0x195 PUSH2 0x2c0
0x198 JUMP
---
0x177: V131 = S[0x0]
0x178: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V133 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V134 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V131
0x190: V135 = OR V117 V134
0x192: S[0x0] = V135
0x193: V136 = 0x1
0x195: V137 = 0x2c0
0x198: JUMP 0x2c0
---
Entry stack: [V10, 0x2c5, V117, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x2c5, V117, 0x1]

================================

Block 0x199
[0x199:0x1b0]
---
Predecessors: [0x2a]
Successors: [0x2c5]
---
0x199 JUMPDEST
0x19a PUSH2 0x2c5
0x19d PUSH1 0x4
0x19f CALLDATALOAD
0x1a0 PUSH1 0x2
0x1a2 PUSH1 0x20
0x1a4 MSTORE
0x1a5 PUSH1 0x0
0x1a7 SWAP1
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x40
0x1ac SWAP1
0x1ad SHA3
0x1ae SLOAD
0x1af DUP2
0x1b0 JUMP
---
0x199: JUMPDEST 
0x19a: V138 = 0x2c5
0x19d: V139 = 0x4
0x19f: V140 = CALLDATALOAD 0x4
0x1a0: V141 = 0x2
0x1a2: V142 = 0x20
0x1a4: M[0x20] = 0x2
0x1a5: V143 = 0x0
0x1a9: M[0x0] = V140
0x1aa: V144 = 0x40
0x1ad: V145 = SHA3 0x0 0x40
0x1ae: V146 = S[V145]
0x1b0: JUMP 0x2c5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c5, V146]
Exit stack: [V10, 0x2c5, V146]

================================

Block 0x1b1
[0x1b1:0x1c0]
---
Predecessors: [0x35]
Successors: [0x1c1]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x2d7
0x1b5 PUSH1 0x0
0x1b7 SLOAD
0x1b8 PUSH1 0x1
0x1ba PUSH1 0xa0
0x1bc PUSH1 0x2
0x1be EXP
0x1bf SUB
0x1c0 AND
---
0x1b1: JUMPDEST 
0x1b2: V147 = 0x2d7
0x1b5: V148 = 0x0
0x1b7: V149 = S[0x0]
0x1b8: V150 = 0x1
0x1ba: V151 = 0xa0
0x1bc: V152 = 0x2
0x1be: V153 = EXP 0x2 0xa0
0x1bf: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d7, V155]
Exit stack: [V10, 0x2d7, V155]

================================

Block 0x1c1
[0x1c1:0x1c3]
---
Predecessors: [0x1b1, 0x1c4]
Successors: [0x2d7]
---
0x1c1 JUMPDEST
0x1c2 SWAP1
0x1c3 JUMP
---
0x1c1: JUMPDEST 
0x1c3: JUMP 0x2d7
---
Entry stack: [V10, 0x2d7, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x1c4
[0x1c4:0x1d7]
---
Predecessors: [0x40]
Successors: [0x1c1]
---
0x1c4 JUMPDEST
0x1c5 PUSH2 0x2d7
0x1c8 PUSH1 0x1
0x1ca SLOAD
0x1cb PUSH1 0x1
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 SUB
0x1d3 AND
0x1d4 PUSH2 0x1c1
0x1d7 JUMP
---
0x1c4: JUMPDEST 
0x1c5: V156 = 0x2d7
0x1c8: V157 = 0x1
0x1ca: V158 = S[0x1]
0x1cb: V159 = 0x1
0x1cd: V160 = 0xa0
0x1cf: V161 = 0x2
0x1d1: V162 = EXP 0x2 0xa0
0x1d2: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d3: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x1d4: V165 = 0x1c1
0x1d7: JUMP 0x1c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d7, V164]
Exit stack: [V10, 0x2d7, V164]

================================

Block 0x1d8
[0x1d8:0x1f7]
---
Predecessors: [0x4b]
Successors: [0x1f8, 0x2ea]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x2c5
0x1dc PUSH1 0x4
0x1de CALLDATALOAD
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 SLOAD
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0xa0
0x1e7 PUSH1 0x2
0x1e9 EXP
0x1ea SUB
0x1eb SWAP1
0x1ec DUP2
0x1ed AND
0x1ee CALLER
0x1ef SWAP1
0x1f0 SWAP2
0x1f1 AND
0x1f2 EQ
0x1f3 ISZERO
0x1f4 PUSH2 0x2ea
0x1f7 JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V166 = 0x2c5
0x1dc: V167 = 0x4
0x1de: V168 = CALLDATALOAD 0x4
0x1df: V169 = 0x0
0x1e2: V170 = S[0x0]
0x1e3: V171 = 0x1
0x1e5: V172 = 0xa0
0x1e7: V173 = 0x2
0x1e9: V174 = EXP 0x2 0xa0
0x1ea: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ed: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x1ee: V177 = CALLER
0x1f1: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x1f2: V179 = EQ V178 V176
0x1f3: V180 = ISZERO V179
0x1f4: V181 = 0x2ea
0x1f7: JUMPI 0x2ea V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c5, V168, 0x0]
Exit stack: [V10, 0x2c5, V168, 0x0]

================================

Block 0x1f8
[0x1f8:0x21b]
---
Predecessors: [0x1d8]
Successors: [0x2c0]
---
0x1f8 POP
0x1f9 PUSH1 0x1
0x1fb DUP1
0x1fc SLOAD
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 NOT
0x213 AND
0x214 DUP3
0x215 OR
0x216 DUP2
0x217 SSTORE
0x218 PUSH2 0x2c0
0x21b JUMP
---
0x1f9: V182 = 0x1
0x1fc: V183 = S[0x1]
0x1fd: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V185 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x213: V186 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V183
0x215: V187 = OR V168 V186
0x217: S[0x1] = V187
0x218: V188 = 0x2c0
0x21b: JUMP 0x2c0
---
Entry stack: [V10, 0x2c5, V168, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x2c5, V168, 0x1]

================================

Block 0x21c
[0x21c:0x245]
---
Predecessors: [0x56]
Successors: [0x246, 0x298]
---
0x21c JUMPDEST
0x21d PUSH2 0x2c5
0x220 PUSH1 0x4
0x222 CALLDATALOAD
0x223 PUSH1 0x24
0x225 CALLDATALOAD
0x226 PUSH1 0x44
0x228 CALLDATALOAD
0x229 PUSH1 0x64
0x22b CALLDATALOAD
0x22c PUSH1 0x1
0x22e SLOAD
0x22f PUSH1 0x0
0x231 SWAP1
0x232 CALLER
0x233 PUSH1 0x1
0x235 PUSH1 0xa0
0x237 PUSH1 0x2
0x239 EXP
0x23a SUB
0x23b SWAP1
0x23c DUP2
0x23d AND
0x23e SWAP2
0x23f AND
0x240 EQ
0x241 ISZERO
0x242 PUSH2 0x298
0x245 JUMPI
---
0x21c: JUMPDEST 
0x21d: V189 = 0x2c5
0x220: V190 = 0x4
0x222: V191 = CALLDATALOAD 0x4
0x223: V192 = 0x24
0x225: V193 = CALLDATALOAD 0x24
0x226: V194 = 0x44
0x228: V195 = CALLDATALOAD 0x44
0x229: V196 = 0x64
0x22b: V197 = CALLDATALOAD 0x64
0x22c: V198 = 0x1
0x22e: V199 = S[0x1]
0x22f: V200 = 0x0
0x232: V201 = CALLER
0x233: V202 = 0x1
0x235: V203 = 0xa0
0x237: V204 = 0x2
0x239: V205 = EXP 0x2 0xa0
0x23a: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23d: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x23f: V208 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x240: V209 = EQ V208 V207
0x241: V210 = ISZERO V209
0x242: V211 = 0x298
0x245: JUMPI 0x298 V210
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c5, V191, V193, V195, V197, 0x0]
Exit stack: [V10, 0x2c5, V191, V193, V195, V197, 0x0]

================================

Block 0x246
[0x246:0x297]
---
Predecessors: [0x21c]
Successors: [0x298]
---
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e DUP6
0x24f AND
0x250 DUP1
0x251 DUP3
0x252 MSTORE
0x253 PUSH1 0x2
0x255 PUSH1 0x20
0x257 MSTORE
0x258 PUSH1 0x40
0x25a DUP1
0x25b DUP4
0x25c SHA3
0x25d DUP1
0x25e SLOAD
0x25f DUP8
0x260 ADD
0x261 SWAP1
0x262 SSTORE
0x263 PUSH1 0x60
0x265 DUP5
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x80
0x26a DUP8
0x26b SWAP1
0x26c MSTORE
0x26d DUP4
0x26e SWAP2
0x26f DUP7
0x270 SWAP2
0x271 PUSH32 0xea0f544916910bb1ff33390cbe54a3f5d36d298328578399311cde3c9a750686
0x292 SWAP2
0x293 SWAP1
0x294 LOG4
0x295 POP
0x296 PUSH1 0x1
---
0x246: V212 = 0x1
0x248: V213 = 0xa0
0x24a: V214 = 0x2
0x24c: V215 = EXP 0x2 0xa0
0x24d: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24f: V217 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x252: M[0x0] = V217
0x253: V218 = 0x2
0x255: V219 = 0x20
0x257: M[0x20] = 0x2
0x258: V220 = 0x40
0x25c: V221 = SHA3 0x0 0x40
0x25e: V222 = S[V221]
0x260: V223 = ADD V193 V222
0x262: S[V221] = V223
0x263: V224 = 0x60
0x267: M[0x60] = V197
0x268: V225 = 0x80
0x26c: M[0x80] = V193
0x271: V226 = 0xea0f544916910bb1ff33390cbe54a3f5d36d298328578399311cde3c9a750686
0x294: LOG 0x60 0x40 0xea0f544916910bb1ff33390cbe54a3f5d36d298328578399311cde3c9a750686 V195 0x0 V217
0x296: V227 = 0x1
---
Entry stack: [V10, 0x2c5, V191, V193, V195, V197, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x1]
Exit stack: [V10, 0x2c5, V191, V193, V195, V197, 0x1]

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0x21c, 0x246]
Successors: [0x2c5]
---
0x298 JUMPDEST
0x299 SWAP5
0x29a SWAP4
0x29b POP
0x29c POP
0x29d POP
0x29e POP
0x29f JUMP
---
0x298: JUMPDEST 
0x29f: JUMP 0x2c5
---
Entry stack: [V10, 0x2c5, V191, V193, V195, V197, {0x0, 0x1}]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x2a0
[0x2a0:0x2bf]
---
Predecessors: [0x61]
Successors: [0x2c0]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x2c5
0x2a4 PUSH1 0x4
0x2a6 CALLDATALOAD
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af DUP2
0x2b0 AND
0x2b1 PUSH1 0x0
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 MSTORE
0x2b6 PUSH1 0x2
0x2b8 PUSH1 0x20
0x2ba MSTORE
0x2bb PUSH1 0x40
0x2bd SWAP1
0x2be SHA3
0x2bf SLOAD
---
0x2a0: JUMPDEST 
0x2a1: V228 = 0x2c5
0x2a4: V229 = 0x4
0x2a6: V230 = CALLDATALOAD 0x4
0x2a7: V231 = 0x1
0x2a9: V232 = 0xa0
0x2ab: V233 = 0x2
0x2ad: V234 = EXP 0x2 0xa0
0x2ae: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b0: V236 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V237 = 0x0
0x2b5: M[0x0] = V236
0x2b6: V238 = 0x2
0x2b8: V239 = 0x20
0x2ba: M[0x20] = 0x2
0x2bb: V240 = 0x40
0x2be: V241 = SHA3 0x0 0x40
0x2bf: V242 = S[V241]
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c5, V230, V242]
Exit stack: [V10, 0x2c5, V230, V242]

================================

Block 0x2c0
[0x2c0:0x2c4]
---
Predecessors: [0x176, 0x1f8, 0x2a0, 0x2ea]
Successors: [0x2c5]
---
0x2c0 JUMPDEST
0x2c1 SWAP2
0x2c2 SWAP1
0x2c3 POP
0x2c4 JUMP
---
0x2c0: JUMPDEST 
0x2c4: JUMP 0x2c5
---
Entry stack: [V10, 0x2c5, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x2c5
[0x2c5:0x2d6]
---
Predecessors: [0x14d, 0x199, 0x298, 0x2c0]
Successors: []
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x40
0x2c8 DUP1
0x2c9 MLOAD
0x2ca SWAP2
0x2cb DUP3
0x2cc MSTORE
0x2cd MLOAD
0x2ce SWAP1
0x2cf DUP2
0x2d0 SWAP1
0x2d1 SUB
0x2d2 PUSH1 0x20
0x2d4 ADD
0x2d5 SWAP1
0x2d6 RETURN
---
0x2c5: JUMPDEST 
0x2c6: V243 = 0x40
0x2c9: V244 = M[0x40]
0x2cc: M[V244] = S0
0x2cd: V245 = M[0x40]
0x2d1: V246 = SUB V244 V245
0x2d2: V247 = 0x20
0x2d4: V248 = ADD 0x20 V246
0x2d6: RETURN V245 V248
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2d7
[0x2d7:0x2e9]
---
Predecessors: [0x1c1]
Successors: []
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 AND
0x2e1 PUSH1 0x60
0x2e3 SWAP1
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 SWAP1
0x2e9 RETURN
---
0x2d7: JUMPDEST 
0x2d8: V249 = 0x1
0x2da: V250 = 0xa0
0x2dc: V251 = 0x2
0x2de: V252 = EXP 0x2 0xa0
0x2df: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e0: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2e1: V255 = 0x60
0x2e5: M[0x60] = V254
0x2e6: V256 = 0x20
0x2e9: RETURN 0x60 0x20
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ea
[0x2ea:0x2ee]
---
Predecessors: [0x156, 0x1d8]
Successors: [0x2c0]
---
0x2ea JUMPDEST
0x2eb PUSH2 0x2c0
0x2ee JUMP
---
0x2ea: JUMPDEST 
0x2eb: V257 = 0x2c0
0x2ee: JUMP 0x2c0
---
Entry stack: [V10, 0x2c5, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2c5, S1, 0x0]

================================

Function 0:
Public function signature: 0x7bc6fad
Entry block: 0x6e
Exit block: 0x2c5
Body: 0x6e, 0x9a, 0xb8, 0x14d, 0x2c5

Function 1:
Public function signature: 0x13af4035
Entry block: 0x156
Exit block: 0x2c5
Body: 0x156, 0x2c5

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x199
Exit block: 0x2c5
Body: 0x199, 0x2c5

Function 3:
Public function signature: 0x893d20e8
Entry block: 0x1b1
Exit block: 0x2d7
Body: 0x1b1, 0x2d7

Function 4:
Public function signature: 0xab470f05
Entry block: 0x1c4
Exit block: 0x2d7
Body: 0x1c4, 0x2d7

Function 5:
Public function signature: 0xbeb92f55
Entry block: 0x1d8
Exit block: 0x2c5
Body: 0x1d8, 0x2c5

Function 6:
Public function signature: 0xec2ac54e
Entry block: 0x21c
Exit block: 0x2c5
Body: 0x21c, 0x246, 0x298, 0x2c5

Function 7:
Public function signature: 0xf8b2cb4f
Entry block: 0x2a0
Exit block: 0x2c5
Body: 0x2a0, 0x2c5

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 9:
Private function
Entry block: 0x2ea
Exit block: 0x2c0
Body: 0x2c0, 0x2ea

