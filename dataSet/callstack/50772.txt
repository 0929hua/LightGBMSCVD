Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x51]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xaa8c217c
0x34 EQ
0x35 PUSH2 0x51
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xaa8c217c
0x34: V10 = EQ 0xaa8c217c V8
0x35: V11 = 0x51
0x38: JUMPI 0x51 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x78]
---
0x39 DUP1
0x3a PUSH4 0xeaaf5a17
0x3f EQ
0x40 PUSH2 0x78
0x43 JUMPI
---
0x3a: V12 = 0xeaaf5a17
0x3f: V13 = EQ 0xeaaf5a17 V8
0x40: V14 = 0x78
0x43: JUMPI 0x78 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4b]
---
Predecessors: [0x0, 0x44]
Successors: [0x4c]
---
0x48 JUMPDEST
0x49 PUSH2 0x4f
---
0x48: JUMPDEST 
0x49: V16 = 0x4f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x4f]
Exit stack: [V8, 0x4f]

================================

Block 0x4c
[0x4c:0x4c]
---
Predecessors: [0x48]
Successors: [0x4d]
---
0x4c JUMPDEST
---
0x4c: JUMPDEST 
---
Entry stack: [V8, 0x4f]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x4f]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x4c]
Successors: [0x4f]
---
0x4d JUMPDEST
0x4e JUMP
---
0x4d: JUMPDEST 
0x4e: JUMP 0x4f
---
Entry stack: [V8, 0x4f]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x50]
---
Predecessors: [0x4d]
Successors: []
---
0x4f JUMPDEST
0x50 STOP
---
0x4f: JUMPDEST 
0x50: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x51
[0x51:0x5d]
---
Predecessors: [0xb]
Successors: [0xe4]
---
0x51 JUMPDEST
0x52 PUSH2 0x5e
0x55 PUSH1 0x4
0x57 DUP1
0x58 POP
0x59 POP
0x5a PUSH2 0xe4
0x5d JUMP
---
0x51: JUMPDEST 
0x52: V17 = 0x5e
0x55: V18 = 0x4
0x5a: V19 = 0xe4
0x5d: JUMP 0xe4
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x5e]
Exit stack: [V8, 0x5e]

================================

Block 0x5e
[0x5e:0x77]
---
Predecessors: [0xe4]
Successors: []
---
0x5e JUMPDEST
0x5f PUSH1 0x40
0x61 MLOAD
0x62 DUP1
0x63 DUP3
0x64 PUSH1 0x0
0x66 NOT
0x67 AND
0x68 DUP2
0x69 MSTORE
0x6a PUSH1 0x20
0x6c ADD
0x6d SWAP2
0x6e POP
0x6f POP
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 SWAP2
0x75 SUB
0x76 SWAP1
0x77 RETURN
---
0x5e: JUMPDEST 
0x5f: V20 = 0x40
0x61: V21 = M[0x40]
0x64: V22 = 0x0
0x66: V23 = NOT 0x0
0x67: V24 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V65
0x69: M[V21] = V24
0x6a: V25 = 0x20
0x6c: V26 = ADD 0x20 V21
0x70: V27 = 0x40
0x72: V28 = M[0x40]
0x75: V29 = SUB V26 V28
0x77: RETURN V28 V29
---
Entry stack: [V8, 0x5e, V65]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x5e]

================================

Block 0x78
[0x78:0xcb]
---
Predecessors: [0x39]
Successors: [0xed]
---
0x78 JUMPDEST
0x79 PUSH2 0xcc
0x7c PUSH1 0x4
0x7e DUP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 SWAP1
0x82 PUSH1 0x20
0x84 ADD
0x85 SWAP1
0x86 DUP3
0x87 ADD
0x88 DUP1
0x89 CALLDATALOAD
0x8a SWAP1
0x8b PUSH1 0x20
0x8d ADD
0x8e SWAP2
0x8f SWAP2
0x90 SWAP1
0x91 DUP1
0x92 DUP1
0x93 PUSH1 0x1f
0x95 ADD
0x96 PUSH1 0x20
0x98 DUP1
0x99 SWAP2
0x9a DIV
0x9b MUL
0x9c PUSH1 0x20
0x9e ADD
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 SWAP1
0xa3 DUP2
0xa4 ADD
0xa5 PUSH1 0x40
0xa7 MSTORE
0xa8 DUP1
0xa9 SWAP4
0xaa SWAP3
0xab SWAP2
0xac SWAP1
0xad DUP2
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 DUP4
0xb4 DUP4
0xb5 DUP1
0xb6 DUP3
0xb7 DUP5
0xb8 CALLDATACOPY
0xb9 DUP3
0xba ADD
0xbb SWAP2
0xbc POP
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 SWAP1
0xc3 SWAP1
0xc4 SWAP2
0xc5 SWAP1
0xc6 POP
0xc7 POP
0xc8 PUSH2 0xed
0xcb JUMP
---
0x78: JUMPDEST 
0x79: V30 = 0xcc
0x7c: V31 = 0x4
0x80: V32 = CALLDATALOAD 0x4
0x82: V33 = 0x20
0x84: V34 = ADD 0x20 0x4
0x87: V35 = ADD 0x4 V32
0x89: V36 = CALLDATALOAD V35
0x8b: V37 = 0x20
0x8d: V38 = ADD 0x20 V35
0x93: V39 = 0x1f
0x95: V40 = ADD 0x1f V36
0x96: V41 = 0x20
0x9a: V42 = DIV V40 0x20
0x9b: V43 = MUL V42 0x20
0x9c: V44 = 0x20
0x9e: V45 = ADD 0x20 V43
0x9f: V46 = 0x40
0xa1: V47 = M[0x40]
0xa4: V48 = ADD V47 V45
0xa5: V49 = 0x40
0xa7: M[0x40] = V48
0xaf: M[V47] = V36
0xb0: V50 = 0x20
0xb2: V51 = ADD 0x20 V47
0xb8: CALLDATACOPY V51 V38 V36
0xba: V52 = ADD V51 V36
0xc8: V53 = 0xed
0xcb: JUMP 0xed
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xcc, V47]
Exit stack: [V8, 0xcc, V47]

================================

Block 0xcc
[0xcc:0xe3]
---
Predecessors: [0x1bd]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 DUP3
0xd2 ISZERO
0xd3 ISZERO
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP2
0xda POP
0xdb POP
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 SWAP2
0xe1 SUB
0xe2 SWAP1
0xe3 RETURN
---
0xcc: JUMPDEST 
0xcd: V54 = 0x40
0xcf: V55 = M[0x40]
0xd2: V56 = ISZERO {0x0, 0x1}
0xd3: V57 = ISZERO V56
0xd5: M[V55] = V57
0xd6: V58 = 0x20
0xd8: V59 = ADD 0x20 V55
0xdc: V60 = 0x40
0xde: V61 = M[0x40]
0xe1: V62 = SUB V59 V61
0xe3: RETURN V61 V62
---
Entry stack: [V8, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xe4
[0xe4:0xec]
---
Predecessors: [0x51]
Successors: [0x5e]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x0
0xe7 PUSH1 0x0
0xe9 POP
0xea SLOAD
0xeb DUP2
0xec JUMP
---
0xe4: JUMPDEST 
0xe5: V63 = 0x0
0xe7: V64 = 0x0
0xea: V65 = S[0x0]
0xec: JUMP 0x5e
---
Entry stack: [V8, 0x5e]
Stack pops: 1
Stack additions: [S0, V65]
Exit stack: [V8, 0x5e, V65]

================================

Block 0xed
[0xed:0x13f]
---
Predecessors: [0x78]
Successors: [0x140]
---
0xed JUMPDEST
0xee PUSH1 0x0
0xf0 PUSH1 0x0
0xf2 PUSH1 0x0
0xf4 PUSH1 0x0
0xf6 POP
0xf7 SLOAD
0xf8 PUSH1 0x0
0xfa NOT
0xfb AND
0xfc PUSH1 0x2
0xfe DUP5
0xff PUSH1 0x40
0x101 MLOAD
0x102 DUP1
0x103 DUP3
0x104 DUP1
0x105 MLOAD
0x106 SWAP1
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP1
0x10b DUP1
0x10c DUP4
0x10d DUP4
0x10e DUP3
0x10f SWAP1
0x110 PUSH1 0x0
0x112 PUSH1 0x4
0x114 PUSH1 0x20
0x116 DUP5
0x117 PUSH1 0x1f
0x119 ADD
0x11a DIV
0x11b PUSH1 0x3
0x11d MUL
0x11e PUSH1 0xf
0x120 ADD
0x121 CALL
0x122 POP
0x123 SWAP1
0x124 POP
0x125 ADD
0x126 SWAP2
0x127 POP
0x128 POP
0x129 PUSH1 0x20
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP4
0x130 SUB
0x131 DUP2
0x132 PUSH1 0x0
0x134 DUP7
0x135 PUSH2 0x61da
0x138 GAS
0x139 SUB
0x13a CALL
0x13b ISZERO
0x13c PUSH2 0x2
0x13f JUMPI
---
0xed: JUMPDEST 
0xee: V66 = 0x0
0xf0: V67 = 0x0
0xf2: V68 = 0x0
0xf4: V69 = 0x0
0xf7: V70 = S[0x0]
0xf8: V71 = 0x0
0xfa: V72 = NOT 0x0
0xfb: V73 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V70
0xfc: V74 = 0x2
0xff: V75 = 0x40
0x101: V76 = M[0x40]
0x105: V77 = M[V47]
0x107: V78 = 0x20
0x109: V79 = ADD 0x20 V47
0x110: V80 = 0x0
0x112: V81 = 0x4
0x114: V82 = 0x20
0x117: V83 = 0x1f
0x119: V84 = ADD 0x1f V77
0x11a: V85 = DIV V84 0x20
0x11b: V86 = 0x3
0x11d: V87 = MUL 0x3 V85
0x11e: V88 = 0xf
0x120: V89 = ADD 0xf V87
0x121: V90 = CALL V89 0x4 0x0 V79 V77 V76 V77
0x125: V91 = ADD V77 V76
0x129: V92 = 0x20
0x12b: V93 = 0x40
0x12d: V94 = M[0x40]
0x130: V95 = SUB V91 V94
0x132: V96 = 0x0
0x135: V97 = 0x61da
0x138: V98 = GAS
0x139: V99 = SUB V98 0x61da
0x13a: V100 = CALL V99 0x2 0x0 V94 V95 V94 0x20
0x13b: V101 = ISZERO V100
0x13c: V102 = 0x2
0x13f: THROWI V101
---
Entry stack: [V8, 0xcc, V47]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, V73, 0x2, V91]
Exit stack: [V8, 0xcc, V47, 0x0, 0x0, V73, 0x2, V91]

================================

Block 0x140
[0x140:0x155]
---
Predecessors: [0xed]
Successors: [0x156, 0x1b3]
---
0x140 POP
0x141 POP
0x142 PUSH1 0x40
0x144 MLOAD
0x145 DUP1
0x146 MLOAD
0x147 SWAP1
0x148 PUSH1 0x20
0x14a ADD
0x14b POP
0x14c PUSH1 0x0
0x14e NOT
0x14f AND
0x150 EQ
0x151 ISZERO
0x152 PUSH2 0x1b3
0x155 JUMPI
---
0x142: V103 = 0x40
0x144: V104 = M[0x40]
0x146: V105 = M[V104]
0x148: V106 = 0x20
0x14a: V107 = ADD 0x20 V104
0x14c: V108 = 0x0
0x14e: V109 = NOT 0x0
0x14f: V110 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V105
0x150: V111 = EQ V110 V73
0x151: V112 = ISZERO V111
0x152: V113 = 0x1b3
0x155: JUMPI 0x1b3 V112
---
Entry stack: [V8, 0xcc, V47, 0x0, 0x0, V73, 0x2, V91]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0xcc, V47, 0x0, 0x0]

================================

Block 0x156
[0x156:0x1ae]
---
Predecessors: [0x140]
Successors: [0x1bd]
---
0x156 PUSH2 0x59d8
0x159 ADDRESS
0x15a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f AND
0x170 BALANCE
0x171 SUB
0x172 SWAP1
0x173 POP
0x174 CALLER
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH1 0x0
0x18d DUP3
0x18e PUSH1 0x40
0x190 MLOAD
0x191 DUP1
0x192 SWAP1
0x193 POP
0x194 PUSH1 0x0
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a DUP4
0x19b SUB
0x19c DUP2
0x19d DUP6
0x19e DUP9
0x19f DUP9
0x1a0 CALL
0x1a1 SWAP4
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 PUSH1 0x1
0x1a9 SWAP2
0x1aa POP
0x1ab PUSH2 0x1bd
0x1ae JUMP
---
0x156: V114 = 0x59d8
0x159: V115 = ADDRESS
0x15a: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x170: V118 = BALANCE V117
0x171: V119 = SUB V118 0x59d8
0x174: V120 = CALLER
0x175: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x18b: V123 = 0x0
0x18e: V124 = 0x40
0x190: V125 = M[0x40]
0x194: V126 = 0x0
0x196: V127 = 0x40
0x198: V128 = M[0x40]
0x19b: V129 = SUB V125 V128
0x1a0: V130 = CALL 0x0 V122 V119 V128 V129 V128 0x0
0x1a7: V131 = 0x1
0x1ab: V132 = 0x1bd
0x1ae: JUMP 0x1bd
---
Entry stack: [V8, 0xcc, V47, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x1, V119]
Exit stack: [V8, 0xcc, V47, 0x1, V119]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: []
Successors: [0x1bc]
---
0x1af PUSH2 0x1bc
0x1b2 JUMP
---
0x1af: V133 = 0x1bc
0x1b2: JUMP 0x1bc
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1b3
[0x1b3:0x1bb]
---
Predecessors: [0x140]
Successors: [0x1bd]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x0
0x1b6 SWAP2
0x1b7 POP
0x1b8 PUSH2 0x1bd
0x1bb JUMP
---
0x1b3: JUMPDEST 
0x1b4: V134 = 0x0
0x1b8: V135 = 0x1bd
0x1bb: JUMP 0x1bd
---
Entry stack: [V8, 0xcc, V47, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V8, 0xcc, V47, 0x0, 0x0]

================================

Block 0x1bc
[0x1bc:0x1bc]
---
Predecessors: [0x1af]
Successors: [0x1bd]
---
0x1bc JUMPDEST
---
0x1bc: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bd
[0x1bd:0x1c2]
---
Predecessors: [0x156, 0x1b3, 0x1bc]
Successors: [0xcc]
---
0x1bd JUMPDEST
0x1be POP
0x1bf SWAP2
0x1c0 SWAP1
0x1c1 POP
0x1c2 JUMP
---
0x1bd: JUMPDEST 
0x1c2: JUMP 0xcc
---
Entry stack: [V8, 0xcc, V47, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V8, {0x0, 0x1}]

================================

Function 0:
Public function signature: 0xaa8c217c
Entry block: 0x51
Exit block: 0x5e
Body: 0x51, 0x5e, 0xe4

Function 1:
Public function signature: 0xeaaf5a17
Entry block: 0x78
Exit block: 0xcc
Body: 0x78, 0xcc, 0xed, 0x140, 0x156, 0x1b3, 0x1bd

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0x4f
Body: 0x44, 0x48, 0x4c, 0x4d, 0x4f

