Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7f
0xa: JUMPI 0x7f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x81]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xefafd01
0x34 EQ
0x35 PUSH2 0x81
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xefafd01
0x34: V10 = EQ 0xefafd01 V8
0x35: V11 = 0x81
0x38: JUMPI 0x81 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xa2]
---
0x39 DUP1
0x3a PUSH4 0x25d8dcf2
0x3f EQ
0x40 PUSH2 0xa2
0x43 JUMPI
---
0x3a: V12 = 0x25d8dcf2
0x3f: V13 = EQ 0x25d8dcf2 V8
0x40: V14 = 0xa2
0x43: JUMPI 0xa2 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xaf]
---
0x44 DUP1
0x45 PUSH4 0x34dbe44d
0x4a EQ
0x4b PUSH2 0xaf
0x4e JUMPI
---
0x45: V15 = 0x34dbe44d
0x4a: V16 = EQ 0x34dbe44d V8
0x4b: V17 = 0xaf
0x4e: JUMPI 0xaf V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xd0]
---
0x4f DUP1
0x50 PUSH4 0x41c0e1b5
0x55 EQ
0x56 PUSH2 0xd0
0x59 JUMPI
---
0x50: V18 = 0x41c0e1b5
0x55: V19 = EQ 0x41c0e1b5 V8
0x56: V20 = 0xd0
0x59: JUMPI 0xd0 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0xdd]
---
0x5a DUP1
0x5b PUSH4 0x5acce36b
0x60 EQ
0x61 PUSH2 0xdd
0x64 JUMPI
---
0x5b: V21 = 0x5acce36b
0x60: V22 = EQ 0x5acce36b V8
0x61: V23 = 0xdd
0x64: JUMPI 0xdd V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0xfe]
---
0x65 DUP1
0x66 PUSH4 0x7c8cf50c
0x6b EQ
0x6c PUSH2 0xfe
0x6f JUMPI
---
0x66: V24 = 0x7c8cf50c
0x6b: V25 = EQ 0x7c8cf50c V8
0x6c: V26 = 0xfe
0x6f: JUMPI 0xfe V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x11f]
---
0x70 DUP1
0x71 PUSH4 0xcee6f93c
0x76 EQ
0x77 PUSH2 0x11f
0x7a JUMPI
---
0x71: V27 = 0xcee6f93c
0x76: V28 = EQ 0xcee6f93c V8
0x77: V29 = 0x11f
0x7a: JUMPI 0x11f V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x70]
Successors: [0x7f]
---
0x7b PUSH2 0x7f
0x7e JUMP
---
0x7b: V30 = 0x7f
0x7e: JUMP 0x7f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x0, 0x7b]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0xb]
Successors: [0x7e5]
---
0x81 JUMPDEST
0x82 PUSH2 0x8c
0x85 PUSH1 0x4
0x87 POP
0x88 PUSH2 0x7e5
0x8b JUMP
---
0x81: JUMPDEST 
0x82: V31 = 0x8c
0x85: V32 = 0x4
0x88: V33 = 0x7e5
0x8b: JUMP 0x7e5
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V8, 0x8c]

================================

Block 0x8c
[0x8c:0xa1]
---
Predecessors: [0x7f4]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f MLOAD
0x90 DUP1
0x91 DUP3
0x92 DUP2
0x93 MSTORE
0x94 PUSH1 0x20
0x96 ADD
0x97 SWAP2
0x98 POP
0x99 POP
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e SWAP2
0x9f SUB
0xa0 SWAP1
0xa1 RETURN
---
0x8c: JUMPDEST 
0x8d: V34 = 0x40
0x8f: V35 = M[0x40]
0x93: M[V35] = V539
0x94: V36 = 0x20
0x96: V37 = ADD 0x20 V35
0x9a: V38 = 0x40
0x9c: V39 = M[0x40]
0x9f: V40 = SUB V37 V39
0xa1: RETURN V39 V40
---
Entry stack: [V8, V539]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x39]
Successors: [0x1bc]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xad
0xa6 PUSH1 0x4
0xa8 POP
0xa9 PUSH2 0x1bc
0xac JUMP
---
0xa2: JUMPDEST 
0xa3: V41 = 0xad
0xa6: V42 = 0x4
0xa9: V43 = 0x1bc
0xac: JUMP 0x1bc
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V8, 0xad]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0x73f]
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0x44]
Successors: [0x755]
---
0xaf JUMPDEST
0xb0 PUSH2 0xba
0xb3 PUSH1 0x4
0xb5 POP
0xb6 PUSH2 0x755
0xb9 JUMP
---
0xaf: JUMPDEST 
0xb0: V44 = 0xba
0xb3: V45 = 0x4
0xb6: V46 = 0x755
0xb9: JUMP 0x755
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xba]
Exit stack: [V8, 0xba]

================================

Block 0xba
[0xba:0xcf]
---
Predecessors: [0x764]
Successors: []
---
0xba JUMPDEST
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf DUP3
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
---
0xba: JUMPDEST 
0xbb: V47 = 0x40
0xbd: V48 = M[0x40]
0xc1: M[V48] = V490
0xc2: V49 = 0x20
0xc4: V50 = ADD 0x20 V48
0xc8: V51 = 0x40
0xca: V52 = M[0x40]
0xcd: V53 = SUB V50 V52
0xcf: RETURN V52 V53
---
Entry stack: [V8, V490]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0x4f]
Successors: [0x7f7]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xdb
0xd4 PUSH1 0x4
0xd6 POP
0xd7 PUSH2 0x7f7
0xda JUMP
---
0xd0: JUMPDEST 
0xd1: V54 = 0xdb
0xd4: V55 = 0x4
0xd7: V56 = 0x7f7
0xda: JUMP 0x7f7
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdb]
Exit stack: [V8, 0xdb]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: [0x889]
Successors: []
---
0xdb JUMPDEST
0xdc STOP
---
0xdb: JUMPDEST 
0xdc: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xdd
[0xdd:0xe7]
---
Predecessors: [0x5a]
Successors: [0x198]
---
0xdd JUMPDEST
0xde PUSH2 0xe8
0xe1 PUSH1 0x4
0xe3 POP
0xe4 PUSH2 0x198
0xe7 JUMP
---
0xdd: JUMPDEST 
0xde: V57 = 0xe8
0xe1: V58 = 0x4
0xe4: V59 = 0x198
0xe7: JUMP 0x198
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V8, 0xe8]

================================

Block 0xe8
[0xe8:0xfd]
---
Predecessors: [0x1b9]
Successors: []
---
0xe8 JUMPDEST
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed DUP3
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
0xf5 POP
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd RETURN
---
0xe8: JUMPDEST 
0xe9: V60 = 0x40
0xeb: V61 = M[0x40]
0xef: M[V61] = V126
0xf0: V62 = 0x20
0xf2: V63 = ADD 0x20 V61
0xf6: V64 = 0x40
0xf8: V65 = M[0x40]
0xfb: V66 = SUB V63 V65
0xfd: RETURN V65 V66
---
Entry stack: [V8, V126]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xfe
[0xfe:0x108]
---
Predecessors: [0x65]
Successors: [0x743]
---
0xfe JUMPDEST
0xff PUSH2 0x109
0x102 PUSH1 0x4
0x104 POP
0x105 PUSH2 0x743
0x108 JUMP
---
0xfe: JUMPDEST 
0xff: V67 = 0x109
0x102: V68 = 0x4
0x105: V69 = 0x743
0x108: JUMP 0x743
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x109]
Exit stack: [V8, 0x109]

================================

Block 0x109
[0x109:0x11e]
---
Predecessors: [0x752]
Successors: []
---
0x109 JUMPDEST
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e DUP3
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP2
0x115 POP
0x116 POP
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b SWAP2
0x11c SUB
0x11d SWAP1
0x11e RETURN
---
0x109: JUMPDEST 
0x10a: V70 = 0x40
0x10c: V71 = M[0x40]
0x110: M[V71] = V485
0x111: V72 = 0x20
0x113: V73 = ADD 0x20 V71
0x117: V74 = 0x40
0x119: V75 = M[0x40]
0x11c: V76 = SUB V73 V75
0x11e: RETURN V75 V76
---
Entry stack: [V8, V485]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x11f
[0x11f:0x129]
---
Predecessors: [0x70]
Successors: [0x767]
---
0x11f JUMPDEST
0x120 PUSH2 0x12a
0x123 PUSH1 0x4
0x125 POP
0x126 PUSH2 0x767
0x129 JUMP
---
0x11f: JUMPDEST 
0x120: V77 = 0x12a
0x123: V78 = 0x4
0x126: V79 = 0x767
0x129: JUMP 0x767
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V8, 0x12a]

================================

Block 0x12a
[0x12a:0x170]
---
Predecessors: [0x7e2]
Successors: [0x171, 0x18a]
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP1
0x130 PUSH1 0x20
0x132 ADD
0x133 DUP3
0x134 DUP2
0x135 SUB
0x136 DUP3
0x137 MSTORE
0x138 DUP4
0x139 DUP2
0x13a DUP2
0x13b MLOAD
0x13c DUP2
0x13d MSTORE
0x13e PUSH1 0x20
0x140 ADD
0x141 SWAP2
0x142 POP
0x143 DUP1
0x144 MLOAD
0x145 SWAP1
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a DUP1
0x14b DUP4
0x14c DUP4
0x14d DUP3
0x14e SWAP1
0x14f PUSH1 0x0
0x151 PUSH1 0x4
0x153 PUSH1 0x20
0x155 DUP5
0x156 PUSH1 0x1f
0x158 ADD
0x159 DIV
0x15a PUSH1 0x3
0x15c MUL
0x15d PUSH1 0xf
0x15f ADD
0x160 CALL
0x161 POP
0x162 SWAP1
0x163 POP
0x164 SWAP1
0x165 DUP2
0x166 ADD
0x167 SWAP1
0x168 PUSH1 0x1f
0x16a AND
0x16b DUP1
0x16c ISZERO
0x16d PUSH2 0x18a
0x170 JUMPI
---
0x12a: JUMPDEST 
0x12b: V80 = 0x40
0x12d: V81 = M[0x40]
0x130: V82 = 0x20
0x132: V83 = ADD 0x20 V81
0x135: V84 = SUB V83 V81
0x137: M[V81] = V84
0x13b: V85 = M[V511]
0x13d: M[V83] = V85
0x13e: V86 = 0x20
0x140: V87 = ADD 0x20 V83
0x144: V88 = M[V511]
0x146: V89 = 0x20
0x148: V90 = ADD 0x20 V511
0x14f: V91 = 0x0
0x151: V92 = 0x4
0x153: V93 = 0x20
0x156: V94 = 0x1f
0x158: V95 = ADD 0x1f V88
0x159: V96 = DIV V95 0x20
0x15a: V97 = 0x3
0x15c: V98 = MUL 0x3 V96
0x15d: V99 = 0xf
0x15f: V100 = ADD 0xf V98
0x160: V101 = CALL V100 0x4 0x0 V90 V88 V87 V88
0x166: V102 = ADD V88 V87
0x168: V103 = 0x1f
0x16a: V104 = AND 0x1f V88
0x16c: V105 = ISZERO V104
0x16d: V106 = 0x18a
0x170: JUMPI 0x18a V105
---
Entry stack: [V8, V511]
Stack pops: 1
Stack additions: [S0, V81, V81, V102, V104]
Exit stack: [V8, V511, V81, V81, V102, V104]

================================

Block 0x171
[0x171:0x189]
---
Predecessors: [0x12a]
Successors: [0x18a]
---
0x171 DUP1
0x172 DUP3
0x173 SUB
0x174 DUP1
0x175 MLOAD
0x176 PUSH1 0x1
0x178 DUP4
0x179 PUSH1 0x20
0x17b SUB
0x17c PUSH2 0x100
0x17f EXP
0x180 SUB
0x181 NOT
0x182 AND
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP2
0x189 POP
---
0x173: V107 = SUB V102 V104
0x175: V108 = M[V107]
0x176: V109 = 0x1
0x179: V110 = 0x20
0x17b: V111 = SUB 0x20 V104
0x17c: V112 = 0x100
0x17f: V113 = EXP 0x100 V111
0x180: V114 = SUB V113 0x1
0x181: V115 = NOT V114
0x182: V116 = AND V115 V108
0x184: M[V107] = V116
0x185: V117 = 0x20
0x187: V118 = ADD 0x20 V107
---
Entry stack: [V8, V511, V81, V81, V102, V104]
Stack pops: 2
Stack additions: [V118, S0]
Exit stack: [V8, V511, V81, V81, V118, V104]

================================

Block 0x18a
[0x18a:0x197]
---
Predecessors: [0x12a, 0x171]
Successors: []
---
0x18a JUMPDEST
0x18b POP
0x18c SWAP3
0x18d POP
0x18e POP
0x18f POP
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 SWAP2
0x195 SUB
0x196 SWAP1
0x197 RETURN
---
0x18a: JUMPDEST 
0x190: V119 = 0x40
0x192: V120 = M[0x40]
0x195: V121 = SUB S1 V120
0x197: RETURN V120 V121
---
Entry stack: [V8, V511, V81, V81, S1, V104]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x198
[0x198:0x1b8]
---
Predecessors: [0xdd]
Successors: [0x1b9]
---
0x198 JUMPDEST
0x199 PUSH1 0x0
0x19b ADDRESS
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 BALANCE
0x1b3 SWAP1
0x1b4 POP
0x1b5 PUSH2 0x1b9
0x1b8 JUMP
---
0x198: JUMPDEST 
0x199: V122 = 0x0
0x19b: V123 = ADDRESS
0x19c: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1b2: V126 = BALANCE V125
0x1b5: V127 = 0x1b9
0x1b8: JUMP 0x1b9
---
Entry stack: [V8, 0xe8]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V8, 0xe8, V126]

================================

Block 0x1b9
[0x1b9:0x1bb]
---
Predecessors: [0x198]
Successors: [0xe8]
---
0x1b9 JUMPDEST
0x1ba SWAP1
0x1bb JUMP
---
0x1b9: JUMPDEST 
0x1bb: JUMP 0xe8
---
Entry stack: [V8, 0xe8, V126]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V126]

================================

Block 0x1bc
[0x1bc:0x1ea]
---
Predecessors: [0xa2]
Successors: [0x1eb, 0x2e8]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x0
0x1bf PUSH1 0x0
0x1c1 PUSH1 0x1
0x1c3 PUSH1 0x5
0x1c5 PUSH1 0x0
0x1c7 POP
0x1c8 SLOAD
0x1c9 ADD
0x1ca PUSH1 0x5
0x1cc PUSH1 0x0
0x1ce POP
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SSTORE
0x1d2 POP
0x1d3 PUSH16 0xffffffffffffffffffffffffffffffff
0x1e4 CALLVALUE
0x1e5 GT
0x1e6 ISZERO
0x1e7 PUSH2 0x2e8
0x1ea JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V128 = 0x0
0x1bf: V129 = 0x0
0x1c1: V130 = 0x1
0x1c3: V131 = 0x5
0x1c5: V132 = 0x0
0x1c8: V133 = S[0x5]
0x1c9: V134 = ADD V133 0x1
0x1ca: V135 = 0x5
0x1cc: V136 = 0x0
0x1d1: S[0x5] = V134
0x1d3: V137 = 0xffffffffffffffffffffffffffffffff
0x1e4: V138 = CALLVALUE
0x1e5: V139 = GT V138 0xffffffffffffffffffffffffffffffff
0x1e6: V140 = ISZERO V139
0x1e7: V141 = 0x2e8
0x1ea: JUMPI 0x2e8 V140
---
Entry stack: [V8, 0xad]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x1eb
[0x1eb:0x251]
---
Predecessors: [0x1bc]
Successors: [0x252, 0x274]
---
0x1eb PUSH1 0x40
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 ADD
0x1f3 PUSH1 0x40
0x1f5 MSTORE
0x1f6 DUP1
0x1f7 PUSH1 0xf
0x1f9 DUP2
0x1fa MSTORE
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe PUSH32 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 POP
0x225 PUSH1 0x3
0x227 PUSH1 0x0
0x229 POP
0x22a SWAP1
0x22b DUP1
0x22c MLOAD
0x22d SWAP1
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP1
0x232 DUP3
0x233 DUP1
0x234 SLOAD
0x235 DUP3
0x236 DUP3
0x237 SSTORE
0x238 SWAP1
0x239 PUSH1 0x0
0x23b MSTORE
0x23c PUSH1 0x20
0x23e PUSH1 0x0
0x240 SHA3
0x241 SWAP1
0x242 PUSH1 0x1f
0x244 ADD
0x245 PUSH1 0x20
0x247 SWAP1
0x248 DIV
0x249 DUP2
0x24a ADD
0x24b SWAP3
0x24c DUP3
0x24d ISZERO
0x24e PUSH2 0x274
0x251 JUMPI
---
0x1eb: V142 = 0x40
0x1ed: V143 = 0x40
0x1ef: V144 = M[0x40]
0x1f2: V145 = ADD V144 0x40
0x1f3: V146 = 0x40
0x1f5: M[0x40] = V145
0x1f7: V147 = 0xf
0x1fa: M[V144] = 0xf
0x1fb: V148 = 0x20
0x1fd: V149 = ADD 0x20 V144
0x1fe: V150 = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x220: M[V149] = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x221: V151 = 0x20
0x223: V152 = ADD 0x20 V149
0x225: V153 = 0x3
0x227: V154 = 0x0
0x22c: V155 = M[V144]
0x22e: V156 = 0x20
0x230: V157 = ADD 0x20 V144
0x234: V158 = S[0x3]
0x237: S[0x3] = V155
0x239: V159 = 0x0
0x23b: M[0x0] = 0x3
0x23c: V160 = 0x20
0x23e: V161 = 0x0
0x240: V162 = SHA3 0x0 0x20
0x242: V163 = 0x1f
0x244: V164 = ADD 0x1f V158
0x245: V165 = 0x20
0x248: V166 = DIV V164 0x20
0x24a: V167 = ADD V162 V166
0x24d: V168 = ISZERO V155
0x24e: V169 = 0x274
0x251: JUMPI 0x274 V168
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V167, V155, V162, V157]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, V155, V162, V157]

================================

Block 0x252
[0x252:0x254]
---
Predecessors: [0x1eb]
Successors: [0x255]
---
0x252 SWAP2
0x253 DUP3
0x254 ADD
---
0x254: V170 = ADD V157 V155
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, V155, V162, V157]
Stack pops: 3
Stack additions: [S0, S1, V170]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, V157, V162, V170]

================================

Block 0x255
[0x255:0x25d]
---
Predecessors: [0x252, 0x25e]
Successors: [0x25e, 0x273]
---
0x255 JUMPDEST
0x256 DUP3
0x257 DUP2
0x258 GT
0x259 ISZERO
0x25a PUSH2 0x273
0x25d JUMPI
---
0x255: JUMPDEST 
0x258: V171 = GT V170 S2
0x259: V172 = ISZERO V171
0x25a: V173 = 0x273
0x25d: JUMPI 0x273 V172
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, S2, S1, V170]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, S2, S1, V170]

================================

Block 0x25e
[0x25e:0x272]
---
Predecessors: [0x255]
Successors: [0x255]
---
0x25e DUP3
0x25f MLOAD
0x260 DUP3
0x261 PUSH1 0x0
0x263 POP
0x264 SSTORE
0x265 SWAP2
0x266 PUSH1 0x20
0x268 ADD
0x269 SWAP2
0x26a SWAP1
0x26b PUSH1 0x1
0x26d ADD
0x26e SWAP1
0x26f PUSH2 0x255
0x272 JUMP
---
0x25f: V174 = M[S2]
0x261: V175 = 0x0
0x264: S[S1] = V174
0x266: V176 = 0x20
0x268: V177 = ADD 0x20 S2
0x26b: V178 = 0x1
0x26d: V179 = ADD 0x1 S1
0x26f: V180 = 0x255
0x272: JUMP 0x255
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, S2, S1, V170]
Stack pops: 3
Stack additions: [V177, V179, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, V177, V179, V170]

================================

Block 0x273
[0x273:0x273]
---
Predecessors: [0x255]
Successors: [0x274]
---
0x273 JUMPDEST
---
0x273: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, S2, S1, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, S2, S1, V170]

================================

Block 0x274
[0x274:0x280]
---
Predecessors: [0x1eb, 0x273]
Successors: [0x281]
---
0x274 JUMPDEST
0x275 POP
0x276 SWAP1
0x277 POP
0x278 PUSH2 0x29f
0x27b SWAP2
0x27c SWAP1
0x27d PUSH2 0x281
0x280 JUMP
---
0x274: JUMPDEST 
0x278: V181 = 0x29f
0x27d: V182 = 0x281
0x280: JUMP 0x281
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V167, S2, S1, S0]
Stack pops: 4
Stack additions: [0x29f, S3, S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29f, V167, S1]

================================

Block 0x281
[0x281:0x289]
---
Predecessors: [0x274, 0x28a]
Successors: [0x28a, 0x29b]
---
0x281 JUMPDEST
0x282 DUP1
0x283 DUP3
0x284 GT
0x285 ISZERO
0x286 PUSH2 0x29b
0x289 JUMPI
---
0x281: JUMPDEST 
0x284: V183 = GT V167 S0
0x285: V184 = ISZERO V183
0x286: V185 = 0x29b
0x289: JUMPI 0x29b V184
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29f, V167, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29f, V167, S0]

================================

Block 0x28a
[0x28a:0x29a]
---
Predecessors: [0x281]
Successors: [0x281]
---
0x28a PUSH1 0x0
0x28c DUP2
0x28d DUP2
0x28e POP
0x28f PUSH1 0x0
0x291 SWAP1
0x292 SSTORE
0x293 POP
0x294 PUSH1 0x1
0x296 ADD
0x297 PUSH2 0x281
0x29a JUMP
---
0x28a: V186 = 0x0
0x28f: V187 = 0x0
0x292: S[S0] = 0x0
0x294: V188 = 0x1
0x296: V189 = ADD 0x1 S0
0x297: V190 = 0x281
0x29a: JUMP 0x281
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29f, V167, S0]
Stack pops: 1
Stack additions: [V189]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29f, V167, V189]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x281]
Successors: [0x29f]
---
0x29b JUMPDEST
0x29c POP
0x29d SWAP1
0x29e JUMP
---
0x29b: JUMPDEST 
0x29e: JUMP 0x29f
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29f, V167, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V167]

================================

Block 0x29f
[0x29f:0x2e3]
---
Predecessors: [0x29b]
Successors: [0x73f]
---
0x29f JUMPDEST
0x2a0 POP
0x2a1 POP
0x2a2 PUSH1 0x0
0x2a4 PUSH1 0x2
0x2a6 PUSH1 0x0
0x2a8 POP
0x2a9 DUP2
0x2aa SWAP1
0x2ab SSTORE
0x2ac POP
0x2ad CALLER
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 AND
0x2c4 PUSH1 0x0
0x2c6 CALLVALUE
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP1
0x2cb SWAP1
0x2cc POP
0x2cd PUSH1 0x0
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 DUP1
0x2d3 DUP4
0x2d4 SUB
0x2d5 DUP2
0x2d6 DUP6
0x2d7 DUP9
0x2d8 DUP9
0x2d9 CALL
0x2da SWAP4
0x2db POP
0x2dc POP
0x2dd POP
0x2de POP
0x2df POP
0x2e0 PUSH2 0x73f
0x2e3 JUMP
---
0x29f: JUMPDEST 
0x2a2: V191 = 0x0
0x2a4: V192 = 0x2
0x2a6: V193 = 0x0
0x2ab: S[0x2] = 0x0
0x2ad: V194 = CALLER
0x2ae: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x2c4: V197 = 0x0
0x2c6: V198 = CALLVALUE
0x2c7: V199 = 0x40
0x2c9: V200 = M[0x40]
0x2cd: V201 = 0x0
0x2cf: V202 = 0x40
0x2d1: V203 = M[0x40]
0x2d4: V204 = SUB V200 V203
0x2d9: V205 = CALL 0x0 V196 V198 V203 V204 V203 0x0
0x2e0: V206 = 0x73f
0x2e3: JUMP 0x73f
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V167]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: []
Successors: [0x500]
---
0x2e4 PUSH2 0x500
0x2e7 JUMP
---
0x2e4: V207 = 0x500
0x2e7: JUMP 0x500
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e8
[0x2e8:0x30a]
---
Predecessors: [0x1bc]
Successors: [0x30b, 0x42e]
---
0x2e8 JUMPDEST
0x2e9 ADDRESS
0x2ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ff AND
0x300 BALANCE
0x301 PUSH1 0x2
0x303 CALLVALUE
0x304 MUL
0x305 GT
0x306 ISZERO
0x307 PUSH2 0x42e
0x30a JUMPI
---
0x2e8: JUMPDEST 
0x2e9: V208 = ADDRESS
0x2ea: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x300: V211 = BALANCE V210
0x301: V212 = 0x2
0x303: V213 = CALLVALUE
0x304: V214 = MUL V213 0x2
0x305: V215 = GT V214 V211
0x306: V216 = ISZERO V215
0x307: V217 = 0x42e
0x30a: JUMPI 0x42e V216
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x30b
[0x30b:0x397]
---
Predecessors: [0x2e8]
Successors: [0x398, 0x3ba]
---
0x30b PUSH1 0x60
0x30d PUSH1 0x40
0x30f MLOAD
0x310 SWAP1
0x311 DUP2
0x312 ADD
0x313 PUSH1 0x40
0x315 MSTORE
0x316 DUP1
0x317 PUSH1 0x2b
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e PUSH32 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x33f DUP2
0x340 MSTORE
0x341 PUSH1 0x20
0x343 ADD
0x344 PUSH32 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x365 DUP2
0x366 MSTORE
0x367 PUSH1 0x20
0x369 ADD
0x36a POP
0x36b PUSH1 0x3
0x36d PUSH1 0x0
0x36f POP
0x370 SWAP1
0x371 DUP1
0x372 MLOAD
0x373 SWAP1
0x374 PUSH1 0x20
0x376 ADD
0x377 SWAP1
0x378 DUP3
0x379 DUP1
0x37a SLOAD
0x37b DUP3
0x37c DUP3
0x37d SSTORE
0x37e SWAP1
0x37f PUSH1 0x0
0x381 MSTORE
0x382 PUSH1 0x20
0x384 PUSH1 0x0
0x386 SHA3
0x387 SWAP1
0x388 PUSH1 0x1f
0x38a ADD
0x38b PUSH1 0x20
0x38d SWAP1
0x38e DIV
0x38f DUP2
0x390 ADD
0x391 SWAP3
0x392 DUP3
0x393 ISZERO
0x394 PUSH2 0x3ba
0x397 JUMPI
---
0x30b: V218 = 0x60
0x30d: V219 = 0x40
0x30f: V220 = M[0x40]
0x312: V221 = ADD V220 0x60
0x313: V222 = 0x40
0x315: M[0x40] = V221
0x317: V223 = 0x2b
0x31a: M[V220] = 0x2b
0x31b: V224 = 0x20
0x31d: V225 = ADD 0x20 V220
0x31e: V226 = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x340: M[V225] = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x341: V227 = 0x20
0x343: V228 = ADD 0x20 V225
0x344: V229 = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x366: M[V228] = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x367: V230 = 0x20
0x369: V231 = ADD 0x20 V228
0x36b: V232 = 0x3
0x36d: V233 = 0x0
0x372: V234 = M[V220]
0x374: V235 = 0x20
0x376: V236 = ADD 0x20 V220
0x37a: V237 = S[0x3]
0x37d: S[0x3] = V234
0x37f: V238 = 0x0
0x381: M[0x0] = 0x3
0x382: V239 = 0x20
0x384: V240 = 0x0
0x386: V241 = SHA3 0x0 0x20
0x388: V242 = 0x1f
0x38a: V243 = ADD 0x1f V237
0x38b: V244 = 0x20
0x38e: V245 = DIV V243 0x20
0x390: V246 = ADD V241 V245
0x393: V247 = ISZERO V234
0x394: V248 = 0x3ba
0x397: JUMPI 0x3ba V247
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V246, V234, V241, V236]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, V234, V241, V236]

================================

Block 0x398
[0x398:0x39a]
---
Predecessors: [0x30b]
Successors: [0x39b]
---
0x398 SWAP2
0x399 DUP3
0x39a ADD
---
0x39a: V249 = ADD V236 V234
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, V234, V241, V236]
Stack pops: 3
Stack additions: [S0, S1, V249]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, V236, V241, V249]

================================

Block 0x39b
[0x39b:0x3a3]
---
Predecessors: [0x398, 0x3a4]
Successors: [0x3a4, 0x3b9]
---
0x39b JUMPDEST
0x39c DUP3
0x39d DUP2
0x39e GT
0x39f ISZERO
0x3a0 PUSH2 0x3b9
0x3a3 JUMPI
---
0x39b: JUMPDEST 
0x39e: V250 = GT V249 S2
0x39f: V251 = ISZERO V250
0x3a0: V252 = 0x3b9
0x3a3: JUMPI 0x3b9 V251
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, S2, S1, V249]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, S2, S1, V249]

================================

Block 0x3a4
[0x3a4:0x3b8]
---
Predecessors: [0x39b]
Successors: [0x39b]
---
0x3a4 DUP3
0x3a5 MLOAD
0x3a6 DUP3
0x3a7 PUSH1 0x0
0x3a9 POP
0x3aa SSTORE
0x3ab SWAP2
0x3ac PUSH1 0x20
0x3ae ADD
0x3af SWAP2
0x3b0 SWAP1
0x3b1 PUSH1 0x1
0x3b3 ADD
0x3b4 SWAP1
0x3b5 PUSH2 0x39b
0x3b8 JUMP
---
0x3a5: V253 = M[S2]
0x3a7: V254 = 0x0
0x3aa: S[S1] = V253
0x3ac: V255 = 0x20
0x3ae: V256 = ADD 0x20 S2
0x3b1: V257 = 0x1
0x3b3: V258 = ADD 0x1 S1
0x3b5: V259 = 0x39b
0x3b8: JUMP 0x39b
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, S2, S1, V249]
Stack pops: 3
Stack additions: [V256, V258, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, V256, V258, V249]

================================

Block 0x3b9
[0x3b9:0x3b9]
---
Predecessors: [0x39b]
Successors: [0x3ba]
---
0x3b9 JUMPDEST
---
0x3b9: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, S2, S1, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, S2, S1, V249]

================================

Block 0x3ba
[0x3ba:0x3c6]
---
Predecessors: [0x30b, 0x3b9]
Successors: [0x3c7]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc SWAP1
0x3bd POP
0x3be PUSH2 0x3e5
0x3c1 SWAP2
0x3c2 SWAP1
0x3c3 PUSH2 0x3c7
0x3c6 JUMP
---
0x3ba: JUMPDEST 
0x3be: V260 = 0x3e5
0x3c3: V261 = 0x3c7
0x3c6: JUMP 0x3c7
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V246, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3e5, S3, S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e5, V246, S1]

================================

Block 0x3c7
[0x3c7:0x3cf]
---
Predecessors: [0x3ba, 0x3d0]
Successors: [0x3d0, 0x3e1]
---
0x3c7 JUMPDEST
0x3c8 DUP1
0x3c9 DUP3
0x3ca GT
0x3cb ISZERO
0x3cc PUSH2 0x3e1
0x3cf JUMPI
---
0x3c7: JUMPDEST 
0x3ca: V262 = GT V246 S0
0x3cb: V263 = ISZERO V262
0x3cc: V264 = 0x3e1
0x3cf: JUMPI 0x3e1 V263
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e5, V246, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e5, V246, S0]

================================

Block 0x3d0
[0x3d0:0x3e0]
---
Predecessors: [0x3c7]
Successors: [0x3c7]
---
0x3d0 PUSH1 0x0
0x3d2 DUP2
0x3d3 DUP2
0x3d4 POP
0x3d5 PUSH1 0x0
0x3d7 SWAP1
0x3d8 SSTORE
0x3d9 POP
0x3da PUSH1 0x1
0x3dc ADD
0x3dd PUSH2 0x3c7
0x3e0 JUMP
---
0x3d0: V265 = 0x0
0x3d5: V266 = 0x0
0x3d8: S[S0] = 0x0
0x3da: V267 = 0x1
0x3dc: V268 = ADD 0x1 S0
0x3dd: V269 = 0x3c7
0x3e0: JUMP 0x3c7
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e5, V246, S0]
Stack pops: 1
Stack additions: [V268]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e5, V246, V268]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3c7]
Successors: [0x3e5]
---
0x3e1 JUMPDEST
0x3e2 POP
0x3e3 SWAP1
0x3e4 JUMP
---
0x3e1: JUMPDEST 
0x3e4: JUMP 0x3e5
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e5, V246, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V246]

================================

Block 0x3e5
[0x3e5:0x429]
---
Predecessors: [0x3e1]
Successors: [0x73f]
---
0x3e5 JUMPDEST
0x3e6 POP
0x3e7 POP
0x3e8 PUSH1 0x0
0x3ea PUSH1 0x2
0x3ec PUSH1 0x0
0x3ee POP
0x3ef DUP2
0x3f0 SWAP1
0x3f1 SSTORE
0x3f2 POP
0x3f3 CALLER
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a PUSH1 0x0
0x40c CALLVALUE
0x40d PUSH1 0x40
0x40f MLOAD
0x410 DUP1
0x411 SWAP1
0x412 POP
0x413 PUSH1 0x0
0x415 PUSH1 0x40
0x417 MLOAD
0x418 DUP1
0x419 DUP4
0x41a SUB
0x41b DUP2
0x41c DUP6
0x41d DUP9
0x41e DUP9
0x41f CALL
0x420 SWAP4
0x421 POP
0x422 POP
0x423 POP
0x424 POP
0x425 POP
0x426 PUSH2 0x73f
0x429 JUMP
---
0x3e5: JUMPDEST 
0x3e8: V270 = 0x0
0x3ea: V271 = 0x2
0x3ec: V272 = 0x0
0x3f1: S[0x2] = 0x0
0x3f3: V273 = CALLER
0x3f4: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x40a: V276 = 0x0
0x40c: V277 = CALLVALUE
0x40d: V278 = 0x40
0x40f: V279 = M[0x40]
0x413: V280 = 0x0
0x415: V281 = 0x40
0x417: V282 = M[0x40]
0x41a: V283 = SUB V279 V282
0x41f: V284 = CALL 0x0 V275 V277 V282 V283 V282 0x0
0x426: V285 = 0x73f
0x429: JUMP 0x73f
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V246]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x42a
[0x42a:0x42d]
---
Predecessors: []
Successors: [0x4ff]
---
0x42a PUSH2 0x4ff
0x42d JUMP
---
0x42a: V286 = 0x4ff
0x42d: JUMP 0x4ff
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42e
[0x42e:0x437]
---
Predecessors: [0x2e8]
Successors: [0x438, 0x4fe]
---
0x42e JUMPDEST
0x42f PUSH1 0x0
0x431 CALLVALUE
0x432 EQ
0x433 ISZERO
0x434 PUSH2 0x4fe
0x437 JUMPI
---
0x42e: JUMPDEST 
0x42f: V287 = 0x0
0x431: V288 = CALLVALUE
0x432: V289 = EQ V288 0x0
0x433: V290 = ISZERO V289
0x434: V291 = 0x4fe
0x437: JUMPI 0x4fe V290
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x438
[0x438:0x49e]
---
Predecessors: [0x42e]
Successors: [0x49f, 0x4c1]
---
0x438 PUSH1 0x40
0x43a PUSH1 0x40
0x43c MLOAD
0x43d SWAP1
0x43e DUP2
0x43f ADD
0x440 PUSH1 0x40
0x442 MSTORE
0x443 DUP1
0x444 PUSH1 0xe
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b PUSH32 0x776167657220776173207a65726f000000000000000000000000000000000000
0x46c DUP2
0x46d MSTORE
0x46e PUSH1 0x20
0x470 ADD
0x471 POP
0x472 PUSH1 0x3
0x474 PUSH1 0x0
0x476 POP
0x477 SWAP1
0x478 DUP1
0x479 MLOAD
0x47a SWAP1
0x47b PUSH1 0x20
0x47d ADD
0x47e SWAP1
0x47f DUP3
0x480 DUP1
0x481 SLOAD
0x482 DUP3
0x483 DUP3
0x484 SSTORE
0x485 SWAP1
0x486 PUSH1 0x0
0x488 MSTORE
0x489 PUSH1 0x20
0x48b PUSH1 0x0
0x48d SHA3
0x48e SWAP1
0x48f PUSH1 0x1f
0x491 ADD
0x492 PUSH1 0x20
0x494 SWAP1
0x495 DIV
0x496 DUP2
0x497 ADD
0x498 SWAP3
0x499 DUP3
0x49a ISZERO
0x49b PUSH2 0x4c1
0x49e JUMPI
---
0x438: V292 = 0x40
0x43a: V293 = 0x40
0x43c: V294 = M[0x40]
0x43f: V295 = ADD V294 0x40
0x440: V296 = 0x40
0x442: M[0x40] = V295
0x444: V297 = 0xe
0x447: M[V294] = 0xe
0x448: V298 = 0x20
0x44a: V299 = ADD 0x20 V294
0x44b: V300 = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x46d: M[V299] = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x46e: V301 = 0x20
0x470: V302 = ADD 0x20 V299
0x472: V303 = 0x3
0x474: V304 = 0x0
0x479: V305 = M[V294]
0x47b: V306 = 0x20
0x47d: V307 = ADD 0x20 V294
0x481: V308 = S[0x3]
0x484: S[0x3] = V305
0x486: V309 = 0x0
0x488: M[0x0] = 0x3
0x489: V310 = 0x20
0x48b: V311 = 0x0
0x48d: V312 = SHA3 0x0 0x20
0x48f: V313 = 0x1f
0x491: V314 = ADD 0x1f V308
0x492: V315 = 0x20
0x495: V316 = DIV V314 0x20
0x497: V317 = ADD V312 V316
0x49a: V318 = ISZERO V305
0x49b: V319 = 0x4c1
0x49e: JUMPI 0x4c1 V318
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V317, V305, V312, V307]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, V305, V312, V307]

================================

Block 0x49f
[0x49f:0x4a1]
---
Predecessors: [0x438]
Successors: [0x4a2]
---
0x49f SWAP2
0x4a0 DUP3
0x4a1 ADD
---
0x4a1: V320 = ADD V307 V305
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, V305, V312, V307]
Stack pops: 3
Stack additions: [S0, S1, V320]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, V307, V312, V320]

================================

Block 0x4a2
[0x4a2:0x4aa]
---
Predecessors: [0x49f, 0x4ab]
Successors: [0x4ab, 0x4c0]
---
0x4a2 JUMPDEST
0x4a3 DUP3
0x4a4 DUP2
0x4a5 GT
0x4a6 ISZERO
0x4a7 PUSH2 0x4c0
0x4aa JUMPI
---
0x4a2: JUMPDEST 
0x4a5: V321 = GT V320 S2
0x4a6: V322 = ISZERO V321
0x4a7: V323 = 0x4c0
0x4aa: JUMPI 0x4c0 V322
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, S2, S1, V320]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, S2, S1, V320]

================================

Block 0x4ab
[0x4ab:0x4bf]
---
Predecessors: [0x4a2]
Successors: [0x4a2]
---
0x4ab DUP3
0x4ac MLOAD
0x4ad DUP3
0x4ae PUSH1 0x0
0x4b0 POP
0x4b1 SSTORE
0x4b2 SWAP2
0x4b3 PUSH1 0x20
0x4b5 ADD
0x4b6 SWAP2
0x4b7 SWAP1
0x4b8 PUSH1 0x1
0x4ba ADD
0x4bb SWAP1
0x4bc PUSH2 0x4a2
0x4bf JUMP
---
0x4ac: V324 = M[S2]
0x4ae: V325 = 0x0
0x4b1: S[S1] = V324
0x4b3: V326 = 0x20
0x4b5: V327 = ADD 0x20 S2
0x4b8: V328 = 0x1
0x4ba: V329 = ADD 0x1 S1
0x4bc: V330 = 0x4a2
0x4bf: JUMP 0x4a2
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, S2, S1, V320]
Stack pops: 3
Stack additions: [V327, V329, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, V327, V329, V320]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x4a2]
Successors: [0x4c1]
---
0x4c0 JUMPDEST
---
0x4c0: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, S2, S1, V320]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, S2, S1, V320]

================================

Block 0x4c1
[0x4c1:0x4cd]
---
Predecessors: [0x438, 0x4c0]
Successors: [0x4ce]
---
0x4c1 JUMPDEST
0x4c2 POP
0x4c3 SWAP1
0x4c4 POP
0x4c5 PUSH2 0x4ec
0x4c8 SWAP2
0x4c9 SWAP1
0x4ca PUSH2 0x4ce
0x4cd JUMP
---
0x4c1: JUMPDEST 
0x4c5: V331 = 0x4ec
0x4ca: V332 = 0x4ce
0x4cd: JUMP 0x4ce
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V317, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4ec, S3, S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4ec, V317, S1]

================================

Block 0x4ce
[0x4ce:0x4d6]
---
Predecessors: [0x4c1, 0x4d7]
Successors: [0x4d7, 0x4e8]
---
0x4ce JUMPDEST
0x4cf DUP1
0x4d0 DUP3
0x4d1 GT
0x4d2 ISZERO
0x4d3 PUSH2 0x4e8
0x4d6 JUMPI
---
0x4ce: JUMPDEST 
0x4d1: V333 = GT V317 S0
0x4d2: V334 = ISZERO V333
0x4d3: V335 = 0x4e8
0x4d6: JUMPI 0x4e8 V334
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4ec, V317, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4ec, V317, S0]

================================

Block 0x4d7
[0x4d7:0x4e7]
---
Predecessors: [0x4ce]
Successors: [0x4ce]
---
0x4d7 PUSH1 0x0
0x4d9 DUP2
0x4da DUP2
0x4db POP
0x4dc PUSH1 0x0
0x4de SWAP1
0x4df SSTORE
0x4e0 POP
0x4e1 PUSH1 0x1
0x4e3 ADD
0x4e4 PUSH2 0x4ce
0x4e7 JUMP
---
0x4d7: V336 = 0x0
0x4dc: V337 = 0x0
0x4df: S[S0] = 0x0
0x4e1: V338 = 0x1
0x4e3: V339 = ADD 0x1 S0
0x4e4: V340 = 0x4ce
0x4e7: JUMP 0x4ce
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4ec, V317, S0]
Stack pops: 1
Stack additions: [V339]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4ec, V317, V339]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x4ce]
Successors: [0x4ec]
---
0x4e8 JUMPDEST
0x4e9 POP
0x4ea SWAP1
0x4eb JUMP
---
0x4e8: JUMPDEST 
0x4eb: JUMP 0x4ec
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4ec, V317, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V317]

================================

Block 0x4ec
[0x4ec:0x4fd]
---
Predecessors: [0x4e8]
Successors: [0x73f]
---
0x4ec JUMPDEST
0x4ed POP
0x4ee POP
0x4ef PUSH1 0x0
0x4f1 PUSH1 0x2
0x4f3 PUSH1 0x0
0x4f5 POP
0x4f6 DUP2
0x4f7 SWAP1
0x4f8 SSTORE
0x4f9 POP
0x4fa PUSH2 0x73f
0x4fd JUMP
---
0x4ec: JUMPDEST 
0x4ef: V341 = 0x0
0x4f1: V342 = 0x2
0x4f3: V343 = 0x0
0x4f8: S[0x2] = 0x0
0x4fa: V344 = 0x73f
0x4fd: JUMP 0x73f
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V317]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x4fe
[0x4fe:0x4fe]
---
Predecessors: [0x42e]
Successors: [0x4ff]
---
0x4fe JUMPDEST
---
0x4fe: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x4ff
[0x4ff:0x4ff]
---
Predecessors: [0x42a, 0x4fe]
Successors: [0x500]
---
0x4ff JUMPDEST
---
0x4ff: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x500
[0x500:0x515]
---
Predecessors: [0x2e4, 0x4ff]
Successors: [0x88b]
---
0x500 JUMPDEST
0x501 CALLVALUE
0x502 SWAP2
0x503 POP
0x504 NUMBER
0x505 PUSH1 0x4
0x507 PUSH1 0x0
0x509 POP
0x50a DUP2
0x50b SWAP1
0x50c SSTORE
0x50d POP
0x50e PUSH2 0x516
0x511 DUP3
0x512 PUSH2 0x88b
0x515 JUMP
---
0x500: JUMPDEST 
0x501: V345 = CALLVALUE
0x504: V346 = NUMBER
0x505: V347 = 0x4
0x507: V348 = 0x0
0x50c: S[0x4] = V346
0x50e: V349 = 0x516
0x512: V350 = 0x88b
0x515: JUMP 0x88b
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 2
Stack additions: [V345, S0, 0x516, V345]
Exit stack: [V8, 0xad, V345, 0x0, 0x516, V345]

================================

Block 0x516
[0x516:0x524]
---
Predecessors: [0x910]
Successors: [0x525, 0x622]
---
0x516 JUMPDEST
0x517 SWAP1
0x518 POP
0x519 PUSH1 0x0
0x51b PUSH1 0x2
0x51d DUP3
0x51e MOD
0x51f EQ
0x520 ISZERO
0x521 PUSH2 0x622
0x524 JUMPI
---
0x516: JUMPDEST 
0x519: V351 = 0x0
0x51b: V352 = 0x2
0x51e: V353 = MOD V594 0x2
0x51f: V354 = EQ V353 0x0
0x520: V355 = ISZERO V354
0x521: V356 = 0x622
0x524: JUMPI 0x622 V355
---
Entry stack: [V8, 0xad, V345, 0x0, V594]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, 0xad, V345, V594]

================================

Block 0x525
[0x525:0x5c9]
---
Predecessors: [0x516]
Successors: [0x5ca, 0x5ec]
---
0x525 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x546 DUP3
0x547 PUSH16 0xffffffffffffffffffffffffffffffff
0x558 AND
0x559 MUL
0x55a PUSH1 0x2
0x55c PUSH1 0x0
0x55e POP
0x55f DUP2
0x560 SWAP1
0x561 SSTORE
0x562 POP
0x563 PUSH1 0x40
0x565 PUSH1 0x40
0x567 MLOAD
0x568 SWAP1
0x569 DUP2
0x56a ADD
0x56b PUSH1 0x40
0x56d MSTORE
0x56e DUP1
0x56f PUSH1 0x4
0x571 DUP2
0x572 MSTORE
0x573 PUSH1 0x20
0x575 ADD
0x576 PUSH32 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x20
0x59b ADD
0x59c POP
0x59d PUSH1 0x3
0x59f PUSH1 0x0
0x5a1 POP
0x5a2 SWAP1
0x5a3 DUP1
0x5a4 MLOAD
0x5a5 SWAP1
0x5a6 PUSH1 0x20
0x5a8 ADD
0x5a9 SWAP1
0x5aa DUP3
0x5ab DUP1
0x5ac SLOAD
0x5ad DUP3
0x5ae DUP3
0x5af SSTORE
0x5b0 SWAP1
0x5b1 PUSH1 0x0
0x5b3 MSTORE
0x5b4 PUSH1 0x20
0x5b6 PUSH1 0x0
0x5b8 SHA3
0x5b9 SWAP1
0x5ba PUSH1 0x1f
0x5bc ADD
0x5bd PUSH1 0x20
0x5bf SWAP1
0x5c0 DIV
0x5c1 DUP2
0x5c2 ADD
0x5c3 SWAP3
0x5c4 DUP3
0x5c5 ISZERO
0x5c6 PUSH2 0x5ec
0x5c9 JUMPI
---
0x525: V357 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x547: V358 = 0xffffffffffffffffffffffffffffffff
0x558: V359 = AND 0xffffffffffffffffffffffffffffffff V345
0x559: V360 = MUL V359 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x55a: V361 = 0x2
0x55c: V362 = 0x0
0x561: S[0x2] = V360
0x563: V363 = 0x40
0x565: V364 = 0x40
0x567: V365 = M[0x40]
0x56a: V366 = ADD V365 0x40
0x56b: V367 = 0x40
0x56d: M[0x40] = V366
0x56f: V368 = 0x4
0x572: M[V365] = 0x4
0x573: V369 = 0x20
0x575: V370 = ADD 0x20 V365
0x576: V371 = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x598: M[V370] = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x599: V372 = 0x20
0x59b: V373 = ADD 0x20 V370
0x59d: V374 = 0x3
0x59f: V375 = 0x0
0x5a4: V376 = M[V365]
0x5a6: V377 = 0x20
0x5a8: V378 = ADD 0x20 V365
0x5ac: V379 = S[0x3]
0x5af: S[0x3] = V376
0x5b1: V380 = 0x0
0x5b3: M[0x0] = 0x3
0x5b4: V381 = 0x20
0x5b6: V382 = 0x0
0x5b8: V383 = SHA3 0x0 0x20
0x5ba: V384 = 0x1f
0x5bc: V385 = ADD 0x1f V379
0x5bd: V386 = 0x20
0x5c0: V387 = DIV V385 0x20
0x5c2: V388 = ADD V383 V387
0x5c5: V389 = ISZERO V376
0x5c6: V390 = 0x5ec
0x5c9: JUMPI 0x5ec V389
---
Entry stack: [V8, 0xad, V345, V594]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V388, V376, V383, V378]
Exit stack: [V8, 0xad, V345, V594, 0x3, V388, V376, V383, V378]

================================

Block 0x5ca
[0x5ca:0x5cc]
---
Predecessors: [0x525]
Successors: [0x5cd]
---
0x5ca SWAP2
0x5cb DUP3
0x5cc ADD
---
0x5cc: V391 = ADD V378 V376
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V388, V376, V383, V378]
Stack pops: 3
Stack additions: [S0, S1, V391]
Exit stack: [V8, 0xad, V345, V594, 0x3, V388, V378, V383, V391]

================================

Block 0x5cd
[0x5cd:0x5d5]
---
Predecessors: [0x5ca, 0x5d6]
Successors: [0x5d6, 0x5eb]
---
0x5cd JUMPDEST
0x5ce DUP3
0x5cf DUP2
0x5d0 GT
0x5d1 ISZERO
0x5d2 PUSH2 0x5eb
0x5d5 JUMPI
---
0x5cd: JUMPDEST 
0x5d0: V392 = GT V391 S2
0x5d1: V393 = ISZERO V392
0x5d2: V394 = 0x5eb
0x5d5: JUMPI 0x5eb V393
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V388, S2, S1, V391]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, V345, V594, 0x3, V388, S2, S1, V391]

================================

Block 0x5d6
[0x5d6:0x5ea]
---
Predecessors: [0x5cd]
Successors: [0x5cd]
---
0x5d6 DUP3
0x5d7 MLOAD
0x5d8 DUP3
0x5d9 PUSH1 0x0
0x5db POP
0x5dc SSTORE
0x5dd SWAP2
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 SWAP2
0x5e2 SWAP1
0x5e3 PUSH1 0x1
0x5e5 ADD
0x5e6 SWAP1
0x5e7 PUSH2 0x5cd
0x5ea JUMP
---
0x5d7: V395 = M[S2]
0x5d9: V396 = 0x0
0x5dc: S[S1] = V395
0x5de: V397 = 0x20
0x5e0: V398 = ADD 0x20 S2
0x5e3: V399 = 0x1
0x5e5: V400 = ADD 0x1 S1
0x5e7: V401 = 0x5cd
0x5ea: JUMP 0x5cd
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V388, S2, S1, V391]
Stack pops: 3
Stack additions: [V398, V400, S0]
Exit stack: [V8, 0xad, V345, V594, 0x3, V388, V398, V400, V391]

================================

Block 0x5eb
[0x5eb:0x5eb]
---
Predecessors: [0x5cd]
Successors: [0x5ec]
---
0x5eb JUMPDEST
---
0x5eb: JUMPDEST 
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V388, S2, S1, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, V345, V594, 0x3, V388, S2, S1, V391]

================================

Block 0x5ec
[0x5ec:0x5f8]
---
Predecessors: [0x525, 0x5eb]
Successors: [0x5f9]
---
0x5ec JUMPDEST
0x5ed POP
0x5ee SWAP1
0x5ef POP
0x5f0 PUSH2 0x617
0x5f3 SWAP2
0x5f4 SWAP1
0x5f5 PUSH2 0x5f9
0x5f8 JUMP
---
0x5ec: JUMPDEST 
0x5f0: V402 = 0x617
0x5f5: V403 = 0x5f9
0x5f8: JUMP 0x5f9
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V388, S2, S1, S0]
Stack pops: 4
Stack additions: [0x617, S3, S1]
Exit stack: [V8, 0xad, V345, V594, 0x3, 0x617, V388, S1]

================================

Block 0x5f9
[0x5f9:0x601]
---
Predecessors: [0x5ec, 0x602]
Successors: [0x602, 0x613]
---
0x5f9 JUMPDEST
0x5fa DUP1
0x5fb DUP3
0x5fc GT
0x5fd ISZERO
0x5fe PUSH2 0x613
0x601 JUMPI
---
0x5f9: JUMPDEST 
0x5fc: V404 = GT V388 S0
0x5fd: V405 = ISZERO V404
0x5fe: V406 = 0x613
0x601: JUMPI 0x613 V405
---
Entry stack: [V8, 0xad, V345, V594, 0x3, 0x617, V388, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, V345, V594, 0x3, 0x617, V388, S0]

================================

Block 0x602
[0x602:0x612]
---
Predecessors: [0x5f9]
Successors: [0x5f9]
---
0x602 PUSH1 0x0
0x604 DUP2
0x605 DUP2
0x606 POP
0x607 PUSH1 0x0
0x609 SWAP1
0x60a SSTORE
0x60b POP
0x60c PUSH1 0x1
0x60e ADD
0x60f PUSH2 0x5f9
0x612 JUMP
---
0x602: V407 = 0x0
0x607: V408 = 0x0
0x60a: S[S0] = 0x0
0x60c: V409 = 0x1
0x60e: V410 = ADD 0x1 S0
0x60f: V411 = 0x5f9
0x612: JUMP 0x5f9
---
Entry stack: [V8, 0xad, V345, V594, 0x3, 0x617, V388, S0]
Stack pops: 1
Stack additions: [V410]
Exit stack: [V8, 0xad, V345, V594, 0x3, 0x617, V388, V410]

================================

Block 0x613
[0x613:0x616]
---
Predecessors: [0x5f9]
Successors: [0x617]
---
0x613 JUMPDEST
0x614 POP
0x615 SWAP1
0x616 JUMP
---
0x613: JUMPDEST 
0x616: JUMP 0x617
---
Entry stack: [V8, 0xad, V345, V594, 0x3, 0x617, V388, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, V345, V594, 0x3, V388]

================================

Block 0x617
[0x617:0x61d]
---
Predecessors: [0x613]
Successors: [0x73f]
---
0x617 JUMPDEST
0x618 POP
0x619 POP
0x61a PUSH2 0x73f
0x61d JUMP
---
0x617: JUMPDEST 
0x61a: V412 = 0x73f
0x61d: JUMP 0x73f
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V388]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, V345, V594]

================================

Block 0x61e
[0x61e:0x621]
---
Predecessors: []
Successors: [0x73e]
---
0x61e PUSH2 0x73e
0x621 JUMP
---
0x61e: V413 = 0x73e
0x621: JUMP 0x73e
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x622
[0x622:0x6a5]
---
Predecessors: [0x516]
Successors: [0x6a6, 0x6c8]
---
0x622 JUMPDEST
0x623 DUP2
0x624 PUSH16 0xffffffffffffffffffffffffffffffff
0x635 AND
0x636 PUSH1 0x2
0x638 PUSH1 0x0
0x63a POP
0x63b DUP2
0x63c SWAP1
0x63d SSTORE
0x63e POP
0x63f PUSH1 0x40
0x641 PUSH1 0x40
0x643 MLOAD
0x644 SWAP1
0x645 DUP2
0x646 ADD
0x647 PUSH1 0x40
0x649 MSTORE
0x64a DUP1
0x64b PUSH1 0x3
0x64d DUP2
0x64e MSTORE
0x64f PUSH1 0x20
0x651 ADD
0x652 PUSH32 0x77696e0000000000000000000000000000000000000000000000000000000000
0x673 DUP2
0x674 MSTORE
0x675 PUSH1 0x20
0x677 ADD
0x678 POP
0x679 PUSH1 0x3
0x67b PUSH1 0x0
0x67d POP
0x67e SWAP1
0x67f DUP1
0x680 MLOAD
0x681 SWAP1
0x682 PUSH1 0x20
0x684 ADD
0x685 SWAP1
0x686 DUP3
0x687 DUP1
0x688 SLOAD
0x689 DUP3
0x68a DUP3
0x68b SSTORE
0x68c SWAP1
0x68d PUSH1 0x0
0x68f MSTORE
0x690 PUSH1 0x20
0x692 PUSH1 0x0
0x694 SHA3
0x695 SWAP1
0x696 PUSH1 0x1f
0x698 ADD
0x699 PUSH1 0x20
0x69b SWAP1
0x69c DIV
0x69d DUP2
0x69e ADD
0x69f SWAP3
0x6a0 DUP3
0x6a1 ISZERO
0x6a2 PUSH2 0x6c8
0x6a5 JUMPI
---
0x622: JUMPDEST 
0x624: V414 = 0xffffffffffffffffffffffffffffffff
0x635: V415 = AND 0xffffffffffffffffffffffffffffffff V345
0x636: V416 = 0x2
0x638: V417 = 0x0
0x63d: S[0x2] = V415
0x63f: V418 = 0x40
0x641: V419 = 0x40
0x643: V420 = M[0x40]
0x646: V421 = ADD V420 0x40
0x647: V422 = 0x40
0x649: M[0x40] = V421
0x64b: V423 = 0x3
0x64e: M[V420] = 0x3
0x64f: V424 = 0x20
0x651: V425 = ADD 0x20 V420
0x652: V426 = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x674: M[V425] = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x675: V427 = 0x20
0x677: V428 = ADD 0x20 V425
0x679: V429 = 0x3
0x67b: V430 = 0x0
0x680: V431 = M[V420]
0x682: V432 = 0x20
0x684: V433 = ADD 0x20 V420
0x688: V434 = S[0x3]
0x68b: S[0x3] = V431
0x68d: V435 = 0x0
0x68f: M[0x0] = 0x3
0x690: V436 = 0x20
0x692: V437 = 0x0
0x694: V438 = SHA3 0x0 0x20
0x696: V439 = 0x1f
0x698: V440 = ADD 0x1f V434
0x699: V441 = 0x20
0x69c: V442 = DIV V440 0x20
0x69e: V443 = ADD V438 V442
0x6a1: V444 = ISZERO V431
0x6a2: V445 = 0x6c8
0x6a5: JUMPI 0x6c8 V444
---
Entry stack: [V8, 0xad, V345, V594]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V443, V431, V438, V433]
Exit stack: [V8, 0xad, V345, V594, 0x3, V443, V431, V438, V433]

================================

Block 0x6a6
[0x6a6:0x6a8]
---
Predecessors: [0x622]
Successors: [0x6a9]
---
0x6a6 SWAP2
0x6a7 DUP3
0x6a8 ADD
---
0x6a8: V446 = ADD V433 V431
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V443, V431, V438, V433]
Stack pops: 3
Stack additions: [S0, S1, V446]
Exit stack: [V8, 0xad, V345, V594, 0x3, V443, V433, V438, V446]

================================

Block 0x6a9
[0x6a9:0x6b1]
---
Predecessors: [0x6a6, 0x6b2]
Successors: [0x6b2, 0x6c7]
---
0x6a9 JUMPDEST
0x6aa DUP3
0x6ab DUP2
0x6ac GT
0x6ad ISZERO
0x6ae PUSH2 0x6c7
0x6b1 JUMPI
---
0x6a9: JUMPDEST 
0x6ac: V447 = GT V446 S2
0x6ad: V448 = ISZERO V447
0x6ae: V449 = 0x6c7
0x6b1: JUMPI 0x6c7 V448
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V443, S2, S1, V446]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, V345, V594, 0x3, V443, S2, S1, V446]

================================

Block 0x6b2
[0x6b2:0x6c6]
---
Predecessors: [0x6a9]
Successors: [0x6a9]
---
0x6b2 DUP3
0x6b3 MLOAD
0x6b4 DUP3
0x6b5 PUSH1 0x0
0x6b7 POP
0x6b8 SSTORE
0x6b9 SWAP2
0x6ba PUSH1 0x20
0x6bc ADD
0x6bd SWAP2
0x6be SWAP1
0x6bf PUSH1 0x1
0x6c1 ADD
0x6c2 SWAP1
0x6c3 PUSH2 0x6a9
0x6c6 JUMP
---
0x6b3: V450 = M[S2]
0x6b5: V451 = 0x0
0x6b8: S[S1] = V450
0x6ba: V452 = 0x20
0x6bc: V453 = ADD 0x20 S2
0x6bf: V454 = 0x1
0x6c1: V455 = ADD 0x1 S1
0x6c3: V456 = 0x6a9
0x6c6: JUMP 0x6a9
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V443, S2, S1, V446]
Stack pops: 3
Stack additions: [V453, V455, S0]
Exit stack: [V8, 0xad, V345, V594, 0x3, V443, V453, V455, V446]

================================

Block 0x6c7
[0x6c7:0x6c7]
---
Predecessors: [0x6a9]
Successors: [0x6c8]
---
0x6c7 JUMPDEST
---
0x6c7: JUMPDEST 
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V443, S2, S1, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, V345, V594, 0x3, V443, S2, S1, V446]

================================

Block 0x6c8
[0x6c8:0x6d4]
---
Predecessors: [0x622, 0x6c7]
Successors: [0x6d5]
---
0x6c8 JUMPDEST
0x6c9 POP
0x6ca SWAP1
0x6cb POP
0x6cc PUSH2 0x6f3
0x6cf SWAP2
0x6d0 SWAP1
0x6d1 PUSH2 0x6d5
0x6d4 JUMP
---
0x6c8: JUMPDEST 
0x6cc: V457 = 0x6f3
0x6d1: V458 = 0x6d5
0x6d4: JUMP 0x6d5
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V443, S2, S1, S0]
Stack pops: 4
Stack additions: [0x6f3, S3, S1]
Exit stack: [V8, 0xad, V345, V594, 0x3, 0x6f3, V443, S1]

================================

Block 0x6d5
[0x6d5:0x6dd]
---
Predecessors: [0x6c8, 0x6de]
Successors: [0x6de, 0x6ef]
---
0x6d5 JUMPDEST
0x6d6 DUP1
0x6d7 DUP3
0x6d8 GT
0x6d9 ISZERO
0x6da PUSH2 0x6ef
0x6dd JUMPI
---
0x6d5: JUMPDEST 
0x6d8: V459 = GT V443 S0
0x6d9: V460 = ISZERO V459
0x6da: V461 = 0x6ef
0x6dd: JUMPI 0x6ef V460
---
Entry stack: [V8, 0xad, V345, V594, 0x3, 0x6f3, V443, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, V345, V594, 0x3, 0x6f3, V443, S0]

================================

Block 0x6de
[0x6de:0x6ee]
---
Predecessors: [0x6d5]
Successors: [0x6d5]
---
0x6de PUSH1 0x0
0x6e0 DUP2
0x6e1 DUP2
0x6e2 POP
0x6e3 PUSH1 0x0
0x6e5 SWAP1
0x6e6 SSTORE
0x6e7 POP
0x6e8 PUSH1 0x1
0x6ea ADD
0x6eb PUSH2 0x6d5
0x6ee JUMP
---
0x6de: V462 = 0x0
0x6e3: V463 = 0x0
0x6e6: S[S0] = 0x0
0x6e8: V464 = 0x1
0x6ea: V465 = ADD 0x1 S0
0x6eb: V466 = 0x6d5
0x6ee: JUMP 0x6d5
---
Entry stack: [V8, 0xad, V345, V594, 0x3, 0x6f3, V443, S0]
Stack pops: 1
Stack additions: [V465]
Exit stack: [V8, 0xad, V345, V594, 0x3, 0x6f3, V443, V465]

================================

Block 0x6ef
[0x6ef:0x6f2]
---
Predecessors: [0x6d5]
Successors: [0x6f3]
---
0x6ef JUMPDEST
0x6f0 POP
0x6f1 SWAP1
0x6f2 JUMP
---
0x6ef: JUMPDEST 
0x6f2: JUMP 0x6f3
---
Entry stack: [V8, 0xad, V345, V594, 0x3, 0x6f3, V443, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, V345, V594, 0x3, V443]

================================

Block 0x6f3
[0x6f3:0x73d]
---
Predecessors: [0x6ef]
Successors: [0x73e]
---
0x6f3 JUMPDEST
0x6f4 POP
0x6f5 POP
0x6f6 CALLER
0x6f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70c AND
0x70d PUSH1 0x0
0x70f PUSH1 0x2
0x711 DUP5
0x712 MUL
0x713 PUSH16 0xffffffffffffffffffffffffffffffff
0x724 AND
0x725 PUSH1 0x40
0x727 MLOAD
0x728 DUP1
0x729 SWAP1
0x72a POP
0x72b PUSH1 0x0
0x72d PUSH1 0x40
0x72f MLOAD
0x730 DUP1
0x731 DUP4
0x732 SUB
0x733 DUP2
0x734 DUP6
0x735 DUP9
0x736 DUP9
0x737 CALL
0x738 SWAP4
0x739 POP
0x73a POP
0x73b POP
0x73c POP
0x73d POP
---
0x6f3: JUMPDEST 
0x6f6: V467 = CALLER
0x6f7: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x70c: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x70d: V470 = 0x0
0x70f: V471 = 0x2
0x712: V472 = MUL V345 0x2
0x713: V473 = 0xffffffffffffffffffffffffffffffff
0x724: V474 = AND 0xffffffffffffffffffffffffffffffff V472
0x725: V475 = 0x40
0x727: V476 = M[0x40]
0x72b: V477 = 0x0
0x72d: V478 = 0x40
0x72f: V479 = M[0x40]
0x732: V480 = SUB V476 V479
0x737: V481 = CALL 0x0 V469 V474 V479 V480 V479 0x0
---
Entry stack: [V8, 0xad, V345, V594, 0x3, V443]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V8, 0xad, V345, V594]

================================

Block 0x73e
[0x73e:0x73e]
---
Predecessors: [0x61e, 0x6f3]
Successors: [0x73f]
---
0x73e JUMPDEST
---
0x73e: JUMPDEST 
---
Entry stack: [V8, 0xad, V345, V594]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, V345, V594]

================================

Block 0x73f
[0x73f:0x742]
---
Predecessors: [0x29f, 0x3e5, 0x4ec, 0x617, 0x73e]
Successors: [0xad]
---
0x73f JUMPDEST
0x740 POP
0x741 POP
0x742 JUMP
---
0x73f: JUMPDEST 
0x742: JUMP 0xad
---
Entry stack: [V8, 0xad, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Block 0x743
[0x743:0x751]
---
Predecessors: [0xfe]
Successors: [0x752]
---
0x743 JUMPDEST
0x744 PUSH1 0x0
0x746 PUSH1 0x5
0x748 PUSH1 0x0
0x74a POP
0x74b SLOAD
0x74c SWAP1
0x74d POP
0x74e PUSH2 0x752
0x751 JUMP
---
0x743: JUMPDEST 
0x744: V482 = 0x0
0x746: V483 = 0x5
0x748: V484 = 0x0
0x74b: V485 = S[0x5]
0x74e: V486 = 0x752
0x751: JUMP 0x752
---
Entry stack: [V8, 0x109]
Stack pops: 0
Stack additions: [V485]
Exit stack: [V8, 0x109, V485]

================================

Block 0x752
[0x752:0x754]
---
Predecessors: [0x743]
Successors: [0x109]
---
0x752 JUMPDEST
0x753 SWAP1
0x754 JUMP
---
0x752: JUMPDEST 
0x754: JUMP 0x109
---
Entry stack: [V8, 0x109, V485]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V485]

================================

Block 0x755
[0x755:0x763]
---
Predecessors: [0xaf]
Successors: [0x764]
---
0x755 JUMPDEST
0x756 PUSH1 0x0
0x758 PUSH1 0x4
0x75a PUSH1 0x0
0x75c POP
0x75d SLOAD
0x75e SWAP1
0x75f POP
0x760 PUSH2 0x764
0x763 JUMP
---
0x755: JUMPDEST 
0x756: V487 = 0x0
0x758: V488 = 0x4
0x75a: V489 = 0x0
0x75d: V490 = S[0x4]
0x760: V491 = 0x764
0x763: JUMP 0x764
---
Entry stack: [V8, 0xba]
Stack pops: 0
Stack additions: [V490]
Exit stack: [V8, 0xba, V490]

================================

Block 0x764
[0x764:0x766]
---
Predecessors: [0x755]
Successors: [0xba]
---
0x764 JUMPDEST
0x765 SWAP1
0x766 JUMP
---
0x764: JUMPDEST 
0x766: JUMP 0xba
---
Entry stack: [V8, 0xba, V490]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V490]

================================

Block 0x767
[0x767:0x7ab]
---
Predecessors: [0x11f]
Successors: [0x7ac, 0x7d6]
---
0x767 JUMPDEST
0x768 PUSH1 0x20
0x76a PUSH1 0x40
0x76c MLOAD
0x76d SWAP1
0x76e DUP2
0x76f ADD
0x770 PUSH1 0x40
0x772 MSTORE
0x773 DUP1
0x774 PUSH1 0x0
0x776 DUP2
0x777 MSTORE
0x778 PUSH1 0x20
0x77a ADD
0x77b POP
0x77c PUSH1 0x3
0x77e PUSH1 0x0
0x780 POP
0x781 DUP1
0x782 SLOAD
0x783 DUP1
0x784 PUSH1 0x1f
0x786 ADD
0x787 PUSH1 0x20
0x789 DUP1
0x78a SWAP2
0x78b DIV
0x78c MUL
0x78d PUSH1 0x20
0x78f ADD
0x790 PUSH1 0x40
0x792 MLOAD
0x793 SWAP1
0x794 DUP2
0x795 ADD
0x796 PUSH1 0x40
0x798 MSTORE
0x799 DUP1
0x79a SWAP3
0x79b SWAP2
0x79c SWAP1
0x79d DUP2
0x79e DUP2
0x79f MSTORE
0x7a0 PUSH1 0x20
0x7a2 ADD
0x7a3 DUP3
0x7a4 DUP1
0x7a5 SLOAD
0x7a6 DUP1
0x7a7 ISZERO
0x7a8 PUSH2 0x7d6
0x7ab JUMPI
---
0x767: JUMPDEST 
0x768: V492 = 0x20
0x76a: V493 = 0x40
0x76c: V494 = M[0x40]
0x76f: V495 = ADD V494 0x20
0x770: V496 = 0x40
0x772: M[0x40] = V495
0x774: V497 = 0x0
0x777: M[V494] = 0x0
0x778: V498 = 0x20
0x77a: V499 = ADD 0x20 V494
0x77c: V500 = 0x3
0x77e: V501 = 0x0
0x782: V502 = S[0x3]
0x784: V503 = 0x1f
0x786: V504 = ADD 0x1f V502
0x787: V505 = 0x20
0x78b: V506 = DIV V504 0x20
0x78c: V507 = MUL V506 0x20
0x78d: V508 = 0x20
0x78f: V509 = ADD 0x20 V507
0x790: V510 = 0x40
0x792: V511 = M[0x40]
0x795: V512 = ADD V511 V509
0x796: V513 = 0x40
0x798: M[0x40] = V512
0x79f: M[V511] = V502
0x7a0: V514 = 0x20
0x7a2: V515 = ADD 0x20 V511
0x7a5: V516 = S[0x3]
0x7a7: V517 = ISZERO V516
0x7a8: V518 = 0x7d6
0x7ab: JUMPI 0x7d6 V517
---
Entry stack: [V8, 0x12a]
Stack pops: 0
Stack additions: [V494, V511, 0x3, V502, V515, 0x3, V516]
Exit stack: [V8, 0x12a, V494, V511, 0x3, V502, V515, 0x3, V516]

================================

Block 0x7ac
[0x7ac:0x7b8]
---
Predecessors: [0x767]
Successors: [0x7b9]
---
0x7ac DUP3
0x7ad ADD
0x7ae SWAP2
0x7af SWAP1
0x7b0 PUSH1 0x0
0x7b2 MSTORE
0x7b3 PUSH1 0x20
0x7b5 PUSH1 0x0
0x7b7 SHA3
0x7b8 SWAP1
---
0x7ad: V519 = ADD V515 V516
0x7b0: V520 = 0x0
0x7b2: M[0x0] = 0x3
0x7b3: V521 = 0x20
0x7b5: V522 = 0x0
0x7b7: V523 = SHA3 0x0 0x20
---
Entry stack: [V8, 0x12a, V494, V511, 0x3, V502, V515, 0x3, V516]
Stack pops: 3
Stack additions: [V519, V523, S2]
Exit stack: [V8, 0x12a, V494, V511, 0x3, V502, V519, V523, V515]

================================

Block 0x7b9
[0x7b9:0x7cc]
---
Predecessors: [0x7ac, 0x7b9]
Successors: [0x7b9, 0x7cd]
---
0x7b9 JUMPDEST
0x7ba DUP2
0x7bb SLOAD
0x7bc DUP2
0x7bd MSTORE
0x7be SWAP1
0x7bf PUSH1 0x1
0x7c1 ADD
0x7c2 SWAP1
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 DUP1
0x7c7 DUP4
0x7c8 GT
0x7c9 PUSH2 0x7b9
0x7cc JUMPI
---
0x7b9: JUMPDEST 
0x7bb: V524 = S[S1]
0x7bd: M[S0] = V524
0x7bf: V525 = 0x1
0x7c1: V526 = ADD 0x1 S1
0x7c3: V527 = 0x20
0x7c5: V528 = ADD 0x20 S0
0x7c8: V529 = GT V519 V528
0x7c9: V530 = 0x7b9
0x7cc: JUMPI 0x7b9 V529
---
Entry stack: [V8, 0x12a, V494, V511, 0x3, V502, V519, S1, S0]
Stack pops: 3
Stack additions: [S2, V526, V528]
Exit stack: [V8, 0x12a, V494, V511, 0x3, V502, V519, V526, V528]

================================

Block 0x7cd
[0x7cd:0x7d5]
---
Predecessors: [0x7b9]
Successors: [0x7d6]
---
0x7cd DUP3
0x7ce SWAP1
0x7cf SUB
0x7d0 PUSH1 0x1f
0x7d2 AND
0x7d3 DUP3
0x7d4 ADD
0x7d5 SWAP2
---
0x7cf: V531 = SUB V528 V519
0x7d0: V532 = 0x1f
0x7d2: V533 = AND 0x1f V531
0x7d4: V534 = ADD V519 V533
---
Entry stack: [V8, 0x12a, V494, V511, 0x3, V502, V519, V526, V528]
Stack pops: 3
Stack additions: [V534, S1, S2]
Exit stack: [V8, 0x12a, V494, V511, 0x3, V502, V534, V526, V519]

================================

Block 0x7d6
[0x7d6:0x7e1]
---
Predecessors: [0x767, 0x7cd]
Successors: [0x7e2]
---
0x7d6 JUMPDEST
0x7d7 POP
0x7d8 POP
0x7d9 POP
0x7da POP
0x7db POP
0x7dc SWAP1
0x7dd POP
0x7de PUSH2 0x7e2
0x7e1 JUMP
---
0x7d6: JUMPDEST 
0x7de: V535 = 0x7e2
0x7e1: JUMP 0x7e2
---
Entry stack: [V8, 0x12a, V494, V511, 0x3, V502, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V8, 0x12a, V511]

================================

Block 0x7e2
[0x7e2:0x7e4]
---
Predecessors: [0x7d6]
Successors: [0x12a]
---
0x7e2 JUMPDEST
0x7e3 SWAP1
0x7e4 JUMP
---
0x7e2: JUMPDEST 
0x7e4: JUMP 0x12a
---
Entry stack: [V8, 0x12a, V511]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V511]

================================

Block 0x7e5
[0x7e5:0x7f3]
---
Predecessors: [0x81]
Successors: [0x7f4]
---
0x7e5 JUMPDEST
0x7e6 PUSH1 0x0
0x7e8 PUSH1 0x2
0x7ea PUSH1 0x0
0x7ec POP
0x7ed SLOAD
0x7ee SWAP1
0x7ef POP
0x7f0 PUSH2 0x7f4
0x7f3 JUMP
---
0x7e5: JUMPDEST 
0x7e6: V536 = 0x0
0x7e8: V537 = 0x2
0x7ea: V538 = 0x0
0x7ed: V539 = S[0x2]
0x7f0: V540 = 0x7f4
0x7f3: JUMP 0x7f4
---
Entry stack: [V8, 0x8c]
Stack pops: 0
Stack additions: [V539]
Exit stack: [V8, 0x8c, V539]

================================

Block 0x7f4
[0x7f4:0x7f6]
---
Predecessors: [0x7e5]
Successors: [0x8c]
---
0x7f4 JUMPDEST
0x7f5 SWAP1
0x7f6 JUMP
---
0x7f4: JUMPDEST 
0x7f6: JUMP 0x8c
---
Entry stack: [V8, 0x8c, V539]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V539]

================================

Block 0x7f7
[0x7f7:0x84d]
---
Predecessors: [0xd0]
Successors: [0x84e, 0x888]
---
0x7f7 JUMPDEST
0x7f8 PUSH1 0x0
0x7fa PUSH1 0x0
0x7fc SWAP1
0x7fd SLOAD
0x7fe SWAP1
0x7ff PUSH2 0x100
0x802 EXP
0x803 SWAP1
0x804 DIV
0x805 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81a AND
0x81b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x830 AND
0x831 CALLER
0x832 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x847 AND
0x848 EQ
0x849 ISZERO
0x84a PUSH2 0x888
0x84d JUMPI
---
0x7f7: JUMPDEST 
0x7f8: V541 = 0x0
0x7fa: V542 = 0x0
0x7fd: V543 = S[0x0]
0x7ff: V544 = 0x100
0x802: V545 = EXP 0x100 0x0
0x804: V546 = DIV V543 0x1
0x805: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x81a: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V546
0x81b: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x830: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x831: V551 = CALLER
0x832: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x847: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x848: V554 = EQ V553 V550
0x849: V555 = ISZERO V554
0x84a: V556 = 0x888
0x84d: JUMPI 0x888 V555
---
Entry stack: [V8, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xdb]

================================

Block 0x84e
[0x84e:0x887]
---
Predecessors: [0x7f7]
Successors: []
---
0x84e PUSH1 0x0
0x850 PUSH1 0x0
0x852 SWAP1
0x853 SLOAD
0x854 SWAP1
0x855 PUSH2 0x100
0x858 EXP
0x859 SWAP1
0x85a DIV
0x85b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x870 AND
0x871 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x886 AND
0x887 SELFDESTRUCT
---
0x84e: V557 = 0x0
0x850: V558 = 0x0
0x853: V559 = S[0x0]
0x855: V560 = 0x100
0x858: V561 = EXP 0x100 0x0
0x85a: V562 = DIV V559 0x1
0x85b: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x870: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x871: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x886: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x887: SELFDESTRUCT V566
---
Entry stack: [V8, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xdb]

================================

Block 0x888
[0x888:0x888]
---
Predecessors: [0x7f7]
Successors: [0x889]
---
0x888 JUMPDEST
---
0x888: JUMPDEST 
---
Entry stack: [V8, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xdb]

================================

Block 0x889
[0x889:0x88a]
---
Predecessors: [0x888]
Successors: [0xdb]
---
0x889 JUMPDEST
0x88a JUMP
---
0x889: JUMPDEST 
0x88a: JUMP 0xdb
---
Entry stack: [V8, 0xdb]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x88b
[0x88b:0x90f]
---
Predecessors: [0x500]
Successors: [0x910]
---
0x88b JUMPDEST
0x88c PUSH1 0x0
0x88e DIFFICULTY
0x88f COINBASE
0x890 TIMESTAMP
0x891 DUP5
0x892 PUSH1 0x40
0x894 MLOAD
0x895 DUP1
0x896 DUP6
0x897 DUP2
0x898 MSTORE
0x899 PUSH1 0x20
0x89b ADD
0x89c DUP5
0x89d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b2 AND
0x8b3 PUSH13 0x1000000000000000000000000
0x8c1 MUL
0x8c2 DUP2
0x8c3 MSTORE
0x8c4 PUSH1 0x14
0x8c6 ADD
0x8c7 DUP4
0x8c8 DUP2
0x8c9 MSTORE
0x8ca PUSH1 0x20
0x8cc ADD
0x8cd DUP3
0x8ce PUSH16 0xffffffffffffffffffffffffffffffff
0x8df AND
0x8e0 PUSH17 0x100000000000000000000000000000000
0x8f2 MUL
0x8f3 DUP2
0x8f4 MSTORE
0x8f5 PUSH1 0x10
0x8f7 ADD
0x8f8 SWAP5
0x8f9 POP
0x8fa POP
0x8fb POP
0x8fc POP
0x8fd POP
0x8fe PUSH1 0x40
0x900 MLOAD
0x901 DUP1
0x902 SWAP2
0x903 SUB
0x904 SWAP1
0x905 SHA3
0x906 PUSH1 0x1
0x908 SWAP1
0x909 DIV
0x90a SWAP1
0x90b POP
0x90c PUSH2 0x910
0x90f JUMP
---
0x88b: JUMPDEST 
0x88c: V567 = 0x0
0x88e: V568 = DIFFICULTY
0x88f: V569 = COINBASE
0x890: V570 = TIMESTAMP
0x892: V571 = 0x40
0x894: V572 = M[0x40]
0x898: M[V572] = V568
0x899: V573 = 0x20
0x89b: V574 = ADD 0x20 V572
0x89d: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x8b3: V577 = 0x1000000000000000000000000
0x8c1: V578 = MUL 0x1000000000000000000000000 V576
0x8c3: M[V574] = V578
0x8c4: V579 = 0x14
0x8c6: V580 = ADD 0x14 V574
0x8c9: M[V580] = V570
0x8ca: V581 = 0x20
0x8cc: V582 = ADD 0x20 V580
0x8ce: V583 = 0xffffffffffffffffffffffffffffffff
0x8df: V584 = AND 0xffffffffffffffffffffffffffffffff V345
0x8e0: V585 = 0x100000000000000000000000000000000
0x8f2: V586 = MUL 0x100000000000000000000000000000000 V584
0x8f4: M[V582] = V586
0x8f5: V587 = 0x10
0x8f7: V588 = ADD 0x10 V582
0x8fe: V589 = 0x40
0x900: V590 = M[0x40]
0x903: V591 = SUB V588 V590
0x905: V592 = SHA3 V590 V591
0x906: V593 = 0x1
0x909: V594 = DIV V592 0x1
0x90c: V595 = 0x910
0x90f: JUMP 0x910
---
Entry stack: [V8, 0xad, V345, 0x0, 0x516, V345]
Stack pops: 1
Stack additions: [S0, V594]
Exit stack: [V8, 0xad, V345, 0x0, 0x516, V345, V594]

================================

Block 0x910
[0x910:0x914]
---
Predecessors: [0x88b]
Successors: [0x516]
---
0x910 JUMPDEST
0x911 SWAP2
0x912 SWAP1
0x913 POP
0x914 JUMP
---
0x910: JUMPDEST 
0x914: JUMP 0x516
---
Entry stack: [V8, 0xad, V345, 0x0, 0x516, V345, V594]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V8, 0xad, V345, 0x0, V594]

================================

Function 0:
Public function signature: 0xefafd01
Entry block: 0x81
Exit block: 0x8c
Body: 0x81, 0x8c, 0x7e5, 0x7f4

Function 1:
Public function signature: 0x25d8dcf2
Entry block: 0xa2
Exit block: 0xad
Body: 0xa2, 0xad, 0x1bc, 0x1eb, 0x252, 0x255, 0x25e, 0x273, 0x274, 0x281, 0x28a, 0x29b, 0x29f, 0x2e8, 0x30b, 0x398, 0x39b, 0x3a4, 0x3b9, 0x3ba, 0x3c7, 0x3d0, 0x3e1, 0x3e5, 0x42e, 0x438, 0x49f, 0x4a2, 0x4ab, 0x4c0, 0x4c1, 0x4ce, 0x4d7, 0x4e8, 0x4ec, 0x4fe, 0x4ff, 0x500, 0x516, 0x525, 0x5ca, 0x5cd, 0x5d6, 0x5eb, 0x5ec, 0x5f9, 0x602, 0x613, 0x617, 0x622, 0x6a6, 0x6a9, 0x6b2, 0x6c7, 0x6c8, 0x6d5, 0x6de, 0x6ef, 0x6f3, 0x73e, 0x73f, 0x88b, 0x910

Function 2:
Public function signature: 0x34dbe44d
Entry block: 0xaf
Exit block: 0xba
Body: 0xaf, 0xba, 0x755, 0x764

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xd0
Exit block: 0xdb
Body: 0xd0, 0xdb, 0x7f7, 0x84e, 0x888, 0x889

Function 4:
Public function signature: 0x5acce36b
Entry block: 0xdd
Exit block: 0xe8
Body: 0xdd, 0xe8, 0x198, 0x1b9

Function 5:
Public function signature: 0x7c8cf50c
Entry block: 0xfe
Exit block: 0x109
Body: 0xfe, 0x109, 0x743, 0x752

Function 6:
Public function signature: 0xcee6f93c
Entry block: 0x11f
Exit block: 0x18a
Body: 0x11f, 0x12a, 0x171, 0x18a, 0x767, 0x7ac, 0x7b9, 0x7cd, 0x7d6, 0x7e2

Function 7:
Public fallback function
Entry block: 0x7b
Exit block: 0x7f
Body: 0x7b, 0x7f

