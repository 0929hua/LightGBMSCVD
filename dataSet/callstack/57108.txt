Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x82c6e64
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x82c6e64
0x3c: V13 = EQ 0x82c6e64 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xec]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xec
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xec
0x4b: JUMPI 0xec V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x103]
---
0x4c DUP1
0x4d PUSH4 0x565d10e8
0x52 EQ
0x53 PUSH2 0x103
0x56 JUMPI
---
0x4d: V18 = 0x565d10e8
0x52: V19 = EQ 0x565d10e8 V11
0x53: V20 = 0x103
0x56: JUMPI 0x103 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x17f]
---
0x57 DUP1
0x58 PUSH4 0x715018a6
0x5d EQ
0x5e PUSH2 0x17f
0x61 JUMPI
---
0x58: V21 = 0x715018a6
0x5d: V22 = EQ 0x715018a6 V11
0x5e: V23 = 0x17f
0x61: JUMPI 0x17f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x196]
---
0x62 DUP1
0x63 PUSH4 0x8322fff2
0x68 EQ
0x69 PUSH2 0x196
0x6c JUMPI
---
0x63: V24 = 0x8322fff2
0x68: V25 = EQ 0x8322fff2 V11
0x69: V26 = 0x196
0x6c: JUMPI 0x196 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1ed]
---
0x6d DUP1
0x6e PUSH4 0x8da5cb5b
0x73 EQ
0x74 PUSH2 0x1ed
0x77 JUMPI
---
0x6e: V27 = 0x8da5cb5b
0x73: V28 = EQ 0x8da5cb5b V11
0x74: V29 = 0x1ed
0x77: JUMPI 0x1ed V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x244]
---
0x78 DUP1
0x79 PUSH4 0xf2fde38b
0x7e EQ
0x7f PUSH2 0x244
0x82 JUMPI
---
0x79: V30 = 0xf2fde38b
0x7e: V31 = EQ 0xf2fde38b V11
0x7f: V32 = 0x244
0x82: JUMPI 0x244 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0xd]
Successors: [0x8d, 0x91]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 DUP1
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x85: JUMPDEST 
0x86: V33 = CALLVALUE
0x88: V34 = ISZERO V33
0x89: V35 = 0x91
0x8c: JUMPI 0x91 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33]
Exit stack: [V11, V33]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x85]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V36 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V11, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33]

================================

Block 0x91
[0x91:0xd1]
---
Predecessors: [0x85]
Successors: [0x287]
---
0x91 JUMPDEST
0x92 POP
0x93 PUSH2 0xd2
0x96 PUSH1 0x4
0x98 DUP1
0x99 CALLDATASIZE
0x9a SUB
0x9b DUP2
0x9c ADD
0x9d SWAP1
0x9e DUP1
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6 AND
0xb7 SWAP1
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP1
0xbc SWAP3
0xbd SWAP2
0xbe SWAP1
0xbf DUP1
0xc0 CALLDATALOAD
0xc1 ISZERO
0xc2 ISZERO
0xc3 SWAP1
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 SWAP1
0xc8 SWAP3
0xc9 SWAP2
0xca SWAP1
0xcb POP
0xcc POP
0xcd POP
0xce PUSH2 0x287
0xd1 JUMP
---
0x91: JUMPDEST 
0x93: V37 = 0xd2
0x96: V38 = 0x4
0x99: V39 = CALLDATASIZE
0x9a: V40 = SUB V39 0x4
0x9c: V41 = ADD 0x4 V40
0xa0: V42 = CALLDATALOAD 0x4
0xa1: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xb8: V45 = 0x20
0xba: V46 = ADD 0x20 0x4
0xc0: V47 = CALLDATALOAD 0x24
0xc1: V48 = ISZERO V47
0xc2: V49 = ISZERO V48
0xc4: V50 = 0x20
0xc6: V51 = ADD 0x20 0x24
0xce: V52 = 0x287
0xd1: JUMP 0x287
---
Entry stack: [V11, V33]
Stack pops: 1
Stack additions: [0xd2, V44, V49]
Exit stack: [V11, 0xd2, V44, V49]

================================

Block 0xd2
[0xd2:0xeb]
---
Predecessors: [0x3e6]
Successors: []
---
0xd2 JUMPDEST
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 DUP3
0xd8 ISZERO
0xd9 ISZERO
0xda ISZERO
0xdb ISZERO
0xdc DUP2
0xdd MSTORE
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP2
0xe2 POP
0xe3 POP
0xe4 PUSH1 0x40
0xe6 MLOAD
0xe7 DUP1
0xe8 SWAP2
0xe9 SUB
0xea SWAP1
0xeb RETURN
---
0xd2: JUMPDEST 
0xd3: V53 = 0x40
0xd5: V54 = M[0x40]
0xd8: V55 = ISZERO 0x1
0xd9: V56 = ISZERO 0x0
0xda: V57 = ISZERO 0x1
0xdb: V58 = ISZERO 0x0
0xdd: M[V54] = 0x1
0xde: V59 = 0x20
0xe0: V60 = ADD 0x20 V54
0xe4: V61 = 0x40
0xe6: V62 = M[0x40]
0xe9: V63 = SUB V60 V62
0xeb: RETURN V62 V63
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S1]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0x41]
Successors: [0xf4, 0xf8]
---
0xec JUMPDEST
0xed CALLVALUE
0xee DUP1
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xec: JUMPDEST 
0xed: V64 = CALLVALUE
0xef: V65 = ISZERO V64
0xf0: V66 = 0xf8
0xf3: JUMPI 0xf8 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xec]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V67 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0xf8
[0xf8:0x100]
---
Predecessors: [0xec]
Successors: [0x3ee]
---
0xf8 JUMPDEST
0xf9 POP
0xfa PUSH2 0x101
0xfd PUSH2 0x3ee
0x100 JUMP
---
0xf8: JUMPDEST 
0xfa: V68 = 0x101
0xfd: V69 = 0x3ee
0x100: JUMP 0x3ee
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x101
[0x101:0x102]
---
Predecessors: [0x4c7]
Successors: []
---
0x101 JUMPDEST
0x102 STOP
---
0x101: JUMPDEST 
0x102: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x103
[0x103:0x17c]
---
Predecessors: [0x4c]
Successors: [0x4ca]
---
0x103 JUMPDEST
0x104 PUSH2 0x17d
0x107 PUSH1 0x4
0x109 DUP1
0x10a CALLDATASIZE
0x10b SUB
0x10c DUP2
0x10d ADD
0x10e SWAP1
0x10f DUP1
0x110 DUP1
0x111 CALLDATALOAD
0x112 ISZERO
0x113 ISZERO
0x114 SWAP1
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP1
0x119 SWAP3
0x11a SWAP2
0x11b SWAP1
0x11c DUP1
0x11d PUSH1 0x40
0x11f ADD
0x120 SWAP1
0x121 SWAP2
0x122 SWAP3
0x123 SWAP2
0x124 SWAP3
0x125 SWAP1
0x126 DUP1
0x127 CALLDATALOAD
0x128 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13d AND
0x13e SWAP1
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 SWAP3
0x144 SWAP2
0x145 SWAP1
0x146 DUP1
0x147 CALLDATALOAD
0x148 SWAP1
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP1
0x14d DUP3
0x14e ADD
0x14f DUP1
0x150 CALLDATALOAD
0x151 SWAP1
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP2
0x156 SWAP1
0x157 SWAP2
0x158 SWAP3
0x159 SWAP4
0x15a SWAP2
0x15b SWAP3
0x15c SWAP4
0x15d SWAP1
0x15e DUP1
0x15f CALLDATALOAD
0x160 SWAP1
0x161 PUSH1 0x20
0x163 ADD
0x164 SWAP1
0x165 DUP3
0x166 ADD
0x167 DUP1
0x168 CALLDATALOAD
0x169 SWAP1
0x16a PUSH1 0x20
0x16c ADD
0x16d SWAP2
0x16e SWAP1
0x16f SWAP2
0x170 SWAP3
0x171 SWAP4
0x172 SWAP2
0x173 SWAP3
0x174 SWAP4
0x175 SWAP1
0x176 POP
0x177 POP
0x178 POP
0x179 PUSH2 0x4ca
0x17c JUMP
---
0x103: JUMPDEST 
0x104: V70 = 0x17d
0x107: V71 = 0x4
0x10a: V72 = CALLDATASIZE
0x10b: V73 = SUB V72 0x4
0x10d: V74 = ADD 0x4 V73
0x111: V75 = CALLDATALOAD 0x4
0x112: V76 = ISZERO V75
0x113: V77 = ISZERO V76
0x115: V78 = 0x20
0x117: V79 = ADD 0x20 0x4
0x11d: V80 = 0x40
0x11f: V81 = ADD 0x40 0x24
0x127: V82 = CALLDATALOAD 0x64
0x128: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x13f: V85 = 0x20
0x141: V86 = ADD 0x20 0x64
0x147: V87 = CALLDATALOAD 0x84
0x149: V88 = 0x20
0x14b: V89 = ADD 0x20 0x84
0x14e: V90 = ADD 0x4 V87
0x150: V91 = CALLDATALOAD V90
0x152: V92 = 0x20
0x154: V93 = ADD 0x20 V90
0x15f: V94 = CALLDATALOAD 0xa4
0x161: V95 = 0x20
0x163: V96 = ADD 0x20 0xa4
0x166: V97 = ADD 0x4 V94
0x168: V98 = CALLDATALOAD V97
0x16a: V99 = 0x20
0x16c: V100 = ADD 0x20 V97
0x179: V101 = 0x4ca
0x17c: JUMP 0x4ca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17d, V77, 0x24, V84, V93, V91, V100, V98]
Exit stack: [V11, 0x17d, V77, 0x24, V84, V93, V91, V100, V98]

================================

Block 0x17d
[0x17d:0x17e]
---
Predecessors: [0x8ce]
Successors: []
---
0x17d JUMPDEST
0x17e STOP
---
0x17d: JUMPDEST 
0x17e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17f
[0x17f:0x186]
---
Predecessors: [0x57]
Successors: [0x187, 0x18b]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 DUP1
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x17f: JUMPDEST 
0x180: V102 = CALLVALUE
0x182: V103 = ISZERO V102
0x183: V104 = 0x18b
0x186: JUMPI 0x18b V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x17f]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V105 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x18b
[0x18b:0x193]
---
Predecessors: [0x17f]
Successors: [0x8d9]
---
0x18b JUMPDEST
0x18c POP
0x18d PUSH2 0x194
0x190 PUSH2 0x8d9
0x193 JUMP
---
0x18b: JUMPDEST 
0x18d: V106 = 0x194
0x190: V107 = 0x8d9
0x193: JUMP 0x8d9
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x194]
Exit stack: [V11, 0x194]

================================

Block 0x194
[0x194:0x195]
---
Predecessors: [0x934]
Successors: []
---
0x194 JUMPDEST
0x195 STOP
---
0x194: JUMPDEST 
0x195: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x62]
Successors: [0x19e, 0x1a2]
---
0x196 JUMPDEST
0x197 CALLVALUE
0x198 DUP1
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x196: JUMPDEST 
0x197: V108 = CALLVALUE
0x199: V109 = ISZERO V108
0x19a: V110 = 0x1a2
0x19d: JUMPI 0x1a2 V109
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V108]
Exit stack: [V11, V108]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x196]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V111 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V11, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V108]

================================

Block 0x1a2
[0x1a2:0x1aa]
---
Predecessors: [0x196]
Successors: [0x9db]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 PUSH2 0x1ab
0x1a7 PUSH2 0x9db
0x1aa JUMP
---
0x1a2: JUMPDEST 
0x1a4: V112 = 0x1ab
0x1a7: V113 = 0x9db
0x1aa: JUMP 0x9db
---
Entry stack: [V11, V108]
Stack pops: 1
Stack additions: [0x1ab]
Exit stack: [V11, 0x1ab]

================================

Block 0x1ab
[0x1ab:0x1ec]
---
Predecessors: [0x9db]
Successors: []
---
0x1ab JUMPDEST
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 DUP3
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1dc AND
0x1dd DUP2
0x1de MSTORE
0x1df PUSH1 0x20
0x1e1 ADD
0x1e2 SWAP2
0x1e3 POP
0x1e4 POP
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 SWAP2
0x1ea SUB
0x1eb SWAP1
0x1ec RETURN
---
0x1ab: JUMPDEST 
0x1ac: V114 = 0x40
0x1ae: V115 = M[0x40]
0x1b1: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1c7: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1de: M[V115] = 0x0
0x1df: V120 = 0x20
0x1e1: V121 = ADD 0x20 V115
0x1e5: V122 = 0x40
0x1e7: V123 = M[0x40]
0x1ea: V124 = SUB V121 V123
0x1ec: RETURN V123 V124
---
Entry stack: [V11, 0x1ab, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1ab]

================================

Block 0x1ed
[0x1ed:0x1f4]
---
Predecessors: [0x6d]
Successors: [0x1f5, 0x1f9]
---
0x1ed JUMPDEST
0x1ee CALLVALUE
0x1ef DUP1
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V125 = CALLVALUE
0x1f0: V126 = ISZERO V125
0x1f1: V127 = 0x1f9
0x1f4: JUMPI 0x1f9 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, V125]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1ed]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V128 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V11, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125]

================================

Block 0x1f9
[0x1f9:0x201]
---
Predecessors: [0x1ed]
Successors: [0x9e0]
---
0x1f9 JUMPDEST
0x1fa POP
0x1fb PUSH2 0x202
0x1fe PUSH2 0x9e0
0x201 JUMP
---
0x1f9: JUMPDEST 
0x1fb: V129 = 0x202
0x1fe: V130 = 0x9e0
0x201: JUMP 0x9e0
---
Entry stack: [V11, V125]
Stack pops: 1
Stack additions: [0x202]
Exit stack: [V11, 0x202]

================================

Block 0x202
[0x202:0x243]
---
Predecessors: [0x9e0]
Successors: []
---
0x202 JUMPDEST
0x203 PUSH1 0x40
0x205 MLOAD
0x206 DUP1
0x207 DUP3
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x233 AND
0x234 DUP2
0x235 MSTORE
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP2
0x23a POP
0x23b POP
0x23c PUSH1 0x40
0x23e MLOAD
0x23f DUP1
0x240 SWAP2
0x241 SUB
0x242 SWAP1
0x243 RETURN
---
0x202: JUMPDEST 
0x203: V131 = 0x40
0x205: V132 = M[0x40]
0x208: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x21e: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x233: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x235: M[V132] = V136
0x236: V137 = 0x20
0x238: V138 = ADD 0x20 V132
0x23c: V139 = 0x40
0x23e: V140 = M[0x40]
0x241: V141 = SUB V138 V140
0x243: RETURN V140 V141
---
Entry stack: [V11, 0x202, V570]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x202]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0x78]
Successors: [0x24c, 0x250]
---
0x244 JUMPDEST
0x245 CALLVALUE
0x246 DUP1
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x244: JUMPDEST 
0x245: V142 = CALLVALUE
0x247: V143 = ISZERO V142
0x248: V144 = 0x250
0x24b: JUMPI 0x250 V143
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V142]
Exit stack: [V11, V142]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x244]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V145 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V11, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V142]

================================

Block 0x250
[0x250:0x284]
---
Predecessors: [0x244]
Successors: [0xa05]
---
0x250 JUMPDEST
0x251 POP
0x252 PUSH2 0x285
0x255 PUSH1 0x4
0x257 DUP1
0x258 CALLDATASIZE
0x259 SUB
0x25a DUP2
0x25b ADD
0x25c SWAP1
0x25d DUP1
0x25e DUP1
0x25f CALLDATALOAD
0x260 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x275 AND
0x276 SWAP1
0x277 PUSH1 0x20
0x279 ADD
0x27a SWAP1
0x27b SWAP3
0x27c SWAP2
0x27d SWAP1
0x27e POP
0x27f POP
0x280 POP
0x281 PUSH2 0xa05
0x284 JUMP
---
0x250: JUMPDEST 
0x252: V146 = 0x285
0x255: V147 = 0x4
0x258: V148 = CALLDATASIZE
0x259: V149 = SUB V148 0x4
0x25b: V150 = ADD 0x4 V149
0x25f: V151 = CALLDATALOAD 0x4
0x260: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x275: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x277: V154 = 0x20
0x279: V155 = ADD 0x20 0x4
0x281: V156 = 0xa05
0x284: JUMP 0xa05
---
Entry stack: [V11, V142]
Stack pops: 1
Stack additions: [0x285, V153]
Exit stack: [V11, 0x285, V153]

================================

Block 0x285
[0x285:0x286]
---
Predecessors: [0xa69]
Successors: []
---
0x285 JUMPDEST
0x286 STOP
---
0x285: JUMPDEST 
0x286: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x287
[0x287:0x2df]
---
Predecessors: [0x91]
Successors: [0x2e0, 0x2e4]
---
0x287 JUMPDEST
0x288 PUSH1 0x0
0x28a DUP1
0x28b PUSH1 0x0
0x28d SWAP1
0x28e SLOAD
0x28f SWAP1
0x290 PUSH2 0x100
0x293 EXP
0x294 SWAP1
0x295 DIV
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c1 AND
0x2c2 CALLER
0x2c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d8 AND
0x2d9 EQ
0x2da ISZERO
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x287: JUMPDEST 
0x288: V157 = 0x0
0x28b: V158 = 0x0
0x28e: V159 = S[0x0]
0x290: V160 = 0x100
0x293: V161 = EXP 0x100 0x0
0x295: V162 = DIV V159 0x1
0x296: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x2ac: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2c2: V167 = CALLER
0x2c3: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d8: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2d9: V170 = EQ V169 V166
0x2da: V171 = ISZERO V170
0x2db: V172 = ISZERO V171
0x2dc: V173 = 0x2e4
0x2df: JUMPI 0x2e4 V172
---
Entry stack: [V11, 0xd2, V44, V49]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xd2, V44, V49, 0x0]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x287]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V174 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd2, V44, V49, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd2, V44, V49, 0x0]

================================

Block 0x2e4
[0x2e4:0x3a0]
---
Predecessors: [0x287]
Successors: [0x3a1, 0x3a5]
---
0x2e4 JUMPDEST
0x2e5 PUSH2 0x3e6
0x2e8 DUP4
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec SWAP1
0x2ed SLOAD
0x2ee SWAP1
0x2ef PUSH2 0x100
0x2f2 EXP
0x2f3 SWAP1
0x2f4 DIV
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b DUP6
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 PUSH4 0x70a08231
0x327 ADDRESS
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP3
0x32c PUSH4 0xffffffff
0x331 AND
0x332 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x350 MUL
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x4
0x355 ADD
0x356 DUP1
0x357 DUP3
0x358 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36d AND
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x20
0x388 ADD
0x389 SWAP2
0x38a POP
0x38b POP
0x38c PUSH1 0x20
0x38e PUSH1 0x40
0x390 MLOAD
0x391 DUP1
0x392 DUP4
0x393 SUB
0x394 DUP2
0x395 PUSH1 0x0
0x397 DUP8
0x398 DUP1
0x399 EXTCODESIZE
0x39a ISZERO
0x39b DUP1
0x39c ISZERO
0x39d PUSH2 0x3a5
0x3a0 JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V175 = 0x3e6
0x2e9: V176 = 0x0
0x2ed: V177 = S[0x0]
0x2ef: V178 = 0x100
0x2f2: V179 = EXP 0x100 0x0
0x2f4: V180 = DIV V177 0x1
0x2f5: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x30c: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x322: V185 = 0x70a08231
0x327: V186 = ADDRESS
0x328: V187 = 0x40
0x32a: V188 = M[0x40]
0x32c: V189 = 0xffffffff
0x331: V190 = AND 0xffffffff 0x70a08231
0x332: V191 = 0x100000000000000000000000000000000000000000000000000000000
0x350: V192 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x352: M[V188] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x353: V193 = 0x4
0x355: V194 = ADD 0x4 V188
0x358: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x36e: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x385: M[V194] = V198
0x386: V199 = 0x20
0x388: V200 = ADD 0x20 V194
0x38c: V201 = 0x20
0x38e: V202 = 0x40
0x390: V203 = M[0x40]
0x393: V204 = SUB V200 V203
0x395: V205 = 0x0
0x399: V206 = EXTCODESIZE V184
0x39a: V207 = ISZERO V206
0x39c: V208 = ISZERO V207
0x39d: V209 = 0x3a5
0x3a0: JUMPI 0x3a5 V208
---
Entry stack: [V11, 0xd2, V44, V49, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3e6, S2, V182, V184, 0x70a08231, V200, 0x20, V203, V204, V203, 0x0, V184, V207]
Exit stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, 0x20, V203, V204, V203, 0x0, V184, V207]

================================

Block 0x3a1
[0x3a1:0x3a4]
---
Predecessors: [0x2e4]
Successors: []
---
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 REVERT
---
0x3a1: V210 = 0x0
0x3a4: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, 0x20, V203, V204, V203, 0x0, V184, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, 0x20, V203, V204, V203, 0x0, V184, V207]

================================

Block 0x3a5
[0x3a5:0x3af]
---
Predecessors: [0x2e4]
Successors: [0x3b0, 0x3b9]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 GAS
0x3a8 CALL
0x3a9 ISZERO
0x3aa DUP1
0x3ab ISZERO
0x3ac PUSH2 0x3b9
0x3af JUMPI
---
0x3a5: JUMPDEST 
0x3a7: V211 = GAS
0x3a8: V212 = CALL V211 V184 0x0 V203 V204 V203 0x20
0x3a9: V213 = ISZERO V212
0x3ab: V214 = ISZERO V213
0x3ac: V215 = 0x3b9
0x3af: JUMPI 0x3b9 V214
---
Entry stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, 0x20, V203, V204, V203, 0x0, V184, V207]
Stack pops: 7
Stack additions: [V213]
Exit stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, V213]

================================

Block 0x3b0
[0x3b0:0x3b8]
---
Predecessors: [0x3a5]
Successors: []
---
0x3b0 RETURNDATASIZE
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 RETURNDATACOPY
0x3b5 RETURNDATASIZE
0x3b6 PUSH1 0x0
0x3b8 REVERT
---
0x3b0: V216 = RETURNDATASIZE
0x3b1: V217 = 0x0
0x3b4: RETURNDATACOPY 0x0 0x0 V216
0x3b5: V218 = RETURNDATASIZE
0x3b6: V219 = 0x0
0x3b8: REVERT 0x0 V218
---
Entry stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, V213]

================================

Block 0x3b9
[0x3b9:0x3ca]
---
Predecessors: [0x3a5]
Successors: [0x3cb, 0x3cf]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd POP
0x3be PUSH1 0x40
0x3c0 MLOAD
0x3c1 RETURNDATASIZE
0x3c2 PUSH1 0x20
0x3c4 DUP2
0x3c5 LT
0x3c6 ISZERO
0x3c7 PUSH2 0x3cf
0x3ca JUMPI
---
0x3b9: JUMPDEST 
0x3be: V220 = 0x40
0x3c0: V221 = M[0x40]
0x3c1: V222 = RETURNDATASIZE
0x3c2: V223 = 0x20
0x3c5: V224 = LT V222 0x20
0x3c6: V225 = ISZERO V224
0x3c7: V226 = 0x3cf
0x3ca: JUMPI 0x3cf V225
---
Entry stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V184, 0x70a08231, V200, V213]
Stack pops: 4
Stack additions: [V221, V222]
Exit stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V221, V222]

================================

Block 0x3cb
[0x3cb:0x3ce]
---
Predecessors: [0x3b9]
Successors: []
---
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce REVERT
---
0x3cb: V227 = 0x0
0x3ce: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V221, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V221, V222]

================================

Block 0x3cf
[0x3cf:0x3e5]
---
Predecessors: [0x3b9]
Successors: [0xa6c]
---
0x3cf JUMPDEST
0x3d0 DUP2
0x3d1 ADD
0x3d2 SWAP1
0x3d3 DUP1
0x3d4 DUP1
0x3d5 MLOAD
0x3d6 SWAP1
0x3d7 PUSH1 0x20
0x3d9 ADD
0x3da SWAP1
0x3db SWAP3
0x3dc SWAP2
0x3dd SWAP1
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 DUP6
0x3e2 PUSH2 0xa6c
0x3e5 JUMP
---
0x3cf: JUMPDEST 
0x3d1: V228 = ADD V221 V222
0x3d5: V229 = M[V221]
0x3d7: V230 = 0x20
0x3d9: V231 = ADD 0x20 V221
0x3e2: V232 = 0xa6c
0x3e5: JUMP 0xa6c
---
Entry stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V221, V222]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V229, S6]
Exit stack: [V11, 0xd2, V44, V49, 0x0, 0x3e6, V44, V182, V229, V49]

================================

Block 0x3e6
[0x3e6:0x3ed]
---
Predecessors: [0xcac]
Successors: [0xd2]
---
0x3e6 JUMPDEST
0x3e7 SWAP1
0x3e8 POP
0x3e9 SWAP3
0x3ea SWAP2
0x3eb POP
0x3ec POP
0x3ed JUMP
---
0x3e6: JUMPDEST 
0x3ed: JUMP S4
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S5, 0x1]

================================

Block 0x3ee
[0x3ee:0x444]
---
Predecessors: [0xf8]
Successors: [0x445, 0x449]
---
0x3ee JUMPDEST
0x3ef PUSH1 0x0
0x3f1 DUP1
0x3f2 SWAP1
0x3f3 SLOAD
0x3f4 SWAP1
0x3f5 PUSH2 0x100
0x3f8 EXP
0x3f9 SWAP1
0x3fa DIV
0x3fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x410 AND
0x411 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x426 AND
0x427 CALLER
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e EQ
0x43f ISZERO
0x440 ISZERO
0x441 PUSH2 0x449
0x444 JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V233 = 0x0
0x3f3: V234 = S[0x0]
0x3f5: V235 = 0x100
0x3f8: V236 = EXP 0x100 0x0
0x3fa: V237 = DIV V234 0x1
0x3fb: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x410: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x411: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x426: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x427: V242 = CALLER
0x428: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x43e: V245 = EQ V244 V241
0x43f: V246 = ISZERO V245
0x440: V247 = ISZERO V246
0x441: V248 = 0x449
0x444: JUMPI 0x449 V247
---
Entry stack: [V11, 0x101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101]

================================

Block 0x445
[0x445:0x448]
---
Predecessors: [0x3ee]
Successors: []
---
0x445 PUSH1 0x0
0x447 DUP1
0x448 REVERT
---
0x445: V249 = 0x0
0x448: REVERT 0x0 0x0
---
Entry stack: [V11, 0x101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101]

================================

Block 0x449
[0x449:0x4bd]
---
Predecessors: [0x3ee]
Successors: [0x4be, 0x4c7]
---
0x449 JUMPDEST
0x44a PUSH1 0x0
0x44c DUP1
0x44d SWAP1
0x44e SLOAD
0x44f SWAP1
0x450 PUSH2 0x100
0x453 EXP
0x454 SWAP1
0x455 DIV
0x456 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46b AND
0x46c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x481 AND
0x482 PUSH2 0x8fc
0x485 ADDRESS
0x486 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49b AND
0x49c BALANCE
0x49d SWAP1
0x49e DUP2
0x49f ISZERO
0x4a0 MUL
0x4a1 SWAP1
0x4a2 PUSH1 0x40
0x4a4 MLOAD
0x4a5 PUSH1 0x0
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa DUP1
0x4ab DUP4
0x4ac SUB
0x4ad DUP2
0x4ae DUP6
0x4af DUP9
0x4b0 DUP9
0x4b1 CALL
0x4b2 SWAP4
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 POP
0x4b7 ISZERO
0x4b8 DUP1
0x4b9 ISZERO
0x4ba PUSH2 0x4c7
0x4bd JUMPI
---
0x449: JUMPDEST 
0x44a: V250 = 0x0
0x44e: V251 = S[0x0]
0x450: V252 = 0x100
0x453: V253 = EXP 0x100 0x0
0x455: V254 = DIV V251 0x1
0x456: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x46c: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x481: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x482: V259 = 0x8fc
0x485: V260 = ADDRESS
0x486: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x49b: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x49c: V263 = BALANCE V262
0x49f: V264 = ISZERO V263
0x4a0: V265 = MUL V264 0x8fc
0x4a2: V266 = 0x40
0x4a4: V267 = M[0x40]
0x4a5: V268 = 0x0
0x4a7: V269 = 0x40
0x4a9: V270 = M[0x40]
0x4ac: V271 = SUB V267 V270
0x4b1: V272 = CALL V265 V258 V263 V270 V271 V270 0x0
0x4b7: V273 = ISZERO V272
0x4b9: V274 = ISZERO V273
0x4ba: V275 = 0x4c7
0x4bd: JUMPI 0x4c7 V274
---
Entry stack: [V11, 0x101]
Stack pops: 0
Stack additions: [V273]
Exit stack: [V11, 0x101, V273]

================================

Block 0x4be
[0x4be:0x4c6]
---
Predecessors: [0x449]
Successors: []
---
0x4be RETURNDATASIZE
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 RETURNDATACOPY
0x4c3 RETURNDATASIZE
0x4c4 PUSH1 0x0
0x4c6 REVERT
---
0x4be: V276 = RETURNDATASIZE
0x4bf: V277 = 0x0
0x4c2: RETURNDATACOPY 0x0 0x0 V276
0x4c3: V278 = RETURNDATASIZE
0x4c4: V279 = 0x0
0x4c6: REVERT 0x0 V278
---
Entry stack: [V11, 0x101, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x101, V273]

================================

Block 0x4c7
[0x4c7:0x4c9]
---
Predecessors: [0x449]
Successors: [0x101]
---
0x4c7 JUMPDEST
0x4c8 POP
0x4c9 JUMP
---
0x4c7: JUMPDEST 
0x4c9: JUMP 0x101
---
Entry stack: [V11, 0x101, V273]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ca
[0x4ca:0x4dc]
---
Predecessors: [0x103]
Successors: [0x4dd, 0x4de]
---
0x4ca JUMPDEST
0x4cb PUSH1 0x0
0x4cd PUSH2 0x532
0x4d0 DUP8
0x4d1 PUSH1 0x0
0x4d3 PUSH1 0x2
0x4d5 DUP2
0x4d6 LT
0x4d7 ISZERO
0x4d8 ISZERO
0x4d9 PUSH2 0x4de
0x4dc JUMPI
---
0x4ca: JUMPDEST 
0x4cb: V280 = 0x0
0x4cd: V281 = 0x532
0x4d1: V282 = 0x0
0x4d3: V283 = 0x2
0x4d6: V284 = LT 0x0 0x2
0x4d7: V285 = ISZERO 0x1
0x4d8: V286 = ISZERO 0x0
0x4d9: V287 = 0x4de
0x4dc: JUMPI 0x4de 0x1
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, V93, V91, V100, V98]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0, 0x532, S5, 0x0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, V93, V91, V100, V98, 0x0, 0x532, 0x24, 0x0]

================================

Block 0x4dd
[0x4dd:0x4dd]
---
Predecessors: [0x4ca]
Successors: []
---
0x4dd INVALID
---
0x4dd: INVALID 
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, V93, V91, V100, V98, 0x0, 0x532, 0x24, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, V93, V91, V100, V98, 0x0, 0x532, 0x24, 0x0]

================================

Block 0x4de
[0x4de:0x531]
---
Predecessors: [0x4ca]
Successors: [0xcb4]
---
0x4de JUMPDEST
0x4df PUSH1 0x20
0x4e1 MUL
0x4e2 ADD
0x4e3 CALLDATALOAD
0x4e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f9 AND
0x4fa CALLVALUE
0x4fb DUP8
0x4fc DUP8
0x4fd DUP1
0x4fe DUP1
0x4ff PUSH1 0x1f
0x501 ADD
0x502 PUSH1 0x20
0x504 DUP1
0x505 SWAP2
0x506 DIV
0x507 MUL
0x508 PUSH1 0x20
0x50a ADD
0x50b PUSH1 0x40
0x50d MLOAD
0x50e SWAP1
0x50f DUP2
0x510 ADD
0x511 PUSH1 0x40
0x513 MSTORE
0x514 DUP1
0x515 SWAP4
0x516 SWAP3
0x517 SWAP2
0x518 SWAP1
0x519 DUP2
0x51a DUP2
0x51b MSTORE
0x51c PUSH1 0x20
0x51e ADD
0x51f DUP4
0x520 DUP4
0x521 DUP1
0x522 DUP3
0x523 DUP5
0x524 CALLDATACOPY
0x525 DUP3
0x526 ADD
0x527 SWAP2
0x528 POP
0x529 POP
0x52a POP
0x52b POP
0x52c POP
0x52d POP
0x52e PUSH2 0xcb4
0x531 JUMP
---
0x4de: JUMPDEST 
0x4df: V288 = 0x20
0x4e1: V289 = MUL 0x20 0x0
0x4e2: V290 = ADD 0x0 0x24
0x4e3: V291 = CALLDATALOAD 0x24
0x4e4: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x4fa: V294 = CALLVALUE
0x4ff: V295 = 0x1f
0x501: V296 = ADD 0x1f V91
0x502: V297 = 0x20
0x506: V298 = DIV V296 0x20
0x507: V299 = MUL V298 0x20
0x508: V300 = 0x20
0x50a: V301 = ADD 0x20 V299
0x50b: V302 = 0x40
0x50d: V303 = M[0x40]
0x510: V304 = ADD V303 V301
0x511: V305 = 0x40
0x513: M[0x40] = V304
0x51b: M[V303] = V91
0x51c: V306 = 0x20
0x51e: V307 = ADD 0x20 V303
0x524: CALLDATACOPY V307 V93 V91
0x526: V308 = ADD V307 V91
0x52e: V309 = 0xcb4
0x531: JUMP 0xcb4
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, V93, V91, V100, V98, 0x0, 0x532, 0x24, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V293, V294, V303]
Exit stack: [V11, 0x17d, V77, 0x24, V84, V93, V91, V100, V98, 0x0, 0x532, V293, V294, V303]

================================

Block 0x532
[0x532:0x538]
---
Predecessors: [0xcc3]
Successors: [0x539, 0x5a6]
---
0x532 JUMPDEST
0x533 ISZERO
0x534 ISZERO
0x535 PUSH2 0x5a6
0x538 JUMPI
---
0x532: JUMPDEST 
0x533: V310 = ISZERO S0
0x534: V311 = ISZERO V310
0x535: V312 = 0x5a6
0x538: JUMPI 0x5a6 V311
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1]

================================

Block 0x539
[0x539:0x5a5]
---
Predecessors: [0x532]
Successors: []
---
0x539 PUSH1 0x40
0x53b MLOAD
0x53c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x55d DUP2
0x55e MSTORE
0x55f PUSH1 0x4
0x561 ADD
0x562 DUP1
0x563 DUP1
0x564 PUSH1 0x20
0x566 ADD
0x567 DUP3
0x568 DUP2
0x569 SUB
0x56a DUP3
0x56b MSTORE
0x56c PUSH1 0x1c
0x56e DUP2
0x56f MSTORE
0x570 PUSH1 0x20
0x572 ADD
0x573 DUP1
0x574 PUSH32 0x54726164654578656375746f72204552523a206275795f747261646500000000
0x595 DUP2
0x596 MSTORE
0x597 POP
0x598 PUSH1 0x20
0x59a ADD
0x59b SWAP2
0x59c POP
0x59d POP
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 DUP1
0x5a2 SWAP2
0x5a3 SUB
0x5a4 SWAP1
0x5a5 REVERT
---
0x539: V313 = 0x40
0x53b: V314 = M[0x40]
0x53c: V315 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x55e: M[V314] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x55f: V316 = 0x4
0x561: V317 = ADD 0x4 V314
0x564: V318 = 0x20
0x566: V319 = ADD 0x20 V317
0x569: V320 = SUB V319 V317
0x56b: M[V317] = V320
0x56c: V321 = 0x1c
0x56f: M[V319] = 0x1c
0x570: V322 = 0x20
0x572: V323 = ADD 0x20 V319
0x574: V324 = 0x54726164654578656375746f72204552523a206275795f747261646500000000
0x596: M[V323] = 0x54726164654578656375746f72204552523a206275795f747261646500000000
0x598: V325 = 0x20
0x59a: V326 = ADD 0x20 V323
0x59e: V327 = 0x40
0x5a0: V328 = M[0x40]
0x5a3: V329 = SUB V326 V328
0x5a5: REVERT V328 V329
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0]

================================

Block 0x5a6
[0x5a6:0x63c]
---
Predecessors: [0x532]
Successors: [0x63d, 0x641]
---
0x5a6 JUMPDEST
0x5a7 DUP6
0x5a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bd AND
0x5be PUSH4 0x70a08231
0x5c3 ADDRESS
0x5c4 PUSH1 0x40
0x5c6 MLOAD
0x5c7 DUP3
0x5c8 PUSH4 0xffffffff
0x5cd AND
0x5ce PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5ec MUL
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x4
0x5f1 ADD
0x5f2 DUP1
0x5f3 DUP3
0x5f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x609 AND
0x60a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61f AND
0x620 DUP2
0x621 MSTORE
0x622 PUSH1 0x20
0x624 ADD
0x625 SWAP2
0x626 POP
0x627 POP
0x628 PUSH1 0x20
0x62a PUSH1 0x40
0x62c MLOAD
0x62d DUP1
0x62e DUP4
0x62f SUB
0x630 DUP2
0x631 PUSH1 0x0
0x633 DUP8
0x634 DUP1
0x635 EXTCODESIZE
0x636 ISZERO
0x637 DUP1
0x638 ISZERO
0x639 PUSH2 0x641
0x63c JUMPI
---
0x5a6: JUMPDEST 
0x5a8: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x5be: V332 = 0x70a08231
0x5c3: V333 = ADDRESS
0x5c4: V334 = 0x40
0x5c6: V335 = M[0x40]
0x5c8: V336 = 0xffffffff
0x5cd: V337 = AND 0xffffffff 0x70a08231
0x5ce: V338 = 0x100000000000000000000000000000000000000000000000000000000
0x5ec: V339 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x5ee: M[V335] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5ef: V340 = 0x4
0x5f1: V341 = ADD 0x4 V335
0x5f4: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x609: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x60a: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x61f: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x621: M[V341] = V345
0x622: V346 = 0x20
0x624: V347 = ADD 0x20 V341
0x628: V348 = 0x20
0x62a: V349 = 0x40
0x62c: V350 = M[0x40]
0x62f: V351 = SUB V347 V350
0x631: V352 = 0x0
0x635: V353 = EXTCODESIZE V331
0x636: V354 = ISZERO V353
0x638: V355 = ISZERO V354
0x639: V356 = 0x641
0x63c: JUMPI 0x641 V355
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V331, 0x70a08231, V347, 0x20, V350, V351, V350, 0x0, V331, V354]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0, V331, 0x70a08231, V347, 0x20, V350, V351, V350, 0x0, V331, V354]

================================

Block 0x63d
[0x63d:0x640]
---
Predecessors: [0x5a6]
Successors: []
---
0x63d PUSH1 0x0
0x63f DUP1
0x640 REVERT
---
0x63d: V357 = 0x0
0x640: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, V331, 0x70a08231, V347, 0x20, V350, V351, V350, 0x0, V331, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, V331, 0x70a08231, V347, 0x20, V350, V351, V350, 0x0, V331, V354]

================================

Block 0x641
[0x641:0x64b]
---
Predecessors: [0x5a6]
Successors: [0x64c, 0x655]
---
0x641 JUMPDEST
0x642 POP
0x643 GAS
0x644 CALL
0x645 ISZERO
0x646 DUP1
0x647 ISZERO
0x648 PUSH2 0x655
0x64b JUMPI
---
0x641: JUMPDEST 
0x643: V358 = GAS
0x644: V359 = CALL V358 V331 0x0 V350 V351 V350 0x20
0x645: V360 = ISZERO V359
0x647: V361 = ISZERO V360
0x648: V362 = 0x655
0x64b: JUMPI 0x655 V361
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, V331, 0x70a08231, V347, 0x20, V350, V351, V350, 0x0, V331, V354]
Stack pops: 7
Stack additions: [V360]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, V331, 0x70a08231, V347, V360]

================================

Block 0x64c
[0x64c:0x654]
---
Predecessors: [0x641]
Successors: []
---
0x64c RETURNDATASIZE
0x64d PUSH1 0x0
0x64f DUP1
0x650 RETURNDATACOPY
0x651 RETURNDATASIZE
0x652 PUSH1 0x0
0x654 REVERT
---
0x64c: V363 = RETURNDATASIZE
0x64d: V364 = 0x0
0x650: RETURNDATACOPY 0x0 0x0 V363
0x651: V365 = RETURNDATASIZE
0x652: V366 = 0x0
0x654: REVERT 0x0 V365
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, S4, V331, 0x70a08231, V347, V360]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, S4, V331, 0x70a08231, V347, V360]

================================

Block 0x655
[0x655:0x666]
---
Predecessors: [0x641]
Successors: [0x667, 0x66b]
---
0x655 JUMPDEST
0x656 POP
0x657 POP
0x658 POP
0x659 POP
0x65a PUSH1 0x40
0x65c MLOAD
0x65d RETURNDATASIZE
0x65e PUSH1 0x20
0x660 DUP2
0x661 LT
0x662 ISZERO
0x663 PUSH2 0x66b
0x666 JUMPI
---
0x655: JUMPDEST 
0x65a: V367 = 0x40
0x65c: V368 = M[0x40]
0x65d: V369 = RETURNDATASIZE
0x65e: V370 = 0x20
0x661: V371 = LT V369 0x20
0x662: V372 = ISZERO V371
0x663: V373 = 0x66b
0x666: JUMPI 0x66b V372
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, S4, V331, 0x70a08231, V347, V360]
Stack pops: 4
Stack additions: [V368, V369]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, S4, V368, V369]

================================

Block 0x667
[0x667:0x66a]
---
Predecessors: [0x655]
Successors: []
---
0x667 PUSH1 0x0
0x669 DUP1
0x66a REVERT
---
0x667: V374 = 0x0
0x66a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S6, S5, S4, S3, S2, V368, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S6, S5, S4, S3, S2, V368, V369]

================================

Block 0x66b
[0x66b:0x68f]
---
Predecessors: [0x655]
Successors: [0x690, 0x691]
---
0x66b JUMPDEST
0x66c DUP2
0x66d ADD
0x66e SWAP1
0x66f DUP1
0x670 DUP1
0x671 MLOAD
0x672 SWAP1
0x673 PUSH1 0x20
0x675 ADD
0x676 SWAP1
0x677 SWAP3
0x678 SWAP2
0x679 SWAP1
0x67a POP
0x67b POP
0x67c POP
0x67d SWAP1
0x67e POP
0x67f PUSH2 0x6b3
0x682 DUP7
0x683 DUP9
0x684 PUSH1 0x1
0x686 PUSH1 0x2
0x688 DUP2
0x689 LT
0x68a ISZERO
0x68b ISZERO
0x68c PUSH2 0x691
0x68f JUMPI
---
0x66b: JUMPDEST 
0x66d: V375 = ADD V368 V369
0x671: V376 = M[V368]
0x673: V377 = 0x20
0x675: V378 = ADD 0x20 V368
0x67f: V379 = 0x6b3
0x684: V380 = 0x1
0x686: V381 = 0x2
0x689: V382 = LT 0x1 0x2
0x68a: V383 = ISZERO 0x1
0x68b: V384 = ISZERO 0x0
0x68c: V385 = 0x691
0x68f: JUMPI 0x691 0x1
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S6, S5, S4, S3, S2, V368, V369]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V376, 0x6b3, S7, S8, 0x1]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S6, S5, S4, S3, V376, 0x6b3, V84, 0x24, 0x1]

================================

Block 0x690
[0x690:0x690]
---
Predecessors: [0x66b]
Successors: []
---
0x690 INVALID
---
0x690: INVALID 
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, V376, 0x6b3, V84, 0x24, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, V376, 0x6b3, V84, 0x24, 0x1]

================================

Block 0x691
[0x691:0x6b2]
---
Predecessors: [0x66b]
Successors: [0xa6c]
---
0x691 JUMPDEST
0x692 PUSH1 0x20
0x694 MUL
0x695 ADD
0x696 CALLDATALOAD
0x697 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ac AND
0x6ad DUP4
0x6ae DUP12
0x6af PUSH2 0xa6c
0x6b2 JUMP
---
0x691: JUMPDEST 
0x692: V386 = 0x20
0x694: V387 = MUL 0x20 0x1
0x695: V388 = ADD 0x20 0x24
0x696: V389 = CALLDATALOAD V388
0x697: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x6af: V392 = 0xa6c
0x6b2: JUMP 0xa6c
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, V376, 0x6b3, V84, 0x24, 0x1]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V391, S4, S11]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, V376, 0x6b3, V84, V391, V376, V77]

================================

Block 0x6b3
[0x6b3:0x6c4]
---
Predecessors: [0xcac]
Successors: [0x6c5, 0x6c6]
---
0x6b3 JUMPDEST
0x6b4 POP
0x6b5 PUSH2 0x71b
0x6b8 DUP8
0x6b9 PUSH1 0x1
0x6bb PUSH1 0x2
0x6bd DUP2
0x6be LT
0x6bf ISZERO
0x6c0 ISZERO
0x6c1 PUSH2 0x6c6
0x6c4 JUMPI
---
0x6b3: JUMPDEST 
0x6b5: V393 = 0x71b
0x6b9: V394 = 0x1
0x6bb: V395 = 0x2
0x6be: V396 = LT 0x1 0x2
0x6bf: V397 = ISZERO 0x1
0x6c0: V398 = ISZERO 0x0
0x6c1: V399 = 0x6c6
0x6c4: JUMPI 0x6c6 0x1
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, 0x1]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, 0x71b, S7, 0x1]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, 0x71b, 0x24, 0x1]

================================

Block 0x6c5
[0x6c5:0x6c5]
---
Predecessors: [0x6b3]
Successors: []
---
0x6c5 INVALID
---
0x6c5: INVALID 
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S7, S6, S5, S4, S3, 0x71b, 0x24, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S7, S6, S5, S4, S3, 0x71b, 0x24, 0x1]

================================

Block 0x6c6
[0x6c6:0x71a]
---
Predecessors: [0x6b3]
Successors: [0xcb4]
---
0x6c6 JUMPDEST
0x6c7 PUSH1 0x20
0x6c9 MUL
0x6ca ADD
0x6cb CALLDATALOAD
0x6cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e1 AND
0x6e2 PUSH1 0x0
0x6e4 DUP6
0x6e5 DUP6
0x6e6 DUP1
0x6e7 DUP1
0x6e8 PUSH1 0x1f
0x6ea ADD
0x6eb PUSH1 0x20
0x6ed DUP1
0x6ee SWAP2
0x6ef DIV
0x6f0 MUL
0x6f1 PUSH1 0x20
0x6f3 ADD
0x6f4 PUSH1 0x40
0x6f6 MLOAD
0x6f7 SWAP1
0x6f8 DUP2
0x6f9 ADD
0x6fa PUSH1 0x40
0x6fc MSTORE
0x6fd DUP1
0x6fe SWAP4
0x6ff SWAP3
0x700 SWAP2
0x701 SWAP1
0x702 DUP2
0x703 DUP2
0x704 MSTORE
0x705 PUSH1 0x20
0x707 ADD
0x708 DUP4
0x709 DUP4
0x70a DUP1
0x70b DUP3
0x70c DUP5
0x70d CALLDATACOPY
0x70e DUP3
0x70f ADD
0x710 SWAP2
0x711 POP
0x712 POP
0x713 POP
0x714 POP
0x715 POP
0x716 POP
0x717 PUSH2 0xcb4
0x71a JUMP
---
0x6c6: JUMPDEST 
0x6c7: V400 = 0x20
0x6c9: V401 = MUL 0x20 0x1
0x6ca: V402 = ADD 0x20 0x24
0x6cb: V403 = CALLDATALOAD V402
0x6cc: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e1: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x6e2: V406 = 0x0
0x6e8: V407 = 0x1f
0x6ea: V408 = ADD 0x1f S4
0x6eb: V409 = 0x20
0x6ef: V410 = DIV V408 0x20
0x6f0: V411 = MUL V410 0x20
0x6f1: V412 = 0x20
0x6f3: V413 = ADD 0x20 V411
0x6f4: V414 = 0x40
0x6f6: V415 = M[0x40]
0x6f9: V416 = ADD V415 V413
0x6fa: V417 = 0x40
0x6fc: M[0x40] = V416
0x704: M[V415] = S4
0x705: V418 = 0x20
0x707: V419 = ADD 0x20 V415
0x70d: CALLDATACOPY V419 S5 S4
0x70f: V420 = ADD V419 S4
0x717: V421 = 0xcb4
0x71a: JUMP 0xcb4
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S7, S6, S5, S4, S3, 0x71b, 0x24, 0x1]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V405, 0x0, V415]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S7, S6, S5, S4, S3, 0x71b, V405, 0x0, V415]

================================

Block 0x71b
[0x71b:0x721]
---
Predecessors: [0xcc3]
Successors: [0x722, 0x78f]
---
0x71b JUMPDEST
0x71c ISZERO
0x71d ISZERO
0x71e PUSH2 0x78f
0x721 JUMPI
---
0x71b: JUMPDEST 
0x71c: V422 = ISZERO V769
0x71d: V423 = ISZERO V422
0x71e: V424 = 0x78f
0x721: JUMPI 0x78f V423
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, V769]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1]

================================

Block 0x722
[0x722:0x78e]
---
Predecessors: [0x71b]
Successors: []
---
0x722 PUSH1 0x40
0x724 MLOAD
0x725 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x746 DUP2
0x747 MSTORE
0x748 PUSH1 0x4
0x74a ADD
0x74b DUP1
0x74c DUP1
0x74d PUSH1 0x20
0x74f ADD
0x750 DUP3
0x751 DUP2
0x752 SUB
0x753 DUP3
0x754 MSTORE
0x755 PUSH1 0x1d
0x757 DUP2
0x758 MSTORE
0x759 PUSH1 0x20
0x75b ADD
0x75c DUP1
0x75d PUSH32 0x54726164654578656375746f72204552523a2073656c6c5f7472616465000000
0x77e DUP2
0x77f MSTORE
0x780 POP
0x781 PUSH1 0x20
0x783 ADD
0x784 SWAP2
0x785 POP
0x786 POP
0x787 PUSH1 0x40
0x789 MLOAD
0x78a DUP1
0x78b SWAP2
0x78c SUB
0x78d SWAP1
0x78e REVERT
---
0x722: V425 = 0x40
0x724: V426 = M[0x40]
0x725: V427 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x747: M[V426] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x748: V428 = 0x4
0x74a: V429 = ADD 0x4 V426
0x74d: V430 = 0x20
0x74f: V431 = ADD 0x20 V429
0x752: V432 = SUB V431 V429
0x754: M[V429] = V432
0x755: V433 = 0x1d
0x758: M[V431] = 0x1d
0x759: V434 = 0x20
0x75b: V435 = ADD 0x20 V431
0x75d: V436 = 0x54726164654578656375746f72204552523a2073656c6c5f7472616465000000
0x77f: M[V435] = 0x54726164654578656375746f72204552523a2073656c6c5f7472616465000000
0x781: V437 = 0x20
0x783: V438 = ADD 0x20 V435
0x787: V439 = 0x40
0x789: V440 = M[0x40]
0x78c: V441 = SUB V438 V440
0x78e: REVERT V440 V441
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0]

================================

Block 0x78f
[0x78f:0x7e2]
---
Predecessors: [0x71b]
Successors: [0x7e3, 0x7ec]
---
0x78f JUMPDEST
0x790 CALLER
0x791 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a6 AND
0x7a7 PUSH2 0x8fc
0x7aa ADDRESS
0x7ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c0 AND
0x7c1 BALANCE
0x7c2 SWAP1
0x7c3 DUP2
0x7c4 ISZERO
0x7c5 MUL
0x7c6 SWAP1
0x7c7 PUSH1 0x40
0x7c9 MLOAD
0x7ca PUSH1 0x0
0x7cc PUSH1 0x40
0x7ce MLOAD
0x7cf DUP1
0x7d0 DUP4
0x7d1 SUB
0x7d2 DUP2
0x7d3 DUP6
0x7d4 DUP9
0x7d5 DUP9
0x7d6 CALL
0x7d7 SWAP4
0x7d8 POP
0x7d9 POP
0x7da POP
0x7db POP
0x7dc ISZERO
0x7dd DUP1
0x7de ISZERO
0x7df PUSH2 0x7ec
0x7e2 JUMPI
---
0x78f: JUMPDEST 
0x790: V442 = CALLER
0x791: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a6: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x7a7: V445 = 0x8fc
0x7aa: V446 = ADDRESS
0x7ab: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c0: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x7c1: V449 = BALANCE V448
0x7c4: V450 = ISZERO V449
0x7c5: V451 = MUL V450 0x8fc
0x7c7: V452 = 0x40
0x7c9: V453 = M[0x40]
0x7ca: V454 = 0x0
0x7cc: V455 = 0x40
0x7ce: V456 = M[0x40]
0x7d1: V457 = SUB V453 V456
0x7d6: V458 = CALL V451 V444 V449 V456 V457 V456 0x0
0x7dc: V459 = ISZERO V458
0x7de: V460 = ISZERO V459
0x7df: V461 = 0x7ec
0x7e2: JUMPI 0x7ec V460
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V459]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S4, S3, S2, S1, S0, V459]

================================

Block 0x7e3
[0x7e3:0x7eb]
---
Predecessors: [0x78f]
Successors: []
---
0x7e3 RETURNDATASIZE
0x7e4 PUSH1 0x0
0x7e6 DUP1
0x7e7 RETURNDATACOPY
0x7e8 RETURNDATASIZE
0x7e9 PUSH1 0x0
0x7eb REVERT
---
0x7e3: V462 = RETURNDATASIZE
0x7e4: V463 = 0x0
0x7e7: RETURNDATACOPY 0x0 0x0 V462
0x7e8: V464 = RETURNDATASIZE
0x7e9: V465 = 0x0
0x7eb: REVERT 0x0 V464
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, V459]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, V459]

================================

Block 0x7ec
[0x7ec:0x888]
---
Predecessors: [0x78f]
Successors: [0x889, 0x88d]
---
0x7ec JUMPDEST
0x7ed POP
0x7ee PUSH2 0x8ce
0x7f1 DUP7
0x7f2 CALLER
0x7f3 DUP9
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 AND
0x80a PUSH4 0x70a08231
0x80f ADDRESS
0x810 PUSH1 0x40
0x812 MLOAD
0x813 DUP3
0x814 PUSH4 0xffffffff
0x819 AND
0x81a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x838 MUL
0x839 DUP2
0x83a MSTORE
0x83b PUSH1 0x4
0x83d ADD
0x83e DUP1
0x83f DUP3
0x840 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x855 AND
0x856 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86b AND
0x86c DUP2
0x86d MSTORE
0x86e PUSH1 0x20
0x870 ADD
0x871 SWAP2
0x872 POP
0x873 POP
0x874 PUSH1 0x20
0x876 PUSH1 0x40
0x878 MLOAD
0x879 DUP1
0x87a DUP4
0x87b SUB
0x87c DUP2
0x87d PUSH1 0x0
0x87f DUP8
0x880 DUP1
0x881 EXTCODESIZE
0x882 ISZERO
0x883 DUP1
0x884 ISZERO
0x885 PUSH2 0x88d
0x888 JUMPI
---
0x7ec: JUMPDEST 
0x7ee: V466 = 0x8ce
0x7f2: V467 = CALLER
0x7f4: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x80a: V470 = 0x70a08231
0x80f: V471 = ADDRESS
0x810: V472 = 0x40
0x812: V473 = M[0x40]
0x814: V474 = 0xffffffff
0x819: V475 = AND 0xffffffff 0x70a08231
0x81a: V476 = 0x100000000000000000000000000000000000000000000000000000000
0x838: V477 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x83a: M[V473] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x83b: V478 = 0x4
0x83d: V479 = ADD 0x4 V473
0x840: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x855: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x856: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x86b: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x86d: M[V479] = V483
0x86e: V484 = 0x20
0x870: V485 = ADD 0x20 V479
0x874: V486 = 0x20
0x876: V487 = 0x40
0x878: V488 = M[0x40]
0x87b: V489 = SUB V485 V488
0x87d: V490 = 0x0
0x881: V491 = EXTCODESIZE V469
0x882: V492 = ISZERO V491
0x884: V493 = ISZERO V492
0x885: V494 = 0x88d
0x888: JUMPI 0x88d V493
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, V459]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0x8ce, S6, V467, V469, 0x70a08231, V485, 0x20, V488, V489, V488, 0x0, V469, V492]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, 0x8ce, V84, V467, V469, 0x70a08231, V485, 0x20, V488, V489, V488, 0x0, V469, V492]

================================

Block 0x889
[0x889:0x88c]
---
Predecessors: [0x7ec]
Successors: []
---
0x889 PUSH1 0x0
0x88b DUP1
0x88c REVERT
---
0x889: V495 = 0x0
0x88c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S17, S16, S15, S14, S13, 0x8ce, V84, V467, V469, 0x70a08231, V485, 0x20, V488, V489, V488, 0x0, V469, V492]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S17, S16, S15, S14, S13, 0x8ce, V84, V467, V469, 0x70a08231, V485, 0x20, V488, V489, V488, 0x0, V469, V492]

================================

Block 0x88d
[0x88d:0x897]
---
Predecessors: [0x7ec]
Successors: [0x898, 0x8a1]
---
0x88d JUMPDEST
0x88e POP
0x88f GAS
0x890 CALL
0x891 ISZERO
0x892 DUP1
0x893 ISZERO
0x894 PUSH2 0x8a1
0x897 JUMPI
---
0x88d: JUMPDEST 
0x88f: V496 = GAS
0x890: V497 = CALL V496 V469 0x0 V488 V489 V488 0x20
0x891: V498 = ISZERO V497
0x893: V499 = ISZERO V498
0x894: V500 = 0x8a1
0x897: JUMPI 0x8a1 V499
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S17, S16, S15, S14, S13, 0x8ce, V84, V467, V469, 0x70a08231, V485, 0x20, V488, V489, V488, 0x0, V469, V492]
Stack pops: 7
Stack additions: [V498]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S17, S16, S15, S14, S13, 0x8ce, V84, V467, V469, 0x70a08231, V485, V498]

================================

Block 0x898
[0x898:0x8a0]
---
Predecessors: [0x88d]
Successors: []
---
0x898 RETURNDATASIZE
0x899 PUSH1 0x0
0x89b DUP1
0x89c RETURNDATACOPY
0x89d RETURNDATASIZE
0x89e PUSH1 0x0
0x8a0 REVERT
---
0x898: V501 = RETURNDATASIZE
0x899: V502 = 0x0
0x89c: RETURNDATACOPY 0x0 0x0 V501
0x89d: V503 = RETURNDATASIZE
0x89e: V504 = 0x0
0x8a0: REVERT 0x0 V503
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, 0x8ce, V84, S4, S3, 0x70a08231, S1, V498]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, 0x8ce, V84, S4, S3, 0x70a08231, S1, V498]

================================

Block 0x8a1
[0x8a1:0x8b2]
---
Predecessors: [0x88d]
Successors: [0x8b3, 0x8b7]
---
0x8a1 JUMPDEST
0x8a2 POP
0x8a3 POP
0x8a4 POP
0x8a5 POP
0x8a6 PUSH1 0x40
0x8a8 MLOAD
0x8a9 RETURNDATASIZE
0x8aa PUSH1 0x20
0x8ac DUP2
0x8ad LT
0x8ae ISZERO
0x8af PUSH2 0x8b7
0x8b2 JUMPI
---
0x8a1: JUMPDEST 
0x8a6: V505 = 0x40
0x8a8: V506 = M[0x40]
0x8a9: V507 = RETURNDATASIZE
0x8aa: V508 = 0x20
0x8ad: V509 = LT V507 0x20
0x8ae: V510 = ISZERO V509
0x8af: V511 = 0x8b7
0x8b2: JUMPI 0x8b7 V510
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, 0x8ce, V84, S4, S3, 0x70a08231, S1, V498]
Stack pops: 4
Stack additions: [V506, V507]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, 0x8ce, V84, S4, V506, V507]

================================

Block 0x8b3
[0x8b3:0x8b6]
---
Predecessors: [0x8a1]
Successors: []
---
0x8b3 PUSH1 0x0
0x8b5 DUP1
0x8b6 REVERT
---
0x8b3: V512 = 0x0
0x8b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S9, S8, S7, S6, S5, 0x8ce, V84, S2, V506, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S9, S8, S7, S6, S5, 0x8ce, V84, S2, V506, V507]

================================

Block 0x8b7
[0x8b7:0x8cd]
---
Predecessors: [0x8a1]
Successors: [0xa6c]
---
0x8b7 JUMPDEST
0x8b8 DUP2
0x8b9 ADD
0x8ba SWAP1
0x8bb DUP1
0x8bc DUP1
0x8bd MLOAD
0x8be SWAP1
0x8bf PUSH1 0x20
0x8c1 ADD
0x8c2 SWAP1
0x8c3 SWAP3
0x8c4 SWAP2
0x8c5 SWAP1
0x8c6 POP
0x8c7 POP
0x8c8 POP
0x8c9 DUP12
0x8ca PUSH2 0xa6c
0x8cd JUMP
---
0x8b7: JUMPDEST 
0x8b9: V513 = ADD V506 V507
0x8bd: V514 = M[V506]
0x8bf: V515 = 0x20
0x8c1: V516 = ADD 0x20 V506
0x8ca: V517 = 0xa6c
0x8cd: JUMP 0xa6c
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S9, S8, S7, S6, S5, 0x8ce, V84, S2, V506, V507]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V514, S12]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S9, S8, S7, S6, S5, 0x8ce, V84, S2, V514, V77]

================================

Block 0x8ce
[0x8ce:0x8d8]
---
Predecessors: [0xcac]
Successors: [0x17d]
---
0x8ce JUMPDEST
0x8cf POP
0x8d0 POP
0x8d1 POP
0x8d2 POP
0x8d3 POP
0x8d4 POP
0x8d5 POP
0x8d6 POP
0x8d7 POP
0x8d8 JUMP
---
0x8ce: JUMPDEST 
0x8d8: JUMP 0x17d
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S5, S4, S3, S2, S1, 0x1]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d9
[0x8d9:0x92f]
---
Predecessors: [0x18b]
Successors: [0x930, 0x934]
---
0x8d9 JUMPDEST
0x8da PUSH1 0x0
0x8dc DUP1
0x8dd SWAP1
0x8de SLOAD
0x8df SWAP1
0x8e0 PUSH2 0x100
0x8e3 EXP
0x8e4 SWAP1
0x8e5 DIV
0x8e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fb AND
0x8fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x911 AND
0x912 CALLER
0x913 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x928 AND
0x929 EQ
0x92a ISZERO
0x92b ISZERO
0x92c PUSH2 0x934
0x92f JUMPI
---
0x8d9: JUMPDEST 
0x8da: V518 = 0x0
0x8de: V519 = S[0x0]
0x8e0: V520 = 0x100
0x8e3: V521 = EXP 0x100 0x0
0x8e5: V522 = DIV V519 0x1
0x8e6: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fb: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x8fc: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x911: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x912: V527 = CALLER
0x913: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x928: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x929: V530 = EQ V529 V526
0x92a: V531 = ISZERO V530
0x92b: V532 = ISZERO V531
0x92c: V533 = 0x934
0x92f: JUMPI 0x934 V532
---
Entry stack: [V11, 0x194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x194]

================================

Block 0x930
[0x930:0x933]
---
Predecessors: [0x8d9]
Successors: []
---
0x930 PUSH1 0x0
0x932 DUP1
0x933 REVERT
---
0x930: V534 = 0x0
0x933: REVERT 0x0 0x0
---
Entry stack: [V11, 0x194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x194]

================================

Block 0x934
[0x934:0x9da]
---
Predecessors: [0x8d9]
Successors: [0x194]
---
0x934 JUMPDEST
0x935 PUSH1 0x0
0x937 DUP1
0x938 SWAP1
0x939 SLOAD
0x93a SWAP1
0x93b PUSH2 0x100
0x93e EXP
0x93f SWAP1
0x940 DIV
0x941 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x956 AND
0x957 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96c AND
0x96d PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x98e PUSH1 0x40
0x990 MLOAD
0x991 PUSH1 0x40
0x993 MLOAD
0x994 DUP1
0x995 SWAP2
0x996 SUB
0x997 SWAP1
0x998 LOG2
0x999 PUSH1 0x0
0x99b DUP1
0x99c PUSH1 0x0
0x99e PUSH2 0x100
0x9a1 EXP
0x9a2 DUP2
0x9a3 SLOAD
0x9a4 DUP2
0x9a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ba MUL
0x9bb NOT
0x9bc AND
0x9bd SWAP1
0x9be DUP4
0x9bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d4 AND
0x9d5 MUL
0x9d6 OR
0x9d7 SWAP1
0x9d8 SSTORE
0x9d9 POP
0x9da JUMP
---
0x934: JUMPDEST 
0x935: V535 = 0x0
0x939: V536 = S[0x0]
0x93b: V537 = 0x100
0x93e: V538 = EXP 0x100 0x0
0x940: V539 = DIV V536 0x1
0x941: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x956: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x957: V542 = 0xffffffffffffffffffffffffffffffffffffffff
0x96c: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x96d: V544 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x98e: V545 = 0x40
0x990: V546 = M[0x40]
0x991: V547 = 0x40
0x993: V548 = M[0x40]
0x996: V549 = SUB V546 V548
0x998: LOG V548 V549 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V543
0x999: V550 = 0x0
0x99c: V551 = 0x0
0x99e: V552 = 0x100
0x9a1: V553 = EXP 0x100 0x0
0x9a3: V554 = S[0x0]
0x9a5: V555 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ba: V556 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9bb: V557 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9bc: V558 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V554
0x9bf: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d4: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x9d5: V561 = MUL 0x0 0x1
0x9d6: V562 = OR 0x0 V558
0x9d8: S[0x0] = V562
0x9da: JUMP 0x194
---
Entry stack: [V11, 0x194]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x9db
[0x9db:0x9df]
---
Predecessors: [0x1a2]
Successors: [0x1ab]
---
0x9db JUMPDEST
0x9dc PUSH1 0x0
0x9de DUP2
0x9df JUMP
---
0x9db: JUMPDEST 
0x9dc: V563 = 0x0
0x9df: JUMP 0x1ab
---
Entry stack: [V11, 0x1ab]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x1ab, 0x0]

================================

Block 0x9e0
[0x9e0:0xa04]
---
Predecessors: [0x1f9]
Successors: [0x202]
---
0x9e0 JUMPDEST
0x9e1 PUSH1 0x0
0x9e3 DUP1
0x9e4 SWAP1
0x9e5 SLOAD
0x9e6 SWAP1
0x9e7 PUSH2 0x100
0x9ea EXP
0x9eb SWAP1
0x9ec DIV
0x9ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa02 AND
0xa03 DUP2
0xa04 JUMP
---
0x9e0: JUMPDEST 
0x9e1: V564 = 0x0
0x9e5: V565 = S[0x0]
0x9e7: V566 = 0x100
0x9ea: V567 = EXP 0x100 0x0
0x9ec: V568 = DIV V565 0x1
0x9ed: V569 = 0xffffffffffffffffffffffffffffffffffffffff
0xa02: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0xa04: JUMP 0x202
---
Entry stack: [V11, 0x202]
Stack pops: 1
Stack additions: [S0, V570]
Exit stack: [V11, 0x202, V570]

================================

Block 0xa05
[0xa05:0xa5b]
---
Predecessors: [0x250]
Successors: [0xa5c, 0xa60]
---
0xa05 JUMPDEST
0xa06 PUSH1 0x0
0xa08 DUP1
0xa09 SWAP1
0xa0a SLOAD
0xa0b SWAP1
0xa0c PUSH2 0x100
0xa0f EXP
0xa10 SWAP1
0xa11 DIV
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 AND
0xa28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3d AND
0xa3e CALLER
0xa3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa54 AND
0xa55 EQ
0xa56 ISZERO
0xa57 ISZERO
0xa58 PUSH2 0xa60
0xa5b JUMPI
---
0xa05: JUMPDEST 
0xa06: V571 = 0x0
0xa0a: V572 = S[0x0]
0xa0c: V573 = 0x100
0xa0f: V574 = EXP 0x100 0x0
0xa11: V575 = DIV V572 0x1
0xa12: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0xa28: V578 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V579 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0xa3e: V580 = CALLER
0xa3f: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0xa54: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0xa55: V583 = EQ V582 V579
0xa56: V584 = ISZERO V583
0xa57: V585 = ISZERO V584
0xa58: V586 = 0xa60
0xa5b: JUMPI 0xa60 V585
---
Entry stack: [V11, 0x285, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x285, V153]

================================

Block 0xa5c
[0xa5c:0xa5f]
---
Predecessors: [0xa05]
Successors: []
---
0xa5c PUSH1 0x0
0xa5e DUP1
0xa5f REVERT
---
0xa5c: V587 = 0x0
0xa5f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x285, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x285, V153]

================================

Block 0xa60
[0xa60:0xa68]
---
Predecessors: [0xa05]
Successors: [0xccc]
---
0xa60 JUMPDEST
0xa61 PUSH2 0xa69
0xa64 DUP2
0xa65 PUSH2 0xccc
0xa68 JUMP
---
0xa60: JUMPDEST 
0xa61: V588 = 0xa69
0xa65: V589 = 0xccc
0xa68: JUMP 0xccc
---
Entry stack: [V11, 0x285, V153]
Stack pops: 1
Stack additions: [S0, 0xa69, S0]
Exit stack: [V11, 0x285, V153, 0xa69, V153]

================================

Block 0xa69
[0xa69:0xa6b]
---
Predecessors: [0xd08]
Successors: [0x285]
---
0xa69 JUMPDEST
0xa6a POP
0xa6b JUMP
---
0xa69: JUMPDEST 
0xa6b: JUMP 0x285
---
Entry stack: [V11, 0x285, V153]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6c
[0xa6c:0xa76]
---
Predecessors: [0x3cf, 0x691, 0x8b7]
Successors: [0xa77, 0xa7f]
---
0xa6c JUMPDEST
0xa6d PUSH1 0x0
0xa6f DUP1
0xa70 DUP4
0xa71 EQ
0xa72 ISZERO
0xa73 PUSH2 0xa7f
0xa76 JUMPI
---
0xa6c: JUMPDEST 
0xa6d: V590 = 0x0
0xa71: V591 = EQ S1 0x0
0xa72: V592 = ISZERO V591
0xa73: V593 = 0xa7f
0xa76: JUMPI 0xa7f V592
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S9, S8, S7, S6, S5, {0x3e6, 0x6b3, 0x8ce}, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S9, S8, S7, S6, S5, {0x3e6, 0x6b3, 0x8ce}, S3, S2, S1, S0, 0x0]

================================

Block 0xa77
[0xa77:0xa7e]
---
Predecessors: [0xa6c]
Successors: [0xcac]
---
0xa77 PUSH1 0x1
0xa79 SWAP1
0xa7a POP
0xa7b PUSH2 0xcac
0xa7e JUMP
---
0xa77: V594 = 0x1
0xa7b: V595 = 0xcac
0xa7e: JUMP 0xcac
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x1]

================================

Block 0xa7f
[0xa7f:0xab4]
---
Predecessors: [0xa6c]
Successors: [0xab5, 0xb00]
---
0xa7f JUMPDEST
0xa80 PUSH1 0x0
0xa82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa97 AND
0xa98 DUP6
0xa99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaae AND
0xaaf EQ
0xab0 ISZERO
0xab1 PUSH2 0xb00
0xab4 JUMPI
---
0xa7f: JUMPDEST 
0xa80: V596 = 0x0
0xa82: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0xa97: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xa99: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0xaae: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xaaf: V601 = EQ V600 0x0
0xab0: V602 = ISZERO V601
0xab1: V603 = 0xb00
0xab4: JUMPI 0xb00 V602
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]

================================

Block 0xab5
[0xab5:0xaf0]
---
Predecessors: [0xa7f]
Successors: [0xaf1, 0xafa]
---
0xab5 DUP4
0xab6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacb AND
0xacc PUSH2 0x8fc
0xacf DUP5
0xad0 SWAP1
0xad1 DUP2
0xad2 ISZERO
0xad3 MUL
0xad4 SWAP1
0xad5 PUSH1 0x40
0xad7 MLOAD
0xad8 PUSH1 0x0
0xada PUSH1 0x40
0xadc MLOAD
0xadd DUP1
0xade DUP4
0xadf SUB
0xae0 DUP2
0xae1 DUP6
0xae2 DUP9
0xae3 DUP9
0xae4 CALL
0xae5 SWAP4
0xae6 POP
0xae7 POP
0xae8 POP
0xae9 POP
0xaea ISZERO
0xaeb DUP1
0xaec ISZERO
0xaed PUSH2 0xafa
0xaf0 JUMPI
---
0xab6: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0xacb: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xacc: V606 = 0x8fc
0xad2: V607 = ISZERO S2
0xad3: V608 = MUL V607 0x8fc
0xad5: V609 = 0x40
0xad7: V610 = M[0x40]
0xad8: V611 = 0x0
0xada: V612 = 0x40
0xadc: V613 = M[0x40]
0xadf: V614 = SUB V610 V613
0xae4: V615 = CALL V608 V605 S2 V613 V614 V613 0x0
0xaea: V616 = ISZERO V615
0xaec: V617 = ISZERO V616
0xaed: V618 = 0xafa
0xaf0: JUMPI 0xafa V617
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V616]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0, V616]

================================

Block 0xaf1
[0xaf1:0xaf9]
---
Predecessors: [0xab5]
Successors: []
---
0xaf1 RETURNDATASIZE
0xaf2 PUSH1 0x0
0xaf4 DUP1
0xaf5 RETURNDATACOPY
0xaf6 RETURNDATASIZE
0xaf7 PUSH1 0x0
0xaf9 REVERT
---
0xaf1: V619 = RETURNDATASIZE
0xaf2: V620 = 0x0
0xaf5: RETURNDATACOPY 0x0 0x0 V619
0xaf6: V621 = RETURNDATASIZE
0xaf7: V622 = 0x0
0xaf9: REVERT 0x0 V621
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, {0x3e6, 0x6b3, 0x8ce}, S5, S4, S3, S2, 0x0, V616]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, {0x3e6, 0x6b3, 0x8ce}, S5, S4, S3, S2, 0x0, V616]

================================

Block 0xafa
[0xafa:0xaff]
---
Predecessors: [0xab5]
Successors: [0xca7]
---
0xafa JUMPDEST
0xafb POP
0xafc PUSH2 0xca7
0xaff JUMP
---
0xafa: JUMPDEST 
0xafc: V623 = 0xca7
0xaff: JUMP 0xca7
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, {0x3e6, 0x6b3, 0x8ce}, S5, S4, S3, S2, 0x0, V616]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S11, S10, S9, S8, S7, {0x3e6, 0x6b3, 0x8ce}, S5, S4, S3, S2, 0x0]

================================

Block 0xb00
[0xb00:0xb06]
---
Predecessors: [0xa7f]
Successors: [0xb07, 0xbea]
---
0xb00 JUMPDEST
0xb01 DUP2
0xb02 ISZERO
0xb03 PUSH2 0xbea
0xb06 JUMPI
---
0xb00: JUMPDEST 
0xb02: V624 = ISZERO S1
0xb03: V625 = 0xbea
0xb06: JUMPI 0xbea V624
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]

================================

Block 0xb07
[0xb07:0xba4]
---
Predecessors: [0xb00]
Successors: [0xba5, 0xba9]
---
0xb07 DUP5
0xb08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1d AND
0xb1e PUSH4 0xa9059cbb
0xb23 DUP6
0xb24 DUP6
0xb25 PUSH1 0x40
0xb27 MLOAD
0xb28 DUP4
0xb29 PUSH4 0xffffffff
0xb2e AND
0xb2f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb4d MUL
0xb4e DUP2
0xb4f MSTORE
0xb50 PUSH1 0x4
0xb52 ADD
0xb53 DUP1
0xb54 DUP4
0xb55 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6a AND
0xb6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb80 AND
0xb81 DUP2
0xb82 MSTORE
0xb83 PUSH1 0x20
0xb85 ADD
0xb86 DUP3
0xb87 DUP2
0xb88 MSTORE
0xb89 PUSH1 0x20
0xb8b ADD
0xb8c SWAP3
0xb8d POP
0xb8e POP
0xb8f POP
0xb90 PUSH1 0x20
0xb92 PUSH1 0x40
0xb94 MLOAD
0xb95 DUP1
0xb96 DUP4
0xb97 SUB
0xb98 DUP2
0xb99 PUSH1 0x0
0xb9b DUP8
0xb9c DUP1
0xb9d EXTCODESIZE
0xb9e ISZERO
0xb9f DUP1
0xba0 ISZERO
0xba1 PUSH2 0xba9
0xba4 JUMPI
---
0xb08: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1d: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xb1e: V628 = 0xa9059cbb
0xb25: V629 = 0x40
0xb27: V630 = M[0x40]
0xb29: V631 = 0xffffffff
0xb2e: V632 = AND 0xffffffff 0xa9059cbb
0xb2f: V633 = 0x100000000000000000000000000000000000000000000000000000000
0xb4d: V634 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xb4f: M[V630] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb50: V635 = 0x4
0xb52: V636 = ADD 0x4 V630
0xb55: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6a: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb6b: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xb80: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0xb82: M[V636] = V640
0xb83: V641 = 0x20
0xb85: V642 = ADD 0x20 V636
0xb88: M[V642] = S2
0xb89: V643 = 0x20
0xb8b: V644 = ADD 0x20 V642
0xb90: V645 = 0x20
0xb92: V646 = 0x40
0xb94: V647 = M[0x40]
0xb97: V648 = SUB V644 V647
0xb99: V649 = 0x0
0xb9d: V650 = EXTCODESIZE V627
0xb9e: V651 = ISZERO V650
0xba0: V652 = ISZERO V651
0xba1: V653 = 0xba9
0xba4: JUMPI 0xba9 V652
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V627, 0xa9059cbb, V644, 0x20, V647, V648, V647, 0x0, V627, V651]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0, V627, 0xa9059cbb, V644, 0x20, V647, V648, V647, 0x0, V627, V651]

================================

Block 0xba5
[0xba5:0xba8]
---
Predecessors: [0xb07]
Successors: []
---
0xba5 PUSH1 0x0
0xba7 DUP1
0xba8 REVERT
---
0xba5: V654 = 0x0
0xba8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V627, 0xa9059cbb, V644, 0x20, V647, V648, V647, 0x0, V627, V651]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V627, 0xa9059cbb, V644, 0x20, V647, V648, V647, 0x0, V627, V651]

================================

Block 0xba9
[0xba9:0xbb3]
---
Predecessors: [0xb07]
Successors: [0xbb4, 0xbbd]
---
0xba9 JUMPDEST
0xbaa POP
0xbab GAS
0xbac CALL
0xbad ISZERO
0xbae DUP1
0xbaf ISZERO
0xbb0 PUSH2 0xbbd
0xbb3 JUMPI
---
0xba9: JUMPDEST 
0xbab: V655 = GAS
0xbac: V656 = CALL V655 V627 0x0 V647 V648 V647 0x20
0xbad: V657 = ISZERO V656
0xbaf: V658 = ISZERO V657
0xbb0: V659 = 0xbbd
0xbb3: JUMPI 0xbbd V658
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V627, 0xa9059cbb, V644, 0x20, V647, V648, V647, 0x0, V627, V651]
Stack pops: 7
Stack additions: [V657]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V627, 0xa9059cbb, V644, V657]

================================

Block 0xbb4
[0xbb4:0xbbc]
---
Predecessors: [0xba9]
Successors: []
---
0xbb4 RETURNDATASIZE
0xbb5 PUSH1 0x0
0xbb7 DUP1
0xbb8 RETURNDATACOPY
0xbb9 RETURNDATASIZE
0xbba PUSH1 0x0
0xbbc REVERT
---
0xbb4: V660 = RETURNDATASIZE
0xbb5: V661 = 0x0
0xbb8: RETURNDATACOPY 0x0 0x0 V660
0xbb9: V662 = RETURNDATASIZE
0xbba: V663 = 0x0
0xbbc: REVERT 0x0 V662
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0, V627, 0xa9059cbb, V644, V657]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0, V627, 0xa9059cbb, V644, V657]

================================

Block 0xbbd
[0xbbd:0xbce]
---
Predecessors: [0xba9]
Successors: [0xbcf, 0xbd3]
---
0xbbd JUMPDEST
0xbbe POP
0xbbf POP
0xbc0 POP
0xbc1 POP
0xbc2 PUSH1 0x40
0xbc4 MLOAD
0xbc5 RETURNDATASIZE
0xbc6 PUSH1 0x20
0xbc8 DUP2
0xbc9 LT
0xbca ISZERO
0xbcb PUSH2 0xbd3
0xbce JUMPI
---
0xbbd: JUMPDEST 
0xbc2: V664 = 0x40
0xbc4: V665 = M[0x40]
0xbc5: V666 = RETURNDATASIZE
0xbc6: V667 = 0x20
0xbc9: V668 = LT V666 0x20
0xbca: V669 = ISZERO V668
0xbcb: V670 = 0xbd3
0xbce: JUMPI 0xbd3 V669
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0, V627, 0xa9059cbb, V644, V657]
Stack pops: 4
Stack additions: [V665, V666]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0, V665, V666]

================================

Block 0xbcf
[0xbcf:0xbd2]
---
Predecessors: [0xbbd]
Successors: []
---
0xbcf PUSH1 0x0
0xbd1 DUP1
0xbd2 REVERT
---
0xbcf: V671 = 0x0
0xbd2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S12, S11, S10, S9, S8, {0x3e6, 0x6b3, 0x8ce}, S6, S5, S4, S3, 0x0, V665, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S12, S11, S10, S9, S8, {0x3e6, 0x6b3, 0x8ce}, S6, S5, S4, S3, 0x0, V665, V666]

================================

Block 0xbd3
[0xbd3:0xbe9]
---
Predecessors: [0xbbd]
Successors: [0xca6]
---
0xbd3 JUMPDEST
0xbd4 DUP2
0xbd5 ADD
0xbd6 SWAP1
0xbd7 DUP1
0xbd8 DUP1
0xbd9 MLOAD
0xbda SWAP1
0xbdb PUSH1 0x20
0xbdd ADD
0xbde SWAP1
0xbdf SWAP3
0xbe0 SWAP2
0xbe1 SWAP1
0xbe2 POP
0xbe3 POP
0xbe4 POP
0xbe5 POP
0xbe6 PUSH2 0xca6
0xbe9 JUMP
---
0xbd3: JUMPDEST 
0xbd5: V672 = ADD V665 V666
0xbd9: V673 = M[V665]
0xbdb: V674 = 0x20
0xbdd: V675 = ADD 0x20 V665
0xbe6: V676 = 0xca6
0xbe9: JUMP 0xca6
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S12, S11, S10, S9, S8, {0x3e6, 0x6b3, 0x8ce}, S6, S5, S4, S3, 0x0, V665, V666]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S12, S11, S10, S9, S8, {0x3e6, 0x6b3, 0x8ce}, S6, S5, S4, S3, 0x0]

================================

Block 0xbea
[0xbea:0xc88]
---
Predecessors: [0xb00]
Successors: [0xc89, 0xc8d]
---
0xbea JUMPDEST
0xbeb DUP5
0xbec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc01 AND
0xc02 PUSH4 0xa9059cbb
0xc07 DUP6
0xc08 DUP6
0xc09 PUSH1 0x40
0xc0b MLOAD
0xc0c DUP4
0xc0d PUSH4 0xffffffff
0xc12 AND
0xc13 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc31 MUL
0xc32 DUP2
0xc33 MSTORE
0xc34 PUSH1 0x4
0xc36 ADD
0xc37 DUP1
0xc38 DUP4
0xc39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4e AND
0xc4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc64 AND
0xc65 DUP2
0xc66 MSTORE
0xc67 PUSH1 0x20
0xc69 ADD
0xc6a DUP3
0xc6b DUP2
0xc6c MSTORE
0xc6d PUSH1 0x20
0xc6f ADD
0xc70 SWAP3
0xc71 POP
0xc72 POP
0xc73 POP
0xc74 PUSH1 0x0
0xc76 PUSH1 0x40
0xc78 MLOAD
0xc79 DUP1
0xc7a DUP4
0xc7b SUB
0xc7c DUP2
0xc7d PUSH1 0x0
0xc7f DUP8
0xc80 DUP1
0xc81 EXTCODESIZE
0xc82 ISZERO
0xc83 DUP1
0xc84 ISZERO
0xc85 PUSH2 0xc8d
0xc88 JUMPI
---
0xbea: JUMPDEST 
0xbec: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0xc01: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc02: V679 = 0xa9059cbb
0xc09: V680 = 0x40
0xc0b: V681 = M[0x40]
0xc0d: V682 = 0xffffffff
0xc12: V683 = AND 0xffffffff 0xa9059cbb
0xc13: V684 = 0x100000000000000000000000000000000000000000000000000000000
0xc31: V685 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc33: M[V681] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc34: V686 = 0x4
0xc36: V687 = ADD 0x4 V681
0xc39: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4e: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc4f: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0xc64: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0xc66: M[V687] = V691
0xc67: V692 = 0x20
0xc69: V693 = ADD 0x20 V687
0xc6c: M[V693] = S2
0xc6d: V694 = 0x20
0xc6f: V695 = ADD 0x20 V693
0xc74: V696 = 0x0
0xc76: V697 = 0x40
0xc78: V698 = M[0x40]
0xc7b: V699 = SUB V695 V698
0xc7d: V700 = 0x0
0xc81: V701 = EXTCODESIZE V678
0xc82: V702 = ISZERO V701
0xc84: V703 = ISZERO V702
0xc85: V704 = 0xc8d
0xc88: JUMPI 0xc8d V703
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V678, 0xa9059cbb, V695, 0x0, V698, V699, V698, 0x0, V678, V702]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0, V678, 0xa9059cbb, V695, 0x0, V698, V699, V698, 0x0, V678, V702]

================================

Block 0xc89
[0xc89:0xc8c]
---
Predecessors: [0xbea]
Successors: []
---
0xc89 PUSH1 0x0
0xc8b DUP1
0xc8c REVERT
---
0xc89: V705 = 0x0
0xc8c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V678, 0xa9059cbb, V695, 0x0, V698, V699, V698, 0x0, V678, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V678, 0xa9059cbb, V695, 0x0, V698, V699, V698, 0x0, V678, V702]

================================

Block 0xc8d
[0xc8d:0xc97]
---
Predecessors: [0xbea]
Successors: [0xc98, 0xca1]
---
0xc8d JUMPDEST
0xc8e POP
0xc8f GAS
0xc90 CALL
0xc91 ISZERO
0xc92 DUP1
0xc93 ISZERO
0xc94 PUSH2 0xca1
0xc97 JUMPI
---
0xc8d: JUMPDEST 
0xc8f: V706 = GAS
0xc90: V707 = CALL V706 V678 0x0 V698 V699 V698 0x0
0xc91: V708 = ISZERO V707
0xc93: V709 = ISZERO V708
0xc94: V710 = 0xca1
0xc97: JUMPI 0xca1 V709
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V678, 0xa9059cbb, V695, 0x0, V698, V699, V698, 0x0, V678, V702]
Stack pops: 7
Stack additions: [V708]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S20, S19, S18, S17, S16, {0x3e6, 0x6b3, 0x8ce}, S14, S13, S12, S11, 0x0, V678, 0xa9059cbb, V695, V708]

================================

Block 0xc98
[0xc98:0xca0]
---
Predecessors: [0xc8d]
Successors: []
---
0xc98 RETURNDATASIZE
0xc99 PUSH1 0x0
0xc9b DUP1
0xc9c RETURNDATACOPY
0xc9d RETURNDATASIZE
0xc9e PUSH1 0x0
0xca0 REVERT
---
0xc98: V711 = RETURNDATASIZE
0xc99: V712 = 0x0
0xc9c: RETURNDATACOPY 0x0 0x0 V711
0xc9d: V713 = RETURNDATASIZE
0xc9e: V714 = 0x0
0xca0: REVERT 0x0 V713
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0, V678, 0xa9059cbb, V695, V708]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0, V678, 0xa9059cbb, V695, V708]

================================

Block 0xca1
[0xca1:0xca5]
---
Predecessors: [0xc8d]
Successors: [0xca6]
---
0xca1 JUMPDEST
0xca2 POP
0xca3 POP
0xca4 POP
0xca5 POP
---
0xca1: JUMPDEST 
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0, V678, 0xa9059cbb, V695, V708]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x3e6, 0x6b3, 0x8ce}, S8, S7, S6, S5, 0x0]

================================

Block 0xca6
[0xca6:0xca6]
---
Predecessors: [0xbd3, 0xca1]
Successors: [0xca7]
---
0xca6 JUMPDEST
---
0xca6: JUMPDEST 
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]

================================

Block 0xca7
[0xca7:0xcab]
---
Predecessors: [0xafa, 0xca6]
Successors: [0xcac]
---
0xca7 JUMPDEST
0xca8 PUSH1 0x1
0xcaa SWAP1
0xcab POP
---
0xca7: JUMPDEST 
0xca8: V715 = 0x1
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x1]

================================

Block 0xcac
[0xcac:0xcb3]
---
Predecessors: [0xa77, 0xca7]
Successors: [0x3e6, 0x6b3, 0x8ce]
---
0xcac JUMPDEST
0xcad SWAP5
0xcae SWAP4
0xcaf POP
0xcb0 POP
0xcb1 POP
0xcb2 POP
0xcb3 JUMP
---
0xcac: JUMPDEST 
0xcb3: JUMP {0x3e6, 0x6b3, 0x8ce}
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x3e6, 0x6b3, 0x8ce}, S4, S3, S2, S1, 0x1]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, 0x1]

================================

Block 0xcb4
[0xcb4:0xcc2]
---
Predecessors: [0x4de, 0x6c6]
Successors: [0xdc6]
---
0xcb4 JUMPDEST
0xcb5 PUSH1 0x0
0xcb7 PUSH2 0xcc3
0xcba DUP5
0xcbb DUP5
0xcbc DUP5
0xcbd MLOAD
0xcbe DUP6
0xcbf PUSH2 0xdc6
0xcc2 JUMP
---
0xcb4: JUMPDEST 
0xcb5: V716 = 0x0
0xcb7: V717 = 0xcc3
0xcbd: V718 = M[S0]
0xcbf: V719 = 0xdc6
0xcc2: JUMP 0xdc6
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, S4, {0x532, 0x71b}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0xcc3, S2, S1, V718, S0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S8, S7, S6, S5, S4, {0x532, 0x71b}, S2, S1, S0, 0x0, 0xcc3, S2, S1, V718, S0]

================================

Block 0xcc3
[0xcc3:0xccb]
---
Predecessors: [0xdc6]
Successors: [0x532, 0x71b]
---
0xcc3 JUMPDEST
0xcc4 SWAP1
0xcc5 POP
0xcc6 SWAP4
0xcc7 SWAP3
0xcc8 POP
0xcc9 POP
0xcca POP
0xccb JUMP
---
0xcc3: JUMPDEST 
0xccb: JUMP {0x532, 0x71b}
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, {0x532, 0x71b}, S4, S3, S2, 0x0, V769]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S10, S9, S8, S7, S6, V769]

================================

Block 0xccc
[0xccc:0xd03]
---
Predecessors: [0xa60]
Successors: [0xd04, 0xd08]
---
0xccc JUMPDEST
0xccd PUSH1 0x0
0xccf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce4 AND
0xce5 DUP2
0xce6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfb AND
0xcfc EQ
0xcfd ISZERO
0xcfe ISZERO
0xcff ISZERO
0xd00 PUSH2 0xd08
0xd03 JUMPI
---
0xccc: JUMPDEST 
0xccd: V720 = 0x0
0xccf: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xce4: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xce6: V723 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfb: V724 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0xcfc: V725 = EQ V724 0x0
0xcfd: V726 = ISZERO V725
0xcfe: V727 = ISZERO V726
0xcff: V728 = ISZERO V727
0xd00: V729 = 0xd08
0xd03: JUMPI 0xd08 V728
---
Entry stack: [V11, 0x285, V153, 0xa69, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x285, V153, 0xa69, V153]

================================

Block 0xd04
[0xd04:0xd07]
---
Predecessors: [0xccc]
Successors: []
---
0xd04 PUSH1 0x0
0xd06 DUP1
0xd07 REVERT
---
0xd04: V730 = 0x0
0xd07: REVERT 0x0 0x0
---
Entry stack: [V11, 0x285, V153, 0xa69, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x285, V153, 0xa69, V153]

================================

Block 0xd08
[0xd08:0xdc5]
---
Predecessors: [0xccc]
Successors: [0xa69]
---
0xd08 JUMPDEST
0xd09 DUP1
0xd0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1f AND
0xd20 PUSH1 0x0
0xd22 DUP1
0xd23 SWAP1
0xd24 SLOAD
0xd25 SWAP1
0xd26 PUSH2 0x100
0xd29 EXP
0xd2a SWAP1
0xd2b DIV
0xd2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd41 AND
0xd42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd57 AND
0xd58 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xd79 PUSH1 0x40
0xd7b MLOAD
0xd7c PUSH1 0x40
0xd7e MLOAD
0xd7f DUP1
0xd80 SWAP2
0xd81 SUB
0xd82 SWAP1
0xd83 LOG3
0xd84 DUP1
0xd85 PUSH1 0x0
0xd87 DUP1
0xd88 PUSH2 0x100
0xd8b EXP
0xd8c DUP2
0xd8d SLOAD
0xd8e DUP2
0xd8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda4 MUL
0xda5 NOT
0xda6 AND
0xda7 SWAP1
0xda8 DUP4
0xda9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdbe AND
0xdbf MUL
0xdc0 OR
0xdc1 SWAP1
0xdc2 SSTORE
0xdc3 POP
0xdc4 POP
0xdc5 JUMP
---
0xd08: JUMPDEST 
0xd0a: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1f: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0xd20: V733 = 0x0
0xd24: V734 = S[0x0]
0xd26: V735 = 0x100
0xd29: V736 = EXP 0x100 0x0
0xd2b: V737 = DIV V734 0x1
0xd2c: V738 = 0xffffffffffffffffffffffffffffffffffffffff
0xd41: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V737
0xd42: V740 = 0xffffffffffffffffffffffffffffffffffffffff
0xd57: V741 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0xd58: V742 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xd79: V743 = 0x40
0xd7b: V744 = M[0x40]
0xd7c: V745 = 0x40
0xd7e: V746 = M[0x40]
0xd81: V747 = SUB V744 V746
0xd83: LOG V746 V747 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V741 V732
0xd85: V748 = 0x0
0xd88: V749 = 0x100
0xd8b: V750 = EXP 0x100 0x0
0xd8d: V751 = S[0x0]
0xd8f: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xda4: V753 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xda5: V754 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xda6: V755 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V751
0xda9: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xdbe: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0xdbf: V758 = MUL V757 0x1
0xdc0: V759 = OR V758 V755
0xdc2: S[0x0] = V759
0xdc5: JUMP 0xa69
---
Entry stack: [V11, 0x285, V153, 0xa69, V153]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x285, V153]

================================

Block 0xdc6
[0xdc6:0xdec]
---
Predecessors: [0xcb4]
Successors: [0xcc3]
---
0xdc6 JUMPDEST
0xdc7 PUSH1 0x0
0xdc9 DUP1
0xdca PUSH1 0x40
0xdcc MLOAD
0xdcd PUSH1 0x20
0xdcf DUP5
0xdd0 ADD
0xdd1 PUSH1 0x0
0xdd3 DUP3
0xdd4 DUP8
0xdd5 DUP4
0xdd6 DUP11
0xdd7 DUP13
0xdd8 PUSH2 0x8796
0xddb GAS
0xddc SUB
0xddd CALL
0xdde SWAP3
0xddf POP
0xde0 POP
0xde1 POP
0xde2 DUP1
0xde3 SWAP2
0xde4 POP
0xde5 POP
0xde6 SWAP5
0xde7 SWAP4
0xde8 POP
0xde9 POP
0xdea POP
0xdeb POP
0xdec JUMP
---
0xdc6: JUMPDEST 
0xdc7: V760 = 0x0
0xdca: V761 = 0x40
0xdcc: V762 = M[0x40]
0xdcd: V763 = 0x20
0xdd0: V764 = ADD S0 0x20
0xdd1: V765 = 0x0
0xdd8: V766 = 0x8796
0xddb: V767 = GAS
0xddc: V768 = SUB V767 0x8796
0xddd: V769 = CALL V768 S3 S2 V764 V718 V762 0x0
0xdec: JUMP 0xcc3
---
Entry stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x532, 0x71b}, S8, S7, S6, 0x0, 0xcc3, S3, S2, V718, S0]
Stack pops: 5
Stack additions: [V769]
Exit stack: [V11, 0x17d, V77, 0x24, V84, S14, S13, S12, S11, S10, {0x532, 0x71b}, S8, S7, S6, 0x0, V769]

================================

Block 0xded
[0xded:0xe18]
---
Predecessors: []
Successors: []
---
0xded STOP
0xdee LOG1
0xdef PUSH6 0x627a7a723058
0xdf6 SHA3
0xdf7 MISSING 0xe0
0xdf8 MISSING 0x4e
0xdf9 MISSING 0x23
0xdfa SWAP6
0xdfb MISSING 0xf
0xdfc DIFFICULTY
0xdfd PUSH5 0x293f7103f4
0xe03 SHA3
0xe04 PUSH17 0xb75a2a1c69e19b46b2d76858aede4ab898
0xe16 MISSING 0xaf
0xe17 STOP
0xe18 MISSING 0x29
---
0xded: STOP 
0xdee: LOG S0 S1 S2
0xdef: V770 = 0x627a7a723058
0xdf6: V771 = SHA3 0x627a7a723058 S3
0xdf7: MISSING 0xe0
0xdf8: MISSING 0x4e
0xdf9: MISSING 0x23
0xdfb: MISSING 0xf
0xdfc: V772 = DIFFICULTY
0xdfd: V773 = 0x293f7103f4
0xe03: V774 = SHA3 0x293f7103f4 V772
0xe04: V775 = 0xb75a2a1c69e19b46b2d76858aede4ab898
0xe16: MISSING 0xaf
0xe17: STOP 
0xe18: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V771, S6, S1, S2, S3, S4, S5, S0, 0xb75a2a1c69e19b46b2d76858aede4ab898, V774]
Exit stack: []

================================

Function 0:
Public function signature: 0x82c6e64
Entry block: 0x85
Exit block: 0x8b3
Body: 0x85, 0x8d, 0x91, 0xd2, 0x17d, 0x287, 0x2e0, 0x2e4, 0x3a1, 0x3a5, 0x3b0, 0x3b9, 0x3cb, 0x3cf, 0x3e6, 0x532, 0x539, 0x5a6, 0x63d, 0x641, 0x64c, 0x655, 0x667, 0x66b, 0x690, 0x691, 0x6b3, 0x6c5, 0x6c6, 0x71b, 0x722, 0x78f, 0x7e3, 0x7ec, 0x889, 0x88d, 0x898, 0x8a1, 0x8b3, 0x8b7, 0x8ce, 0xa6c, 0xa77, 0xa7f, 0xab5, 0xaf1, 0xafa, 0xb00, 0xb07, 0xba5, 0xba9, 0xbb4, 0xbbd, 0xbcf, 0xbd3, 0xbea, 0xc89, 0xc8d, 0xc98, 0xca1, 0xca6, 0xca7, 0xcac, 0xcb4, 0xcc3, 0xdc6

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xec
Exit block: 0x101
Body: 0xec, 0xf4, 0xf8, 0x101, 0x3ee, 0x445, 0x449, 0x4be, 0x4c7

Function 2:
Public function signature: 0x565d10e8
Entry block: 0x103
Exit block: 0xbcf
Body: 0xd2, 0x103, 0x17d, 0x3e6, 0x4ca, 0x4dd, 0x4de, 0x532, 0x539, 0x5a6, 0x63d, 0x641, 0x64c, 0x655, 0x667, 0x66b, 0x690, 0x691, 0x6b3, 0x6c5, 0x6c6, 0x71b, 0x722, 0x78f, 0x7e3, 0x7ec, 0x889, 0x88d, 0x898, 0x8a1, 0x8b3, 0x8b7, 0x8ce, 0xa6c, 0xa77, 0xa7f, 0xab5, 0xaf1, 0xafa, 0xb00, 0xb07, 0xba5, 0xba9, 0xbb4, 0xbbd, 0xbcf, 0xbd3, 0xbea, 0xc89, 0xc8d, 0xc98, 0xca1, 0xca6, 0xca7, 0xcac, 0xcb4, 0xcc3, 0xdc6

Function 3:
Public function signature: 0x715018a6
Entry block: 0x17f
Exit block: 0x194
Body: 0x17f, 0x187, 0x18b, 0x194, 0x8d9, 0x930, 0x934

Function 4:
Public function signature: 0x8322fff2
Entry block: 0x196
Exit block: 0x1ab
Body: 0x196, 0x19e, 0x1a2, 0x1ab, 0x9db

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x1ed
Exit block: 0x202
Body: 0x1ed, 0x1f5, 0x1f9, 0x202, 0x9e0

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x244
Exit block: 0x285
Body: 0x244, 0x24c, 0x250, 0x285, 0xa05, 0xa5c, 0xa60, 0xa69, 0xccc, 0xd04, 0xd08

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

