Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x44]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x293f0516
0x2e EQ
0x2f PUSH2 0x44
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x293f0516
0x2e: V7 = EQ 0x293f0516 V5
0x2f: V8 = 0x44
0x32: JUMPI 0x44 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x5c]
---
0x33 DUP1
0x34 PUSH4 0xe4fc6b6d
0x39 EQ
0x3a PUSH2 0x5c
0x3d JUMPI
---
0x34: V9 = 0xe4fc6b6d
0x39: V10 = EQ 0xe4fc6b6d V5
0x3a: V11 = 0x5c
0x3d: JUMPI 0x5c V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x41]
---
Predecessors: [0x33]
Successors: [0x42]
---
0x3e PUSH2 0x42
0x41 JUMP
---
0x3e: V12 = 0x42
0x41: JUMP 0x42
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x42
[0x42:0x43]
---
Predecessors: [0x3e]
Successors: []
---
0x42 JUMPDEST
0x43 STOP
---
0x42: JUMPDEST 
0x43: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x44
[0x44:0x59]
---
Predecessors: [0x0]
Successors: [0x1ea]
---
0x44 JUMPDEST
0x45 PUSH2 0x5a
0x48 PUSH1 0x4
0x4a DUP1
0x4b DUP1
0x4c CALLDATALOAD
0x4d SWAP1
0x4e PUSH1 0x20
0x50 ADD
0x51 SWAP1
0x52 SWAP2
0x53 SWAP1
0x54 POP
0x55 POP
0x56 PUSH2 0x1ea
0x59 JUMP
---
0x44: JUMPDEST 
0x45: V13 = 0x5a
0x48: V14 = 0x4
0x4c: V15 = CALLDATALOAD 0x4
0x4e: V16 = 0x20
0x50: V17 = ADD 0x20 0x4
0x56: V18 = 0x1ea
0x59: JUMP 0x1ea
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x5a, V15]
Exit stack: [V5, 0x5a, V15]

================================

Block 0x5a
[0x5a:0x5b]
---
Predecessors: [0x24c]
Successors: []
---
0x5a JUMPDEST
0x5b STOP
---
0x5a: JUMPDEST 
0x5b: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5c
[0x5c:0x68]
---
Predecessors: [0x33]
Successors: [0x6b]
---
0x5c JUMPDEST
0x5d PUSH2 0x69
0x60 PUSH1 0x4
0x62 DUP1
0x63 POP
0x64 POP
0x65 PUSH2 0x6b
0x68 JUMP
---
0x5c: JUMPDEST 
0x5d: V19 = 0x69
0x60: V20 = 0x4
0x65: V21 = 0x6b
0x68: JUMP 0x6b
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x69]
Exit stack: [V5, 0x69]

================================

Block 0x69
[0x69:0x6a]
---
Predecessors: [0x1e1]
Successors: []
---
0x69 JUMPDEST
0x6a STOP
---
0x69: JUMPDEST 
0x6a: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x6b
[0x6b:0x10f]
---
Predecessors: [0x5c]
Successors: [0x110]
---
0x6b JUMPDEST
0x6c PUSH1 0x0
0x6e PUSH1 0x0
0x70 PUSH1 0x0
0x72 PUSH1 0x0
0x74 PUSH1 0x0
0x76 PUSH1 0x0
0x78 PUSH1 0x0
0x7a PUSH1 0x0
0x7c PUSH1 0x0
0x7e POP
0x7f SLOAD
0x80 TIMESTAMP
0x81 SUB
0x82 PUSH1 0x1
0x84 PUSH1 0x0
0x86 POP
0x87 SLOAD
0x88 MUL
0x89 SWAP7
0x8a POP
0x8b PUSH1 0x2
0x8d PUSH1 0x0
0x8f SWAP1
0x90 SLOAD
0x91 SWAP1
0x92 PUSH2 0x100
0x95 EXP
0x96 SWAP1
0x97 DIV
0x98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad AND
0xae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3 AND
0xc4 PUSH1 0x0
0xc6 DUP9
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb SWAP1
0xcc POP
0xcd PUSH1 0x0
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 DUP4
0xd4 SUB
0xd5 DUP2
0xd6 DUP6
0xd7 DUP9
0xd8 DUP9
0xd9 CALL
0xda SWAP4
0xdb POP
0xdc POP
0xdd POP
0xde POP
0xdf POP
0xe0 TIMESTAMP
0xe1 PUSH1 0x0
0xe3 PUSH1 0x0
0xe5 POP
0xe6 DUP2
0xe7 SWAP1
0xe8 SSTORE
0xe9 POP
0xea PUSH1 0x0
0xec SWAP6
0xed POP
0xee PUSH1 0x0
0xf0 SWAP5
0xf1 POP
0xf2 ADDRESS
0xf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108 AND
0x109 BALANCE
0x10a SWAP4
0x10b POP
0x10c PUSH1 0x0
0x10e SWAP3
0x10f POP
---
0x6b: JUMPDEST 
0x6c: V22 = 0x0
0x6e: V23 = 0x0
0x70: V24 = 0x0
0x72: V25 = 0x0
0x74: V26 = 0x0
0x76: V27 = 0x0
0x78: V28 = 0x0
0x7a: V29 = 0x0
0x7c: V30 = 0x0
0x7f: V31 = S[0x0]
0x80: V32 = TIMESTAMP
0x81: V33 = SUB V32 V31
0x82: V34 = 0x1
0x84: V35 = 0x0
0x87: V36 = S[0x1]
0x88: V37 = MUL V36 V33
0x8b: V38 = 0x2
0x8d: V39 = 0x0
0x90: V40 = S[0x2]
0x92: V41 = 0x100
0x95: V42 = EXP 0x100 0x0
0x97: V43 = DIV V40 0x1
0x98: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xad: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xae: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xc4: V48 = 0x0
0xc7: V49 = 0x40
0xc9: V50 = M[0x40]
0xcd: V51 = 0x0
0xcf: V52 = 0x40
0xd1: V53 = M[0x40]
0xd4: V54 = SUB V50 V53
0xd9: V55 = CALL 0x0 V47 V37 V53 V54 V53 0x0
0xe0: V56 = TIMESTAMP
0xe1: V57 = 0x0
0xe3: V58 = 0x0
0xe8: S[0x0] = V56
0xea: V59 = 0x0
0xee: V60 = 0x0
0xf2: V61 = ADDRESS
0xf3: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x108: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x109: V64 = BALANCE V63
0x10c: V65 = 0x0
---
Entry stack: [V5, 0x69]
Stack pops: 0
Stack additions: [V37, 0x0, 0x0, V64, 0x0, 0x0, 0x0]
Exit stack: [V5, 0x69, V37, 0x0, 0x0, V64, 0x0, 0x0, 0x0]

================================

Block 0x110
[0x110:0x123]
---
Predecessors: [0x6b, 0x1d3]
Successors: [0x124, 0x1e0]
---
0x110 JUMPDEST
0x111 PUSH1 0x3
0x113 PUSH1 0x0
0x115 POP
0x116 DUP1
0x117 SLOAD
0x118 SWAP1
0x119 POP
0x11a DUP4
0x11b PUSH1 0xff
0x11d AND
0x11e LT
0x11f ISZERO
0x120 PUSH2 0x1e0
0x123 JUMPI
---
0x110: JUMPDEST 
0x111: V66 = 0x3
0x113: V67 = 0x0
0x117: V68 = S[0x3]
0x11b: V69 = 0xff
0x11d: V70 = AND 0xff S2
0x11e: V71 = LT V70 V68
0x11f: V72 = ISZERO V71
0x120: V73 = 0x1e0
0x123: JUMPI 0x1e0 V72
---
Entry stack: [V5, 0x69, V37, S5, S4, V64, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V5, 0x69, V37, S5, S4, V64, S2, S1, S0]

================================

Block 0x124
[0x124:0x135]
---
Predecessors: [0x110]
Successors: [0x136]
---
0x124 PUSH1 0x4
0x126 PUSH1 0x0
0x128 POP
0x129 DUP4
0x12a PUSH1 0xff
0x12c AND
0x12d DUP2
0x12e SLOAD
0x12f DUP2
0x130 LT
0x131 ISZERO
0x132 PUSH2 0x2
0x135 JUMPI
---
0x124: V74 = 0x4
0x126: V75 = 0x0
0x12a: V76 = 0xff
0x12c: V77 = AND 0xff S2
0x12e: V78 = S[0x4]
0x130: V79 = LT V77 V78
0x131: V80 = ISZERO V79
0x132: V81 = 0x2
0x135: THROWI V80
---
Entry stack: [V5, 0x69, V37, S5, S4, V64, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x4, V77]
Exit stack: [V5, 0x69, V37, S5, S4, V64, S2, S1, S0, 0x4, V77]

================================

Block 0x136
[0x136:0x142]
---
Predecessors: [0x124]
Successors: [0x143]
---
0x136 SWAP1
0x137 PUSH1 0x0
0x139 MSTORE
0x13a PUSH1 0x20
0x13c PUSH1 0x0
0x13e SHA3
0x13f SWAP1
0x140 ADD
0x141 PUSH1 0x0
---
0x137: V82 = 0x0
0x139: M[0x0] = 0x4
0x13a: V83 = 0x20
0x13c: V84 = 0x0
0x13e: V85 = SHA3 0x0 0x20
0x140: V86 = ADD V77 V85
0x141: V87 = 0x0
---
Entry stack: [V5, 0x69, V37, S7, S6, V64, S4, S3, S2, 0x4, V77]
Stack pops: 2
Stack additions: [V86, 0x0]
Exit stack: [V5, 0x69, V37, S7, S6, V64, S4, S3, S2, V86, 0x0]

================================

Block 0x143
[0x143:0x167]
---
Predecessors: [0x136]
Successors: [0x168]
---
0x143 JUMPDEST
0x144 POP
0x145 SLOAD
0x146 DUP7
0x147 ADD
0x148 SWAP2
0x149 POP
0x14a PUSH1 0x5
0x14c PUSH1 0x0
0x14e POP
0x14f SLOAD
0x150 DUP3
0x151 DUP6
0x152 MUL
0x153 DIV
0x154 SWAP1
0x155 POP
0x156 PUSH1 0x3
0x158 PUSH1 0x0
0x15a POP
0x15b DUP4
0x15c PUSH1 0xff
0x15e AND
0x15f DUP2
0x160 SLOAD
0x161 DUP2
0x162 LT
0x163 ISZERO
0x164 PUSH2 0x2
0x167 JUMPI
---
0x143: JUMPDEST 
0x145: V88 = S[V86]
0x147: V89 = ADD S7 V88
0x14a: V90 = 0x5
0x14c: V91 = 0x0
0x14f: V92 = S[0x5]
0x152: V93 = MUL V64 V89
0x153: V94 = DIV V93 V92
0x156: V95 = 0x3
0x158: V96 = 0x0
0x15c: V97 = 0xff
0x15e: V98 = AND 0xff S4
0x160: V99 = S[0x3]
0x162: V100 = LT V98 V99
0x163: V101 = ISZERO V100
0x164: V102 = 0x2
0x167: THROWI V101
---
Entry stack: [V5, 0x69, V37, S7, S6, V64, S4, S3, S2, V86, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, V89, V94, 0x3, V98]
Exit stack: [V5, 0x69, V37, S7, S6, V64, S4, V89, V94, 0x3, V98]

================================

Block 0x168
[0x168:0x174]
---
Predecessors: [0x143]
Successors: [0x175]
---
0x168 SWAP1
0x169 PUSH1 0x0
0x16b MSTORE
0x16c PUSH1 0x20
0x16e PUSH1 0x0
0x170 SHA3
0x171 SWAP1
0x172 ADD
0x173 PUSH1 0x0
---
0x169: V103 = 0x0
0x16b: M[0x0] = 0x3
0x16c: V104 = 0x20
0x16e: V105 = 0x0
0x170: V106 = SHA3 0x0 0x20
0x172: V107 = ADD V98 V106
0x173: V108 = 0x0
---
Entry stack: [V5, 0x69, V37, S7, S6, V64, S4, V89, V94, 0x3, V98]
Stack pops: 2
Stack additions: [V107, 0x0]
Exit stack: [V5, 0x69, V37, S7, S6, V64, S4, V89, V94, V107, 0x0]

================================

Block 0x175
[0x175:0x1d2]
---
Predecessors: [0x168]
Successors: [0x1d3]
---
0x175 JUMPDEST
0x176 SWAP1
0x177 SLOAD
0x178 SWAP1
0x179 PUSH2 0x100
0x17c EXP
0x17d SWAP1
0x17e DIV
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 AND
0x195 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1aa AND
0x1ab PUSH1 0x0
0x1ad DUP7
0x1ae DUP4
0x1af SUB
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP1
0x1b5 POP
0x1b6 PUSH1 0x0
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb DUP1
0x1bc DUP4
0x1bd SUB
0x1be DUP2
0x1bf DUP6
0x1c0 DUP9
0x1c1 DUP9
0x1c2 CALL
0x1c3 SWAP4
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 DUP2
0x1ca SWAP6
0x1cb POP
0x1cc DUP6
0x1cd POP
0x1ce DUP1
0x1cf SWAP5
0x1d0 POP
0x1d1 DUP5
0x1d2 POP
---
0x175: JUMPDEST 
0x177: V109 = S[V107]
0x179: V110 = 0x100
0x17c: V111 = EXP 0x100 0x0
0x17e: V112 = DIV V109 0x1
0x17f: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x195: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1ab: V117 = 0x0
0x1af: V118 = SUB V94 S6
0x1b0: V119 = 0x40
0x1b2: V120 = M[0x40]
0x1b6: V121 = 0x0
0x1b8: V122 = 0x40
0x1ba: V123 = M[0x40]
0x1bd: V124 = SUB V120 V123
0x1c2: V125 = CALL 0x0 V116 V118 V123 V124 V123 0x0
---
Entry stack: [V5, 0x69, V37, S7, S6, V64, S4, V89, V94, V107, 0x0]
Stack pops: 8
Stack additions: [S3, S2, S5, S4, S3, S2]
Exit stack: [V5, 0x69, V37, V89, V94, V64, S4, V89, V94]

================================

Block 0x1d3
[0x1d3:0x1df]
---
Predecessors: [0x175]
Successors: [0x110]
---
0x1d3 JUMPDEST
0x1d4 DUP3
0x1d5 PUSH1 0x1
0x1d7 ADD
0x1d8 SWAP3
0x1d9 POP
0x1da DUP3
0x1db POP
0x1dc PUSH2 0x110
0x1df JUMP
---
0x1d3: JUMPDEST 
0x1d5: V126 = 0x1
0x1d7: V127 = ADD 0x1 S2
0x1dc: V128 = 0x110
0x1df: JUMP 0x110
---
Entry stack: [V5, 0x69, V37, V89, V94, V64, S2, V89, V94]
Stack pops: 3
Stack additions: [V127, S1, S0]
Exit stack: [V5, 0x69, V37, V89, V94, V64, V127, V89, V94]

================================

Block 0x1e0
[0x1e0:0x1e0]
---
Predecessors: [0x110]
Successors: [0x1e1]
---
0x1e0 JUMPDEST
---
0x1e0: JUMPDEST 
---
Entry stack: [V5, 0x69, V37, S5, S4, V64, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x69, V37, S5, S4, V64, S2, S1, S0]

================================

Block 0x1e1
[0x1e1:0x1e9]
---
Predecessors: [0x1e0]
Successors: [0x69]
---
0x1e1 JUMPDEST
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 JUMP
---
0x1e1: JUMPDEST 
0x1e9: JUMP 0x69
---
Entry stack: [V5, 0x69, V37, S5, S4, V64, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V5]

================================

Block 0x1ea
[0x1ea:0x240]
---
Predecessors: [0x44]
Successors: [0x241, 0x24b]
---
0x1ea JUMPDEST
0x1eb PUSH1 0x2
0x1ed PUSH1 0x0
0x1ef SWAP1
0x1f0 SLOAD
0x1f1 SWAP1
0x1f2 PUSH2 0x100
0x1f5 EXP
0x1f6 SWAP1
0x1f7 DIV
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x223 AND
0x224 CALLER
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a AND
0x23b EQ
0x23c ISZERO
0x23d PUSH2 0x24b
0x240 JUMPI
---
0x1ea: JUMPDEST 
0x1eb: V129 = 0x2
0x1ed: V130 = 0x0
0x1f0: V131 = S[0x2]
0x1f2: V132 = 0x100
0x1f5: V133 = EXP 0x100 0x0
0x1f7: V134 = DIV V131 0x1
0x1f8: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x20e: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x223: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x224: V139 = CALLER
0x225: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x23b: V142 = EQ V141 V138
0x23c: V143 = ISZERO V142
0x23d: V144 = 0x24b
0x240: JUMPI 0x24b V143
---
Entry stack: [V5, 0x5a, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x5a, V15]

================================

Block 0x241
[0x241:0x24a]
---
Predecessors: [0x1ea]
Successors: [0x24b]
---
0x241 DUP1
0x242 PUSH1 0x1
0x244 PUSH1 0x0
0x246 POP
0x247 DUP2
0x248 SWAP1
0x249 SSTORE
0x24a POP
---
0x242: V145 = 0x1
0x244: V146 = 0x0
0x249: S[0x1] = V15
---
Entry stack: [V5, 0x5a, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5, 0x5a, V15]

================================

Block 0x24b
[0x24b:0x24b]
---
Predecessors: [0x1ea, 0x241]
Successors: [0x24c]
---
0x24b JUMPDEST
---
0x24b: JUMPDEST 
---
Entry stack: [V5, 0x5a, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x5a, V15]

================================

Block 0x24c
[0x24c:0x24e]
---
Predecessors: [0x24b]
Successors: [0x5a]
---
0x24c JUMPDEST
0x24d POP
0x24e JUMP
---
0x24c: JUMPDEST 
0x24e: JUMP 0x5a
---
Entry stack: [V5, 0x5a, V15]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0x293f0516
Entry block: 0x44
Exit block: 0x5a
Body: 0x44, 0x5a, 0x1ea, 0x241, 0x24b, 0x24c

Function 1:
Public function signature: 0xe4fc6b6d
Entry block: 0x5c
Exit block: 0x69
Body: 0x5c, 0x69, 0x6b, 0x110, 0x124, 0x136, 0x143, 0x168, 0x175, 0x1d3, 0x1e0, 0x1e1

Function 2:
Public fallback function
Entry block: 0x3e
Exit block: 0x42
Body: 0x3e, 0x42

