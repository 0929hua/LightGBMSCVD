Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x69]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x69
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x69
0x19: JUMPI 0x69 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x47]
---
Predecessors: [0x10]
Successors: [0x48, 0x6e]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b SWAP1
0x3c DIV
0x3d DUP1
0x3e PUSH4 0x38af3eed
0x43 EQ
0x44 PUSH2 0x6e
0x47 JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x3c: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x3e: V14 = 0x38af3eed
0x43: V15 = EQ 0x38af3eed V13
0x44: V16 = 0x6e
0x47: JUMPI 0x6e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x1a]
Successors: [0x53, 0xb8]
---
0x48 DUP1
0x49 PUSH4 0x86d1a69f
0x4e EQ
0x4f PUSH2 0xb8
0x52 JUMPI
---
0x49: V17 = 0x86d1a69f
0x4e: V18 = EQ 0x86d1a69f V13
0x4f: V19 = 0xb8
0x52: JUMPI 0xb8 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0xc2]
---
0x53 DUP1
0x54 PUSH4 0xb91d4001
0x59 EQ
0x5a PUSH2 0xc2
0x5d JUMPI
---
0x54: V20 = 0xb91d4001
0x59: V21 = EQ 0xb91d4001 V13
0x5a: V22 = 0xc2
0x5d: JUMPI 0xc2 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0xe0]
---
0x5e DUP1
0x5f PUSH4 0xfc0c546a
0x64 EQ
0x65 PUSH2 0xe0
0x68 JUMPI
---
0x5f: V23 = 0xfc0c546a
0x64: V24 = EQ 0xfc0c546a V13
0x65: V25 = 0xe0
0x68: JUMPI 0xe0 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x6d]
---
Predecessors: [0x10, 0x5e]
Successors: []
---
0x69 JUMPDEST
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x69: JUMPDEST 
0x6a: V26 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0x1a]
Successors: [0x12a]
---
0x6e JUMPDEST
0x6f PUSH2 0x76
0x72 PUSH2 0x12a
0x75 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x76
0x72: V28 = 0x12a
0x75: JUMP 0x12a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x76]
Exit stack: [V13, 0x76]

================================

Block 0x76
[0x76:0xb7]
---
Predecessors: [0x12a]
Successors: []
---
0x76 JUMPDEST
0x77 PUSH1 0x40
0x79 MLOAD
0x7a DUP1
0x7b DUP3
0x7c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91 AND
0x92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7 AND
0xa8 DUP2
0xa9 MSTORE
0xaa PUSH1 0x20
0xac ADD
0xad SWAP2
0xae POP
0xaf POP
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 SWAP2
0xb5 SUB
0xb6 SWAP1
0xb7 RETURN
---
0x76: JUMPDEST 
0x77: V29 = 0x40
0x79: V30 = M[0x40]
0x7c: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x91: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x92: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa9: M[V30] = V34
0xaa: V35 = 0x20
0xac: V36 = ADD 0x20 V30
0xb0: V37 = 0x40
0xb2: V38 = M[0x40]
0xb5: V39 = SUB V36 V38
0xb7: RETURN V38 V39
---
Entry stack: [V13, V72]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xb8
[0xb8:0xbf]
---
Predecessors: [0x48]
Successors: [0x154]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xc0
0xbc PUSH2 0x154
0xbf JUMP
---
0xb8: JUMPDEST 
0xb9: V40 = 0xc0
0xbc: V41 = 0x154
0xbf: JUMP 0x154
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc0]
Exit stack: [V13, 0xc0]

================================

Block 0xc0
[0xc0:0xc1]
---
Predecessors: [0x2db]
Successors: []
---
0xc0 JUMPDEST
0xc1 STOP
---
0xc0: JUMPDEST 
0xc1: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc9]
---
Predecessors: [0x53]
Successors: [0x2de]
---
0xc2 JUMPDEST
0xc3 PUSH2 0xca
0xc6 PUSH2 0x2de
0xc9 JUMP
---
0xc2: JUMPDEST 
0xc3: V42 = 0xca
0xc6: V43 = 0x2de
0xc9: JUMP 0x2de
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xca]
Exit stack: [V13, 0xca]

================================

Block 0xca
[0xca:0xdf]
---
Predecessors: [0x2de]
Successors: []
---
0xca JUMPDEST
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf DUP3
0xd0 DUP2
0xd1 MSTORE
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP2
0xd6 POP
0xd7 POP
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc SWAP2
0xdd SUB
0xde SWAP1
0xdf RETURN
---
0xca: JUMPDEST 
0xcb: V44 = 0x40
0xcd: V45 = M[0x40]
0xd1: M[V45] = V167
0xd2: V46 = 0x20
0xd4: V47 = ADD 0x20 V45
0xd8: V48 = 0x40
0xda: V49 = M[0x40]
0xdd: V50 = SUB V47 V49
0xdf: RETURN V49 V50
---
Entry stack: [V13, V167]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0x5e]
Successors: [0x2e8]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xe8
0xe4 PUSH2 0x2e8
0xe7 JUMP
---
0xe0: JUMPDEST 
0xe1: V51 = 0xe8
0xe4: V52 = 0x2e8
0xe7: JUMP 0x2e8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V13, 0xe8]

================================

Block 0xe8
[0xe8:0x129]
---
Predecessors: [0x2e8]
Successors: []
---
0xe8 JUMPDEST
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed DUP3
0xee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103 AND
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP2
0x120 POP
0x121 POP
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 SWAP2
0x127 SUB
0x128 SWAP1
0x129 RETURN
---
0xe8: JUMPDEST 
0xe9: V53 = 0x40
0xeb: V54 = M[0x40]
0xee: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x103: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x104: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x11b: M[V54] = V58
0x11c: V59 = 0x20
0x11e: V60 = ADD 0x20 V54
0x122: V61 = 0x40
0x124: V62 = M[0x40]
0x127: V63 = SUB V60 V62
0x129: RETURN V62 V63
---
Entry stack: [V13, V175]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x12a
[0x12a:0x153]
---
Predecessors: [0x6e]
Successors: [0x76]
---
0x12a JUMPDEST
0x12b PUSH1 0x0
0x12d PUSH1 0x1
0x12f PUSH1 0x0
0x131 SWAP1
0x132 SLOAD
0x133 SWAP1
0x134 PUSH2 0x100
0x137 EXP
0x138 SWAP1
0x139 DIV
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 SWAP1
0x151 POP
0x152 SWAP1
0x153 JUMP
---
0x12a: JUMPDEST 
0x12b: V64 = 0x0
0x12d: V65 = 0x1
0x12f: V66 = 0x0
0x132: V67 = S[0x1]
0x134: V68 = 0x100
0x137: V69 = EXP 0x100 0x0
0x139: V70 = DIV V67 0x1
0x13a: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x153: JUMP 0x76
---
Entry stack: [V13, 0x76]
Stack pops: 1
Stack additions: [V72]
Exit stack: [V13, V72]

================================

Block 0x154
[0x154:0x160]
---
Predecessors: [0xb8]
Successors: [0x161, 0x165]
---
0x154 JUMPDEST
0x155 PUSH1 0x2
0x157 SLOAD
0x158 TIMESTAMP
0x159 LT
0x15a ISZERO
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x154: JUMPDEST 
0x155: V73 = 0x2
0x157: V74 = S[0x2]
0x158: V75 = TIMESTAMP
0x159: V76 = LT V75 V74
0x15a: V77 = ISZERO V76
0x15b: V78 = ISZERO V77
0x15c: V79 = ISZERO V78
0x15d: V80 = 0x165
0x160: JUMPI 0x165 V79
---
Entry stack: [V13, 0xc0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x154]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V81 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0]

================================

Block 0x165
[0x165:0x21c]
---
Predecessors: [0x154]
Successors: [0x21d, 0x221]
---
0x165 JUMPDEST
0x166 PUSH1 0x0
0x168 DUP1
0x169 PUSH1 0x0
0x16b SWAP1
0x16c SLOAD
0x16d SWAP1
0x16e PUSH2 0x100
0x171 EXP
0x172 SWAP1
0x173 DIV
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 PUSH4 0x70a08231
0x1a5 ADDRESS
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP3
0x1aa PUSH4 0xffffffff
0x1af AND
0x1b0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1ce MUL
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x4
0x1d3 ADD
0x1d4 DUP1
0x1d5 DUP3
0x1d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1eb AND
0x1ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x201 AND
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 SWAP2
0x208 POP
0x209 POP
0x20a PUSH1 0x20
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 DUP4
0x211 SUB
0x212 DUP2
0x213 DUP7
0x214 DUP1
0x215 EXTCODESIZE
0x216 ISZERO
0x217 DUP1
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x165: JUMPDEST 
0x166: V82 = 0x0
0x169: V83 = 0x0
0x16c: V84 = S[0x0]
0x16e: V85 = 0x100
0x171: V86 = EXP 0x100 0x0
0x173: V87 = DIV V84 0x1
0x174: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x18a: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1a0: V92 = 0x70a08231
0x1a5: V93 = ADDRESS
0x1a6: V94 = 0x40
0x1a8: V95 = M[0x40]
0x1aa: V96 = 0xffffffff
0x1af: V97 = AND 0xffffffff 0x70a08231
0x1b0: V98 = 0x100000000000000000000000000000000000000000000000000000000
0x1ce: V99 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1d0: M[V95] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1d1: V100 = 0x4
0x1d3: V101 = ADD 0x4 V95
0x1d6: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1ec: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x201: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x203: M[V101] = V105
0x204: V106 = 0x20
0x206: V107 = ADD 0x20 V101
0x20a: V108 = 0x20
0x20c: V109 = 0x40
0x20e: V110 = M[0x40]
0x211: V111 = SUB V107 V110
0x215: V112 = EXTCODESIZE V91
0x216: V113 = ISZERO V112
0x218: V114 = ISZERO V113
0x219: V115 = 0x221
0x21c: JUMPI 0x221 V114
---
Entry stack: [V13, 0xc0]
Stack pops: 0
Stack additions: [0x0, V91, 0x70a08231, V107, 0x20, V110, V111, V110, V91, V113]
Exit stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, 0x20, V110, V111, V110, V91, V113]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x165]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V116 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, 0x20, V110, V111, V110, V91, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, 0x20, V110, V111, V110, V91, V113]

================================

Block 0x221
[0x221:0x22b]
---
Predecessors: [0x165]
Successors: [0x22c, 0x235]
---
0x221 JUMPDEST
0x222 POP
0x223 GAS
0x224 STATICCALL
0x225 ISZERO
0x226 DUP1
0x227 ISZERO
0x228 PUSH2 0x235
0x22b JUMPI
---
0x221: JUMPDEST 
0x223: V117 = GAS
0x224: V118 = STATICCALL V117 V91 V110 V111 V110 0x20
0x225: V119 = ISZERO V118
0x227: V120 = ISZERO V119
0x228: V121 = 0x235
0x22b: JUMPI 0x235 V120
---
Entry stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, 0x20, V110, V111, V110, V91, V113]
Stack pops: 6
Stack additions: [V119]
Exit stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, V119]

================================

Block 0x22c
[0x22c:0x234]
---
Predecessors: [0x221]
Successors: []
---
0x22c RETURNDATASIZE
0x22d PUSH1 0x0
0x22f DUP1
0x230 RETURNDATACOPY
0x231 RETURNDATASIZE
0x232 PUSH1 0x0
0x234 REVERT
---
0x22c: V122 = RETURNDATASIZE
0x22d: V123 = 0x0
0x230: RETURNDATACOPY 0x0 0x0 V122
0x231: V124 = RETURNDATASIZE
0x232: V125 = 0x0
0x234: REVERT 0x0 V124
---
Entry stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, V119]

================================

Block 0x235
[0x235:0x246]
---
Predecessors: [0x221]
Successors: [0x247, 0x24b]
---
0x235 JUMPDEST
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a PUSH1 0x40
0x23c MLOAD
0x23d RETURNDATASIZE
0x23e PUSH1 0x20
0x240 DUP2
0x241 LT
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x235: JUMPDEST 
0x23a: V126 = 0x40
0x23c: V127 = M[0x40]
0x23d: V128 = RETURNDATASIZE
0x23e: V129 = 0x20
0x241: V130 = LT V128 0x20
0x242: V131 = ISZERO V130
0x243: V132 = 0x24b
0x246: JUMPI 0x24b V131
---
Entry stack: [V13, 0xc0, 0x0, V91, 0x70a08231, V107, V119]
Stack pops: 4
Stack additions: [V127, V128]
Exit stack: [V13, 0xc0, 0x0, V127, V128]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x235]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V133 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0, 0x0, V127, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, 0x0, V127, V128]

================================

Block 0x24b
[0x24b:0x268]
---
Predecessors: [0x235]
Successors: [0x269, 0x26d]
---
0x24b JUMPDEST
0x24c DUP2
0x24d ADD
0x24e SWAP1
0x24f DUP1
0x250 DUP1
0x251 MLOAD
0x252 SWAP1
0x253 PUSH1 0x20
0x255 ADD
0x256 SWAP1
0x257 SWAP3
0x258 SWAP2
0x259 SWAP1
0x25a POP
0x25b POP
0x25c POP
0x25d SWAP1
0x25e POP
0x25f PUSH1 0x0
0x261 DUP2
0x262 GT
0x263 ISZERO
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x24b: JUMPDEST 
0x24d: V134 = ADD V127 V128
0x251: V135 = M[V127]
0x253: V136 = 0x20
0x255: V137 = ADD 0x20 V127
0x25f: V138 = 0x0
0x262: V139 = GT V135 0x0
0x263: V140 = ISZERO V139
0x264: V141 = ISZERO V140
0x265: V142 = 0x26d
0x268: JUMPI 0x26d V141
---
Entry stack: [V13, 0xc0, 0x0, V127, V128]
Stack pops: 3
Stack additions: [V135]
Exit stack: [V13, 0xc0, V135]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x24b]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V143 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, V135]

================================

Block 0x26d
[0x26d:0x2da]
---
Predecessors: [0x24b]
Successors: [0x311]
---
0x26d JUMPDEST
0x26e PUSH2 0x2db
0x271 PUSH1 0x1
0x273 PUSH1 0x0
0x275 SWAP1
0x276 SLOAD
0x277 SWAP1
0x278 PUSH2 0x100
0x27b EXP
0x27c SWAP1
0x27d DIV
0x27e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x293 AND
0x294 DUP3
0x295 PUSH1 0x0
0x297 DUP1
0x298 SWAP1
0x299 SLOAD
0x29a SWAP1
0x29b PUSH2 0x100
0x29e EXP
0x29f SWAP1
0x2a0 DIV
0x2a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b6 AND
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc AND
0x2cd PUSH2 0x311
0x2d0 SWAP1
0x2d1 SWAP3
0x2d2 SWAP2
0x2d3 SWAP1
0x2d4 PUSH4 0xffffffff
0x2d9 AND
0x2da JUMP
---
0x26d: JUMPDEST 
0x26e: V144 = 0x2db
0x271: V145 = 0x1
0x273: V146 = 0x0
0x276: V147 = S[0x1]
0x278: V148 = 0x100
0x27b: V149 = EXP 0x100 0x0
0x27d: V150 = DIV V147 0x1
0x27e: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x293: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x295: V153 = 0x0
0x299: V154 = S[0x0]
0x29b: V155 = 0x100
0x29e: V156 = EXP 0x100 0x0
0x2a0: V157 = DIV V154 0x1
0x2a1: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2b7: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2cd: V162 = 0x311
0x2d4: V163 = 0xffffffff
0x2d9: V164 = AND 0xffffffff 0x311
0x2da: JUMP 0x311
---
Entry stack: [V13, 0xc0, V135]
Stack pops: 1
Stack additions: [S0, 0x2db, V161, V152, S0]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135]

================================

Block 0x2db
[0x2db:0x2dd]
---
Predecessors: [0x3f9]
Successors: [0xc0]
---
0x2db JUMPDEST
0x2dc POP
0x2dd JUMP
---
0x2db: JUMPDEST 
0x2dd: JUMP 0xc0
---
Entry stack: [V13, 0xc0, V135]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2de
[0x2de:0x2e7]
---
Predecessors: [0xc2]
Successors: [0xca]
---
0x2de JUMPDEST
0x2df PUSH1 0x0
0x2e1 PUSH1 0x2
0x2e3 SLOAD
0x2e4 SWAP1
0x2e5 POP
0x2e6 SWAP1
0x2e7 JUMP
---
0x2de: JUMPDEST 
0x2df: V165 = 0x0
0x2e1: V166 = 0x2
0x2e3: V167 = S[0x2]
0x2e7: JUMP 0xca
---
Entry stack: [V13, 0xca]
Stack pops: 1
Stack additions: [V167]
Exit stack: [V13, V167]

================================

Block 0x2e8
[0x2e8:0x310]
---
Predecessors: [0xe0]
Successors: [0xe8]
---
0x2e8 JUMPDEST
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec PUSH1 0x0
0x2ee SWAP1
0x2ef SLOAD
0x2f0 SWAP1
0x2f1 PUSH2 0x100
0x2f4 EXP
0x2f5 SWAP1
0x2f6 DIV
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d SWAP1
0x30e POP
0x30f SWAP1
0x310 JUMP
---
0x2e8: JUMPDEST 
0x2e9: V168 = 0x0
0x2ec: V169 = 0x0
0x2ef: V170 = S[0x0]
0x2f1: V171 = 0x100
0x2f4: V172 = EXP 0x100 0x0
0x2f6: V173 = DIV V170 0x1
0x2f7: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x310: JUMP 0xe8
---
Entry stack: [V13, 0xe8]
Stack pops: 1
Stack additions: [V175]
Exit stack: [V13, V175]

================================

Block 0x311
[0x311:0x3f8]
---
Predecessors: [0x26d]
Successors: [0x3fe]
---
0x311 JUMPDEST
0x312 PUSH2 0x3f9
0x315 DUP4
0x316 DUP5
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d PUSH4 0xa9059cbb
0x332 SWAP1
0x333 POP
0x334 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x352 MUL
0x353 DUP5
0x354 DUP5
0x355 PUSH1 0x40
0x357 MLOAD
0x358 PUSH1 0x24
0x35a ADD
0x35b DUP1
0x35c DUP4
0x35d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x372 AND
0x373 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x388 AND
0x389 DUP2
0x38a MSTORE
0x38b PUSH1 0x20
0x38d ADD
0x38e DUP3
0x38f DUP2
0x390 MSTORE
0x391 PUSH1 0x20
0x393 ADD
0x394 SWAP3
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH1 0x40
0x39a MLOAD
0x39b PUSH1 0x20
0x39d DUP2
0x39e DUP4
0x39f SUB
0x3a0 SUB
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 SWAP1
0x3a4 PUSH1 0x40
0x3a6 MSTORE
0x3a7 SWAP1
0x3a8 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3c5 NOT
0x3c6 AND
0x3c7 PUSH1 0x20
0x3c9 DUP3
0x3ca ADD
0x3cb DUP1
0x3cc MLOAD
0x3cd PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3ea DUP4
0x3eb DUP2
0x3ec DUP4
0x3ed AND
0x3ee OR
0x3ef DUP4
0x3f0 MSTORE
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 PUSH2 0x3fe
0x3f8 JUMP
---
0x311: JUMPDEST 
0x312: V176 = 0x3f9
0x317: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x32d: V179 = 0xa9059cbb
0x334: V180 = 0x100000000000000000000000000000000000000000000000000000000
0x352: V181 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x355: V182 = 0x40
0x357: V183 = M[0x40]
0x358: V184 = 0x24
0x35a: V185 = ADD 0x24 V183
0x35d: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x372: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x373: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x388: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x38a: M[V185] = V189
0x38b: V190 = 0x20
0x38d: V191 = ADD 0x20 V185
0x390: M[V191] = V135
0x391: V192 = 0x20
0x393: V193 = ADD 0x20 V191
0x398: V194 = 0x40
0x39a: V195 = M[0x40]
0x39b: V196 = 0x20
0x39f: V197 = SUB V193 V195
0x3a0: V198 = SUB V197 0x20
0x3a2: M[V195] = V198
0x3a4: V199 = 0x40
0x3a6: M[0x40] = V193
0x3a8: V200 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3c5: V201 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3c6: V202 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c7: V203 = 0x20
0x3ca: V204 = ADD V195 0x20
0x3cc: V205 = M[V204]
0x3cd: V206 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3ed: V207 = AND V205 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3ee: V208 = OR V207 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3f0: M[V204] = V208
0x3f5: V209 = 0x3fe
0x3f8: JUMP 0x3fe
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3f9, S2, V195]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195]

================================

Block 0x3f9
[0x3f9:0x3fd]
---
Predecessors: [0x52d]
Successors: [0x2db]
---
0x3f9 JUMPDEST
0x3fa POP
0x3fb POP
0x3fc POP
0x3fd JUMP
---
0x3f9: JUMPDEST 
0x3fd: JUMP 0x2db
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0xc0, V135]

================================

Block 0x3fe
[0x3fe:0x41c]
---
Predecessors: [0x311]
Successors: [0x533]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x41d
0x402 DUP3
0x403 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x418 AND
0x419 PUSH2 0x533
0x41c JUMP
---
0x3fe: JUMPDEST 
0x3ff: V210 = 0x41d
0x403: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x418: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x419: V213 = 0x533
0x41c: JUMP 0x533
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195]
Stack pops: 2
Stack additions: [S1, S0, 0x41d, V212]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x41d, V212]

================================

Block 0x41d
[0x41d:0x423]
---
Predecessors: [0x533]
Successors: [0x424, 0x428]
---
0x41d JUMPDEST
0x41e ISZERO
0x41f ISZERO
0x420 PUSH2 0x428
0x423 JUMPI
---
0x41d: JUMPDEST 
0x41e: V214 = ISZERO V309
0x41f: V215 = ISZERO V214
0x420: V216 = 0x428
0x423: JUMPI 0x428 V215
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V309]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195]

================================

Block 0x424
[0x424:0x427]
---
Predecessors: [0x41d]
Successors: []
---
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
---
0x424: V217 = 0x0
0x427: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195]

================================

Block 0x428
[0x428:0x453]
---
Predecessors: [0x41d]
Successors: [0x454]
---
0x428 JUMPDEST
0x429 PUSH1 0x0
0x42b PUSH1 0x60
0x42d DUP4
0x42e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x443 AND
0x444 DUP4
0x445 PUSH1 0x40
0x447 MLOAD
0x448 DUP1
0x449 DUP3
0x44a DUP1
0x44b MLOAD
0x44c SWAP1
0x44d PUSH1 0x20
0x44f ADD
0x450 SWAP1
0x451 DUP1
0x452 DUP4
0x453 DUP4
---
0x428: JUMPDEST 
0x429: V218 = 0x0
0x42b: V219 = 0x60
0x42e: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x445: V222 = 0x40
0x447: V223 = M[0x40]
0x44b: V224 = M[V195]
0x44d: V225 = 0x20
0x44f: V226 = ADD 0x20 V195
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x60, V221, S0, V223, V223, V226, V224, V224, V223, V226]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V221, V195, V223, V223, V226, V224, V224, V223, V226]

================================

Block 0x454
[0x454:0x45e]
---
Predecessors: [0x428, 0x45f]
Successors: [0x45f, 0x479]
---
0x454 JUMPDEST
0x455 PUSH1 0x20
0x457 DUP4
0x458 LT
0x459 ISZERO
0x45a ISZERO
0x45b PUSH2 0x479
0x45e JUMPI
---
0x454: JUMPDEST 
0x455: V227 = 0x20
0x458: V228 = LT S2 0x20
0x459: V229 = ISZERO V228
0x45a: V230 = ISZERO V229
0x45b: V231 = 0x479
0x45e: JUMPI 0x479 V230
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V221, V195, V223, V223, V226, V224, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V221, V195, V223, V223, V226, V224, S2, S1, S0]

================================

Block 0x45f
[0x45f:0x478]
---
Predecessors: [0x454]
Successors: [0x454]
---
0x45f DUP1
0x460 MLOAD
0x461 DUP3
0x462 MSTORE
0x463 PUSH1 0x20
0x465 DUP3
0x466 ADD
0x467 SWAP2
0x468 POP
0x469 PUSH1 0x20
0x46b DUP2
0x46c ADD
0x46d SWAP1
0x46e POP
0x46f PUSH1 0x20
0x471 DUP4
0x472 SUB
0x473 SWAP3
0x474 POP
0x475 PUSH2 0x454
0x478 JUMP
---
0x460: V232 = M[S0]
0x462: M[S1] = V232
0x463: V233 = 0x20
0x466: V234 = ADD S1 0x20
0x469: V235 = 0x20
0x46c: V236 = ADD S0 0x20
0x46f: V237 = 0x20
0x472: V238 = SUB S2 0x20
0x475: V239 = 0x454
0x478: JUMP 0x454
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V221, V195, V223, V223, V226, V224, S2, S1, S0]
Stack pops: 3
Stack additions: [V238, V234, V236]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V221, V195, V223, V223, V226, V224, V238, V234, V236]

================================

Block 0x479
[0x479:0x4b9]
---
Predecessors: [0x454]
Successors: [0x4ba, 0x4db]
---
0x479 JUMPDEST
0x47a PUSH1 0x1
0x47c DUP4
0x47d PUSH1 0x20
0x47f SUB
0x480 PUSH2 0x100
0x483 EXP
0x484 SUB
0x485 DUP1
0x486 NOT
0x487 DUP3
0x488 MLOAD
0x489 AND
0x48a DUP2
0x48b DUP5
0x48c MLOAD
0x48d AND
0x48e DUP1
0x48f DUP3
0x490 OR
0x491 DUP6
0x492 MSTORE
0x493 POP
0x494 POP
0x495 POP
0x496 POP
0x497 POP
0x498 POP
0x499 SWAP1
0x49a POP
0x49b ADD
0x49c SWAP2
0x49d POP
0x49e POP
0x49f PUSH1 0x0
0x4a1 PUSH1 0x40
0x4a3 MLOAD
0x4a4 DUP1
0x4a5 DUP4
0x4a6 SUB
0x4a7 DUP2
0x4a8 PUSH1 0x0
0x4aa DUP7
0x4ab GAS
0x4ac CALL
0x4ad SWAP2
0x4ae POP
0x4af POP
0x4b0 RETURNDATASIZE
0x4b1 DUP1
0x4b2 PUSH1 0x0
0x4b4 DUP2
0x4b5 EQ
0x4b6 PUSH2 0x4db
0x4b9 JUMPI
---
0x479: JUMPDEST 
0x47a: V240 = 0x1
0x47d: V241 = 0x20
0x47f: V242 = SUB 0x20 S2
0x480: V243 = 0x100
0x483: V244 = EXP 0x100 V242
0x484: V245 = SUB V244 0x1
0x486: V246 = NOT V245
0x488: V247 = M[S0]
0x489: V248 = AND V247 V246
0x48c: V249 = M[S1]
0x48d: V250 = AND V249 V245
0x490: V251 = OR V248 V250
0x492: M[S1] = V251
0x49b: V252 = ADD V224 V223
0x49f: V253 = 0x0
0x4a1: V254 = 0x40
0x4a3: V255 = M[0x40]
0x4a6: V256 = SUB V252 V255
0x4a8: V257 = 0x0
0x4ab: V258 = GAS
0x4ac: V259 = CALL V258 V221 0x0 V255 V256 V255 0x0
0x4b0: V260 = RETURNDATASIZE
0x4b2: V261 = 0x0
0x4b5: V262 = EQ V260 0x0
0x4b6: V263 = 0x4db
0x4b9: JUMPI 0x4db V262
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V221, V195, V223, V223, V226, V224, S2, S1, S0]
Stack pops: 9
Stack additions: [V259, V260, V260]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V259, V260, V260]

================================

Block 0x4ba
[0x4ba:0x4da]
---
Predecessors: [0x479]
Successors: [0x4e0]
---
0x4ba PUSH1 0x40
0x4bc MLOAD
0x4bd SWAP2
0x4be POP
0x4bf PUSH1 0x1f
0x4c1 NOT
0x4c2 PUSH1 0x3f
0x4c4 RETURNDATASIZE
0x4c5 ADD
0x4c6 AND
0x4c7 DUP3
0x4c8 ADD
0x4c9 PUSH1 0x40
0x4cb MSTORE
0x4cc RETURNDATASIZE
0x4cd DUP3
0x4ce MSTORE
0x4cf RETURNDATASIZE
0x4d0 PUSH1 0x0
0x4d2 PUSH1 0x20
0x4d4 DUP5
0x4d5 ADD
0x4d6 RETURNDATACOPY
0x4d7 PUSH2 0x4e0
0x4da JUMP
---
0x4ba: V264 = 0x40
0x4bc: V265 = M[0x40]
0x4bf: V266 = 0x1f
0x4c1: V267 = NOT 0x1f
0x4c2: V268 = 0x3f
0x4c4: V269 = RETURNDATASIZE
0x4c5: V270 = ADD V269 0x3f
0x4c6: V271 = AND V270 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4c8: V272 = ADD V265 V271
0x4c9: V273 = 0x40
0x4cb: M[0x40] = V272
0x4cc: V274 = RETURNDATASIZE
0x4ce: M[V265] = V274
0x4cf: V275 = RETURNDATASIZE
0x4d0: V276 = 0x0
0x4d2: V277 = 0x20
0x4d5: V278 = ADD V265 0x20
0x4d6: RETURNDATACOPY V278 0x0 V275
0x4d7: V279 = 0x4e0
0x4da: JUMP 0x4e0
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V259, V260, V260]
Stack pops: 2
Stack additions: [V265, S0]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V259, V265, V260]

================================

Block 0x4db
[0x4db:0x4df]
---
Predecessors: [0x479]
Successors: [0x4e0]
---
0x4db JUMPDEST
0x4dc PUSH1 0x60
0x4de SWAP2
0x4df POP
---
0x4db: JUMPDEST 
0x4dc: V280 = 0x60
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V259, V260, V260]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V259, 0x60, V260]

================================

Block 0x4e0
[0x4e0:0x4ec]
---
Predecessors: [0x4ba, 0x4db]
Successors: [0x4ed, 0x4f1]
---
0x4e0 JUMPDEST
0x4e1 POP
0x4e2 SWAP2
0x4e3 POP
0x4e4 SWAP2
0x4e5 POP
0x4e6 DUP2
0x4e7 ISZERO
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4e0: JUMPDEST 
0x4e7: V281 = ISZERO V259
0x4e8: V282 = ISZERO V281
0x4e9: V283 = 0x4f1
0x4ec: JUMPI 0x4f1 V282
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x0, 0x60, V259, S1, V260]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S1]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4e0]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V284 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]

================================

Block 0x4f1
[0x4f1:0x4fb]
---
Predecessors: [0x4e0]
Successors: [0x4fc, 0x52d]
---
0x4f1 JUMPDEST
0x4f2 PUSH1 0x0
0x4f4 DUP2
0x4f5 MLOAD
0x4f6 GT
0x4f7 ISZERO
0x4f8 PUSH2 0x52d
0x4fb JUMPI
---
0x4f1: JUMPDEST 
0x4f2: V285 = 0x0
0x4f5: V286 = M[S0]
0x4f6: V287 = GT V286 0x0
0x4f7: V288 = ISZERO V287
0x4f8: V289 = 0x52d
0x4fb: JUMPI 0x52d V288
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]

================================

Block 0x4fc
[0x4fc:0x50b]
---
Predecessors: [0x4f1]
Successors: [0x50c, 0x510]
---
0x4fc DUP1
0x4fd DUP1
0x4fe PUSH1 0x20
0x500 ADD
0x501 SWAP1
0x502 MLOAD
0x503 PUSH1 0x20
0x505 DUP2
0x506 LT
0x507 ISZERO
0x508 PUSH2 0x510
0x50b JUMPI
---
0x4fe: V290 = 0x20
0x500: V291 = ADD 0x20 S0
0x502: V292 = M[S0]
0x503: V293 = 0x20
0x506: V294 = LT V292 0x20
0x507: V295 = ISZERO V294
0x508: V296 = 0x510
0x50b: JUMPI 0x510 V295
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]
Stack pops: 1
Stack additions: [S0, V291, V292]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0, V291, V292]

================================

Block 0x50c
[0x50c:0x50f]
---
Predecessors: [0x4fc]
Successors: []
---
0x50c PUSH1 0x0
0x50e DUP1
0x50f REVERT
---
0x50c: V297 = 0x0
0x50f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S2, V291, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S2, V291, V292]

================================

Block 0x510
[0x510:0x527]
---
Predecessors: [0x4fc]
Successors: [0x528, 0x52c]
---
0x510 JUMPDEST
0x511 DUP2
0x512 ADD
0x513 SWAP1
0x514 DUP1
0x515 DUP1
0x516 MLOAD
0x517 SWAP1
0x518 PUSH1 0x20
0x51a ADD
0x51b SWAP1
0x51c SWAP3
0x51d SWAP2
0x51e SWAP1
0x51f POP
0x520 POP
0x521 POP
0x522 ISZERO
0x523 ISZERO
0x524 PUSH2 0x52c
0x527 JUMPI
---
0x510: JUMPDEST 
0x512: V298 = ADD V291 V292
0x516: V299 = M[V291]
0x518: V300 = 0x20
0x51a: V301 = ADD 0x20 V291
0x522: V302 = ISZERO V299
0x523: V303 = ISZERO V302
0x524: V304 = 0x52c
0x527: JUMPI 0x52c V303
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S2, V291, V292]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S2]

================================

Block 0x528
[0x528:0x52b]
---
Predecessors: [0x510]
Successors: []
---
0x528 PUSH1 0x0
0x52a DUP1
0x52b REVERT
---
0x528: V305 = 0x0
0x52b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]

================================

Block 0x52c
[0x52c:0x52c]
---
Predecessors: [0x510]
Successors: [0x52d]
---
0x52c JUMPDEST
---
0x52c: JUMPDEST 
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]

================================

Block 0x52d
[0x52d:0x532]
---
Predecessors: [0x4f1, 0x52c]
Successors: [0x3f9]
---
0x52d JUMPDEST
0x52e POP
0x52f POP
0x530 POP
0x531 POP
0x532 JUMP
---
0x52d: JUMPDEST 
0x532: JUMP 0x3f9
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V259, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135]

================================

Block 0x533
[0x533:0x545]
---
Predecessors: [0x3fe]
Successors: [0x41d]
---
0x533 JUMPDEST
0x534 PUSH1 0x0
0x536 DUP1
0x537 DUP3
0x538 EXTCODESIZE
0x539 SWAP1
0x53a POP
0x53b PUSH1 0x0
0x53d DUP2
0x53e GT
0x53f SWAP2
0x540 POP
0x541 POP
0x542 SWAP2
0x543 SWAP1
0x544 POP
0x545 JUMP
---
0x533: JUMPDEST 
0x534: V306 = 0x0
0x538: V307 = EXTCODESIZE V212
0x53b: V308 = 0x0
0x53e: V309 = GT V307 0x0
0x545: JUMP 0x41d
---
Entry stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, 0x41d, V212]
Stack pops: 2
Stack additions: [V309]
Exit stack: [V13, 0xc0, V135, 0x2db, V161, V152, V135, 0x3f9, V161, V195, V309]

================================

Block 0x546
[0x546:0x571]
---
Predecessors: []
Successors: []
---
0x546 INVALID
0x547 LOG1
0x548 PUSH6 0x627a7a723058
0x54f SHA3
0x550 MISSING 0x5e
0x551 SHR
0x552 MISSING 0x5d
0x553 MISSING 0xc3
0x554 EXTCODECOPY
0x555 CALL
0x556 MISSING 0xc8
0x557 MISSING 0xed
0x558 SWAP14
0x559 LT
0x55a MISSING 0x1f
0x55b DUP7
0x55c SWAP2
0x55d NUMBER
0x55e MISSING 0xcc
0x55f MISSING 0xe2
0x560 PUSH2 0xaaf7
0x563 CALL
0x564 MISSING 0xde
0x565 MISSING 0xcd
0x566 LOG3
0x567 REVERT
0x568 MISSING 0xdd
0x569 MOD
0x56a MISSING 0xc5
0x56b MISSING 0xac
0x56c PUSH2 0x195d
0x56f MISSING 0x4b
0x570 STOP
0x571 MISSING 0x29
---
0x546: INVALID 
0x547: LOG S0 S1 S2
0x548: V310 = 0x627a7a723058
0x54f: V311 = SHA3 0x627a7a723058 S3
0x550: MISSING 0x5e
0x551: V312 = SHR S0 S1
0x552: MISSING 0x5d
0x553: MISSING 0xc3
0x554: EXTCODECOPY S0 S1 S2 S3
0x555: V313 = CALL S4 S5 S6 S7 S8 S9 S10
0x556: MISSING 0xc8
0x557: MISSING 0xed
0x559: V314 = LT S14 S1
0x55a: MISSING 0x1f
0x55d: V315 = NUMBER
0x55e: MISSING 0xcc
0x55f: MISSING 0xe2
0x560: V316 = 0xaaf7
0x563: V317 = CALL 0xaaf7 S0 S1 S2 S3 S4 S5
0x564: MISSING 0xde
0x565: MISSING 0xcd
0x566: LOG S0 S1 S2 S3 S4
0x567: REVERT S5 S6
0x568: MISSING 0xdd
0x569: V318 = MOD S0 S1
0x56a: MISSING 0xc5
0x56b: MISSING 0xac
0x56c: V319 = 0x195d
0x56f: MISSING 0x4b
0x570: STOP 
0x571: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V311, V312, V313, V314, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V315, S1, S0, S6, S2, S3, S4, S5, S6, V317, V318, 0x195d]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0x6e
Exit block: 0x76
Body: 0x6e, 0x76, 0x12a

Function 1:
Public function signature: 0x86d1a69f
Entry block: 0xb8
Exit block: 0xc0
Body: 0xb8, 0xc0, 0x154, 0x161, 0x165, 0x21d, 0x221, 0x22c, 0x235, 0x247, 0x24b, 0x269, 0x26d, 0x2db, 0x311, 0x3f9, 0x3fe, 0x41d, 0x424, 0x428, 0x454, 0x45f, 0x479, 0x4ba, 0x4db, 0x4e0, 0x4ed, 0x4f1, 0x4fc, 0x50c, 0x510, 0x528, 0x52c, 0x52d, 0x533

Function 2:
Public function signature: 0xb91d4001
Entry block: 0xc2
Exit block: 0xca
Body: 0xc2, 0xca, 0x2de

Function 3:
Public function signature: 0xfc0c546a
Entry block: 0xe0
Exit block: 0xe8
Body: 0xe0, 0xe8, 0x2e8

Function 4:
Public fallback function
Entry block: 0x69
Exit block: 0x69
Body: 0x69

