Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x93]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xefafd01
0x3c EQ
0x3d PUSH2 0x93
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xefafd01
0x3c: V13 = EQ 0xefafd01 V11
0x3d: V14 = 0x93
0x40: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xbc]
---
0x41 DUP1
0x42 PUSH4 0x25d8dcf2
0x47 EQ
0x48 PUSH2 0xbc
0x4b JUMPI
---
0x42: V15 = 0x25d8dcf2
0x47: V16 = EQ 0x25d8dcf2 V11
0x48: V17 = 0xbc
0x4b: JUMPI 0xbc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd1]
---
0x4c DUP1
0x4d PUSH4 0x34dbe44d
0x52 EQ
0x53 PUSH2 0xd1
0x56 JUMPI
---
0x4d: V18 = 0x34dbe44d
0x52: V19 = EQ 0x34dbe44d V11
0x53: V20 = 0xd1
0x56: JUMPI 0xd1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xfa]
---
0x57 DUP1
0x58 PUSH4 0x41c0e1b5
0x5d EQ
0x5e PUSH2 0xfa
0x61 JUMPI
---
0x58: V21 = 0x41c0e1b5
0x5d: V22 = EQ 0x41c0e1b5 V11
0x5e: V23 = 0xfa
0x61: JUMPI 0xfa V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x10f]
---
0x62 DUP1
0x63 PUSH4 0x5acce36b
0x68 EQ
0x69 PUSH2 0x10f
0x6c JUMPI
---
0x63: V24 = 0x5acce36b
0x68: V25 = EQ 0x5acce36b V11
0x69: V26 = 0x10f
0x6c: JUMPI 0x10f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x138]
---
0x6d DUP1
0x6e PUSH4 0x94c3fa2e
0x73 EQ
0x74 PUSH2 0x138
0x77 JUMPI
---
0x6e: V27 = 0x94c3fa2e
0x73: V28 = EQ 0x94c3fa2e V11
0x74: V29 = 0x138
0x77: JUMPI 0x138 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x169]
---
0x78 DUP1
0x79 PUSH4 0xcee6f93c
0x7e EQ
0x7f PUSH2 0x169
0x82 JUMPI
---
0x79: V30 = 0xcee6f93c
0x7e: V31 = EQ 0xcee6f93c V11
0x7f: V32 = 0x169
0x82: JUMPI 0x169 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x1f7]
---
0x83 DUP1
0x84 PUSH4 0xd8589be3
0x89 EQ
0x8a PUSH2 0x1f7
0x8d JUMPI
---
0x84: V33 = 0xd8589be3
0x89: V34 = EQ 0xd8589be3 V11
0x8a: V35 = 0x1f7
0x8d: JUMPI 0x1f7 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x92]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x99]
---
Predecessors: [0xd]
Successors: [0x9a, 0x9e]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x95: V38 = ISZERO V37
0x96: V39 = 0x9e
0x99: JUMPI 0x9e V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x93]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V40 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xa5]
---
Predecessors: [0x93]
Successors: [0x20c]
---
0x9e JUMPDEST
0x9f PUSH2 0xa6
0xa2 PUSH2 0x20c
0xa5 JUMP
---
0x9e: JUMPDEST 
0x9f: V41 = 0xa6
0xa2: V42 = 0x20c
0xa5: JUMP 0x20c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa6]
Exit stack: [V11, 0xa6]

================================

Block 0xa6
[0xa6:0xbb]
---
Predecessors: [0x20c]
Successors: []
---
0xa6 JUMPDEST
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab DUP3
0xac DUP2
0xad MSTORE
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP2
0xb2 POP
0xb3 POP
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0xa6: JUMPDEST 
0xa7: V43 = 0x40
0xa9: V44 = M[0x40]
0xad: M[V44] = V162
0xae: V45 = 0x20
0xb0: V46 = ADD 0x20 V44
0xb4: V47 = 0x40
0xb6: V48 = M[0x40]
0xb9: V49 = SUB V46 V48
0xbb: RETURN V48 V49
---
Entry stack: [V11, V162]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x41]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V50 = CALLVALUE
0xbe: V51 = ISZERO V50
0xbf: V52 = 0xc7
0xc2: JUMPI 0xc7 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V53 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xce]
---
Predecessors: [0xbc]
Successors: [0x216]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xcf
0xcb PUSH2 0x216
0xce JUMP
---
0xc7: JUMPDEST 
0xc8: V54 = 0xcf
0xcb: V55 = 0x216
0xce: JUMP 0x216
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf]
Exit stack: [V11, 0xcf]

================================

Block 0xcf
[0xcf:0xd0]
---
Predecessors: [0x57f]
Successors: []
---
0xcf JUMPDEST
0xd0 STOP
---
0xcf: JUMPDEST 
0xd0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0xd7]
---
Predecessors: [0x4c]
Successors: [0xd8, 0xdc]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd1: JUMPDEST 
0xd2: V56 = CALLVALUE
0xd3: V57 = ISZERO V56
0xd4: V58 = 0xdc
0xd7: JUMPI 0xdc V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd1]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V59 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xd1]
Successors: [0x584]
---
0xdc JUMPDEST
0xdd PUSH2 0xe4
0xe0 PUSH2 0x584
0xe3 JUMP
---
0xdc: JUMPDEST 
0xdd: V60 = 0xe4
0xe0: V61 = 0x584
0xe3: JUMP 0x584
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe4]
Exit stack: [V11, 0xe4]

================================

Block 0xe4
[0xe4:0xf9]
---
Predecessors: [0x584]
Successors: []
---
0xe4 JUMPDEST
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP3
0xea DUP2
0xeb MSTORE
0xec PUSH1 0x20
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 POP
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 SWAP2
0xf7 SUB
0xf8 SWAP1
0xf9 RETURN
---
0xe4: JUMPDEST 
0xe5: V62 = 0x40
0xe7: V63 = M[0x40]
0xeb: M[V63] = V352
0xec: V64 = 0x20
0xee: V65 = ADD 0x20 V63
0xf2: V66 = 0x40
0xf4: V67 = M[0x40]
0xf7: V68 = SUB V65 V67
0xf9: RETURN V67 V68
---
Entry stack: [V11, V352]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xfa
[0xfa:0x100]
---
Predecessors: [0x57]
Successors: [0x101, 0x105]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc ISZERO
0xfd PUSH2 0x105
0x100 JUMPI
---
0xfa: JUMPDEST 
0xfb: V69 = CALLVALUE
0xfc: V70 = ISZERO V69
0xfd: V71 = 0x105
0x100: JUMPI 0x105 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0xfa]
Successors: []
---
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x101: V72 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0xfa]
Successors: [0x58e]
---
0x105 JUMPDEST
0x106 PUSH2 0x10d
0x109 PUSH2 0x58e
0x10c JUMP
---
0x105: JUMPDEST 
0x106: V73 = 0x10d
0x109: V74 = 0x58e
0x10c: JUMP 0x58e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10d]
Exit stack: [V11, 0x10d]

================================

Block 0x10d
[0x10d:0x10e]
---
Predecessors: [0x61d]
Successors: []
---
0x10d JUMPDEST
0x10e STOP
---
0x10d: JUMPDEST 
0x10e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x115]
---
Predecessors: [0x62]
Successors: [0x116, 0x11a]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 ISZERO
0x112 PUSH2 0x11a
0x115 JUMPI
---
0x10f: JUMPDEST 
0x110: V75 = CALLVALUE
0x111: V76 = ISZERO V75
0x112: V77 = 0x11a
0x115: JUMPI 0x11a V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0x10f]
Successors: []
---
0x116 PUSH1 0x0
0x118 DUP1
0x119 REVERT
---
0x116: V78 = 0x0
0x119: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x121]
---
Predecessors: [0x10f]
Successors: [0x61f]
---
0x11a JUMPDEST
0x11b PUSH2 0x122
0x11e PUSH2 0x61f
0x121 JUMP
---
0x11a: JUMPDEST 
0x11b: V79 = 0x122
0x11e: V80 = 0x61f
0x121: JUMP 0x61f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x122]
Exit stack: [V11, 0x122]

================================

Block 0x122
[0x122:0x137]
---
Predecessors: [0x61f]
Successors: []
---
0x122 JUMPDEST
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 DUP3
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP2
0x12e POP
0x12f POP
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 SWAP2
0x135 SUB
0x136 SWAP1
0x137 RETURN
---
0x122: JUMPDEST 
0x123: V81 = 0x40
0x125: V82 = M[0x40]
0x129: M[V82] = V381
0x12a: V83 = 0x20
0x12c: V84 = ADD 0x20 V82
0x130: V85 = 0x40
0x132: V86 = M[0x40]
0x135: V87 = SUB V84 V86
0x137: RETURN V86 V87
---
Entry stack: [V11, V381]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0x6d]
Successors: [0x13f, 0x143]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x138: JUMPDEST 
0x139: V88 = CALLVALUE
0x13a: V89 = ISZERO V88
0x13b: V90 = 0x143
0x13e: JUMPI 0x143 V89
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x138]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V91 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x138]
Successors: [0x63e]
---
0x143 JUMPDEST
0x144 PUSH2 0x14b
0x147 PUSH2 0x63e
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V92 = 0x14b
0x147: V93 = 0x63e
0x14a: JUMP 0x63e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x14b
[0x14b:0x168]
---
Predecessors: [0x63e]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 DUP3
0x151 PUSH1 0x0
0x153 NOT
0x154 AND
0x155 PUSH1 0x0
0x157 NOT
0x158 AND
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP2
0x15f POP
0x160 POP
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 SWAP2
0x166 SUB
0x167 SWAP1
0x168 RETURN
---
0x14b: JUMPDEST 
0x14c: V94 = 0x40
0x14e: V95 = M[0x40]
0x151: V96 = 0x0
0x153: V97 = NOT 0x0
0x154: V98 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V384
0x155: V99 = 0x0
0x157: V100 = NOT 0x0
0x158: V101 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V98
0x15a: M[V95] = V101
0x15b: V102 = 0x20
0x15d: V103 = ADD 0x20 V95
0x161: V104 = 0x40
0x163: V105 = M[0x40]
0x166: V106 = SUB V103 V105
0x168: RETURN V105 V106
---
Entry stack: [V11, V384]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x169
[0x169:0x16f]
---
Predecessors: [0x78]
Successors: [0x170, 0x174]
---
0x169 JUMPDEST
0x16a CALLVALUE
0x16b ISZERO
0x16c PUSH2 0x174
0x16f JUMPI
---
0x169: JUMPDEST 
0x16a: V107 = CALLVALUE
0x16b: V108 = ISZERO V107
0x16c: V109 = 0x174
0x16f: JUMPI 0x174 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x170
[0x170:0x173]
---
Predecessors: [0x169]
Successors: []
---
0x170 PUSH1 0x0
0x172 DUP1
0x173 REVERT
---
0x170: V110 = 0x0
0x173: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0x169]
Successors: [0x648]
---
0x174 JUMPDEST
0x175 PUSH2 0x17c
0x178 PUSH2 0x648
0x17b JUMP
---
0x174: JUMPDEST 
0x175: V111 = 0x17c
0x178: V112 = 0x648
0x17b: JUMP 0x648
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17c]
Exit stack: [V11, 0x17c]

================================

Block 0x17c
[0x17c:0x1a0]
---
Predecessors: [0x6e6]
Successors: [0x1a1]
---
0x17c JUMPDEST
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 DUP1
0x182 PUSH1 0x20
0x184 ADD
0x185 DUP3
0x186 DUP2
0x187 SUB
0x188 DUP3
0x189 MSTORE
0x18a DUP4
0x18b DUP2
0x18c DUP2
0x18d MLOAD
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 SWAP2
0x194 POP
0x195 DUP1
0x196 MLOAD
0x197 SWAP1
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP1
0x19c DUP1
0x19d DUP4
0x19e DUP4
0x19f PUSH1 0x0
---
0x17c: JUMPDEST 
0x17d: V113 = 0x40
0x17f: V114 = M[0x40]
0x182: V115 = 0x20
0x184: V116 = ADD 0x20 V114
0x187: V117 = SUB V116 V114
0x189: M[V114] = V117
0x18d: V118 = M[V407]
0x18f: M[V116] = V118
0x190: V119 = 0x20
0x192: V120 = ADD 0x20 V116
0x196: V121 = M[V407]
0x198: V122 = 0x20
0x19a: V123 = ADD 0x20 V407
0x19f: V124 = 0x0
---
Entry stack: [V11, V407]
Stack pops: 1
Stack additions: [S0, V114, V114, V120, V123, V121, V121, V120, V123, 0x0]
Exit stack: [V11, V407, V114, V114, V120, V123, V121, V121, V120, V123, 0x0]

================================

Block 0x1a1
[0x1a1:0x1a9]
---
Predecessors: [0x17c, 0x1aa]
Successors: [0x1aa, 0x1bc]
---
0x1a1 JUMPDEST
0x1a2 DUP4
0x1a3 DUP2
0x1a4 LT
0x1a5 ISZERO
0x1a6 PUSH2 0x1bc
0x1a9 JUMPI
---
0x1a1: JUMPDEST 
0x1a4: V125 = LT S0 V121
0x1a5: V126 = ISZERO V125
0x1a6: V127 = 0x1bc
0x1a9: JUMPI 0x1bc V126
---
Entry stack: [V11, V407, V114, V114, V120, V123, V121, V121, V120, V123, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V407, V114, V114, V120, V123, V121, V121, V120, V123, S0]

================================

Block 0x1aa
[0x1aa:0x1bb]
---
Predecessors: [0x1a1]
Successors: [0x1a1]
---
0x1aa DUP1
0x1ab DUP3
0x1ac ADD
0x1ad MLOAD
0x1ae DUP2
0x1af DUP5
0x1b0 ADD
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 DUP2
0x1b5 ADD
0x1b6 SWAP1
0x1b7 POP
0x1b8 PUSH2 0x1a1
0x1bb JUMP
---
0x1ac: V128 = ADD V123 S0
0x1ad: V129 = M[V128]
0x1b0: V130 = ADD V120 S0
0x1b1: M[V130] = V129
0x1b2: V131 = 0x20
0x1b5: V132 = ADD S0 0x20
0x1b8: V133 = 0x1a1
0x1bb: JUMP 0x1a1
---
Entry stack: [V11, V407, V114, V114, V120, V123, V121, V121, V120, V123, S0]
Stack pops: 3
Stack additions: [S2, S1, V132]
Exit stack: [V11, V407, V114, V114, V120, V123, V121, V121, V120, V123, V132]

================================

Block 0x1bc
[0x1bc:0x1cf]
---
Predecessors: [0x1a1]
Successors: [0x1d0, 0x1e9]
---
0x1bc JUMPDEST
0x1bd POP
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 SWAP1
0x1c2 POP
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 ADD
0x1c6 SWAP1
0x1c7 PUSH1 0x1f
0x1c9 AND
0x1ca DUP1
0x1cb ISZERO
0x1cc PUSH2 0x1e9
0x1cf JUMPI
---
0x1bc: JUMPDEST 
0x1c5: V134 = ADD V121 V120
0x1c7: V135 = 0x1f
0x1c9: V136 = AND 0x1f V121
0x1cb: V137 = ISZERO V136
0x1cc: V138 = 0x1e9
0x1cf: JUMPI 0x1e9 V137
---
Entry stack: [V11, V407, V114, V114, V120, V123, V121, V121, V120, V123, S0]
Stack pops: 7
Stack additions: [V134, V136]
Exit stack: [V11, V407, V114, V114, V134, V136]

================================

Block 0x1d0
[0x1d0:0x1e8]
---
Predecessors: [0x1bc]
Successors: [0x1e9]
---
0x1d0 DUP1
0x1d1 DUP3
0x1d2 SUB
0x1d3 DUP1
0x1d4 MLOAD
0x1d5 PUSH1 0x1
0x1d7 DUP4
0x1d8 PUSH1 0x20
0x1da SUB
0x1db PUSH2 0x100
0x1de EXP
0x1df SUB
0x1e0 NOT
0x1e1 AND
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 SWAP2
0x1e8 POP
---
0x1d2: V139 = SUB V134 V136
0x1d4: V140 = M[V139]
0x1d5: V141 = 0x1
0x1d8: V142 = 0x20
0x1da: V143 = SUB 0x20 V136
0x1db: V144 = 0x100
0x1de: V145 = EXP 0x100 V143
0x1df: V146 = SUB V145 0x1
0x1e0: V147 = NOT V146
0x1e1: V148 = AND V147 V140
0x1e3: M[V139] = V148
0x1e4: V149 = 0x20
0x1e6: V150 = ADD 0x20 V139
---
Entry stack: [V11, V407, V114, V114, V134, V136]
Stack pops: 2
Stack additions: [V150, S0]
Exit stack: [V11, V407, V114, V114, V150, V136]

================================

Block 0x1e9
[0x1e9:0x1f6]
---
Predecessors: [0x1bc, 0x1d0]
Successors: []
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb SWAP3
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef PUSH1 0x40
0x1f1 MLOAD
0x1f2 DUP1
0x1f3 SWAP2
0x1f4 SUB
0x1f5 SWAP1
0x1f6 RETURN
---
0x1e9: JUMPDEST 
0x1ef: V151 = 0x40
0x1f1: V152 = M[0x40]
0x1f4: V153 = SUB S1 V152
0x1f6: RETURN V152 V153
---
Entry stack: [V11, V407, V114, V114, S1, V136]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f7
[0x1f7:0x1fd]
---
Predecessors: [0x83]
Successors: [0x1fe, 0x202]
---
0x1f7 JUMPDEST
0x1f8 CALLVALUE
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V154 = CALLVALUE
0x1f9: V155 = ISZERO V154
0x1fa: V156 = 0x202
0x1fd: JUMPI 0x202 V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x1f7]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V157 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x202
[0x202:0x209]
---
Predecessors: [0x1f7]
Successors: [0x6f0]
---
0x202 JUMPDEST
0x203 PUSH2 0x20a
0x206 PUSH2 0x6f0
0x209 JUMP
---
0x202: JUMPDEST 
0x203: V158 = 0x20a
0x206: V159 = 0x6f0
0x209: JUMP 0x6f0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x20a]
Exit stack: [V11, 0x20a]

================================

Block 0x20a
[0x20a:0x20b]
---
Predecessors: [0x77b]
Successors: []
---
0x20a JUMPDEST
0x20b STOP
---
0x20a: JUMPDEST 
0x20b: STOP 
---
Entry stack: [V11, 0xcf, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, S1, S0]

================================

Block 0x20c
[0x20c:0x215]
---
Predecessors: [0x9e]
Successors: [0xa6]
---
0x20c JUMPDEST
0x20d PUSH1 0x0
0x20f PUSH1 0x1
0x211 SLOAD
0x212 SWAP1
0x213 POP
0x214 SWAP1
0x215 JUMP
---
0x20c: JUMPDEST 
0x20d: V160 = 0x0
0x20f: V161 = 0x1
0x211: V162 = S[0x1]
0x215: JUMP 0xa6
---
Entry stack: [V11, 0xa6]
Stack pops: 1
Stack additions: [V162]
Exit stack: [V11, V162]

================================

Block 0x216
[0x216:0x233]
---
Predecessors: [0xc7]
Successors: [0x234, 0x2c2]
---
0x216 JUMPDEST
0x217 PUSH1 0x0
0x219 DUP1
0x21a PUSH1 0x0
0x21c PUSH16 0xffffffffffffffffffffffffffffffff
0x22d CALLVALUE
0x22e LT
0x22f ISZERO
0x230 PUSH2 0x2c2
0x233 JUMPI
---
0x216: JUMPDEST 
0x217: V163 = 0x0
0x21a: V164 = 0x0
0x21c: V165 = 0xffffffffffffffffffffffffffffffff
0x22d: V166 = CALLVALUE
0x22e: V167 = LT V166 0xffffffffffffffffffffffffffffffff
0x22f: V168 = ISZERO V167
0x230: V169 = 0x2c2
0x233: JUMPI 0x2c2 V168
---
Entry stack: [V11, 0xcf]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0xcf, 0x0, 0x0, 0x0]

================================

Block 0x234
[0x234:0x27d]
---
Predecessors: [0x216]
Successors: [0x845]
---
0x234 PUSH1 0x40
0x236 DUP1
0x237 MLOAD
0x238 SWAP1
0x239 DUP2
0x23a ADD
0x23b PUSH1 0x40
0x23d MSTORE
0x23e DUP1
0x23f PUSH1 0xf
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x20
0x245 ADD
0x246 PUSH32 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x267 DUP2
0x268 MSTORE
0x269 POP
0x26a PUSH1 0x2
0x26c SWAP1
0x26d DUP1
0x26e MLOAD
0x26f SWAP1
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP1
0x274 PUSH2 0x27e
0x277 SWAP3
0x278 SWAP2
0x279 SWAP1
0x27a PUSH2 0x845
0x27d JUMP
---
0x234: V170 = 0x40
0x237: V171 = M[0x40]
0x23a: V172 = ADD V171 0x40
0x23b: V173 = 0x40
0x23d: M[0x40] = V172
0x23f: V174 = 0xf
0x242: M[V171] = 0xf
0x243: V175 = 0x20
0x245: V176 = ADD 0x20 V171
0x246: V177 = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x268: M[V176] = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x26a: V178 = 0x2
0x26e: V179 = M[V171]
0x270: V180 = 0x20
0x272: V181 = ADD 0x20 V171
0x274: V182 = 0x27e
0x27a: V183 = 0x845
0x27d: JUMP 0x845
---
Entry stack: [V11, 0xcf, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x27e, 0x2, V181, V179]
Exit stack: [V11, 0xcf, 0x0, 0x0, 0x0, 0x27e, 0x2, V181, V179]

================================

Block 0x27e
[0x27e:0x2c1]
---
Predecessors: [0x8c1]
Successors: [0x57f]
---
0x27e JUMPDEST
0x27f POP
0x280 PUSH1 0x0
0x282 PUSH1 0x1
0x284 DUP2
0x285 SWAP1
0x286 SSTORE
0x287 POP
0x288 CALLER
0x289 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29e AND
0x29f PUSH2 0x8fc
0x2a2 CALLVALUE
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 ISZERO
0x2a6 MUL
0x2a7 SWAP1
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab PUSH1 0x0
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 DUP4
0x2b2 SUB
0x2b3 DUP2
0x2b4 DUP6
0x2b5 DUP9
0x2b6 DUP9
0x2b7 CALL
0x2b8 SWAP4
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd POP
0x2be PUSH2 0x57f
0x2c1 JUMP
---
0x27e: JUMPDEST 
0x280: V184 = 0x0
0x282: V185 = 0x1
0x286: S[0x1] = 0x0
0x288: V186 = CALLER
0x289: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x29f: V189 = 0x8fc
0x2a2: V190 = CALLVALUE
0x2a5: V191 = ISZERO V190
0x2a6: V192 = MUL V191 0x8fc
0x2a8: V193 = 0x40
0x2aa: V194 = M[0x40]
0x2ab: V195 = 0x0
0x2ad: V196 = 0x40
0x2af: V197 = M[0x40]
0x2b2: V198 = SUB V194 V197
0x2b7: V199 = CALL V192 V188 V190 V197 V198 V197 0x0
0x2be: V200 = 0x57f
0x2c1: JUMP 0x57f
---
Entry stack: [V11, 0xcf, S3, S2, S1, 0x2]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, S3, S2, S1]

================================

Block 0x2c2
[0x2c2:0x2e4]
---
Predecessors: [0x216]
Successors: [0x2e5, 0x39a]
---
0x2c2 JUMPDEST
0x2c3 ADDRESS
0x2c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d9 AND
0x2da BALANCE
0x2db PUSH1 0x2
0x2dd CALLVALUE
0x2de MUL
0x2df GT
0x2e0 ISZERO
0x2e1 PUSH2 0x39a
0x2e4 JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V201 = ADDRESS
0x2c4: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x2da: V204 = BALANCE V203
0x2db: V205 = 0x2
0x2dd: V206 = CALLVALUE
0x2de: V207 = MUL V206 0x2
0x2df: V208 = GT V207 V204
0x2e0: V209 = ISZERO V208
0x2e1: V210 = 0x39a
0x2e4: JUMPI 0x39a V209
---
Entry stack: [V11, 0xcf, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, 0x0, 0x0, 0x0]

================================

Block 0x2e5
[0x2e5:0x355]
---
Predecessors: [0x2c2]
Successors: [0x845]
---
0x2e5 PUSH1 0x60
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea SWAP1
0x2eb DUP2
0x2ec ADD
0x2ed PUSH1 0x40
0x2ef MSTORE
0x2f0 DUP1
0x2f1 PUSH1 0x2b
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 PUSH32 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e PUSH32 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x33f DUP2
0x340 MSTORE
0x341 POP
0x342 PUSH1 0x2
0x344 SWAP1
0x345 DUP1
0x346 MLOAD
0x347 SWAP1
0x348 PUSH1 0x20
0x34a ADD
0x34b SWAP1
0x34c PUSH2 0x356
0x34f SWAP3
0x350 SWAP2
0x351 SWAP1
0x352 PUSH2 0x845
0x355 JUMP
---
0x2e5: V211 = 0x60
0x2e7: V212 = 0x40
0x2e9: V213 = M[0x40]
0x2ec: V214 = ADD V213 0x60
0x2ed: V215 = 0x40
0x2ef: M[0x40] = V214
0x2f1: V216 = 0x2b
0x2f4: M[V213] = 0x2b
0x2f5: V217 = 0x20
0x2f7: V218 = ADD 0x20 V213
0x2f8: V219 = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x31a: M[V218] = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x31b: V220 = 0x20
0x31d: V221 = ADD 0x20 V218
0x31e: V222 = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x340: M[V221] = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x342: V223 = 0x2
0x346: V224 = M[V213]
0x348: V225 = 0x20
0x34a: V226 = ADD 0x20 V213
0x34c: V227 = 0x356
0x352: V228 = 0x845
0x355: JUMP 0x845
---
Entry stack: [V11, 0xcf, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x356, 0x2, V226, V224]
Exit stack: [V11, 0xcf, 0x0, 0x0, 0x0, 0x356, 0x2, V226, V224]

================================

Block 0x356
[0x356:0x399]
---
Predecessors: [0x8c1]
Successors: [0x57f]
---
0x356 JUMPDEST
0x357 POP
0x358 PUSH1 0x0
0x35a PUSH1 0x1
0x35c DUP2
0x35d SWAP1
0x35e SSTORE
0x35f POP
0x360 CALLER
0x361 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x376 AND
0x377 PUSH2 0x8fc
0x37a CALLVALUE
0x37b SWAP1
0x37c DUP2
0x37d ISZERO
0x37e MUL
0x37f SWAP1
0x380 PUSH1 0x40
0x382 MLOAD
0x383 PUSH1 0x0
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 DUP4
0x38a SUB
0x38b DUP2
0x38c DUP6
0x38d DUP9
0x38e DUP9
0x38f CALL
0x390 SWAP4
0x391 POP
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 PUSH2 0x57f
0x399 JUMP
---
0x356: JUMPDEST 
0x358: V229 = 0x0
0x35a: V230 = 0x1
0x35e: S[0x1] = 0x0
0x360: V231 = CALLER
0x361: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x376: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x377: V234 = 0x8fc
0x37a: V235 = CALLVALUE
0x37d: V236 = ISZERO V235
0x37e: V237 = MUL V236 0x8fc
0x380: V238 = 0x40
0x382: V239 = M[0x40]
0x383: V240 = 0x0
0x385: V241 = 0x40
0x387: V242 = M[0x40]
0x38a: V243 = SUB V239 V242
0x38f: V244 = CALL V237 V233 V235 V242 V243 V242 0x0
0x396: V245 = 0x57f
0x399: JUMP 0x57f
---
Entry stack: [V11, 0xcf, S3, S2, S1, 0x2]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, S3, S2, S1]

================================

Block 0x39a
[0x39a:0x3a3]
---
Predecessors: [0x2c2]
Successors: [0x3a4, 0x3fc]
---
0x39a JUMPDEST
0x39b PUSH1 0x0
0x39d CALLVALUE
0x39e EQ
0x39f ISZERO
0x3a0 PUSH2 0x3fc
0x3a3 JUMPI
---
0x39a: JUMPDEST 
0x39b: V246 = 0x0
0x39d: V247 = CALLVALUE
0x39e: V248 = EQ V247 0x0
0x39f: V249 = ISZERO V248
0x3a0: V250 = 0x3fc
0x3a3: JUMPI 0x3fc V249
---
Entry stack: [V11, 0xcf, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, 0x0, 0x0, 0x0]

================================

Block 0x3a4
[0x3a4:0x3ed]
---
Predecessors: [0x39a]
Successors: [0x845]
---
0x3a4 PUSH1 0x40
0x3a6 DUP1
0x3a7 MLOAD
0x3a8 SWAP1
0x3a9 DUP2
0x3aa ADD
0x3ab PUSH1 0x40
0x3ad MSTORE
0x3ae DUP1
0x3af PUSH1 0xe
0x3b1 DUP2
0x3b2 MSTORE
0x3b3 PUSH1 0x20
0x3b5 ADD
0x3b6 PUSH32 0x776167657220776173207a65726f000000000000000000000000000000000000
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 POP
0x3da PUSH1 0x2
0x3dc SWAP1
0x3dd DUP1
0x3de MLOAD
0x3df SWAP1
0x3e0 PUSH1 0x20
0x3e2 ADD
0x3e3 SWAP1
0x3e4 PUSH2 0x3ee
0x3e7 SWAP3
0x3e8 SWAP2
0x3e9 SWAP1
0x3ea PUSH2 0x845
0x3ed JUMP
---
0x3a4: V251 = 0x40
0x3a7: V252 = M[0x40]
0x3aa: V253 = ADD V252 0x40
0x3ab: V254 = 0x40
0x3ad: M[0x40] = V253
0x3af: V255 = 0xe
0x3b2: M[V252] = 0xe
0x3b3: V256 = 0x20
0x3b5: V257 = ADD 0x20 V252
0x3b6: V258 = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x3d8: M[V257] = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x3da: V259 = 0x2
0x3de: V260 = M[V252]
0x3e0: V261 = 0x20
0x3e2: V262 = ADD 0x20 V252
0x3e4: V263 = 0x3ee
0x3ea: V264 = 0x845
0x3ed: JUMP 0x845
---
Entry stack: [V11, 0xcf, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3ee, 0x2, V262, V260]
Exit stack: [V11, 0xcf, 0x0, 0x0, 0x0, 0x3ee, 0x2, V262, V260]

================================

Block 0x3ee
[0x3ee:0x3fb]
---
Predecessors: [0x8c1]
Successors: [0x57f]
---
0x3ee JUMPDEST
0x3ef POP
0x3f0 PUSH1 0x0
0x3f2 PUSH1 0x1
0x3f4 DUP2
0x3f5 SWAP1
0x3f6 SSTORE
0x3f7 POP
0x3f8 PUSH2 0x57f
0x3fb JUMP
---
0x3ee: JUMPDEST 
0x3f0: V265 = 0x0
0x3f2: V266 = 0x1
0x3f6: S[0x1] = 0x0
0x3f8: V267 = 0x57f
0x3fb: JUMP 0x57f
---
Entry stack: [V11, 0xcf, S3, S2, S1, 0x2]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, S3, S2, S1]

================================

Block 0x3fc
[0x3fc:0x42a]
---
Predecessors: [0x39a]
Successors: [0x786]
---
0x3fc JUMPDEST
0x3fd CALLVALUE
0x3fe SWAP3
0x3ff POP
0x400 PUSH1 0x1
0x402 NUMBER
0x403 SUB
0x404 PUSH1 0x3
0x406 DUP2
0x407 SWAP1
0x408 SSTORE
0x409 POP
0x40a PUSH1 0x3
0x40c SLOAD
0x40d BLOCKHASH
0x40e PUSH1 0x4
0x410 DUP2
0x411 PUSH1 0x0
0x413 NOT
0x414 AND
0x415 SWAP1
0x416 SSTORE
0x417 POP
0x418 DUP3
0x419 PUSH1 0x4
0x41b SLOAD
0x41c PUSH1 0x1
0x41e SWAP1
0x41f DIV
0x420 ADD
0x421 SWAP2
0x422 POP
0x423 PUSH2 0x42b
0x426 DUP3
0x427 PUSH2 0x786
0x42a JUMP
---
0x3fc: JUMPDEST 
0x3fd: V268 = CALLVALUE
0x400: V269 = 0x1
0x402: V270 = NUMBER
0x403: V271 = SUB V270 0x1
0x404: V272 = 0x3
0x408: S[0x3] = V271
0x40a: V273 = 0x3
0x40c: V274 = S[0x3]
0x40d: V275 = BLOCKHASH V274
0x40e: V276 = 0x4
0x411: V277 = 0x0
0x413: V278 = NOT 0x0
0x414: V279 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V275
0x416: S[0x4] = V279
0x419: V280 = 0x4
0x41b: V281 = S[0x4]
0x41c: V282 = 0x1
0x41f: V283 = DIV V281 0x1
0x420: V284 = ADD V283 V268
0x423: V285 = 0x42b
0x427: V286 = 0x786
0x42a: JUMP 0x786
---
Entry stack: [V11, 0xcf, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V268, V284, S0, 0x42b, V284]
Exit stack: [V11, 0xcf, V268, V284, 0x0, 0x42b, V284]

================================

Block 0x42b
[0x42b:0x439]
---
Predecessors: [0x786]
Successors: [0x43a, 0x43b]
---
0x42b JUMPDEST
0x42c SWAP1
0x42d POP
0x42e PUSH1 0x0
0x430 PUSH1 0x2
0x432 DUP3
0x433 DUP2
0x434 ISZERO
0x435 ISZERO
0x436 PUSH2 0x43b
0x439 JUMPI
---
0x42b: JUMPDEST 
0x42e: V287 = 0x0
0x430: V288 = 0x2
0x434: V289 = ISZERO 0x2
0x435: V290 = ISZERO 0x0
0x436: V291 = 0x43b
0x439: JUMPI 0x43b 0x1
---
Entry stack: [V11, 0xcf, V268, V284, 0x0, V521]
Stack pops: 2
Stack additions: [S0, 0x0, 0x2, S0]
Exit stack: [V11, 0xcf, V268, V284, V521, 0x0, 0x2, V521]

================================

Block 0x43a
[0x43a:0x43a]
---
Predecessors: [0x42b]
Successors: []
---
0x43a INVALID
---
0x43a: INVALID 
---
Entry stack: [V11, 0xcf, V268, V284, V521, 0x0, 0x2, V521]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V268, V284, V521, 0x0, 0x2, V521]

================================

Block 0x43b
[0x43b:0x442]
---
Predecessors: [0x42b]
Successors: [0x443, 0x4ce]
---
0x43b JUMPDEST
0x43c MOD
0x43d EQ
0x43e ISZERO
0x43f PUSH2 0x4ce
0x442 JUMPI
---
0x43b: JUMPDEST 
0x43c: V292 = MOD V521 0x2
0x43d: V293 = EQ V292 0x0
0x43e: V294 = ISZERO V293
0x43f: V295 = 0x4ce
0x442: JUMPI 0x4ce V294
---
Entry stack: [V11, 0xcf, V268, V284, V521, 0x0, 0x2, V521]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xcf, V268, V284, V521]

================================

Block 0x443
[0x443:0x4c7]
---
Predecessors: [0x43b]
Successors: [0x845]
---
0x443 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x464 DUP4
0x465 PUSH16 0xffffffffffffffffffffffffffffffff
0x476 AND
0x477 MUL
0x478 PUSH1 0x1
0x47a DUP2
0x47b SWAP1
0x47c SSTORE
0x47d POP
0x47e PUSH1 0x40
0x480 DUP1
0x481 MLOAD
0x482 SWAP1
0x483 DUP2
0x484 ADD
0x485 PUSH1 0x40
0x487 MSTORE
0x488 DUP1
0x489 PUSH1 0x4
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x20
0x48f ADD
0x490 PUSH32 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 POP
0x4b4 PUSH1 0x2
0x4b6 SWAP1
0x4b7 DUP1
0x4b8 MLOAD
0x4b9 SWAP1
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd SWAP1
0x4be PUSH2 0x4c8
0x4c1 SWAP3
0x4c2 SWAP2
0x4c3 SWAP1
0x4c4 PUSH2 0x845
0x4c7 JUMP
---
0x443: V296 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x465: V297 = 0xffffffffffffffffffffffffffffffff
0x476: V298 = AND 0xffffffffffffffffffffffffffffffff V268
0x477: V299 = MUL V298 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x478: V300 = 0x1
0x47c: S[0x1] = V299
0x47e: V301 = 0x40
0x481: V302 = M[0x40]
0x484: V303 = ADD V302 0x40
0x485: V304 = 0x40
0x487: M[0x40] = V303
0x489: V305 = 0x4
0x48c: M[V302] = 0x4
0x48d: V306 = 0x20
0x48f: V307 = ADD 0x20 V302
0x490: V308 = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x4b2: M[V307] = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x4b4: V309 = 0x2
0x4b8: V310 = M[V302]
0x4ba: V311 = 0x20
0x4bc: V312 = ADD 0x20 V302
0x4be: V313 = 0x4c8
0x4c4: V314 = 0x845
0x4c7: JUMP 0x845
---
Entry stack: [V11, 0xcf, V268, V284, V521]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x4c8, 0x2, V312, V310]
Exit stack: [V11, 0xcf, V268, V284, V521, 0x4c8, 0x2, V312, V310]

================================

Block 0x4c8
[0x4c8:0x4cd]
---
Predecessors: [0x8c1]
Successors: [0x57f]
---
0x4c8 JUMPDEST
0x4c9 POP
0x4ca PUSH2 0x57f
0x4cd JUMP
---
0x4c8: JUMPDEST 
0x4ca: V315 = 0x57f
0x4cd: JUMP 0x57f
---
Entry stack: [V11, 0xcf, S3, S2, S1, 0x2]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, S3, S2, S1]

================================

Block 0x4ce
[0x4ce:0x531]
---
Predecessors: [0x43b]
Successors: [0x845]
---
0x4ce JUMPDEST
0x4cf DUP3
0x4d0 PUSH16 0xffffffffffffffffffffffffffffffff
0x4e1 AND
0x4e2 PUSH1 0x1
0x4e4 DUP2
0x4e5 SWAP1
0x4e6 SSTORE
0x4e7 POP
0x4e8 PUSH1 0x40
0x4ea DUP1
0x4eb MLOAD
0x4ec SWAP1
0x4ed DUP2
0x4ee ADD
0x4ef PUSH1 0x40
0x4f1 MSTORE
0x4f2 DUP1
0x4f3 PUSH1 0x3
0x4f5 DUP2
0x4f6 MSTORE
0x4f7 PUSH1 0x20
0x4f9 ADD
0x4fa PUSH32 0x77696e0000000000000000000000000000000000000000000000000000000000
0x51b DUP2
0x51c MSTORE
0x51d POP
0x51e PUSH1 0x2
0x520 SWAP1
0x521 DUP1
0x522 MLOAD
0x523 SWAP1
0x524 PUSH1 0x20
0x526 ADD
0x527 SWAP1
0x528 PUSH2 0x532
0x52b SWAP3
0x52c SWAP2
0x52d SWAP1
0x52e PUSH2 0x845
0x531 JUMP
---
0x4ce: JUMPDEST 
0x4d0: V316 = 0xffffffffffffffffffffffffffffffff
0x4e1: V317 = AND 0xffffffffffffffffffffffffffffffff V268
0x4e2: V318 = 0x1
0x4e6: S[0x1] = V317
0x4e8: V319 = 0x40
0x4eb: V320 = M[0x40]
0x4ee: V321 = ADD V320 0x40
0x4ef: V322 = 0x40
0x4f1: M[0x40] = V321
0x4f3: V323 = 0x3
0x4f6: M[V320] = 0x3
0x4f7: V324 = 0x20
0x4f9: V325 = ADD 0x20 V320
0x4fa: V326 = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x51c: M[V325] = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x51e: V327 = 0x2
0x522: V328 = M[V320]
0x524: V329 = 0x20
0x526: V330 = ADD 0x20 V320
0x528: V331 = 0x532
0x52e: V332 = 0x845
0x531: JUMP 0x845
---
Entry stack: [V11, 0xcf, V268, V284, V521]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x532, 0x2, V330, V328]
Exit stack: [V11, 0xcf, V268, V284, V521, 0x532, 0x2, V330, V328]

================================

Block 0x532
[0x532:0x57e]
---
Predecessors: [0x8c1]
Successors: [0x57f]
---
0x532 JUMPDEST
0x533 POP
0x534 CALLER
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b PUSH2 0x8fc
0x54e PUSH1 0x2
0x550 DUP6
0x551 MUL
0x552 PUSH16 0xffffffffffffffffffffffffffffffff
0x563 AND
0x564 SWAP1
0x565 DUP2
0x566 ISZERO
0x567 MUL
0x568 SWAP1
0x569 PUSH1 0x40
0x56b MLOAD
0x56c PUSH1 0x0
0x56e PUSH1 0x40
0x570 MLOAD
0x571 DUP1
0x572 DUP4
0x573 SUB
0x574 DUP2
0x575 DUP6
0x576 DUP9
0x577 DUP9
0x578 CALL
0x579 SWAP4
0x57a POP
0x57b POP
0x57c POP
0x57d POP
0x57e POP
---
0x532: JUMPDEST 
0x534: V333 = CALLER
0x535: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x54b: V336 = 0x8fc
0x54e: V337 = 0x2
0x551: V338 = MUL S3 0x2
0x552: V339 = 0xffffffffffffffffffffffffffffffff
0x563: V340 = AND 0xffffffffffffffffffffffffffffffff V338
0x566: V341 = ISZERO V340
0x567: V342 = MUL V341 0x8fc
0x569: V343 = 0x40
0x56b: V344 = M[0x40]
0x56c: V345 = 0x0
0x56e: V346 = 0x40
0x570: V347 = M[0x40]
0x573: V348 = SUB V344 V347
0x578: V349 = CALL V342 V335 V340 V347 V348 V347 0x0
---
Entry stack: [V11, 0xcf, S3, S2, S1, 0x2]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V11, 0xcf, S3, S2, S1]

================================

Block 0x57f
[0x57f:0x583]
---
Predecessors: [0x27e, 0x356, 0x3ee, 0x4c8, 0x532]
Successors: [0xcf]
---
0x57f JUMPDEST
0x580 POP
0x581 POP
0x582 POP
0x583 JUMP
---
0x57f: JUMPDEST 
0x583: JUMP 0xcf
---
Entry stack: [V11, 0xcf, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x584
[0x584:0x58d]
---
Predecessors: [0xdc]
Successors: [0xe4]
---
0x584 JUMPDEST
0x585 PUSH1 0x0
0x587 PUSH1 0x3
0x589 SLOAD
0x58a SWAP1
0x58b POP
0x58c SWAP1
0x58d JUMP
---
0x584: JUMPDEST 
0x585: V350 = 0x0
0x587: V351 = 0x3
0x589: V352 = S[0x3]
0x58d: JUMP 0xe4
---
Entry stack: [V11, 0xe4]
Stack pops: 1
Stack additions: [V352]
Exit stack: [V11, V352]

================================

Block 0x58e
[0x58e:0x5e3]
---
Predecessors: [0x105]
Successors: [0x5e4, 0x61d]
---
0x58e JUMPDEST
0x58f PUSH1 0x0
0x591 DUP1
0x592 SWAP1
0x593 SLOAD
0x594 SWAP1
0x595 PUSH2 0x100
0x598 EXP
0x599 SWAP1
0x59a DIV
0x59b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b0 AND
0x5b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c6 AND
0x5c7 CALLER
0x5c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dd AND
0x5de EQ
0x5df ISZERO
0x5e0 PUSH2 0x61d
0x5e3 JUMPI
---
0x58e: JUMPDEST 
0x58f: V353 = 0x0
0x593: V354 = S[0x0]
0x595: V355 = 0x100
0x598: V356 = EXP 0x100 0x0
0x59a: V357 = DIV V354 0x1
0x59b: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b0: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x5b1: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x5c7: V362 = CALLER
0x5c8: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x5de: V365 = EQ V364 V361
0x5df: V366 = ISZERO V365
0x5e0: V367 = 0x61d
0x5e3: JUMPI 0x61d V366
---
Entry stack: [V11, 0x10d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10d]

================================

Block 0x5e4
[0x5e4:0x61c]
---
Predecessors: [0x58e]
Successors: []
---
0x5e4 PUSH1 0x0
0x5e6 DUP1
0x5e7 SWAP1
0x5e8 SLOAD
0x5e9 SWAP1
0x5ea PUSH2 0x100
0x5ed EXP
0x5ee SWAP1
0x5ef DIV
0x5f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x605 AND
0x606 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61b AND
0x61c SELFDESTRUCT
---
0x5e4: V368 = 0x0
0x5e8: V369 = S[0x0]
0x5ea: V370 = 0x100
0x5ed: V371 = EXP 0x100 0x0
0x5ef: V372 = DIV V369 0x1
0x5f0: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x605: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x606: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x61b: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x61c: SELFDESTRUCT V376
---
Entry stack: [V11, 0x10d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10d]

================================

Block 0x61d
[0x61d:0x61e]
---
Predecessors: [0x58e]
Successors: [0x10d]
---
0x61d JUMPDEST
0x61e JUMP
---
0x61d: JUMPDEST 
0x61e: JUMP 0x10d
---
Entry stack: [V11, 0x10d]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x61f
[0x61f:0x63d]
---
Predecessors: [0x11a]
Successors: [0x122]
---
0x61f JUMPDEST
0x620 PUSH1 0x0
0x622 ADDRESS
0x623 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x638 AND
0x639 BALANCE
0x63a SWAP1
0x63b POP
0x63c SWAP1
0x63d JUMP
---
0x61f: JUMPDEST 
0x620: V377 = 0x0
0x622: V378 = ADDRESS
0x623: V379 = 0xffffffffffffffffffffffffffffffffffffffff
0x638: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x639: V381 = BALANCE V380
0x63d: JUMP 0x122
---
Entry stack: [V11, 0x122]
Stack pops: 1
Stack additions: [V381]
Exit stack: [V11, V381]

================================

Block 0x63e
[0x63e:0x647]
---
Predecessors: [0x143]
Successors: [0x14b]
---
0x63e JUMPDEST
0x63f PUSH1 0x0
0x641 PUSH1 0x4
0x643 SLOAD
0x644 SWAP1
0x645 POP
0x646 SWAP1
0x647 JUMP
---
0x63e: JUMPDEST 
0x63f: V382 = 0x0
0x641: V383 = 0x4
0x643: V384 = S[0x4]
0x647: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: [V384]
Exit stack: [V11, V384]

================================

Block 0x648
[0x648:0x64f]
---
Predecessors: [0x174]
Successors: [0x8c5]
---
0x648 JUMPDEST
0x649 PUSH2 0x650
0x64c PUSH2 0x8c5
0x64f JUMP
---
0x648: JUMPDEST 
0x649: V385 = 0x650
0x64c: V386 = 0x8c5
0x64f: JUMP 0x8c5
---
Entry stack: [V11, 0x17c]
Stack pops: 0
Stack additions: [0x650]
Exit stack: [V11, 0x17c, 0x650]

================================

Block 0x650
[0x650:0x69f]
---
Predecessors: [0x8c5]
Successors: [0x6a0, 0x6e6]
---
0x650 JUMPDEST
0x651 PUSH1 0x2
0x653 DUP1
0x654 SLOAD
0x655 PUSH1 0x1
0x657 DUP2
0x658 PUSH1 0x1
0x65a AND
0x65b ISZERO
0x65c PUSH2 0x100
0x65f MUL
0x660 SUB
0x661 AND
0x662 PUSH1 0x2
0x664 SWAP1
0x665 DIV
0x666 DUP1
0x667 PUSH1 0x1f
0x669 ADD
0x66a PUSH1 0x20
0x66c DUP1
0x66d SWAP2
0x66e DIV
0x66f MUL
0x670 PUSH1 0x20
0x672 ADD
0x673 PUSH1 0x40
0x675 MLOAD
0x676 SWAP1
0x677 DUP2
0x678 ADD
0x679 PUSH1 0x40
0x67b MSTORE
0x67c DUP1
0x67d SWAP3
0x67e SWAP2
0x67f SWAP1
0x680 DUP2
0x681 DUP2
0x682 MSTORE
0x683 PUSH1 0x20
0x685 ADD
0x686 DUP3
0x687 DUP1
0x688 SLOAD
0x689 PUSH1 0x1
0x68b DUP2
0x68c PUSH1 0x1
0x68e AND
0x68f ISZERO
0x690 PUSH2 0x100
0x693 MUL
0x694 SUB
0x695 AND
0x696 PUSH1 0x2
0x698 SWAP1
0x699 DIV
0x69a DUP1
0x69b ISZERO
0x69c PUSH2 0x6e6
0x69f JUMPI
---
0x650: JUMPDEST 
0x651: V387 = 0x2
0x654: V388 = S[0x2]
0x655: V389 = 0x1
0x658: V390 = 0x1
0x65a: V391 = AND 0x1 V388
0x65b: V392 = ISZERO V391
0x65c: V393 = 0x100
0x65f: V394 = MUL 0x100 V392
0x660: V395 = SUB V394 0x1
0x661: V396 = AND V395 V388
0x662: V397 = 0x2
0x665: V398 = DIV V396 0x2
0x667: V399 = 0x1f
0x669: V400 = ADD 0x1f V398
0x66a: V401 = 0x20
0x66e: V402 = DIV V400 0x20
0x66f: V403 = MUL V402 0x20
0x670: V404 = 0x20
0x672: V405 = ADD 0x20 V403
0x673: V406 = 0x40
0x675: V407 = M[0x40]
0x678: V408 = ADD V407 V405
0x679: V409 = 0x40
0x67b: M[0x40] = V408
0x682: M[V407] = V398
0x683: V410 = 0x20
0x685: V411 = ADD 0x20 V407
0x688: V412 = S[0x2]
0x689: V413 = 0x1
0x68c: V414 = 0x1
0x68e: V415 = AND 0x1 V412
0x68f: V416 = ISZERO V415
0x690: V417 = 0x100
0x693: V418 = MUL 0x100 V416
0x694: V419 = SUB V418 0x1
0x695: V420 = AND V419 V412
0x696: V421 = 0x2
0x699: V422 = DIV V420 0x2
0x69b: V423 = ISZERO V422
0x69c: V424 = 0x6e6
0x69f: JUMPI 0x6e6 V423
---
Entry stack: [V11, 0x17c, V571]
Stack pops: 0
Stack additions: [V407, 0x2, V398, V411, 0x2, V422]
Exit stack: [V11, 0x17c, V571, V407, 0x2, V398, V411, 0x2, V422]

================================

Block 0x6a0
[0x6a0:0x6a7]
---
Predecessors: [0x650]
Successors: [0x6a8, 0x6bb]
---
0x6a0 DUP1
0x6a1 PUSH1 0x1f
0x6a3 LT
0x6a4 PUSH2 0x6bb
0x6a7 JUMPI
---
0x6a1: V425 = 0x1f
0x6a3: V426 = LT 0x1f V422
0x6a4: V427 = 0x6bb
0x6a7: JUMPI 0x6bb V426
---
Entry stack: [V11, 0x17c, V571, V407, 0x2, V398, V411, 0x2, V422]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x17c, V571, V407, 0x2, V398, V411, 0x2, V422]

================================

Block 0x6a8
[0x6a8:0x6ba]
---
Predecessors: [0x6a0]
Successors: [0x6e6]
---
0x6a8 PUSH2 0x100
0x6ab DUP1
0x6ac DUP4
0x6ad SLOAD
0x6ae DIV
0x6af MUL
0x6b0 DUP4
0x6b1 MSTORE
0x6b2 SWAP2
0x6b3 PUSH1 0x20
0x6b5 ADD
0x6b6 SWAP2
0x6b7 PUSH2 0x6e6
0x6ba JUMP
---
0x6a8: V428 = 0x100
0x6ad: V429 = S[0x2]
0x6ae: V430 = DIV V429 0x100
0x6af: V431 = MUL V430 0x100
0x6b1: M[V411] = V431
0x6b3: V432 = 0x20
0x6b5: V433 = ADD 0x20 V411
0x6b7: V434 = 0x6e6
0x6ba: JUMP 0x6e6
---
Entry stack: [V11, 0x17c, V571, V407, 0x2, V398, V411, 0x2, V422]
Stack pops: 3
Stack additions: [V433, S1, S0]
Exit stack: [V11, 0x17c, V571, V407, 0x2, V398, V433, 0x2, V422]

================================

Block 0x6bb
[0x6bb:0x6c8]
---
Predecessors: [0x6a0]
Successors: [0x6c9]
---
0x6bb JUMPDEST
0x6bc DUP3
0x6bd ADD
0x6be SWAP2
0x6bf SWAP1
0x6c0 PUSH1 0x0
0x6c2 MSTORE
0x6c3 PUSH1 0x20
0x6c5 PUSH1 0x0
0x6c7 SHA3
0x6c8 SWAP1
---
0x6bb: JUMPDEST 
0x6bd: V435 = ADD V411 V422
0x6c0: V436 = 0x0
0x6c2: M[0x0] = 0x2
0x6c3: V437 = 0x20
0x6c5: V438 = 0x0
0x6c7: V439 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x17c, V571, V407, 0x2, V398, V411, 0x2, V422]
Stack pops: 3
Stack additions: [V435, V439, S2]
Exit stack: [V11, 0x17c, V571, V407, 0x2, V398, V435, V439, V411]

================================

Block 0x6c9
[0x6c9:0x6dc]
---
Predecessors: [0x6bb, 0x6c9]
Successors: [0x6c9, 0x6dd]
---
0x6c9 JUMPDEST
0x6ca DUP2
0x6cb SLOAD
0x6cc DUP2
0x6cd MSTORE
0x6ce SWAP1
0x6cf PUSH1 0x1
0x6d1 ADD
0x6d2 SWAP1
0x6d3 PUSH1 0x20
0x6d5 ADD
0x6d6 DUP1
0x6d7 DUP4
0x6d8 GT
0x6d9 PUSH2 0x6c9
0x6dc JUMPI
---
0x6c9: JUMPDEST 
0x6cb: V440 = S[S1]
0x6cd: M[S0] = V440
0x6cf: V441 = 0x1
0x6d1: V442 = ADD 0x1 S1
0x6d3: V443 = 0x20
0x6d5: V444 = ADD 0x20 S0
0x6d8: V445 = GT V435 V444
0x6d9: V446 = 0x6c9
0x6dc: JUMPI 0x6c9 V445
---
Entry stack: [V11, 0x17c, V571, V407, 0x2, V398, V435, S1, S0]
Stack pops: 3
Stack additions: [S2, V442, V444]
Exit stack: [V11, 0x17c, V571, V407, 0x2, V398, V435, V442, V444]

================================

Block 0x6dd
[0x6dd:0x6e5]
---
Predecessors: [0x6c9]
Successors: [0x6e6]
---
0x6dd DUP3
0x6de SWAP1
0x6df SUB
0x6e0 PUSH1 0x1f
0x6e2 AND
0x6e3 DUP3
0x6e4 ADD
0x6e5 SWAP2
---
0x6df: V447 = SUB V444 V435
0x6e0: V448 = 0x1f
0x6e2: V449 = AND 0x1f V447
0x6e4: V450 = ADD V435 V449
---
Entry stack: [V11, 0x17c, V571, V407, 0x2, V398, V435, V442, V444]
Stack pops: 3
Stack additions: [V450, S1, S2]
Exit stack: [V11, 0x17c, V571, V407, 0x2, V398, V450, V442, V435]

================================

Block 0x6e6
[0x6e6:0x6ef]
---
Predecessors: [0x650, 0x6a8, 0x6dd]
Successors: [0x17c]
---
0x6e6 JUMPDEST
0x6e7 POP
0x6e8 POP
0x6e9 POP
0x6ea POP
0x6eb POP
0x6ec SWAP1
0x6ed POP
0x6ee SWAP1
0x6ef JUMP
---
0x6e6: JUMPDEST 
0x6ef: JUMP 0x17c
---
Entry stack: [V11, 0x17c, V571, V407, 0x2, V398, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V407]

================================

Block 0x6f0
[0x6f0:0x77a]
---
Predecessors: [0x202]
Successors: [0x845]
---
0x6f0 JUMPDEST
0x6f1 CALLER
0x6f2 PUSH1 0x0
0x6f4 DUP1
0x6f5 PUSH2 0x100
0x6f8 EXP
0x6f9 DUP2
0x6fa SLOAD
0x6fb DUP2
0x6fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x711 MUL
0x712 NOT
0x713 AND
0x714 SWAP1
0x715 DUP4
0x716 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72b AND
0x72c MUL
0x72d OR
0x72e SWAP1
0x72f SSTORE
0x730 POP
0x731 PUSH1 0x40
0x733 DUP1
0x734 MLOAD
0x735 SWAP1
0x736 DUP2
0x737 ADD
0x738 PUSH1 0x40
0x73a MSTORE
0x73b DUP1
0x73c PUSH1 0xd
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 ADD
0x743 PUSH32 0x6e6f207761676572732079657400000000000000000000000000000000000000
0x764 DUP2
0x765 MSTORE
0x766 POP
0x767 PUSH1 0x2
0x769 SWAP1
0x76a DUP1
0x76b MLOAD
0x76c SWAP1
0x76d PUSH1 0x20
0x76f ADD
0x770 SWAP1
0x771 PUSH2 0x77b
0x774 SWAP3
0x775 SWAP2
0x776 SWAP1
0x777 PUSH2 0x845
0x77a JUMP
---
0x6f0: JUMPDEST 
0x6f1: V451 = CALLER
0x6f2: V452 = 0x0
0x6f5: V453 = 0x100
0x6f8: V454 = EXP 0x100 0x0
0x6fa: V455 = S[0x0]
0x6fc: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x711: V457 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x712: V458 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x713: V459 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V455
0x716: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x72b: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x72c: V462 = MUL V461 0x1
0x72d: V463 = OR V462 V459
0x72f: S[0x0] = V463
0x731: V464 = 0x40
0x734: V465 = M[0x40]
0x737: V466 = ADD V465 0x40
0x738: V467 = 0x40
0x73a: M[0x40] = V466
0x73c: V468 = 0xd
0x73f: M[V465] = 0xd
0x740: V469 = 0x20
0x742: V470 = ADD 0x20 V465
0x743: V471 = 0x6e6f207761676572732079657400000000000000000000000000000000000000
0x765: M[V470] = 0x6e6f207761676572732079657400000000000000000000000000000000000000
0x767: V472 = 0x2
0x76b: V473 = M[V465]
0x76d: V474 = 0x20
0x76f: V475 = ADD 0x20 V465
0x771: V476 = 0x77b
0x777: V477 = 0x845
0x77a: JUMP 0x845
---
Entry stack: [V11, 0x20a]
Stack pops: 0
Stack additions: [0x77b, 0x2, V475, V473]
Exit stack: [V11, 0x20a, 0x77b, 0x2, V475, V473]

================================

Block 0x77b
[0x77b:0x785]
---
Predecessors: [0x8c1]
Successors: [0x20a]
---
0x77b JUMPDEST
0x77c POP
0x77d PUSH1 0x0
0x77f PUSH1 0x1
0x781 DUP2
0x782 SWAP1
0x783 SSTORE
0x784 POP
0x785 JUMP
---
0x77b: JUMPDEST 
0x77d: V478 = 0x0
0x77f: V479 = 0x1
0x783: S[0x1] = 0x0
0x785: JUMP S1
---
Entry stack: [V11, 0xcf, S3, S2, S1, 0x2]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xcf, S3, S2]

================================

Block 0x786
[0x786:0x844]
---
Predecessors: [0x3fc]
Successors: [0x42b]
---
0x786 JUMPDEST
0x787 PUSH1 0x0
0x789 DIFFICULTY
0x78a COINBASE
0x78b TIMESTAMP
0x78c PUSH1 0x4
0x78e SLOAD
0x78f DUP6
0x790 PUSH1 0x40
0x792 MLOAD
0x793 DUP1
0x794 DUP7
0x795 DUP2
0x796 MSTORE
0x797 PUSH1 0x20
0x799 ADD
0x79a DUP6
0x79b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b0 AND
0x7b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c6 AND
0x7c7 PUSH13 0x1000000000000000000000000
0x7d5 MUL
0x7d6 DUP2
0x7d7 MSTORE
0x7d8 PUSH1 0x14
0x7da ADD
0x7db DUP5
0x7dc DUP2
0x7dd MSTORE
0x7de PUSH1 0x20
0x7e0 ADD
0x7e1 DUP4
0x7e2 PUSH1 0x0
0x7e4 NOT
0x7e5 AND
0x7e6 PUSH1 0x0
0x7e8 NOT
0x7e9 AND
0x7ea DUP2
0x7eb MSTORE
0x7ec PUSH1 0x20
0x7ee ADD
0x7ef DUP3
0x7f0 PUSH16 0xffffffffffffffffffffffffffffffff
0x801 AND
0x802 PUSH16 0xffffffffffffffffffffffffffffffff
0x813 AND
0x814 PUSH17 0x100000000000000000000000000000000
0x826 MUL
0x827 DUP2
0x828 MSTORE
0x829 PUSH1 0x10
0x82b ADD
0x82c SWAP6
0x82d POP
0x82e POP
0x82f POP
0x830 POP
0x831 POP
0x832 POP
0x833 PUSH1 0x40
0x835 MLOAD
0x836 DUP1
0x837 SWAP2
0x838 SUB
0x839 SWAP1
0x83a SHA3
0x83b PUSH1 0x1
0x83d SWAP1
0x83e DIV
0x83f SWAP1
0x840 POP
0x841 SWAP2
0x842 SWAP1
0x843 POP
0x844 JUMP
---
0x786: JUMPDEST 
0x787: V480 = 0x0
0x789: V481 = DIFFICULTY
0x78a: V482 = COINBASE
0x78b: V483 = TIMESTAMP
0x78c: V484 = 0x4
0x78e: V485 = S[0x4]
0x790: V486 = 0x40
0x792: V487 = M[0x40]
0x796: M[V487] = V481
0x797: V488 = 0x20
0x799: V489 = ADD 0x20 V487
0x79b: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b0: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x7b1: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x7c7: V494 = 0x1000000000000000000000000
0x7d5: V495 = MUL 0x1000000000000000000000000 V493
0x7d7: M[V489] = V495
0x7d8: V496 = 0x14
0x7da: V497 = ADD 0x14 V489
0x7dd: M[V497] = V483
0x7de: V498 = 0x20
0x7e0: V499 = ADD 0x20 V497
0x7e2: V500 = 0x0
0x7e4: V501 = NOT 0x0
0x7e5: V502 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V485
0x7e6: V503 = 0x0
0x7e8: V504 = NOT 0x0
0x7e9: V505 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V502
0x7eb: M[V499] = V505
0x7ec: V506 = 0x20
0x7ee: V507 = ADD 0x20 V499
0x7f0: V508 = 0xffffffffffffffffffffffffffffffff
0x801: V509 = AND 0xffffffffffffffffffffffffffffffff V284
0x802: V510 = 0xffffffffffffffffffffffffffffffff
0x813: V511 = AND 0xffffffffffffffffffffffffffffffff V509
0x814: V512 = 0x100000000000000000000000000000000
0x826: V513 = MUL 0x100000000000000000000000000000000 V511
0x828: M[V507] = V513
0x829: V514 = 0x10
0x82b: V515 = ADD 0x10 V507
0x833: V516 = 0x40
0x835: V517 = M[0x40]
0x838: V518 = SUB V515 V517
0x83a: V519 = SHA3 V517 V518
0x83b: V520 = 0x1
0x83e: V521 = DIV V519 0x1
0x844: JUMP 0x42b
---
Entry stack: [V11, 0xcf, V268, V284, 0x0, 0x42b, V284]
Stack pops: 2
Stack additions: [V521]
Exit stack: [V11, 0xcf, V268, V284, 0x0, V521]

================================

Block 0x845
[0x845:0x875]
---
Predecessors: [0x234, 0x2e5, 0x3a4, 0x443, 0x4ce, 0x6f0]
Successors: [0x876, 0x886]
---
0x845 JUMPDEST
0x846 DUP3
0x847 DUP1
0x848 SLOAD
0x849 PUSH1 0x1
0x84b DUP2
0x84c PUSH1 0x1
0x84e AND
0x84f ISZERO
0x850 PUSH2 0x100
0x853 MUL
0x854 SUB
0x855 AND
0x856 PUSH1 0x2
0x858 SWAP1
0x859 DIV
0x85a SWAP1
0x85b PUSH1 0x0
0x85d MSTORE
0x85e PUSH1 0x20
0x860 PUSH1 0x0
0x862 SHA3
0x863 SWAP1
0x864 PUSH1 0x1f
0x866 ADD
0x867 PUSH1 0x20
0x869 SWAP1
0x86a DIV
0x86b DUP2
0x86c ADD
0x86d SWAP3
0x86e DUP3
0x86f PUSH1 0x1f
0x871 LT
0x872 PUSH2 0x886
0x875 JUMPI
---
0x845: JUMPDEST 
0x848: V522 = S[0x2]
0x849: V523 = 0x1
0x84c: V524 = 0x1
0x84e: V525 = AND 0x1 V522
0x84f: V526 = ISZERO V525
0x850: V527 = 0x100
0x853: V528 = MUL 0x100 V526
0x854: V529 = SUB V528 0x1
0x855: V530 = AND V529 V522
0x856: V531 = 0x2
0x859: V532 = DIV V530 0x2
0x85b: V533 = 0x0
0x85d: M[0x0] = 0x2
0x85e: V534 = 0x20
0x860: V535 = 0x0
0x862: V536 = SHA3 0x0 0x20
0x864: V537 = 0x1f
0x866: V538 = ADD 0x1f V532
0x867: V539 = 0x20
0x86a: V540 = DIV V538 0x20
0x86c: V541 = ADD V536 V540
0x86f: V542 = 0x1f
0x871: V543 = LT 0x1f S0
0x872: V544 = 0x886
0x875: JUMPI 0x886 V543
---
Entry stack: [V11, 0xcf, S6, S5, S4, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S1, S0]
Stack pops: 3
Stack additions: [S2, V541, S0, V536, S1]
Exit stack: [V11, 0xcf, S6, S5, S4, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, V541, S0, V536, S1]

================================

Block 0x876
[0x876:0x885]
---
Predecessors: [0x845]
Successors: [0x8b4]
---
0x876 DUP1
0x877 MLOAD
0x878 PUSH1 0xff
0x87a NOT
0x87b AND
0x87c DUP4
0x87d DUP1
0x87e ADD
0x87f OR
0x880 DUP6
0x881 SSTORE
0x882 PUSH2 0x8b4
0x885 JUMP
---
0x877: V545 = M[S0]
0x878: V546 = 0xff
0x87a: V547 = NOT 0xff
0x87b: V548 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V545
0x87e: V549 = ADD S2 S2
0x87f: V550 = OR V549 V548
0x881: S[0x2] = V550
0x882: V551 = 0x8b4
0x885: JUMP 0x8b4
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, V541, S2, V536, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, V541, S2, V536, S0]

================================

Block 0x886
[0x886:0x894]
---
Predecessors: [0x845]
Successors: [0x895, 0x8b4]
---
0x886 JUMPDEST
0x887 DUP3
0x888 DUP1
0x889 ADD
0x88a PUSH1 0x1
0x88c ADD
0x88d DUP6
0x88e SSTORE
0x88f DUP3
0x890 ISZERO
0x891 PUSH2 0x8b4
0x894 JUMPI
---
0x886: JUMPDEST 
0x889: V552 = ADD S2 S2
0x88a: V553 = 0x1
0x88c: V554 = ADD 0x1 V552
0x88e: S[0x2] = V554
0x890: V555 = ISZERO S2
0x891: V556 = 0x8b4
0x894: JUMPI 0x8b4 V555
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, V541, S2, V536, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, V541, S2, V536, S0]

================================

Block 0x895
[0x895:0x897]
---
Predecessors: [0x886]
Successors: [0x898]
---
0x895 SWAP2
0x896 DUP3
0x897 ADD
---
0x897: V557 = ADD S0 S2
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, V541, S2, V536, S0]
Stack pops: 3
Stack additions: [S0, S1, V557]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, V541, S0, V536, V557]

================================

Block 0x898
[0x898:0x8a0]
---
Predecessors: [0x895, 0x8a1]
Successors: [0x8a1, 0x8b3]
---
0x898 JUMPDEST
0x899 DUP3
0x89a DUP2
0x89b GT
0x89c ISZERO
0x89d PUSH2 0x8b3
0x8a0 JUMPI
---
0x898: JUMPDEST 
0x89b: V558 = GT V557 S2
0x89c: V559 = ISZERO V558
0x89d: V560 = 0x8b3
0x8a0: JUMPI 0x8b3 V559
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S3, S2, S1, V557]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S3, S2, S1, V557]

================================

Block 0x8a1
[0x8a1:0x8b2]
---
Predecessors: [0x898]
Successors: [0x898]
---
0x8a1 DUP3
0x8a2 MLOAD
0x8a3 DUP3
0x8a4 SSTORE
0x8a5 SWAP2
0x8a6 PUSH1 0x20
0x8a8 ADD
0x8a9 SWAP2
0x8aa SWAP1
0x8ab PUSH1 0x1
0x8ad ADD
0x8ae SWAP1
0x8af PUSH2 0x898
0x8b2 JUMP
---
0x8a2: V561 = M[S2]
0x8a4: S[S1] = V561
0x8a6: V562 = 0x20
0x8a8: V563 = ADD 0x20 S2
0x8ab: V564 = 0x1
0x8ad: V565 = ADD 0x1 S1
0x8af: V566 = 0x898
0x8b2: JUMP 0x898
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S3, S2, S1, V557]
Stack pops: 3
Stack additions: [V563, V565, S0]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S3, V563, V565, V557]

================================

Block 0x8b3
[0x8b3:0x8b3]
---
Predecessors: [0x898]
Successors: [0x8b4]
---
0x8b3 JUMPDEST
---
0x8b3: JUMPDEST 
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S3, S2, S1, V557]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S3, S2, S1, V557]

================================

Block 0x8b4
[0x8b4:0x8c0]
---
Predecessors: [0x876, 0x886, 0x8b3]
Successors: [0x8d9]
---
0x8b4 JUMPDEST
0x8b5 POP
0x8b6 SWAP1
0x8b7 POP
0x8b8 PUSH2 0x8c1
0x8bb SWAP2
0x8bc SWAP1
0x8bd PUSH2 0x8d9
0x8c0 JUMP
---
0x8b4: JUMPDEST 
0x8b8: V567 = 0x8c1
0x8bd: V568 = 0x8d9
0x8c0: JUMP 0x8d9
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x8c1, S3, S1]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, S3, S1]

================================

Block 0x8c1
[0x8c1:0x8c4]
---
Predecessors: [0x8fb]
Successors: [0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b]
---
0x8c1 JUMPDEST
0x8c2 POP
0x8c3 SWAP1
0x8c4 JUMP
---
0x8c1: JUMPDEST 
0x8c4: JUMP {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}
---
Entry stack: [V11, 0xcf, S5, S4, S3, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xcf, S5, S4, S3, 0x2]

================================

Block 0x8c5
[0x8c5:0x8d8]
---
Predecessors: [0x648]
Successors: [0x650]
---
0x8c5 JUMPDEST
0x8c6 PUSH1 0x20
0x8c8 PUSH1 0x40
0x8ca MLOAD
0x8cb SWAP1
0x8cc DUP2
0x8cd ADD
0x8ce PUSH1 0x40
0x8d0 MSTORE
0x8d1 DUP1
0x8d2 PUSH1 0x0
0x8d4 DUP2
0x8d5 MSTORE
0x8d6 POP
0x8d7 SWAP1
0x8d8 JUMP
---
0x8c5: JUMPDEST 
0x8c6: V569 = 0x20
0x8c8: V570 = 0x40
0x8ca: V571 = M[0x40]
0x8cd: V572 = ADD V571 0x20
0x8ce: V573 = 0x40
0x8d0: M[0x40] = V572
0x8d2: V574 = 0x0
0x8d5: M[V571] = 0x0
0x8d8: JUMP 0x650
---
Entry stack: [V11, 0x17c, 0x650]
Stack pops: 1
Stack additions: [V571]
Exit stack: [V11, 0x17c, V571]

================================

Block 0x8d9
[0x8d9:0x8de]
---
Predecessors: [0x8b4]
Successors: [0x8df]
---
0x8d9 JUMPDEST
0x8da PUSH2 0x8fb
0x8dd SWAP2
0x8de SWAP1
---
0x8d9: JUMPDEST 
0x8da: V575 = 0x8fb
---
Entry stack: [V11, 0xcf, S7, S6, S5, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, S1, S0]
Stack pops: 2
Stack additions: [0x8fb, S1, S0]
Exit stack: [V11, 0xcf, S7, S6, S5, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, 0x8fb, S1, S0]

================================

Block 0x8df
[0x8df:0x8e7]
---
Predecessors: [0x8d9, 0x8e8]
Successors: [0x8e8, 0x8f7]
---
0x8df JUMPDEST
0x8e0 DUP1
0x8e1 DUP3
0x8e2 GT
0x8e3 ISZERO
0x8e4 PUSH2 0x8f7
0x8e7 JUMPI
---
0x8df: JUMPDEST 
0x8e2: V576 = GT S1 S0
0x8e3: V577 = ISZERO V576
0x8e4: V578 = 0x8f7
0x8e7: JUMPI 0x8f7 V577
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, 0x8fb, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, 0x8fb, S1, S0]

================================

Block 0x8e8
[0x8e8:0x8f6]
---
Predecessors: [0x8df]
Successors: [0x8df]
---
0x8e8 PUSH1 0x0
0x8ea DUP2
0x8eb PUSH1 0x0
0x8ed SWAP1
0x8ee SSTORE
0x8ef POP
0x8f0 PUSH1 0x1
0x8f2 ADD
0x8f3 PUSH2 0x8df
0x8f6 JUMP
---
0x8e8: V579 = 0x0
0x8eb: V580 = 0x0
0x8ee: S[S0] = 0x0
0x8f0: V581 = 0x1
0x8f2: V582 = ADD 0x1 S0
0x8f3: V583 = 0x8df
0x8f6: JUMP 0x8df
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, 0x8fb, S1, S0]
Stack pops: 1
Stack additions: [V582]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, 0x8fb, S1, V582]

================================

Block 0x8f7
[0x8f7:0x8fa]
---
Predecessors: [0x8df]
Successors: [0x8fb]
---
0x8f7 JUMPDEST
0x8f8 POP
0x8f9 SWAP1
0x8fa JUMP
---
0x8f7: JUMPDEST 
0x8fa: JUMP 0x8fb
---
Entry stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, 0x8fb, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xcf, S8, S7, S6, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, S1]

================================

Block 0x8fb
[0x8fb:0x8fd]
---
Predecessors: [0x8f7]
Successors: [0x8c1]
---
0x8fb JUMPDEST
0x8fc SWAP1
0x8fd JUMP
---
0x8fb: JUMPDEST 
0x8fd: JUMP 0x8c1
---
Entry stack: [V11, 0xcf, S6, S5, S4, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, 0x8c1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xcf, S6, S5, S4, {0x27e, 0x356, 0x3ee, 0x4c8, 0x532, 0x77b}, 0x2, S0]

================================

Block 0x8fe
[0x8fe:0x929]
---
Predecessors: []
Successors: []
---
0x8fe STOP
0x8ff LOG1
0x900 PUSH6 0x627a7a723058
0x907 SHA3
0x908 MISSING 0xe4
0x909 EXTCODESIZE
0x90a CODECOPY
0x90b PUSH29 0xbea73f0b985592eb4e74d2e9d683d20e3ffcede9b9e88d50ef1ec31400
0x929 MISSING 0x29
---
0x8fe: STOP 
0x8ff: LOG S0 S1 S2
0x900: V584 = 0x627a7a723058
0x907: V585 = SHA3 0x627a7a723058 S3
0x908: MISSING 0xe4
0x909: V586 = EXTCODESIZE S0
0x90a: CODECOPY V586 S1 S2
0x90b: V587 = 0xbea73f0b985592eb4e74d2e9d683d20e3ffcede9b9e88d50ef1ec31400
0x929: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V585, 0xbea73f0b985592eb4e74d2e9d683d20e3ffcede9b9e88d50ef1ec31400]
Exit stack: []

================================

Function 0:
Public function signature: 0xefafd01
Entry block: 0x93
Exit block: 0xa6
Body: 0x93, 0x9a, 0x9e, 0xa6, 0x20c

Function 1:
Public function signature: 0x25d8dcf2
Entry block: 0xbc
Exit block: 0x43a
Body: 0xbc, 0xc3, 0xc7, 0xcf, 0x216, 0x234, 0x27e, 0x2c2, 0x2e5, 0x356, 0x39a, 0x3a4, 0x3ee, 0x3fc, 0x42b, 0x43a, 0x43b, 0x443, 0x4c8, 0x4ce, 0x532, 0x57f, 0x786

Function 2:
Public function signature: 0x34dbe44d
Entry block: 0xd1
Exit block: 0xe4
Body: 0xd1, 0xd8, 0xdc, 0xe4, 0x584

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xfa
Exit block: 0x10d
Body: 0xfa, 0x101, 0x105, 0x10d, 0x58e, 0x5e4, 0x61d

Function 4:
Public function signature: 0x5acce36b
Entry block: 0x10f
Exit block: 0x122
Body: 0x10f, 0x116, 0x11a, 0x122, 0x61f

Function 5:
Public function signature: 0x94c3fa2e
Entry block: 0x138
Exit block: 0x14b
Body: 0x138, 0x13f, 0x143, 0x14b, 0x63e

Function 6:
Public function signature: 0xcee6f93c
Entry block: 0x169
Exit block: 0x1e9
Body: 0x169, 0x170, 0x174, 0x17c, 0x1a1, 0x1aa, 0x1bc, 0x1d0, 0x1e9, 0x648, 0x650, 0x6a0, 0x6a8, 0x6bb, 0x6c9, 0x6dd, 0x6e6, 0x8c5

Function 7:
Public function signature: 0xd8589be3
Entry block: 0x1f7
Exit block: 0x20a
Body: 0x1f7, 0x1fe, 0x202, 0x20a, 0x6f0, 0x77b

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

Function 9:
Private function
Entry block: 0x845
Exit block: 0x8c1
Body: 0x845, 0x876, 0x886, 0x895, 0x898, 0x8a1, 0x8b3, 0x8b4, 0x8c1, 0x8d9, 0x8df, 0x8e8, 0x8f7, 0x8fb

