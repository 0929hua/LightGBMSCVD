Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x2bc]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x7da68f5
0x3a EQ
0x3b PUSH2 0x2bc
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x7da68f5
0x3a: V12 = EQ 0x7da68f5 V10
0x3b: V13 = 0x2bc
0x3e: JUMPI 0x2bc V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2d1]
---
0x3f DUP1
0x40 PUSH4 0x3ba0b9a9
0x45 EQ
0x46 PUSH2 0x2d1
0x49 JUMPI
---
0x40: V14 = 0x3ba0b9a9
0x45: V15 = EQ 0x3ba0b9a9 V10
0x46: V16 = 0x2d1
0x49: JUMPI 0x2d1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x2fa]
---
0x4a DUP1
0x4b PUSH4 0x41c0e1b5
0x50 EQ
0x51 PUSH2 0x2fa
0x54 JUMPI
---
0x4b: V17 = 0x41c0e1b5
0x50: V18 = EQ 0x41c0e1b5 V10
0x51: V19 = 0x2fa
0x54: JUMPI 0x2fa V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x30f]
---
0x55 DUP1
0x56 PUSH4 0x8da5cb5b
0x5b EQ
0x5c PUSH2 0x30f
0x5f JUMPI
---
0x56: V20 = 0x8da5cb5b
0x5b: V21 = EQ 0x8da5cb5b V10
0x5c: V22 = 0x30f
0x5f: JUMPI 0x30f V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x60]
---
Predecessors: [0x0, 0x55]
Successors: [0x61]
---
0x60 JUMPDEST
---
0x60: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6d]
---
Predecessors: [0x60]
Successors: [0x6e, 0x2b7]
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 PUSH1 0x0
0x67 CALLVALUE
0x68 GT
0x69 ISZERO
0x6a PUSH2 0x2b7
0x6d JUMPI
---
0x61: JUMPDEST 
0x62: V23 = 0x0
0x65: V24 = 0x0
0x67: V25 = CALLVALUE
0x68: V26 = GT V25 0x0
0x69: V27 = ISZERO V26
0x6a: V28 = 0x2b7
0x6d: JUMPI 0x2b7 V27
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x6e
[0x6e:0x7e]
---
Predecessors: [0x61]
Successors: [0x7f, 0x80]
---
0x6e PUSH1 0x0
0x70 SLOAD
0x71 PUSH5 0x2540be400
0x77 CALLVALUE
0x78 DUP2
0x79 ISZERO
0x7a ISZERO
0x7b PUSH2 0x80
0x7e JUMPI
---
0x6e: V29 = 0x0
0x70: V30 = S[0x0]
0x71: V31 = 0x2540be400
0x77: V32 = CALLVALUE
0x79: V33 = ISZERO 0x2540be400
0x7a: V34 = ISZERO 0x0
0x7b: V35 = 0x80
0x7e: JUMPI 0x80 0x1
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: [V30, 0x2540be400, V32]
Exit stack: [V10, 0x0, 0x0, V30, 0x2540be400, V32]

================================

Block 0x7f
[0x7f:0x7f]
---
Predecessors: [0x6e]
Successors: []
---
0x7f INVALID
---
0x7f: INVALID 
---
Entry stack: [V10, 0x0, 0x0, V30, 0x2540be400, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0, V30, 0x2540be400, V32]

================================

Block 0x80
[0x80:0x144]
---
Predecessors: [0x6e]
Successors: [0x145, 0x149]
---
0x80 JUMPDEST
0x81 DIV
0x82 MUL
0x83 SWAP2
0x84 POP
0x85 PUSH1 0x1
0x87 PUSH1 0x0
0x89 SWAP1
0x8a SLOAD
0x8b SWAP1
0x8c PUSH2 0x100
0x8f EXP
0x90 SWAP1
0x91 DIV
0x92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7 AND
0xa8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd AND
0xbe PUSH4 0x70a08231
0xc3 ADDRESS
0xc4 PUSH1 0x0
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 PUSH1 0x20
0xcb ADD
0xcc MSTORE
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP3
0xd1 PUSH4 0xffffffff
0xd6 AND
0xd7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf5 MUL
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x4
0xfa ADD
0xfb DUP1
0xfc DUP3
0xfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112 AND
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP2
0x12f POP
0x130 POP
0x131 PUSH1 0x20
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 DUP4
0x138 SUB
0x139 DUP2
0x13a PUSH1 0x0
0x13c DUP8
0x13d DUP1
0x13e EXTCODESIZE
0x13f ISZERO
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x80: JUMPDEST 
0x81: V36 = DIV V32 0x2540be400
0x82: V37 = MUL V36 V30
0x85: V38 = 0x1
0x87: V39 = 0x0
0x8a: V40 = S[0x1]
0x8c: V41 = 0x100
0x8f: V42 = EXP 0x100 0x0
0x91: V43 = DIV V40 0x1
0x92: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xa8: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xbe: V48 = 0x70a08231
0xc3: V49 = ADDRESS
0xc4: V50 = 0x0
0xc6: V51 = 0x40
0xc8: V52 = M[0x40]
0xc9: V53 = 0x20
0xcb: V54 = ADD 0x20 V52
0xcc: M[V54] = 0x0
0xcd: V55 = 0x40
0xcf: V56 = M[0x40]
0xd1: V57 = 0xffffffff
0xd6: V58 = AND 0xffffffff 0x70a08231
0xd7: V59 = 0x100000000000000000000000000000000000000000000000000000000
0xf5: V60 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xf7: M[V56] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf8: V61 = 0x4
0xfa: V62 = ADD 0x4 V56
0xfd: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x112: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x113: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x12a: M[V62] = V66
0x12b: V67 = 0x20
0x12d: V68 = ADD 0x20 V62
0x131: V69 = 0x20
0x133: V70 = 0x40
0x135: V71 = M[0x40]
0x138: V72 = SUB V68 V71
0x13a: V73 = 0x0
0x13e: V74 = EXTCODESIZE V47
0x13f: V75 = ISZERO V74
0x140: V76 = ISZERO V75
0x141: V77 = 0x149
0x144: JUMPI 0x149 V76
---
Entry stack: [V10, 0x0, 0x0, V30, 0x2540be400, V32]
Stack pops: 5
Stack additions: [V37, S3, V47, 0x70a08231, V68, 0x20, V71, V72, V71, 0x0, V47]
Exit stack: [V10, V37, 0x0, V47, 0x70a08231, V68, 0x20, V71, V72, V71, 0x0, V47]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x80]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V78 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V10, V37, 0x0, V47, 0x70a08231, V68, 0x20, V71, V72, V71, 0x0, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, 0x0, V47, 0x70a08231, V68, 0x20, V71, V72, V71, 0x0, V47]

================================

Block 0x149
[0x149:0x155]
---
Predecessors: [0x80]
Successors: [0x156, 0x15a]
---
0x149 JUMPDEST
0x14a PUSH2 0x2c6
0x14d GAS
0x14e SUB
0x14f CALL
0x150 ISZERO
0x151 ISZERO
0x152 PUSH2 0x15a
0x155 JUMPI
---
0x149: JUMPDEST 
0x14a: V79 = 0x2c6
0x14d: V80 = GAS
0x14e: V81 = SUB V80 0x2c6
0x14f: V82 = CALL V81 V47 0x0 V71 V72 V71 0x20
0x150: V83 = ISZERO V82
0x151: V84 = ISZERO V83
0x152: V85 = 0x15a
0x155: JUMPI 0x15a V84
---
Entry stack: [V10, V37, 0x0, V47, 0x70a08231, V68, 0x20, V71, V72, V71, 0x0, V47]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V37, 0x0, V47, 0x70a08231, V68]

================================

Block 0x156
[0x156:0x159]
---
Predecessors: [0x149]
Successors: []
---
0x156 PUSH1 0x0
0x158 DUP1
0x159 REVERT
---
0x156: V86 = 0x0
0x159: REVERT 0x0 0x0
---
Entry stack: [V10, V37, 0x0, V47, 0x70a08231, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, 0x0, V47, 0x70a08231, V68]

================================

Block 0x15a
[0x15a:0x170]
---
Predecessors: [0x149]
Successors: [0x171, 0x175]
---
0x15a JUMPDEST
0x15b POP
0x15c POP
0x15d POP
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 MLOAD
0x163 SWAP1
0x164 POP
0x165 SWAP1
0x166 POP
0x167 DUP2
0x168 DUP2
0x169 LT
0x16a ISZERO
0x16b ISZERO
0x16c ISZERO
0x16d PUSH2 0x175
0x170 JUMPI
---
0x15a: JUMPDEST 
0x15e: V87 = 0x40
0x160: V88 = M[0x40]
0x162: V89 = M[V88]
0x169: V90 = LT V89 V37
0x16a: V91 = ISZERO V90
0x16b: V92 = ISZERO V91
0x16c: V93 = ISZERO V92
0x16d: V94 = 0x175
0x170: JUMPI 0x175 V93
---
Entry stack: [V10, V37, 0x0, V47, 0x70a08231, V68]
Stack pops: 5
Stack additions: [S4, V89]
Exit stack: [V10, V37, V89]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x15a]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V95 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V10, V37, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, V89]

================================

Block 0x175
[0x175:0x295]
---
Predecessors: [0x15a]
Successors: [0x296, 0x29a]
---
0x175 JUMPDEST
0x176 PUSH1 0x2
0x178 PUSH1 0x0
0x17a SWAP1
0x17b SLOAD
0x17c SWAP1
0x17d PUSH2 0x100
0x180 EXP
0x181 SWAP1
0x182 DIV
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af PUSH2 0x8fc
0x1b2 CALLVALUE
0x1b3 SWAP1
0x1b4 DUP2
0x1b5 ISZERO
0x1b6 MUL
0x1b7 SWAP1
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb PUSH1 0x0
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 DUP1
0x1c1 DUP4
0x1c2 SUB
0x1c3 DUP2
0x1c4 DUP6
0x1c5 DUP9
0x1c6 DUP9
0x1c7 CALL
0x1c8 SWAP4
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce PUSH1 0x1
0x1d0 PUSH1 0x0
0x1d2 SWAP1
0x1d3 SLOAD
0x1d4 SWAP1
0x1d5 PUSH2 0x100
0x1d8 EXP
0x1d9 SWAP1
0x1da DIV
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 PUSH4 0xa9059cbb
0x20c CALLER
0x20d DUP5
0x20e PUSH1 0x0
0x210 PUSH1 0x40
0x212 MLOAD
0x213 PUSH1 0x20
0x215 ADD
0x216 MSTORE
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP4
0x21b PUSH4 0xffffffff
0x220 AND
0x221 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x23f MUL
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x4
0x244 ADD
0x245 DUP1
0x246 DUP4
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 AND
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x20
0x277 ADD
0x278 DUP3
0x279 DUP2
0x27a MSTORE
0x27b PUSH1 0x20
0x27d ADD
0x27e SWAP3
0x27f POP
0x280 POP
0x281 POP
0x282 PUSH1 0x20
0x284 PUSH1 0x40
0x286 MLOAD
0x287 DUP1
0x288 DUP4
0x289 SUB
0x28a DUP2
0x28b PUSH1 0x0
0x28d DUP8
0x28e DUP1
0x28f EXTCODESIZE
0x290 ISZERO
0x291 ISZERO
0x292 PUSH2 0x29a
0x295 JUMPI
---
0x175: JUMPDEST 
0x176: V96 = 0x2
0x178: V97 = 0x0
0x17b: V98 = S[0x2]
0x17d: V99 = 0x100
0x180: V100 = EXP 0x100 0x0
0x182: V101 = DIV V98 0x1
0x183: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x199: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1af: V106 = 0x8fc
0x1b2: V107 = CALLVALUE
0x1b5: V108 = ISZERO V107
0x1b6: V109 = MUL V108 0x8fc
0x1b8: V110 = 0x40
0x1ba: V111 = M[0x40]
0x1bb: V112 = 0x0
0x1bd: V113 = 0x40
0x1bf: V114 = M[0x40]
0x1c2: V115 = SUB V111 V114
0x1c7: V116 = CALL V109 V105 V107 V114 V115 V114 0x0
0x1ce: V117 = 0x1
0x1d0: V118 = 0x0
0x1d3: V119 = S[0x1]
0x1d5: V120 = 0x100
0x1d8: V121 = EXP 0x100 0x0
0x1da: V122 = DIV V119 0x1
0x1db: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1f1: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x207: V127 = 0xa9059cbb
0x20c: V128 = CALLER
0x20e: V129 = 0x0
0x210: V130 = 0x40
0x212: V131 = M[0x40]
0x213: V132 = 0x20
0x215: V133 = ADD 0x20 V131
0x216: M[V133] = 0x0
0x217: V134 = 0x40
0x219: V135 = M[0x40]
0x21b: V136 = 0xffffffff
0x220: V137 = AND 0xffffffff 0xa9059cbb
0x221: V138 = 0x100000000000000000000000000000000000000000000000000000000
0x23f: V139 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x241: M[V135] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x242: V140 = 0x4
0x244: V141 = ADD 0x4 V135
0x247: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x25d: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x274: M[V141] = V145
0x275: V146 = 0x20
0x277: V147 = ADD 0x20 V141
0x27a: M[V147] = V37
0x27b: V148 = 0x20
0x27d: V149 = ADD 0x20 V147
0x282: V150 = 0x20
0x284: V151 = 0x40
0x286: V152 = M[0x40]
0x289: V153 = SUB V149 V152
0x28b: V154 = 0x0
0x28f: V155 = EXTCODESIZE V126
0x290: V156 = ISZERO V155
0x291: V157 = ISZERO V156
0x292: V158 = 0x29a
0x295: JUMPI 0x29a V157
---
Entry stack: [V10, V37, V89]
Stack pops: 2
Stack additions: [S1, S0, V126, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V126]
Exit stack: [V10, V37, V89, V126, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V126]

================================

Block 0x296
[0x296:0x299]
---
Predecessors: [0x175]
Successors: []
---
0x296 PUSH1 0x0
0x298 DUP1
0x299 REVERT
---
0x296: V159 = 0x0
0x299: REVERT 0x0 0x0
---
Entry stack: [V10, V37, V89, V126, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, V89, V126, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V126]

================================

Block 0x29a
[0x29a:0x2a6]
---
Predecessors: [0x175]
Successors: [0x2a7, 0x2ab]
---
0x29a JUMPDEST
0x29b PUSH2 0x2c6
0x29e GAS
0x29f SUB
0x2a0 CALL
0x2a1 ISZERO
0x2a2 ISZERO
0x2a3 PUSH2 0x2ab
0x2a6 JUMPI
---
0x29a: JUMPDEST 
0x29b: V160 = 0x2c6
0x29e: V161 = GAS
0x29f: V162 = SUB V161 0x2c6
0x2a0: V163 = CALL V162 V126 0x0 V152 V153 V152 0x20
0x2a1: V164 = ISZERO V163
0x2a2: V165 = ISZERO V164
0x2a3: V166 = 0x2ab
0x2a6: JUMPI 0x2ab V165
---
Entry stack: [V10, V37, V89, V126, 0xa9059cbb, V149, 0x20, V152, V153, V152, 0x0, V126]
Stack pops: 6
Stack additions: []
Exit stack: [V10, V37, V89, V126, 0xa9059cbb, V149]

================================

Block 0x2a7
[0x2a7:0x2aa]
---
Predecessors: [0x29a]
Successors: []
---
0x2a7 PUSH1 0x0
0x2a9 DUP1
0x2aa REVERT
---
0x2a7: V167 = 0x0
0x2aa: REVERT 0x0 0x0
---
Entry stack: [V10, V37, V89, V126, 0xa9059cbb, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V37, V89, V126, 0xa9059cbb, V149]

================================

Block 0x2ab
[0x2ab:0x2b6]
---
Predecessors: [0x29a]
Successors: [0x2b7]
---
0x2ab JUMPDEST
0x2ac POP
0x2ad POP
0x2ae POP
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 MLOAD
0x2b4 SWAP1
0x2b5 POP
0x2b6 POP
---
0x2ab: JUMPDEST 
0x2af: V168 = 0x40
0x2b1: V169 = M[0x40]
0x2b3: V170 = M[V169]
---
Entry stack: [V10, V37, V89, V126, 0xa9059cbb, V149]
Stack pops: 3
Stack additions: []
Exit stack: [V10, V37, V89]

================================

Block 0x2b7
[0x2b7:0x2b7]
---
Predecessors: [0x61, 0x2ab]
Successors: [0x2b8]
---
0x2b7 JUMPDEST
---
0x2b7: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2b7]
Successors: []
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba POP
0x2bb STOP
---
0x2b8: JUMPDEST 
0x2bb: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bc
[0x2bc:0x2c2]
---
Predecessors: [0xb]
Successors: [0x2c3, 0x2c7]
---
0x2bc JUMPDEST
0x2bd CALLVALUE
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V171 = CALLVALUE
0x2be: V172 = ISZERO V171
0x2bf: V173 = 0x2c7
0x2c2: JUMPI 0x2c7 V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2bc]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V174 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c7
[0x2c7:0x2ce]
---
Predecessors: [0x2bc]
Successors: [0x364]
---
0x2c7 JUMPDEST
0x2c8 PUSH2 0x2cf
0x2cb PUSH2 0x364
0x2ce JUMP
---
0x2c7: JUMPDEST 
0x2c8: V175 = 0x2cf
0x2cb: V176 = 0x364
0x2ce: JUMP 0x364
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2cf]
Exit stack: [V10, 0x2cf]

================================

Block 0x2cf
[0x2cf:0x2d0]
---
Predecessors: [0x58e]
Successors: []
---
0x2cf JUMPDEST
0x2d0 STOP
---
0x2cf: JUMPDEST 
0x2d0: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d1
[0x2d1:0x2d7]
---
Predecessors: [0x3f]
Successors: [0x2d8, 0x2dc]
---
0x2d1 JUMPDEST
0x2d2 CALLVALUE
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V177 = CALLVALUE
0x2d3: V178 = ISZERO V177
0x2d4: V179 = 0x2dc
0x2d7: JUMPI 0x2dc V178
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d1]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V180 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2dc
[0x2dc:0x2e3]
---
Predecessors: [0x2d1]
Successors: [0x591]
---
0x2dc JUMPDEST
0x2dd PUSH2 0x2e4
0x2e0 PUSH2 0x591
0x2e3 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V181 = 0x2e4
0x2e0: V182 = 0x591
0x2e3: JUMP 0x591
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e4]
Exit stack: [V10, 0x2e4]

================================

Block 0x2e4
[0x2e4:0x2f9]
---
Predecessors: [0x591]
Successors: []
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 DUP1
0x2e9 DUP3
0x2ea DUP2
0x2eb MSTORE
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP2
0x2f0 POP
0x2f1 POP
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 SWAP2
0x2f7 SUB
0x2f8 SWAP1
0x2f9 RETURN
---
0x2e4: JUMPDEST 
0x2e5: V183 = 0x40
0x2e7: V184 = M[0x40]
0x2eb: M[V184] = V339
0x2ec: V185 = 0x20
0x2ee: V186 = ADD 0x20 V184
0x2f2: V187 = 0x40
0x2f4: V188 = M[0x40]
0x2f7: V189 = SUB V186 V188
0x2f9: RETURN V188 V189
---
Entry stack: [V10, 0x2e4, V339]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2e4]

================================

Block 0x2fa
[0x2fa:0x300]
---
Predecessors: [0x4a]
Successors: [0x301, 0x305]
---
0x2fa JUMPDEST
0x2fb CALLVALUE
0x2fc ISZERO
0x2fd PUSH2 0x305
0x300 JUMPI
---
0x2fa: JUMPDEST 
0x2fb: V190 = CALLVALUE
0x2fc: V191 = ISZERO V190
0x2fd: V192 = 0x305
0x300: JUMPI 0x305 V191
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x301
[0x301:0x304]
---
Predecessors: [0x2fa]
Successors: []
---
0x301 PUSH1 0x0
0x303 DUP1
0x304 REVERT
---
0x301: V193 = 0x0
0x304: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x305
[0x305:0x30c]
---
Predecessors: [0x2fa]
Successors: [0x597]
---
0x305 JUMPDEST
0x306 PUSH2 0x30d
0x309 PUSH2 0x597
0x30c JUMP
---
0x305: JUMPDEST 
0x306: V194 = 0x30d
0x309: V195 = 0x597
0x30c: JUMP 0x597
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30d]
Exit stack: [V10, 0x30d]

================================

Block 0x30d
[0x30d:0x30e]
---
Predecessors: [0x629]
Successors: []
---
0x30d JUMPDEST
0x30e STOP
---
0x30d: JUMPDEST 
0x30e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30f
[0x30f:0x315]
---
Predecessors: [0x55]
Successors: [0x316, 0x31a]
---
0x30f JUMPDEST
0x310 CALLVALUE
0x311 ISZERO
0x312 PUSH2 0x31a
0x315 JUMPI
---
0x30f: JUMPDEST 
0x310: V196 = CALLVALUE
0x311: V197 = ISZERO V196
0x312: V198 = 0x31a
0x315: JUMPI 0x31a V197
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x316
[0x316:0x319]
---
Predecessors: [0x30f]
Successors: []
---
0x316 PUSH1 0x0
0x318 DUP1
0x319 REVERT
---
0x316: V199 = 0x0
0x319: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x31a
[0x31a:0x321]
---
Predecessors: [0x30f]
Successors: [0x62b]
---
0x31a JUMPDEST
0x31b PUSH2 0x322
0x31e PUSH2 0x62b
0x321 JUMP
---
0x31a: JUMPDEST 
0x31b: V200 = 0x322
0x31e: V201 = 0x62b
0x321: JUMP 0x62b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x322]
Exit stack: [V10, 0x322]

================================

Block 0x322
[0x322:0x363]
---
Predecessors: [0x62b]
Successors: []
---
0x322 JUMPDEST
0x323 PUSH1 0x40
0x325 MLOAD
0x326 DUP1
0x327 DUP3
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d AND
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 AND
0x354 DUP2
0x355 MSTORE
0x356 PUSH1 0x20
0x358 ADD
0x359 SWAP2
0x35a POP
0x35b POP
0x35c PUSH1 0x40
0x35e MLOAD
0x35f DUP1
0x360 SWAP2
0x361 SUB
0x362 SWAP1
0x363 RETURN
---
0x322: JUMPDEST 
0x323: V202 = 0x40
0x325: V203 = M[0x40]
0x328: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x33e: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x355: M[V203] = V207
0x356: V208 = 0x20
0x358: V209 = ADD 0x20 V203
0x35c: V210 = 0x40
0x35e: V211 = M[0x40]
0x361: V212 = SUB V209 V211
0x363: RETURN V211 V212
---
Entry stack: [V10, 0x322, V373]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x322]

================================

Block 0x364
[0x364:0x3bd]
---
Predecessors: [0x2c7]
Successors: [0x3be, 0x3c2]
---
0x364 JUMPDEST
0x365 PUSH1 0x0
0x367 PUSH1 0x2
0x369 PUSH1 0x0
0x36b SWAP1
0x36c SLOAD
0x36d SWAP1
0x36e PUSH2 0x100
0x371 EXP
0x372 SWAP1
0x373 DIV
0x374 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x389 AND
0x38a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39f AND
0x3a0 CALLER
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 EQ
0x3b8 ISZERO
0x3b9 ISZERO
0x3ba PUSH2 0x3c2
0x3bd JUMPI
---
0x364: JUMPDEST 
0x365: V213 = 0x0
0x367: V214 = 0x2
0x369: V215 = 0x0
0x36c: V216 = S[0x2]
0x36e: V217 = 0x100
0x371: V218 = EXP 0x100 0x0
0x373: V219 = DIV V216 0x1
0x374: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x389: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x38a: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x39f: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x3a0: V224 = CALLER
0x3a1: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3b7: V227 = EQ V226 V223
0x3b8: V228 = ISZERO V227
0x3b9: V229 = ISZERO V228
0x3ba: V230 = 0x3c2
0x3bd: JUMPI 0x3c2 V229
---
Entry stack: [V10, 0x2cf]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x2cf, 0x0]

================================

Block 0x3be
[0x3be:0x3c1]
---
Predecessors: [0x364]
Successors: []
---
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 REVERT
---
0x3be: V231 = 0x0
0x3c1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2cf, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2cf, 0x0]

================================

Block 0x3c2
[0x3c2:0x482]
---
Predecessors: [0x364]
Successors: [0x483, 0x487]
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x1
0x3c5 PUSH1 0x0
0x3c7 SWAP1
0x3c8 SLOAD
0x3c9 SWAP1
0x3ca PUSH2 0x100
0x3cd EXP
0x3ce SWAP1
0x3cf DIV
0x3d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e5 AND
0x3e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fb AND
0x3fc PUSH4 0x70a08231
0x401 ADDRESS
0x402 PUSH1 0x0
0x404 PUSH1 0x40
0x406 MLOAD
0x407 PUSH1 0x20
0x409 ADD
0x40a MSTORE
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP3
0x40f PUSH4 0xffffffff
0x414 AND
0x415 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x433 MUL
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x4
0x438 ADD
0x439 DUP1
0x43a DUP3
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x466 AND
0x467 DUP2
0x468 MSTORE
0x469 PUSH1 0x20
0x46b ADD
0x46c SWAP2
0x46d POP
0x46e POP
0x46f PUSH1 0x20
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 DUP4
0x476 SUB
0x477 DUP2
0x478 PUSH1 0x0
0x47a DUP8
0x47b DUP1
0x47c EXTCODESIZE
0x47d ISZERO
0x47e ISZERO
0x47f PUSH2 0x487
0x482 JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V232 = 0x1
0x3c5: V233 = 0x0
0x3c8: V234 = S[0x1]
0x3ca: V235 = 0x100
0x3cd: V236 = EXP 0x100 0x0
0x3cf: V237 = DIV V234 0x1
0x3d0: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x3e6: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fb: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x3fc: V242 = 0x70a08231
0x401: V243 = ADDRESS
0x402: V244 = 0x0
0x404: V245 = 0x40
0x406: V246 = M[0x40]
0x407: V247 = 0x20
0x409: V248 = ADD 0x20 V246
0x40a: M[V248] = 0x0
0x40b: V249 = 0x40
0x40d: V250 = M[0x40]
0x40f: V251 = 0xffffffff
0x414: V252 = AND 0xffffffff 0x70a08231
0x415: V253 = 0x100000000000000000000000000000000000000000000000000000000
0x433: V254 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x435: M[V250] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x436: V255 = 0x4
0x438: V256 = ADD 0x4 V250
0x43b: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x451: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x466: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x468: M[V256] = V260
0x469: V261 = 0x20
0x46b: V262 = ADD 0x20 V256
0x46f: V263 = 0x20
0x471: V264 = 0x40
0x473: V265 = M[0x40]
0x476: V266 = SUB V262 V265
0x478: V267 = 0x0
0x47c: V268 = EXTCODESIZE V241
0x47d: V269 = ISZERO V268
0x47e: V270 = ISZERO V269
0x47f: V271 = 0x487
0x482: JUMPI 0x487 V270
---
Entry stack: [V10, 0x2cf, 0x0]
Stack pops: 0
Stack additions: [V241, 0x70a08231, V262, 0x20, V265, V266, V265, 0x0, V241]
Exit stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262, 0x20, V265, V266, V265, 0x0, V241]

================================

Block 0x483
[0x483:0x486]
---
Predecessors: [0x3c2]
Successors: []
---
0x483 PUSH1 0x0
0x485 DUP1
0x486 REVERT
---
0x483: V272 = 0x0
0x486: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262, 0x20, V265, V266, V265, 0x0, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262, 0x20, V265, V266, V265, 0x0, V241]

================================

Block 0x487
[0x487:0x493]
---
Predecessors: [0x3c2]
Successors: [0x494, 0x498]
---
0x487 JUMPDEST
0x488 PUSH2 0x2c6
0x48b GAS
0x48c SUB
0x48d CALL
0x48e ISZERO
0x48f ISZERO
0x490 PUSH2 0x498
0x493 JUMPI
---
0x487: JUMPDEST 
0x488: V273 = 0x2c6
0x48b: V274 = GAS
0x48c: V275 = SUB V274 0x2c6
0x48d: V276 = CALL V275 V241 0x0 V265 V266 V265 0x20
0x48e: V277 = ISZERO V276
0x48f: V278 = ISZERO V277
0x490: V279 = 0x498
0x493: JUMPI 0x498 V278
---
Entry stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262, 0x20, V265, V266, V265, 0x0, V241]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262]

================================

Block 0x494
[0x494:0x497]
---
Predecessors: [0x487]
Successors: []
---
0x494 PUSH1 0x0
0x496 DUP1
0x497 REVERT
---
0x494: V280 = 0x0
0x497: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262]

================================

Block 0x498
[0x498:0x56c]
---
Predecessors: [0x487]
Successors: [0x56d, 0x571]
---
0x498 JUMPDEST
0x499 POP
0x49a POP
0x49b POP
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 MLOAD
0x4a1 SWAP1
0x4a2 POP
0x4a3 SWAP1
0x4a4 POP
0x4a5 PUSH1 0x1
0x4a7 PUSH1 0x0
0x4a9 SWAP1
0x4aa SLOAD
0x4ab SWAP1
0x4ac PUSH2 0x100
0x4af EXP
0x4b0 SWAP1
0x4b1 DIV
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4dd AND
0x4de PUSH4 0xa9059cbb
0x4e3 CALLER
0x4e4 DUP4
0x4e5 PUSH1 0x0
0x4e7 PUSH1 0x40
0x4e9 MLOAD
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed MSTORE
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 DUP4
0x4f2 PUSH4 0xffffffff
0x4f7 AND
0x4f8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x516 MUL
0x517 DUP2
0x518 MSTORE
0x519 PUSH1 0x4
0x51b ADD
0x51c DUP1
0x51d DUP4
0x51e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x533 AND
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a DUP2
0x54b MSTORE
0x54c PUSH1 0x20
0x54e ADD
0x54f DUP3
0x550 DUP2
0x551 MSTORE
0x552 PUSH1 0x20
0x554 ADD
0x555 SWAP3
0x556 POP
0x557 POP
0x558 POP
0x559 PUSH1 0x20
0x55b PUSH1 0x40
0x55d MLOAD
0x55e DUP1
0x55f DUP4
0x560 SUB
0x561 DUP2
0x562 PUSH1 0x0
0x564 DUP8
0x565 DUP1
0x566 EXTCODESIZE
0x567 ISZERO
0x568 ISZERO
0x569 PUSH2 0x571
0x56c JUMPI
---
0x498: JUMPDEST 
0x49c: V281 = 0x40
0x49e: V282 = M[0x40]
0x4a0: V283 = M[V282]
0x4a5: V284 = 0x1
0x4a7: V285 = 0x0
0x4aa: V286 = S[0x1]
0x4ac: V287 = 0x100
0x4af: V288 = EXP 0x100 0x0
0x4b1: V289 = DIV V286 0x1
0x4b2: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x4c8: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x4dd: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x4de: V294 = 0xa9059cbb
0x4e3: V295 = CALLER
0x4e5: V296 = 0x0
0x4e7: V297 = 0x40
0x4e9: V298 = M[0x40]
0x4ea: V299 = 0x20
0x4ec: V300 = ADD 0x20 V298
0x4ed: M[V300] = 0x0
0x4ee: V301 = 0x40
0x4f0: V302 = M[0x40]
0x4f2: V303 = 0xffffffff
0x4f7: V304 = AND 0xffffffff 0xa9059cbb
0x4f8: V305 = 0x100000000000000000000000000000000000000000000000000000000
0x516: V306 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x518: M[V302] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x519: V307 = 0x4
0x51b: V308 = ADD 0x4 V302
0x51e: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x533: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x534: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x54b: M[V308] = V312
0x54c: V313 = 0x20
0x54e: V314 = ADD 0x20 V308
0x551: M[V314] = V283
0x552: V315 = 0x20
0x554: V316 = ADD 0x20 V314
0x559: V317 = 0x20
0x55b: V318 = 0x40
0x55d: V319 = M[0x40]
0x560: V320 = SUB V316 V319
0x562: V321 = 0x0
0x566: V322 = EXTCODESIZE V293
0x567: V323 = ISZERO V322
0x568: V324 = ISZERO V323
0x569: V325 = 0x571
0x56c: JUMPI 0x571 V324
---
Entry stack: [V10, 0x2cf, 0x0, V241, 0x70a08231, V262]
Stack pops: 4
Stack additions: [V283, V293, 0xa9059cbb, V316, 0x20, V319, V320, V319, 0x0, V293]
Exit stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316, 0x20, V319, V320, V319, 0x0, V293]

================================

Block 0x56d
[0x56d:0x570]
---
Predecessors: [0x498]
Successors: []
---
0x56d PUSH1 0x0
0x56f DUP1
0x570 REVERT
---
0x56d: V326 = 0x0
0x570: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316, 0x20, V319, V320, V319, 0x0, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316, 0x20, V319, V320, V319, 0x0, V293]

================================

Block 0x571
[0x571:0x57d]
---
Predecessors: [0x498]
Successors: [0x57e, 0x582]
---
0x571 JUMPDEST
0x572 PUSH2 0x2c6
0x575 GAS
0x576 SUB
0x577 CALL
0x578 ISZERO
0x579 ISZERO
0x57a PUSH2 0x582
0x57d JUMPI
---
0x571: JUMPDEST 
0x572: V327 = 0x2c6
0x575: V328 = GAS
0x576: V329 = SUB V328 0x2c6
0x577: V330 = CALL V329 V293 0x0 V319 V320 V319 0x20
0x578: V331 = ISZERO V330
0x579: V332 = ISZERO V331
0x57a: V333 = 0x582
0x57d: JUMPI 0x582 V332
---
Entry stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316, 0x20, V319, V320, V319, 0x0, V293]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316]

================================

Block 0x57e
[0x57e:0x581]
---
Predecessors: [0x571]
Successors: []
---
0x57e PUSH1 0x0
0x580 DUP1
0x581 REVERT
---
0x57e: V334 = 0x0
0x581: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316]

================================

Block 0x582
[0x582:0x58d]
---
Predecessors: [0x571]
Successors: [0x58e]
---
0x582 JUMPDEST
0x583 POP
0x584 POP
0x585 POP
0x586 PUSH1 0x40
0x588 MLOAD
0x589 DUP1
0x58a MLOAD
0x58b SWAP1
0x58c POP
0x58d POP
---
0x582: JUMPDEST 
0x586: V335 = 0x40
0x588: V336 = M[0x40]
0x58a: V337 = M[V336]
---
Entry stack: [V10, 0x2cf, V283, V293, 0xa9059cbb, V316]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x2cf, V283]

================================

Block 0x58e
[0x58e:0x590]
---
Predecessors: [0x582]
Successors: [0x2cf]
---
0x58e JUMPDEST
0x58f POP
0x590 JUMP
---
0x58e: JUMPDEST 
0x590: JUMP 0x2cf
---
Entry stack: [V10, 0x2cf, V283]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x591
[0x591:0x596]
---
Predecessors: [0x2dc]
Successors: [0x2e4]
---
0x591 JUMPDEST
0x592 PUSH1 0x0
0x594 SLOAD
0x595 DUP2
0x596 JUMP
---
0x591: JUMPDEST 
0x592: V338 = 0x0
0x594: V339 = S[0x0]
0x596: JUMP 0x2e4
---
Entry stack: [V10, 0x2e4]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V10, 0x2e4, V339]

================================

Block 0x597
[0x597:0x5ed]
---
Predecessors: [0x305]
Successors: [0x5ee, 0x628]
---
0x597 JUMPDEST
0x598 PUSH1 0x2
0x59a PUSH1 0x0
0x59c SWAP1
0x59d SLOAD
0x59e SWAP1
0x59f PUSH2 0x100
0x5a2 EXP
0x5a3 SWAP1
0x5a4 DIV
0x5a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ba AND
0x5bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d0 AND
0x5d1 CALLER
0x5d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e7 AND
0x5e8 EQ
0x5e9 ISZERO
0x5ea PUSH2 0x628
0x5ed JUMPI
---
0x597: JUMPDEST 
0x598: V340 = 0x2
0x59a: V341 = 0x0
0x59d: V342 = S[0x2]
0x59f: V343 = 0x100
0x5a2: V344 = EXP 0x100 0x0
0x5a4: V345 = DIV V342 0x1
0x5a5: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ba: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x5bb: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d0: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x5d1: V350 = CALLER
0x5d2: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x5e8: V353 = EQ V352 V349
0x5e9: V354 = ISZERO V353
0x5ea: V355 = 0x628
0x5ed: JUMPI 0x628 V354
---
Entry stack: [V10, 0x30d]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30d]

================================

Block 0x5ee
[0x5ee:0x627]
---
Predecessors: [0x597]
Successors: []
---
0x5ee PUSH1 0x2
0x5f0 PUSH1 0x0
0x5f2 SWAP1
0x5f3 SLOAD
0x5f4 SWAP1
0x5f5 PUSH2 0x100
0x5f8 EXP
0x5f9 SWAP1
0x5fa DIV
0x5fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x610 AND
0x611 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x626 AND
0x627 SELFDESTRUCT
---
0x5ee: V356 = 0x2
0x5f0: V357 = 0x0
0x5f3: V358 = S[0x2]
0x5f5: V359 = 0x100
0x5f8: V360 = EXP 0x100 0x0
0x5fa: V361 = DIV V358 0x1
0x5fb: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x610: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x611: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x626: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x627: SELFDESTRUCT V365
---
Entry stack: [V10, 0x30d]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30d]

================================

Block 0x628
[0x628:0x628]
---
Predecessors: [0x597]
Successors: [0x629]
---
0x628 JUMPDEST
---
0x628: JUMPDEST 
---
Entry stack: [V10, 0x30d]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30d]

================================

Block 0x629
[0x629:0x62a]
---
Predecessors: [0x628]
Successors: [0x30d]
---
0x629 JUMPDEST
0x62a JUMP
---
0x629: JUMPDEST 
0x62a: JUMP 0x30d
---
Entry stack: [V10, 0x30d]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x62b
[0x62b:0x650]
---
Predecessors: [0x31a]
Successors: [0x322]
---
0x62b JUMPDEST
0x62c PUSH1 0x2
0x62e PUSH1 0x0
0x630 SWAP1
0x631 SLOAD
0x632 SWAP1
0x633 PUSH2 0x100
0x636 EXP
0x637 SWAP1
0x638 DIV
0x639 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64e AND
0x64f DUP2
0x650 JUMP
---
0x62b: JUMPDEST 
0x62c: V366 = 0x2
0x62e: V367 = 0x0
0x631: V368 = S[0x2]
0x633: V369 = 0x100
0x636: V370 = EXP 0x100 0x0
0x638: V371 = DIV V368 0x1
0x639: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x650: JUMP 0x322
---
Entry stack: [V10, 0x322]
Stack pops: 1
Stack additions: [S0, V373]
Exit stack: [V10, 0x322, V373]

================================

Block 0x651
[0x651:0x681]
---
Predecessors: []
Successors: []
---
0x651 STOP
0x652 LOG1
0x653 PUSH6 0x627a7a723058
0x65a SHA3
0x65b COINBASE
0x65c MISSING 0x4e
0x65d MISSING 0xcb
0x65e SWAP3
0x65f MISSING 0xb3
0x660 LT
0x661 MISSING 0xc6
0x662 PUSH16 0x1dd9e0ca1c7645c3878f943716edde35
0x673 SWAP13
0x674 MISSING 0xe3
0x675 GASPRICE
0x676 SWAP13
0x677 MISSING 0x2e
0x678 PUSH9 0x22540029
---
0x651: STOP 
0x652: LOG S0 S1 S2
0x653: V374 = 0x627a7a723058
0x65a: V375 = SHA3 0x627a7a723058 S3
0x65b: V376 = COINBASE
0x65c: MISSING 0x4e
0x65d: MISSING 0xcb
0x65f: MISSING 0xb3
0x660: V377 = LT S0 S1
0x661: MISSING 0xc6
0x662: V378 = 0x1dd9e0ca1c7645c3878f943716edde35
0x674: MISSING 0xe3
0x675: V379 = GASPRICE
0x677: MISSING 0x2e
0x678: V380 = 0x22540029
---
Entry stack: []
Stack pops: 0
Stack additions: [V376, V375, S3, S1, S2, S0, V377, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x1dd9e0ca1c7645c3878f943716edde35, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V379, 0x22540029]
Exit stack: []

================================

Function 0:
Public function signature: 0x7da68f5
Entry block: 0x2bc
Exit block: 0x2cf
Body: 0x2bc, 0x2c3, 0x2c7, 0x2cf, 0x364, 0x3be, 0x3c2, 0x483, 0x487, 0x494, 0x498, 0x56d, 0x571, 0x57e, 0x582, 0x58e

Function 1:
Public function signature: 0x3ba0b9a9
Entry block: 0x2d1
Exit block: 0x2e4
Body: 0x2d1, 0x2d8, 0x2dc, 0x2e4, 0x591

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x2fa
Exit block: 0x30d
Body: 0x2fa, 0x301, 0x305, 0x30d, 0x597, 0x5ee, 0x628, 0x629

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x30f
Exit block: 0x322
Body: 0x30f, 0x316, 0x31a, 0x322, 0x62b

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0x2a7
Body: 0x60, 0x61, 0x6e, 0x7f, 0x80, 0x145, 0x149, 0x156, 0x15a, 0x171, 0x175, 0x296, 0x29a, 0x2a7, 0x2ab, 0x2b7, 0x2b8

