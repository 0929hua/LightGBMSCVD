Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x43]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xab0fc46e
0x3c EQ
0x3d PUSH2 0x43
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xab0fc46e
0x3c: V13 = EQ 0xab0fc46e V11
0x3d: V14 = 0x43
0x40: JUMPI 0x43 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x42]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 STOP
---
0x41: JUMPDEST 
0x42: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x43
[0x43:0x54]
---
Predecessors: [0xd]
Successors: [0x55, 0x59]
---
0x43 JUMPDEST
0x44 PUSH2 0x13c
0x47 PUSH1 0x4
0x49 DUP1
0x4a CALLDATASIZE
0x4b SUB
0x4c PUSH1 0x60
0x4e DUP2
0x4f LT
0x50 ISZERO
0x51 PUSH2 0x59
0x54 JUMPI
---
0x43: JUMPDEST 
0x44: V15 = 0x13c
0x47: V16 = 0x4
0x4a: V17 = CALLDATASIZE
0x4b: V18 = SUB V17 0x4
0x4c: V19 = 0x60
0x4f: V20 = LT V18 0x60
0x50: V21 = ISZERO V20
0x51: V22 = 0x59
0x54: JUMPI 0x59 V21
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13c, 0x4, V18]
Exit stack: [V11, 0x13c, 0x4, V18]

================================

Block 0x55
[0x55:0x58]
---
Predecessors: [0x43]
Successors: []
---
0x55 PUSH1 0x0
0x57 DUP1
0x58 REVERT
---
0x55: V23 = 0x0
0x58: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, 0x4, V18]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, 0x4, V18]

================================

Block 0x59
[0x59:0xb1]
---
Predecessors: [0x43]
Successors: [0xb2, 0xb6]
---
0x59 JUMPDEST
0x5a DUP2
0x5b ADD
0x5c SWAP1
0x5d DUP1
0x5e DUP1
0x5f CALLDATALOAD
0x60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75 AND
0x76 SWAP1
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP1
0x7b SWAP3
0x7c SWAP2
0x7d SWAP1
0x7e DUP1
0x7f CALLDATALOAD
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b SWAP3
0x9c SWAP2
0x9d SWAP1
0x9e DUP1
0x9f CALLDATALOAD
0xa0 SWAP1
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP1
0xa5 PUSH5 0x100000000
0xab DUP2
0xac GT
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0x59: JUMPDEST 
0x5b: V24 = ADD 0x4 V18
0x5f: V25 = CALLDATALOAD 0x4
0x60: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x75: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x77: V28 = 0x20
0x79: V29 = ADD 0x20 0x4
0x7f: V30 = CALLDATALOAD 0x24
0x80: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x97: V33 = 0x20
0x99: V34 = ADD 0x20 0x24
0x9f: V35 = CALLDATALOAD 0x44
0xa1: V36 = 0x20
0xa3: V37 = ADD 0x20 0x44
0xa5: V38 = 0x100000000
0xac: V39 = GT V35 0x100000000
0xad: V40 = ISZERO V39
0xae: V41 = 0xb6
0xb1: JUMPI 0xb6 V40
---
Entry stack: [V11, 0x13c, 0x4, V18]
Stack pops: 2
Stack additions: [V27, V32, V24, S1, 0x64, V35]
Exit stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V35]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0x59]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V42 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V35]

================================

Block 0xb6
[0xb6:0xc3]
---
Predecessors: [0x59]
Successors: [0xc4, 0xc8]
---
0xb6 JUMPDEST
0xb7 DUP3
0xb8 ADD
0xb9 DUP4
0xba PUSH1 0x20
0xbc DUP3
0xbd ADD
0xbe GT
0xbf ISZERO
0xc0 PUSH2 0xc8
0xc3 JUMPI
---
0xb6: JUMPDEST 
0xb8: V43 = ADD 0x4 V35
0xba: V44 = 0x20
0xbd: V45 = ADD V43 0x20
0xbe: V46 = GT V45 V24
0xbf: V47 = ISZERO V46
0xc0: V48 = 0xc8
0xc3: JUMPI 0xc8 V47
---
Entry stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V35]
Stack pops: 4
Stack additions: [S3, S2, S1, V43]
Exit stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V43]

================================

Block 0xc4
[0xc4:0xc7]
---
Predecessors: [0xb6]
Successors: []
---
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 REVERT
---
0xc4: V49 = 0x0
0xc7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V43]

================================

Block 0xc8
[0xc8:0xe5]
---
Predecessors: [0xb6]
Successors: [0xe6, 0xea]
---
0xc8 JUMPDEST
0xc9 DUP1
0xca CALLDATALOAD
0xcb SWAP1
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP2
0xd0 DUP5
0xd1 PUSH1 0x1
0xd3 DUP4
0xd4 MUL
0xd5 DUP5
0xd6 ADD
0xd7 GT
0xd8 PUSH5 0x100000000
0xde DUP4
0xdf GT
0xe0 OR
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xc8: JUMPDEST 
0xca: V50 = CALLDATALOAD V43
0xcc: V51 = 0x20
0xce: V52 = ADD 0x20 V43
0xd1: V53 = 0x1
0xd4: V54 = MUL V50 0x1
0xd6: V55 = ADD V52 V54
0xd7: V56 = GT V55 V24
0xd8: V57 = 0x100000000
0xdf: V58 = GT V50 0x100000000
0xe0: V59 = OR V58 V56
0xe1: V60 = ISZERO V59
0xe2: V61 = 0xea
0xe5: JUMPI 0xea V60
---
Entry stack: [V11, 0x13c, V27, V32, V24, 0x4, 0x64, V43]
Stack pops: 4
Stack additions: [S3, S2, V52, V50, S1]
Exit stack: [V11, 0x13c, V27, V32, V24, 0x4, V52, V50, 0x64]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xc8]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V62 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V27, V32, V24, 0x4, V52, V50, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V27, V32, V24, 0x4, V52, V50, 0x64]

================================

Block 0xea
[0xea:0x13b]
---
Predecessors: [0xc8]
Successors: [0x13e]
---
0xea JUMPDEST
0xeb SWAP2
0xec SWAP1
0xed DUP1
0xee DUP1
0xef PUSH1 0x1f
0xf1 ADD
0xf2 PUSH1 0x20
0xf4 DUP1
0xf5 SWAP2
0xf6 DIV
0xf7 MUL
0xf8 PUSH1 0x20
0xfa ADD
0xfb PUSH1 0x40
0xfd MLOAD
0xfe SWAP1
0xff DUP2
0x100 ADD
0x101 PUSH1 0x40
0x103 MSTORE
0x104 DUP1
0x105 SWAP4
0x106 SWAP3
0x107 SWAP2
0x108 SWAP1
0x109 DUP2
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f DUP4
0x110 DUP4
0x111 DUP1
0x112 DUP3
0x113 DUP5
0x114 CALLDATACOPY
0x115 PUSH1 0x0
0x117 DUP2
0x118 DUP5
0x119 ADD
0x11a MSTORE
0x11b PUSH1 0x1f
0x11d NOT
0x11e PUSH1 0x1f
0x120 DUP3
0x121 ADD
0x122 AND
0x123 SWAP1
0x124 POP
0x125 DUP1
0x126 DUP4
0x127 ADD
0x128 SWAP3
0x129 POP
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e POP
0x12f POP
0x130 SWAP2
0x131 SWAP3
0x132 SWAP2
0x133 SWAP3
0x134 SWAP1
0x135 POP
0x136 POP
0x137 POP
0x138 PUSH2 0x13e
0x13b JUMP
---
0xea: JUMPDEST 
0xef: V63 = 0x1f
0xf1: V64 = ADD 0x1f V50
0xf2: V65 = 0x20
0xf6: V66 = DIV V64 0x20
0xf7: V67 = MUL V66 0x20
0xf8: V68 = 0x20
0xfa: V69 = ADD 0x20 V67
0xfb: V70 = 0x40
0xfd: V71 = M[0x40]
0x100: V72 = ADD V71 V69
0x101: V73 = 0x40
0x103: M[0x40] = V72
0x10b: M[V71] = V50
0x10c: V74 = 0x20
0x10e: V75 = ADD 0x20 V71
0x114: CALLDATACOPY V75 V52 V50
0x115: V76 = 0x0
0x119: V77 = ADD V75 V50
0x11a: M[V77] = 0x0
0x11b: V78 = 0x1f
0x11d: V79 = NOT 0x1f
0x11e: V80 = 0x1f
0x121: V81 = ADD V50 0x1f
0x122: V82 = AND V81 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x127: V83 = ADD V75 V82
0x138: V84 = 0x13e
0x13b: JUMP 0x13e
---
Entry stack: [V11, 0x13c, V27, V32, V24, 0x4, V52, V50, 0x64]
Stack pops: 5
Stack additions: [V71]
Exit stack: [V11, 0x13c, V27, V32, V71]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: [0x1f7]
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13e
[0x13e:0x16a]
---
Predecessors: [0xea]
Successors: [0x16b]
---
0x13e JUMPDEST
0x13f PUSH1 0x0
0x141 PUSH1 0x60
0x143 DUP4
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a CALLVALUE
0x15b DUP5
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 DUP3
0x161 DUP1
0x162 MLOAD
0x163 SWAP1
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP1
0x168 DUP1
0x169 DUP4
0x16a DUP4
---
0x13e: JUMPDEST 
0x13f: V85 = 0x0
0x141: V86 = 0x60
0x144: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x15a: V89 = CALLVALUE
0x15c: V90 = 0x40
0x15e: V91 = M[0x40]
0x162: V92 = M[V71]
0x164: V93 = 0x20
0x166: V94 = ADD 0x20 V71
---
Entry stack: [V11, 0x13c, V27, V32, V71]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x60, V88, V89, S0, V91, V91, V94, V92, V92, V91, V94]
Exit stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V88, V89, V71, V91, V91, V94, V92, V92, V91, V94]

================================

Block 0x16b
[0x16b:0x175]
---
Predecessors: [0x13e, 0x176]
Successors: [0x176, 0x190]
---
0x16b JUMPDEST
0x16c PUSH1 0x20
0x16e DUP4
0x16f LT
0x170 ISZERO
0x171 ISZERO
0x172 PUSH2 0x190
0x175 JUMPI
---
0x16b: JUMPDEST 
0x16c: V95 = 0x20
0x16f: V96 = LT S2 0x20
0x170: V97 = ISZERO V96
0x171: V98 = ISZERO V97
0x172: V99 = 0x190
0x175: JUMPI 0x190 V98
---
Entry stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V88, V89, V71, V91, V91, V94, V92, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V88, V89, V71, V91, V91, V94, V92, S2, S1, S0]

================================

Block 0x176
[0x176:0x18f]
---
Predecessors: [0x16b]
Successors: [0x16b]
---
0x176 DUP1
0x177 MLOAD
0x178 DUP3
0x179 MSTORE
0x17a PUSH1 0x20
0x17c DUP3
0x17d ADD
0x17e SWAP2
0x17f POP
0x180 PUSH1 0x20
0x182 DUP2
0x183 ADD
0x184 SWAP1
0x185 POP
0x186 PUSH1 0x20
0x188 DUP4
0x189 SUB
0x18a SWAP3
0x18b POP
0x18c PUSH2 0x16b
0x18f JUMP
---
0x177: V100 = M[S0]
0x179: M[S1] = V100
0x17a: V101 = 0x20
0x17d: V102 = ADD S1 0x20
0x180: V103 = 0x20
0x183: V104 = ADD S0 0x20
0x186: V105 = 0x20
0x189: V106 = SUB S2 0x20
0x18c: V107 = 0x16b
0x18f: JUMP 0x16b
---
Entry stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V88, V89, V71, V91, V91, V94, V92, S2, S1, S0]
Stack pops: 3
Stack additions: [V106, V102, V104]
Exit stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V88, V89, V71, V91, V91, V94, V92, V106, V102, V104]

================================

Block 0x190
[0x190:0x1d0]
---
Predecessors: [0x16b]
Successors: [0x1d1, 0x1f2]
---
0x190 JUMPDEST
0x191 PUSH1 0x1
0x193 DUP4
0x194 PUSH1 0x20
0x196 SUB
0x197 PUSH2 0x100
0x19a EXP
0x19b SUB
0x19c DUP1
0x19d NOT
0x19e DUP3
0x19f MLOAD
0x1a0 AND
0x1a1 DUP2
0x1a2 DUP5
0x1a3 MLOAD
0x1a4 AND
0x1a5 DUP1
0x1a6 DUP3
0x1a7 OR
0x1a8 DUP6
0x1a9 MSTORE
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 SWAP1
0x1b1 POP
0x1b2 ADD
0x1b3 SWAP2
0x1b4 POP
0x1b5 POP
0x1b6 PUSH1 0x0
0x1b8 PUSH1 0x40
0x1ba MLOAD
0x1bb DUP1
0x1bc DUP4
0x1bd SUB
0x1be DUP2
0x1bf DUP6
0x1c0 DUP8
0x1c1 GAS
0x1c2 CALL
0x1c3 SWAP3
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 RETURNDATASIZE
0x1c8 DUP1
0x1c9 PUSH1 0x0
0x1cb DUP2
0x1cc EQ
0x1cd PUSH2 0x1f2
0x1d0 JUMPI
---
0x190: JUMPDEST 
0x191: V108 = 0x1
0x194: V109 = 0x20
0x196: V110 = SUB 0x20 S2
0x197: V111 = 0x100
0x19a: V112 = EXP 0x100 V110
0x19b: V113 = SUB V112 0x1
0x19d: V114 = NOT V113
0x19f: V115 = M[S0]
0x1a0: V116 = AND V115 V114
0x1a3: V117 = M[S1]
0x1a4: V118 = AND V117 V113
0x1a7: V119 = OR V116 V118
0x1a9: M[S1] = V119
0x1b2: V120 = ADD V92 V91
0x1b6: V121 = 0x0
0x1b8: V122 = 0x40
0x1ba: V123 = M[0x40]
0x1bd: V124 = SUB V120 V123
0x1c1: V125 = GAS
0x1c2: V126 = CALL V125 V88 V89 V123 V124 V123 0x0
0x1c7: V127 = RETURNDATASIZE
0x1c9: V128 = 0x0
0x1cc: V129 = EQ V127 0x0
0x1cd: V130 = 0x1f2
0x1d0: JUMPI 0x1f2 V129
---
Entry stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V88, V89, V71, V91, V91, V94, V92, S2, S1, S0]
Stack pops: 10
Stack additions: [V126, V127, V127]
Exit stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V126, V127, V127]

================================

Block 0x1d1
[0x1d1:0x1f1]
---
Predecessors: [0x190]
Successors: [0x1f7]
---
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 SWAP2
0x1d5 POP
0x1d6 PUSH1 0x1f
0x1d8 NOT
0x1d9 PUSH1 0x3f
0x1db RETURNDATASIZE
0x1dc ADD
0x1dd AND
0x1de DUP3
0x1df ADD
0x1e0 PUSH1 0x40
0x1e2 MSTORE
0x1e3 RETURNDATASIZE
0x1e4 DUP3
0x1e5 MSTORE
0x1e6 RETURNDATASIZE
0x1e7 PUSH1 0x0
0x1e9 PUSH1 0x20
0x1eb DUP5
0x1ec ADD
0x1ed RETURNDATACOPY
0x1ee PUSH2 0x1f7
0x1f1 JUMP
---
0x1d1: V131 = 0x40
0x1d3: V132 = M[0x40]
0x1d6: V133 = 0x1f
0x1d8: V134 = NOT 0x1f
0x1d9: V135 = 0x3f
0x1db: V136 = RETURNDATASIZE
0x1dc: V137 = ADD V136 0x3f
0x1dd: V138 = AND V137 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1df: V139 = ADD V132 V138
0x1e0: V140 = 0x40
0x1e2: M[0x40] = V139
0x1e3: V141 = RETURNDATASIZE
0x1e5: M[V132] = V141
0x1e6: V142 = RETURNDATASIZE
0x1e7: V143 = 0x0
0x1e9: V144 = 0x20
0x1ec: V145 = ADD V132 0x20
0x1ed: RETURNDATACOPY V145 0x0 V142
0x1ee: V146 = 0x1f7
0x1f1: JUMP 0x1f7
---
Entry stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V126, V127, V127]
Stack pops: 2
Stack additions: [V132, S0]
Exit stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V126, V132, V127]

================================

Block 0x1f2
[0x1f2:0x1f6]
---
Predecessors: [0x190]
Successors: [0x1f7]
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x60
0x1f5 SWAP2
0x1f6 POP
---
0x1f2: JUMPDEST 
0x1f3: V147 = 0x60
---
Entry stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V126, V127, V127]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V126, 0x60, V127]

================================

Block 0x1f7
[0x1f7:0x23d]
---
Predecessors: [0x1d1, 0x1f2]
Successors: [0x13c]
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 SWAP2
0x1fa POP
0x1fb SWAP2
0x1fc POP
0x1fd PUSH32 0xfa5810443a5de2c2781dc9a11956a8592b71e70491cff37b3f8d0798109b1b3
0x21e DUP3
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP1
0x223 DUP3
0x224 ISZERO
0x225 ISZERO
0x226 ISZERO
0x227 ISZERO
0x228 DUP2
0x229 MSTORE
0x22a PUSH1 0x20
0x22c ADD
0x22d SWAP2
0x22e POP
0x22f POP
0x230 PUSH1 0x40
0x232 MLOAD
0x233 DUP1
0x234 SWAP2
0x235 SUB
0x236 SWAP1
0x237 LOG1
0x238 POP
0x239 POP
0x23a POP
0x23b POP
0x23c POP
0x23d JUMP
---
0x1f7: JUMPDEST 
0x1fd: V148 = 0xfa5810443a5de2c2781dc9a11956a8592b71e70491cff37b3f8d0798109b1b3
0x21f: V149 = 0x40
0x221: V150 = M[0x40]
0x224: V151 = ISZERO V126
0x225: V152 = ISZERO V151
0x226: V153 = ISZERO V152
0x227: V154 = ISZERO V153
0x229: M[V150] = V154
0x22a: V155 = 0x20
0x22c: V156 = ADD 0x20 V150
0x230: V157 = 0x40
0x232: V158 = M[0x40]
0x235: V159 = SUB V156 V158
0x237: LOG V158 V159 0xfa5810443a5de2c2781dc9a11956a8592b71e70491cff37b3f8d0798109b1b3
0x23d: JUMP 0x13c
---
Entry stack: [V11, 0x13c, V27, V32, V71, 0x0, 0x60, V126, S1, V127]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x23e
[0x23e:0x269]
---
Predecessors: []
Successors: []
---
0x23e INVALID
0x23f LOG1
0x240 PUSH6 0x627a7a723058
0x247 SHA3
0x248 SELFDESTRUCT
0x249 MISSING 0xc5
0x24a CODESIZE
0x24b PUSH15 0xc22c18d579c75494aa6a8a3ea5a69b
0x25b PUSH11 0x1172f009125e417531b5af
0x267 MISSING 0xbb
0x268 STOP
0x269 MISSING 0x29
---
0x23e: INVALID 
0x23f: LOG S0 S1 S2
0x240: V160 = 0x627a7a723058
0x247: V161 = SHA3 0x627a7a723058 S3
0x248: SELFDESTRUCT V161
0x249: MISSING 0xc5
0x24a: V162 = CODESIZE
0x24b: V163 = 0xc22c18d579c75494aa6a8a3ea5a69b
0x25b: V164 = 0x1172f009125e417531b5af
0x267: MISSING 0xbb
0x268: STOP 
0x269: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1172f009125e417531b5af, 0xc22c18d579c75494aa6a8a3ea5a69b, V162]
Exit stack: []

================================

Function 0:
Public function signature: 0xab0fc46e
Entry block: 0x43
Exit block: 0x13c
Body: 0x43, 0x55, 0x59, 0xb2, 0xb6, 0xc4, 0xc8, 0xe6, 0xea, 0x13c, 0x13e, 0x16b, 0x176, 0x190, 0x1d1, 0x1f2, 0x1f7

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

