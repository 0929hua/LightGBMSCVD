Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6ea056a9
0x3c EQ
0x3d PUSH2 0x5e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6ea056a9
0x3c: V13 = EQ 0x6ea056a9 V11
0x3d: V14 = 0x5e
0x40: JUMPI 0x5e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc3]
---
0x41 DUP1
0x42 PUSH4 0xf77c4791
0x47 EQ
0x48 PUSH2 0xc3
0x4b JUMPI
---
0x42: V15 = 0xf77c4791
0x47: V16 = EQ 0xf77c4791 V11
0x48: V17 = 0xc3
0x4b: JUMPI 0xc3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x53]
---
Predecessors: [0x0, 0x41]
Successors: [0x54, 0x58]
---
0x4c JUMPDEST
0x4d CALLVALUE
0x4e DUP1
0x4f ISZERO
0x50 PUSH2 0x58
0x53 JUMPI
---
0x4c: JUMPDEST 
0x4d: V18 = CALLVALUE
0x4f: V19 = ISZERO V18
0x50: V20 = 0x58
0x53: JUMPI 0x58 V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V18]
Exit stack: [V11, V18]

================================

Block 0x54
[0x54:0x57]
---
Predecessors: [0x4c]
Successors: []
---
0x54 PUSH1 0x0
0x56 DUP1
0x57 REVERT
---
0x54: V21 = 0x0
0x57: REVERT 0x0 0x0
---
Entry stack: [V11, V18]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V18]

================================

Block 0x58
[0x58:0x5d]
---
Predecessors: [0x4c]
Successors: []
---
0x58 JUMPDEST
0x59 POP
0x5a PUSH1 0x0
0x5c DUP1
0x5d REVERT
---
0x58: JUMPDEST 
0x5a: V22 = 0x0
0x5d: REVERT 0x0 0x0
---
Entry stack: [V11, V18]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5e
[0x5e:0x65]
---
Predecessors: [0xd]
Successors: [0x66, 0x6a]
---
0x5e JUMPDEST
0x5f CALLVALUE
0x60 DUP1
0x61 ISZERO
0x62 PUSH2 0x6a
0x65 JUMPI
---
0x5e: JUMPDEST 
0x5f: V23 = CALLVALUE
0x61: V24 = ISZERO V23
0x62: V25 = 0x6a
0x65: JUMPI 0x6a V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V23]
Exit stack: [V11, V23]

================================

Block 0x66
[0x66:0x69]
---
Predecessors: [0x5e]
Successors: []
---
0x66 PUSH1 0x0
0x68 DUP1
0x69 REVERT
---
0x66: V26 = 0x0
0x69: REVERT 0x0 0x0
---
Entry stack: [V11, V23]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V23]

================================

Block 0x6a
[0x6a:0xa8]
---
Predecessors: [0x5e]
Successors: [0x11a]
---
0x6a JUMPDEST
0x6b POP
0x6c PUSH2 0xa9
0x6f PUSH1 0x4
0x71 DUP1
0x72 CALLDATASIZE
0x73 SUB
0x74 DUP2
0x75 ADD
0x76 SWAP1
0x77 DUP1
0x78 DUP1
0x79 CALLDATALOAD
0x7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f AND
0x90 SWAP1
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP1
0x95 SWAP3
0x96 SWAP2
0x97 SWAP1
0x98 DUP1
0x99 CALLDATALOAD
0x9a SWAP1
0x9b PUSH1 0x20
0x9d ADD
0x9e SWAP1
0x9f SWAP3
0xa0 SWAP2
0xa1 SWAP1
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 PUSH2 0x11a
0xa8 JUMP
---
0x6a: JUMPDEST 
0x6c: V27 = 0xa9
0x6f: V28 = 0x4
0x72: V29 = CALLDATASIZE
0x73: V30 = SUB V29 0x4
0x75: V31 = ADD 0x4 V30
0x79: V32 = CALLDATALOAD 0x4
0x7a: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x91: V35 = 0x20
0x93: V36 = ADD 0x20 0x4
0x99: V37 = CALLDATALOAD 0x24
0x9b: V38 = 0x20
0x9d: V39 = ADD 0x20 0x24
0xa5: V40 = 0x11a
0xa8: JUMP 0x11a
---
Entry stack: [V11, V23]
Stack pops: 1
Stack additions: [0xa9, V34, V37]
Exit stack: [V11, 0xa9, V34, V37]

================================

Block 0xa9
[0xa9:0xc2]
---
Predecessors: [0x76e]
Successors: []
---
0xa9 JUMPDEST
0xaa PUSH1 0x40
0xac MLOAD
0xad DUP1
0xae DUP3
0xaf ISZERO
0xb0 ISZERO
0xb1 ISZERO
0xb2 ISZERO
0xb3 DUP2
0xb4 MSTORE
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 SWAP2
0xb9 POP
0xba POP
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf SWAP2
0xc0 SUB
0xc1 SWAP1
0xc2 RETURN
---
0xa9: JUMPDEST 
0xaa: V41 = 0x40
0xac: V42 = M[0x40]
0xaf: V43 = ISZERO S0
0xb0: V44 = ISZERO V43
0xb1: V45 = ISZERO V44
0xb2: V46 = ISZERO V45
0xb4: M[V42] = V46
0xb5: V47 = 0x20
0xb7: V48 = ADD 0x20 V42
0xbb: V49 = 0x40
0xbd: V50 = M[0x40]
0xc0: V51 = SUB V48 V50
0xc2: RETURN V50 V51
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xca]
---
Predecessors: [0x41]
Successors: [0xcb, 0xcf]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 DUP1
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc3: JUMPDEST 
0xc4: V52 = CALLVALUE
0xc6: V53 = ISZERO V52
0xc7: V54 = 0xcf
0xca: JUMPI 0xcf V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V11, V52]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc3]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V55 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V11, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52]

================================

Block 0xcf
[0xcf:0xd7]
---
Predecessors: [0xc3]
Successors: [0x779]
---
0xcf JUMPDEST
0xd0 POP
0xd1 PUSH2 0xd8
0xd4 PUSH2 0x779
0xd7 JUMP
---
0xcf: JUMPDEST 
0xd1: V56 = 0xd8
0xd4: V57 = 0x779
0xd7: JUMP 0x779
---
Entry stack: [V11, V52]
Stack pops: 1
Stack additions: [0xd8]
Exit stack: [V11, 0xd8]

================================

Block 0xd8
[0xd8:0x119]
---
Predecessors: [0x779]
Successors: []
---
0xd8 JUMPDEST
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd DUP3
0xde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3 AND
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f SWAP2
0x110 POP
0x111 POP
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 SWAP2
0x117 SUB
0x118 SWAP1
0x119 RETURN
---
0xd8: JUMPDEST 
0xd9: V58 = 0x40
0xdb: V59 = M[0x40]
0xde: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0xf4: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x10b: M[V59] = V63
0x10c: V64 = 0x20
0x10e: V65 = ADD 0x20 V59
0x112: V66 = 0x40
0x114: V67 = M[0x40]
0x117: V68 = SUB V65 V67
0x119: RETURN V67 V68
---
Entry stack: [V11, 0xd8, V435]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd8]

================================

Block 0x11a
[0x11a:0x1da]
---
Predecessors: [0x6a]
Successors: [0x1db, 0x1df]
---
0x11a JUMPDEST
0x11b PUSH1 0x0
0x11d DUP1
0x11e PUSH1 0x0
0x120 DUP1
0x121 PUSH1 0x0
0x123 DUP1
0x124 PUSH1 0x0
0x126 DUP1
0x127 SWAP1
0x128 SLOAD
0x129 SWAP1
0x12a PUSH2 0x100
0x12d EXP
0x12e SWAP1
0x12f DIV
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c PUSH4 0xb9181611
0x161 CALLER
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP3
0x166 PUSH4 0xffffffff
0x16b AND
0x16c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x18a MUL
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x4
0x18f ADD
0x190 DUP1
0x191 DUP3
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be DUP2
0x1bf MSTORE
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP2
0x1c4 POP
0x1c5 POP
0x1c6 PUSH1 0x20
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc DUP4
0x1cd SUB
0x1ce DUP2
0x1cf PUSH1 0x0
0x1d1 DUP8
0x1d2 DUP1
0x1d3 EXTCODESIZE
0x1d4 ISZERO
0x1d5 DUP1
0x1d6 ISZERO
0x1d7 PUSH2 0x1df
0x1da JUMPI
---
0x11a: JUMPDEST 
0x11b: V69 = 0x0
0x11e: V70 = 0x0
0x121: V71 = 0x0
0x124: V72 = 0x0
0x128: V73 = S[0x0]
0x12a: V74 = 0x100
0x12d: V75 = EXP 0x100 0x0
0x12f: V76 = DIV V73 0x1
0x130: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x146: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x15c: V81 = 0xb9181611
0x161: V82 = CALLER
0x162: V83 = 0x40
0x164: V84 = M[0x40]
0x166: V85 = 0xffffffff
0x16b: V86 = AND 0xffffffff 0xb9181611
0x16c: V87 = 0x100000000000000000000000000000000000000000000000000000000
0x18a: V88 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb9181611
0x18c: M[V84] = 0xb918161100000000000000000000000000000000000000000000000000000000
0x18d: V89 = 0x4
0x18f: V90 = ADD 0x4 V84
0x192: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1a8: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1bf: M[V90] = V94
0x1c0: V95 = 0x20
0x1c2: V96 = ADD 0x20 V90
0x1c6: V97 = 0x20
0x1c8: V98 = 0x40
0x1ca: V99 = M[0x40]
0x1cd: V100 = SUB V96 V99
0x1cf: V101 = 0x0
0x1d3: V102 = EXTCODESIZE V80
0x1d4: V103 = ISZERO V102
0x1d6: V104 = ISZERO V103
0x1d7: V105 = 0x1df
0x1da: JUMPI 0x1df V104
---
Entry stack: [V11, 0xa9, V34, V37]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, 0x20, V99, V100, V99, 0x0, V80, V103]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, 0x20, V99, V100, V99, 0x0, V80, V103]

================================

Block 0x1db
[0x1db:0x1de]
---
Predecessors: [0x11a]
Successors: []
---
0x1db PUSH1 0x0
0x1dd DUP1
0x1de REVERT
---
0x1db: V106 = 0x0
0x1de: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, 0x20, V99, V100, V99, 0x0, V80, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, 0x20, V99, V100, V99, 0x0, V80, V103]

================================

Block 0x1df
[0x1df:0x1e9]
---
Predecessors: [0x11a]
Successors: [0x1ea, 0x1f3]
---
0x1df JUMPDEST
0x1e0 POP
0x1e1 GAS
0x1e2 CALL
0x1e3 ISZERO
0x1e4 DUP1
0x1e5 ISZERO
0x1e6 PUSH2 0x1f3
0x1e9 JUMPI
---
0x1df: JUMPDEST 
0x1e1: V107 = GAS
0x1e2: V108 = CALL V107 V80 0x0 V99 V100 V99 0x20
0x1e3: V109 = ISZERO V108
0x1e5: V110 = ISZERO V109
0x1e6: V111 = 0x1f3
0x1e9: JUMPI 0x1f3 V110
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, 0x20, V99, V100, V99, 0x0, V80, V103]
Stack pops: 7
Stack additions: [V109]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, V109]

================================

Block 0x1ea
[0x1ea:0x1f2]
---
Predecessors: [0x1df]
Successors: []
---
0x1ea RETURNDATASIZE
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee RETURNDATACOPY
0x1ef RETURNDATASIZE
0x1f0 PUSH1 0x0
0x1f2 REVERT
---
0x1ea: V112 = RETURNDATASIZE
0x1eb: V113 = 0x0
0x1ee: RETURNDATACOPY 0x0 0x0 V112
0x1ef: V114 = RETURNDATASIZE
0x1f0: V115 = 0x0
0x1f2: REVERT 0x0 V114
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, V109]

================================

Block 0x1f3
[0x1f3:0x204]
---
Predecessors: [0x1df]
Successors: [0x205, 0x209]
---
0x1f3 JUMPDEST
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 POP
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb RETURNDATASIZE
0x1fc PUSH1 0x20
0x1fe DUP2
0x1ff LT
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1f3: JUMPDEST 
0x1f8: V116 = 0x40
0x1fa: V117 = M[0x40]
0x1fb: V118 = RETURNDATASIZE
0x1fc: V119 = 0x20
0x1ff: V120 = LT V118 0x20
0x200: V121 = ISZERO V120
0x201: V122 = 0x209
0x204: JUMPI 0x209 V121
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V80, 0xb9181611, V96, V109]
Stack pops: 4
Stack additions: [V117, V118]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V117, V118]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1f3]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V123 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V117, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V117, V118]

================================

Block 0x209
[0x209:0x220]
---
Predecessors: [0x1f3]
Successors: [0x221, 0x225]
---
0x209 JUMPDEST
0x20a DUP2
0x20b ADD
0x20c SWAP1
0x20d DUP1
0x20e DUP1
0x20f MLOAD
0x210 SWAP1
0x211 PUSH1 0x20
0x213 ADD
0x214 SWAP1
0x215 SWAP3
0x216 SWAP2
0x217 SWAP1
0x218 POP
0x219 POP
0x21a POP
0x21b ISZERO
0x21c ISZERO
0x21d PUSH2 0x225
0x220 JUMPI
---
0x209: JUMPDEST 
0x20b: V124 = ADD V117 V118
0x20f: V125 = M[V117]
0x211: V126 = 0x20
0x213: V127 = ADD 0x20 V117
0x21b: V128 = ISZERO V125
0x21c: V129 = ISZERO V128
0x21d: V130 = 0x225
0x220: JUMPI 0x225 V129
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V117, V118]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x209]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V131 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x225
[0x225:0x2a5]
---
Predecessors: [0x209]
Successors: [0x2a6, 0x2aa]
---
0x225 JUMPDEST
0x226 PUSH1 0x0
0x228 DUP1
0x229 SWAP1
0x22a SLOAD
0x22b SWAP1
0x22c PUSH2 0x100
0x22f EXP
0x230 SWAP1
0x231 DIV
0x232 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x247 AND
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e PUSH4 0xb9b8af0b
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP2
0x267 PUSH4 0xffffffff
0x26c AND
0x26d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28b MUL
0x28c DUP2
0x28d MSTORE
0x28e PUSH1 0x4
0x290 ADD
0x291 PUSH1 0x20
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 DUP4
0x298 SUB
0x299 DUP2
0x29a PUSH1 0x0
0x29c DUP8
0x29d DUP1
0x29e EXTCODESIZE
0x29f ISZERO
0x2a0 DUP1
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x225: JUMPDEST 
0x226: V132 = 0x0
0x22a: V133 = S[0x0]
0x22c: V134 = 0x100
0x22f: V135 = EXP 0x100 0x0
0x231: V136 = DIV V133 0x1
0x232: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x247: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x248: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x25e: V141 = 0xb9b8af0b
0x263: V142 = 0x40
0x265: V143 = M[0x40]
0x267: V144 = 0xffffffff
0x26c: V145 = AND 0xffffffff 0xb9b8af0b
0x26d: V146 = 0x100000000000000000000000000000000000000000000000000000000
0x28b: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb9b8af0b
0x28d: M[V143] = 0xb9b8af0b00000000000000000000000000000000000000000000000000000000
0x28e: V148 = 0x4
0x290: V149 = ADD 0x4 V143
0x291: V150 = 0x20
0x293: V151 = 0x40
0x295: V152 = M[0x40]
0x298: V153 = SUB V149 V152
0x29a: V154 = 0x0
0x29e: V155 = EXTCODESIZE V140
0x29f: V156 = ISZERO V155
0x2a1: V157 = ISZERO V156
0x2a2: V158 = 0x2aa
0x2a5: JUMPI 0x2aa V157
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V140, 0xb9b8af0b, V149, 0x20, V152, V153, V152, 0x0, V140, V156]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, 0x20, V152, V153, V152, 0x0, V140, V156]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x225]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V159 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, 0x20, V152, V153, V152, 0x0, V140, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, 0x20, V152, V153, V152, 0x0, V140, V156]

================================

Block 0x2aa
[0x2aa:0x2b4]
---
Predecessors: [0x225]
Successors: [0x2b5, 0x2be]
---
0x2aa JUMPDEST
0x2ab POP
0x2ac GAS
0x2ad CALL
0x2ae ISZERO
0x2af DUP1
0x2b0 ISZERO
0x2b1 PUSH2 0x2be
0x2b4 JUMPI
---
0x2aa: JUMPDEST 
0x2ac: V160 = GAS
0x2ad: V161 = CALL V160 V140 0x0 V152 V153 V152 0x20
0x2ae: V162 = ISZERO V161
0x2b0: V163 = ISZERO V162
0x2b1: V164 = 0x2be
0x2b4: JUMPI 0x2be V163
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, 0x20, V152, V153, V152, 0x0, V140, V156]
Stack pops: 7
Stack additions: [V162]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, V162]

================================

Block 0x2b5
[0x2b5:0x2bd]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b5 RETURNDATASIZE
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 RETURNDATACOPY
0x2ba RETURNDATASIZE
0x2bb PUSH1 0x0
0x2bd REVERT
---
0x2b5: V165 = RETURNDATASIZE
0x2b6: V166 = 0x0
0x2b9: RETURNDATACOPY 0x0 0x0 V165
0x2ba: V167 = RETURNDATASIZE
0x2bb: V168 = 0x0
0x2bd: REVERT 0x0 V167
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, V162]

================================

Block 0x2be
[0x2be:0x2cf]
---
Predecessors: [0x2aa]
Successors: [0x2d0, 0x2d4]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 POP
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 RETURNDATASIZE
0x2c7 PUSH1 0x20
0x2c9 DUP2
0x2ca LT
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x2be: JUMPDEST 
0x2c3: V169 = 0x40
0x2c5: V170 = M[0x40]
0x2c6: V171 = RETURNDATASIZE
0x2c7: V172 = 0x20
0x2ca: V173 = LT V171 0x20
0x2cb: V174 = ISZERO V173
0x2cc: V175 = 0x2d4
0x2cf: JUMPI 0x2d4 V174
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V140, 0xb9b8af0b, V149, V162]
Stack pops: 4
Stack additions: [V170, V171]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V170, V171]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x2be]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V176 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V170, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V170, V171]

================================

Block 0x2d4
[0x2d4:0x2ea]
---
Predecessors: [0x2be]
Successors: [0x2eb, 0x2ef]
---
0x2d4 JUMPDEST
0x2d5 DUP2
0x2d6 ADD
0x2d7 SWAP1
0x2d8 DUP1
0x2d9 DUP1
0x2da MLOAD
0x2db SWAP1
0x2dc PUSH1 0x20
0x2de ADD
0x2df SWAP1
0x2e0 SWAP3
0x2e1 SWAP2
0x2e2 SWAP1
0x2e3 POP
0x2e4 POP
0x2e5 POP
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2d4: JUMPDEST 
0x2d6: V177 = ADD V170 V171
0x2da: V178 = M[V170]
0x2dc: V179 = 0x20
0x2de: V180 = ADD 0x20 V170
0x2e6: V181 = ISZERO V178
0x2e7: V182 = 0x2ef
0x2ea: JUMPI 0x2ef V181
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V170, V171]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2d4]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V183 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2ef
[0x2ef:0x373]
---
Predecessors: [0x2d4]
Successors: [0x374, 0x378]
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x0
0x2f2 SWAP5
0x2f3 POP
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 SWAP1
0x2f8 SLOAD
0x2f9 SWAP1
0x2fa PUSH2 0x100
0x2fd EXP
0x2fe SWAP1
0x2ff DIV
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32b AND
0x32c PUSH4 0xb269681d
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP2
0x335 PUSH4 0xffffffff
0x33a AND
0x33b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x359 MUL
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x4
0x35e ADD
0x35f PUSH1 0x20
0x361 PUSH1 0x40
0x363 MLOAD
0x364 DUP1
0x365 DUP4
0x366 SUB
0x367 DUP2
0x368 PUSH1 0x0
0x36a DUP8
0x36b DUP1
0x36c EXTCODESIZE
0x36d ISZERO
0x36e DUP1
0x36f ISZERO
0x370 PUSH2 0x378
0x373 JUMPI
---
0x2ef: JUMPDEST 
0x2f0: V184 = 0x0
0x2f4: V185 = 0x0
0x2f8: V186 = S[0x0]
0x2fa: V187 = 0x100
0x2fd: V188 = EXP 0x100 0x0
0x2ff: V189 = DIV V186 0x1
0x300: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x316: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x32c: V194 = 0xb269681d
0x331: V195 = 0x40
0x333: V196 = M[0x40]
0x335: V197 = 0xffffffff
0x33a: V198 = AND 0xffffffff 0xb269681d
0x33b: V199 = 0x100000000000000000000000000000000000000000000000000000000
0x359: V200 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb269681d
0x35b: M[V196] = 0xb269681d00000000000000000000000000000000000000000000000000000000
0x35c: V201 = 0x4
0x35e: V202 = ADD 0x4 V196
0x35f: V203 = 0x20
0x361: V204 = 0x40
0x363: V205 = M[0x40]
0x366: V206 = SUB V202 V205
0x368: V207 = 0x0
0x36c: V208 = EXTCODESIZE V193
0x36d: V209 = ISZERO V208
0x36f: V210 = ISZERO V209
0x370: V211 = 0x378
0x373: JUMPI 0x378 V210
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0, V193, 0xb269681d, V202, 0x20, V205, V206, V205, 0x0, V193, V209]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, 0x20, V205, V206, V205, 0x0, V193, V209]

================================

Block 0x374
[0x374:0x377]
---
Predecessors: [0x2ef]
Successors: []
---
0x374 PUSH1 0x0
0x376 DUP1
0x377 REVERT
---
0x374: V212 = 0x0
0x377: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, 0x20, V205, V206, V205, 0x0, V193, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, 0x20, V205, V206, V205, 0x0, V193, V209]

================================

Block 0x378
[0x378:0x382]
---
Predecessors: [0x2ef]
Successors: [0x383, 0x38c]
---
0x378 JUMPDEST
0x379 POP
0x37a GAS
0x37b CALL
0x37c ISZERO
0x37d DUP1
0x37e ISZERO
0x37f PUSH2 0x38c
0x382 JUMPI
---
0x378: JUMPDEST 
0x37a: V213 = GAS
0x37b: V214 = CALL V213 V193 0x0 V205 V206 V205 0x20
0x37c: V215 = ISZERO V214
0x37e: V216 = ISZERO V215
0x37f: V217 = 0x38c
0x382: JUMPI 0x38c V216
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, 0x20, V205, V206, V205, 0x0, V193, V209]
Stack pops: 7
Stack additions: [V215]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, V215]

================================

Block 0x383
[0x383:0x38b]
---
Predecessors: [0x378]
Successors: []
---
0x383 RETURNDATASIZE
0x384 PUSH1 0x0
0x386 DUP1
0x387 RETURNDATACOPY
0x388 RETURNDATASIZE
0x389 PUSH1 0x0
0x38b REVERT
---
0x383: V218 = RETURNDATASIZE
0x384: V219 = 0x0
0x387: RETURNDATACOPY 0x0 0x0 V218
0x388: V220 = RETURNDATASIZE
0x389: V221 = 0x0
0x38b: REVERT 0x0 V220
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, V215]

================================

Block 0x38c
[0x38c:0x39d]
---
Predecessors: [0x378]
Successors: [0x39e, 0x3a2]
---
0x38c JUMPDEST
0x38d POP
0x38e POP
0x38f POP
0x390 POP
0x391 PUSH1 0x40
0x393 MLOAD
0x394 RETURNDATASIZE
0x395 PUSH1 0x20
0x397 DUP2
0x398 LT
0x399 ISZERO
0x39a PUSH2 0x3a2
0x39d JUMPI
---
0x38c: JUMPDEST 
0x391: V222 = 0x40
0x393: V223 = M[0x40]
0x394: V224 = RETURNDATASIZE
0x395: V225 = 0x20
0x398: V226 = LT V224 0x20
0x399: V227 = ISZERO V226
0x39a: V228 = 0x3a2
0x39d: JUMPI 0x3a2 V227
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V193, 0xb269681d, V202, V215]
Stack pops: 4
Stack additions: [V223, V224]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V223, V224]

================================

Block 0x39e
[0x39e:0x3a1]
---
Predecessors: [0x38c]
Successors: []
---
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 REVERT
---
0x39e: V229 = 0x0
0x3a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V223, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V223, V224]

================================

Block 0x3a2
[0x3a2:0x3eb]
---
Predecessors: [0x38c]
Successors: [0x3ec, 0x5bc]
---
0x3a2 JUMPDEST
0x3a3 DUP2
0x3a4 ADD
0x3a5 SWAP1
0x3a6 DUP1
0x3a7 DUP1
0x3a8 MLOAD
0x3a9 SWAP1
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad SWAP1
0x3ae SWAP3
0x3af SWAP2
0x3b0 SWAP1
0x3b1 POP
0x3b2 POP
0x3b3 POP
0x3b4 SWAP4
0x3b5 POP
0x3b6 PUSH1 0x0
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce DUP9
0x3cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e4 AND
0x3e5 EQ
0x3e6 ISZERO
0x3e7 ISZERO
0x3e8 PUSH2 0x5bc
0x3eb JUMPI
---
0x3a2: JUMPDEST 
0x3a4: V230 = ADD V223 V224
0x3a8: V231 = M[V223]
0x3aa: V232 = 0x20
0x3ac: V233 = ADD 0x20 V223
0x3b6: V234 = 0x0
0x3b8: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3cf: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e4: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x3e5: V239 = EQ V238 0x0
0x3e6: V240 = ISZERO V239
0x3e7: V241 = ISZERO V240
0x3e8: V242 = 0x5bc
0x3eb: JUMPI 0x5bc V241
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V223, V224]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V231, S4, S3, S2]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, 0x0, 0x0, 0x0]

================================

Block 0x3ec
[0x3ec:0x487]
---
Predecessors: [0x3a2]
Successors: [0x488, 0x48c]
---
0x3ec DUP8
0x3ed SWAP3
0x3ee POP
0x3ef DUP7
0x3f0 SWAP2
0x3f1 POP
0x3f2 DUP3
0x3f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x408 AND
0x409 PUSH4 0x70a08231
0x40e ADDRESS
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP3
0x413 PUSH4 0xffffffff
0x418 AND
0x419 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x437 MUL
0x438 DUP2
0x439 MSTORE
0x43a PUSH1 0x4
0x43c ADD
0x43d DUP1
0x43e DUP3
0x43f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x454 AND
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b DUP2
0x46c MSTORE
0x46d PUSH1 0x20
0x46f ADD
0x470 SWAP2
0x471 POP
0x472 POP
0x473 PUSH1 0x20
0x475 PUSH1 0x40
0x477 MLOAD
0x478 DUP1
0x479 DUP4
0x47a SUB
0x47b DUP2
0x47c PUSH1 0x0
0x47e DUP8
0x47f DUP1
0x480 EXTCODESIZE
0x481 ISZERO
0x482 DUP1
0x483 ISZERO
0x484 PUSH2 0x48c
0x487 JUMPI
---
0x3f3: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x408: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x409: V245 = 0x70a08231
0x40e: V246 = ADDRESS
0x40f: V247 = 0x40
0x411: V248 = M[0x40]
0x413: V249 = 0xffffffff
0x418: V250 = AND 0xffffffff 0x70a08231
0x419: V251 = 0x100000000000000000000000000000000000000000000000000000000
0x437: V252 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x439: M[V248] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x43a: V253 = 0x4
0x43c: V254 = ADD 0x4 V248
0x43f: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x454: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x455: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x46c: M[V254] = V258
0x46d: V259 = 0x20
0x46f: V260 = ADD 0x20 V254
0x473: V261 = 0x20
0x475: V262 = 0x40
0x477: V263 = M[0x40]
0x47a: V264 = SUB V260 V263
0x47c: V265 = 0x0
0x480: V266 = EXTCODESIZE V244
0x481: V267 = ISZERO V266
0x483: V268 = ISZERO V267
0x484: V269 = 0x48c
0x487: JUMPI 0x48c V268
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S7, S6, S0, V244, 0x70a08231, V260, 0x20, V263, V264, V263, 0x0, V244, V267]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, 0x20, V263, V264, V263, 0x0, V244, V267]

================================

Block 0x488
[0x488:0x48b]
---
Predecessors: [0x3ec]
Successors: []
---
0x488 PUSH1 0x0
0x48a DUP1
0x48b REVERT
---
0x488: V270 = 0x0
0x48b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, 0x20, V263, V264, V263, 0x0, V244, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, 0x20, V263, V264, V263, 0x0, V244, V267]

================================

Block 0x48c
[0x48c:0x496]
---
Predecessors: [0x3ec]
Successors: [0x497, 0x4a0]
---
0x48c JUMPDEST
0x48d POP
0x48e GAS
0x48f CALL
0x490 ISZERO
0x491 DUP1
0x492 ISZERO
0x493 PUSH2 0x4a0
0x496 JUMPI
---
0x48c: JUMPDEST 
0x48e: V271 = GAS
0x48f: V272 = CALL V271 V244 0x0 V263 V264 V263 0x20
0x490: V273 = ISZERO V272
0x492: V274 = ISZERO V273
0x493: V275 = 0x4a0
0x496: JUMPI 0x4a0 V274
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, 0x20, V263, V264, V263, 0x0, V244, V267]
Stack pops: 7
Stack additions: [V273]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, V273]

================================

Block 0x497
[0x497:0x49f]
---
Predecessors: [0x48c]
Successors: []
---
0x497 RETURNDATASIZE
0x498 PUSH1 0x0
0x49a DUP1
0x49b RETURNDATACOPY
0x49c RETURNDATASIZE
0x49d PUSH1 0x0
0x49f REVERT
---
0x497: V276 = RETURNDATASIZE
0x498: V277 = 0x0
0x49b: RETURNDATACOPY 0x0 0x0 V276
0x49c: V278 = RETURNDATASIZE
0x49d: V279 = 0x0
0x49f: REVERT 0x0 V278
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, V273]

================================

Block 0x4a0
[0x4a0:0x4b1]
---
Predecessors: [0x48c]
Successors: [0x4b2, 0x4b6]
---
0x4a0 JUMPDEST
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 POP
0x4a5 PUSH1 0x40
0x4a7 MLOAD
0x4a8 RETURNDATASIZE
0x4a9 PUSH1 0x20
0x4ab DUP2
0x4ac LT
0x4ad ISZERO
0x4ae PUSH2 0x4b6
0x4b1 JUMPI
---
0x4a0: JUMPDEST 
0x4a5: V280 = 0x40
0x4a7: V281 = M[0x40]
0x4a8: V282 = RETURNDATASIZE
0x4a9: V283 = 0x20
0x4ac: V284 = LT V282 0x20
0x4ad: V285 = ISZERO V284
0x4ae: V286 = 0x4b6
0x4b1: JUMPI 0x4b6 V285
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V244, 0x70a08231, V260, V273]
Stack pops: 4
Stack additions: [V281, V282]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V281, V282]

================================

Block 0x4b2
[0x4b2:0x4b5]
---
Predecessors: [0x4a0]
Successors: []
---
0x4b2 PUSH1 0x0
0x4b4 DUP1
0x4b5 REVERT
---
0x4b2: V287 = 0x0
0x4b5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V281, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V281, V282]

================================

Block 0x4b6
[0x4b6:0x4ce]
---
Predecessors: [0x4a0]
Successors: [0x4cf, 0x4d7]
---
0x4b6 JUMPDEST
0x4b7 DUP2
0x4b8 ADD
0x4b9 SWAP1
0x4ba DUP1
0x4bb DUP1
0x4bc MLOAD
0x4bd SWAP1
0x4be PUSH1 0x20
0x4c0 ADD
0x4c1 SWAP1
0x4c2 SWAP3
0x4c3 SWAP2
0x4c4 SWAP1
0x4c5 POP
0x4c6 POP
0x4c7 POP
0x4c8 DUP3
0x4c9 GT
0x4ca ISZERO
0x4cb PUSH2 0x4d7
0x4ce JUMPI
---
0x4b6: JUMPDEST 
0x4b8: V288 = ADD V281 V282
0x4bc: V289 = M[V281]
0x4be: V290 = 0x20
0x4c0: V291 = ADD 0x20 V281
0x4c9: V292 = GT V37 V289
0x4ca: V293 = ISZERO V292
0x4cb: V294 = 0x4d7
0x4ce: JUMPI 0x4d7 V293
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V281, V282]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0]

================================

Block 0x4cf
[0x4cf:0x4d6]
---
Predecessors: [0x4b6]
Successors: [0x76e]
---
0x4cf PUSH1 0x0
0x4d1 SWAP6
0x4d2 POP
0x4d3 PUSH2 0x76e
0x4d6 JUMP
---
0x4cf: V295 = 0x0
0x4d3: V296 = 0x76e
0x4d6: JUMP 0x76e
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0]

================================

Block 0x4d7
[0x4d7:0x575]
---
Predecessors: [0x4b6]
Successors: [0x576, 0x57a]
---
0x4d7 JUMPDEST
0x4d8 DUP3
0x4d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ee AND
0x4ef PUSH4 0xa9059cbb
0x4f4 DUP6
0x4f5 DUP5
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 DUP4
0x4fa PUSH4 0xffffffff
0x4ff AND
0x500 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x51e MUL
0x51f DUP2
0x520 MSTORE
0x521 PUSH1 0x4
0x523 ADD
0x524 DUP1
0x525 DUP4
0x526 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53b AND
0x53c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x551 AND
0x552 DUP2
0x553 MSTORE
0x554 PUSH1 0x20
0x556 ADD
0x557 DUP3
0x558 DUP2
0x559 MSTORE
0x55a PUSH1 0x20
0x55c ADD
0x55d SWAP3
0x55e POP
0x55f POP
0x560 POP
0x561 PUSH1 0x20
0x563 PUSH1 0x40
0x565 MLOAD
0x566 DUP1
0x567 DUP4
0x568 SUB
0x569 DUP2
0x56a PUSH1 0x0
0x56c DUP8
0x56d DUP1
0x56e EXTCODESIZE
0x56f ISZERO
0x570 DUP1
0x571 ISZERO
0x572 PUSH2 0x57a
0x575 JUMPI
---
0x4d7: JUMPDEST 
0x4d9: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x4ef: V299 = 0xa9059cbb
0x4f6: V300 = 0x40
0x4f8: V301 = M[0x40]
0x4fa: V302 = 0xffffffff
0x4ff: V303 = AND 0xffffffff 0xa9059cbb
0x500: V304 = 0x100000000000000000000000000000000000000000000000000000000
0x51e: V305 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x520: M[V301] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x521: V306 = 0x4
0x523: V307 = ADD 0x4 V301
0x526: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x53c: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x551: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x553: M[V307] = V311
0x554: V312 = 0x20
0x556: V313 = ADD 0x20 V307
0x559: M[V313] = V37
0x55a: V314 = 0x20
0x55c: V315 = ADD 0x20 V313
0x561: V316 = 0x20
0x563: V317 = 0x40
0x565: V318 = M[0x40]
0x568: V319 = SUB V315 V318
0x56a: V320 = 0x0
0x56e: V321 = EXTCODESIZE V298
0x56f: V322 = ISZERO V321
0x571: V323 = ISZERO V322
0x572: V324 = 0x57a
0x575: JUMPI 0x57a V323
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V298, 0xa9059cbb, V315, 0x20, V318, V319, V318, 0x0, V298, V322]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, 0x20, V318, V319, V318, 0x0, V298, V322]

================================

Block 0x576
[0x576:0x579]
---
Predecessors: [0x4d7]
Successors: []
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
---
0x576: V325 = 0x0
0x579: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, 0x20, V318, V319, V318, 0x0, V298, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, 0x20, V318, V319, V318, 0x0, V298, V322]

================================

Block 0x57a
[0x57a:0x584]
---
Predecessors: [0x4d7]
Successors: [0x585, 0x58e]
---
0x57a JUMPDEST
0x57b POP
0x57c GAS
0x57d CALL
0x57e ISZERO
0x57f DUP1
0x580 ISZERO
0x581 PUSH2 0x58e
0x584 JUMPI
---
0x57a: JUMPDEST 
0x57c: V326 = GAS
0x57d: V327 = CALL V326 V298 0x0 V318 V319 V318 0x20
0x57e: V328 = ISZERO V327
0x580: V329 = ISZERO V328
0x581: V330 = 0x58e
0x584: JUMPI 0x58e V329
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, 0x20, V318, V319, V318, 0x0, V298, V322]
Stack pops: 7
Stack additions: [V328]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, V328]

================================

Block 0x585
[0x585:0x58d]
---
Predecessors: [0x57a]
Successors: []
---
0x585 RETURNDATASIZE
0x586 PUSH1 0x0
0x588 DUP1
0x589 RETURNDATACOPY
0x58a RETURNDATASIZE
0x58b PUSH1 0x0
0x58d REVERT
---
0x585: V331 = RETURNDATASIZE
0x586: V332 = 0x0
0x589: RETURNDATACOPY 0x0 0x0 V331
0x58a: V333 = RETURNDATASIZE
0x58b: V334 = 0x0
0x58d: REVERT 0x0 V333
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, V328]

================================

Block 0x58e
[0x58e:0x59f]
---
Predecessors: [0x57a]
Successors: [0x5a0, 0x5a4]
---
0x58e JUMPDEST
0x58f POP
0x590 POP
0x591 POP
0x592 POP
0x593 PUSH1 0x40
0x595 MLOAD
0x596 RETURNDATASIZE
0x597 PUSH1 0x20
0x599 DUP2
0x59a LT
0x59b ISZERO
0x59c PUSH2 0x5a4
0x59f JUMPI
---
0x58e: JUMPDEST 
0x593: V335 = 0x40
0x595: V336 = M[0x40]
0x596: V337 = RETURNDATASIZE
0x597: V338 = 0x20
0x59a: V339 = LT V337 0x20
0x59b: V340 = ISZERO V339
0x59c: V341 = 0x5a4
0x59f: JUMPI 0x5a4 V340
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V298, 0xa9059cbb, V315, V328]
Stack pops: 4
Stack additions: [V336, V337]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V336, V337]

================================

Block 0x5a0
[0x5a0:0x5a3]
---
Predecessors: [0x58e]
Successors: []
---
0x5a0 PUSH1 0x0
0x5a2 DUP1
0x5a3 REVERT
---
0x5a0: V342 = 0x0
0x5a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V336, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V336, V337]

================================

Block 0x5a4
[0x5a4:0x5bb]
---
Predecessors: [0x58e]
Successors: [0x61f]
---
0x5a4 JUMPDEST
0x5a5 DUP2
0x5a6 ADD
0x5a7 SWAP1
0x5a8 DUP1
0x5a9 DUP1
0x5aa MLOAD
0x5ab SWAP1
0x5ac PUSH1 0x20
0x5ae ADD
0x5af SWAP1
0x5b0 SWAP3
0x5b1 SWAP2
0x5b2 SWAP1
0x5b3 POP
0x5b4 POP
0x5b5 POP
0x5b6 SWAP5
0x5b7 POP
0x5b8 PUSH2 0x61f
0x5bb JUMP
---
0x5a4: JUMPDEST 
0x5a6: V343 = ADD V336 V337
0x5aa: V344 = M[V336]
0x5ac: V345 = 0x20
0x5ae: V346 = ADD 0x20 V336
0x5b8: V347 = 0x61f
0x5bb: JUMP 0x61f
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, V34, V37, 0x0, V336, V337]
Stack pops: 7
Stack additions: [V344, S5, S4, S3, S2]
Exit stack: [V11, 0xa9, V34, V37, 0x0, V344, V231, V34, V37, 0x0]

================================

Block 0x5bc
[0x5bc:0x5de]
---
Predecessors: [0x3a2]
Successors: [0x5df, 0x5e7]
---
0x5bc JUMPDEST
0x5bd DUP7
0x5be SWAP1
0x5bf POP
0x5c0 ADDRESS
0x5c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d6 AND
0x5d7 BALANCE
0x5d8 DUP2
0x5d9 GT
0x5da ISZERO
0x5db PUSH2 0x5e7
0x5de JUMPI
---
0x5bc: JUMPDEST 
0x5c0: V348 = ADDRESS
0x5c1: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d6: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x5d7: V351 = BALANCE V350
0x5d9: V352 = GT V37 V351
0x5da: V353 = ISZERO V352
0x5db: V354 = 0x5e7
0x5de: JUMPI 0x5e7 V353
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S6]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, 0x0, 0x0, V37]

================================

Block 0x5df
[0x5df:0x5e6]
---
Predecessors: [0x5bc]
Successors: [0x76e]
---
0x5df PUSH1 0x0
0x5e1 SWAP6
0x5e2 POP
0x5e3 PUSH2 0x76e
0x5e6 JUMP
---
0x5df: V355 = 0x0
0x5e3: V356 = 0x76e
0x5e6: JUMP 0x76e
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, 0x0, 0x0, V37]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, 0x0, 0x0, V37]

================================

Block 0x5e7
[0x5e7:0x61e]
---
Predecessors: [0x5bc]
Successors: [0x61f]
---
0x5e7 JUMPDEST
0x5e8 DUP4
0x5e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fe AND
0x5ff PUSH2 0x8fc
0x602 DUP3
0x603 SWAP1
0x604 DUP2
0x605 ISZERO
0x606 MUL
0x607 SWAP1
0x608 PUSH1 0x40
0x60a MLOAD
0x60b PUSH1 0x0
0x60d PUSH1 0x40
0x60f MLOAD
0x610 DUP1
0x611 DUP4
0x612 SUB
0x613 DUP2
0x614 DUP6
0x615 DUP9
0x616 DUP9
0x617 CALL
0x618 SWAP4
0x619 POP
0x61a POP
0x61b POP
0x61c POP
0x61d SWAP5
0x61e POP
---
0x5e7: JUMPDEST 
0x5e9: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x5ff: V359 = 0x8fc
0x605: V360 = ISZERO V37
0x606: V361 = MUL V360 0x8fc
0x608: V362 = 0x40
0x60a: V363 = M[0x40]
0x60b: V364 = 0x0
0x60d: V365 = 0x40
0x60f: V366 = M[0x40]
0x612: V367 = SUB V363 V366
0x617: V368 = CALL V361 V358 V37 V366 V367 V366 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, 0x0, V231, 0x0, 0x0, V37]
Stack pops: 5
Stack additions: [V368, S3, S2, S1, S0]
Exit stack: [V11, 0xa9, V34, V37, 0x0, V368, V231, 0x0, 0x0, V37]

================================

Block 0x61f
[0x61f:0x625]
---
Predecessors: [0x5a4, 0x5e7]
Successors: [0x626, 0x76a]
---
0x61f JUMPDEST
0x620 DUP5
0x621 ISZERO
0x622 PUSH2 0x76a
0x625 JUMPI
---
0x61f: JUMPDEST 
0x621: V369 = ISZERO S4
0x622: V370 = 0x76a
0x625: JUMPI 0x76a V369
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, S4, V231, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa9, V34, V37, 0x0, S4, V231, S2, S1, S0]

================================

Block 0x626
[0x626:0x74c]
---
Predecessors: [0x61f]
Successors: [0x74d, 0x751]
---
0x626 PUSH1 0x0
0x628 DUP1
0x629 SWAP1
0x62a SLOAD
0x62b SWAP1
0x62c PUSH2 0x100
0x62f EXP
0x630 SWAP1
0x631 DIV
0x632 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x647 AND
0x648 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65d AND
0x65e PUSH4 0x28090abb
0x663 ADDRESS
0x664 DUP7
0x665 DUP12
0x666 DUP12
0x667 PUSH1 0x40
0x669 MLOAD
0x66a DUP6
0x66b PUSH4 0xffffffff
0x670 AND
0x671 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x68f MUL
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x4
0x694 ADD
0x695 DUP1
0x696 DUP6
0x697 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ac AND
0x6ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c2 AND
0x6c3 DUP2
0x6c4 MSTORE
0x6c5 PUSH1 0x20
0x6c7 ADD
0x6c8 DUP5
0x6c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6de AND
0x6df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f4 AND
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 ADD
0x6fa DUP4
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 AND
0x711 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x726 AND
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c DUP3
0x72d DUP2
0x72e MSTORE
0x72f PUSH1 0x20
0x731 ADD
0x732 SWAP5
0x733 POP
0x734 POP
0x735 POP
0x736 POP
0x737 POP
0x738 PUSH1 0x0
0x73a PUSH1 0x40
0x73c MLOAD
0x73d DUP1
0x73e DUP4
0x73f SUB
0x740 DUP2
0x741 PUSH1 0x0
0x743 DUP8
0x744 DUP1
0x745 EXTCODESIZE
0x746 ISZERO
0x747 DUP1
0x748 ISZERO
0x749 PUSH2 0x751
0x74c JUMPI
---
0x626: V371 = 0x0
0x62a: V372 = S[0x0]
0x62c: V373 = 0x100
0x62f: V374 = EXP 0x100 0x0
0x631: V375 = DIV V372 0x1
0x632: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x647: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x648: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x65d: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x65e: V380 = 0x28090abb
0x663: V381 = ADDRESS
0x667: V382 = 0x40
0x669: V383 = M[0x40]
0x66b: V384 = 0xffffffff
0x670: V385 = AND 0xffffffff 0x28090abb
0x671: V386 = 0x100000000000000000000000000000000000000000000000000000000
0x68f: V387 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x28090abb
0x691: M[V383] = 0x28090abb00000000000000000000000000000000000000000000000000000000
0x692: V388 = 0x4
0x694: V389 = ADD 0x4 V383
0x697: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x6ad: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c2: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x6c4: M[V389] = V393
0x6c5: V394 = 0x20
0x6c7: V395 = ADD 0x20 V389
0x6c9: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x6df: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x6f6: M[V395] = V399
0x6f7: V400 = 0x20
0x6f9: V401 = ADD 0x20 V395
0x6fb: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x711: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x726: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x728: M[V401] = V405
0x729: V406 = 0x20
0x72b: V407 = ADD 0x20 V401
0x72e: M[V407] = V37
0x72f: V408 = 0x20
0x731: V409 = ADD 0x20 V407
0x738: V410 = 0x0
0x73a: V411 = 0x40
0x73c: V412 = M[0x40]
0x73f: V413 = SUB V409 V412
0x741: V414 = 0x0
0x745: V415 = EXTCODESIZE V379
0x746: V416 = ISZERO V415
0x748: V417 = ISZERO V416
0x749: V418 = 0x751
0x74c: JUMPI 0x751 V417
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, S4, V231, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V379, 0x28090abb, V409, 0x0, V412, V413, V412, 0x0, V379, V416]
Exit stack: [V11, 0xa9, V34, V37, 0x0, S4, V231, S2, S1, S0, V379, 0x28090abb, V409, 0x0, V412, V413, V412, 0x0, V379, V416]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x626]
Successors: []
---
0x74d PUSH1 0x0
0x74f DUP1
0x750 REVERT
---
0x74d: V419 = 0x0
0x750: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, S14, V231, S12, S11, S10, V379, 0x28090abb, V409, 0x0, V412, V413, V412, 0x0, V379, V416]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, S14, V231, S12, S11, S10, V379, 0x28090abb, V409, 0x0, V412, V413, V412, 0x0, V379, V416]

================================

Block 0x751
[0x751:0x75b]
---
Predecessors: [0x626]
Successors: [0x75c, 0x765]
---
0x751 JUMPDEST
0x752 POP
0x753 GAS
0x754 CALL
0x755 ISZERO
0x756 DUP1
0x757 ISZERO
0x758 PUSH2 0x765
0x75b JUMPI
---
0x751: JUMPDEST 
0x753: V420 = GAS
0x754: V421 = CALL V420 V379 0x0 V412 V413 V412 0x0
0x755: V422 = ISZERO V421
0x757: V423 = ISZERO V422
0x758: V424 = 0x765
0x75b: JUMPI 0x765 V423
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, S14, V231, S12, S11, S10, V379, 0x28090abb, V409, 0x0, V412, V413, V412, 0x0, V379, V416]
Stack pops: 7
Stack additions: [V422]
Exit stack: [V11, 0xa9, V34, V37, 0x0, S14, V231, S12, S11, S10, V379, 0x28090abb, V409, V422]

================================

Block 0x75c
[0x75c:0x764]
---
Predecessors: [0x751]
Successors: []
---
0x75c RETURNDATASIZE
0x75d PUSH1 0x0
0x75f DUP1
0x760 RETURNDATACOPY
0x761 RETURNDATASIZE
0x762 PUSH1 0x0
0x764 REVERT
---
0x75c: V425 = RETURNDATASIZE
0x75d: V426 = 0x0
0x760: RETURNDATACOPY 0x0 0x0 V425
0x761: V427 = RETURNDATASIZE
0x762: V428 = 0x0
0x764: REVERT 0x0 V427
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, S8, V231, S6, S5, S4, V379, 0x28090abb, V409, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, S8, V231, S6, S5, S4, V379, 0x28090abb, V409, V422]

================================

Block 0x765
[0x765:0x769]
---
Predecessors: [0x751]
Successors: [0x76a]
---
0x765 JUMPDEST
0x766 POP
0x767 POP
0x768 POP
0x769 POP
---
0x765: JUMPDEST 
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, S8, V231, S6, S5, S4, V379, 0x28090abb, V409, V422]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xa9, V34, V37, 0x0, S8, V231, S6, S5, S4]

================================

Block 0x76a
[0x76a:0x76d]
---
Predecessors: [0x61f, 0x765]
Successors: [0x76e]
---
0x76a JUMPDEST
0x76b DUP5
0x76c SWAP6
0x76d POP
---
0x76a: JUMPDEST 
---
Entry stack: [V11, 0xa9, V34, V37, 0x0, S4, V231, S2, S1, S0]
Stack pops: 6
Stack additions: [S4, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xa9, V34, V37, S4, S4, V231, S2, S1, S0]

================================

Block 0x76e
[0x76e:0x778]
---
Predecessors: [0x4cf, 0x5df, 0x76a]
Successors: [0xa9]
---
0x76e JUMPDEST
0x76f POP
0x770 POP
0x771 POP
0x772 POP
0x773 POP
0x774 SWAP3
0x775 SWAP2
0x776 POP
0x777 POP
0x778 JUMP
---
0x76e: JUMPDEST 
0x778: JUMP 0xa9
---
Entry stack: [V11, 0xa9, V34, V37, S5, S4, V231, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V11, S5]

================================

Block 0x779
[0x779:0x79d]
---
Predecessors: [0xcf]
Successors: [0xd8]
---
0x779 JUMPDEST
0x77a PUSH1 0x0
0x77c DUP1
0x77d SWAP1
0x77e SLOAD
0x77f SWAP1
0x780 PUSH2 0x100
0x783 EXP
0x784 SWAP1
0x785 DIV
0x786 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79b AND
0x79c DUP2
0x79d JUMP
---
0x779: JUMPDEST 
0x77a: V429 = 0x0
0x77e: V430 = S[0x0]
0x780: V431 = 0x100
0x783: V432 = EXP 0x100 0x0
0x785: V433 = DIV V430 0x1
0x786: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x79d: JUMP 0xd8
---
Entry stack: [V11, 0xd8]
Stack pops: 1
Stack additions: [S0, V435]
Exit stack: [V11, 0xd8, V435]

================================

Block 0x79e
[0x79e:0x7b5]
---
Predecessors: []
Successors: [0x7b6]
Has unresolved jump.
---
0x79e STOP
0x79f LOG1
0x7a0 PUSH6 0x627a7a723058
0x7a7 SHA3
0x7a8 GASPRICE
0x7a9 MISSING 0xce
0x7aa MISSING 0x1e
0x7ab MISSING 0x28
0x7ac EXTCODECOPY
0x7ad MISSING 0x5e
0x7ae SWAP14
0x7af SHR
0x7b0 DELEGATECALL
0x7b1 PC
0x7b2 MISSING 0xf6
0x7b3 MISSING 0xd
0x7b4 SHR
0x7b5 JUMPI
---
0x79e: STOP 
0x79f: LOG S0 S1 S2
0x7a0: V436 = 0x627a7a723058
0x7a7: V437 = SHA3 0x627a7a723058 S3
0x7a8: V438 = GASPRICE
0x7a9: MISSING 0xce
0x7aa: MISSING 0x1e
0x7ab: MISSING 0x28
0x7ac: EXTCODECOPY S0 S1 S2 S3
0x7ad: MISSING 0x5e
0x7af: V439 = SHR S14 S1
0x7b0: V440 = DELEGATECALL V439 S2 S3 S4 S5 S6
0x7b1: V441 = PC
0x7b2: MISSING 0xf6
0x7b3: MISSING 0xd
0x7b4: V442 = SHR S0 S1
0x7b5: JUMPI V442 S2
---
Entry stack: []
Stack pops: 0
Stack additions: [V438, V437, V441, V440, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Block 0x7b6
[0x7b6:0x7c9]
---
Predecessors: [0x79e]
Successors: []
---
0x7b6 MISSING 0x26
0x7b7 DUP2
0x7b8 MISSING 0xa8
0x7b9 AND
0x7ba DUP15
0x7bb PUSH8 0xc2eaeb30658f1705
0x7c4 MISSING 0xdf
0x7c5 SWAP13
0x7c6 MISSING 0xfc
0x7c7 MISSING 0xe8
0x7c8 STOP
0x7c9 MISSING 0x29
---
0x7b6: MISSING 0x26
0x7b8: MISSING 0xa8
0x7b9: V443 = AND S0 S1
0x7bb: V444 = 0xc2eaeb30658f1705
0x7c4: MISSING 0xdf
0x7c6: MISSING 0xfc
0x7c7: MISSING 0xe8
0x7c8: STOP 
0x7c9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S1, S0, S1, 0xc2eaeb30658f1705, S15, V443, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x6ea056a9
Entry block: 0x5e
Exit block: 0x5a0
Body: 0x5e, 0x66, 0x6a, 0xa9, 0x11a, 0x1db, 0x1df, 0x1ea, 0x1f3, 0x205, 0x209, 0x221, 0x225, 0x2a6, 0x2aa, 0x2b5, 0x2be, 0x2d0, 0x2d4, 0x2eb, 0x2ef, 0x374, 0x378, 0x383, 0x38c, 0x39e, 0x3a2, 0x3ec, 0x488, 0x48c, 0x497, 0x4a0, 0x4b2, 0x4b6, 0x4cf, 0x4d7, 0x576, 0x57a, 0x585, 0x58e, 0x5a0, 0x5a4, 0x5bc, 0x5df, 0x5e7, 0x61f, 0x626, 0x74d, 0x751, 0x75c, 0x765, 0x76a, 0x76e

Function 1:
Public function signature: 0xf77c4791
Entry block: 0xc3
Exit block: 0xd8
Body: 0xc3, 0xcb, 0xcf, 0xd8, 0x779

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x58
Body: 0x4c, 0x54, 0x58

