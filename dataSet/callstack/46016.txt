Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x8b3cba7b
0x34 EQ
0x35 PUSH2 0x3e
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x8b3cba7b
0x34: V9 = EQ 0x8b3cba7b V7
0x35: V10 = 0x3e
0x38: JUMPI 0x3e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3d]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a PUSH1 0x0
0x3c DUP1
0x3d REVERT
---
0x39: JUMPDEST 
0x3a: V11 = 0x0
0x3d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3e
[0x3e:0x44]
---
Predecessors: [0x0]
Successors: [0x45, 0x49]
---
0x3e JUMPDEST
0x3f CALLVALUE
0x40 ISZERO
0x41 PUSH2 0x49
0x44 JUMPI
---
0x3e: JUMPDEST 
0x3f: V12 = CALLVALUE
0x40: V13 = ISZERO V12
0x41: V14 = 0x49
0x44: JUMPI 0x49 V13
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x45
[0x45:0x48]
---
Predecessors: [0x3e]
Successors: []
---
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x45: V15 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0xbd]
---
Predecessors: [0x3e]
Successors: [0xc0]
---
0x49 JUMPDEST
0x4a PUSH2 0xbe
0x4d PUSH1 0x4
0x4f DUP1
0x50 DUP1
0x51 CALLDATALOAD
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 SWAP1
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d SWAP2
0x6e SWAP1
0x6f DUP1
0x70 CALLDATALOAD
0x71 SWAP1
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP1
0x76 DUP3
0x77 ADD
0x78 DUP1
0x79 CALLDATALOAD
0x7a SWAP1
0x7b PUSH1 0x20
0x7d ADD
0x7e SWAP1
0x7f DUP1
0x80 DUP1
0x81 PUSH1 0x20
0x83 MUL
0x84 PUSH1 0x20
0x86 ADD
0x87 PUSH1 0x40
0x89 MLOAD
0x8a SWAP1
0x8b DUP2
0x8c ADD
0x8d PUSH1 0x40
0x8f MSTORE
0x90 DUP1
0x91 SWAP4
0x92 SWAP3
0x93 SWAP2
0x94 SWAP1
0x95 DUP2
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b DUP4
0x9c DUP4
0x9d PUSH1 0x20
0x9f MUL
0xa0 DUP1
0xa1 DUP3
0xa2 DUP5
0xa3 CALLDATACOPY
0xa4 DUP3
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad SWAP2
0xae SWAP1
0xaf DUP1
0xb0 CALLDATALOAD
0xb1 SWAP1
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP1
0xb6 SWAP2
0xb7 SWAP1
0xb8 POP
0xb9 POP
0xba PUSH2 0xc0
0xbd JUMP
---
0x49: JUMPDEST 
0x4a: V16 = 0xbe
0x4d: V17 = 0x4
0x51: V18 = CALLDATALOAD 0x4
0x52: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x69: V21 = 0x20
0x6b: V22 = ADD 0x20 0x4
0x70: V23 = CALLDATALOAD 0x24
0x72: V24 = 0x20
0x74: V25 = ADD 0x20 0x24
0x77: V26 = ADD 0x4 V23
0x79: V27 = CALLDATALOAD V26
0x7b: V28 = 0x20
0x7d: V29 = ADD 0x20 V26
0x81: V30 = 0x20
0x83: V31 = MUL 0x20 V27
0x84: V32 = 0x20
0x86: V33 = ADD 0x20 V31
0x87: V34 = 0x40
0x89: V35 = M[0x40]
0x8c: V36 = ADD V35 V33
0x8d: V37 = 0x40
0x8f: M[0x40] = V36
0x97: M[V35] = V27
0x98: V38 = 0x20
0x9a: V39 = ADD 0x20 V35
0x9d: V40 = 0x20
0x9f: V41 = MUL 0x20 V27
0xa3: CALLDATACOPY V39 V29 V41
0xa5: V42 = ADD V39 V41
0xb0: V43 = CALLDATALOAD 0x44
0xb2: V44 = 0x20
0xb4: V45 = ADD 0x20 0x44
0xba: V46 = 0xc0
0xbd: JUMP 0xc0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xbe, V20, V35, V43]
Exit stack: [V7, 0xbe, V20, V35, V43]

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: [0x1b3]
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xc0
[0xc0:0x170]
---
Predecessors: [0x49]
Successors: [0x171]
---
0xc0 JUMPDEST
0xc1 DUP3
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 CALLVALUE
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd DUP1
0xde PUSH32 0x696e69744d756c74696f776e656428616464726573735b5d2c2075696e742900
0xff DUP2
0x100 MSTORE
0x101 POP
0x102 PUSH1 0x1f
0x104 ADD
0x105 SWAP1
0x106 POP
0x107 PUSH1 0x40
0x109 MLOAD
0x10a DUP1
0x10b SWAP2
0x10c SUB
0x10d SWAP1
0x10e SHA3
0x10f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12d SWAP1
0x12e DIV
0x12f SWAP1
0x130 DUP5
0x131 DUP5
0x132 PUSH1 0x40
0x134 MLOAD
0x135 DUP5
0x136 PUSH4 0xffffffff
0x13b AND
0x13c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x15a MUL
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0x4
0x15f ADD
0x160 DUP1
0x161 DUP4
0x162 DUP1
0x163 MLOAD
0x164 SWAP1
0x165 PUSH1 0x20
0x167 ADD
0x168 SWAP1
0x169 PUSH1 0x20
0x16b MUL
0x16c DUP1
0x16d DUP4
0x16e DUP4
0x16f PUSH1 0x0
---
0xc0: JUMPDEST 
0xc2: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0xd8: V49 = CALLVALUE
0xd9: V50 = 0x40
0xdb: V51 = M[0x40]
0xde: V52 = 0x696e69744d756c74696f776e656428616464726573735b5d2c2075696e742900
0x100: M[V51] = 0x696e69744d756c74696f776e656428616464726573735b5d2c2075696e742900
0x102: V53 = 0x1f
0x104: V54 = ADD 0x1f V51
0x107: V55 = 0x40
0x109: V56 = M[0x40]
0x10c: V57 = SUB V54 V56
0x10e: V58 = SHA3 V56 V57
0x10f: V59 = 0x100000000000000000000000000000000000000000000000000000000
0x12e: V60 = DIV V58 0x100000000000000000000000000000000000000000000000000000000
0x132: V61 = 0x40
0x134: V62 = M[0x40]
0x136: V63 = 0xffffffff
0x13b: V64 = AND 0xffffffff V60
0x13c: V65 = 0x100000000000000000000000000000000000000000000000000000000
0x15a: V66 = MUL 0x100000000000000000000000000000000000000000000000000000000 V64
0x15c: M[V62] = V66
0x15d: V67 = 0x4
0x15f: V68 = ADD 0x4 V62
0x163: V69 = M[V35]
0x165: V70 = 0x20
0x167: V71 = ADD 0x20 V35
0x169: V72 = 0x20
0x16b: V73 = MUL 0x20 V69
0x16f: V74 = 0x0
---
Entry stack: [V7, 0xbe, V20, V35, V43]
Stack pops: 3
Stack additions: [S2, S1, S0, V48, V60, V49, S1, S0, V68, V68, V71, V73, V73, V68, V71, 0x0]
Exit stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, 0x0]

================================

Block 0x171
[0x171:0x179]
---
Predecessors: [0xc0, 0x182]
Successors: [0x17a, 0x18d]
---
0x171 JUMPDEST
0x172 DUP4
0x173 DUP2
0x174 LT
0x175 ISZERO
0x176 PUSH2 0x18d
0x179 JUMPI
---
0x171: JUMPDEST 
0x174: V75 = LT S0 V73
0x175: V76 = ISZERO V75
0x176: V77 = 0x18d
0x179: JUMPI 0x18d V76
---
Entry stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, S0]

================================

Block 0x17a
[0x17a:0x181]
---
Predecessors: [0x171]
Successors: [0x182]
---
0x17a DUP1
0x17b DUP3
0x17c ADD
0x17d MLOAD
0x17e DUP2
0x17f DUP5
0x180 ADD
0x181 MSTORE
---
0x17c: V78 = ADD V71 S0
0x17d: V79 = M[V78]
0x180: V80 = ADD V68 S0
0x181: M[V80] = V79
---
Entry stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, S0]

================================

Block 0x182
[0x182:0x18c]
---
Predecessors: [0x17a]
Successors: [0x171]
---
0x182 JUMPDEST
0x183 PUSH1 0x20
0x185 DUP2
0x186 ADD
0x187 SWAP1
0x188 POP
0x189 PUSH2 0x171
0x18c JUMP
---
0x182: JUMPDEST 
0x183: V81 = 0x20
0x186: V82 = ADD S0 0x20
0x189: V83 = 0x171
0x18c: JUMP 0x171
---
Entry stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, S0]
Stack pops: 1
Stack additions: [V82]
Exit stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, V82]

================================

Block 0x18d
[0x18d:0x1b2]
---
Predecessors: [0x171]
Successors: [0x1b3]
---
0x18d JUMPDEST
0x18e POP
0x18f POP
0x190 POP
0x191 POP
0x192 SWAP1
0x193 POP
0x194 ADD
0x195 DUP3
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP3
0x19c POP
0x19d POP
0x19e POP
0x19f PUSH1 0x0
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 DUP1
0x1a5 DUP4
0x1a6 SUB
0x1a7 DUP2
0x1a8 PUSH1 0x0
0x1aa DUP9
0x1ab DUP8
0x1ac CALL
0x1ad SWAP4
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 POP
---
0x18d: JUMPDEST 
0x194: V84 = ADD V73 V68
0x197: M[V84] = V43
0x198: V85 = 0x20
0x19a: V86 = ADD 0x20 V84
0x19f: V87 = 0x0
0x1a1: V88 = 0x40
0x1a3: V89 = M[0x40]
0x1a6: V90 = SUB V86 V89
0x1a8: V91 = 0x0
0x1ac: V92 = CALL V49 V48 0x0 V89 V90 V89 0x0
---
Entry stack: [V7, 0xbe, V20, V35, V43, V48, V60, V49, V35, V43, V68, V68, V71, V73, V73, V68, V71, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V7, 0xbe, V20, V35, V43]

================================

Block 0x1b3
[0x1b3:0x1b7]
---
Predecessors: [0x18d]
Successors: [0xbe]
---
0x1b3 JUMPDEST
0x1b4 POP
0x1b5 POP
0x1b6 POP
0x1b7 JUMP
---
0x1b3: JUMPDEST 
0x1b7: JUMP 0xbe
---
Entry stack: [V7, 0xbe, V20, V35, V43]
Stack pops: 4
Stack additions: []
Exit stack: [V7]

================================

Block 0x1b8
[0x1b8:0x1e3]
---
Predecessors: []
Successors: []
---
0x1b8 STOP
0x1b9 LOG1
0x1ba PUSH6 0x627a7a723058
0x1c1 SHA3
0x1c2 GASPRICE
0x1c3 SGT
0x1c4 SELFDESTRUCT
0x1c5 MISSING 0xc2
0x1c6 MISSING 0xbf
0x1c7 MISSING 0x2d
0x1c8 MISSING 0xcb
0x1c9 SHL
0x1ca ADDRESS
0x1cb MISSING 0xfb
0x1cc PUSH11 0xa2dadf8f5b28a9405bbe30
0x1d8 GASPRICE
0x1d9 EXTCODEHASH
0x1da MISSING 0xcb
0x1db MISSING 0x2c
0x1dc GAS
0x1dd TIMESTAMP
0x1de CALL
0x1df SWAP1
0x1e0 ADDMOD
0x1e1 SLOAD
0x1e2 STOP
0x1e3 MISSING 0x29
---
0x1b8: STOP 
0x1b9: LOG S0 S1 S2
0x1ba: V93 = 0x627a7a723058
0x1c1: V94 = SHA3 0x627a7a723058 S3
0x1c2: V95 = GASPRICE
0x1c3: V96 = SGT V95 V94
0x1c4: SELFDESTRUCT V96
0x1c5: MISSING 0xc2
0x1c6: MISSING 0xbf
0x1c7: MISSING 0x2d
0x1c8: MISSING 0xcb
0x1c9: V97 = SHL S0 S1
0x1ca: V98 = ADDRESS
0x1cb: MISSING 0xfb
0x1cc: V99 = 0xa2dadf8f5b28a9405bbe30
0x1d8: V100 = GASPRICE
0x1d9: V101 = EXTCODEHASH V100
0x1da: MISSING 0xcb
0x1db: MISSING 0x2c
0x1dc: V102 = GAS
0x1dd: V103 = TIMESTAMP
0x1de: V104 = CALL V103 V102 S0 S1 S2 S3 S4
0x1e0: V105 = ADDMOD S5 V104 S6
0x1e1: V106 = S[V105]
0x1e2: STOP 
0x1e3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V98, V97, V101, 0xa2dadf8f5b28a9405bbe30, V106]
Exit stack: []

================================

Function 0:
Public function signature: 0x8b3cba7b
Entry block: 0x3e
Exit block: 0xbe
Body: 0x3e, 0x45, 0x49, 0xbe, 0xc0, 0x171, 0x17a, 0x182, 0x18d, 0x1b3

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

