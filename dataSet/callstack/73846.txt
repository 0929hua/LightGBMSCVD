Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xb3]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x4592cd1d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xb3
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x4592cd1d
0x20: V14 = EQ V12 0x4592cd1d
0x21: V15 = 0xb3
0x24: JUMPI 0xb3 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd4]
---
0x25 DUP1
0x26 PUSH4 0x557f4bc9
0x2b EQ
0x2c PUSH2 0xd4
0x2f JUMPI
---
0x26: V16 = 0x557f4bc9
0x2b: V17 = EQ 0x557f4bc9 V12
0x2c: V18 = 0xd4
0x2f: JUMPI 0xd4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x101]
---
0x30 DUP1
0x31 PUSH4 0x5aa77d3c
0x36 EQ
0x37 PUSH2 0x101
0x3a JUMPI
---
0x31: V19 = 0x5aa77d3c
0x36: V20 = EQ 0x5aa77d3c V12
0x37: V21 = 0x101
0x3a: JUMPI 0x101 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x12a]
---
0x3b DUP1
0x3c PUSH4 0xce606ee0
0x41 EQ
0x42 PUSH2 0x12a
0x45 JUMPI
---
0x3c: V22 = 0xce606ee0
0x41: V23 = EQ 0xce606ee0 V12
0x42: V24 = 0x12a
0x45: JUMPI 0x12a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x153]
---
0x46 DUP1
0x47 PUSH4 0xd613be0a
0x4c EQ
0x4d PUSH2 0x153
0x50 JUMPI
---
0x47: V25 = 0xd613be0a
0x4c: V26 = EQ 0xd613be0a V12
0x4d: V27 = 0x153
0x50: JUMPI 0x153 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x180]
---
0x51 DUP1
0x52 PUSH4 0xe04f31e9
0x57 EQ
0x58 PUSH2 0x180
0x5b JUMPI
---
0x52: V28 = 0xe04f31e9
0x57: V29 = EQ 0xe04f31e9 V12
0x58: V30 = 0x180
0x5b: JUMPI 0x180 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1f6]
---
0x5c DUP1
0x5d PUSH4 0xf8a6c595
0x62 EQ
0x63 PUSH2 0x1f6
0x66 JUMPI
---
0x5d: V31 = 0xf8a6c595
0x62: V32 = EQ 0xf8a6c595 V12
0x63: V33 = 0x1f6
0x66: JUMPI 0x1f6 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x0, 0x5c]
Successors: [0x6b]
---
0x67 JUMPDEST
0x68 PUSH2 0xb1
---
0x67: JUMPDEST 
0x68: V34 = 0xb1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb1]
Exit stack: [V12, 0xb1]

================================

Block 0x6b
[0x6b:0xae]
---
Predecessors: [0x67]
Successors: [0xaf]
---
0x6b JUMPDEST
0x6c PUSH1 0x40
0x6e DUP1
0x6f MLOAD
0x70 PUSH1 0x1
0x72 PUSH1 0xa0
0x74 PUSH1 0x2
0x76 EXP
0x77 SUB
0x78 CALLER
0x79 AND
0x7a DUP2
0x7b MSTORE
0x7c CALLVALUE
0x7d PUSH1 0x20
0x7f DUP3
0x80 ADD
0x81 MSTORE
0x82 DUP2
0x83 MLOAD
0x84 PUSH32 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0xa5 SWAP3
0xa6 SWAP2
0xa7 DUP2
0xa8 SWAP1
0xa9 SUB
0xaa SWAP1
0xab SWAP2
0xac ADD
0xad SWAP1
0xae LOG1
---
0x6b: JUMPDEST 
0x6c: V35 = 0x40
0x6f: V36 = M[0x40]
0x70: V37 = 0x1
0x72: V38 = 0xa0
0x74: V39 = 0x2
0x76: V40 = EXP 0x2 0xa0
0x77: V41 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78: V42 = CALLER
0x79: V43 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0x7b: M[V36] = V43
0x7c: V44 = CALLVALUE
0x7d: V45 = 0x20
0x80: V46 = ADD V36 0x20
0x81: M[V46] = V44
0x83: V47 = M[0x40]
0x84: V48 = 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
0xa9: V49 = SUB V36 V47
0xac: V50 = ADD 0x40 V49
0xae: LOG V47 V50 0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874
---
Entry stack: [V12, 0xb1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb1]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x6b]
Successors: [0xb1]
---
0xaf JUMPDEST
0xb0 JUMP
---
0xaf: JUMPDEST 
0xb0: JUMP 0xb1
---
Entry stack: [V12, 0xb1]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0xaf, 0x37c]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb3
[0xb3:0xb8]
---
Predecessors: [0xb]
Successors: [0xb9]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 PUSH2 0x0
0xb8 JUMPI
---
0xb3: JUMPDEST 
0xb4: V51 = CALLVALUE
0xb5: V52 = 0x0
0xb8: THROWI V51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb9
[0xb9:0xbf]
---
Predecessors: [0xb3]
Successors: [0x211]
---
0xb9 PUSH2 0xc0
0xbc PUSH2 0x211
0xbf JUMP
---
0xb9: V53 = 0xc0
0xbc: V54 = 0x211
0xbf: JUMP 0x211
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc0]
Exit stack: [V12, 0xc0]

================================

Block 0xc0
[0xc0:0xd3]
---
Predecessors: [0x259, 0x293, 0x2ef]
Successors: []
---
0xc0 JUMPDEST
0xc1 PUSH1 0x40
0xc3 DUP1
0xc4 MLOAD
0xc5 SWAP2
0xc6 ISZERO
0xc7 ISZERO
0xc8 DUP3
0xc9 MSTORE
0xca MLOAD
0xcb SWAP1
0xcc DUP2
0xcd SWAP1
0xce SUB
0xcf PUSH1 0x20
0xd1 ADD
0xd2 SWAP1
0xd3 RETURN
---
0xc0: JUMPDEST 
0xc1: V55 = 0x40
0xc4: V56 = M[0x40]
0xc6: V57 = ISZERO {0x0, 0x1}
0xc7: V58 = ISZERO V57
0xc9: M[V56] = V58
0xca: V59 = M[0x40]
0xce: V60 = SUB V56 V59
0xcf: V61 = 0x20
0xd1: V62 = ADD 0x20 V60
0xd3: RETURN V59 V62
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd4
[0xd4:0xd9]
---
Predecessors: [0x25]
Successors: [0xda]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 PUSH2 0x0
0xd9 JUMPI
---
0xd4: JUMPDEST 
0xd5: V63 = CALLVALUE
0xd6: V64 = 0x0
0xd9: THROWI V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xda
[0xda:0xec]
---
Predecessors: [0xd4]
Successors: [0x25c]
---
0xda PUSH2 0xc0
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 PUSH1 0x4
0xe7 CALLDATALOAD
0xe8 AND
0xe9 PUSH2 0x25c
0xec JUMP
---
0xda: V65 = 0xc0
0xdd: V66 = 0x1
0xdf: V67 = 0xa0
0xe1: V68 = 0x2
0xe3: V69 = EXP 0x2 0xa0
0xe4: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V71 = 0x4
0xe7: V72 = CALLDATALOAD 0x4
0xe8: V73 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V74 = 0x25c
0xec: JUMP 0x25c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc0, V73]
Exit stack: [V12, 0xc0, V73]

================================

Block 0xed
[0xed:0x100]
---
Predecessors: []
Successors: []
---
0xed JUMPDEST
0xee PUSH1 0x40
0xf0 DUP1
0xf1 MLOAD
0xf2 SWAP2
0xf3 ISZERO
0xf4 ISZERO
0xf5 DUP3
0xf6 MSTORE
0xf7 MLOAD
0xf8 SWAP1
0xf9 DUP2
0xfa SWAP1
0xfb SUB
0xfc PUSH1 0x20
0xfe ADD
0xff SWAP1
0x100 RETURN
---
0xed: JUMPDEST 
0xee: V75 = 0x40
0xf1: V76 = M[0x40]
0xf3: V77 = ISZERO S0
0xf4: V78 = ISZERO V77
0xf6: M[V76] = V78
0xf7: V79 = M[0x40]
0xfb: V80 = SUB V76 V79
0xfc: V81 = 0x20
0xfe: V82 = ADD 0x20 V80
0x100: RETURN V79 V82
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x101
[0x101:0x106]
---
Predecessors: [0x30]
Successors: [0x107]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 PUSH2 0x0
0x106 JUMPI
---
0x101: JUMPDEST 
0x102: V83 = CALLVALUE
0x103: V84 = 0x0
0x106: THROWI V83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0x101]
Successors: [0x298]
---
0x107 PUSH2 0x10e
0x10a PUSH2 0x298
0x10d JUMP
---
0x107: V85 = 0x10e
0x10a: V86 = 0x298
0x10d: JUMP 0x298
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V12, 0x10e]

================================

Block 0x10e
[0x10e:0x129]
---
Predecessors: [0x298, 0x2a7]
Successors: []
---
0x10e JUMPDEST
0x10f PUSH1 0x40
0x111 DUP1
0x112 MLOAD
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b SWAP1
0x11c SWAP3
0x11d AND
0x11e DUP3
0x11f MSTORE
0x120 MLOAD
0x121 SWAP1
0x122 DUP2
0x123 SWAP1
0x124 SUB
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 RETURN
---
0x10e: JUMPDEST 
0x10f: V87 = 0x40
0x112: V88 = M[0x40]
0x113: V89 = 0x1
0x115: V90 = 0xa0
0x117: V91 = 0x2
0x119: V92 = EXP 0x2 0xa0
0x11a: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V94 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11f: M[V88] = V94
0x120: V95 = M[0x40]
0x124: V96 = SUB V88 V95
0x125: V97 = 0x20
0x127: V98 = ADD 0x20 V96
0x129: RETURN V95 V98
---
Entry stack: [V12, 0x10e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x10e]

================================

Block 0x12a
[0x12a:0x12f]
---
Predecessors: [0x3b]
Successors: [0x130]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c PUSH2 0x0
0x12f JUMPI
---
0x12a: JUMPDEST 
0x12b: V99 = CALLVALUE
0x12c: V100 = 0x0
0x12f: THROWI V99
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x130
[0x130:0x136]
---
Predecessors: [0x12a]
Successors: [0x2a7]
---
0x130 PUSH2 0x10e
0x133 PUSH2 0x2a7
0x136 JUMP
---
0x130: V101 = 0x10e
0x133: V102 = 0x2a7
0x136: JUMP 0x2a7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V12, 0x10e]

================================

Block 0x137
[0x137:0x152]
---
Predecessors: []
Successors: []
---
0x137 JUMPDEST
0x138 PUSH1 0x40
0x13a DUP1
0x13b MLOAD
0x13c PUSH1 0x1
0x13e PUSH1 0xa0
0x140 PUSH1 0x2
0x142 EXP
0x143 SUB
0x144 SWAP1
0x145 SWAP3
0x146 AND
0x147 DUP3
0x148 MSTORE
0x149 MLOAD
0x14a SWAP1
0x14b DUP2
0x14c SWAP1
0x14d SUB
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP1
0x152 RETURN
---
0x137: JUMPDEST 
0x138: V103 = 0x40
0x13b: V104 = M[0x40]
0x13c: V105 = 0x1
0x13e: V106 = 0xa0
0x140: V107 = 0x2
0x142: V108 = EXP 0x2 0xa0
0x143: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x146: V110 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x148: M[V104] = V110
0x149: V111 = M[0x40]
0x14d: V112 = SUB V104 V111
0x14e: V113 = 0x20
0x150: V114 = ADD 0x20 V112
0x152: RETURN V111 V114
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x153
[0x153:0x158]
---
Predecessors: [0x46]
Successors: [0x159]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 PUSH2 0x0
0x158 JUMPI
---
0x153: JUMPDEST 
0x154: V115 = CALLVALUE
0x155: V116 = 0x0
0x158: THROWI V115
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x159
[0x159:0x16b]
---
Predecessors: [0x153]
Successors: [0x2b6]
---
0x159 PUSH2 0xc0
0x15c PUSH1 0x1
0x15e PUSH1 0xa0
0x160 PUSH1 0x2
0x162 EXP
0x163 SUB
0x164 PUSH1 0x4
0x166 CALLDATALOAD
0x167 AND
0x168 PUSH2 0x2b6
0x16b JUMP
---
0x159: V117 = 0xc0
0x15c: V118 = 0x1
0x15e: V119 = 0xa0
0x160: V120 = 0x2
0x162: V121 = EXP 0x2 0xa0
0x163: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x164: V123 = 0x4
0x166: V124 = CALLDATALOAD 0x4
0x167: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x168: V126 = 0x2b6
0x16b: JUMP 0x2b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc0, V125]
Exit stack: [V12, 0xc0, V125]

================================

Block 0x16c
[0x16c:0x17f]
---
Predecessors: []
Successors: []
---
0x16c JUMPDEST
0x16d PUSH1 0x40
0x16f DUP1
0x170 MLOAD
0x171 SWAP2
0x172 ISZERO
0x173 ISZERO
0x174 DUP3
0x175 MSTORE
0x176 MLOAD
0x177 SWAP1
0x178 DUP2
0x179 SWAP1
0x17a SUB
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP1
0x17f RETURN
---
0x16c: JUMPDEST 
0x16d: V127 = 0x40
0x170: V128 = M[0x40]
0x172: V129 = ISZERO S0
0x173: V130 = ISZERO V129
0x175: M[V128] = V130
0x176: V131 = M[0x40]
0x17a: V132 = SUB V128 V131
0x17b: V133 = 0x20
0x17d: V134 = ADD 0x20 V132
0x17f: RETURN V131 V134
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x180
[0x180:0x185]
---
Predecessors: [0x51]
Successors: [0x186]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 PUSH2 0x0
0x185 JUMPI
---
0x180: JUMPDEST 
0x181: V135 = CALLVALUE
0x182: V136 = 0x0
0x185: THROWI V135
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x186
[0x186:0x1e3]
---
Predecessors: [0x180]
Successors: [0x2f4]
---
0x186 PUSH1 0x40
0x188 DUP1
0x189 MLOAD
0x18a PUSH1 0x20
0x18c PUSH1 0x4
0x18e PUSH1 0x44
0x190 CALLDATALOAD
0x191 DUP2
0x192 DUP2
0x193 ADD
0x194 CALLDATALOAD
0x195 PUSH1 0x1f
0x197 DUP2
0x198 ADD
0x199 DUP5
0x19a SWAP1
0x19b DIV
0x19c DUP5
0x19d MUL
0x19e DUP6
0x19f ADD
0x1a0 DUP5
0x1a1 ADD
0x1a2 SWAP1
0x1a3 SWAP6
0x1a4 MSTORE
0x1a5 DUP5
0x1a6 DUP5
0x1a7 MSTORE
0x1a8 PUSH2 0x1e4
0x1ab SWAP5
0x1ac DUP3
0x1ad CALLDATALOAD
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 AND
0x1b7 SWAP5
0x1b8 PUSH1 0x24
0x1ba DUP1
0x1bb CALLDATALOAD
0x1bc SWAP6
0x1bd PUSH1 0x64
0x1bf SWAP5
0x1c0 SWAP3
0x1c1 SWAP4
0x1c2 SWAP2
0x1c3 SWAP1
0x1c4 SWAP3
0x1c5 ADD
0x1c6 SWAP2
0x1c7 DUP2
0x1c8 SWAP1
0x1c9 DUP5
0x1ca ADD
0x1cb DUP4
0x1cc DUP3
0x1cd DUP1
0x1ce DUP3
0x1cf DUP5
0x1d0 CALLDATACOPY
0x1d1 POP
0x1d2 SWAP5
0x1d3 SWAP7
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 SWAP2
0x1d9 CALLDATALOAD
0x1da ISZERO
0x1db ISZERO
0x1dc SWAP2
0x1dd POP
0x1de PUSH2 0x2f4
0x1e1 SWAP1
0x1e2 POP
0x1e3 JUMP
---
0x186: V137 = 0x40
0x189: V138 = M[0x40]
0x18a: V139 = 0x20
0x18c: V140 = 0x4
0x18e: V141 = 0x44
0x190: V142 = CALLDATALOAD 0x44
0x193: V143 = ADD V142 0x4
0x194: V144 = CALLDATALOAD V143
0x195: V145 = 0x1f
0x198: V146 = ADD V144 0x1f
0x19b: V147 = DIV V146 0x20
0x19d: V148 = MUL 0x20 V147
0x19f: V149 = ADD V138 V148
0x1a1: V150 = ADD 0x20 V149
0x1a4: M[0x40] = V150
0x1a7: M[V138] = V144
0x1a8: V151 = 0x1e4
0x1ad: V152 = CALLDATALOAD 0x4
0x1ae: V153 = 0x1
0x1b0: V154 = 0xa0
0x1b2: V155 = 0x2
0x1b4: V156 = EXP 0x2 0xa0
0x1b5: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b6: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x1b8: V159 = 0x24
0x1bb: V160 = CALLDATALOAD 0x24
0x1bd: V161 = 0x64
0x1c5: V162 = ADD V142 0x24
0x1ca: V163 = ADD V138 0x20
0x1d0: CALLDATACOPY V163 V162 V144
0x1d9: V164 = CALLDATALOAD 0x64
0x1da: V165 = ISZERO V164
0x1db: V166 = ISZERO V165
0x1de: V167 = 0x2f4
0x1e3: JUMP 0x2f4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e4, V158, V160, V138, V166]
Exit stack: [V12, 0x1e4, V158, V160, V138, V166]

================================

Block 0x1e4
[0x1e4:0x1f5]
---
Predecessors: [0x341]
Successors: []
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x40
0x1e7 DUP1
0x1e8 MLOAD
0x1e9 SWAP2
0x1ea DUP3
0x1eb MSTORE
0x1ec MLOAD
0x1ed SWAP1
0x1ee DUP2
0x1ef SWAP1
0x1f0 SUB
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 SWAP1
0x1f5 RETURN
---
0x1e4: JUMPDEST 
0x1e5: V168 = 0x40
0x1e8: V169 = M[0x40]
0x1eb: M[V169] = S0
0x1ec: V170 = M[0x40]
0x1f0: V171 = SUB V169 V170
0x1f1: V172 = 0x20
0x1f3: V173 = ADD 0x20 V171
0x1f5: RETURN V170 V173
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f6
[0x1f6:0x1fb]
---
Predecessors: [0x5c]
Successors: [0x1fc]
---
0x1f6 JUMPDEST
0x1f7 CALLVALUE
0x1f8 PUSH2 0x0
0x1fb JUMPI
---
0x1f6: JUMPDEST 
0x1f7: V174 = CALLVALUE
0x1f8: V175 = 0x0
0x1fb: THROWI V174
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x20e]
---
Predecessors: [0x1f6]
Successors: [0x34a]
---
0x1fc PUSH2 0xb1
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 PUSH1 0x4
0x209 CALLDATALOAD
0x20a AND
0x20b PUSH2 0x34a
0x20e JUMP
---
0x1fc: V176 = 0xb1
0x1ff: V177 = 0x1
0x201: V178 = 0xa0
0x203: V179 = 0x2
0x205: V180 = EXP 0x2 0xa0
0x206: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V182 = 0x4
0x209: V183 = CALLDATALOAD 0x4
0x20a: V184 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V185 = 0x34a
0x20e: JUMP 0x34a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb1, V184]
Exit stack: [V12, 0xb1, V184]

================================

Block 0x20f
[0x20f:0x210]
---
Predecessors: []
Successors: []
---
0x20f JUMPDEST
0x210 STOP
---
0x20f: JUMPDEST 
0x210: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x211
[0x211:0x22a]
---
Predecessors: [0xb9]
Successors: [0x22b, 0x232]
---
0x211 JUMPDEST
0x212 PUSH1 0x1
0x214 SLOAD
0x215 PUSH1 0x0
0x217 SWAP1
0x218 CALLER
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 SWAP1
0x222 DUP2
0x223 AND
0x224 SWAP2
0x225 AND
0x226 EQ
0x227 PUSH2 0x232
0x22a JUMPI
---
0x211: JUMPDEST 
0x212: V186 = 0x1
0x214: V187 = S[0x1]
0x215: V188 = 0x0
0x218: V189 = CALLER
0x219: V190 = 0x1
0x21b: V191 = 0xa0
0x21d: V192 = 0x2
0x21f: V193 = EXP 0x2 0xa0
0x220: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x225: V196 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x226: V197 = EQ V196 V195
0x227: V198 = 0x232
0x22a: JUMPI 0x232 V197
---
Entry stack: [V12, 0xc0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc0, 0x0]

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x211]
Successors: [0x259]
---
0x22b POP
0x22c PUSH1 0x0
0x22e PUSH2 0x259
0x231 JUMP
---
0x22c: V199 = 0x0
0x22e: V200 = 0x259
0x231: JUMP 0x259
---
Entry stack: [V12, 0xc0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0xc0, 0x0]

================================

Block 0x232
[0x232:0x258]
---
Predecessors: [0x211]
Successors: [0x259]
---
0x232 JUMPDEST
0x233 POP
0x234 PUSH1 0x1
0x236 DUP1
0x237 SLOAD
0x238 PUSH1 0x0
0x23a DUP1
0x23b SLOAD
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 NOT
0x245 SWAP1
0x246 DUP2
0x247 AND
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 DUP5
0x251 AND
0x252 OR
0x253 SWAP1
0x254 SWAP2
0x255 SSTORE
0x256 AND
0x257 DUP2
0x258 SSTORE
---
0x232: JUMPDEST 
0x234: V201 = 0x1
0x237: V202 = S[0x1]
0x238: V203 = 0x0
0x23b: V204 = S[0x0]
0x23c: V205 = 0x1
0x23e: V206 = 0xa0
0x240: V207 = 0x2
0x242: V208 = EXP 0x2 0xa0
0x243: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V210 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x247: V211 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V204
0x248: V212 = 0x1
0x24a: V213 = 0xa0
0x24c: V214 = 0x2
0x24e: V215 = EXP 0x2 0xa0
0x24f: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V217 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x252: V218 = OR V217 V211
0x255: S[0x0] = V218
0x256: V219 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V202
0x258: S[0x1] = V219
---
Entry stack: [V12, 0xc0, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xc0, 0x1]

================================

Block 0x259
[0x259:0x25b]
---
Predecessors: [0x22b, 0x232]
Successors: [0xc0]
---
0x259 JUMPDEST
0x25a SWAP1
0x25b JUMP
---
0x259: JUMPDEST 
0x25b: JUMP 0xc0
---
Entry stack: [V12, 0xc0, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x25c
[0x25c:0x274]
---
Predecessors: [0xda]
Successors: [0x275, 0x291]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f DUP1
0x260 SLOAD
0x261 CALLER
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a SWAP1
0x26b DUP2
0x26c AND
0x26d SWAP2
0x26e AND
0x26f EQ
0x270 ISZERO
0x271 PUSH2 0x291
0x274 JUMPI
---
0x25c: JUMPDEST 
0x25d: V220 = 0x0
0x260: V221 = S[0x0]
0x261: V222 = CALLER
0x262: V223 = 0x1
0x264: V224 = 0xa0
0x266: V225 = 0x2
0x268: V226 = EXP 0x2 0xa0
0x269: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26c: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x26e: V229 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x26f: V230 = EQ V229 V228
0x270: V231 = ISZERO V230
0x271: V232 = 0x291
0x274: JUMPI 0x291 V231
---
Entry stack: [V12, 0xc0, V73]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc0, V73, 0x0]

================================

Block 0x275
[0x275:0x290]
---
Predecessors: [0x25c]
Successors: [0x291]
---
0x275 POP
0x276 PUSH1 0x1
0x278 DUP1
0x279 SLOAD
0x27a PUSH1 0x1
0x27c PUSH1 0xa0
0x27e PUSH1 0x2
0x280 EXP
0x281 SUB
0x282 NOT
0x283 AND
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c DUP4
0x28d AND
0x28e OR
0x28f DUP2
0x290 SSTORE
---
0x276: V233 = 0x1
0x279: V234 = S[0x1]
0x27a: V235 = 0x1
0x27c: V236 = 0xa0
0x27e: V237 = 0x2
0x280: V238 = EXP 0x2 0xa0
0x281: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x282: V240 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x283: V241 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V234
0x284: V242 = 0x1
0x286: V243 = 0xa0
0x288: V244 = 0x2
0x28a: V245 = EXP 0x2 0xa0
0x28b: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28d: V247 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V248 = OR V247 V241
0x290: S[0x1] = V248
---
Entry stack: [V12, 0xc0, V73, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0xc0, V73, 0x1]

================================

Block 0x291
[0x291:0x291]
---
Predecessors: [0x25c, 0x275, 0x2b6]
Successors: [0x292]
---
0x291 JUMPDEST
---
0x291: JUMPDEST 
---
Entry stack: [V12, 0xc0, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc0, S1, {0x0, 0x1}]

================================

Block 0x292
[0x292:0x292]
---
Predecessors: [0x291]
Successors: [0x293]
---
0x292 JUMPDEST
---
0x292: JUMPDEST 
---
Entry stack: [V12, 0xc0, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc0, S1, {0x0, 0x1}]

================================

Block 0x293
[0x293:0x297]
---
Predecessors: [0x292]
Successors: [0xc0]
---
0x293 JUMPDEST
0x294 SWAP2
0x295 SWAP1
0x296 POP
0x297 JUMP
---
0x293: JUMPDEST 
0x297: JUMP 0xc0
---
Entry stack: [V12, 0xc0, S1, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x298
[0x298:0x2a6]
---
Predecessors: [0x107]
Successors: [0x10e]
---
0x298 JUMPDEST
0x299 PUSH1 0x1
0x29b SLOAD
0x29c PUSH1 0x1
0x29e PUSH1 0xa0
0x2a0 PUSH1 0x2
0x2a2 EXP
0x2a3 SUB
0x2a4 AND
0x2a5 DUP2
0x2a6 JUMP
---
0x298: JUMPDEST 
0x299: V249 = 0x1
0x29b: V250 = S[0x1]
0x29c: V251 = 0x1
0x29e: V252 = 0xa0
0x2a0: V253 = 0x2
0x2a2: V254 = EXP 0x2 0xa0
0x2a3: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x2a6: JUMP 0x10e
---
Entry stack: [V12, 0x10e]
Stack pops: 1
Stack additions: [S0, V256]
Exit stack: [V12, 0x10e, V256]

================================

Block 0x2a7
[0x2a7:0x2b5]
---
Predecessors: [0x130]
Successors: [0x10e]
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa SLOAD
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 DUP2
0x2b5 JUMP
---
0x2a7: JUMPDEST 
0x2a8: V257 = 0x0
0x2aa: V258 = S[0x0]
0x2ab: V259 = 0x1
0x2ad: V260 = 0xa0
0x2af: V261 = 0x2
0x2b1: V262 = EXP 0x2 0xa0
0x2b2: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x2b5: JUMP 0x10e
---
Entry stack: [V12, 0x10e]
Stack pops: 1
Stack additions: [S0, V264]
Exit stack: [V12, 0x10e, V264]

================================

Block 0x2b6
[0x2b6:0x2ce]
---
Predecessors: [0x159]
Successors: [0x291, 0x2cf]
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba SLOAD
0x2bb CALLER
0x2bc PUSH1 0x1
0x2be PUSH1 0xa0
0x2c0 PUSH1 0x2
0x2c2 EXP
0x2c3 SUB
0x2c4 SWAP1
0x2c5 DUP2
0x2c6 AND
0x2c7 SWAP2
0x2c8 AND
0x2c9 EQ
0x2ca ISZERO
0x2cb PUSH2 0x291
0x2ce JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V265 = 0x0
0x2ba: V266 = S[0x0]
0x2bb: V267 = CALLER
0x2bc: V268 = 0x1
0x2be: V269 = 0xa0
0x2c0: V270 = 0x2
0x2c2: V271 = EXP 0x2 0xa0
0x2c3: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x2c8: V274 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V275 = EQ V274 V273
0x2ca: V276 = ISZERO V275
0x2cb: V277 = 0x291
0x2ce: JUMPI 0x291 V276
---
Entry stack: [V12, 0xc0, V125]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc0, V125, 0x0]

================================

Block 0x2cf
[0x2cf:0x2ec]
---
Predecessors: [0x2b6]
Successors: [0x2ed]
---
0x2cf POP
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 SLOAD
0x2d4 PUSH1 0x1
0x2d6 PUSH1 0xa0
0x2d8 PUSH1 0x2
0x2da EXP
0x2db SUB
0x2dc NOT
0x2dd AND
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 DUP4
0x2e7 AND
0x2e8 OR
0x2e9 SWAP1
0x2ea SSTORE
0x2eb PUSH1 0x1
---
0x2d0: V278 = 0x0
0x2d3: V279 = S[0x0]
0x2d4: V280 = 0x1
0x2d6: V281 = 0xa0
0x2d8: V282 = 0x2
0x2da: V283 = EXP 0x2 0xa0
0x2db: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dc: V285 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V286 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V279
0x2de: V287 = 0x1
0x2e0: V288 = 0xa0
0x2e2: V289 = 0x2
0x2e4: V290 = EXP 0x2 0xa0
0x2e5: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e7: V292 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V293 = OR V292 V286
0x2ea: S[0x0] = V293
0x2eb: V294 = 0x1
---
Entry stack: [V12, 0xc0, V125, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0xc0, V125, 0x1]

================================

Block 0x2ed
[0x2ed:0x2ed]
---
Predecessors: [0x2cf]
Successors: [0x2ee]
---
0x2ed JUMPDEST
---
0x2ed: JUMPDEST 
---
Entry stack: [V12, 0xc0, V125, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc0, V125, 0x1]

================================

Block 0x2ee
[0x2ee:0x2ee]
---
Predecessors: [0x2ed]
Successors: [0x2ef]
---
0x2ee JUMPDEST
---
0x2ee: JUMPDEST 
---
Entry stack: [V12, 0xc0, V125, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc0, V125, 0x1]

================================

Block 0x2ef
[0x2ef:0x2f3]
---
Predecessors: [0x2ee]
Successors: [0xc0]
---
0x2ef JUMPDEST
0x2f0 SWAP2
0x2f1 SWAP1
0x2f2 POP
0x2f3 JUMP
---
0x2ef: JUMPDEST 
0x2f3: JUMP 0xc0
---
Entry stack: [V12, 0xc0, V125, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x2f4
[0x2f4:0x30e]
---
Predecessors: [0x186]
Successors: [0x30f, 0x33e]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 SLOAD
0x2f9 DUP2
0x2fa SWAP1
0x2fb CALLER
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 SWAP1
0x305 DUP2
0x306 AND
0x307 SWAP2
0x308 AND
0x309 EQ
0x30a ISZERO
0x30b PUSH2 0x33e
0x30e JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V295 = 0x0
0x2f8: V296 = S[0x0]
0x2fb: V297 = CALLER
0x2fc: V298 = 0x1
0x2fe: V299 = 0xa0
0x300: V300 = 0x2
0x302: V301 = EXP 0x2 0xa0
0x303: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x308: V304 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x309: V305 = EQ V304 V303
0x30a: V306 = ISZERO V305
0x30b: V307 = 0x33e
0x30e: JUMPI 0x33e V306
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, 0x0, 0x0]

================================

Block 0x30f
[0x30f:0x331]
---
Predecessors: [0x2f4]
Successors: [0x332, 0x334]
---
0x30f PUSH1 0x20
0x311 PUSH1 0x0
0x313 DUP6
0x314 MLOAD
0x315 PUSH1 0x20
0x317 DUP8
0x318 ADD
0x319 DUP9
0x31a DUP11
0x31b PUSH1 0x40
0x31d PUSH1 0x3f
0x31f GAS
0x320 MUL
0x321 DIV
0x322 CALL
0x323 SWAP1
0x324 POP
0x325 PUSH1 0x0
0x327 MLOAD
0x328 SWAP2
0x329 POP
0x32a DUP1
0x32b ISZERO
0x32c DUP1
0x32d ISZERO
0x32e PUSH2 0x334
0x331 JUMPI
---
0x30f: V308 = 0x20
0x311: V309 = 0x0
0x314: V310 = M[V138]
0x315: V311 = 0x20
0x318: V312 = ADD V138 0x20
0x31b: V313 = 0x40
0x31d: V314 = 0x3f
0x31f: V315 = GAS
0x320: V316 = MUL V315 0x3f
0x321: V317 = DIV V316 0x40
0x322: V318 = CALL V317 V158 V160 V312 V310 0x0 0x20
0x325: V319 = 0x0
0x327: V320 = M[0x0]
0x32b: V321 = ISZERO V318
0x32d: V322 = ISZERO V321
0x32e: V323 = 0x334
0x331: JUMPI 0x334 V322
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V320, V318, V321]
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, V320, V318, V321]

================================

Block 0x332
[0x332:0x333]
---
Predecessors: [0x30f]
Successors: [0x334]
---
0x332 POP
0x333 DUP3
---
0x332: NOP 
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, V320, V318, V321]
Stack pops: 4
Stack additions: [S3, S2, S1, S3]
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, V320, V318, V166]

================================

Block 0x334
[0x334:0x339]
---
Predecessors: [0x30f, 0x332]
Successors: [0x33a, 0x33e]
---
0x334 JUMPDEST
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x334: JUMPDEST 
0x335: V324 = ISZERO S0
0x336: V325 = 0x33e
0x339: JUMPI 0x33e V324
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, V320, V318, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, V320, V318]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x334]
Successors: []
---
0x33a PUSH2 0x0
0x33d JUMP
---
0x33a: V326 = 0x0
0x33d: THROW 
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, V320, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, V320, V318]

================================

Block 0x33e
[0x33e:0x33e]
---
Predecessors: [0x2f4, 0x334]
Successors: [0x33f]
---
0x33e JUMPDEST
---
0x33e: JUMPDEST 
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, S1, S0]

================================

Block 0x33f
[0x33f:0x33f]
---
Predecessors: [0x33e]
Successors: [0x340]
---
0x33f JUMPDEST
---
0x33f: JUMPDEST 
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, S1, S0]

================================

Block 0x340
[0x340:0x340]
---
Predecessors: [0x33f]
Successors: [0x341]
---
0x340 JUMPDEST
---
0x340: JUMPDEST 
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1e4, V158, V160, V138, V166, S1, S0]

================================

Block 0x341
[0x341:0x349]
---
Predecessors: [0x340]
Successors: [0x1e4]
---
0x341 JUMPDEST
0x342 POP
0x343 SWAP5
0x344 SWAP4
0x345 POP
0x346 POP
0x347 POP
0x348 POP
0x349 JUMP
---
0x341: JUMPDEST 
0x349: JUMP 0x1e4
---
Entry stack: [V12, 0x1e4, V158, V160, V138, V166, S1, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V12, S1]

================================

Block 0x34a
[0x34a:0x35b]
---
Predecessors: [0x1fc]
Successors: [0x35c, 0x360]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d SLOAD
0x34e PUSH1 0x1
0x350 PUSH1 0xa0
0x352 PUSH1 0x2
0x354 EXP
0x355 SUB
0x356 AND
0x357 ISZERO
0x358 PUSH2 0x360
0x35b JUMPI
---
0x34a: JUMPDEST 
0x34b: V327 = 0x0
0x34d: V328 = S[0x0]
0x34e: V329 = 0x1
0x350: V330 = 0xa0
0x352: V331 = 0x2
0x354: V332 = EXP 0x2 0xa0
0x355: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x356: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x357: V335 = ISZERO V334
0x358: V336 = 0x360
0x35b: JUMPI 0x360 V335
---
Entry stack: [V12, 0xb1, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb1, V184]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x34a]
Successors: []
---
0x35c PUSH2 0x0
0x35f JUMP
---
0x35c: V337 = 0x0
0x35f: THROW 
---
Entry stack: [V12, 0xb1, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb1, V184]

================================

Block 0x360
[0x360:0x37b]
---
Predecessors: [0x34a]
Successors: [0x37c]
---
0x360 JUMPDEST
0x361 PUSH1 0x0
0x363 DUP1
0x364 SLOAD
0x365 PUSH1 0x1
0x367 PUSH1 0xa0
0x369 PUSH1 0x2
0x36b EXP
0x36c SUB
0x36d NOT
0x36e AND
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 DUP4
0x378 AND
0x379 OR
0x37a SWAP1
0x37b SSTORE
---
0x360: JUMPDEST 
0x361: V338 = 0x0
0x364: V339 = S[0x0]
0x365: V340 = 0x1
0x367: V341 = 0xa0
0x369: V342 = 0x2
0x36b: V343 = EXP 0x2 0xa0
0x36c: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36d: V345 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V346 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V339
0x36f: V347 = 0x1
0x371: V348 = 0xa0
0x373: V349 = 0x2
0x375: V350 = EXP 0x2 0xa0
0x376: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x378: V352 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x379: V353 = OR V352 V346
0x37b: S[0x0] = V353
---
Entry stack: [V12, 0xb1, V184]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xb1, V184]

================================

Block 0x37c
[0x37c:0x37e]
---
Predecessors: [0x360]
Successors: [0xb1]
---
0x37c JUMPDEST
0x37d POP
0x37e JUMP
---
0x37c: JUMPDEST 
0x37e: JUMP 0xb1
---
Entry stack: [V12, 0xb1, V184]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x37f
[0x37f:0x3b6]
---
Predecessors: []
Successors: []
---
0x37f STOP
0x380 LOG1
0x381 PUSH6 0x627a7a723058
0x388 SHA3
0x389 MISSING 0x2c
0x38a MISSING 0xc6
0x38b MISSING 0xfb
0x38c PUSH21 0x5180bda64fa76db9fb201369134c39b857735eafe2
0x3a2 PUSH20 0x963ffbf687f60029
---
0x37f: STOP 
0x380: LOG S0 S1 S2
0x381: V354 = 0x627a7a723058
0x388: V355 = SHA3 0x627a7a723058 S3
0x389: MISSING 0x2c
0x38a: MISSING 0xc6
0x38b: MISSING 0xfb
0x38c: V356 = 0x5180bda64fa76db9fb201369134c39b857735eafe2
0x3a2: V357 = 0x963ffbf687f60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V355, 0x963ffbf687f60029, 0x5180bda64fa76db9fb201369134c39b857735eafe2]
Exit stack: []

================================

Function 0:
Public function signature: 0x4592cd1d
Entry block: 0xb3
Exit block: 0xc0
Body: 0xb3, 0xb9, 0xc0, 0x211, 0x22b, 0x232, 0x259

Function 1:
Public function signature: 0x557f4bc9
Entry block: 0xd4
Exit block: 0xc0
Body: 0xc0, 0xd4, 0xda, 0x25c, 0x275, 0x291, 0x292, 0x293

Function 2:
Public function signature: 0x5aa77d3c
Entry block: 0x101
Exit block: 0x10e
Body: 0x101, 0x107, 0x10e, 0x298

Function 3:
Public function signature: 0xce606ee0
Entry block: 0x12a
Exit block: 0x10e
Body: 0x10e, 0x12a, 0x130, 0x2a7

Function 4:
Public function signature: 0xd613be0a
Entry block: 0x153
Exit block: 0xc0
Body: 0xc0, 0x153, 0x159, 0x291, 0x292, 0x293, 0x2b6, 0x2cf, 0x2ed, 0x2ee, 0x2ef

Function 5:
Public function signature: 0xe04f31e9
Entry block: 0x180
Exit block: 0x1e4
Body: 0x180, 0x186, 0x1e4, 0x2f4, 0x30f, 0x332, 0x334, 0x33a, 0x33e, 0x33f, 0x340, 0x341

Function 6:
Public function signature: 0xf8a6c595
Entry block: 0x1f6
Exit block: 0xb1
Body: 0xb1, 0x1f6, 0x1fc, 0x34a, 0x35c, 0x360, 0x37c

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0xb1
Body: 0x67, 0x6b, 0xaf, 0xb1

