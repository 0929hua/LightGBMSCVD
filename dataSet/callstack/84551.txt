Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0, 0x56c]
Successors: [0x1a, 0x69]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x69
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x69
0x19: JUMPI 0x69 V8
---
Entry stack: [S0]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x47]
---
Predecessors: [0x10]
Successors: [0x48, 0x6e]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b SWAP1
0x3c DIV
0x3d DUP1
0x3e PUSH4 0x2f4f3316
0x43 EQ
0x44 PUSH2 0x6e
0x47 JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x3c: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x3e: V14 = 0x2f4f3316
0x43: V15 = EQ 0x2f4f3316 V13
0x44: V16 = 0x6e
0x47: JUMPI 0x6e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x1a]
Successors: [0x53, 0xca]
---
0x48 DUP1
0x49 PUSH4 0x57183c82
0x4e EQ
0x4f PUSH2 0xca
0x52 JUMPI
---
0x49: V17 = 0x57183c82
0x4e: V18 = EQ 0x57183c82 V13
0x4f: V19 = 0xca
0x52: JUMPI 0xca V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x158]
---
0x53 DUP1
0x54 PUSH4 0x8f838478
0x59 EQ
0x5a PUSH2 0x158
0x5d JUMPI
---
0x54: V20 = 0x8f838478
0x59: V21 = EQ 0x8f838478 V13
0x5a: V22 = 0x158
0x5d: JUMPI 0x158 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1b0]
---
0x5e DUP1
0x5f PUSH4 0xd4ad2673
0x64 EQ
0x65 PUSH2 0x1b0
0x68 JUMPI
---
0x5f: V23 = 0xd4ad2673
0x64: V24 = EQ 0xd4ad2673 V13
0x65: V25 = 0x1b0
0x68: JUMPI 0x1b0 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x6d]
---
Predecessors: [0x10, 0x5e]
Successors: []
---
0x69 JUMPDEST
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x69: JUMPDEST 
0x6a: V26 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6e
[0x6e:0x7f]
---
Predecessors: [0x1a]
Successors: [0x80, 0x84]
---
0x6e JUMPDEST
0x6f PUSH2 0xb0
0x72 PUSH1 0x4
0x74 DUP1
0x75 CALLDATASIZE
0x76 SUB
0x77 PUSH1 0x20
0x79 DUP2
0x7a LT
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x6e: JUMPDEST 
0x6f: V27 = 0xb0
0x72: V28 = 0x4
0x75: V29 = CALLDATASIZE
0x76: V30 = SUB V29 0x4
0x77: V31 = 0x20
0x7a: V32 = LT V30 0x20
0x7b: V33 = ISZERO V32
0x7c: V34 = 0x84
0x7f: JUMPI 0x84 V33
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xb0, 0x4, V30]
Exit stack: [V13, 0xb0, 0x4, V30]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x6e]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V35 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V13, 0xb0, 0x4, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xb0, 0x4, V30]

================================

Block 0x84
[0x84:0xaf]
---
Predecessors: [0x6e]
Successors: [0x25e]
---
0x84 JUMPDEST
0x85 DUP2
0x86 ADD
0x87 SWAP1
0x88 DUP1
0x89 DUP1
0x8a CALLDATALOAD
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 SWAP1
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP1
0xa6 SWAP3
0xa7 SWAP2
0xa8 SWAP1
0xa9 POP
0xaa POP
0xab POP
0xac PUSH2 0x25e
0xaf JUMP
---
0x84: JUMPDEST 
0x86: V36 = ADD 0x4 V30
0x8a: V37 = CALLDATALOAD 0x4
0x8b: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xa2: V40 = 0x20
0xa4: V41 = ADD 0x20 0x4
0xac: V42 = 0x25e
0xaf: JUMP 0x25e
---
Entry stack: [V13, 0xb0, 0x4, V30]
Stack pops: 2
Stack additions: [V39]
Exit stack: [V13, 0xb0, V39]

================================

Block 0xb0
[0xb0:0xc9]
---
Predecessors: [0x25e]
Successors: []
---
0xb0 JUMPDEST
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 DUP1
0xb5 DUP3
0xb6 ISZERO
0xb7 ISZERO
0xb8 ISZERO
0xb9 ISZERO
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0xb0: JUMPDEST 
0xb1: V43 = 0x40
0xb3: V44 = M[0x40]
0xb6: V45 = ISZERO V154
0xb7: V46 = ISZERO V45
0xb8: V47 = ISZERO V46
0xb9: V48 = ISZERO V47
0xbb: M[V44] = V48
0xbc: V49 = 0x20
0xbe: V50 = ADD 0x20 V44
0xc2: V51 = 0x40
0xc4: V52 = M[0x40]
0xc7: V53 = SUB V50 V52
0xc9: RETURN V52 V53
---
Entry stack: [V13, 0xb0, V154]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xb0]

================================

Block 0xca
[0xca:0xdb]
---
Predecessors: [0x48]
Successors: [0xdc, 0xe0]
---
0xca JUMPDEST
0xcb PUSH2 0x116
0xce PUSH1 0x4
0xd0 DUP1
0xd1 CALLDATASIZE
0xd2 SUB
0xd3 PUSH1 0x40
0xd5 DUP2
0xd6 LT
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xca: JUMPDEST 
0xcb: V54 = 0x116
0xce: V55 = 0x4
0xd1: V56 = CALLDATASIZE
0xd2: V57 = SUB V56 0x4
0xd3: V58 = 0x40
0xd6: V59 = LT V57 0x40
0xd7: V60 = ISZERO V59
0xd8: V61 = 0xe0
0xdb: JUMPI 0xe0 V60
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x116, 0x4, V57]
Exit stack: [V13, 0x116, 0x4, V57]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xca]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V62 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x116, 0x4, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x116, 0x4, V57]

================================

Block 0xe0
[0xe0:0x115]
---
Predecessors: [0xca]
Successors: [0x27e]
---
0xe0 JUMPDEST
0xe1 DUP2
0xe2 ADD
0xe3 SWAP1
0xe4 DUP1
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc AND
0xfd SWAP1
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 SWAP3
0x103 SWAP2
0x104 SWAP1
0x105 DUP1
0x106 CALLDATALOAD
0x107 SWAP1
0x108 PUSH1 0x20
0x10a ADD
0x10b SWAP1
0x10c SWAP3
0x10d SWAP2
0x10e SWAP1
0x10f POP
0x110 POP
0x111 POP
0x112 PUSH2 0x27e
0x115 JUMP
---
0xe0: JUMPDEST 
0xe2: V63 = ADD 0x4 V57
0xe6: V64 = CALLDATALOAD 0x4
0xe7: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xfe: V67 = 0x20
0x100: V68 = ADD 0x20 0x4
0x106: V69 = CALLDATALOAD 0x24
0x108: V70 = 0x20
0x10a: V71 = ADD 0x20 0x24
0x112: V72 = 0x27e
0x115: JUMP 0x27e
---
Entry stack: [V13, 0x116, 0x4, V57]
Stack pops: 2
Stack additions: [V66, V69]
Exit stack: [V13, 0x116, V66, V69]

================================

Block 0x116
[0x116:0x157]
---
Predecessors: [0x299]
Successors: []
---
0x116 JUMPDEST
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b DUP3
0x11c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131 AND
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 DUP2
0x149 MSTORE
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP2
0x14e POP
0x14f POP
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 SWAP2
0x155 SUB
0x156 SWAP1
0x157 RETURN
---
0x116: JUMPDEST 
0x117: V73 = 0x40
0x119: V74 = M[0x40]
0x11c: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x131: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x132: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x149: M[V74] = V78
0x14a: V79 = 0x20
0x14c: V80 = ADD 0x20 V74
0x150: V81 = 0x40
0x152: V82 = M[0x40]
0x155: V83 = SUB V80 V82
0x157: RETURN V82 V83
---
Entry stack: [V13, 0x116, V177]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x116]

================================

Block 0x158
[0x158:0x169]
---
Predecessors: [0x53]
Successors: [0x16a, 0x16e]
---
0x158 JUMPDEST
0x159 PUSH2 0x19a
0x15c PUSH1 0x4
0x15e DUP1
0x15f CALLDATASIZE
0x160 SUB
0x161 PUSH1 0x20
0x163 DUP2
0x164 LT
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x158: JUMPDEST 
0x159: V84 = 0x19a
0x15c: V85 = 0x4
0x15f: V86 = CALLDATASIZE
0x160: V87 = SUB V86 0x4
0x161: V88 = 0x20
0x164: V89 = LT V87 0x20
0x165: V90 = ISZERO V89
0x166: V91 = 0x16e
0x169: JUMPI 0x16e V90
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x19a, 0x4, V87]
Exit stack: [V13, 0x19a, 0x4, V87]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x158]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V92 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x19a, 0x4, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x19a, 0x4, V87]

================================

Block 0x16e
[0x16e:0x199]
---
Predecessors: [0x158]
Successors: [0x2cb]
---
0x16e JUMPDEST
0x16f DUP2
0x170 ADD
0x171 SWAP1
0x172 DUP1
0x173 DUP1
0x174 CALLDATALOAD
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b SWAP1
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP1
0x190 SWAP3
0x191 SWAP2
0x192 SWAP1
0x193 POP
0x194 POP
0x195 POP
0x196 PUSH2 0x2cb
0x199 JUMP
---
0x16e: JUMPDEST 
0x170: V93 = ADD 0x4 V87
0x174: V94 = CALLDATALOAD 0x4
0x175: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x18c: V97 = 0x20
0x18e: V98 = ADD 0x20 0x4
0x196: V99 = 0x2cb
0x199: JUMP 0x2cb
---
Entry stack: [V13, 0x19a, 0x4, V87]
Stack pops: 2
Stack additions: [V96]
Exit stack: [V13, 0x19a, V96]

================================

Block 0x19a
[0x19a:0x1af]
---
Predecessors: [0x2cb]
Successors: []
---
0x19a JUMPDEST
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f DUP3
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 SWAP2
0x1a6 POP
0x1a7 POP
0x1a8 PUSH1 0x40
0x1aa MLOAD
0x1ab DUP1
0x1ac SWAP2
0x1ad SUB
0x1ae SWAP1
0x1af RETURN
---
0x19a: JUMPDEST 
0x19b: V100 = 0x40
0x19d: V101 = M[0x40]
0x1a1: M[V101] = V191
0x1a2: V102 = 0x20
0x1a4: V103 = ADD 0x20 V101
0x1a8: V104 = 0x40
0x1aa: V105 = M[0x40]
0x1ad: V106 = SUB V103 V105
0x1af: RETURN V105 V106
---
Entry stack: [V13, V191]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b0
[0x1b0:0x1c1]
---
Predecessors: [0x5e]
Successors: [0x1c2, 0x1c6]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x21c
0x1b4 PUSH1 0x4
0x1b6 DUP1
0x1b7 CALLDATASIZE
0x1b8 SUB
0x1b9 PUSH1 0x60
0x1bb DUP2
0x1bc LT
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V107 = 0x21c
0x1b4: V108 = 0x4
0x1b7: V109 = CALLDATASIZE
0x1b8: V110 = SUB V109 0x4
0x1b9: V111 = 0x60
0x1bc: V112 = LT V110 0x60
0x1bd: V113 = ISZERO V112
0x1be: V114 = 0x1c6
0x1c1: JUMPI 0x1c6 V113
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x21c, 0x4, V110]
Exit stack: [V13, 0x21c, 0x4, V110]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1b0]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V115 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x21c, 0x4, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, 0x4, V110]

================================

Block 0x1c6
[0x1c6:0x21b]
---
Predecessors: [0x1b0]
Successors: [0x317]
---
0x1c6 JUMPDEST
0x1c7 DUP2
0x1c8 ADD
0x1c9 SWAP1
0x1ca DUP1
0x1cb DUP1
0x1cc CALLDATALOAD
0x1cd SWAP1
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 SWAP1
0x1d2 SWAP3
0x1d3 SWAP2
0x1d4 SWAP1
0x1d5 DUP1
0x1d6 CALLDATALOAD
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed SWAP1
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP1
0x1f2 SWAP3
0x1f3 SWAP2
0x1f4 SWAP1
0x1f5 DUP1
0x1f6 CALLDATALOAD
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d SWAP1
0x20e PUSH1 0x20
0x210 ADD
0x211 SWAP1
0x212 SWAP3
0x213 SWAP2
0x214 SWAP1
0x215 POP
0x216 POP
0x217 POP
0x218 PUSH2 0x317
0x21b JUMP
---
0x1c6: JUMPDEST 
0x1c8: V116 = ADD 0x4 V110
0x1cc: V117 = CALLDATALOAD 0x4
0x1ce: V118 = 0x20
0x1d0: V119 = ADD 0x20 0x4
0x1d6: V120 = CALLDATALOAD 0x24
0x1d7: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1ee: V123 = 0x20
0x1f0: V124 = ADD 0x20 0x24
0x1f6: V125 = CALLDATALOAD 0x44
0x1f7: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x20e: V128 = 0x20
0x210: V129 = ADD 0x20 0x44
0x218: V130 = 0x317
0x21b: JUMP 0x317
---
Entry stack: [V13, 0x21c, 0x4, V110]
Stack pops: 2
Stack additions: [V117, V122, V127]
Exit stack: [V13, 0x21c, V117, V122, V127]

================================

Block 0x21c
[0x21c:0x25d]
---
Predecessors: [0x3bd]
Successors: []
---
0x21c JUMPDEST
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 DUP3
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP2
0x254 POP
0x255 POP
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a SWAP2
0x25b SUB
0x25c SWAP1
0x25d RETURN
---
0x21c: JUMPDEST 
0x21d: V131 = 0x40
0x21f: V132 = M[0x40]
0x222: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x238: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x24f: M[V132] = V136
0x250: V137 = 0x20
0x252: V138 = ADD 0x20 V132
0x256: V139 = 0x40
0x258: V140 = M[0x40]
0x25b: V141 = SUB V138 V140
0x25d: RETURN V140 V141
---
Entry stack: [V13, V213]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x25e
[0x25e:0x27d]
---
Predecessors: [0x84]
Successors: [0xb0]
---
0x25e JUMPDEST
0x25f PUSH1 0x0
0x261 PUSH1 0x20
0x263 MSTORE
0x264 DUP1
0x265 PUSH1 0x0
0x267 MSTORE
0x268 PUSH1 0x40
0x26a PUSH1 0x0
0x26c SHA3
0x26d PUSH1 0x0
0x26f SWAP2
0x270 POP
0x271 SLOAD
0x272 SWAP1
0x273 PUSH2 0x100
0x276 EXP
0x277 SWAP1
0x278 DIV
0x279 PUSH1 0xff
0x27b AND
0x27c DUP2
0x27d JUMP
---
0x25e: JUMPDEST 
0x25f: V142 = 0x0
0x261: V143 = 0x20
0x263: M[0x20] = 0x0
0x265: V144 = 0x0
0x267: M[0x0] = V39
0x268: V145 = 0x40
0x26a: V146 = 0x0
0x26c: V147 = SHA3 0x0 0x40
0x26d: V148 = 0x0
0x271: V149 = S[V147]
0x273: V150 = 0x100
0x276: V151 = EXP 0x100 0x0
0x278: V152 = DIV V149 0x1
0x279: V153 = 0xff
0x27b: V154 = AND 0xff V152
0x27d: JUMP 0xb0
---
Entry stack: [V13, 0xb0, V39]
Stack pops: 2
Stack additions: [S1, V154]
Exit stack: [V13, 0xb0, V154]

================================

Block 0x27e
[0x27e:0x297]
---
Predecessors: [0xe0]
Successors: [0x298, 0x299]
---
0x27e JUMPDEST
0x27f PUSH1 0x1
0x281 PUSH1 0x20
0x283 MSTORE
0x284 DUP2
0x285 PUSH1 0x0
0x287 MSTORE
0x288 PUSH1 0x40
0x28a PUSH1 0x0
0x28c SHA3
0x28d DUP2
0x28e DUP2
0x28f SLOAD
0x290 DUP2
0x291 LT
0x292 ISZERO
0x293 ISZERO
0x294 PUSH2 0x299
0x297 JUMPI
---
0x27e: JUMPDEST 
0x27f: V155 = 0x1
0x281: V156 = 0x20
0x283: M[0x20] = 0x1
0x285: V157 = 0x0
0x287: M[0x0] = V66
0x288: V158 = 0x40
0x28a: V159 = 0x0
0x28c: V160 = SHA3 0x0 0x40
0x28f: V161 = S[V160]
0x291: V162 = LT V69 V161
0x292: V163 = ISZERO V162
0x293: V164 = ISZERO V163
0x294: V165 = 0x299
0x297: JUMPI 0x299 V164
---
Entry stack: [V13, 0x116, V66, V69]
Stack pops: 2
Stack additions: [S1, S0, V160, S0]
Exit stack: [V13, 0x116, V66, V69, V160, V69]

================================

Block 0x298
[0x298:0x298]
---
Predecessors: [0x27e]
Successors: []
---
0x298 INVALID
---
0x298: INVALID 
---
Entry stack: [V13, 0x116, V66, V69, V160, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x116, V66, V69, V160, V69]

================================

Block 0x299
[0x299:0x2ca]
---
Predecessors: [0x27e]
Successors: [0x116]
---
0x299 JUMPDEST
0x29a SWAP1
0x29b PUSH1 0x0
0x29d MSTORE
0x29e PUSH1 0x20
0x2a0 PUSH1 0x0
0x2a2 SHA3
0x2a3 ADD
0x2a4 PUSH1 0x0
0x2a6 SWAP2
0x2a7 POP
0x2a8 SWAP2
0x2a9 POP
0x2aa SWAP1
0x2ab SLOAD
0x2ac SWAP1
0x2ad PUSH2 0x100
0x2b0 EXP
0x2b1 SWAP1
0x2b2 DIV
0x2b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c8 AND
0x2c9 DUP2
0x2ca JUMP
---
0x299: JUMPDEST 
0x29b: V166 = 0x0
0x29d: M[0x0] = V160
0x29e: V167 = 0x20
0x2a0: V168 = 0x0
0x2a2: V169 = SHA3 0x0 0x20
0x2a3: V170 = ADD V169 V69
0x2a4: V171 = 0x0
0x2ab: V172 = S[V170]
0x2ad: V173 = 0x100
0x2b0: V174 = EXP 0x100 0x0
0x2b2: V175 = DIV V172 0x1
0x2b3: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2ca: JUMP 0x116
---
Entry stack: [V13, 0x116, V66, V69, V160, V69]
Stack pops: 5
Stack additions: [S4, V177]
Exit stack: [V13, 0x116, V177]

================================

Block 0x2cb
[0x2cb:0x316]
---
Predecessors: [0x16e]
Successors: [0x19a]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x0
0x2ce PUSH1 0x1
0x2d0 PUSH1 0x0
0x2d2 DUP4
0x2d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e8 AND
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff DUP2
0x300 MSTORE
0x301 PUSH1 0x20
0x303 ADD
0x304 SWAP1
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a PUSH1 0x0
0x30c SHA3
0x30d DUP1
0x30e SLOAD
0x30f SWAP1
0x310 POP
0x311 SWAP1
0x312 POP
0x313 SWAP2
0x314 SWAP1
0x315 POP
0x316 JUMP
---
0x2cb: JUMPDEST 
0x2cc: V178 = 0x0
0x2ce: V179 = 0x1
0x2d0: V180 = 0x0
0x2d3: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x2e9: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x300: M[0x0] = V184
0x301: V185 = 0x20
0x303: V186 = ADD 0x20 0x0
0x306: M[0x20] = 0x1
0x307: V187 = 0x20
0x309: V188 = ADD 0x20 0x20
0x30a: V189 = 0x0
0x30c: V190 = SHA3 0x0 0x40
0x30e: V191 = S[V190]
0x316: JUMP 0x19a
---
Entry stack: [V13, 0x19a, V96]
Stack pops: 2
Stack additions: [V191]
Exit stack: [V13, V191]

================================

Block 0x317
[0x317:0x324]
---
Predecessors: [0x1c6]
Successors: [0x55c]
---
0x317 JUMPDEST
0x318 PUSH1 0x0
0x31a DUP1
0x31b DUP5
0x31c DUP5
0x31d DUP5
0x31e PUSH2 0x325
0x321 PUSH2 0x55c
0x324 JUMP
---
0x317: JUMPDEST 
0x318: V192 = 0x0
0x31e: V193 = 0x325
0x321: V194 = 0x55c
0x324: JUMP 0x55c
---
Entry stack: [V13, 0x21c, V117, V122, V127]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0, S2, S1, S0, 0x325]
Exit stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V117, V122, V127, 0x325]

================================

Block 0x325
[0x325:0x3a7]
---
Predecessors: [0x55c]
Successors: [0x3a8, 0x3b1]
---
0x325 JUMPDEST
0x326 DUP1
0x327 DUP5
0x328 DUP2
0x329 MSTORE
0x32a PUSH1 0x20
0x32c ADD
0x32d DUP4
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x359 AND
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x20
0x35e ADD
0x35f DUP3
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38b AND
0x38c DUP2
0x38d MSTORE
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP4
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 PUSH1 0x40
0x398 MLOAD
0x399 DUP1
0x39a SWAP2
0x39b SUB
0x39c SWAP1
0x39d PUSH1 0x0
0x39f CREATE
0x3a0 DUP1
0x3a1 ISZERO
0x3a2 DUP1
0x3a3 ISZERO
0x3a4 PUSH2 0x3b1
0x3a7 JUMPI
---
0x325: JUMPDEST 
0x329: M[V305] = V117
0x32a: V195 = 0x20
0x32c: V196 = ADD 0x20 V305
0x32e: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x344: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x359: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x35b: M[V196] = V200
0x35c: V201 = 0x20
0x35e: V202 = ADD 0x20 V196
0x360: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x376: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x38d: M[V202] = V206
0x38e: V207 = 0x20
0x390: V208 = ADD 0x20 V202
0x396: V209 = 0x40
0x398: V210 = M[0x40]
0x39b: V211 = SUB V208 V210
0x39d: V212 = 0x0
0x39f: V213 = CREATE 0x0 V210 V211
0x3a1: V214 = ISZERO V213
0x3a3: V215 = ISZERO V214
0x3a4: V216 = 0x3b1
0x3a7: JUMPI 0x3b1 V215
---
Entry stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V117, V122, V127, V305]
Stack pops: 4
Stack additions: [V213, V214]
Exit stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V213, V214]

================================

Block 0x3a8
[0x3a8:0x3b0]
---
Predecessors: [0x325]
Successors: []
---
0x3a8 RETURNDATASIZE
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac RETURNDATACOPY
0x3ad RETURNDATASIZE
0x3ae PUSH1 0x0
0x3b0 REVERT
---
0x3a8: V217 = RETURNDATASIZE
0x3a9: V218 = 0x0
0x3ac: RETURNDATACOPY 0x0 0x0 V217
0x3ad: V219 = RETURNDATASIZE
0x3ae: V220 = 0x0
0x3b0: REVERT 0x0 V219
---
Entry stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V213, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V213, V214]

================================

Block 0x3b1
[0x3b1:0x3bc]
---
Predecessors: [0x325]
Successors: [0x3c8]
---
0x3b1 JUMPDEST
0x3b2 POP
0x3b3 SWAP1
0x3b4 POP
0x3b5 PUSH2 0x3bd
0x3b8 DUP2
0x3b9 PUSH2 0x3c8
0x3bc JUMP
---
0x3b1: JUMPDEST 
0x3b5: V221 = 0x3bd
0x3b9: V222 = 0x3c8
0x3bc: JUMP 0x3c8
---
Entry stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V213, V214]
Stack pops: 3
Stack additions: [S1, 0x3bd, S1]
Exit stack: [V13, 0x21c, V117, V122, V127, 0x0, V213, 0x3bd, V213]

================================

Block 0x3bd
[0x3bd:0x3c7]
---
Predecessors: [0x3c8]
Successors: [0x21c]
---
0x3bd JUMPDEST
0x3be DUP1
0x3bf SWAP2
0x3c0 POP
0x3c1 POP
0x3c2 SWAP4
0x3c3 SWAP3
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 JUMP
---
0x3bd: JUMPDEST 
0x3c7: JUMP 0x21c
---
Entry stack: [V13, 0x21c, V117, V122, V127, 0x0, V213]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V13, V213]

================================

Block 0x3c8
[0x3c8:0x55b]
---
Predecessors: [0x3b1]
Successors: [0x3bd]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x1
0x3cb PUSH1 0x0
0x3cd DUP1
0x3ce DUP4
0x3cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e4 AND
0x3e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fa AND
0x3fb DUP2
0x3fc MSTORE
0x3fd PUSH1 0x20
0x3ff ADD
0x400 SWAP1
0x401 DUP2
0x402 MSTORE
0x403 PUSH1 0x20
0x405 ADD
0x406 PUSH1 0x0
0x408 SHA3
0x409 PUSH1 0x0
0x40b PUSH2 0x100
0x40e EXP
0x40f DUP2
0x410 SLOAD
0x411 DUP2
0x412 PUSH1 0xff
0x414 MUL
0x415 NOT
0x416 AND
0x417 SWAP1
0x418 DUP4
0x419 ISZERO
0x41a ISZERO
0x41b MUL
0x41c OR
0x41d SWAP1
0x41e SSTORE
0x41f POP
0x420 PUSH1 0x1
0x422 PUSH1 0x0
0x424 CALLER
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x20
0x455 ADD
0x456 SWAP1
0x457 DUP2
0x458 MSTORE
0x459 PUSH1 0x20
0x45b ADD
0x45c PUSH1 0x0
0x45e SHA3
0x45f DUP2
0x460 SWAP1
0x461 DUP1
0x462 PUSH1 0x1
0x464 DUP2
0x465 SLOAD
0x466 ADD
0x467 DUP1
0x468 DUP3
0x469 SSTORE
0x46a DUP1
0x46b SWAP2
0x46c POP
0x46d POP
0x46e SWAP1
0x46f PUSH1 0x1
0x471 DUP3
0x472 SUB
0x473 SWAP1
0x474 PUSH1 0x0
0x476 MSTORE
0x477 PUSH1 0x20
0x479 PUSH1 0x0
0x47b SHA3
0x47c ADD
0x47d PUSH1 0x0
0x47f SWAP1
0x480 SWAP2
0x481 SWAP3
0x482 SWAP1
0x483 SWAP2
0x484 SWAP1
0x485 SWAP2
0x486 PUSH2 0x100
0x489 EXP
0x48a DUP2
0x48b SLOAD
0x48c DUP2
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 MUL
0x4a3 NOT
0x4a4 AND
0x4a5 SWAP1
0x4a6 DUP4
0x4a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bc AND
0x4bd MUL
0x4be OR
0x4bf SWAP1
0x4c0 SSTORE
0x4c1 POP
0x4c2 POP
0x4c3 PUSH32 0x4fb057ad4a26ed17a57957fa69c306f11987596069b89521c511fc9a894e6161
0x4e4 CALLER
0x4e5 DUP3
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 DUP1
0x4ea DUP4
0x4eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x500 AND
0x501 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x516 AND
0x517 DUP2
0x518 MSTORE
0x519 PUSH1 0x20
0x51b ADD
0x51c DUP3
0x51d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x532 AND
0x533 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x548 AND
0x549 DUP2
0x54a MSTORE
0x54b PUSH1 0x20
0x54d ADD
0x54e SWAP3
0x54f POP
0x550 POP
0x551 POP
0x552 PUSH1 0x40
0x554 MLOAD
0x555 DUP1
0x556 SWAP2
0x557 SUB
0x558 SWAP1
0x559 LOG1
0x55a POP
0x55b JUMP
---
0x3c8: JUMPDEST 
0x3c9: V223 = 0x1
0x3cb: V224 = 0x0
0x3cf: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e4: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x3e5: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fa: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x3fc: M[0x0] = V228
0x3fd: V229 = 0x20
0x3ff: V230 = ADD 0x20 0x0
0x402: M[0x20] = 0x0
0x403: V231 = 0x20
0x405: V232 = ADD 0x20 0x20
0x406: V233 = 0x0
0x408: V234 = SHA3 0x0 0x40
0x409: V235 = 0x0
0x40b: V236 = 0x100
0x40e: V237 = EXP 0x100 0x0
0x410: V238 = S[V234]
0x412: V239 = 0xff
0x414: V240 = MUL 0xff 0x1
0x415: V241 = NOT 0xff
0x416: V242 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V238
0x419: V243 = ISZERO 0x1
0x41a: V244 = ISZERO 0x0
0x41b: V245 = MUL 0x1 0x1
0x41c: V246 = OR 0x1 V242
0x41e: S[V234] = V246
0x420: V247 = 0x1
0x422: V248 = 0x0
0x424: V249 = CALLER
0x425: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x43b: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x452: M[0x0] = V253
0x453: V254 = 0x20
0x455: V255 = ADD 0x20 0x0
0x458: M[0x20] = 0x1
0x459: V256 = 0x20
0x45b: V257 = ADD 0x20 0x20
0x45c: V258 = 0x0
0x45e: V259 = SHA3 0x0 0x40
0x462: V260 = 0x1
0x465: V261 = S[V259]
0x466: V262 = ADD V261 0x1
0x469: S[V259] = V262
0x46f: V263 = 0x1
0x472: V264 = SUB V262 0x1
0x474: V265 = 0x0
0x476: M[0x0] = V259
0x477: V266 = 0x20
0x479: V267 = 0x0
0x47b: V268 = SHA3 0x0 0x20
0x47c: V269 = ADD V268 V264
0x47d: V270 = 0x0
0x486: V271 = 0x100
0x489: V272 = EXP 0x100 0x0
0x48b: V273 = S[V269]
0x48d: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V275 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4a3: V276 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V277 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V273
0x4a7: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bc: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x4bd: V280 = MUL V279 0x1
0x4be: V281 = OR V280 V277
0x4c0: S[V269] = V281
0x4c3: V282 = 0x4fb057ad4a26ed17a57957fa69c306f11987596069b89521c511fc9a894e6161
0x4e4: V283 = CALLER
0x4e6: V284 = 0x40
0x4e8: V285 = M[0x40]
0x4eb: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x500: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x501: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x516: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x518: M[V285] = V289
0x519: V290 = 0x20
0x51b: V291 = ADD 0x20 V285
0x51d: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x532: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x533: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x548: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x54a: M[V291] = V295
0x54b: V296 = 0x20
0x54d: V297 = ADD 0x20 V291
0x552: V298 = 0x40
0x554: V299 = M[0x40]
0x557: V300 = SUB V297 V299
0x559: LOG V299 V300 0x4fb057ad4a26ed17a57957fa69c306f11987596069b89521c511fc9a894e6161
0x55b: JUMP 0x3bd
---
Entry stack: [V13, 0x21c, V117, V122, V127, 0x0, V213, 0x3bd, V213]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x21c, V117, V122, V127, 0x0, V213]

================================

Block 0x55c
[0x55c:0x56b]
---
Predecessors: [0x317]
Successors: [0x325]
---
0x55c JUMPDEST
0x55d PUSH1 0x40
0x55f MLOAD
0x560 PUSH2 0x897
0x563 DUP1
0x564 PUSH2 0x56d
0x567 DUP4
0x568 CODECOPY
0x569 ADD
0x56a SWAP1
0x56b JUMP
---
0x55c: JUMPDEST 
0x55d: V301 = 0x40
0x55f: V302 = M[0x40]
0x560: V303 = 0x897
0x564: V304 = 0x56d
0x568: CODECOPY V302 0x56d 0x897
0x569: V305 = ADD 0x897 V302
0x56b: JUMP 0x325
---
Entry stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V117, V122, V127, 0x325]
Stack pops: 1
Stack additions: [V305]
Exit stack: [V13, 0x21c, V117, V122, V127, 0x0, 0x0, V117, V122, V127, V305]

================================

Block 0x56c
[0x56c:0x578]
---
Predecessors: []
Successors: [0x10, 0x579]
---
0x56c INVALID
0x56d PUSH1 0x80
0x56f PUSH1 0x40
0x571 MSTORE
0x572 CALLVALUE
0x573 DUP1
0x574 ISZERO
0x575 PUSH2 0x10
0x578 JUMPI
---
0x56c: INVALID 
0x56d: V306 = 0x80
0x56f: V307 = 0x40
0x571: M[0x40] = 0x80
0x572: V308 = CALLVALUE
0x574: V309 = ISZERO V308
0x575: V310 = 0x10
0x578: JUMPI 0x10 V309
---
Entry stack: []
Stack pops: 0
Stack additions: [V308]
Exit stack: []

================================

Block 0x579
[0x579:0x598]
---
Predecessors: [0x56c]
Successors: [0x599]
---
0x579 PUSH1 0x0
0x57b DUP1
0x57c REVERT
0x57d JUMPDEST
0x57e POP
0x57f PUSH1 0x40
0x581 MLOAD
0x582 PUSH1 0x60
0x584 DUP1
0x585 PUSH2 0x897
0x588 DUP4
0x589 CODECOPY
0x58a DUP2
0x58b ADD
0x58c DUP1
0x58d PUSH1 0x40
0x58f MSTORE
0x590 PUSH1 0x60
0x592 DUP2
0x593 LT
0x594 ISZERO
0x595 PUSH2 0x30
0x598 JUMPI
---
0x579: V311 = 0x0
0x57c: REVERT 0x0 0x0
0x57d: JUMPDEST 
0x57f: V312 = 0x40
0x581: V313 = M[0x40]
0x582: V314 = 0x60
0x585: V315 = 0x897
0x589: CODECOPY V313 0x897 0x60
0x58b: V316 = ADD V313 0x60
0x58d: V317 = 0x40
0x58f: M[0x40] = V316
0x590: V318 = 0x60
0x593: V319 = LT V316 0x60
0x594: V320 = ISZERO V319
0x595: V321 = 0x30
0x598: THROWI V320
---
Entry stack: [V308]
Stack pops: 0
Stack additions: [V316, V313]
Exit stack: []

================================

Block 0x599
[0x599:0x5d4]
---
Predecessors: [0x579]
Successors: [0x5d5]
---
0x599 PUSH1 0x0
0x59b DUP1
0x59c REVERT
0x59d JUMPDEST
0x59e DUP2
0x59f ADD
0x5a0 SWAP1
0x5a1 DUP1
0x5a2 DUP1
0x5a3 MLOAD
0x5a4 SWAP1
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 SWAP1
0x5a9 SWAP3
0x5aa SWAP2
0x5ab SWAP1
0x5ac DUP1
0x5ad MLOAD
0x5ae SWAP1
0x5af PUSH1 0x20
0x5b1 ADD
0x5b2 SWAP1
0x5b3 SWAP3
0x5b4 SWAP2
0x5b5 SWAP1
0x5b6 DUP1
0x5b7 MLOAD
0x5b8 SWAP1
0x5b9 PUSH1 0x20
0x5bb ADD
0x5bc SWAP1
0x5bd SWAP3
0x5be SWAP2
0x5bf SWAP1
0x5c0 POP
0x5c1 POP
0x5c2 POP
0x5c3 PUSH1 0x1
0x5c5 PUSH1 0x0
0x5c7 DUP2
0x5c8 SWAP1
0x5c9 SSTORE
0x5ca POP
0x5cb PUSH1 0x0
0x5cd DUP4
0x5ce GT
0x5cf ISZERO
0x5d0 ISZERO
0x5d1 PUSH2 0x6c
0x5d4 JUMPI
---
0x599: V322 = 0x0
0x59c: REVERT 0x0 0x0
0x59d: JUMPDEST 
0x59f: V323 = ADD S1 S0
0x5a3: V324 = M[S1]
0x5a5: V325 = 0x20
0x5a7: V326 = ADD 0x20 S1
0x5ad: V327 = M[V326]
0x5af: V328 = 0x20
0x5b1: V329 = ADD 0x20 V326
0x5b7: V330 = M[V329]
0x5b9: V331 = 0x20
0x5bb: V332 = ADD 0x20 V329
0x5c3: V333 = 0x1
0x5c5: V334 = 0x0
0x5c9: S[0x0] = 0x1
0x5cb: V335 = 0x0
0x5ce: V336 = GT V324 0x0
0x5cf: V337 = ISZERO V336
0x5d0: V338 = ISZERO V337
0x5d1: V339 = 0x6c
0x5d4: THROWI V338
---
Entry stack: [V313, V316]
Stack pops: 0
Stack additions: [V330, V327, V324]
Exit stack: []

================================

Block 0x5d5
[0x5d5:0x610]
---
Predecessors: [0x599]
Successors: [0x611]
---
0x5d5 PUSH1 0x0
0x5d7 DUP1
0x5d8 REVERT
0x5d9 JUMPDEST
0x5da PUSH1 0x0
0x5dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f1 AND
0x5f2 DUP3
0x5f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x608 AND
0x609 EQ
0x60a ISZERO
0x60b ISZERO
0x60c ISZERO
0x60d PUSH2 0xa8
0x610 JUMPI
---
0x5d5: V340 = 0x0
0x5d8: REVERT 0x0 0x0
0x5d9: JUMPDEST 
0x5da: V341 = 0x0
0x5dc: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f1: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5f3: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x608: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x609: V346 = EQ V345 0x0
0x60a: V347 = ISZERO V346
0x60b: V348 = ISZERO V347
0x60c: V349 = ISZERO V348
0x60d: V350 = 0xa8
0x610: THROWI V349
---
Entry stack: [V324, V327, V330]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x611
[0x611:0x64c]
---
Predecessors: [0x5d5]
Successors: [0x64d]
---
0x611 PUSH1 0x0
0x613 DUP1
0x614 REVERT
0x615 JUMPDEST
0x616 PUSH1 0x0
0x618 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62d AND
0x62e DUP2
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 EQ
0x646 ISZERO
0x647 ISZERO
0x648 ISZERO
0x649 PUSH2 0xe4
0x64c JUMPI
---
0x611: V351 = 0x0
0x614: REVERT 0x0 0x0
0x615: JUMPDEST 
0x616: V352 = 0x0
0x618: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x62f: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x645: V357 = EQ V356 0x0
0x646: V358 = ISZERO V357
0x647: V359 = ISZERO V358
0x648: V360 = ISZERO V359
0x649: V361 = 0xe4
0x64c: THROWI V360
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x64d
[0x64d:0x6f8]
---
Predecessors: [0x611]
Successors: [0x6f9]
---
0x64d PUSH1 0x0
0x64f DUP1
0x650 REVERT
0x651 JUMPDEST
0x652 DUP3
0x653 PUSH1 0x3
0x655 DUP2
0x656 SWAP1
0x657 SSTORE
0x658 POP
0x659 DUP2
0x65a PUSH1 0x2
0x65c PUSH1 0x0
0x65e PUSH2 0x100
0x661 EXP
0x662 DUP2
0x663 SLOAD
0x664 DUP2
0x665 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67a MUL
0x67b NOT
0x67c AND
0x67d SWAP1
0x67e DUP4
0x67f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x694 AND
0x695 MUL
0x696 OR
0x697 SWAP1
0x698 SSTORE
0x699 POP
0x69a DUP1
0x69b PUSH1 0x1
0x69d PUSH1 0x0
0x69f PUSH2 0x100
0x6a2 EXP
0x6a3 DUP2
0x6a4 SLOAD
0x6a5 DUP2
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb MUL
0x6bc NOT
0x6bd AND
0x6be SWAP1
0x6bf DUP4
0x6c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d5 AND
0x6d6 MUL
0x6d7 OR
0x6d8 SWAP1
0x6d9 SSTORE
0x6da POP
0x6db POP
0x6dc POP
0x6dd POP
0x6de PUSH2 0x718
0x6e1 DUP1
0x6e2 PUSH2 0x17f
0x6e5 PUSH1 0x0
0x6e7 CODECOPY
0x6e8 PUSH1 0x0
0x6ea RETURN
0x6eb INVALID
0x6ec PUSH1 0x80
0x6ee PUSH1 0x40
0x6f0 MSTORE
0x6f1 PUSH1 0x4
0x6f3 CALLDATASIZE
0x6f4 LT
0x6f5 PUSH2 0x67
0x6f8 JUMPI
---
0x64d: V362 = 0x0
0x650: REVERT 0x0 0x0
0x651: JUMPDEST 
0x653: V363 = 0x3
0x657: S[0x3] = S2
0x65a: V364 = 0x2
0x65c: V365 = 0x0
0x65e: V366 = 0x100
0x661: V367 = EXP 0x100 0x0
0x663: V368 = S[0x2]
0x665: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V370 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x67b: V371 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x67c: V372 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V368
0x67f: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x694: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x695: V375 = MUL V374 0x1
0x696: V376 = OR V375 V372
0x698: S[0x2] = V376
0x69b: V377 = 0x1
0x69d: V378 = 0x0
0x69f: V379 = 0x100
0x6a2: V380 = EXP 0x100 0x0
0x6a4: V381 = S[0x1]
0x6a6: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V383 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6bc: V384 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6bd: V385 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V381
0x6c0: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d5: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6d6: V388 = MUL V387 0x1
0x6d7: V389 = OR V388 V385
0x6d9: S[0x1] = V389
0x6de: V390 = 0x718
0x6e2: V391 = 0x17f
0x6e5: V392 = 0x0
0x6e7: CODECOPY 0x0 0x17f 0x718
0x6e8: V393 = 0x0
0x6ea: RETURN 0x0 0x718
0x6eb: INVALID 
0x6ec: V394 = 0x80
0x6ee: V395 = 0x40
0x6f0: M[0x40] = 0x80
0x6f1: V396 = 0x4
0x6f3: V397 = CALLDATASIZE
0x6f4: V398 = LT V397 0x4
0x6f5: V399 = 0x67
0x6f8: THROWI V398
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6f9
[0x6f9:0x726]
---
Predecessors: [0x64d]
Successors: [0x727]
---
0x6f9 PUSH1 0x0
0x6fb CALLDATALOAD
0x6fc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x71a SWAP1
0x71b DIV
0x71c DUP1
0x71d PUSH4 0x2c4e722e
0x722 EQ
0x723 PUSH2 0x72
0x726 JUMPI
---
0x6f9: V400 = 0x0
0x6fb: V401 = CALLDATALOAD 0x0
0x6fc: V402 = 0x100000000000000000000000000000000000000000000000000000000
0x71b: V403 = DIV V401 0x100000000000000000000000000000000000000000000000000000000
0x71d: V404 = 0x2c4e722e
0x722: V405 = EQ 0x2c4e722e V403
0x723: V406 = 0x72
0x726: THROWI V405
---
Entry stack: []
Stack pops: 0
Stack additions: [V403]
Exit stack: [V403]

================================

Block 0x727
[0x727:0x731]
---
Predecessors: [0x6f9]
Successors: [0x732]
---
0x727 DUP1
0x728 PUSH4 0x4042b66f
0x72d EQ
0x72e PUSH2 0x9d
0x731 JUMPI
---
0x728: V407 = 0x4042b66f
0x72d: V408 = EQ 0x4042b66f V403
0x72e: V409 = 0x9d
0x731: THROWI V408
---
Entry stack: [V403]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V403]

================================

Block 0x732
[0x732:0x73c]
---
Predecessors: [0x727]
Successors: [0x73d]
---
0x732 DUP1
0x733 PUSH4 0x521eb273
0x738 EQ
0x739 PUSH2 0xc8
0x73c JUMPI
---
0x733: V410 = 0x521eb273
0x738: V411 = EQ 0x521eb273 V403
0x739: V412 = 0xc8
0x73c: THROWI V411
---
Entry stack: [V403]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V403]

================================

Block 0x73d
[0x73d:0x747]
---
Predecessors: [0x732]
Successors: [0x748]
---
0x73d DUP1
0x73e PUSH4 0xec8ac4d8
0x743 EQ
0x744 PUSH2 0x11f
0x747 JUMPI
---
0x73e: V413 = 0xec8ac4d8
0x743: V414 = EQ 0xec8ac4d8 V403
0x744: V415 = 0x11f
0x747: THROWI V414
---
Entry stack: [V403]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V403]

================================

Block 0x748
[0x748:0x752]
---
Predecessors: [0x73d]
Successors: [0x753]
---
0x748 DUP1
0x749 PUSH4 0xfc0c546a
0x74e EQ
0x74f PUSH2 0x163
0x752 JUMPI
---
0x749: V416 = 0xfc0c546a
0x74e: V417 = EQ 0xfc0c546a V403
0x74f: V418 = 0x163
0x752: THROWI V417
---
Entry stack: [V403]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V403]

================================

Block 0x753
[0x753:0x765]
---
Predecessors: [0x748]
Successors: [0x766]
---
0x753 JUMPDEST
0x754 PUSH2 0x70
0x757 CALLER
0x758 PUSH2 0x1ba
0x75b JUMP
0x75c JUMPDEST
0x75d STOP
0x75e JUMPDEST
0x75f CALLVALUE
0x760 DUP1
0x761 ISZERO
0x762 PUSH2 0x7e
0x765 JUMPI
---
0x753: JUMPDEST 
0x754: V419 = 0x70
0x757: V420 = CALLER
0x758: V421 = 0x1ba
0x75b: THROW 
0x75c: JUMPDEST 
0x75d: STOP 
0x75e: JUMPDEST 
0x75f: V422 = CALLVALUE
0x761: V423 = ISZERO V422
0x762: V424 = 0x7e
0x765: THROWI V423
---
Entry stack: [V403]
Stack pops: 0
Stack additions: [0x70, V420, V422]
Exit stack: []

================================

Block 0x766
[0x766:0x790]
---
Predecessors: [0x753]
Successors: [0x791]
---
0x766 PUSH1 0x0
0x768 DUP1
0x769 REVERT
0x76a JUMPDEST
0x76b POP
0x76c PUSH2 0x87
0x76f PUSH2 0x2b0
0x772 JUMP
0x773 JUMPDEST
0x774 PUSH1 0x40
0x776 MLOAD
0x777 DUP1
0x778 DUP3
0x779 DUP2
0x77a MSTORE
0x77b PUSH1 0x20
0x77d ADD
0x77e SWAP2
0x77f POP
0x780 POP
0x781 PUSH1 0x40
0x783 MLOAD
0x784 DUP1
0x785 SWAP2
0x786 SUB
0x787 SWAP1
0x788 RETURN
0x789 JUMPDEST
0x78a CALLVALUE
0x78b DUP1
0x78c ISZERO
0x78d PUSH2 0xa9
0x790 JUMPI
---
0x766: V425 = 0x0
0x769: REVERT 0x0 0x0
0x76a: JUMPDEST 
0x76c: V426 = 0x87
0x76f: V427 = 0x2b0
0x772: THROW 
0x773: JUMPDEST 
0x774: V428 = 0x40
0x776: V429 = M[0x40]
0x77a: M[V429] = S0
0x77b: V430 = 0x20
0x77d: V431 = ADD 0x20 V429
0x781: V432 = 0x40
0x783: V433 = M[0x40]
0x786: V434 = SUB V431 V433
0x788: RETURN V433 V434
0x789: JUMPDEST 
0x78a: V435 = CALLVALUE
0x78c: V436 = ISZERO V435
0x78d: V437 = 0xa9
0x790: THROWI V436
---
Entry stack: [V422]
Stack pops: 0
Stack additions: [0x87, V435]
Exit stack: []

================================

Block 0x791
[0x791:0x7bb]
---
Predecessors: [0x766]
Successors: [0x7bc]
---
0x791 PUSH1 0x0
0x793 DUP1
0x794 REVERT
0x795 JUMPDEST
0x796 POP
0x797 PUSH2 0xb2
0x79a PUSH2 0x2ba
0x79d JUMP
0x79e JUMPDEST
0x79f PUSH1 0x40
0x7a1 MLOAD
0x7a2 DUP1
0x7a3 DUP3
0x7a4 DUP2
0x7a5 MSTORE
0x7a6 PUSH1 0x20
0x7a8 ADD
0x7a9 SWAP2
0x7aa POP
0x7ab POP
0x7ac PUSH1 0x40
0x7ae MLOAD
0x7af DUP1
0x7b0 SWAP2
0x7b1 SUB
0x7b2 SWAP1
0x7b3 RETURN
0x7b4 JUMPDEST
0x7b5 CALLVALUE
0x7b6 DUP1
0x7b7 ISZERO
0x7b8 PUSH2 0xd4
0x7bb JUMPI
---
0x791: V438 = 0x0
0x794: REVERT 0x0 0x0
0x795: JUMPDEST 
0x797: V439 = 0xb2
0x79a: V440 = 0x2ba
0x79d: THROW 
0x79e: JUMPDEST 
0x79f: V441 = 0x40
0x7a1: V442 = M[0x40]
0x7a5: M[V442] = S0
0x7a6: V443 = 0x20
0x7a8: V444 = ADD 0x20 V442
0x7ac: V445 = 0x40
0x7ae: V446 = M[0x40]
0x7b1: V447 = SUB V444 V446
0x7b3: RETURN V446 V447
0x7b4: JUMPDEST 
0x7b5: V448 = CALLVALUE
0x7b7: V449 = ISZERO V448
0x7b8: V450 = 0xd4
0x7bb: THROWI V449
---
Entry stack: [V435]
Stack pops: 0
Stack additions: [0xb2, V448]
Exit stack: []

================================

Block 0x7bc
[0x7bc:0x81c]
---
Predecessors: [0x791]
Successors: [0x81d]
---
0x7bc PUSH1 0x0
0x7be DUP1
0x7bf REVERT
0x7c0 JUMPDEST
0x7c1 POP
0x7c2 PUSH2 0xdd
0x7c5 PUSH2 0x2c4
0x7c8 JUMP
0x7c9 JUMPDEST
0x7ca PUSH1 0x40
0x7cc MLOAD
0x7cd DUP1
0x7ce DUP3
0x7cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e4 AND
0x7e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fa AND
0x7fb DUP2
0x7fc MSTORE
0x7fd PUSH1 0x20
0x7ff ADD
0x800 SWAP2
0x801 POP
0x802 POP
0x803 PUSH1 0x40
0x805 MLOAD
0x806 DUP1
0x807 SWAP2
0x808 SUB
0x809 SWAP1
0x80a RETURN
0x80b JUMPDEST
0x80c PUSH2 0x161
0x80f PUSH1 0x4
0x811 DUP1
0x812 CALLDATASIZE
0x813 SUB
0x814 PUSH1 0x20
0x816 DUP2
0x817 LT
0x818 ISZERO
0x819 PUSH2 0x135
0x81c JUMPI
---
0x7bc: V451 = 0x0
0x7bf: REVERT 0x0 0x0
0x7c0: JUMPDEST 
0x7c2: V452 = 0xdd
0x7c5: V453 = 0x2c4
0x7c8: THROW 
0x7c9: JUMPDEST 
0x7ca: V454 = 0x40
0x7cc: V455 = M[0x40]
0x7cf: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e4: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7e5: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fa: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x7fc: M[V455] = V459
0x7fd: V460 = 0x20
0x7ff: V461 = ADD 0x20 V455
0x803: V462 = 0x40
0x805: V463 = M[0x40]
0x808: V464 = SUB V461 V463
0x80a: RETURN V463 V464
0x80b: JUMPDEST 
0x80c: V465 = 0x161
0x80f: V466 = 0x4
0x812: V467 = CALLDATASIZE
0x813: V468 = SUB V467 0x4
0x814: V469 = 0x20
0x817: V470 = LT V468 0x20
0x818: V471 = ISZERO V470
0x819: V472 = 0x135
0x81c: THROWI V471
---
Entry stack: [V448]
Stack pops: 0
Stack additions: [0xdd, V468, 0x4, 0x161]
Exit stack: []

================================

Block 0x81d
[0x81d:0x856]
---
Predecessors: [0x7bc]
Successors: [0x857]
---
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
0x821 JUMPDEST
0x822 DUP2
0x823 ADD
0x824 SWAP1
0x825 DUP1
0x826 DUP1
0x827 CALLDATALOAD
0x828 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83d AND
0x83e SWAP1
0x83f PUSH1 0x20
0x841 ADD
0x842 SWAP1
0x843 SWAP3
0x844 SWAP2
0x845 SWAP1
0x846 POP
0x847 POP
0x848 POP
0x849 PUSH2 0x1ba
0x84c JUMP
0x84d JUMPDEST
0x84e STOP
0x84f JUMPDEST
0x850 CALLVALUE
0x851 DUP1
0x852 ISZERO
0x853 PUSH2 0x16f
0x856 JUMPI
---
0x81d: V473 = 0x0
0x820: REVERT 0x0 0x0
0x821: JUMPDEST 
0x823: V474 = ADD S1 S0
0x827: V475 = CALLDATALOAD S1
0x828: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x83d: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x83f: V478 = 0x20
0x841: V479 = ADD 0x20 S1
0x849: V480 = 0x1ba
0x84c: THROW 
0x84d: JUMPDEST 
0x84e: STOP 
0x84f: JUMPDEST 
0x850: V481 = CALLVALUE
0x852: V482 = ISZERO V481
0x853: V483 = 0x16f
0x856: THROWI V482
---
Entry stack: [0x161, 0x4, V468]
Stack pops: 0
Stack additions: [V477, V481]
Exit stack: []

================================

Block 0x857
[0x857:0x993]
---
Predecessors: [0x81d]
Successors: [0x994]
---
0x857 PUSH1 0x0
0x859 DUP1
0x85a REVERT
0x85b JUMPDEST
0x85c POP
0x85d PUSH2 0x178
0x860 PUSH2 0x2ee
0x863 JUMP
0x864 JUMPDEST
0x865 PUSH1 0x40
0x867 MLOAD
0x868 DUP1
0x869 DUP3
0x86a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87f AND
0x880 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x895 AND
0x896 DUP2
0x897 MSTORE
0x898 PUSH1 0x20
0x89a ADD
0x89b SWAP2
0x89c POP
0x89d POP
0x89e PUSH1 0x40
0x8a0 MLOAD
0x8a1 DUP1
0x8a2 SWAP2
0x8a3 SUB
0x8a4 SWAP1
0x8a5 RETURN
0x8a6 JUMPDEST
0x8a7 PUSH1 0x1
0x8a9 PUSH1 0x0
0x8ab DUP1
0x8ac DUP3
0x8ad DUP3
0x8ae SLOAD
0x8af ADD
0x8b0 SWAP3
0x8b1 POP
0x8b2 POP
0x8b3 DUP2
0x8b4 SWAP1
0x8b5 SSTORE
0x8b6 POP
0x8b7 PUSH1 0x0
0x8b9 DUP1
0x8ba SLOAD
0x8bb SWAP1
0x8bc POP
0x8bd PUSH1 0x0
0x8bf CALLVALUE
0x8c0 SWAP1
0x8c1 POP
0x8c2 PUSH2 0x1df
0x8c5 DUP4
0x8c6 DUP3
0x8c7 PUSH2 0x318
0x8ca JUMP
0x8cb JUMPDEST
0x8cc PUSH1 0x0
0x8ce PUSH2 0x1ea
0x8d1 DUP3
0x8d2 PUSH2 0x368
0x8d5 JUMP
0x8d6 JUMPDEST
0x8d7 SWAP1
0x8d8 POP
0x8d9 PUSH2 0x201
0x8dc DUP3
0x8dd PUSH1 0x4
0x8df SLOAD
0x8e0 PUSH2 0x386
0x8e3 SWAP1
0x8e4 SWAP2
0x8e5 SWAP1
0x8e6 PUSH4 0xffffffff
0x8eb AND
0x8ec JUMP
0x8ed JUMPDEST
0x8ee PUSH1 0x4
0x8f0 DUP2
0x8f1 SWAP1
0x8f2 SSTORE
0x8f3 POP
0x8f4 PUSH2 0x211
0x8f7 DUP5
0x8f8 DUP3
0x8f9 PUSH2 0x3a7
0x8fc JUMP
0x8fd JUMPDEST
0x8fe DUP4
0x8ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x914 AND
0x915 CALLER
0x916 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92b AND
0x92c PUSH32 0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b
0x94d DUP5
0x94e DUP5
0x94f PUSH1 0x40
0x951 MLOAD
0x952 DUP1
0x953 DUP4
0x954 DUP2
0x955 MSTORE
0x956 PUSH1 0x20
0x958 ADD
0x959 DUP3
0x95a DUP2
0x95b MSTORE
0x95c PUSH1 0x20
0x95e ADD
0x95f SWAP3
0x960 POP
0x961 POP
0x962 POP
0x963 PUSH1 0x40
0x965 MLOAD
0x966 DUP1
0x967 SWAP2
0x968 SUB
0x969 SWAP1
0x96a LOG3
0x96b PUSH2 0x288
0x96e DUP5
0x96f DUP4
0x970 PUSH2 0x3b5
0x973 JUMP
0x974 JUMPDEST
0x975 PUSH2 0x290
0x978 PUSH2 0x3b9
0x97b JUMP
0x97c JUMPDEST
0x97d PUSH2 0x29a
0x980 DUP5
0x981 DUP4
0x982 PUSH2 0x424
0x985 JUMP
0x986 JUMPDEST
0x987 POP
0x988 POP
0x989 PUSH1 0x0
0x98b SLOAD
0x98c DUP2
0x98d EQ
0x98e ISZERO
0x98f ISZERO
0x990 PUSH2 0x2ac
0x993 JUMPI
---
0x857: V484 = 0x0
0x85a: REVERT 0x0 0x0
0x85b: JUMPDEST 
0x85d: V485 = 0x178
0x860: V486 = 0x2ee
0x863: THROW 
0x864: JUMPDEST 
0x865: V487 = 0x40
0x867: V488 = M[0x40]
0x86a: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x87f: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x880: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x895: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x897: M[V488] = V492
0x898: V493 = 0x20
0x89a: V494 = ADD 0x20 V488
0x89e: V495 = 0x40
0x8a0: V496 = M[0x40]
0x8a3: V497 = SUB V494 V496
0x8a5: RETURN V496 V497
0x8a6: JUMPDEST 
0x8a7: V498 = 0x1
0x8a9: V499 = 0x0
0x8ae: V500 = S[0x0]
0x8af: V501 = ADD V500 0x1
0x8b5: S[0x0] = V501
0x8b7: V502 = 0x0
0x8ba: V503 = S[0x0]
0x8bd: V504 = 0x0
0x8bf: V505 = CALLVALUE
0x8c2: V506 = 0x1df
0x8c7: V507 = 0x318
0x8ca: THROW 
0x8cb: JUMPDEST 
0x8cc: V508 = 0x0
0x8ce: V509 = 0x1ea
0x8d2: V510 = 0x368
0x8d5: THROW 
0x8d6: JUMPDEST 
0x8d9: V511 = 0x201
0x8dd: V512 = 0x4
0x8df: V513 = S[0x4]
0x8e0: V514 = 0x386
0x8e6: V515 = 0xffffffff
0x8eb: V516 = AND 0xffffffff 0x386
0x8ec: THROW 
0x8ed: JUMPDEST 
0x8ee: V517 = 0x4
0x8f2: S[0x4] = S0
0x8f4: V518 = 0x211
0x8f9: V519 = 0x3a7
0x8fc: THROW 
0x8fd: JUMPDEST 
0x8ff: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x914: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x915: V522 = CALLER
0x916: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x92b: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x92c: V525 = 0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b
0x94f: V526 = 0x40
0x951: V527 = M[0x40]
0x955: M[V527] = S1
0x956: V528 = 0x20
0x958: V529 = ADD 0x20 V527
0x95b: M[V529] = S0
0x95c: V530 = 0x20
0x95e: V531 = ADD 0x20 V529
0x963: V532 = 0x40
0x965: V533 = M[0x40]
0x968: V534 = SUB V531 V533
0x96a: LOG V533 V534 0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b V524 V521
0x96b: V535 = 0x288
0x970: V536 = 0x3b5
0x973: THROW 
0x974: JUMPDEST 
0x975: V537 = 0x290
0x978: V538 = 0x3b9
0x97b: THROW 
0x97c: JUMPDEST 
0x97d: V539 = 0x29a
0x982: V540 = 0x424
0x985: THROW 
0x986: JUMPDEST 
0x989: V541 = 0x0
0x98b: V542 = S[0x0]
0x98d: V543 = EQ S2 V542
0x98e: V544 = ISZERO V543
0x98f: V545 = ISZERO V544
0x990: V546 = 0x2ac
0x993: THROWI V545
---
Entry stack: [V481]
Stack pops: 0
Stack additions: [0x178, V505, S0, 0x1df, V505, V503, S0, S0, 0x1ea, 0x0, S0, S2, V513, 0x201, S0, S2, S1, S4, 0x211, S1, S2, S3, S4, S1, S3, 0x288, S0, S1, S2, S3, 0x290, S1, S3, 0x29a, S0, S1, S2, S3, S2]
Exit stack: []

================================

Block 0x994
[0x994:0xa3b]
---
Predecessors: [0x857]
Successors: [0xa3c]
---
0x994 PUSH1 0x0
0x996 DUP1
0x997 REVERT
0x998 JUMPDEST
0x999 POP
0x99a POP
0x99b JUMP
0x99c JUMPDEST
0x99d PUSH1 0x0
0x99f PUSH1 0x3
0x9a1 SLOAD
0x9a2 SWAP1
0x9a3 POP
0x9a4 SWAP1
0x9a5 JUMP
0x9a6 JUMPDEST
0x9a7 PUSH1 0x0
0x9a9 PUSH1 0x4
0x9ab SLOAD
0x9ac SWAP1
0x9ad POP
0x9ae SWAP1
0x9af JUMP
0x9b0 JUMPDEST
0x9b1 PUSH1 0x0
0x9b3 PUSH1 0x2
0x9b5 PUSH1 0x0
0x9b7 SWAP1
0x9b8 SLOAD
0x9b9 SWAP1
0x9ba PUSH2 0x100
0x9bd EXP
0x9be SWAP1
0x9bf DIV
0x9c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d5 AND
0x9d6 SWAP1
0x9d7 POP
0x9d8 SWAP1
0x9d9 JUMP
0x9da JUMPDEST
0x9db PUSH1 0x0
0x9dd PUSH1 0x1
0x9df PUSH1 0x0
0x9e1 SWAP1
0x9e2 SLOAD
0x9e3 SWAP1
0x9e4 PUSH2 0x100
0x9e7 EXP
0x9e8 SWAP1
0x9e9 DIV
0x9ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ff AND
0xa00 SWAP1
0xa01 POP
0xa02 SWAP1
0xa03 JUMP
0xa04 JUMPDEST
0xa05 PUSH1 0x0
0xa07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1c AND
0xa1d DUP3
0xa1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa33 AND
0xa34 EQ
0xa35 ISZERO
0xa36 ISZERO
0xa37 ISZERO
0xa38 PUSH2 0x354
0xa3b JUMPI
---
0x994: V547 = 0x0
0x997: REVERT 0x0 0x0
0x998: JUMPDEST 
0x99b: JUMP S2
0x99c: JUMPDEST 
0x99d: V548 = 0x0
0x99f: V549 = 0x3
0x9a1: V550 = S[0x3]
0x9a5: JUMP S0
0x9a6: JUMPDEST 
0x9a7: V551 = 0x0
0x9a9: V552 = 0x4
0x9ab: V553 = S[0x4]
0x9af: JUMP S0
0x9b0: JUMPDEST 
0x9b1: V554 = 0x0
0x9b3: V555 = 0x2
0x9b5: V556 = 0x0
0x9b8: V557 = S[0x2]
0x9ba: V558 = 0x100
0x9bd: V559 = EXP 0x100 0x0
0x9bf: V560 = DIV V557 0x1
0x9c0: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d5: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x9d9: JUMP S0
0x9da: JUMPDEST 
0x9db: V563 = 0x0
0x9dd: V564 = 0x1
0x9df: V565 = 0x0
0x9e2: V566 = S[0x1]
0x9e4: V567 = 0x100
0x9e7: V568 = EXP 0x100 0x0
0x9e9: V569 = DIV V566 0x1
0x9ea: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ff: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0xa03: JUMP S0
0xa04: JUMPDEST 
0xa05: V572 = 0x0
0xa07: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1c: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xa1e: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0xa33: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa34: V577 = EQ V576 0x0
0xa35: V578 = ISZERO V577
0xa36: V579 = ISZERO V578
0xa37: V580 = ISZERO V579
0xa38: V581 = 0x354
0xa3b: THROWI V580
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V550, V553, V562, V571, S0, S1]
Exit stack: []

================================

Block 0xa3c
[0xa3c:0xa4b]
---
Predecessors: [0x994]
Successors: [0xa4c]
---
0xa3c PUSH1 0x0
0xa3e DUP1
0xa3f REVERT
0xa40 JUMPDEST
0xa41 PUSH1 0x0
0xa43 DUP2
0xa44 EQ
0xa45 ISZERO
0xa46 ISZERO
0xa47 ISZERO
0xa48 PUSH2 0x364
0xa4b JUMPI
---
0xa3c: V582 = 0x0
0xa3f: REVERT 0x0 0x0
0xa40: JUMPDEST 
0xa41: V583 = 0x0
0xa44: V584 = EQ S0 0x0
0xa45: V585 = ISZERO V584
0xa46: V586 = ISZERO V585
0xa47: V587 = ISZERO V586
0xa48: V588 = 0x364
0xa4b: THROWI V587
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xa4c
[0xa4c:0xa84]
---
Predecessors: [0xa3c]
Successors: [0xa85]
---
0xa4c PUSH1 0x0
0xa4e DUP1
0xa4f REVERT
0xa50 JUMPDEST
0xa51 POP
0xa52 POP
0xa53 JUMP
0xa54 JUMPDEST
0xa55 PUSH1 0x0
0xa57 PUSH2 0x37f
0xa5a PUSH1 0x3
0xa5c SLOAD
0xa5d DUP4
0xa5e PUSH2 0x428
0xa61 SWAP1
0xa62 SWAP2
0xa63 SWAP1
0xa64 PUSH4 0xffffffff
0xa69 AND
0xa6a JUMP
0xa6b JUMPDEST
0xa6c SWAP1
0xa6d POP
0xa6e SWAP2
0xa6f SWAP1
0xa70 POP
0xa71 JUMP
0xa72 JUMPDEST
0xa73 PUSH1 0x0
0xa75 DUP1
0xa76 DUP3
0xa77 DUP5
0xa78 ADD
0xa79 SWAP1
0xa7a POP
0xa7b DUP4
0xa7c DUP2
0xa7d LT
0xa7e ISZERO
0xa7f ISZERO
0xa80 ISZERO
0xa81 PUSH2 0x39d
0xa84 JUMPI
---
0xa4c: V589 = 0x0
0xa4f: REVERT 0x0 0x0
0xa50: JUMPDEST 
0xa53: JUMP S2
0xa54: JUMPDEST 
0xa55: V590 = 0x0
0xa57: V591 = 0x37f
0xa5a: V592 = 0x3
0xa5c: V593 = S[0x3]
0xa5e: V594 = 0x428
0xa64: V595 = 0xffffffff
0xa69: V596 = AND 0xffffffff 0x428
0xa6a: THROW 
0xa6b: JUMPDEST 
0xa71: JUMP S3
0xa72: JUMPDEST 
0xa73: V597 = 0x0
0xa78: V598 = ADD S1 S0
0xa7d: V599 = LT V598 S1
0xa7e: V600 = ISZERO V599
0xa7f: V601 = ISZERO V600
0xa80: V602 = ISZERO V601
0xa81: V603 = 0x39d
0xa84: THROWI V602
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V593, S0, 0x37f, 0x0, S0, S0, V598, 0x0, S0, S1]
Exit stack: []

================================

Block 0xa85
[0xa85:0xb03]
---
Predecessors: [0xa4c]
Successors: [0xb04]
---
0xa85 PUSH1 0x0
0xa87 DUP1
0xa88 REVERT
0xa89 JUMPDEST
0xa8a DUP1
0xa8b SWAP2
0xa8c POP
0xa8d POP
0xa8e SWAP3
0xa8f SWAP2
0xa90 POP
0xa91 POP
0xa92 JUMP
0xa93 JUMPDEST
0xa94 PUSH2 0x3b1
0xa97 DUP3
0xa98 DUP3
0xa99 PUSH2 0x466
0xa9c JUMP
0xa9d JUMPDEST
0xa9e POP
0xa9f POP
0xaa0 JUMP
0xaa1 JUMPDEST
0xaa2 POP
0xaa3 POP
0xaa4 JUMP
0xaa5 JUMPDEST
0xaa6 PUSH1 0x2
0xaa8 PUSH1 0x0
0xaaa SWAP1
0xaab SLOAD
0xaac SWAP1
0xaad PUSH2 0x100
0xab0 EXP
0xab1 SWAP1
0xab2 DIV
0xab3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac8 AND
0xac9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xade AND
0xadf PUSH2 0x8fc
0xae2 CALLVALUE
0xae3 SWAP1
0xae4 DUP2
0xae5 ISZERO
0xae6 MUL
0xae7 SWAP1
0xae8 PUSH1 0x40
0xaea MLOAD
0xaeb PUSH1 0x0
0xaed PUSH1 0x40
0xaef MLOAD
0xaf0 DUP1
0xaf1 DUP4
0xaf2 SUB
0xaf3 DUP2
0xaf4 DUP6
0xaf5 DUP9
0xaf6 DUP9
0xaf7 CALL
0xaf8 SWAP4
0xaf9 POP
0xafa POP
0xafb POP
0xafc POP
0xafd ISZERO
0xafe DUP1
0xaff ISZERO
0xb00 PUSH2 0x421
0xb03 JUMPI
---
0xa85: V604 = 0x0
0xa88: REVERT 0x0 0x0
0xa89: JUMPDEST 
0xa92: JUMP S4
0xa93: JUMPDEST 
0xa94: V605 = 0x3b1
0xa99: V606 = 0x466
0xa9c: THROW 
0xa9d: JUMPDEST 
0xaa0: JUMP S2
0xaa1: JUMPDEST 
0xaa4: JUMP S2
0xaa5: JUMPDEST 
0xaa6: V607 = 0x2
0xaa8: V608 = 0x0
0xaab: V609 = S[0x2]
0xaad: V610 = 0x100
0xab0: V611 = EXP 0x100 0x0
0xab2: V612 = DIV V609 0x1
0xab3: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0xac8: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xac9: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xade: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0xadf: V617 = 0x8fc
0xae2: V618 = CALLVALUE
0xae5: V619 = ISZERO V618
0xae6: V620 = MUL V619 0x8fc
0xae8: V621 = 0x40
0xaea: V622 = M[0x40]
0xaeb: V623 = 0x0
0xaed: V624 = 0x40
0xaef: V625 = M[0x40]
0xaf2: V626 = SUB V622 V625
0xaf7: V627 = CALL V620 V616 V618 V625 V626 V625 0x0
0xafd: V628 = ISZERO V627
0xaff: V629 = ISZERO V628
0xb00: V630 = 0x421
0xb03: THROWI V629
---
Entry stack: [S3, S2, 0x0, V598]
Stack pops: 0
Stack additions: [S0, S0, S1, 0x3b1, S0, S1, V628]
Exit stack: []

================================

Block 0xb04
[0xb04:0xb1e]
---
Predecessors: [0xa85]
Successors: [0xb1f]
---
0xb04 RETURNDATASIZE
0xb05 PUSH1 0x0
0xb07 DUP1
0xb08 RETURNDATACOPY
0xb09 RETURNDATASIZE
0xb0a PUSH1 0x0
0xb0c REVERT
0xb0d JUMPDEST
0xb0e POP
0xb0f JUMP
0xb10 JUMPDEST
0xb11 POP
0xb12 POP
0xb13 JUMP
0xb14 JUMPDEST
0xb15 PUSH1 0x0
0xb17 DUP1
0xb18 DUP4
0xb19 EQ
0xb1a ISZERO
0xb1b PUSH2 0x43b
0xb1e JUMPI
---
0xb04: V631 = RETURNDATASIZE
0xb05: V632 = 0x0
0xb08: RETURNDATACOPY 0x0 0x0 V631
0xb09: V633 = RETURNDATASIZE
0xb0a: V634 = 0x0
0xb0c: REVERT 0x0 V633
0xb0d: JUMPDEST 
0xb0f: JUMP S1
0xb10: JUMPDEST 
0xb13: JUMP S2
0xb14: JUMPDEST 
0xb15: V635 = 0x0
0xb19: V636 = EQ S1 0x0
0xb1a: V637 = ISZERO V636
0xb1b: V638 = 0x43b
0xb1e: THROWI V637
---
Entry stack: [V628]
Stack pops: 0
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0xb1f
[0xb1f:0xb38]
---
Predecessors: [0xb04]
Successors: [0xb39]
---
0xb1f PUSH1 0x0
0xb21 SWAP1
0xb22 POP
0xb23 PUSH2 0x460
0xb26 JUMP
0xb27 JUMPDEST
0xb28 PUSH1 0x0
0xb2a DUP3
0xb2b DUP5
0xb2c MUL
0xb2d SWAP1
0xb2e POP
0xb2f DUP3
0xb30 DUP5
0xb31 DUP3
0xb32 DUP2
0xb33 ISZERO
0xb34 ISZERO
0xb35 PUSH2 0x44e
0xb38 JUMPI
---
0xb1f: V639 = 0x0
0xb23: V640 = 0x460
0xb26: THROW 
0xb27: JUMPDEST 
0xb28: V641 = 0x0
0xb2c: V642 = MUL S2 S1
0xb33: V643 = ISZERO S2
0xb34: V644 = ISZERO V643
0xb35: V645 = 0x44e
0xb38: THROWI V644
---
Entry stack: [S2, S1, 0x0]
Stack pops: 1
Stack additions: [V642, S2, S1, V642, S0, S1, S2]
Exit stack: []

================================

Block 0xb39
[0xb39:0xb42]
---
Predecessors: [0xb1f]
Successors: [0xb43]
---
0xb39 INVALID
0xb3a JUMPDEST
0xb3b DIV
0xb3c EQ
0xb3d ISZERO
0xb3e ISZERO
0xb3f PUSH2 0x45b
0xb42 JUMPI
---
0xb39: INVALID 
0xb3a: JUMPDEST 
0xb3b: V646 = DIV S0 S1
0xb3c: V647 = EQ V646 S2
0xb3d: V648 = ISZERO V647
0xb3e: V649 = ISZERO V648
0xb3f: V650 = 0x45b
0xb42: THROWI V649
---
Entry stack: [S6, S5, S4, V642, S2, S1, V642]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb43
[0xb43:0xb4b]
---
Predecessors: [0xb39]
Successors: [0xb4c]
---
0xb43 PUSH1 0x0
0xb45 DUP1
0xb46 REVERT
0xb47 JUMPDEST
0xb48 DUP1
0xb49 SWAP2
0xb4a POP
0xb4b POP
---
0xb43: V651 = 0x0
0xb46: REVERT 0x0 0x0
0xb47: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xb4c
[0xb4c:0xcb5]
---
Predecessors: [0xb43]
Successors: [0xcb6]
---
0xb4c JUMPDEST
0xb4d SWAP3
0xb4e SWAP2
0xb4f POP
0xb50 POP
0xb51 JUMP
0xb52 JUMPDEST
0xb53 PUSH2 0x4b3
0xb56 DUP3
0xb57 DUP3
0xb58 PUSH1 0x1
0xb5a PUSH1 0x0
0xb5c SWAP1
0xb5d SLOAD
0xb5e SWAP1
0xb5f PUSH2 0x100
0xb62 EXP
0xb63 SWAP1
0xb64 DIV
0xb65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7a AND
0xb7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb90 AND
0xb91 PUSH2 0x4b7
0xb94 SWAP1
0xb95 SWAP3
0xb96 SWAP2
0xb97 SWAP1
0xb98 PUSH4 0xffffffff
0xb9d AND
0xb9e JUMP
0xb9f JUMPDEST
0xba0 POP
0xba1 POP
0xba2 JUMP
0xba3 JUMPDEST
0xba4 PUSH2 0x59f
0xba7 DUP4
0xba8 DUP5
0xba9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbe AND
0xbbf PUSH4 0xa9059cbb
0xbc4 SWAP1
0xbc5 POP
0xbc6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbe4 MUL
0xbe5 DUP5
0xbe6 DUP5
0xbe7 PUSH1 0x40
0xbe9 MLOAD
0xbea PUSH1 0x24
0xbec ADD
0xbed DUP1
0xbee DUP4
0xbef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc04 AND
0xc05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1a AND
0xc1b DUP2
0xc1c MSTORE
0xc1d PUSH1 0x20
0xc1f ADD
0xc20 DUP3
0xc21 DUP2
0xc22 MSTORE
0xc23 PUSH1 0x20
0xc25 ADD
0xc26 SWAP3
0xc27 POP
0xc28 POP
0xc29 POP
0xc2a PUSH1 0x40
0xc2c MLOAD
0xc2d PUSH1 0x20
0xc2f DUP2
0xc30 DUP4
0xc31 SUB
0xc32 SUB
0xc33 DUP2
0xc34 MSTORE
0xc35 SWAP1
0xc36 PUSH1 0x40
0xc38 MSTORE
0xc39 SWAP1
0xc3a PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc57 NOT
0xc58 AND
0xc59 PUSH1 0x20
0xc5b DUP3
0xc5c ADD
0xc5d DUP1
0xc5e MLOAD
0xc5f PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc7c DUP4
0xc7d DUP2
0xc7e DUP4
0xc7f AND
0xc80 OR
0xc81 DUP4
0xc82 MSTORE
0xc83 POP
0xc84 POP
0xc85 POP
0xc86 POP
0xc87 PUSH2 0x5a4
0xc8a JUMP
0xc8b JUMPDEST
0xc8c POP
0xc8d POP
0xc8e POP
0xc8f JUMP
0xc90 JUMPDEST
0xc91 PUSH2 0x5c3
0xc94 DUP3
0xc95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcaa AND
0xcab PUSH2 0x6d9
0xcae JUMP
0xcaf JUMPDEST
0xcb0 ISZERO
0xcb1 ISZERO
0xcb2 PUSH2 0x5ce
0xcb5 JUMPI
---
0xb4c: JUMPDEST 
0xb51: JUMP S3
0xb52: JUMPDEST 
0xb53: V652 = 0x4b3
0xb58: V653 = 0x1
0xb5a: V654 = 0x0
0xb5d: V655 = S[0x1]
0xb5f: V656 = 0x100
0xb62: V657 = EXP 0x100 0x0
0xb64: V658 = DIV V655 0x1
0xb65: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7a: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0xb7b: V661 = 0xffffffffffffffffffffffffffffffffffffffff
0xb90: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0xb91: V663 = 0x4b7
0xb98: V664 = 0xffffffff
0xb9d: V665 = AND 0xffffffff 0x4b7
0xb9e: THROW 
0xb9f: JUMPDEST 
0xba2: JUMP S2
0xba3: JUMPDEST 
0xba4: V666 = 0x59f
0xba9: V667 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbe: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xbbf: V669 = 0xa9059cbb
0xbc6: V670 = 0x100000000000000000000000000000000000000000000000000000000
0xbe4: V671 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xbe7: V672 = 0x40
0xbe9: V673 = M[0x40]
0xbea: V674 = 0x24
0xbec: V675 = ADD 0x24 V673
0xbef: V676 = 0xffffffffffffffffffffffffffffffffffffffff
0xc04: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xc05: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1a: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xc1c: M[V675] = V679
0xc1d: V680 = 0x20
0xc1f: V681 = ADD 0x20 V675
0xc22: M[V681] = S0
0xc23: V682 = 0x20
0xc25: V683 = ADD 0x20 V681
0xc2a: V684 = 0x40
0xc2c: V685 = M[0x40]
0xc2d: V686 = 0x20
0xc31: V687 = SUB V683 V685
0xc32: V688 = SUB V687 0x20
0xc34: M[V685] = V688
0xc36: V689 = 0x40
0xc38: M[0x40] = V683
0xc3a: V690 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc57: V691 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc58: V692 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc59: V693 = 0x20
0xc5c: V694 = ADD V685 0x20
0xc5e: V695 = M[V694]
0xc5f: V696 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc7f: V697 = AND V695 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc80: V698 = OR V697 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc82: M[V694] = V698
0xc87: V699 = 0x5a4
0xc8a: THROW 
0xc8b: JUMPDEST 
0xc8f: JUMP S3
0xc90: JUMPDEST 
0xc91: V700 = 0x5c3
0xc95: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xcaa: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xcab: V703 = 0x6d9
0xcae: THROW 
0xcaf: JUMPDEST 
0xcb0: V704 = ISZERO S0
0xcb1: V705 = ISZERO V704
0xcb2: V706 = 0x5ce
0xcb5: THROWI V705
---
Entry stack: [S0]
Stack pops: 100
Stack additions: []
Exit stack: []

================================

Block 0xcb6
[0xcb6:0xce5]
---
Predecessors: [0xb4c]
Successors: [0xce6]
---
0xcb6 PUSH1 0x0
0xcb8 DUP1
0xcb9 REVERT
0xcba JUMPDEST
0xcbb PUSH1 0x0
0xcbd PUSH1 0x60
0xcbf DUP4
0xcc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd5 AND
0xcd6 DUP4
0xcd7 PUSH1 0x40
0xcd9 MLOAD
0xcda DUP1
0xcdb DUP3
0xcdc DUP1
0xcdd MLOAD
0xcde SWAP1
0xcdf PUSH1 0x20
0xce1 ADD
0xce2 SWAP1
0xce3 DUP1
0xce4 DUP4
0xce5 DUP4
---
0xcb6: V707 = 0x0
0xcb9: REVERT 0x0 0x0
0xcba: JUMPDEST 
0xcbb: V708 = 0x0
0xcbd: V709 = 0x60
0xcc0: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd5: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xcd7: V712 = 0x40
0xcd9: V713 = M[0x40]
0xcdd: V714 = M[S0]
0xcdf: V715 = 0x20
0xce1: V716 = ADD 0x20 S0
---
Entry stack: []
Stack pops: 0
Stack additions: [V716, V713, V714, V714, V716, V713, V713, S0, V711, 0x60, 0x0, S0, S1]
Exit stack: []

================================

Block 0xce6
[0xce6:0xcf0]
---
Predecessors: [0xcb6]
Successors: [0xcf1]
---
0xce6 JUMPDEST
0xce7 PUSH1 0x20
0xce9 DUP4
0xcea LT
0xceb ISZERO
0xcec ISZERO
0xced PUSH2 0x61f
0xcf0 JUMPI
---
0xce6: JUMPDEST 
0xce7: V717 = 0x20
0xcea: V718 = LT V714 0x20
0xceb: V719 = ISZERO V718
0xcec: V720 = ISZERO V719
0xced: V721 = 0x61f
0xcf0: THROWI V720
---
Entry stack: [S12, S11, 0x0, 0x60, V711, S7, V713, V713, V716, V714, V714, V713, V716]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S12, S11, 0x0, 0x60, V711, S7, V713, V713, V716, V714, V714, V713, V716]

================================

Block 0xcf1
[0xcf1:0xd4b]
---
Predecessors: [0xce6]
Successors: [0xd4c]
---
0xcf1 DUP1
0xcf2 MLOAD
0xcf3 DUP3
0xcf4 MSTORE
0xcf5 PUSH1 0x20
0xcf7 DUP3
0xcf8 ADD
0xcf9 SWAP2
0xcfa POP
0xcfb PUSH1 0x20
0xcfd DUP2
0xcfe ADD
0xcff SWAP1
0xd00 POP
0xd01 PUSH1 0x20
0xd03 DUP4
0xd04 SUB
0xd05 SWAP3
0xd06 POP
0xd07 PUSH2 0x5fa
0xd0a JUMP
0xd0b JUMPDEST
0xd0c PUSH1 0x1
0xd0e DUP4
0xd0f PUSH1 0x20
0xd11 SUB
0xd12 PUSH2 0x100
0xd15 EXP
0xd16 SUB
0xd17 DUP1
0xd18 NOT
0xd19 DUP3
0xd1a MLOAD
0xd1b AND
0xd1c DUP2
0xd1d DUP5
0xd1e MLOAD
0xd1f AND
0xd20 DUP1
0xd21 DUP3
0xd22 OR
0xd23 DUP6
0xd24 MSTORE
0xd25 POP
0xd26 POP
0xd27 POP
0xd28 POP
0xd29 POP
0xd2a POP
0xd2b SWAP1
0xd2c POP
0xd2d ADD
0xd2e SWAP2
0xd2f POP
0xd30 POP
0xd31 PUSH1 0x0
0xd33 PUSH1 0x40
0xd35 MLOAD
0xd36 DUP1
0xd37 DUP4
0xd38 SUB
0xd39 DUP2
0xd3a PUSH1 0x0
0xd3c DUP7
0xd3d GAS
0xd3e CALL
0xd3f SWAP2
0xd40 POP
0xd41 POP
0xd42 RETURNDATASIZE
0xd43 DUP1
0xd44 PUSH1 0x0
0xd46 DUP2
0xd47 EQ
0xd48 PUSH2 0x681
0xd4b JUMPI
---
0xcf2: V722 = M[V716]
0xcf4: M[V713] = V722
0xcf5: V723 = 0x20
0xcf8: V724 = ADD V713 0x20
0xcfb: V725 = 0x20
0xcfe: V726 = ADD V716 0x20
0xd01: V727 = 0x20
0xd04: V728 = SUB V714 0x20
0xd07: V729 = 0x5fa
0xd0a: THROW 
0xd0b: JUMPDEST 
0xd0c: V730 = 0x1
0xd0f: V731 = 0x20
0xd11: V732 = SUB 0x20 S2
0xd12: V733 = 0x100
0xd15: V734 = EXP 0x100 V732
0xd16: V735 = SUB V734 0x1
0xd18: V736 = NOT V735
0xd1a: V737 = M[S0]
0xd1b: V738 = AND V737 V736
0xd1e: V739 = M[S1]
0xd1f: V740 = AND V739 V735
0xd22: V741 = OR V738 V740
0xd24: M[S1] = V741
0xd2d: V742 = ADD S3 S5
0xd31: V743 = 0x0
0xd33: V744 = 0x40
0xd35: V745 = M[0x40]
0xd38: V746 = SUB V742 V745
0xd3a: V747 = 0x0
0xd3d: V748 = GAS
0xd3e: V749 = CALL V748 S8 0x0 V745 V746 V745 0x0
0xd42: V750 = RETURNDATASIZE
0xd44: V751 = 0x0
0xd47: V752 = EQ V750 0x0
0xd48: V753 = 0x681
0xd4b: THROWI V752
---
Entry stack: [S12, S11, 0x0, 0x60, V711, S7, V713, V713, V716, V714, V714, V713, V716]
Stack pops: 3
Stack additions: [V750, V750, V749]
Exit stack: []

================================

Block 0xd4c
[0xd4c:0xd71]
---
Predecessors: [0xcf1]
Successors: [0xd72]
---
0xd4c PUSH1 0x40
0xd4e MLOAD
0xd4f SWAP2
0xd50 POP
0xd51 PUSH1 0x1f
0xd53 NOT
0xd54 PUSH1 0x3f
0xd56 RETURNDATASIZE
0xd57 ADD
0xd58 AND
0xd59 DUP3
0xd5a ADD
0xd5b PUSH1 0x40
0xd5d MSTORE
0xd5e RETURNDATASIZE
0xd5f DUP3
0xd60 MSTORE
0xd61 RETURNDATASIZE
0xd62 PUSH1 0x0
0xd64 PUSH1 0x20
0xd66 DUP5
0xd67 ADD
0xd68 RETURNDATACOPY
0xd69 PUSH2 0x686
0xd6c JUMP
0xd6d JUMPDEST
0xd6e PUSH1 0x60
0xd70 SWAP2
0xd71 POP
---
0xd4c: V754 = 0x40
0xd4e: V755 = M[0x40]
0xd51: V756 = 0x1f
0xd53: V757 = NOT 0x1f
0xd54: V758 = 0x3f
0xd56: V759 = RETURNDATASIZE
0xd57: V760 = ADD V759 0x3f
0xd58: V761 = AND V760 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xd5a: V762 = ADD V755 V761
0xd5b: V763 = 0x40
0xd5d: M[0x40] = V762
0xd5e: V764 = RETURNDATASIZE
0xd60: M[V755] = V764
0xd61: V765 = RETURNDATASIZE
0xd62: V766 = 0x0
0xd64: V767 = 0x20
0xd67: V768 = ADD V755 0x20
0xd68: RETURNDATACOPY V768 0x0 V765
0xd69: V769 = 0x686
0xd6c: THROW 
0xd6d: JUMPDEST 
0xd6e: V770 = 0x60
---
Entry stack: [V749, V750, V750]
Stack pops: 2
Stack additions: [S0, 0x60]
Exit stack: []

================================

Block 0xd72
[0xd72:0xd7e]
---
Predecessors: [0xd4c]
Successors: [0xd7f]
---
0xd72 JUMPDEST
0xd73 POP
0xd74 SWAP2
0xd75 POP
0xd76 SWAP2
0xd77 POP
0xd78 DUP2
0xd79 ISZERO
0xd7a ISZERO
0xd7b PUSH2 0x697
0xd7e JUMPI
---
0xd72: JUMPDEST 
0xd79: V771 = ISZERO S2
0xd7a: V772 = ISZERO V771
0xd7b: V773 = 0x697
0xd7e: THROWI V772
---
Entry stack: [0x60, S0]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [S0, 0x60]

================================

Block 0xd7f
[0xd7f:0xd8d]
---
Predecessors: [0xd72]
Successors: [0xd8e]
---
0xd7f PUSH1 0x0
0xd81 DUP1
0xd82 REVERT
0xd83 JUMPDEST
0xd84 PUSH1 0x0
0xd86 DUP2
0xd87 MLOAD
0xd88 GT
0xd89 ISZERO
0xd8a PUSH2 0x6d3
0xd8d JUMPI
---
0xd7f: V774 = 0x0
0xd82: REVERT 0x0 0x0
0xd83: JUMPDEST 
0xd84: V775 = 0x0
0xd87: V776 = M[S0]
0xd88: V777 = GT V776 0x0
0xd89: V778 = ISZERO V777
0xd8a: V779 = 0x6d3
0xd8d: THROWI V778
---
Entry stack: [S1, 0x60]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xd8e
[0xd8e:0xd9d]
---
Predecessors: [0xd7f]
Successors: [0xd9e]
---
0xd8e DUP1
0xd8f DUP1
0xd90 PUSH1 0x20
0xd92 ADD
0xd93 SWAP1
0xd94 MLOAD
0xd95 PUSH1 0x20
0xd97 DUP2
0xd98 LT
0xd99 ISZERO
0xd9a PUSH2 0x6b6
0xd9d JUMPI
---
0xd90: V780 = 0x20
0xd92: V781 = ADD 0x20 S0
0xd94: V782 = M[S0]
0xd95: V783 = 0x20
0xd98: V784 = LT V782 0x20
0xd99: V785 = ISZERO V784
0xd9a: V786 = 0x6b6
0xd9d: THROWI V785
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0, V781, V782]
Exit stack: [S0, V781, V782]

================================

Block 0xd9e
[0xd9e:0xdb9]
---
Predecessors: [0xd8e]
Successors: [0xdba]
---
0xd9e PUSH1 0x0
0xda0 DUP1
0xda1 REVERT
0xda2 JUMPDEST
0xda3 DUP2
0xda4 ADD
0xda5 SWAP1
0xda6 DUP1
0xda7 DUP1
0xda8 MLOAD
0xda9 SWAP1
0xdaa PUSH1 0x20
0xdac ADD
0xdad SWAP1
0xdae SWAP3
0xdaf SWAP2
0xdb0 SWAP1
0xdb1 POP
0xdb2 POP
0xdb3 POP
0xdb4 ISZERO
0xdb5 ISZERO
0xdb6 PUSH2 0x6d2
0xdb9 JUMPI
---
0xd9e: V787 = 0x0
0xda1: REVERT 0x0 0x0
0xda2: JUMPDEST 
0xda4: V788 = ADD S1 S0
0xda8: V789 = M[S1]
0xdaa: V790 = 0x20
0xdac: V791 = ADD 0x20 S1
0xdb4: V792 = ISZERO V789
0xdb5: V793 = ISZERO V792
0xdb6: V794 = 0x6d2
0xdb9: THROWI V793
---
Entry stack: [S2, V781, V782]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdba
[0xdba:0xdbe]
---
Predecessors: [0xd9e]
Successors: [0xdbf]
---
0xdba PUSH1 0x0
0xdbc DUP1
0xdbd REVERT
0xdbe JUMPDEST
---
0xdba: V795 = 0x0
0xdbd: REVERT 0x0 0x0
0xdbe: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdbf
[0xdbf:0xe2e]
---
Predecessors: [0xdba]
Successors: []
---
0xdbf JUMPDEST
0xdc0 POP
0xdc1 POP
0xdc2 POP
0xdc3 POP
0xdc4 JUMP
0xdc5 JUMPDEST
0xdc6 PUSH1 0x0
0xdc8 DUP1
0xdc9 DUP3
0xdca EXTCODESIZE
0xdcb SWAP1
0xdcc POP
0xdcd PUSH1 0x0
0xdcf DUP2
0xdd0 GT
0xdd1 SWAP2
0xdd2 POP
0xdd3 POP
0xdd4 SWAP2
0xdd5 SWAP1
0xdd6 POP
0xdd7 JUMP
0xdd8 INVALID
0xdd9 LOG1
0xdda PUSH6 0x627a7a723058
0xde1 SHA3
0xde2 MISSING 0xe7
0xde3 MISSING 0xf
0xde4 PUSH19 0xf4fc869317c38a49e29454387f75468120dea0
0xdf8 MISSING 0xa8
0xdf9 SWAP9
0xdfa AND
0xdfb PUSH18 0xa0d9b3ddb1830029a165627a7a7230582002
0xe0e MISSING 0xcb
0xe0f SAR
0xe10 RETURNDATASIZE
0xe11 MISSING 0xf9
0xe12 MISSING 0xc7
0xe13 PUSH14 0x974f6902b6cd6ca86d8fbd573ba4
0xe22 MISSING 0xef
0xe23 DUP4
0xe24 MISSING 0xc7
0xe25 MISSING 0x5c
0xe26 MISSING 0xf7
0xe27 ADDMOD
0xe28 MISSING 0xb2
0xe29 EXTCODESIZE
0xe2a CALLER
0xe2b MISSING 0xd
0xe2c DUP5
0xe2d STOP
0xe2e MISSING 0x29
---
0xdbf: JUMPDEST 
0xdc4: JUMP S4
0xdc5: JUMPDEST 
0xdc6: V796 = 0x0
0xdca: V797 = EXTCODESIZE S0
0xdcd: V798 = 0x0
0xdd0: V799 = GT V797 0x0
0xdd7: JUMP S1
0xdd8: INVALID 
0xdd9: LOG S0 S1 S2
0xdda: V800 = 0x627a7a723058
0xde1: V801 = SHA3 0x627a7a723058 S3
0xde2: MISSING 0xe7
0xde3: MISSING 0xf
0xde4: V802 = 0xf4fc869317c38a49e29454387f75468120dea0
0xdf8: MISSING 0xa8
0xdfa: V803 = AND S9 S1
0xdfb: V804 = 0xa0d9b3ddb1830029a165627a7a7230582002
0xe0e: MISSING 0xcb
0xe0f: V805 = SAR S0 S1
0xe10: V806 = RETURNDATASIZE
0xe11: MISSING 0xf9
0xe12: MISSING 0xc7
0xe13: V807 = 0x974f6902b6cd6ca86d8fbd573ba4
0xe22: MISSING 0xef
0xe24: MISSING 0xc7
0xe25: MISSING 0x5c
0xe26: MISSING 0xf7
0xe27: V808 = ADDMOD S0 S1 S2
0xe28: MISSING 0xb2
0xe29: V809 = EXTCODESIZE S0
0xe2a: V810 = CALLER
0xe2b: MISSING 0xd
0xe2d: STOP 
0xe2e: MISSING 0x29
---
Entry stack: []
Stack pops: 300306
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x2f4f3316
Entry block: 0x6e
Exit block: 0xb0
Body: 0x6e, 0x80, 0x84, 0xb0, 0x25e

Function 1:
Public function signature: 0x57183c82
Entry block: 0xca
Exit block: 0x116
Body: 0xca, 0xdc, 0xe0, 0x116, 0x27e, 0x298, 0x299

Function 2:
Public function signature: 0x8f838478
Entry block: 0x158
Exit block: 0x19a
Body: 0x158, 0x16a, 0x16e, 0x19a, 0x2cb

Function 3:
Public function signature: 0xd4ad2673
Entry block: 0x1b0
Exit block: 0x21c
Body: 0x1b0, 0x1c2, 0x1c6, 0x21c, 0x317, 0x325, 0x3a8, 0x3b1, 0x3bd, 0x3c8, 0x55c

Function 4:
Public fallback function
Entry block: 0x69
Exit block: 0x69
Body: 0x69

