Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7f
0xa: JUMPI 0x7f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x81]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xefafd01
0x34 EQ
0x35 PUSH2 0x81
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xefafd01
0x34: V10 = EQ 0xefafd01 V8
0x35: V11 = 0x81
0x38: JUMPI 0x81 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xa2]
---
0x39 DUP1
0x3a PUSH4 0x25d8dcf2
0x3f EQ
0x40 PUSH2 0xa2
0x43 JUMPI
---
0x3a: V12 = 0x25d8dcf2
0x3f: V13 = EQ 0x25d8dcf2 V8
0x40: V14 = 0xa2
0x43: JUMPI 0xa2 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xaf]
---
0x44 DUP1
0x45 PUSH4 0x34dbe44d
0x4a EQ
0x4b PUSH2 0xaf
0x4e JUMPI
---
0x45: V15 = 0x34dbe44d
0x4a: V16 = EQ 0x34dbe44d V8
0x4b: V17 = 0xaf
0x4e: JUMPI 0xaf V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xd0]
---
0x4f DUP1
0x50 PUSH4 0x41c0e1b5
0x55 EQ
0x56 PUSH2 0xd0
0x59 JUMPI
---
0x50: V18 = 0x41c0e1b5
0x55: V19 = EQ 0x41c0e1b5 V8
0x56: V20 = 0xd0
0x59: JUMPI 0xd0 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0xdd]
---
0x5a DUP1
0x5b PUSH4 0x5acce36b
0x60 EQ
0x61 PUSH2 0xdd
0x64 JUMPI
---
0x5b: V21 = 0x5acce36b
0x60: V22 = EQ 0x5acce36b V8
0x61: V23 = 0xdd
0x64: JUMPI 0xdd V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0xfe]
---
0x65 DUP1
0x66 PUSH4 0x94c3fa2e
0x6b EQ
0x6c PUSH2 0xfe
0x6f JUMPI
---
0x66: V24 = 0x94c3fa2e
0x6b: V25 = EQ 0x94c3fa2e V8
0x6c: V26 = 0xfe
0x6f: JUMPI 0xfe V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x11f]
---
0x70 DUP1
0x71 PUSH4 0xcee6f93c
0x76 EQ
0x77 PUSH2 0x11f
0x7a JUMPI
---
0x71: V27 = 0xcee6f93c
0x76: V28 = EQ 0xcee6f93c V8
0x77: V29 = 0x11f
0x7a: JUMPI 0x11f V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x70]
Successors: [0x7f]
---
0x7b PUSH2 0x7f
0x7e JUMP
---
0x7b: V30 = 0x7f
0x7e: JUMP 0x7f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x0, 0x7b]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0xb]
Successors: [0x7f1]
---
0x81 JUMPDEST
0x82 PUSH2 0x8c
0x85 PUSH1 0x4
0x87 POP
0x88 PUSH2 0x7f1
0x8b JUMP
---
0x81: JUMPDEST 
0x82: V31 = 0x8c
0x85: V32 = 0x4
0x88: V33 = 0x7f1
0x8b: JUMP 0x7f1
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V8, 0x8c]

================================

Block 0x8c
[0x8c:0xa1]
---
Predecessors: [0x800]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f MLOAD
0x90 DUP1
0x91 DUP3
0x92 DUP2
0x93 MSTORE
0x94 PUSH1 0x20
0x96 ADD
0x97 SWAP2
0x98 POP
0x99 POP
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e SWAP2
0x9f SUB
0xa0 SWAP1
0xa1 RETURN
---
0x8c: JUMPDEST 
0x8d: V34 = 0x40
0x8f: V35 = M[0x40]
0x93: M[V35] = V544
0x94: V36 = 0x20
0x96: V37 = ADD 0x20 V35
0x9a: V38 = 0x40
0x9c: V39 = M[0x40]
0x9f: V40 = SUB V37 V39
0xa1: RETURN V39 V40
---
Entry stack: [V8, V544]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x39]
Successors: [0x1bc]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xad
0xa6 PUSH1 0x4
0xa8 POP
0xa9 PUSH2 0x1bc
0xac JUMP
---
0xa2: JUMPDEST 
0xa3: V41 = 0xad
0xa6: V42 = 0x4
0xa9: V43 = 0x1bc
0xac: JUMP 0x1bc
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V8, 0xad]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0x74b]
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0x44]
Successors: [0x74f]
---
0xaf JUMPDEST
0xb0 PUSH2 0xba
0xb3 PUSH1 0x4
0xb5 POP
0xb6 PUSH2 0x74f
0xb9 JUMP
---
0xaf: JUMPDEST 
0xb0: V44 = 0xba
0xb3: V45 = 0x4
0xb6: V46 = 0x74f
0xb9: JUMP 0x74f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xba]
Exit stack: [V8, 0xba]

================================

Block 0xba
[0xba:0xcf]
---
Predecessors: [0x75e]
Successors: []
---
0xba JUMPDEST
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf DUP3
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
---
0xba: JUMPDEST 
0xbb: V47 = 0x40
0xbd: V48 = M[0x40]
0xc1: M[V48] = V490
0xc2: V49 = 0x20
0xc4: V50 = ADD 0x20 V48
0xc8: V51 = 0x40
0xca: V52 = M[0x40]
0xcd: V53 = SUB V50 V52
0xcf: RETURN V52 V53
---
Entry stack: [V8, V490]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0x4f]
Successors: [0x803]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xdb
0xd4 PUSH1 0x4
0xd6 POP
0xd7 PUSH2 0x803
0xda JUMP
---
0xd0: JUMPDEST 
0xd1: V54 = 0xdb
0xd4: V55 = 0x4
0xd7: V56 = 0x803
0xda: JUMP 0x803
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdb]
Exit stack: [V8, 0xdb]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: [0x895]
Successors: []
---
0xdb JUMPDEST
0xdc STOP
---
0xdb: JUMPDEST 
0xdc: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xdd
[0xdd:0xe7]
---
Predecessors: [0x5a]
Successors: [0x198]
---
0xdd JUMPDEST
0xde PUSH2 0xe8
0xe1 PUSH1 0x4
0xe3 POP
0xe4 PUSH2 0x198
0xe7 JUMP
---
0xdd: JUMPDEST 
0xde: V57 = 0xe8
0xe1: V58 = 0x4
0xe4: V59 = 0x198
0xe7: JUMP 0x198
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V8, 0xe8]

================================

Block 0xe8
[0xe8:0xfd]
---
Predecessors: [0x1b9]
Successors: []
---
0xe8 JUMPDEST
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed DUP3
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
0xf5 POP
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 DUP1
0xfa SWAP2
0xfb SUB
0xfc SWAP1
0xfd RETURN
---
0xe8: JUMPDEST 
0xe9: V60 = 0x40
0xeb: V61 = M[0x40]
0xef: M[V61] = V126
0xf0: V62 = 0x20
0xf2: V63 = ADD 0x20 V61
0xf6: V64 = 0x40
0xf8: V65 = M[0x40]
0xfb: V66 = SUB V63 V65
0xfd: RETURN V65 V66
---
Entry stack: [V8, V126]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xfe
[0xfe:0x108]
---
Predecessors: [0x65]
Successors: [0x761]
---
0xfe JUMPDEST
0xff PUSH2 0x109
0x102 PUSH1 0x4
0x104 POP
0x105 PUSH2 0x761
0x108 JUMP
---
0xfe: JUMPDEST 
0xff: V67 = 0x109
0x102: V68 = 0x4
0x105: V69 = 0x761
0x108: JUMP 0x761
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x109]
Exit stack: [V8, 0x109]

================================

Block 0x109
[0x109:0x11e]
---
Predecessors: [0x770]
Successors: []
---
0x109 JUMPDEST
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e DUP3
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP2
0x115 POP
0x116 POP
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b SWAP2
0x11c SUB
0x11d SWAP1
0x11e RETURN
---
0x109: JUMPDEST 
0x10a: V70 = 0x40
0x10c: V71 = M[0x40]
0x110: M[V71] = V495
0x111: V72 = 0x20
0x113: V73 = ADD 0x20 V71
0x117: V74 = 0x40
0x119: V75 = M[0x40]
0x11c: V76 = SUB V73 V75
0x11e: RETURN V75 V76
---
Entry stack: [V8, V495]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x11f
[0x11f:0x129]
---
Predecessors: [0x70]
Successors: [0x773]
---
0x11f JUMPDEST
0x120 PUSH2 0x12a
0x123 PUSH1 0x4
0x125 POP
0x126 PUSH2 0x773
0x129 JUMP
---
0x11f: JUMPDEST 
0x120: V77 = 0x12a
0x123: V78 = 0x4
0x126: V79 = 0x773
0x129: JUMP 0x773
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V8, 0x12a]

================================

Block 0x12a
[0x12a:0x170]
---
Predecessors: [0x7ee]
Successors: [0x171, 0x18a]
---
0x12a JUMPDEST
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f DUP1
0x130 PUSH1 0x20
0x132 ADD
0x133 DUP3
0x134 DUP2
0x135 SUB
0x136 DUP3
0x137 MSTORE
0x138 DUP4
0x139 DUP2
0x13a DUP2
0x13b MLOAD
0x13c DUP2
0x13d MSTORE
0x13e PUSH1 0x20
0x140 ADD
0x141 SWAP2
0x142 POP
0x143 DUP1
0x144 MLOAD
0x145 SWAP1
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP1
0x14a DUP1
0x14b DUP4
0x14c DUP4
0x14d DUP3
0x14e SWAP1
0x14f PUSH1 0x0
0x151 PUSH1 0x4
0x153 PUSH1 0x20
0x155 DUP5
0x156 PUSH1 0x1f
0x158 ADD
0x159 DIV
0x15a PUSH1 0x3
0x15c MUL
0x15d PUSH1 0xf
0x15f ADD
0x160 CALL
0x161 POP
0x162 SWAP1
0x163 POP
0x164 SWAP1
0x165 DUP2
0x166 ADD
0x167 SWAP1
0x168 PUSH1 0x1f
0x16a AND
0x16b DUP1
0x16c ISZERO
0x16d PUSH2 0x18a
0x170 JUMPI
---
0x12a: JUMPDEST 
0x12b: V80 = 0x40
0x12d: V81 = M[0x40]
0x130: V82 = 0x20
0x132: V83 = ADD 0x20 V81
0x135: V84 = SUB V83 V81
0x137: M[V81] = V84
0x13b: V85 = M[V516]
0x13d: M[V83] = V85
0x13e: V86 = 0x20
0x140: V87 = ADD 0x20 V83
0x144: V88 = M[V516]
0x146: V89 = 0x20
0x148: V90 = ADD 0x20 V516
0x14f: V91 = 0x0
0x151: V92 = 0x4
0x153: V93 = 0x20
0x156: V94 = 0x1f
0x158: V95 = ADD 0x1f V88
0x159: V96 = DIV V95 0x20
0x15a: V97 = 0x3
0x15c: V98 = MUL 0x3 V96
0x15d: V99 = 0xf
0x15f: V100 = ADD 0xf V98
0x160: V101 = CALL V100 0x4 0x0 V90 V88 V87 V88
0x166: V102 = ADD V88 V87
0x168: V103 = 0x1f
0x16a: V104 = AND 0x1f V88
0x16c: V105 = ISZERO V104
0x16d: V106 = 0x18a
0x170: JUMPI 0x18a V105
---
Entry stack: [V8, V516]
Stack pops: 1
Stack additions: [S0, V81, V81, V102, V104]
Exit stack: [V8, V516, V81, V81, V102, V104]

================================

Block 0x171
[0x171:0x189]
---
Predecessors: [0x12a]
Successors: [0x18a]
---
0x171 DUP1
0x172 DUP3
0x173 SUB
0x174 DUP1
0x175 MLOAD
0x176 PUSH1 0x1
0x178 DUP4
0x179 PUSH1 0x20
0x17b SUB
0x17c PUSH2 0x100
0x17f EXP
0x180 SUB
0x181 NOT
0x182 AND
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP2
0x189 POP
---
0x173: V107 = SUB V102 V104
0x175: V108 = M[V107]
0x176: V109 = 0x1
0x179: V110 = 0x20
0x17b: V111 = SUB 0x20 V104
0x17c: V112 = 0x100
0x17f: V113 = EXP 0x100 V111
0x180: V114 = SUB V113 0x1
0x181: V115 = NOT V114
0x182: V116 = AND V115 V108
0x184: M[V107] = V116
0x185: V117 = 0x20
0x187: V118 = ADD 0x20 V107
---
Entry stack: [V8, V516, V81, V81, V102, V104]
Stack pops: 2
Stack additions: [V118, S0]
Exit stack: [V8, V516, V81, V81, V118, V104]

================================

Block 0x18a
[0x18a:0x197]
---
Predecessors: [0x12a, 0x171]
Successors: []
---
0x18a JUMPDEST
0x18b POP
0x18c SWAP3
0x18d POP
0x18e POP
0x18f POP
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 SWAP2
0x195 SUB
0x196 SWAP1
0x197 RETURN
---
0x18a: JUMPDEST 
0x190: V119 = 0x40
0x192: V120 = M[0x40]
0x195: V121 = SUB S1 V120
0x197: RETURN V120 V121
---
Entry stack: [V8, V516, V81, V81, S1, V104]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x198
[0x198:0x1b8]
---
Predecessors: [0xdd]
Successors: [0x1b9]
---
0x198 JUMPDEST
0x199 PUSH1 0x0
0x19b ADDRESS
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 BALANCE
0x1b3 SWAP1
0x1b4 POP
0x1b5 PUSH2 0x1b9
0x1b8 JUMP
---
0x198: JUMPDEST 
0x199: V122 = 0x0
0x19b: V123 = ADDRESS
0x19c: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1b2: V126 = BALANCE V125
0x1b5: V127 = 0x1b9
0x1b8: JUMP 0x1b9
---
Entry stack: [V8, 0xe8]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V8, 0xe8, V126]

================================

Block 0x1b9
[0x1b9:0x1bb]
---
Predecessors: [0x198]
Successors: [0xe8]
---
0x1b9 JUMPDEST
0x1ba SWAP1
0x1bb JUMP
---
0x1b9: JUMPDEST 
0x1bb: JUMP 0xe8
---
Entry stack: [V8, 0xe8, V126]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V126]

================================

Block 0x1bc
[0x1bc:0x1e6]
---
Predecessors: [0xa2]
Successors: [0x1e7, 0x2e4]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x0
0x1bf PUSH1 0x0
0x1c1 PUSH1 0x0
0x1c3 PUSH1 0x1
0x1c5 MUL
0x1c6 PUSH1 0x4
0x1c8 PUSH1 0x0
0x1ca POP
0x1cb DUP2
0x1cc SWAP1
0x1cd SSTORE
0x1ce POP
0x1cf PUSH16 0xffffffffffffffffffffffffffffffff
0x1e0 CALLVALUE
0x1e1 GT
0x1e2 ISZERO
0x1e3 PUSH2 0x2e4
0x1e6 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V128 = 0x0
0x1bf: V129 = 0x0
0x1c1: V130 = 0x0
0x1c3: V131 = 0x1
0x1c5: V132 = MUL 0x1 0x0
0x1c6: V133 = 0x4
0x1c8: V134 = 0x0
0x1cd: S[0x4] = 0x0
0x1cf: V135 = 0xffffffffffffffffffffffffffffffff
0x1e0: V136 = CALLVALUE
0x1e1: V137 = GT V136 0xffffffffffffffffffffffffffffffff
0x1e2: V138 = ISZERO V137
0x1e3: V139 = 0x2e4
0x1e6: JUMPI 0x2e4 V138
---
Entry stack: [V8, 0xad]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x1e7
[0x1e7:0x24d]
---
Predecessors: [0x1bc]
Successors: [0x24e, 0x270]
---
0x1e7 PUSH1 0x40
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee ADD
0x1ef PUSH1 0x40
0x1f1 MSTORE
0x1f2 DUP1
0x1f3 PUSH1 0xf
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa PUSH32 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x20
0x21f ADD
0x220 POP
0x221 PUSH1 0x3
0x223 PUSH1 0x0
0x225 POP
0x226 SWAP1
0x227 DUP1
0x228 MLOAD
0x229 SWAP1
0x22a PUSH1 0x20
0x22c ADD
0x22d SWAP1
0x22e DUP3
0x22f DUP1
0x230 SLOAD
0x231 DUP3
0x232 DUP3
0x233 SSTORE
0x234 SWAP1
0x235 PUSH1 0x0
0x237 MSTORE
0x238 PUSH1 0x20
0x23a PUSH1 0x0
0x23c SHA3
0x23d SWAP1
0x23e PUSH1 0x1f
0x240 ADD
0x241 PUSH1 0x20
0x243 SWAP1
0x244 DIV
0x245 DUP2
0x246 ADD
0x247 SWAP3
0x248 DUP3
0x249 ISZERO
0x24a PUSH2 0x270
0x24d JUMPI
---
0x1e7: V140 = 0x40
0x1e9: V141 = 0x40
0x1eb: V142 = M[0x40]
0x1ee: V143 = ADD V142 0x40
0x1ef: V144 = 0x40
0x1f1: M[0x40] = V143
0x1f3: V145 = 0xf
0x1f6: M[V142] = 0xf
0x1f7: V146 = 0x20
0x1f9: V147 = ADD 0x20 V142
0x1fa: V148 = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x21c: M[V147] = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x21d: V149 = 0x20
0x21f: V150 = ADD 0x20 V147
0x221: V151 = 0x3
0x223: V152 = 0x0
0x228: V153 = M[V142]
0x22a: V154 = 0x20
0x22c: V155 = ADD 0x20 V142
0x230: V156 = S[0x3]
0x233: S[0x3] = V153
0x235: V157 = 0x0
0x237: M[0x0] = 0x3
0x238: V158 = 0x20
0x23a: V159 = 0x0
0x23c: V160 = SHA3 0x0 0x20
0x23e: V161 = 0x1f
0x240: V162 = ADD 0x1f V156
0x241: V163 = 0x20
0x244: V164 = DIV V162 0x20
0x246: V165 = ADD V160 V164
0x249: V166 = ISZERO V153
0x24a: V167 = 0x270
0x24d: JUMPI 0x270 V166
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V165, V153, V160, V155]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, V153, V160, V155]

================================

Block 0x24e
[0x24e:0x250]
---
Predecessors: [0x1e7]
Successors: [0x251]
---
0x24e SWAP2
0x24f DUP3
0x250 ADD
---
0x250: V168 = ADD V155 V153
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, V153, V160, V155]
Stack pops: 3
Stack additions: [S0, S1, V168]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, V155, V160, V168]

================================

Block 0x251
[0x251:0x259]
---
Predecessors: [0x24e, 0x25a]
Successors: [0x25a, 0x26f]
---
0x251 JUMPDEST
0x252 DUP3
0x253 DUP2
0x254 GT
0x255 ISZERO
0x256 PUSH2 0x26f
0x259 JUMPI
---
0x251: JUMPDEST 
0x254: V169 = GT V168 S2
0x255: V170 = ISZERO V169
0x256: V171 = 0x26f
0x259: JUMPI 0x26f V170
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, S2, S1, V168]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, S2, S1, V168]

================================

Block 0x25a
[0x25a:0x26e]
---
Predecessors: [0x251]
Successors: [0x251]
---
0x25a DUP3
0x25b MLOAD
0x25c DUP3
0x25d PUSH1 0x0
0x25f POP
0x260 SSTORE
0x261 SWAP2
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP2
0x266 SWAP1
0x267 PUSH1 0x1
0x269 ADD
0x26a SWAP1
0x26b PUSH2 0x251
0x26e JUMP
---
0x25b: V172 = M[S2]
0x25d: V173 = 0x0
0x260: S[S1] = V172
0x262: V174 = 0x20
0x264: V175 = ADD 0x20 S2
0x267: V176 = 0x1
0x269: V177 = ADD 0x1 S1
0x26b: V178 = 0x251
0x26e: JUMP 0x251
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, S2, S1, V168]
Stack pops: 3
Stack additions: [V175, V177, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, V175, V177, V168]

================================

Block 0x26f
[0x26f:0x26f]
---
Predecessors: [0x251]
Successors: [0x270]
---
0x26f JUMPDEST
---
0x26f: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, S2, S1, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, S2, S1, V168]

================================

Block 0x270
[0x270:0x27c]
---
Predecessors: [0x1e7, 0x26f]
Successors: [0x27d]
---
0x270 JUMPDEST
0x271 POP
0x272 SWAP1
0x273 POP
0x274 PUSH2 0x29b
0x277 SWAP2
0x278 SWAP1
0x279 PUSH2 0x27d
0x27c JUMP
---
0x270: JUMPDEST 
0x274: V179 = 0x29b
0x279: V180 = 0x27d
0x27c: JUMP 0x27d
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V165, S2, S1, S0]
Stack pops: 4
Stack additions: [0x29b, S3, S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29b, V165, S1]

================================

Block 0x27d
[0x27d:0x285]
---
Predecessors: [0x270, 0x286]
Successors: [0x286, 0x297]
---
0x27d JUMPDEST
0x27e DUP1
0x27f DUP3
0x280 GT
0x281 ISZERO
0x282 PUSH2 0x297
0x285 JUMPI
---
0x27d: JUMPDEST 
0x280: V181 = GT V165 S0
0x281: V182 = ISZERO V181
0x282: V183 = 0x297
0x285: JUMPI 0x297 V182
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29b, V165, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29b, V165, S0]

================================

Block 0x286
[0x286:0x296]
---
Predecessors: [0x27d]
Successors: [0x27d]
---
0x286 PUSH1 0x0
0x288 DUP2
0x289 DUP2
0x28a POP
0x28b PUSH1 0x0
0x28d SWAP1
0x28e SSTORE
0x28f POP
0x290 PUSH1 0x1
0x292 ADD
0x293 PUSH2 0x27d
0x296 JUMP
---
0x286: V184 = 0x0
0x28b: V185 = 0x0
0x28e: S[S0] = 0x0
0x290: V186 = 0x1
0x292: V187 = ADD 0x1 S0
0x293: V188 = 0x27d
0x296: JUMP 0x27d
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29b, V165, S0]
Stack pops: 1
Stack additions: [V187]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29b, V165, V187]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x27d]
Successors: [0x29b]
---
0x297 JUMPDEST
0x298 POP
0x299 SWAP1
0x29a JUMP
---
0x297: JUMPDEST 
0x29a: JUMP 0x29b
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x29b, V165, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V165]

================================

Block 0x29b
[0x29b:0x2df]
---
Predecessors: [0x297]
Successors: [0x74b]
---
0x29b JUMPDEST
0x29c POP
0x29d POP
0x29e PUSH1 0x0
0x2a0 PUSH1 0x2
0x2a2 PUSH1 0x0
0x2a4 POP
0x2a5 DUP2
0x2a6 SWAP1
0x2a7 SSTORE
0x2a8 POP
0x2a9 CALLER
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 PUSH1 0x0
0x2c2 CALLVALUE
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 SWAP1
0x2c8 POP
0x2c9 PUSH1 0x0
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf DUP4
0x2d0 SUB
0x2d1 DUP2
0x2d2 DUP6
0x2d3 DUP9
0x2d4 DUP9
0x2d5 CALL
0x2d6 SWAP4
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da POP
0x2db POP
0x2dc PUSH2 0x74b
0x2df JUMP
---
0x29b: JUMPDEST 
0x29e: V189 = 0x0
0x2a0: V190 = 0x2
0x2a2: V191 = 0x0
0x2a7: S[0x2] = 0x0
0x2a9: V192 = CALLER
0x2aa: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x2c0: V195 = 0x0
0x2c2: V196 = CALLVALUE
0x2c3: V197 = 0x40
0x2c5: V198 = M[0x40]
0x2c9: V199 = 0x0
0x2cb: V200 = 0x40
0x2cd: V201 = M[0x40]
0x2d0: V202 = SUB V198 V201
0x2d5: V203 = CALL 0x0 V194 V196 V201 V202 V201 0x0
0x2dc: V204 = 0x74b
0x2df: JUMP 0x74b
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V165]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: []
Successors: [0x4fc]
---
0x2e0 PUSH2 0x4fc
0x2e3 JUMP
---
0x2e0: V205 = 0x4fc
0x2e3: JUMP 0x4fc
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e4
[0x2e4:0x306]
---
Predecessors: [0x1bc]
Successors: [0x307, 0x42a]
---
0x2e4 JUMPDEST
0x2e5 ADDRESS
0x2e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fb AND
0x2fc BALANCE
0x2fd PUSH1 0x2
0x2ff CALLVALUE
0x300 MUL
0x301 GT
0x302 ISZERO
0x303 PUSH2 0x42a
0x306 JUMPI
---
0x2e4: JUMPDEST 
0x2e5: V206 = ADDRESS
0x2e6: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x2fc: V209 = BALANCE V208
0x2fd: V210 = 0x2
0x2ff: V211 = CALLVALUE
0x300: V212 = MUL V211 0x2
0x301: V213 = GT V212 V209
0x302: V214 = ISZERO V213
0x303: V215 = 0x42a
0x306: JUMPI 0x42a V214
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x307
[0x307:0x393]
---
Predecessors: [0x2e4]
Successors: [0x394, 0x3b6]
---
0x307 PUSH1 0x60
0x309 PUSH1 0x40
0x30b MLOAD
0x30c SWAP1
0x30d DUP2
0x30e ADD
0x30f PUSH1 0x40
0x311 MSTORE
0x312 DUP1
0x313 PUSH1 0x2b
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x20
0x319 ADD
0x31a PUSH32 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x33b DUP2
0x33c MSTORE
0x33d PUSH1 0x20
0x33f ADD
0x340 PUSH32 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x20
0x365 ADD
0x366 POP
0x367 PUSH1 0x3
0x369 PUSH1 0x0
0x36b POP
0x36c SWAP1
0x36d DUP1
0x36e MLOAD
0x36f SWAP1
0x370 PUSH1 0x20
0x372 ADD
0x373 SWAP1
0x374 DUP3
0x375 DUP1
0x376 SLOAD
0x377 DUP3
0x378 DUP3
0x379 SSTORE
0x37a SWAP1
0x37b PUSH1 0x0
0x37d MSTORE
0x37e PUSH1 0x20
0x380 PUSH1 0x0
0x382 SHA3
0x383 SWAP1
0x384 PUSH1 0x1f
0x386 ADD
0x387 PUSH1 0x20
0x389 SWAP1
0x38a DIV
0x38b DUP2
0x38c ADD
0x38d SWAP3
0x38e DUP3
0x38f ISZERO
0x390 PUSH2 0x3b6
0x393 JUMPI
---
0x307: V216 = 0x60
0x309: V217 = 0x40
0x30b: V218 = M[0x40]
0x30e: V219 = ADD V218 0x60
0x30f: V220 = 0x40
0x311: M[0x40] = V219
0x313: V221 = 0x2b
0x316: M[V218] = 0x2b
0x317: V222 = 0x20
0x319: V223 = ADD 0x20 V218
0x31a: V224 = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x33c: M[V223] = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x33d: V225 = 0x20
0x33f: V226 = ADD 0x20 V223
0x340: V227 = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x362: M[V226] = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x363: V228 = 0x20
0x365: V229 = ADD 0x20 V226
0x367: V230 = 0x3
0x369: V231 = 0x0
0x36e: V232 = M[V218]
0x370: V233 = 0x20
0x372: V234 = ADD 0x20 V218
0x376: V235 = S[0x3]
0x379: S[0x3] = V232
0x37b: V236 = 0x0
0x37d: M[0x0] = 0x3
0x37e: V237 = 0x20
0x380: V238 = 0x0
0x382: V239 = SHA3 0x0 0x20
0x384: V240 = 0x1f
0x386: V241 = ADD 0x1f V235
0x387: V242 = 0x20
0x38a: V243 = DIV V241 0x20
0x38c: V244 = ADD V239 V243
0x38f: V245 = ISZERO V232
0x390: V246 = 0x3b6
0x393: JUMPI 0x3b6 V245
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V244, V232, V239, V234]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, V232, V239, V234]

================================

Block 0x394
[0x394:0x396]
---
Predecessors: [0x307]
Successors: [0x397]
---
0x394 SWAP2
0x395 DUP3
0x396 ADD
---
0x396: V247 = ADD V234 V232
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, V232, V239, V234]
Stack pops: 3
Stack additions: [S0, S1, V247]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, V234, V239, V247]

================================

Block 0x397
[0x397:0x39f]
---
Predecessors: [0x394, 0x3a0]
Successors: [0x3a0, 0x3b5]
---
0x397 JUMPDEST
0x398 DUP3
0x399 DUP2
0x39a GT
0x39b ISZERO
0x39c PUSH2 0x3b5
0x39f JUMPI
---
0x397: JUMPDEST 
0x39a: V248 = GT V247 S2
0x39b: V249 = ISZERO V248
0x39c: V250 = 0x3b5
0x39f: JUMPI 0x3b5 V249
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, S2, S1, V247]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, S2, S1, V247]

================================

Block 0x3a0
[0x3a0:0x3b4]
---
Predecessors: [0x397]
Successors: [0x397]
---
0x3a0 DUP3
0x3a1 MLOAD
0x3a2 DUP3
0x3a3 PUSH1 0x0
0x3a5 POP
0x3a6 SSTORE
0x3a7 SWAP2
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab SWAP2
0x3ac SWAP1
0x3ad PUSH1 0x1
0x3af ADD
0x3b0 SWAP1
0x3b1 PUSH2 0x397
0x3b4 JUMP
---
0x3a1: V251 = M[S2]
0x3a3: V252 = 0x0
0x3a6: S[S1] = V251
0x3a8: V253 = 0x20
0x3aa: V254 = ADD 0x20 S2
0x3ad: V255 = 0x1
0x3af: V256 = ADD 0x1 S1
0x3b1: V257 = 0x397
0x3b4: JUMP 0x397
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, S2, S1, V247]
Stack pops: 3
Stack additions: [V254, V256, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, V254, V256, V247]

================================

Block 0x3b5
[0x3b5:0x3b5]
---
Predecessors: [0x397]
Successors: [0x3b6]
---
0x3b5 JUMPDEST
---
0x3b5: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, S2, S1, V247]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, S2, S1, V247]

================================

Block 0x3b6
[0x3b6:0x3c2]
---
Predecessors: [0x307, 0x3b5]
Successors: [0x3c3]
---
0x3b6 JUMPDEST
0x3b7 POP
0x3b8 SWAP1
0x3b9 POP
0x3ba PUSH2 0x3e1
0x3bd SWAP2
0x3be SWAP1
0x3bf PUSH2 0x3c3
0x3c2 JUMP
---
0x3b6: JUMPDEST 
0x3ba: V258 = 0x3e1
0x3bf: V259 = 0x3c3
0x3c2: JUMP 0x3c3
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V244, S2, S1, S0]
Stack pops: 4
Stack additions: [0x3e1, S3, S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e1, V244, S1]

================================

Block 0x3c3
[0x3c3:0x3cb]
---
Predecessors: [0x3b6, 0x3cc]
Successors: [0x3cc, 0x3dd]
---
0x3c3 JUMPDEST
0x3c4 DUP1
0x3c5 DUP3
0x3c6 GT
0x3c7 ISZERO
0x3c8 PUSH2 0x3dd
0x3cb JUMPI
---
0x3c3: JUMPDEST 
0x3c6: V260 = GT V244 S0
0x3c7: V261 = ISZERO V260
0x3c8: V262 = 0x3dd
0x3cb: JUMPI 0x3dd V261
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e1, V244, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e1, V244, S0]

================================

Block 0x3cc
[0x3cc:0x3dc]
---
Predecessors: [0x3c3]
Successors: [0x3c3]
---
0x3cc PUSH1 0x0
0x3ce DUP2
0x3cf DUP2
0x3d0 POP
0x3d1 PUSH1 0x0
0x3d3 SWAP1
0x3d4 SSTORE
0x3d5 POP
0x3d6 PUSH1 0x1
0x3d8 ADD
0x3d9 PUSH2 0x3c3
0x3dc JUMP
---
0x3cc: V263 = 0x0
0x3d1: V264 = 0x0
0x3d4: S[S0] = 0x0
0x3d6: V265 = 0x1
0x3d8: V266 = ADD 0x1 S0
0x3d9: V267 = 0x3c3
0x3dc: JUMP 0x3c3
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e1, V244, S0]
Stack pops: 1
Stack additions: [V266]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e1, V244, V266]

================================

Block 0x3dd
[0x3dd:0x3e0]
---
Predecessors: [0x3c3]
Successors: [0x3e1]
---
0x3dd JUMPDEST
0x3de POP
0x3df SWAP1
0x3e0 JUMP
---
0x3dd: JUMPDEST 
0x3e0: JUMP 0x3e1
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x3e1, V244, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V244]

================================

Block 0x3e1
[0x3e1:0x425]
---
Predecessors: [0x3dd]
Successors: [0x74b]
---
0x3e1 JUMPDEST
0x3e2 POP
0x3e3 POP
0x3e4 PUSH1 0x0
0x3e6 PUSH1 0x2
0x3e8 PUSH1 0x0
0x3ea POP
0x3eb DUP2
0x3ec SWAP1
0x3ed SSTORE
0x3ee POP
0x3ef CALLER
0x3f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x405 AND
0x406 PUSH1 0x0
0x408 CALLVALUE
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d SWAP1
0x40e POP
0x40f PUSH1 0x0
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 DUP4
0x416 SUB
0x417 DUP2
0x418 DUP6
0x419 DUP9
0x41a DUP9
0x41b CALL
0x41c SWAP4
0x41d POP
0x41e POP
0x41f POP
0x420 POP
0x421 POP
0x422 PUSH2 0x74b
0x425 JUMP
---
0x3e1: JUMPDEST 
0x3e4: V268 = 0x0
0x3e6: V269 = 0x2
0x3e8: V270 = 0x0
0x3ed: S[0x2] = 0x0
0x3ef: V271 = CALLER
0x3f0: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x405: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x406: V274 = 0x0
0x408: V275 = CALLVALUE
0x409: V276 = 0x40
0x40b: V277 = M[0x40]
0x40f: V278 = 0x0
0x411: V279 = 0x40
0x413: V280 = M[0x40]
0x416: V281 = SUB V277 V280
0x41b: V282 = CALL 0x0 V273 V275 V280 V281 V280 0x0
0x422: V283 = 0x74b
0x425: JUMP 0x74b
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V244]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x426
[0x426:0x429]
---
Predecessors: []
Successors: [0x4fb]
---
0x426 PUSH2 0x4fb
0x429 JUMP
---
0x426: V284 = 0x4fb
0x429: JUMP 0x4fb
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42a
[0x42a:0x433]
---
Predecessors: [0x2e4]
Successors: [0x434, 0x4fa]
---
0x42a JUMPDEST
0x42b PUSH1 0x0
0x42d CALLVALUE
0x42e EQ
0x42f ISZERO
0x430 PUSH2 0x4fa
0x433 JUMPI
---
0x42a: JUMPDEST 
0x42b: V285 = 0x0
0x42d: V286 = CALLVALUE
0x42e: V287 = EQ V286 0x0
0x42f: V288 = ISZERO V287
0x430: V289 = 0x4fa
0x433: JUMPI 0x4fa V288
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x434
[0x434:0x49a]
---
Predecessors: [0x42a]
Successors: [0x49b, 0x4bd]
---
0x434 PUSH1 0x40
0x436 PUSH1 0x40
0x438 MLOAD
0x439 SWAP1
0x43a DUP2
0x43b ADD
0x43c PUSH1 0x40
0x43e MSTORE
0x43f DUP1
0x440 PUSH1 0xe
0x442 DUP2
0x443 MSTORE
0x444 PUSH1 0x20
0x446 ADD
0x447 PUSH32 0x776167657220776173207a65726f000000000000000000000000000000000000
0x468 DUP2
0x469 MSTORE
0x46a PUSH1 0x20
0x46c ADD
0x46d POP
0x46e PUSH1 0x3
0x470 PUSH1 0x0
0x472 POP
0x473 SWAP1
0x474 DUP1
0x475 MLOAD
0x476 SWAP1
0x477 PUSH1 0x20
0x479 ADD
0x47a SWAP1
0x47b DUP3
0x47c DUP1
0x47d SLOAD
0x47e DUP3
0x47f DUP3
0x480 SSTORE
0x481 SWAP1
0x482 PUSH1 0x0
0x484 MSTORE
0x485 PUSH1 0x20
0x487 PUSH1 0x0
0x489 SHA3
0x48a SWAP1
0x48b PUSH1 0x1f
0x48d ADD
0x48e PUSH1 0x20
0x490 SWAP1
0x491 DIV
0x492 DUP2
0x493 ADD
0x494 SWAP3
0x495 DUP3
0x496 ISZERO
0x497 PUSH2 0x4bd
0x49a JUMPI
---
0x434: V290 = 0x40
0x436: V291 = 0x40
0x438: V292 = M[0x40]
0x43b: V293 = ADD V292 0x40
0x43c: V294 = 0x40
0x43e: M[0x40] = V293
0x440: V295 = 0xe
0x443: M[V292] = 0xe
0x444: V296 = 0x20
0x446: V297 = ADD 0x20 V292
0x447: V298 = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x469: M[V297] = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x46a: V299 = 0x20
0x46c: V300 = ADD 0x20 V297
0x46e: V301 = 0x3
0x470: V302 = 0x0
0x475: V303 = M[V292]
0x477: V304 = 0x20
0x479: V305 = ADD 0x20 V292
0x47d: V306 = S[0x3]
0x480: S[0x3] = V303
0x482: V307 = 0x0
0x484: M[0x0] = 0x3
0x485: V308 = 0x20
0x487: V309 = 0x0
0x489: V310 = SHA3 0x0 0x20
0x48b: V311 = 0x1f
0x48d: V312 = ADD 0x1f V306
0x48e: V313 = 0x20
0x491: V314 = DIV V312 0x20
0x493: V315 = ADD V310 V314
0x496: V316 = ISZERO V303
0x497: V317 = 0x4bd
0x49a: JUMPI 0x4bd V316
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V315, V303, V310, V305]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, V303, V310, V305]

================================

Block 0x49b
[0x49b:0x49d]
---
Predecessors: [0x434]
Successors: [0x49e]
---
0x49b SWAP2
0x49c DUP3
0x49d ADD
---
0x49d: V318 = ADD V305 V303
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, V303, V310, V305]
Stack pops: 3
Stack additions: [S0, S1, V318]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, V305, V310, V318]

================================

Block 0x49e
[0x49e:0x4a6]
---
Predecessors: [0x49b, 0x4a7]
Successors: [0x4a7, 0x4bc]
---
0x49e JUMPDEST
0x49f DUP3
0x4a0 DUP2
0x4a1 GT
0x4a2 ISZERO
0x4a3 PUSH2 0x4bc
0x4a6 JUMPI
---
0x49e: JUMPDEST 
0x4a1: V319 = GT V318 S2
0x4a2: V320 = ISZERO V319
0x4a3: V321 = 0x4bc
0x4a6: JUMPI 0x4bc V320
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, S2, S1, V318]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, S2, S1, V318]

================================

Block 0x4a7
[0x4a7:0x4bb]
---
Predecessors: [0x49e]
Successors: [0x49e]
---
0x4a7 DUP3
0x4a8 MLOAD
0x4a9 DUP3
0x4aa PUSH1 0x0
0x4ac POP
0x4ad SSTORE
0x4ae SWAP2
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 SWAP2
0x4b3 SWAP1
0x4b4 PUSH1 0x1
0x4b6 ADD
0x4b7 SWAP1
0x4b8 PUSH2 0x49e
0x4bb JUMP
---
0x4a8: V322 = M[S2]
0x4aa: V323 = 0x0
0x4ad: S[S1] = V322
0x4af: V324 = 0x20
0x4b1: V325 = ADD 0x20 S2
0x4b4: V326 = 0x1
0x4b6: V327 = ADD 0x1 S1
0x4b8: V328 = 0x49e
0x4bb: JUMP 0x49e
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, S2, S1, V318]
Stack pops: 3
Stack additions: [V325, V327, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, V325, V327, V318]

================================

Block 0x4bc
[0x4bc:0x4bc]
---
Predecessors: [0x49e]
Successors: [0x4bd]
---
0x4bc JUMPDEST
---
0x4bc: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, S2, S1, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, S2, S1, V318]

================================

Block 0x4bd
[0x4bd:0x4c9]
---
Predecessors: [0x434, 0x4bc]
Successors: [0x4ca]
---
0x4bd JUMPDEST
0x4be POP
0x4bf SWAP1
0x4c0 POP
0x4c1 PUSH2 0x4e8
0x4c4 SWAP2
0x4c5 SWAP1
0x4c6 PUSH2 0x4ca
0x4c9 JUMP
---
0x4bd: JUMPDEST 
0x4c1: V329 = 0x4e8
0x4c6: V330 = 0x4ca
0x4c9: JUMP 0x4ca
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V315, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4e8, S3, S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4e8, V315, S1]

================================

Block 0x4ca
[0x4ca:0x4d2]
---
Predecessors: [0x4bd, 0x4d3]
Successors: [0x4d3, 0x4e4]
---
0x4ca JUMPDEST
0x4cb DUP1
0x4cc DUP3
0x4cd GT
0x4ce ISZERO
0x4cf PUSH2 0x4e4
0x4d2 JUMPI
---
0x4ca: JUMPDEST 
0x4cd: V331 = GT V315 S0
0x4ce: V332 = ISZERO V331
0x4cf: V333 = 0x4e4
0x4d2: JUMPI 0x4e4 V332
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4e8, V315, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4e8, V315, S0]

================================

Block 0x4d3
[0x4d3:0x4e3]
---
Predecessors: [0x4ca]
Successors: [0x4ca]
---
0x4d3 PUSH1 0x0
0x4d5 DUP2
0x4d6 DUP2
0x4d7 POP
0x4d8 PUSH1 0x0
0x4da SWAP1
0x4db SSTORE
0x4dc POP
0x4dd PUSH1 0x1
0x4df ADD
0x4e0 PUSH2 0x4ca
0x4e3 JUMP
---
0x4d3: V334 = 0x0
0x4d8: V335 = 0x0
0x4db: S[S0] = 0x0
0x4dd: V336 = 0x1
0x4df: V337 = ADD 0x1 S0
0x4e0: V338 = 0x4ca
0x4e3: JUMP 0x4ca
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4e8, V315, S0]
Stack pops: 1
Stack additions: [V337]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4e8, V315, V337]

================================

Block 0x4e4
[0x4e4:0x4e7]
---
Predecessors: [0x4ca]
Successors: [0x4e8]
---
0x4e4 JUMPDEST
0x4e5 POP
0x4e6 SWAP1
0x4e7 JUMP
---
0x4e4: JUMPDEST 
0x4e7: JUMP 0x4e8
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, 0x4e8, V315, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, 0x0, 0x0, 0x3, V315]

================================

Block 0x4e8
[0x4e8:0x4f9]
---
Predecessors: [0x4e4]
Successors: [0x74b]
---
0x4e8 JUMPDEST
0x4e9 POP
0x4ea POP
0x4eb PUSH1 0x0
0x4ed PUSH1 0x2
0x4ef PUSH1 0x0
0x4f1 POP
0x4f2 DUP2
0x4f3 SWAP1
0x4f4 SSTORE
0x4f5 POP
0x4f6 PUSH2 0x74b
0x4f9 JUMP
---
0x4e8: JUMPDEST 
0x4eb: V339 = 0x0
0x4ed: V340 = 0x2
0x4ef: V341 = 0x0
0x4f4: S[0x2] = 0x0
0x4f6: V342 = 0x74b
0x4f9: JUMP 0x74b
---
Entry stack: [V8, 0xad, 0x0, 0x0, 0x3, V315]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x4fa
[0x4fa:0x4fa]
---
Predecessors: [0x42a]
Successors: [0x4fb]
---
0x4fa JUMPDEST
---
0x4fa: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x4fb
[0x4fb:0x4fb]
---
Predecessors: [0x426, 0x4fa]
Successors: [0x4fc]
---
0x4fb JUMPDEST
---
0x4fb: JUMPDEST 
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, 0x0, 0x0]

================================

Block 0x4fc
[0x4fc:0x521]
---
Predecessors: [0x2e0, 0x4fb]
Successors: [0x897]
---
0x4fc JUMPDEST
0x4fd CALLVALUE
0x4fe SWAP2
0x4ff POP
0x500 NUMBER
0x501 PUSH1 0x5
0x503 PUSH1 0x0
0x505 POP
0x506 DUP2
0x507 SWAP1
0x508 SSTORE
0x509 POP
0x50a NUMBER
0x50b BLOCKHASH
0x50c PUSH1 0x4
0x50e PUSH1 0x0
0x510 POP
0x511 DUP2
0x512 SWAP1
0x513 SSTORE
0x514 POP
0x515 PUSH2 0x522
0x518 PUSH1 0x4
0x51a PUSH1 0x0
0x51c POP
0x51d SLOAD
0x51e PUSH2 0x897
0x521 JUMP
---
0x4fc: JUMPDEST 
0x4fd: V343 = CALLVALUE
0x500: V344 = NUMBER
0x501: V345 = 0x5
0x503: V346 = 0x0
0x508: S[0x5] = V344
0x50a: V347 = NUMBER
0x50b: V348 = BLOCKHASH V347
0x50c: V349 = 0x4
0x50e: V350 = 0x0
0x513: S[0x4] = V348
0x515: V351 = 0x522
0x518: V352 = 0x4
0x51a: V353 = 0x0
0x51d: V354 = S[0x4]
0x51e: V355 = 0x897
0x521: JUMP 0x897
---
Entry stack: [V8, 0xad, 0x0, 0x0]
Stack pops: 2
Stack additions: [V343, S0, 0x522, V354]
Exit stack: [V8, 0xad, V343, 0x0, 0x522, V354]

================================

Block 0x522
[0x522:0x530]
---
Predecessors: [0x8ba]
Successors: [0x531, 0x62e]
---
0x522 JUMPDEST
0x523 SWAP1
0x524 POP
0x525 PUSH1 0x0
0x527 PUSH1 0x2
0x529 DUP3
0x52a MOD
0x52b EQ
0x52c ISZERO
0x52d PUSH2 0x62e
0x530 JUMPI
---
0x522: JUMPDEST 
0x525: V356 = 0x0
0x527: V357 = 0x2
0x52a: V358 = MOD V582 0x2
0x52b: V359 = EQ V358 0x0
0x52c: V360 = ISZERO V359
0x52d: V361 = 0x62e
0x530: JUMPI 0x62e V360
---
Entry stack: [V8, 0xad, V343, 0x0, V582]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, 0xad, V343, V582]

================================

Block 0x531
[0x531:0x5d5]
---
Predecessors: [0x522]
Successors: [0x5d6, 0x5f8]
---
0x531 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x552 DUP3
0x553 PUSH16 0xffffffffffffffffffffffffffffffff
0x564 AND
0x565 MUL
0x566 PUSH1 0x2
0x568 PUSH1 0x0
0x56a POP
0x56b DUP2
0x56c SWAP1
0x56d SSTORE
0x56e POP
0x56f PUSH1 0x40
0x571 PUSH1 0x40
0x573 MLOAD
0x574 SWAP1
0x575 DUP2
0x576 ADD
0x577 PUSH1 0x40
0x579 MSTORE
0x57a DUP1
0x57b PUSH1 0x4
0x57d DUP2
0x57e MSTORE
0x57f PUSH1 0x20
0x581 ADD
0x582 PUSH32 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 POP
0x5a9 PUSH1 0x3
0x5ab PUSH1 0x0
0x5ad POP
0x5ae SWAP1
0x5af DUP1
0x5b0 MLOAD
0x5b1 SWAP1
0x5b2 PUSH1 0x20
0x5b4 ADD
0x5b5 SWAP1
0x5b6 DUP3
0x5b7 DUP1
0x5b8 SLOAD
0x5b9 DUP3
0x5ba DUP3
0x5bb SSTORE
0x5bc SWAP1
0x5bd PUSH1 0x0
0x5bf MSTORE
0x5c0 PUSH1 0x20
0x5c2 PUSH1 0x0
0x5c4 SHA3
0x5c5 SWAP1
0x5c6 PUSH1 0x1f
0x5c8 ADD
0x5c9 PUSH1 0x20
0x5cb SWAP1
0x5cc DIV
0x5cd DUP2
0x5ce ADD
0x5cf SWAP3
0x5d0 DUP3
0x5d1 ISZERO
0x5d2 PUSH2 0x5f8
0x5d5 JUMPI
---
0x531: V362 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x553: V363 = 0xffffffffffffffffffffffffffffffff
0x564: V364 = AND 0xffffffffffffffffffffffffffffffff V343
0x565: V365 = MUL V364 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x566: V366 = 0x2
0x568: V367 = 0x0
0x56d: S[0x2] = V365
0x56f: V368 = 0x40
0x571: V369 = 0x40
0x573: V370 = M[0x40]
0x576: V371 = ADD V370 0x40
0x577: V372 = 0x40
0x579: M[0x40] = V371
0x57b: V373 = 0x4
0x57e: M[V370] = 0x4
0x57f: V374 = 0x20
0x581: V375 = ADD 0x20 V370
0x582: V376 = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x5a4: M[V375] = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x5a5: V377 = 0x20
0x5a7: V378 = ADD 0x20 V375
0x5a9: V379 = 0x3
0x5ab: V380 = 0x0
0x5b0: V381 = M[V370]
0x5b2: V382 = 0x20
0x5b4: V383 = ADD 0x20 V370
0x5b8: V384 = S[0x3]
0x5bb: S[0x3] = V381
0x5bd: V385 = 0x0
0x5bf: M[0x0] = 0x3
0x5c0: V386 = 0x20
0x5c2: V387 = 0x0
0x5c4: V388 = SHA3 0x0 0x20
0x5c6: V389 = 0x1f
0x5c8: V390 = ADD 0x1f V384
0x5c9: V391 = 0x20
0x5cc: V392 = DIV V390 0x20
0x5ce: V393 = ADD V388 V392
0x5d1: V394 = ISZERO V381
0x5d2: V395 = 0x5f8
0x5d5: JUMPI 0x5f8 V394
---
Entry stack: [V8, 0xad, V343, V582]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V393, V381, V388, V383]
Exit stack: [V8, 0xad, V343, V582, 0x3, V393, V381, V388, V383]

================================

Block 0x5d6
[0x5d6:0x5d8]
---
Predecessors: [0x531]
Successors: [0x5d9]
---
0x5d6 SWAP2
0x5d7 DUP3
0x5d8 ADD
---
0x5d8: V396 = ADD V383 V381
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V393, V381, V388, V383]
Stack pops: 3
Stack additions: [S0, S1, V396]
Exit stack: [V8, 0xad, V343, V582, 0x3, V393, V383, V388, V396]

================================

Block 0x5d9
[0x5d9:0x5e1]
---
Predecessors: [0x5d6, 0x5e2]
Successors: [0x5e2, 0x5f7]
---
0x5d9 JUMPDEST
0x5da DUP3
0x5db DUP2
0x5dc GT
0x5dd ISZERO
0x5de PUSH2 0x5f7
0x5e1 JUMPI
---
0x5d9: JUMPDEST 
0x5dc: V397 = GT V396 S2
0x5dd: V398 = ISZERO V397
0x5de: V399 = 0x5f7
0x5e1: JUMPI 0x5f7 V398
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V393, S2, S1, V396]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, V343, V582, 0x3, V393, S2, S1, V396]

================================

Block 0x5e2
[0x5e2:0x5f6]
---
Predecessors: [0x5d9]
Successors: [0x5d9]
---
0x5e2 DUP3
0x5e3 MLOAD
0x5e4 DUP3
0x5e5 PUSH1 0x0
0x5e7 POP
0x5e8 SSTORE
0x5e9 SWAP2
0x5ea PUSH1 0x20
0x5ec ADD
0x5ed SWAP2
0x5ee SWAP1
0x5ef PUSH1 0x1
0x5f1 ADD
0x5f2 SWAP1
0x5f3 PUSH2 0x5d9
0x5f6 JUMP
---
0x5e3: V400 = M[S2]
0x5e5: V401 = 0x0
0x5e8: S[S1] = V400
0x5ea: V402 = 0x20
0x5ec: V403 = ADD 0x20 S2
0x5ef: V404 = 0x1
0x5f1: V405 = ADD 0x1 S1
0x5f3: V406 = 0x5d9
0x5f6: JUMP 0x5d9
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V393, S2, S1, V396]
Stack pops: 3
Stack additions: [V403, V405, S0]
Exit stack: [V8, 0xad, V343, V582, 0x3, V393, V403, V405, V396]

================================

Block 0x5f7
[0x5f7:0x5f7]
---
Predecessors: [0x5d9]
Successors: [0x5f8]
---
0x5f7 JUMPDEST
---
0x5f7: JUMPDEST 
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V393, S2, S1, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, V343, V582, 0x3, V393, S2, S1, V396]

================================

Block 0x5f8
[0x5f8:0x604]
---
Predecessors: [0x531, 0x5f7]
Successors: [0x605]
---
0x5f8 JUMPDEST
0x5f9 POP
0x5fa SWAP1
0x5fb POP
0x5fc PUSH2 0x623
0x5ff SWAP2
0x600 SWAP1
0x601 PUSH2 0x605
0x604 JUMP
---
0x5f8: JUMPDEST 
0x5fc: V407 = 0x623
0x601: V408 = 0x605
0x604: JUMP 0x605
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V393, S2, S1, S0]
Stack pops: 4
Stack additions: [0x623, S3, S1]
Exit stack: [V8, 0xad, V343, V582, 0x3, 0x623, V393, S1]

================================

Block 0x605
[0x605:0x60d]
---
Predecessors: [0x5f8, 0x60e]
Successors: [0x60e, 0x61f]
---
0x605 JUMPDEST
0x606 DUP1
0x607 DUP3
0x608 GT
0x609 ISZERO
0x60a PUSH2 0x61f
0x60d JUMPI
---
0x605: JUMPDEST 
0x608: V409 = GT V393 S0
0x609: V410 = ISZERO V409
0x60a: V411 = 0x61f
0x60d: JUMPI 0x61f V410
---
Entry stack: [V8, 0xad, V343, V582, 0x3, 0x623, V393, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, V343, V582, 0x3, 0x623, V393, S0]

================================

Block 0x60e
[0x60e:0x61e]
---
Predecessors: [0x605]
Successors: [0x605]
---
0x60e PUSH1 0x0
0x610 DUP2
0x611 DUP2
0x612 POP
0x613 PUSH1 0x0
0x615 SWAP1
0x616 SSTORE
0x617 POP
0x618 PUSH1 0x1
0x61a ADD
0x61b PUSH2 0x605
0x61e JUMP
---
0x60e: V412 = 0x0
0x613: V413 = 0x0
0x616: S[S0] = 0x0
0x618: V414 = 0x1
0x61a: V415 = ADD 0x1 S0
0x61b: V416 = 0x605
0x61e: JUMP 0x605
---
Entry stack: [V8, 0xad, V343, V582, 0x3, 0x623, V393, S0]
Stack pops: 1
Stack additions: [V415]
Exit stack: [V8, 0xad, V343, V582, 0x3, 0x623, V393, V415]

================================

Block 0x61f
[0x61f:0x622]
---
Predecessors: [0x605]
Successors: [0x623]
---
0x61f JUMPDEST
0x620 POP
0x621 SWAP1
0x622 JUMP
---
0x61f: JUMPDEST 
0x622: JUMP 0x623
---
Entry stack: [V8, 0xad, V343, V582, 0x3, 0x623, V393, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, V343, V582, 0x3, V393]

================================

Block 0x623
[0x623:0x629]
---
Predecessors: [0x61f]
Successors: [0x74b]
---
0x623 JUMPDEST
0x624 POP
0x625 POP
0x626 PUSH2 0x74b
0x629 JUMP
---
0x623: JUMPDEST 
0x626: V417 = 0x74b
0x629: JUMP 0x74b
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V393]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xad, V343, V582]

================================

Block 0x62a
[0x62a:0x62d]
---
Predecessors: []
Successors: [0x74a]
---
0x62a PUSH2 0x74a
0x62d JUMP
---
0x62a: V418 = 0x74a
0x62d: JUMP 0x74a
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x62e
[0x62e:0x6b1]
---
Predecessors: [0x522]
Successors: [0x6b2, 0x6d4]
---
0x62e JUMPDEST
0x62f DUP2
0x630 PUSH16 0xffffffffffffffffffffffffffffffff
0x641 AND
0x642 PUSH1 0x2
0x644 PUSH1 0x0
0x646 POP
0x647 DUP2
0x648 SWAP1
0x649 SSTORE
0x64a POP
0x64b PUSH1 0x40
0x64d PUSH1 0x40
0x64f MLOAD
0x650 SWAP1
0x651 DUP2
0x652 ADD
0x653 PUSH1 0x40
0x655 MSTORE
0x656 DUP1
0x657 PUSH1 0x3
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x20
0x65d ADD
0x65e PUSH32 0x77696e0000000000000000000000000000000000000000000000000000000000
0x67f DUP2
0x680 MSTORE
0x681 PUSH1 0x20
0x683 ADD
0x684 POP
0x685 PUSH1 0x3
0x687 PUSH1 0x0
0x689 POP
0x68a SWAP1
0x68b DUP1
0x68c MLOAD
0x68d SWAP1
0x68e PUSH1 0x20
0x690 ADD
0x691 SWAP1
0x692 DUP3
0x693 DUP1
0x694 SLOAD
0x695 DUP3
0x696 DUP3
0x697 SSTORE
0x698 SWAP1
0x699 PUSH1 0x0
0x69b MSTORE
0x69c PUSH1 0x20
0x69e PUSH1 0x0
0x6a0 SHA3
0x6a1 SWAP1
0x6a2 PUSH1 0x1f
0x6a4 ADD
0x6a5 PUSH1 0x20
0x6a7 SWAP1
0x6a8 DIV
0x6a9 DUP2
0x6aa ADD
0x6ab SWAP3
0x6ac DUP3
0x6ad ISZERO
0x6ae PUSH2 0x6d4
0x6b1 JUMPI
---
0x62e: JUMPDEST 
0x630: V419 = 0xffffffffffffffffffffffffffffffff
0x641: V420 = AND 0xffffffffffffffffffffffffffffffff V343
0x642: V421 = 0x2
0x644: V422 = 0x0
0x649: S[0x2] = V420
0x64b: V423 = 0x40
0x64d: V424 = 0x40
0x64f: V425 = M[0x40]
0x652: V426 = ADD V425 0x40
0x653: V427 = 0x40
0x655: M[0x40] = V426
0x657: V428 = 0x3
0x65a: M[V425] = 0x3
0x65b: V429 = 0x20
0x65d: V430 = ADD 0x20 V425
0x65e: V431 = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x680: M[V430] = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x681: V432 = 0x20
0x683: V433 = ADD 0x20 V430
0x685: V434 = 0x3
0x687: V435 = 0x0
0x68c: V436 = M[V425]
0x68e: V437 = 0x20
0x690: V438 = ADD 0x20 V425
0x694: V439 = S[0x3]
0x697: S[0x3] = V436
0x699: V440 = 0x0
0x69b: M[0x0] = 0x3
0x69c: V441 = 0x20
0x69e: V442 = 0x0
0x6a0: V443 = SHA3 0x0 0x20
0x6a2: V444 = 0x1f
0x6a4: V445 = ADD 0x1f V439
0x6a5: V446 = 0x20
0x6a8: V447 = DIV V445 0x20
0x6aa: V448 = ADD V443 V447
0x6ad: V449 = ISZERO V436
0x6ae: V450 = 0x6d4
0x6b1: JUMPI 0x6d4 V449
---
Entry stack: [V8, 0xad, V343, V582]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V448, V436, V443, V438]
Exit stack: [V8, 0xad, V343, V582, 0x3, V448, V436, V443, V438]

================================

Block 0x6b2
[0x6b2:0x6b4]
---
Predecessors: [0x62e]
Successors: [0x6b5]
---
0x6b2 SWAP2
0x6b3 DUP3
0x6b4 ADD
---
0x6b4: V451 = ADD V438 V436
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V448, V436, V443, V438]
Stack pops: 3
Stack additions: [S0, S1, V451]
Exit stack: [V8, 0xad, V343, V582, 0x3, V448, V438, V443, V451]

================================

Block 0x6b5
[0x6b5:0x6bd]
---
Predecessors: [0x6b2, 0x6be]
Successors: [0x6be, 0x6d3]
---
0x6b5 JUMPDEST
0x6b6 DUP3
0x6b7 DUP2
0x6b8 GT
0x6b9 ISZERO
0x6ba PUSH2 0x6d3
0x6bd JUMPI
---
0x6b5: JUMPDEST 
0x6b8: V452 = GT V451 S2
0x6b9: V453 = ISZERO V452
0x6ba: V454 = 0x6d3
0x6bd: JUMPI 0x6d3 V453
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V448, S2, S1, V451]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xad, V343, V582, 0x3, V448, S2, S1, V451]

================================

Block 0x6be
[0x6be:0x6d2]
---
Predecessors: [0x6b5]
Successors: [0x6b5]
---
0x6be DUP3
0x6bf MLOAD
0x6c0 DUP3
0x6c1 PUSH1 0x0
0x6c3 POP
0x6c4 SSTORE
0x6c5 SWAP2
0x6c6 PUSH1 0x20
0x6c8 ADD
0x6c9 SWAP2
0x6ca SWAP1
0x6cb PUSH1 0x1
0x6cd ADD
0x6ce SWAP1
0x6cf PUSH2 0x6b5
0x6d2 JUMP
---
0x6bf: V455 = M[S2]
0x6c1: V456 = 0x0
0x6c4: S[S1] = V455
0x6c6: V457 = 0x20
0x6c8: V458 = ADD 0x20 S2
0x6cb: V459 = 0x1
0x6cd: V460 = ADD 0x1 S1
0x6cf: V461 = 0x6b5
0x6d2: JUMP 0x6b5
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V448, S2, S1, V451]
Stack pops: 3
Stack additions: [V458, V460, S0]
Exit stack: [V8, 0xad, V343, V582, 0x3, V448, V458, V460, V451]

================================

Block 0x6d3
[0x6d3:0x6d3]
---
Predecessors: [0x6b5]
Successors: [0x6d4]
---
0x6d3 JUMPDEST
---
0x6d3: JUMPDEST 
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V448, S2, S1, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, V343, V582, 0x3, V448, S2, S1, V451]

================================

Block 0x6d4
[0x6d4:0x6e0]
---
Predecessors: [0x62e, 0x6d3]
Successors: [0x6e1]
---
0x6d4 JUMPDEST
0x6d5 POP
0x6d6 SWAP1
0x6d7 POP
0x6d8 PUSH2 0x6ff
0x6db SWAP2
0x6dc SWAP1
0x6dd PUSH2 0x6e1
0x6e0 JUMP
---
0x6d4: JUMPDEST 
0x6d8: V462 = 0x6ff
0x6dd: V463 = 0x6e1
0x6e0: JUMP 0x6e1
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V448, S2, S1, S0]
Stack pops: 4
Stack additions: [0x6ff, S3, S1]
Exit stack: [V8, 0xad, V343, V582, 0x3, 0x6ff, V448, S1]

================================

Block 0x6e1
[0x6e1:0x6e9]
---
Predecessors: [0x6d4, 0x6ea]
Successors: [0x6ea, 0x6fb]
---
0x6e1 JUMPDEST
0x6e2 DUP1
0x6e3 DUP3
0x6e4 GT
0x6e5 ISZERO
0x6e6 PUSH2 0x6fb
0x6e9 JUMPI
---
0x6e1: JUMPDEST 
0x6e4: V464 = GT V448 S0
0x6e5: V465 = ISZERO V464
0x6e6: V466 = 0x6fb
0x6e9: JUMPI 0x6fb V465
---
Entry stack: [V8, 0xad, V343, V582, 0x3, 0x6ff, V448, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xad, V343, V582, 0x3, 0x6ff, V448, S0]

================================

Block 0x6ea
[0x6ea:0x6fa]
---
Predecessors: [0x6e1]
Successors: [0x6e1]
---
0x6ea PUSH1 0x0
0x6ec DUP2
0x6ed DUP2
0x6ee POP
0x6ef PUSH1 0x0
0x6f1 SWAP1
0x6f2 SSTORE
0x6f3 POP
0x6f4 PUSH1 0x1
0x6f6 ADD
0x6f7 PUSH2 0x6e1
0x6fa JUMP
---
0x6ea: V467 = 0x0
0x6ef: V468 = 0x0
0x6f2: S[S0] = 0x0
0x6f4: V469 = 0x1
0x6f6: V470 = ADD 0x1 S0
0x6f7: V471 = 0x6e1
0x6fa: JUMP 0x6e1
---
Entry stack: [V8, 0xad, V343, V582, 0x3, 0x6ff, V448, S0]
Stack pops: 1
Stack additions: [V470]
Exit stack: [V8, 0xad, V343, V582, 0x3, 0x6ff, V448, V470]

================================

Block 0x6fb
[0x6fb:0x6fe]
---
Predecessors: [0x6e1]
Successors: [0x6ff]
---
0x6fb JUMPDEST
0x6fc POP
0x6fd SWAP1
0x6fe JUMP
---
0x6fb: JUMPDEST 
0x6fe: JUMP 0x6ff
---
Entry stack: [V8, 0xad, V343, V582, 0x3, 0x6ff, V448, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xad, V343, V582, 0x3, V448]

================================

Block 0x6ff
[0x6ff:0x749]
---
Predecessors: [0x6fb]
Successors: [0x74a]
---
0x6ff JUMPDEST
0x700 POP
0x701 POP
0x702 CALLER
0x703 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x718 AND
0x719 PUSH1 0x0
0x71b PUSH1 0x2
0x71d DUP5
0x71e MUL
0x71f PUSH16 0xffffffffffffffffffffffffffffffff
0x730 AND
0x731 PUSH1 0x40
0x733 MLOAD
0x734 DUP1
0x735 SWAP1
0x736 POP
0x737 PUSH1 0x0
0x739 PUSH1 0x40
0x73b MLOAD
0x73c DUP1
0x73d DUP4
0x73e SUB
0x73f DUP2
0x740 DUP6
0x741 DUP9
0x742 DUP9
0x743 CALL
0x744 SWAP4
0x745 POP
0x746 POP
0x747 POP
0x748 POP
0x749 POP
---
0x6ff: JUMPDEST 
0x702: V472 = CALLER
0x703: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x718: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x719: V475 = 0x0
0x71b: V476 = 0x2
0x71e: V477 = MUL V343 0x2
0x71f: V478 = 0xffffffffffffffffffffffffffffffff
0x730: V479 = AND 0xffffffffffffffffffffffffffffffff V477
0x731: V480 = 0x40
0x733: V481 = M[0x40]
0x737: V482 = 0x0
0x739: V483 = 0x40
0x73b: V484 = M[0x40]
0x73e: V485 = SUB V481 V484
0x743: V486 = CALL 0x0 V474 V479 V484 V485 V484 0x0
---
Entry stack: [V8, 0xad, V343, V582, 0x3, V448]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V8, 0xad, V343, V582]

================================

Block 0x74a
[0x74a:0x74a]
---
Predecessors: [0x62a, 0x6ff]
Successors: [0x74b]
---
0x74a JUMPDEST
---
0x74a: JUMPDEST 
---
Entry stack: [V8, 0xad, V343, V582]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xad, V343, V582]

================================

Block 0x74b
[0x74b:0x74e]
---
Predecessors: [0x29b, 0x3e1, 0x4e8, 0x623, 0x74a]
Successors: [0xad]
---
0x74b JUMPDEST
0x74c POP
0x74d POP
0x74e JUMP
---
0x74b: JUMPDEST 
0x74e: JUMP 0xad
---
Entry stack: [V8, 0xad, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Block 0x74f
[0x74f:0x75d]
---
Predecessors: [0xaf]
Successors: [0x75e]
---
0x74f JUMPDEST
0x750 PUSH1 0x0
0x752 PUSH1 0x5
0x754 PUSH1 0x0
0x756 POP
0x757 SLOAD
0x758 SWAP1
0x759 POP
0x75a PUSH2 0x75e
0x75d JUMP
---
0x74f: JUMPDEST 
0x750: V487 = 0x0
0x752: V488 = 0x5
0x754: V489 = 0x0
0x757: V490 = S[0x5]
0x75a: V491 = 0x75e
0x75d: JUMP 0x75e
---
Entry stack: [V8, 0xba]
Stack pops: 0
Stack additions: [V490]
Exit stack: [V8, 0xba, V490]

================================

Block 0x75e
[0x75e:0x760]
---
Predecessors: [0x74f]
Successors: [0xba]
---
0x75e JUMPDEST
0x75f SWAP1
0x760 JUMP
---
0x75e: JUMPDEST 
0x760: JUMP 0xba
---
Entry stack: [V8, 0xba, V490]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V490]

================================

Block 0x761
[0x761:0x76f]
---
Predecessors: [0xfe]
Successors: [0x770]
---
0x761 JUMPDEST
0x762 PUSH1 0x0
0x764 PUSH1 0x4
0x766 PUSH1 0x0
0x768 POP
0x769 SLOAD
0x76a SWAP1
0x76b POP
0x76c PUSH2 0x770
0x76f JUMP
---
0x761: JUMPDEST 
0x762: V492 = 0x0
0x764: V493 = 0x4
0x766: V494 = 0x0
0x769: V495 = S[0x4]
0x76c: V496 = 0x770
0x76f: JUMP 0x770
---
Entry stack: [V8, 0x109]
Stack pops: 0
Stack additions: [V495]
Exit stack: [V8, 0x109, V495]

================================

Block 0x770
[0x770:0x772]
---
Predecessors: [0x761]
Successors: [0x109]
---
0x770 JUMPDEST
0x771 SWAP1
0x772 JUMP
---
0x770: JUMPDEST 
0x772: JUMP 0x109
---
Entry stack: [V8, 0x109, V495]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V495]

================================

Block 0x773
[0x773:0x7b7]
---
Predecessors: [0x11f]
Successors: [0x7b8, 0x7e2]
---
0x773 JUMPDEST
0x774 PUSH1 0x20
0x776 PUSH1 0x40
0x778 MLOAD
0x779 SWAP1
0x77a DUP2
0x77b ADD
0x77c PUSH1 0x40
0x77e MSTORE
0x77f DUP1
0x780 PUSH1 0x0
0x782 DUP2
0x783 MSTORE
0x784 PUSH1 0x20
0x786 ADD
0x787 POP
0x788 PUSH1 0x3
0x78a PUSH1 0x0
0x78c POP
0x78d DUP1
0x78e SLOAD
0x78f DUP1
0x790 PUSH1 0x1f
0x792 ADD
0x793 PUSH1 0x20
0x795 DUP1
0x796 SWAP2
0x797 DIV
0x798 MUL
0x799 PUSH1 0x20
0x79b ADD
0x79c PUSH1 0x40
0x79e MLOAD
0x79f SWAP1
0x7a0 DUP2
0x7a1 ADD
0x7a2 PUSH1 0x40
0x7a4 MSTORE
0x7a5 DUP1
0x7a6 SWAP3
0x7a7 SWAP2
0x7a8 SWAP1
0x7a9 DUP2
0x7aa DUP2
0x7ab MSTORE
0x7ac PUSH1 0x20
0x7ae ADD
0x7af DUP3
0x7b0 DUP1
0x7b1 SLOAD
0x7b2 DUP1
0x7b3 ISZERO
0x7b4 PUSH2 0x7e2
0x7b7 JUMPI
---
0x773: JUMPDEST 
0x774: V497 = 0x20
0x776: V498 = 0x40
0x778: V499 = M[0x40]
0x77b: V500 = ADD V499 0x20
0x77c: V501 = 0x40
0x77e: M[0x40] = V500
0x780: V502 = 0x0
0x783: M[V499] = 0x0
0x784: V503 = 0x20
0x786: V504 = ADD 0x20 V499
0x788: V505 = 0x3
0x78a: V506 = 0x0
0x78e: V507 = S[0x3]
0x790: V508 = 0x1f
0x792: V509 = ADD 0x1f V507
0x793: V510 = 0x20
0x797: V511 = DIV V509 0x20
0x798: V512 = MUL V511 0x20
0x799: V513 = 0x20
0x79b: V514 = ADD 0x20 V512
0x79c: V515 = 0x40
0x79e: V516 = M[0x40]
0x7a1: V517 = ADD V516 V514
0x7a2: V518 = 0x40
0x7a4: M[0x40] = V517
0x7ab: M[V516] = V507
0x7ac: V519 = 0x20
0x7ae: V520 = ADD 0x20 V516
0x7b1: V521 = S[0x3]
0x7b3: V522 = ISZERO V521
0x7b4: V523 = 0x7e2
0x7b7: JUMPI 0x7e2 V522
---
Entry stack: [V8, 0x12a]
Stack pops: 0
Stack additions: [V499, V516, 0x3, V507, V520, 0x3, V521]
Exit stack: [V8, 0x12a, V499, V516, 0x3, V507, V520, 0x3, V521]

================================

Block 0x7b8
[0x7b8:0x7c4]
---
Predecessors: [0x773]
Successors: [0x7c5]
---
0x7b8 DUP3
0x7b9 ADD
0x7ba SWAP2
0x7bb SWAP1
0x7bc PUSH1 0x0
0x7be MSTORE
0x7bf PUSH1 0x20
0x7c1 PUSH1 0x0
0x7c3 SHA3
0x7c4 SWAP1
---
0x7b9: V524 = ADD V520 V521
0x7bc: V525 = 0x0
0x7be: M[0x0] = 0x3
0x7bf: V526 = 0x20
0x7c1: V527 = 0x0
0x7c3: V528 = SHA3 0x0 0x20
---
Entry stack: [V8, 0x12a, V499, V516, 0x3, V507, V520, 0x3, V521]
Stack pops: 3
Stack additions: [V524, V528, S2]
Exit stack: [V8, 0x12a, V499, V516, 0x3, V507, V524, V528, V520]

================================

Block 0x7c5
[0x7c5:0x7d8]
---
Predecessors: [0x7b8, 0x7c5]
Successors: [0x7c5, 0x7d9]
---
0x7c5 JUMPDEST
0x7c6 DUP2
0x7c7 SLOAD
0x7c8 DUP2
0x7c9 MSTORE
0x7ca SWAP1
0x7cb PUSH1 0x1
0x7cd ADD
0x7ce SWAP1
0x7cf PUSH1 0x20
0x7d1 ADD
0x7d2 DUP1
0x7d3 DUP4
0x7d4 GT
0x7d5 PUSH2 0x7c5
0x7d8 JUMPI
---
0x7c5: JUMPDEST 
0x7c7: V529 = S[S1]
0x7c9: M[S0] = V529
0x7cb: V530 = 0x1
0x7cd: V531 = ADD 0x1 S1
0x7cf: V532 = 0x20
0x7d1: V533 = ADD 0x20 S0
0x7d4: V534 = GT V524 V533
0x7d5: V535 = 0x7c5
0x7d8: JUMPI 0x7c5 V534
---
Entry stack: [V8, 0x12a, V499, V516, 0x3, V507, V524, S1, S0]
Stack pops: 3
Stack additions: [S2, V531, V533]
Exit stack: [V8, 0x12a, V499, V516, 0x3, V507, V524, V531, V533]

================================

Block 0x7d9
[0x7d9:0x7e1]
---
Predecessors: [0x7c5]
Successors: [0x7e2]
---
0x7d9 DUP3
0x7da SWAP1
0x7db SUB
0x7dc PUSH1 0x1f
0x7de AND
0x7df DUP3
0x7e0 ADD
0x7e1 SWAP2
---
0x7db: V536 = SUB V533 V524
0x7dc: V537 = 0x1f
0x7de: V538 = AND 0x1f V536
0x7e0: V539 = ADD V524 V538
---
Entry stack: [V8, 0x12a, V499, V516, 0x3, V507, V524, V531, V533]
Stack pops: 3
Stack additions: [V539, S1, S2]
Exit stack: [V8, 0x12a, V499, V516, 0x3, V507, V539, V531, V524]

================================

Block 0x7e2
[0x7e2:0x7ed]
---
Predecessors: [0x773, 0x7d9]
Successors: [0x7ee]
---
0x7e2 JUMPDEST
0x7e3 POP
0x7e4 POP
0x7e5 POP
0x7e6 POP
0x7e7 POP
0x7e8 SWAP1
0x7e9 POP
0x7ea PUSH2 0x7ee
0x7ed JUMP
---
0x7e2: JUMPDEST 
0x7ea: V540 = 0x7ee
0x7ed: JUMP 0x7ee
---
Entry stack: [V8, 0x12a, V499, V516, 0x3, V507, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V8, 0x12a, V516]

================================

Block 0x7ee
[0x7ee:0x7f0]
---
Predecessors: [0x7e2]
Successors: [0x12a]
---
0x7ee JUMPDEST
0x7ef SWAP1
0x7f0 JUMP
---
0x7ee: JUMPDEST 
0x7f0: JUMP 0x12a
---
Entry stack: [V8, 0x12a, V516]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V516]

================================

Block 0x7f1
[0x7f1:0x7ff]
---
Predecessors: [0x81]
Successors: [0x800]
---
0x7f1 JUMPDEST
0x7f2 PUSH1 0x0
0x7f4 PUSH1 0x2
0x7f6 PUSH1 0x0
0x7f8 POP
0x7f9 SLOAD
0x7fa SWAP1
0x7fb POP
0x7fc PUSH2 0x800
0x7ff JUMP
---
0x7f1: JUMPDEST 
0x7f2: V541 = 0x0
0x7f4: V542 = 0x2
0x7f6: V543 = 0x0
0x7f9: V544 = S[0x2]
0x7fc: V545 = 0x800
0x7ff: JUMP 0x800
---
Entry stack: [V8, 0x8c]
Stack pops: 0
Stack additions: [V544]
Exit stack: [V8, 0x8c, V544]

================================

Block 0x800
[0x800:0x802]
---
Predecessors: [0x7f1]
Successors: [0x8c]
---
0x800 JUMPDEST
0x801 SWAP1
0x802 JUMP
---
0x800: JUMPDEST 
0x802: JUMP 0x8c
---
Entry stack: [V8, 0x8c, V544]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V544]

================================

Block 0x803
[0x803:0x859]
---
Predecessors: [0xd0]
Successors: [0x85a, 0x894]
---
0x803 JUMPDEST
0x804 PUSH1 0x0
0x806 PUSH1 0x0
0x808 SWAP1
0x809 SLOAD
0x80a SWAP1
0x80b PUSH2 0x100
0x80e EXP
0x80f SWAP1
0x810 DIV
0x811 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x826 AND
0x827 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83c AND
0x83d CALLER
0x83e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x853 AND
0x854 EQ
0x855 ISZERO
0x856 PUSH2 0x894
0x859 JUMPI
---
0x803: JUMPDEST 
0x804: V546 = 0x0
0x806: V547 = 0x0
0x809: V548 = S[0x0]
0x80b: V549 = 0x100
0x80e: V550 = EXP 0x100 0x0
0x810: V551 = DIV V548 0x1
0x811: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x826: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x827: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x83c: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x83d: V556 = CALLER
0x83e: V557 = 0xffffffffffffffffffffffffffffffffffffffff
0x853: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V556
0x854: V559 = EQ V558 V555
0x855: V560 = ISZERO V559
0x856: V561 = 0x894
0x859: JUMPI 0x894 V560
---
Entry stack: [V8, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xdb]

================================

Block 0x85a
[0x85a:0x893]
---
Predecessors: [0x803]
Successors: []
---
0x85a PUSH1 0x0
0x85c PUSH1 0x0
0x85e SWAP1
0x85f SLOAD
0x860 SWAP1
0x861 PUSH2 0x100
0x864 EXP
0x865 SWAP1
0x866 DIV
0x867 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87c AND
0x87d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x892 AND
0x893 SELFDESTRUCT
---
0x85a: V562 = 0x0
0x85c: V563 = 0x0
0x85f: V564 = S[0x0]
0x861: V565 = 0x100
0x864: V566 = EXP 0x100 0x0
0x866: V567 = DIV V564 0x1
0x867: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x87c: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x87d: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x892: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x893: SELFDESTRUCT V571
---
Entry stack: [V8, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xdb]

================================

Block 0x894
[0x894:0x894]
---
Predecessors: [0x803]
Successors: [0x895]
---
0x894 JUMPDEST
---
0x894: JUMPDEST 
---
Entry stack: [V8, 0xdb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xdb]

================================

Block 0x895
[0x895:0x896]
---
Predecessors: [0x894]
Successors: [0xdb]
---
0x895 JUMPDEST
0x896 JUMP
---
0x895: JUMPDEST 
0x896: JUMP 0xdb
---
Entry stack: [V8, 0xdb]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x897
[0x897:0x8b9]
---
Predecessors: [0x4fc]
Successors: [0x8ba]
---
0x897 JUMPDEST
0x898 PUSH1 0x0
0x89a DUP2
0x89b PUSH1 0x40
0x89d MLOAD
0x89e DUP1
0x89f DUP3
0x8a0 DUP2
0x8a1 MSTORE
0x8a2 PUSH1 0x20
0x8a4 ADD
0x8a5 SWAP2
0x8a6 POP
0x8a7 POP
0x8a8 PUSH1 0x40
0x8aa MLOAD
0x8ab DUP1
0x8ac SWAP2
0x8ad SUB
0x8ae SWAP1
0x8af SHA3
0x8b0 PUSH1 0x1
0x8b2 SWAP1
0x8b3 DIV
0x8b4 SWAP1
0x8b5 POP
0x8b6 PUSH2 0x8ba
0x8b9 JUMP
---
0x897: JUMPDEST 
0x898: V572 = 0x0
0x89b: V573 = 0x40
0x89d: V574 = M[0x40]
0x8a1: M[V574] = V354
0x8a2: V575 = 0x20
0x8a4: V576 = ADD 0x20 V574
0x8a8: V577 = 0x40
0x8aa: V578 = M[0x40]
0x8ad: V579 = SUB V576 V578
0x8af: V580 = SHA3 V578 V579
0x8b0: V581 = 0x1
0x8b3: V582 = DIV V580 0x1
0x8b6: V583 = 0x8ba
0x8b9: JUMP 0x8ba
---
Entry stack: [V8, 0xad, V343, 0x0, 0x522, V354]
Stack pops: 1
Stack additions: [S0, V582]
Exit stack: [V8, 0xad, V343, 0x0, 0x522, V354, V582]

================================

Block 0x8ba
[0x8ba:0x8be]
---
Predecessors: [0x897]
Successors: [0x522]
---
0x8ba JUMPDEST
0x8bb SWAP2
0x8bc SWAP1
0x8bd POP
0x8be JUMP
---
0x8ba: JUMPDEST 
0x8be: JUMP 0x522
---
Entry stack: [V8, 0xad, V343, 0x0, 0x522, V354, V582]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V8, 0xad, V343, 0x0, V582]

================================

Function 0:
Public function signature: 0xefafd01
Entry block: 0x81
Exit block: 0x8c
Body: 0x81, 0x8c, 0x7f1, 0x800

Function 1:
Public function signature: 0x25d8dcf2
Entry block: 0xa2
Exit block: 0xad
Body: 0xa2, 0xad, 0x1bc, 0x1e7, 0x24e, 0x251, 0x25a, 0x26f, 0x270, 0x27d, 0x286, 0x297, 0x29b, 0x2e4, 0x307, 0x394, 0x397, 0x3a0, 0x3b5, 0x3b6, 0x3c3, 0x3cc, 0x3dd, 0x3e1, 0x42a, 0x434, 0x49b, 0x49e, 0x4a7, 0x4bc, 0x4bd, 0x4ca, 0x4d3, 0x4e4, 0x4e8, 0x4fa, 0x4fb, 0x4fc, 0x522, 0x531, 0x5d6, 0x5d9, 0x5e2, 0x5f7, 0x5f8, 0x605, 0x60e, 0x61f, 0x623, 0x62e, 0x6b2, 0x6b5, 0x6be, 0x6d3, 0x6d4, 0x6e1, 0x6ea, 0x6fb, 0x6ff, 0x74a, 0x74b, 0x897, 0x8ba

Function 2:
Public function signature: 0x34dbe44d
Entry block: 0xaf
Exit block: 0xba
Body: 0xaf, 0xba, 0x74f, 0x75e

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xd0
Exit block: 0xdb
Body: 0xd0, 0xdb, 0x803, 0x85a, 0x894, 0x895

Function 4:
Public function signature: 0x5acce36b
Entry block: 0xdd
Exit block: 0xe8
Body: 0xdd, 0xe8, 0x198, 0x1b9

Function 5:
Public function signature: 0x94c3fa2e
Entry block: 0xfe
Exit block: 0x109
Body: 0xfe, 0x109, 0x761, 0x770

Function 6:
Public function signature: 0xcee6f93c
Entry block: 0x11f
Exit block: 0x18a
Body: 0x11f, 0x12a, 0x171, 0x18a, 0x773, 0x7b8, 0x7c5, 0x7d9, 0x7e2, 0x7ee

Function 7:
Public fallback function
Entry block: 0x7b
Exit block: 0x7f
Body: 0x7b, 0x7f

