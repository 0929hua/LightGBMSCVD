Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x339]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6d435421
0x3c EQ
0x3d PUSH2 0x339
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6d435421
0x3c: V13 = EQ 0x6d435421 V11
0x3d: V14 = 0x339
0x40: JUMPI 0x339 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x39c]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x39c
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x39c
0x4b: JUMPI 0x39c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x3f3]
---
0x4c DUP1
0x4d PUSH4 0x9335dcb7
0x52 EQ
0x53 PUSH2 0x3f3
0x56 JUMPI
---
0x4d: V18 = 0x9335dcb7
0x52: V19 = EQ 0x9335dcb7 V11
0x53: V20 = 0x3f3
0x56: JUMPI 0x3f3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x44a]
---
0x57 DUP1
0x58 PUSH4 0xb36b9ffd
0x5d EQ
0x5e PUSH2 0x44a
0x61 JUMPI
---
0x58: V21 = 0xb36b9ffd
0x5d: V22 = EQ 0xb36b9ffd V11
0x5e: V23 = 0x44a
0x61: JUMPI 0x44a V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0xad]
---
Predecessors: [0x0, 0x57]
Successors: [0xae, 0x187]
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 PUSH1 0x0
0x68 DUP1
0x69 PUSH1 0x0
0x6b CALLER
0x6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81 AND
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 DUP2
0x99 MSTORE
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e DUP2
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 PUSH1 0x0
0xa5 SHA3
0xa6 SLOAD
0xa7 EQ
0xa8 ISZERO
0xa9 ISZERO
0xaa PUSH2 0x187
0xad JUMPI
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: V25 = 0x0
0x69: V26 = 0x0
0x6b: V27 = CALLER
0x6c: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x81: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x82: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x99: M[0x0] = V31
0x9a: V32 = 0x20
0x9c: V33 = ADD 0x20 0x0
0x9f: M[0x20] = 0x0
0xa0: V34 = 0x20
0xa2: V35 = ADD 0x20 0x20
0xa3: V36 = 0x0
0xa5: V37 = SHA3 0x0 0x40
0xa6: V38 = S[V37]
0xa7: V39 = EQ V38 0x0
0xa8: V40 = ISZERO V39
0xa9: V41 = ISZERO V40
0xaa: V42 = 0x187
0xad: JUMPI 0x187 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x0, 0x0]

================================

Block 0xae
[0xae:0x13d]
---
Predecessors: [0x62]
Successors: [0x13e, 0x13f]
---
0xae PUSH2 0x170c
0xb1 PUSH1 0x1
0xb3 PUSH1 0x0
0xb5 CALLER
0xb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb AND
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP1
0xe8 DUP2
0xe9 MSTORE
0xea PUSH1 0x20
0xec ADD
0xed PUSH1 0x0
0xef SHA3
0xf0 SLOAD
0xf1 NUMBER
0xf2 SUB
0xf3 PUSH1 0x64
0xf5 PUSH1 0x2
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa CALLER
0xfb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110 AND
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 DUP2
0x128 MSTORE
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP1
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 PUSH1 0x0
0x134 SHA3
0x135 SLOAD
0x136 MUL
0x137 DUP2
0x138 ISZERO
0x139 ISZERO
0x13a PUSH2 0x13f
0x13d JUMPI
---
0xae: V43 = 0x170c
0xb1: V44 = 0x1
0xb3: V45 = 0x0
0xb5: V46 = CALLER
0xb6: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xcc: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xe3: M[0x0] = V50
0xe4: V51 = 0x20
0xe6: V52 = ADD 0x20 0x0
0xe9: M[0x20] = 0x1
0xea: V53 = 0x20
0xec: V54 = ADD 0x20 0x20
0xed: V55 = 0x0
0xef: V56 = SHA3 0x0 0x40
0xf0: V57 = S[V56]
0xf1: V58 = NUMBER
0xf2: V59 = SUB V58 V57
0xf3: V60 = 0x64
0xf5: V61 = 0x2
0xf7: V62 = 0x0
0xfa: V63 = CALLER
0xfb: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x110: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x111: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x128: M[0x0] = V67
0x129: V68 = 0x20
0x12b: V69 = ADD 0x20 0x0
0x12e: M[0x20] = 0x0
0x12f: V70 = 0x20
0x131: V71 = ADD 0x20 0x20
0x132: V72 = 0x0
0x134: V73 = SHA3 0x0 0x40
0x135: V74 = S[V73]
0x136: V75 = MUL V74 0x2
0x138: V76 = ISZERO 0x64
0x139: V77 = ISZERO 0x0
0x13a: V78 = 0x13f
0x13d: JUMPI 0x13f 0x1
---
Entry stack: [V11, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x170c, V59, 0x64, V75]
Exit stack: [V11, 0x0, 0x0, 0x170c, V59, 0x64, V75]

================================

Block 0x13e
[0x13e:0x13e]
---
Predecessors: [0xae]
Successors: []
---
0x13e INVALID
---
0x13e: INVALID 
---
Entry stack: [V11, 0x0, 0x0, 0x170c, V59, 0x64, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x170c, V59, 0x64, V75]

================================

Block 0x13f
[0x13f:0x148]
---
Predecessors: [0xae]
Successors: [0x149, 0x14a]
---
0x13f JUMPDEST
0x140 DIV
0x141 MUL
0x142 DUP2
0x143 ISZERO
0x144 ISZERO
0x145 PUSH2 0x14a
0x148 JUMPI
---
0x13f: JUMPDEST 
0x140: V79 = DIV V75 0x64
0x141: V80 = MUL V79 V59
0x143: V81 = ISZERO 0x170c
0x144: V82 = ISZERO 0x0
0x145: V83 = 0x14a
0x148: JUMPI 0x14a 0x1
---
Entry stack: [V11, 0x0, 0x0, 0x170c, V59, 0x64, V75]
Stack pops: 4
Stack additions: [S3, V80]
Exit stack: [V11, 0x0, 0x0, 0x170c, V80]

================================

Block 0x149
[0x149:0x149]
---
Predecessors: [0x13f]
Successors: []
---
0x149 INVALID
---
0x149: INVALID 
---
Entry stack: [V11, 0x0, 0x0, 0x170c, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0, 0x0, 0x170c, V80]

================================

Block 0x14a
[0x14a:0x186]
---
Predecessors: [0x13f]
Successors: [0x187]
---
0x14a JUMPDEST
0x14b DIV
0x14c SWAP2
0x14d POP
0x14e CALLER
0x14f SWAP1
0x150 POP
0x151 DUP1
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 PUSH2 0x8fc
0x16b DUP4
0x16c SWAP1
0x16d DUP2
0x16e ISZERO
0x16f MUL
0x170 SWAP1
0x171 PUSH1 0x40
0x173 MLOAD
0x174 PUSH1 0x0
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a DUP4
0x17b SUB
0x17c DUP2
0x17d DUP6
0x17e DUP9
0x17f DUP9
0x180 CALL
0x181 SWAP4
0x182 POP
0x183 POP
0x184 POP
0x185 POP
0x186 POP
---
0x14a: JUMPDEST 
0x14b: V84 = DIV V80 0x170c
0x14e: V85 = CALLER
0x152: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x168: V88 = 0x8fc
0x16e: V89 = ISZERO V84
0x16f: V90 = MUL V89 0x8fc
0x171: V91 = 0x40
0x173: V92 = M[0x40]
0x174: V93 = 0x0
0x176: V94 = 0x40
0x178: V95 = M[0x40]
0x17b: V96 = SUB V92 V95
0x180: V97 = CALL V90 V87 V84 V95 V96 V95 0x0
---
Entry stack: [V11, 0x0, 0x0, 0x170c, V80]
Stack pops: 4
Stack additions: [V84, V85]
Exit stack: [V11, V84, V85]

================================

Block 0x187
[0x187:0x26b]
---
Predecessors: [0x62, 0x14a]
Successors: [0x4a1]
---
0x187 JUMPDEST
0x188 NUMBER
0x189 PUSH1 0x1
0x18b PUSH1 0x0
0x18d CALLER
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b9 AND
0x1ba DUP2
0x1bb MSTORE
0x1bc PUSH1 0x20
0x1be ADD
0x1bf SWAP1
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 PUSH1 0x0
0x1c7 SHA3
0x1c8 DUP2
0x1c9 SWAP1
0x1ca SSTORE
0x1cb POP
0x1cc CALLVALUE
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 CALLER
0x1d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e6 AND
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x20
0x201 ADD
0x202 SWAP1
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 PUSH1 0x0
0x20a SHA3
0x20b PUSH1 0x0
0x20d DUP3
0x20e DUP3
0x20f SLOAD
0x210 ADD
0x211 SWAP3
0x212 POP
0x213 POP
0x214 DUP2
0x215 SWAP1
0x216 SSTORE
0x217 POP
0x218 PUSH1 0x2
0x21a PUSH1 0x0
0x21c SWAP1
0x21d SLOAD
0x21e SWAP1
0x21f PUSH2 0x100
0x222 EXP
0x223 SWAP1
0x224 DIV
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a AND
0x23b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x250 AND
0x251 PUSH2 0x8fc
0x254 PUSH2 0x27a
0x257 PUSH1 0x64
0x259 PUSH2 0x26c
0x25c PUSH1 0x3
0x25e CALLVALUE
0x25f PUSH2 0x4a1
0x262 SWAP1
0x263 SWAP2
0x264 SWAP1
0x265 PUSH4 0xffffffff
0x26a AND
0x26b JUMP
---
0x187: JUMPDEST 
0x188: V98 = NUMBER
0x189: V99 = 0x1
0x18b: V100 = 0x0
0x18d: V101 = CALLER
0x18e: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1a4: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1bb: M[0x0] = V105
0x1bc: V106 = 0x20
0x1be: V107 = ADD 0x20 0x0
0x1c1: M[0x20] = 0x1
0x1c2: V108 = 0x20
0x1c4: V109 = ADD 0x20 0x20
0x1c5: V110 = 0x0
0x1c7: V111 = SHA3 0x0 0x40
0x1ca: S[V111] = V98
0x1cc: V112 = CALLVALUE
0x1cd: V113 = 0x0
0x1d0: V114 = CALLER
0x1d1: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1e7: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1fe: M[0x0] = V118
0x1ff: V119 = 0x20
0x201: V120 = ADD 0x20 0x0
0x204: M[0x20] = 0x0
0x205: V121 = 0x20
0x207: V122 = ADD 0x20 0x20
0x208: V123 = 0x0
0x20a: V124 = SHA3 0x0 0x40
0x20b: V125 = 0x0
0x20f: V126 = S[V124]
0x210: V127 = ADD V126 V112
0x216: S[V124] = V127
0x218: V128 = 0x2
0x21a: V129 = 0x0
0x21d: V130 = S[0x2]
0x21f: V131 = 0x100
0x222: V132 = EXP 0x100 0x0
0x224: V133 = DIV V130 0x1
0x225: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x23b: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x250: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x251: V138 = 0x8fc
0x254: V139 = 0x27a
0x257: V140 = 0x64
0x259: V141 = 0x26c
0x25c: V142 = 0x3
0x25e: V143 = CALLVALUE
0x25f: V144 = 0x4a1
0x265: V145 = 0xffffffff
0x26a: V146 = AND 0xffffffff 0x4a1
0x26b: JUMP 0x4a1
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: [V137, 0x8fc, 0x27a, 0x64, 0x26c, V143, 0x3]
Exit stack: [V11, S1, S0, V137, 0x8fc, 0x27a, 0x64, 0x26c, V143, 0x3]

================================

Block 0x26c
[0x26c:0x279]
---
Predecessors: [0x4d5]
Successors: [0x4dc]
---
0x26c JUMPDEST
0x26d PUSH2 0x4dc
0x270 SWAP1
0x271 SWAP2
0x272 SWAP1
0x273 PUSH4 0xffffffff
0x278 AND
0x279 JUMP
---
0x26c: JUMPDEST 
0x26d: V147 = 0x4dc
0x273: V148 = 0xffffffff
0x278: V149 = AND 0xffffffff 0x4dc
0x279: JUMP 0x4dc
---
Entry stack: [V11, S6, S5, S4, S3, S2, {0x64, 0x8fc}, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, S6, S5, S4, S3, S2, S0, {0x64, 0x8fc}]

================================

Block 0x27a
[0x27a:0x29b]
---
Predecessors: [0x4ea]
Successors: [0x29c, 0x2a5]
---
0x27a JUMPDEST
0x27b SWAP1
0x27c DUP2
0x27d ISZERO
0x27e MUL
0x27f SWAP1
0x280 PUSH1 0x40
0x282 MLOAD
0x283 PUSH1 0x0
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 DUP4
0x28a SUB
0x28b DUP2
0x28c DUP6
0x28d DUP9
0x28e DUP9
0x28f CALL
0x290 SWAP4
0x291 POP
0x292 POP
0x293 POP
0x294 POP
0x295 ISZERO
0x296 DUP1
0x297 ISZERO
0x298 PUSH2 0x2a5
0x29b JUMPI
---
0x27a: JUMPDEST 
0x27d: V150 = ISZERO V295
0x27e: V151 = MUL V150 S1
0x280: V152 = 0x40
0x282: V153 = M[0x40]
0x283: V154 = 0x0
0x285: V155 = 0x40
0x287: V156 = M[0x40]
0x28a: V157 = SUB V153 V156
0x28f: V158 = CALL V151 S2 V295 V156 V157 V156 0x0
0x295: V159 = ISZERO V158
0x297: V160 = ISZERO V159
0x298: V161 = 0x2a5
0x29b: JUMPI 0x2a5 V160
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V295]
Stack pops: 3
Stack additions: [V159]
Exit stack: [V11, S6, S5, S4, S3, V159]

================================

Block 0x29c
[0x29c:0x2a4]
---
Predecessors: [0x27a]
Successors: []
---
0x29c RETURNDATASIZE
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 RETURNDATACOPY
0x2a1 RETURNDATASIZE
0x2a2 PUSH1 0x0
0x2a4 REVERT
---
0x29c: V162 = RETURNDATASIZE
0x29d: V163 = 0x0
0x2a0: RETURNDATACOPY 0x0 0x0 V162
0x2a1: V164 = RETURNDATASIZE
0x2a2: V165 = 0x0
0x2a4: REVERT 0x0 V164
---
Entry stack: [V11, S4, S3, S2, S1, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, V159]

================================

Block 0x2a5
[0x2a5:0x2fa]
---
Predecessors: [0x27a]
Successors: [0x4dc]
---
0x2a5 JUMPDEST
0x2a6 POP
0x2a7 PUSH1 0x5
0x2a9 PUSH1 0x0
0x2ab SWAP1
0x2ac SLOAD
0x2ad SWAP1
0x2ae PUSH2 0x100
0x2b1 EXP
0x2b2 SWAP1
0x2b3 DIV
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 PUSH2 0x8fc
0x2e3 PUSH2 0x309
0x2e6 PUSH1 0x2
0x2e8 PUSH2 0x2fb
0x2eb PUSH1 0x64
0x2ed CALLVALUE
0x2ee PUSH2 0x4dc
0x2f1 SWAP1
0x2f2 SWAP2
0x2f3 SWAP1
0x2f4 PUSH4 0xffffffff
0x2f9 AND
0x2fa JUMP
---
0x2a5: JUMPDEST 
0x2a7: V166 = 0x5
0x2a9: V167 = 0x0
0x2ac: V168 = S[0x5]
0x2ae: V169 = 0x100
0x2b1: V170 = EXP 0x100 0x0
0x2b3: V171 = DIV V168 0x1
0x2b4: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x2ca: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2e0: V176 = 0x8fc
0x2e3: V177 = 0x309
0x2e6: V178 = 0x2
0x2e8: V179 = 0x2fb
0x2eb: V180 = 0x64
0x2ed: V181 = CALLVALUE
0x2ee: V182 = 0x4dc
0x2f4: V183 = 0xffffffff
0x2f9: V184 = AND 0xffffffff 0x4dc
0x2fa: JUMP 0x4dc
---
Entry stack: [V11, S4, S3, S2, S1, V159]
Stack pops: 1
Stack additions: [V175, 0x8fc, 0x309, 0x2, 0x2fb, V181, 0x64]
Exit stack: [V11, S4, S3, S2, S1, V175, 0x8fc, 0x309, 0x2, 0x2fb, V181, 0x64]

================================

Block 0x2fb
[0x2fb:0x308]
---
Predecessors: [0x4ea]
Successors: [0x4a1]
---
0x2fb JUMPDEST
0x2fc PUSH2 0x4a1
0x2ff SWAP1
0x300 SWAP2
0x301 SWAP1
0x302 PUSH4 0xffffffff
0x307 AND
0x308 JUMP
---
0x2fb: JUMPDEST 
0x2fc: V185 = 0x4a1
0x302: V186 = 0xffffffff
0x307: V187 = AND 0xffffffff 0x4a1
0x308: JUMP 0x4a1
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V295]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, S6, S5, S4, S3, S2, V295, S1]

================================

Block 0x309
[0x309:0x32a]
---
Predecessors: [0x4d5]
Successors: [0x32b, 0x334]
---
0x309 JUMPDEST
0x30a SWAP1
0x30b DUP2
0x30c ISZERO
0x30d MUL
0x30e SWAP1
0x30f PUSH1 0x40
0x311 MLOAD
0x312 PUSH1 0x0
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 DUP4
0x319 SUB
0x31a DUP2
0x31b DUP6
0x31c DUP9
0x31d DUP9
0x31e CALL
0x31f SWAP4
0x320 POP
0x321 POP
0x322 POP
0x323 POP
0x324 ISZERO
0x325 DUP1
0x326 ISZERO
0x327 PUSH2 0x334
0x32a JUMPI
---
0x309: JUMPDEST 
0x30c: V188 = ISZERO S0
0x30d: V189 = MUL V188 {0x64, 0x8fc}
0x30f: V190 = 0x40
0x311: V191 = M[0x40]
0x312: V192 = 0x0
0x314: V193 = 0x40
0x316: V194 = M[0x40]
0x319: V195 = SUB V191 V194
0x31e: V196 = CALL V189 S2 S0 V194 V195 V194 0x0
0x324: V197 = ISZERO V196
0x326: V198 = ISZERO V197
0x327: V199 = 0x334
0x32a: JUMPI 0x334 V198
---
Entry stack: [V11, S6, S5, S4, S3, S2, {0x64, 0x8fc}, S0]
Stack pops: 3
Stack additions: [V197]
Exit stack: [V11, S6, S5, S4, S3, V197]

================================

Block 0x32b
[0x32b:0x333]
---
Predecessors: [0x309]
Successors: []
---
0x32b RETURNDATASIZE
0x32c PUSH1 0x0
0x32e DUP1
0x32f RETURNDATACOPY
0x330 RETURNDATASIZE
0x331 PUSH1 0x0
0x333 REVERT
---
0x32b: V200 = RETURNDATASIZE
0x32c: V201 = 0x0
0x32f: RETURNDATACOPY 0x0 0x0 V200
0x330: V202 = RETURNDATASIZE
0x331: V203 = 0x0
0x333: REVERT 0x0 V202
---
Entry stack: [V11, S4, S3, S2, S1, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, V197]

================================

Block 0x334
[0x334:0x338]
---
Predecessors: [0x309]
Successors: []
---
0x334 JUMPDEST
0x335 POP
0x336 POP
0x337 POP
0x338 STOP
---
0x334: JUMPDEST 
0x338: STOP 
---
Entry stack: [V11, S4, S3, S2, S1, V197]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S4, S3]

================================

Block 0x339
[0x339:0x340]
---
Predecessors: [0xd]
Successors: [0x341, 0x345]
---
0x339 JUMPDEST
0x33a CALLVALUE
0x33b DUP1
0x33c ISZERO
0x33d PUSH2 0x345
0x340 JUMPI
---
0x339: JUMPDEST 
0x33a: V204 = CALLVALUE
0x33c: V205 = ISZERO V204
0x33d: V206 = 0x345
0x340: JUMPI 0x345 V205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V204]
Exit stack: [V11, V204]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x339]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V207 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V11, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V204]

================================

Block 0x345
[0x345:0x399]
---
Predecessors: [0x339]
Successors: [0x4f7]
---
0x345 JUMPDEST
0x346 POP
0x347 PUSH2 0x39a
0x34a PUSH1 0x4
0x34c DUP1
0x34d CALLDATASIZE
0x34e SUB
0x34f DUP2
0x350 ADD
0x351 SWAP1
0x352 DUP1
0x353 DUP1
0x354 CALLDATALOAD
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b SWAP1
0x36c PUSH1 0x20
0x36e ADD
0x36f SWAP1
0x370 SWAP3
0x371 SWAP2
0x372 SWAP1
0x373 DUP1
0x374 CALLDATALOAD
0x375 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38a AND
0x38b SWAP1
0x38c PUSH1 0x20
0x38e ADD
0x38f SWAP1
0x390 SWAP3
0x391 SWAP2
0x392 SWAP1
0x393 POP
0x394 POP
0x395 POP
0x396 PUSH2 0x4f7
0x399 JUMP
---
0x345: JUMPDEST 
0x347: V208 = 0x39a
0x34a: V209 = 0x4
0x34d: V210 = CALLDATASIZE
0x34e: V211 = SUB V210 0x4
0x350: V212 = ADD 0x4 V211
0x354: V213 = CALLDATALOAD 0x4
0x355: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x36c: V216 = 0x20
0x36e: V217 = ADD 0x20 0x4
0x374: V218 = CALLDATALOAD 0x24
0x375: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x38c: V221 = 0x20
0x38e: V222 = ADD 0x20 0x24
0x396: V223 = 0x4f7
0x399: JUMP 0x4f7
---
Entry stack: [V11, V204]
Stack pops: 1
Stack additions: [0x39a, V215, V220]
Exit stack: [V11, 0x39a, V215, V220]

================================

Block 0x39a
[0x39a:0x39b]
---
Predecessors: [0x58f]
Successors: []
---
0x39a JUMPDEST
0x39b STOP
---
0x39a: JUMPDEST 
0x39b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x39c
[0x39c:0x3a3]
---
Predecessors: [0x41]
Successors: [0x3a4, 0x3a8]
---
0x39c JUMPDEST
0x39d CALLVALUE
0x39e DUP1
0x39f ISZERO
0x3a0 PUSH2 0x3a8
0x3a3 JUMPI
---
0x39c: JUMPDEST 
0x39d: V224 = CALLVALUE
0x39f: V225 = ISZERO V224
0x3a0: V226 = 0x3a8
0x3a3: JUMPI 0x3a8 V225
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V224]
Exit stack: [V11, V224]

================================

Block 0x3a4
[0x3a4:0x3a7]
---
Predecessors: [0x39c]
Successors: []
---
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 REVERT
---
0x3a4: V227 = 0x0
0x3a7: REVERT 0x0 0x0
---
Entry stack: [V11, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V224]

================================

Block 0x3a8
[0x3a8:0x3b0]
---
Predecessors: [0x39c]
Successors: [0x691]
---
0x3a8 JUMPDEST
0x3a9 POP
0x3aa PUSH2 0x3b1
0x3ad PUSH2 0x691
0x3b0 JUMP
---
0x3a8: JUMPDEST 
0x3aa: V228 = 0x3b1
0x3ad: V229 = 0x691
0x3b0: JUMP 0x691
---
Entry stack: [V11, V224]
Stack pops: 1
Stack additions: [0x3b1]
Exit stack: [V11, 0x3b1]

================================

Block 0x3b1
[0x3b1:0x3f2]
---
Predecessors: [0x691]
Successors: []
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x40
0x3b4 MLOAD
0x3b5 DUP1
0x3b6 DUP3
0x3b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cc AND
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 SWAP2
0x3e9 POP
0x3ea POP
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee DUP1
0x3ef SWAP2
0x3f0 SUB
0x3f1 SWAP1
0x3f2 RETURN
---
0x3b1: JUMPDEST 
0x3b2: V230 = 0x40
0x3b4: V231 = M[0x40]
0x3b7: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cc: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x3cd: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x3e4: M[V231] = V235
0x3e5: V236 = 0x20
0x3e7: V237 = ADD 0x20 V231
0x3eb: V238 = 0x40
0x3ed: V239 = M[0x40]
0x3f0: V240 = SUB V237 V239
0x3f2: RETURN V239 V240
---
Entry stack: [V11, 0x3b1, V376]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3b1]

================================

Block 0x3f3
[0x3f3:0x3fa]
---
Predecessors: [0x4c]
Successors: [0x3fb, 0x3ff]
---
0x3f3 JUMPDEST
0x3f4 CALLVALUE
0x3f5 DUP1
0x3f6 ISZERO
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3f3: JUMPDEST 
0x3f4: V241 = CALLVALUE
0x3f6: V242 = ISZERO V241
0x3f7: V243 = 0x3ff
0x3fa: JUMPI 0x3ff V242
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V241]
Exit stack: [V11, V241]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3f3]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V244 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V11, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V241]

================================

Block 0x3ff
[0x3ff:0x407]
---
Predecessors: [0x3f3]
Successors: [0x6b7]
---
0x3ff JUMPDEST
0x400 POP
0x401 PUSH2 0x408
0x404 PUSH2 0x6b7
0x407 JUMP
---
0x3ff: JUMPDEST 
0x401: V245 = 0x408
0x404: V246 = 0x6b7
0x407: JUMP 0x6b7
---
Entry stack: [V11, V241]
Stack pops: 1
Stack additions: [0x408]
Exit stack: [V11, 0x408]

================================

Block 0x408
[0x408:0x449]
---
Predecessors: [0x6b7]
Successors: []
---
0x408 JUMPDEST
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d DUP3
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a DUP2
0x43b MSTORE
0x43c PUSH1 0x20
0x43e ADD
0x43f SWAP2
0x440 POP
0x441 POP
0x442 PUSH1 0x40
0x444 MLOAD
0x445 DUP1
0x446 SWAP2
0x447 SUB
0x448 SWAP1
0x449 RETURN
---
0x408: JUMPDEST 
0x409: V247 = 0x40
0x40b: V248 = M[0x40]
0x40e: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x424: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x43b: M[V248] = V252
0x43c: V253 = 0x20
0x43e: V254 = ADD 0x20 V248
0x442: V255 = 0x40
0x444: V256 = M[0x40]
0x447: V257 = SUB V254 V256
0x449: RETURN V256 V257
---
Entry stack: [V11, 0x408, V384]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x408]

================================

Block 0x44a
[0x44a:0x451]
---
Predecessors: [0x57]
Successors: [0x452, 0x456]
---
0x44a JUMPDEST
0x44b CALLVALUE
0x44c DUP1
0x44d ISZERO
0x44e PUSH2 0x456
0x451 JUMPI
---
0x44a: JUMPDEST 
0x44b: V258 = CALLVALUE
0x44d: V259 = ISZERO V258
0x44e: V260 = 0x456
0x451: JUMPI 0x456 V259
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V258]
Exit stack: [V11, V258]

================================

Block 0x452
[0x452:0x455]
---
Predecessors: [0x44a]
Successors: []
---
0x452 PUSH1 0x0
0x454 DUP1
0x455 REVERT
---
0x452: V261 = 0x0
0x455: REVERT 0x0 0x0
---
Entry stack: [V11, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V258]

================================

Block 0x456
[0x456:0x45e]
---
Predecessors: [0x44a]
Successors: [0x6dd]
---
0x456 JUMPDEST
0x457 POP
0x458 PUSH2 0x45f
0x45b PUSH2 0x6dd
0x45e JUMP
---
0x456: JUMPDEST 
0x458: V262 = 0x45f
0x45b: V263 = 0x6dd
0x45e: JUMP 0x6dd
---
Entry stack: [V11, V258]
Stack pops: 1
Stack additions: [0x45f]
Exit stack: [V11, 0x45f]

================================

Block 0x45f
[0x45f:0x4a0]
---
Predecessors: [0x6dd]
Successors: []
---
0x45f JUMPDEST
0x460 PUSH1 0x40
0x462 MLOAD
0x463 DUP1
0x464 DUP3
0x465 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47a AND
0x47b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x490 AND
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x20
0x495 ADD
0x496 SWAP2
0x497 POP
0x498 POP
0x499 PUSH1 0x40
0x49b MLOAD
0x49c DUP1
0x49d SWAP2
0x49e SUB
0x49f SWAP1
0x4a0 RETURN
---
0x45f: JUMPDEST 
0x460: V264 = 0x40
0x462: V265 = M[0x40]
0x465: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x47b: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x490: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x492: M[V265] = V269
0x493: V270 = 0x20
0x495: V271 = ADD 0x20 V265
0x499: V272 = 0x40
0x49b: V273 = M[0x40]
0x49e: V274 = SUB V271 V273
0x4a0: RETURN V273 V274
---
Entry stack: [V11, 0x45f, V392]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x45f]

================================

Block 0x4a1
[0x4a1:0x4ad]
---
Predecessors: [0x187, 0x2fb]
Successors: [0x4ae, 0x4b6]
---
0x4a1 JUMPDEST
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 PUSH1 0x0
0x4a7 DUP5
0x4a8 EQ
0x4a9 ISZERO
0x4aa PUSH2 0x4b6
0x4ad JUMPI
---
0x4a1: JUMPDEST 
0x4a2: V275 = 0x0
0x4a5: V276 = 0x0
0x4a8: V277 = EQ S1 0x0
0x4a9: V278 = ISZERO V277
0x4aa: V279 = 0x4b6
0x4ad: JUMPI 0x4b6 V278
---
Entry stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0x4ae
[0x4ae:0x4b5]
---
Predecessors: [0x4a1]
Successors: [0x4d5]
---
0x4ae PUSH1 0x0
0x4b0 SWAP2
0x4b1 POP
0x4b2 PUSH2 0x4d5
0x4b5 JUMP
---
0x4ae: V280 = 0x0
0x4b2: V281 = 0x4d5
0x4b5: JUMP 0x4d5
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x4b6
[0x4b6:0x4c5]
---
Predecessors: [0x4a1]
Successors: [0x4c6, 0x4c7]
---
0x4b6 JUMPDEST
0x4b7 DUP3
0x4b8 DUP5
0x4b9 MUL
0x4ba SWAP1
0x4bb POP
0x4bc DUP3
0x4bd DUP5
0x4be DUP3
0x4bf DUP2
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 PUSH2 0x4c7
0x4c5 JUMPI
---
0x4b6: JUMPDEST 
0x4b9: V282 = MUL S3 S2
0x4c0: V283 = ISZERO S3
0x4c1: V284 = ISZERO V283
0x4c2: V285 = 0x4c7
0x4c5: JUMPI 0x4c7 V284
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V282, S2, S3, V282]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V282, S2, S3, V282]

================================

Block 0x4c6
[0x4c6:0x4c6]
---
Predecessors: [0x4b6]
Successors: []
---
0x4c6 INVALID
---
0x4c6: INVALID 
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V282, S2, S1, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V282, S2, S1, V282]

================================

Block 0x4c7
[0x4c7:0x4cf]
---
Predecessors: [0x4b6]
Successors: [0x4d0, 0x4d1]
---
0x4c7 JUMPDEST
0x4c8 DIV
0x4c9 EQ
0x4ca ISZERO
0x4cb ISZERO
0x4cc PUSH2 0x4d1
0x4cf JUMPI
---
0x4c7: JUMPDEST 
0x4c8: V286 = DIV V282 S1
0x4c9: V287 = EQ V286 S2
0x4ca: V288 = ISZERO V287
0x4cb: V289 = ISZERO V288
0x4cc: V290 = 0x4d1
0x4cf: JUMPI 0x4d1 V289
---
Entry stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V282, S2, S1, V282]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V282]

================================

Block 0x4d0
[0x4d0:0x4d0]
---
Predecessors: [0x4c7]
Successors: []
---
0x4d0 INVALID
---
0x4d0: INVALID 
---
Entry stack: [V11, S10, S9, S8, S7, S6, {0x64, 0x8fc}, {0x26c, 0x309}, S3, {0x2, 0x3}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, {0x64, 0x8fc}, {0x26c, 0x309}, S3, {0x2, 0x3}, 0x0, S0]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x4c7]
Successors: [0x4d5]
---
0x4d1 JUMPDEST
0x4d2 DUP1
0x4d3 SWAP2
0x4d4 POP
---
0x4d1: JUMPDEST 
---
Entry stack: [V11, S10, S9, S8, S7, S6, {0x64, 0x8fc}, {0x26c, 0x309}, S3, {0x2, 0x3}, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, S10, S9, S8, S7, S6, {0x64, 0x8fc}, {0x26c, 0x309}, S3, {0x2, 0x3}, S0, S0]

================================

Block 0x4d5
[0x4d5:0x4db]
---
Predecessors: [0x4ae, 0x4d1]
Successors: [0x26c, 0x309]
---
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 SWAP3
0x4d8 SWAP2
0x4d9 POP
0x4da POP
0x4db JUMP
---
0x4d5: JUMPDEST 
0x4db: JUMP {0x26c, 0x309}
---
Entry stack: [V11, S10, S9, S8, S7, S6, {0x64, 0x8fc}, {0x26c, 0x309}, S3, {0x2, 0x3}, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, S10, S9, S8, S7, S6, {0x64, 0x8fc}, S1]

================================

Block 0x4dc
[0x4dc:0x4e8]
---
Predecessors: [0x26c, 0x2a5]
Successors: [0x4e9, 0x4ea]
---
0x4dc JUMPDEST
0x4dd PUSH1 0x0
0x4df DUP1
0x4e0 DUP3
0x4e1 DUP5
0x4e2 DUP2
0x4e3 ISZERO
0x4e4 ISZERO
0x4e5 PUSH2 0x4ea
0x4e8 JUMPI
---
0x4dc: JUMPDEST 
0x4dd: V291 = 0x0
0x4e3: V292 = ISZERO {0x64, 0x8fc}
0x4e4: V293 = ISZERO V292
0x4e5: V294 = 0x4ea
0x4e8: JUMPI 0x4ea V293
---
Entry stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x64, 0x8fc}]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x64, 0x8fc}, 0x0, 0x0, {0x64, 0x8fc}, S1]

================================

Block 0x4e9
[0x4e9:0x4e9]
---
Predecessors: [0x4dc]
Successors: []
---
0x4e9 INVALID
---
0x4e9: INVALID 
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8fc}, 0x0, 0x0, {0x64, 0x8fc}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8fc}, 0x0, 0x0, {0x64, 0x8fc}, S0]

================================

Block 0x4ea
[0x4ea:0x4f6]
---
Predecessors: [0x4dc]
Successors: [0x27a, 0x2fb]
---
0x4ea JUMPDEST
0x4eb DIV
0x4ec SWAP1
0x4ed POP
0x4ee DUP1
0x4ef SWAP2
0x4f0 POP
0x4f1 POP
0x4f2 SWAP3
0x4f3 SWAP2
0x4f4 POP
0x4f5 POP
0x4f6 JUMP
---
0x4ea: JUMPDEST 
0x4eb: V295 = DIV S0 {0x64, 0x8fc}
0x4f6: JUMP S6
---
Entry stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x64, 0x8fc}, 0x0, 0x0, {0x64, 0x8fc}, S0]
Stack pops: 7
Stack additions: [V295]
Exit stack: [V11, S14, S13, S12, S11, S10, S9, S8, S7, V295]

================================

Block 0x4f7
[0x4f7:0x54e]
---
Predecessors: [0x345]
Successors: [0x54f, 0x553]
---
0x4f7 JUMPDEST
0x4f8 PUSH1 0x3
0x4fa PUSH1 0x0
0x4fc SWAP1
0x4fd SLOAD
0x4fe SWAP1
0x4ff PUSH2 0x100
0x502 EXP
0x503 SWAP1
0x504 DIV
0x505 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51a AND
0x51b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x530 AND
0x531 CALLER
0x532 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x547 AND
0x548 EQ
0x549 ISZERO
0x54a ISZERO
0x54b PUSH2 0x553
0x54e JUMPI
---
0x4f7: JUMPDEST 
0x4f8: V296 = 0x3
0x4fa: V297 = 0x0
0x4fd: V298 = S[0x3]
0x4ff: V299 = 0x100
0x502: V300 = EXP 0x100 0x0
0x504: V301 = DIV V298 0x1
0x505: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x51b: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x530: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x531: V306 = CALLER
0x532: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x547: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x548: V309 = EQ V308 V305
0x549: V310 = ISZERO V309
0x54a: V311 = ISZERO V310
0x54b: V312 = 0x553
0x54e: JUMPI 0x553 V311
---
Entry stack: [V11, 0x39a, V215, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x39a, V215, V220]

================================

Block 0x54f
[0x54f:0x552]
---
Predecessors: [0x4f7]
Successors: []
---
0x54f PUSH1 0x0
0x551 DUP1
0x552 REVERT
---
0x54f: V313 = 0x0
0x552: REVERT 0x0 0x0
---
Entry stack: [V11, 0x39a, V215, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x39a, V215, V220]

================================

Block 0x553
[0x553:0x58a]
---
Predecessors: [0x4f7]
Successors: [0x58b, 0x58f]
---
0x553 JUMPDEST
0x554 PUSH1 0x0
0x556 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56b AND
0x56c DUP3
0x56d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x582 AND
0x583 EQ
0x584 ISZERO
0x585 ISZERO
0x586 ISZERO
0x587 PUSH2 0x58f
0x58a JUMPI
---
0x553: JUMPDEST 
0x554: V314 = 0x0
0x556: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x56b: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x56d: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x582: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x583: V319 = EQ V318 0x0
0x584: V320 = ISZERO V319
0x585: V321 = ISZERO V320
0x586: V322 = ISZERO V321
0x587: V323 = 0x58f
0x58a: JUMPI 0x58f V322
---
Entry stack: [V11, 0x39a, V215, V220]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x39a, V215, V220]

================================

Block 0x58b
[0x58b:0x58e]
---
Predecessors: [0x553]
Successors: []
---
0x58b PUSH1 0x0
0x58d DUP1
0x58e REVERT
---
0x58b: V324 = 0x0
0x58e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x39a, V215, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x39a, V215, V220]

================================

Block 0x58f
[0x58f:0x690]
---
Predecessors: [0x553]
Successors: [0x39a]
---
0x58f JUMPDEST
0x590 DUP2
0x591 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a6 AND
0x5a7 PUSH1 0x3
0x5a9 PUSH1 0x0
0x5ab SWAP1
0x5ac SLOAD
0x5ad SWAP1
0x5ae PUSH2 0x100
0x5b1 EXP
0x5b2 SWAP1
0x5b3 DIV
0x5b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c9 AND
0x5ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5df AND
0x5e0 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x601 PUSH1 0x40
0x603 MLOAD
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP1
0x608 SWAP2
0x609 SUB
0x60a SWAP1
0x60b LOG3
0x60c DUP2
0x60d PUSH1 0x3
0x60f PUSH1 0x0
0x611 PUSH2 0x100
0x614 EXP
0x615 DUP2
0x616 SLOAD
0x617 DUP2
0x618 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62d MUL
0x62e NOT
0x62f AND
0x630 SWAP1
0x631 DUP4
0x632 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x647 AND
0x648 MUL
0x649 OR
0x64a SWAP1
0x64b SSTORE
0x64c POP
0x64d DUP1
0x64e PUSH1 0x2
0x650 PUSH1 0x0
0x652 PUSH2 0x100
0x655 EXP
0x656 DUP2
0x657 SLOAD
0x658 DUP2
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e MUL
0x66f NOT
0x670 AND
0x671 SWAP1
0x672 DUP4
0x673 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x688 AND
0x689 MUL
0x68a OR
0x68b SWAP1
0x68c SSTORE
0x68d POP
0x68e POP
0x68f POP
0x690 JUMP
---
0x58f: JUMPDEST 
0x591: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a6: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x5a7: V327 = 0x3
0x5a9: V328 = 0x0
0x5ac: V329 = S[0x3]
0x5ae: V330 = 0x100
0x5b1: V331 = EXP 0x100 0x0
0x5b3: V332 = DIV V329 0x1
0x5b4: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x5ca: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x5df: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x5e0: V337 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x601: V338 = 0x40
0x603: V339 = M[0x40]
0x604: V340 = 0x40
0x606: V341 = M[0x40]
0x609: V342 = SUB V339 V341
0x60b: LOG V341 V342 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V336 V326
0x60d: V343 = 0x3
0x60f: V344 = 0x0
0x611: V345 = 0x100
0x614: V346 = EXP 0x100 0x0
0x616: V347 = S[0x3]
0x618: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x62d: V349 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x62e: V350 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V351 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V347
0x632: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x647: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x648: V354 = MUL V353 0x1
0x649: V355 = OR V354 V351
0x64b: S[0x3] = V355
0x64e: V356 = 0x2
0x650: V357 = 0x0
0x652: V358 = 0x100
0x655: V359 = EXP 0x100 0x0
0x657: V360 = S[0x2]
0x659: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V362 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x66f: V363 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x670: V364 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V360
0x673: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x688: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x689: V367 = MUL V366 0x1
0x68a: V368 = OR V367 V364
0x68c: S[0x2] = V368
0x690: JUMP 0x39a
---
Entry stack: [V11, 0x39a, V215, V220]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x691
[0x691:0x6b6]
---
Predecessors: [0x3a8]
Successors: [0x3b1]
---
0x691 JUMPDEST
0x692 PUSH1 0x3
0x694 PUSH1 0x0
0x696 SWAP1
0x697 SLOAD
0x698 SWAP1
0x699 PUSH2 0x100
0x69c EXP
0x69d SWAP1
0x69e DIV
0x69f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b4 AND
0x6b5 DUP2
0x6b6 JUMP
---
0x691: JUMPDEST 
0x692: V369 = 0x3
0x694: V370 = 0x0
0x697: V371 = S[0x3]
0x699: V372 = 0x100
0x69c: V373 = EXP 0x100 0x0
0x69e: V374 = DIV V371 0x1
0x69f: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b4: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x6b6: JUMP 0x3b1
---
Entry stack: [V11, 0x3b1]
Stack pops: 1
Stack additions: [S0, V376]
Exit stack: [V11, 0x3b1, V376]

================================

Block 0x6b7
[0x6b7:0x6dc]
---
Predecessors: [0x3ff]
Successors: [0x408]
---
0x6b7 JUMPDEST
0x6b8 PUSH1 0x2
0x6ba PUSH1 0x0
0x6bc SWAP1
0x6bd SLOAD
0x6be SWAP1
0x6bf PUSH2 0x100
0x6c2 EXP
0x6c3 SWAP1
0x6c4 DIV
0x6c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6da AND
0x6db DUP2
0x6dc JUMP
---
0x6b7: JUMPDEST 
0x6b8: V377 = 0x2
0x6ba: V378 = 0x0
0x6bd: V379 = S[0x2]
0x6bf: V380 = 0x100
0x6c2: V381 = EXP 0x100 0x0
0x6c4: V382 = DIV V379 0x1
0x6c5: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x6da: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x6dc: JUMP 0x408
---
Entry stack: [V11, 0x408]
Stack pops: 1
Stack additions: [S0, V384]
Exit stack: [V11, 0x408, V384]

================================

Block 0x6dd
[0x6dd:0x702]
---
Predecessors: [0x456]
Successors: [0x45f]
---
0x6dd JUMPDEST
0x6de PUSH1 0x4
0x6e0 PUSH1 0x0
0x6e2 SWAP1
0x6e3 SLOAD
0x6e4 SWAP1
0x6e5 PUSH2 0x100
0x6e8 EXP
0x6e9 SWAP1
0x6ea DIV
0x6eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x700 AND
0x701 DUP2
0x702 JUMP
---
0x6dd: JUMPDEST 
0x6de: V385 = 0x4
0x6e0: V386 = 0x0
0x6e3: V387 = S[0x4]
0x6e5: V388 = 0x100
0x6e8: V389 = EXP 0x100 0x0
0x6ea: V390 = DIV V387 0x1
0x6eb: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x700: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x702: JUMP 0x45f
---
Entry stack: [V11, 0x45f]
Stack pops: 1
Stack additions: [S0, V392]
Exit stack: [V11, 0x45f, V392]

================================

Block 0x703
[0x703:0x73a]
---
Predecessors: []
Successors: []
---
0x703 STOP
0x704 LOG1
0x705 PUSH6 0x627a7a723058
0x70c SHA3
0x70d MULMOD
0x70e MISSING 0xc1
0x70f MISSING 0xaf
0x710 MISSING 0xb0
0x711 MISSING 0xac
0x712 MISSING 0x21
0x713 PUSH3 0x8cca44
0x717 MISSING 0xbd
0x718 MISSING 0xd0
0x719 DUP6
0x71a MISSING 0xc0
0x71b MISSING 0xb0
0x71c MISSING 0xf6
0x71d MISSING 0xbc
0x71e MISSING 0xb7
0x71f SDIV
0x720 MUL
0x721 MISSING 0xc3
0x722 GT
0x723 MISSING 0xc1
0x724 MISSING 0xcb
0x725 MISSING 0xa6
0x726 MISSING 0xb8
0x727 SIGNEXTEND
0x728 MISSING 0xb2
0x729 CALL
0x72a PUSH16 0xe8c90029
---
0x703: STOP 
0x704: LOG S0 S1 S2
0x705: V393 = 0x627a7a723058
0x70c: V394 = SHA3 0x627a7a723058 S3
0x70d: V395 = MULMOD V394 S4 S5
0x70e: MISSING 0xc1
0x70f: MISSING 0xaf
0x710: MISSING 0xb0
0x711: MISSING 0xac
0x712: MISSING 0x21
0x713: V396 = 0x8cca44
0x717: MISSING 0xbd
0x718: MISSING 0xd0
0x71a: MISSING 0xc0
0x71b: MISSING 0xb0
0x71c: MISSING 0xf6
0x71d: MISSING 0xbc
0x71e: MISSING 0xb7
0x71f: V397 = SDIV S0 S1
0x720: V398 = MUL V397 S2
0x721: MISSING 0xc3
0x722: V399 = GT S0 S1
0x723: MISSING 0xc1
0x724: MISSING 0xcb
0x725: MISSING 0xa6
0x726: MISSING 0xb8
0x727: V400 = SIGNEXTEND S0 S1
0x728: MISSING 0xb2
0x729: V401 = CALL S0 S1 S2 S3 S4 S5 S6
0x72a: V402 = 0xe8c90029
---
Entry stack: []
Stack pops: 0
Stack additions: [V395, 0x8cca44, S5, S0, S1, S2, S3, S4, S5, V398, V399, V400, 0xe8c90029, V401]
Exit stack: []

================================

Function 0:
Public function signature: 0x6d435421
Entry block: 0x339
Exit block: 0x39a
Body: 0x339, 0x341, 0x345, 0x39a, 0x4f7, 0x54f, 0x553, 0x58b, 0x58f

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x39c
Exit block: 0x3b1
Body: 0x39c, 0x3a4, 0x3a8, 0x3b1, 0x691

Function 2:
Public function signature: 0x9335dcb7
Entry block: 0x3f3
Exit block: 0x408
Body: 0x3f3, 0x3fb, 0x3ff, 0x408, 0x6b7

Function 3:
Public function signature: 0xb36b9ffd
Entry block: 0x44a
Exit block: 0x45f
Body: 0x44a, 0x452, 0x456, 0x45f, 0x6dd

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x29c
Body: 0x62, 0xae, 0x13e, 0x13f, 0x149, 0x14a, 0x187, 0x26c, 0x27a, 0x29c, 0x2a5, 0x2fb, 0x309, 0x32b, 0x334, 0x4a1, 0x4ae, 0x4b6, 0x4c6, 0x4c7, 0x4d0, 0x4d1, 0x4d5, 0x4dc, 0x4e9, 0x4ea

