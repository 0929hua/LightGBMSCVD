Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x65]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x85652d1f
0x2e EQ
0x2f PUSH2 0x65
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x85652d1f
0x2e: V7 = EQ 0x85652d1f V5
0x2f: V8 = 0x65
0x32: JUMPI 0x65 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xa7]
---
0x33 DUP1
0x34 PUSH4 0x8da5cb5b
0x39 EQ
0x3a PUSH2 0xa7
0x3d JUMPI
---
0x34: V9 = 0x8da5cb5b
0x39: V10 = EQ 0x8da5cb5b V5
0x3a: V11 = 0xa7
0x3d: JUMPI 0xa7 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0xe0]
---
0x3e DUP1
0x3f PUSH4 0x92f70af7
0x44 EQ
0x45 PUSH2 0xe0
0x48 JUMPI
---
0x3f: V12 = 0x92f70af7
0x44: V13 = EQ 0x92f70af7 V5
0x45: V14 = 0xe0
0x48: JUMPI 0xe0 V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x12b]
---
0x49 DUP1
0x4a PUSH4 0xd716e9ca
0x4f EQ
0x50 PUSH2 0x12b
0x53 JUMPI
---
0x4a: V15 = 0xd716e9ca
0x4f: V16 = EQ 0xd716e9ca V5
0x50: V17 = 0x12b
0x53: JUMPI 0x12b V16
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x14e]
---
0x54 DUP1
0x55 PUSH4 0xf2fde38b
0x5a EQ
0x5b PUSH2 0x14e
0x5e JUMPI
---
0x55: V18 = 0xf2fde38b
0x5a: V19 = EQ 0xf2fde38b V5
0x5b: V20 = 0x14e
0x5e: JUMPI 0x14e V19
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x54]
Successors: [0x63]
---
0x5f PUSH2 0x63
0x62 JUMP
---
0x5f: V21 = 0x63
0x62: JUMP 0x63
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x63
[0x63:0x64]
---
Predecessors: [0x5f]
Successors: []
---
0x63 JUMPDEST
0x64 STOP
---
0x63: JUMPDEST 
0x64: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x65
[0x65:0x7a]
---
Predecessors: [0x0]
Successors: [0x166]
---
0x65 JUMPDEST
0x66 PUSH2 0x7b
0x69 PUSH1 0x4
0x6b DUP1
0x6c DUP1
0x6d CALLDATALOAD
0x6e SWAP1
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP1
0x73 SWAP2
0x74 SWAP1
0x75 POP
0x76 POP
0x77 PUSH2 0x166
0x7a JUMP
---
0x65: JUMPDEST 
0x66: V22 = 0x7b
0x69: V23 = 0x4
0x6d: V24 = CALLDATALOAD 0x4
0x6f: V25 = 0x20
0x71: V26 = ADD 0x20 0x4
0x77: V27 = 0x166
0x7a: JUMP 0x166
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x7b, V24]
Exit stack: [V5, 0x7b, V24]

================================

Block 0x7b
[0x7b:0xa6]
---
Predecessors: [0x20d]
Successors: []
---
0x7b JUMPDEST
0x7c PUSH1 0x40
0x7e MLOAD
0x7f DUP1
0x80 DUP3
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 DUP2
0x98 MSTORE
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP2
0x9d POP
0x9e POP
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 DUP1
0xa3 SWAP2
0xa4 SUB
0xa5 SWAP1
0xa6 RETURN
---
0x7b: JUMPDEST 
0x7c: V28 = 0x40
0x7e: V29 = M[0x40]
0x81: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x98: M[V29] = V31
0x99: V32 = 0x20
0x9b: V33 = ADD 0x20 V29
0x9f: V34 = 0x40
0xa1: V35 = M[0x40]
0xa4: V36 = SUB V33 V35
0xa6: RETURN V35 V36
---
Entry stack: [V5, V121]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0xa7
[0xa7:0xb3]
---
Predecessors: [0x33]
Successors: [0x213]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xb4
0xab PUSH1 0x4
0xad DUP1
0xae POP
0xaf POP
0xb0 PUSH2 0x213
0xb3 JUMP
---
0xa7: JUMPDEST 
0xa8: V37 = 0xb4
0xab: V38 = 0x4
0xb0: V39 = 0x213
0xb3: JUMP 0x213
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V5, 0xb4]

================================

Block 0xb4
[0xb4:0xdf]
---
Predecessors: [0x213]
Successors: []
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 DUP1
0xb9 DUP3
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 DUP2
0xd1 MSTORE
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP2
0xd6 POP
0xd7 POP
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc SWAP2
0xdd SUB
0xde SWAP1
0xdf RETURN
---
0xb4: JUMPDEST 
0xb5: V40 = 0x40
0xb7: V41 = M[0x40]
0xba: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0xd1: M[V41] = V43
0xd2: V44 = 0x20
0xd4: V45 = ADD 0x20 V41
0xd8: V46 = 0x40
0xda: V47 = M[0x40]
0xdd: V48 = SUB V45 V47
0xdf: RETURN V47 V48
---
Entry stack: [V5, 0xb4, V130]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0xb4]

================================

Block 0xe0
[0xe0:0xfe]
---
Predecessors: [0x3e]
Successors: [0x239]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xff
0xe4 PUSH1 0x4
0xe6 DUP1
0xe7 DUP1
0xe8 CALLDATALOAD
0xe9 SWAP1
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee SWAP2
0xef SWAP1
0xf0 DUP1
0xf1 CALLDATALOAD
0xf2 SWAP1
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP1
0xf7 SWAP2
0xf8 SWAP1
0xf9 POP
0xfa POP
0xfb PUSH2 0x239
0xfe JUMP
---
0xe0: JUMPDEST 
0xe1: V49 = 0xff
0xe4: V50 = 0x4
0xe8: V51 = CALLDATALOAD 0x4
0xea: V52 = 0x20
0xec: V53 = ADD 0x20 0x4
0xf1: V54 = CALLDATALOAD 0x24
0xf3: V55 = 0x20
0xf5: V56 = ADD 0x20 0x24
0xfb: V57 = 0x239
0xfe: JUMP 0x239
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0xff, V51, V54]
Exit stack: [V5, 0xff, V51, V54]

================================

Block 0xff
[0xff:0x12a]
---
Predecessors: [0x397]
Successors: []
---
0xff JUMPDEST
0x100 PUSH1 0x40
0x102 MLOAD
0x103 DUP1
0x104 DUP3
0x105 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a AND
0x11b DUP2
0x11c MSTORE
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP2
0x121 POP
0x122 POP
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 SWAP2
0x128 SUB
0x129 SWAP1
0x12a RETURN
---
0xff: JUMPDEST 
0x100: V58 = 0x40
0x102: V59 = M[0x40]
0x105: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x11c: M[V59] = V61
0x11d: V62 = 0x20
0x11f: V63 = ADD 0x20 V59
0x123: V64 = 0x40
0x125: V65 = M[0x40]
0x128: V66 = SUB V63 V65
0x12a: RETURN V65 V66
---
Entry stack: [V5, V164]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x12b
[0x12b:0x137]
---
Predecessors: [0x49, 0x577]
Successors: [0x39e]
---
0x12b JUMPDEST
0x12c PUSH2 0x138
0x12f PUSH1 0x4
0x131 DUP1
0x132 POP
0x133 POP
0x134 PUSH2 0x39e
0x137 JUMP
---
0x12b: JUMPDEST 
0x12c: V67 = 0x138
0x12f: V68 = 0x4
0x134: V69 = 0x39e
0x137: JUMP 0x39e
---
Entry stack: [0xc0, S0]
Stack pops: 0
Stack additions: [0x138]
Exit stack: [0xc0, S0, 0x138]

================================

Block 0x138
[0x138:0x14d]
---
Predecessors: [0x409]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
---
0x138: JUMPDEST 
0x139: V70 = 0x40
0x13b: V71 = M[0x40]
0x13f: M[V71] = V251
0x140: V72 = 0x20
0x142: V73 = ADD 0x20 V71
0x146: V74 = 0x40
0x148: V75 = M[0x40]
0x14b: V76 = SUB V73 V75
0x14d: RETURN V75 V76
---
Entry stack: [0xc0, S1, V251]
Stack pops: 1
Stack additions: []
Exit stack: [0xc0, S1]

================================

Block 0x14e
[0x14e:0x163]
---
Predecessors: [0x54]
Successors: [0x40c]
---
0x14e JUMPDEST
0x14f PUSH2 0x164
0x152 PUSH1 0x4
0x154 DUP1
0x155 DUP1
0x156 CALLDATALOAD
0x157 SWAP1
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c SWAP2
0x15d SWAP1
0x15e POP
0x15f POP
0x160 PUSH2 0x40c
0x163 JUMP
---
0x14e: JUMPDEST 
0x14f: V77 = 0x164
0x152: V78 = 0x4
0x156: V79 = CALLDATALOAD 0x4
0x158: V80 = 0x20
0x15a: V81 = ADD 0x20 0x4
0x160: V82 = 0x40c
0x163: JUMP 0x40c
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x164, V79]
Exit stack: [V5, 0x164, V79]

================================

Block 0x164
[0x164:0x165]
---
Predecessors: [0x494]
Successors: []
---
0x164 JUMPDEST
0x165 STOP
---
0x164: JUMPDEST 
0x165: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x166
[0x166:0x1c1]
---
Predecessors: [0x65]
Successors: [0x1c2, 0x1c6]
---
0x166 JUMPDEST
0x167 PUSH1 0x0
0x169 PUSH1 0x0
0x16b PUSH1 0x0
0x16d PUSH1 0x0
0x16f SWAP1
0x170 SLOAD
0x171 SWAP1
0x172 PUSH2 0x100
0x175 EXP
0x176 SWAP1
0x177 DIV
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 CALLER
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb EQ
0x1bc ISZERO
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x166: JUMPDEST 
0x167: V83 = 0x0
0x169: V84 = 0x0
0x16b: V85 = 0x0
0x16d: V86 = 0x0
0x170: V87 = S[0x0]
0x172: V88 = 0x100
0x175: V89 = EXP 0x100 0x0
0x177: V90 = DIV V87 0x1
0x178: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x18e: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1a4: V95 = CALLER
0x1a5: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1bb: V98 = EQ V97 V94
0x1bc: V99 = ISZERO V98
0x1bd: V100 = ISZERO V99
0x1be: V101 = 0x1c6
0x1c1: JUMPI 0x1c6 V100
---
Entry stack: [V5, 0x7b, V24]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V5, 0x7b, V24, 0x0, 0x0]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x166]
Successors: []
---
0x1c2 PUSH2 0x2
0x1c5 JUMP
---
0x1c2: V102 = 0x2
0x1c5: THROW 
---
Entry stack: [V5, 0x7b, V24, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x7b, V24, 0x0, 0x0]

================================

Block 0x1c6
[0x1c6:0x20c]
---
Predecessors: [0x166]
Successors: [0x20d]
---
0x1c6 JUMPDEST
0x1c7 PUSH1 0x1
0x1c9 PUSH1 0x0
0x1cb POP
0x1cc PUSH1 0x0
0x1ce DUP5
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP1
0x1d5 DUP2
0x1d6 MSTORE
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da PUSH1 0x0
0x1dc SHA3
0x1dd PUSH1 0x0
0x1df POP
0x1e0 SWAP1
0x1e1 POP
0x1e2 DUP1
0x1e3 PUSH1 0x1
0x1e5 ADD
0x1e6 PUSH1 0x0
0x1e8 SWAP1
0x1e9 SLOAD
0x1ea SWAP1
0x1eb PUSH2 0x100
0x1ee EXP
0x1ef SWAP1
0x1f0 DIV
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 SWAP2
0x208 POP
0x209 PUSH2 0x20d
0x20c JUMP
---
0x1c6: JUMPDEST 
0x1c7: V103 = 0x1
0x1c9: V104 = 0x0
0x1cc: V105 = 0x0
0x1d0: M[0x0] = V24
0x1d1: V106 = 0x20
0x1d3: V107 = ADD 0x20 0x0
0x1d6: M[0x20] = 0x1
0x1d7: V108 = 0x20
0x1d9: V109 = ADD 0x20 0x20
0x1da: V110 = 0x0
0x1dc: V111 = SHA3 0x0 0x40
0x1dd: V112 = 0x0
0x1e3: V113 = 0x1
0x1e5: V114 = ADD 0x1 V111
0x1e6: V115 = 0x0
0x1e9: V116 = S[V114]
0x1eb: V117 = 0x100
0x1ee: V118 = EXP 0x100 0x0
0x1f0: V119 = DIV V116 0x1
0x1f1: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x209: V122 = 0x20d
0x20c: JUMP 0x20d
---
Entry stack: [V5, 0x7b, V24, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V121, V111]
Exit stack: [V5, 0x7b, V24, V121, V111]

================================

Block 0x20d
[0x20d:0x212]
---
Predecessors: [0x1c6]
Successors: [0x7b]
---
0x20d JUMPDEST
0x20e POP
0x20f SWAP2
0x210 SWAP1
0x211 POP
0x212 JUMP
---
0x20d: JUMPDEST 
0x212: JUMP 0x7b
---
Entry stack: [V5, 0x7b, V24, V121, V111]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V5, V121]

================================

Block 0x213
[0x213:0x238]
---
Predecessors: [0xa7]
Successors: [0xb4]
---
0x213 JUMPDEST
0x214 PUSH1 0x0
0x216 PUSH1 0x0
0x218 SWAP1
0x219 SLOAD
0x21a SWAP1
0x21b PUSH2 0x100
0x21e EXP
0x21f SWAP1
0x220 DIV
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 DUP2
0x238 JUMP
---
0x213: JUMPDEST 
0x214: V123 = 0x0
0x216: V124 = 0x0
0x219: V125 = S[0x0]
0x21b: V126 = 0x100
0x21e: V127 = EXP 0x100 0x0
0x220: V128 = DIV V125 0x1
0x221: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x238: JUMP 0xb4
---
Entry stack: [V5, 0xb4]
Stack pops: 1
Stack additions: [S0, V130]
Exit stack: [V5, 0xb4, V130]

================================

Block 0x239
[0x239:0x294]
---
Predecessors: [0xe0]
Successors: [0x295, 0x299]
---
0x239 JUMPDEST
0x23a PUSH1 0x0
0x23c PUSH1 0x0
0x23e PUSH1 0x0
0x240 PUSH1 0x0
0x242 SWAP1
0x243 SLOAD
0x244 SWAP1
0x245 PUSH2 0x100
0x248 EXP
0x249 SWAP1
0x24a DIV
0x24b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x260 AND
0x261 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x276 AND
0x277 CALLER
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e EQ
0x28f ISZERO
0x290 ISZERO
0x291 PUSH2 0x299
0x294 JUMPI
---
0x239: JUMPDEST 
0x23a: V131 = 0x0
0x23c: V132 = 0x0
0x23e: V133 = 0x0
0x240: V134 = 0x0
0x243: V135 = S[0x0]
0x245: V136 = 0x100
0x248: V137 = EXP 0x100 0x0
0x24a: V138 = DIV V135 0x1
0x24b: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x260: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x261: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x276: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x277: V143 = CALLER
0x278: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x28e: V146 = EQ V145 V142
0x28f: V147 = ISZERO V146
0x290: V148 = ISZERO V147
0x291: V149 = 0x299
0x294: JUMPI 0x299 V148
---
Entry stack: [V5, 0xff, V51, V54]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V5, 0xff, V51, V54, 0x0, 0x0]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x239]
Successors: []
---
0x295 PUSH2 0x2
0x298 JUMP
---
0x295: V150 = 0x2
0x298: THROW 
---
Entry stack: [V5, 0xff, V51, V54, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0xff, V51, V54, 0x0, 0x0]

================================

Block 0x299
[0x299:0x396]
---
Predecessors: [0x239]
Successors: [0x397]
---
0x299 JUMPDEST
0x29a DUP3
0x29b PUSH1 0x40
0x29d MLOAD
0x29e PUSH2 0x389
0x2a1 DUP1
0x2a2 PUSH2 0x497
0x2a5 DUP4
0x2a6 CODECOPY
0x2a7 ADD
0x2a8 DUP1
0x2a9 DUP3
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x20
0x2c4 ADD
0x2c5 SWAP2
0x2c6 POP
0x2c7 POP
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc SWAP2
0x2cd SUB
0x2ce SWAP1
0x2cf PUSH1 0x0
0x2d1 CREATE
0x2d2 SWAP1
0x2d3 POP
0x2d4 PUSH1 0x60
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db ADD
0x2dc PUSH1 0x40
0x2de MSTORE
0x2df DUP1
0x2e0 CALLER
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 DUP3
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec NUMBER
0x2ed DUP2
0x2ee MSTORE
0x2ef PUSH1 0x20
0x2f1 ADD
0x2f2 POP
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0x0
0x2f7 POP
0x2f8 PUSH1 0x0
0x2fa DUP7
0x2fb DUP2
0x2fc MSTORE
0x2fd PUSH1 0x20
0x2ff ADD
0x300 SWAP1
0x301 DUP2
0x302 MSTORE
0x303 PUSH1 0x20
0x305 ADD
0x306 PUSH1 0x0
0x308 SHA3
0x309 PUSH1 0x0
0x30b POP
0x30c PUSH1 0x0
0x30e DUP3
0x30f ADD
0x310 MLOAD
0x311 DUP2
0x312 PUSH1 0x0
0x314 ADD
0x315 PUSH1 0x0
0x317 PUSH2 0x100
0x31a EXP
0x31b DUP2
0x31c SLOAD
0x31d DUP2
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 MUL
0x334 NOT
0x335 AND
0x336 SWAP1
0x337 DUP4
0x338 MUL
0x339 OR
0x33a SWAP1
0x33b SSTORE
0x33c POP
0x33d PUSH1 0x20
0x33f DUP3
0x340 ADD
0x341 MLOAD
0x342 DUP2
0x343 PUSH1 0x1
0x345 ADD
0x346 PUSH1 0x0
0x348 PUSH2 0x100
0x34b EXP
0x34c DUP2
0x34d SLOAD
0x34e DUP2
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 MUL
0x365 NOT
0x366 AND
0x367 SWAP1
0x368 DUP4
0x369 MUL
0x36a OR
0x36b SWAP1
0x36c SSTORE
0x36d POP
0x36e PUSH1 0x40
0x370 DUP3
0x371 ADD
0x372 MLOAD
0x373 DUP2
0x374 PUSH1 0x2
0x376 ADD
0x377 PUSH1 0x0
0x379 POP
0x37a SSTORE
0x37b SWAP1
0x37c POP
0x37d POP
0x37e PUSH1 0x2
0x380 PUSH1 0x0
0x382 DUP2
0x383 DUP2
0x384 POP
0x385 SLOAD
0x386 PUSH1 0x1
0x388 ADD
0x389 SWAP2
0x38a SWAP1
0x38b POP
0x38c DUP2
0x38d SWAP1
0x38e SSTORE
0x38f POP
0x390 DUP1
0x391 SWAP2
0x392 POP
0x393 PUSH2 0x397
0x396 JUMP
---
0x299: JUMPDEST 
0x29b: V151 = 0x40
0x29d: V152 = M[0x40]
0x29e: V153 = 0x389
0x2a2: V154 = 0x497
0x2a6: CODECOPY V152 0x497 0x389
0x2a7: V155 = ADD 0x389 V152
0x2aa: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x2c1: M[V155] = V157
0x2c2: V158 = 0x20
0x2c4: V159 = ADD 0x20 V155
0x2c8: V160 = 0x40
0x2ca: V161 = M[0x40]
0x2cd: V162 = SUB V159 V161
0x2cf: V163 = 0x0
0x2d1: V164 = CREATE 0x0 V161 V162
0x2d4: V165 = 0x60
0x2d6: V166 = 0x40
0x2d8: V167 = M[0x40]
0x2db: V168 = ADD V167 0x60
0x2dc: V169 = 0x40
0x2de: M[0x40] = V168
0x2e0: V170 = CALLER
0x2e2: M[V167] = V170
0x2e3: V171 = 0x20
0x2e5: V172 = ADD 0x20 V167
0x2e8: M[V172] = V164
0x2e9: V173 = 0x20
0x2eb: V174 = ADD 0x20 V172
0x2ec: V175 = NUMBER
0x2ee: M[V174] = V175
0x2ef: V176 = 0x20
0x2f1: V177 = ADD 0x20 V174
0x2f3: V178 = 0x1
0x2f5: V179 = 0x0
0x2f8: V180 = 0x0
0x2fc: M[0x0] = V51
0x2fd: V181 = 0x20
0x2ff: V182 = ADD 0x20 0x0
0x302: M[0x20] = 0x1
0x303: V183 = 0x20
0x305: V184 = ADD 0x20 0x20
0x306: V185 = 0x0
0x308: V186 = SHA3 0x0 0x40
0x309: V187 = 0x0
0x30c: V188 = 0x0
0x30f: V189 = ADD V167 0x0
0x310: V190 = M[V189]
0x312: V191 = 0x0
0x314: V192 = ADD 0x0 V186
0x315: V193 = 0x0
0x317: V194 = 0x100
0x31a: V195 = EXP 0x100 0x0
0x31c: V196 = S[V192]
0x31e: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V198 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x334: V199 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x335: V200 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V196
0x338: V201 = MUL V190 0x1
0x339: V202 = OR V201 V200
0x33b: S[V192] = V202
0x33d: V203 = 0x20
0x340: V204 = ADD V167 0x20
0x341: V205 = M[V204]
0x343: V206 = 0x1
0x345: V207 = ADD 0x1 V186
0x346: V208 = 0x0
0x348: V209 = 0x100
0x34b: V210 = EXP 0x100 0x0
0x34d: V211 = S[V207]
0x34f: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V213 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x365: V214 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x366: V215 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V211
0x369: V216 = MUL V205 0x1
0x36a: V217 = OR V216 V215
0x36c: S[V207] = V217
0x36e: V218 = 0x40
0x371: V219 = ADD V167 0x40
0x372: V220 = M[V219]
0x374: V221 = 0x2
0x376: V222 = ADD 0x2 V186
0x377: V223 = 0x0
0x37a: S[V222] = V220
0x37e: V224 = 0x2
0x380: V225 = 0x0
0x385: V226 = S[0x2]
0x386: V227 = 0x1
0x388: V228 = ADD 0x1 V226
0x38e: S[0x2] = V228
0x393: V229 = 0x397
0x396: JUMP 0x397
---
Entry stack: [V5, 0xff, V51, V54, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V164, V164]
Exit stack: [V5, 0xff, V51, V54, V164, V164]

================================

Block 0x397
[0x397:0x39d]
---
Predecessors: [0x299]
Successors: [0xff]
---
0x397 JUMPDEST
0x398 POP
0x399 SWAP3
0x39a SWAP2
0x39b POP
0x39c POP
0x39d JUMP
---
0x397: JUMPDEST 
0x39d: JUMP 0xff
---
Entry stack: [V5, 0xff, V51, V54, V164, V164]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V5, V164]

================================

Block 0x39e
[0x39e:0x3f7]
---
Predecessors: [0x12b]
Successors: [0x3f8, 0x3fc]
---
0x39e JUMPDEST
0x39f PUSH1 0x0
0x3a1 PUSH1 0x0
0x3a3 PUSH1 0x0
0x3a5 SWAP1
0x3a6 SLOAD
0x3a7 SWAP1
0x3a8 PUSH2 0x100
0x3ab EXP
0x3ac SWAP1
0x3ad DIV
0x3ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c3 AND
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da CALLER
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 AND
0x3f1 EQ
0x3f2 ISZERO
0x3f3 ISZERO
0x3f4 PUSH2 0x3fc
0x3f7 JUMPI
---
0x39e: JUMPDEST 
0x39f: V230 = 0x0
0x3a1: V231 = 0x0
0x3a3: V232 = 0x0
0x3a6: V233 = S[0x0]
0x3a8: V234 = 0x100
0x3ab: V235 = EXP 0x100 0x0
0x3ad: V236 = DIV V233 0x1
0x3ae: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x3c4: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x3da: V241 = CALLER
0x3db: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x3f1: V244 = EQ V243 V240
0x3f2: V245 = ISZERO V244
0x3f3: V246 = ISZERO V245
0x3f4: V247 = 0x3fc
0x3f7: JUMPI 0x3fc V246
---
Entry stack: [0xc0, S1, 0x138]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [0xc0, S1, 0x138, 0x0]

================================

Block 0x3f8
[0x3f8:0x3fb]
---
Predecessors: [0x39e]
Successors: []
---
0x3f8 PUSH2 0x2
0x3fb JUMP
---
0x3f8: V248 = 0x2
0x3fb: THROW 
---
Entry stack: [0xc0, S2, 0x138, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0xc0, S2, 0x138, 0x0]

================================

Block 0x3fc
[0x3fc:0x408]
---
Predecessors: [0x39e]
Successors: [0x409]
---
0x3fc JUMPDEST
0x3fd PUSH1 0x2
0x3ff PUSH1 0x0
0x401 POP
0x402 SLOAD
0x403 SWAP1
0x404 POP
0x405 PUSH2 0x409
0x408 JUMP
---
0x3fc: JUMPDEST 
0x3fd: V249 = 0x2
0x3ff: V250 = 0x0
0x402: V251 = S[0x2]
0x405: V252 = 0x409
0x408: JUMP 0x409
---
Entry stack: [0xc0, S2, 0x138, 0x0]
Stack pops: 1
Stack additions: [V251]
Exit stack: [0xc0, S2, 0x138, V251]

================================

Block 0x409
[0x409:0x40b]
---
Predecessors: [0x3fc]
Successors: [0x138]
---
0x409 JUMPDEST
0x40a SWAP1
0x40b JUMP
---
0x409: JUMPDEST 
0x40b: JUMP 0x138
---
Entry stack: [0xc0, S2, 0x138, V251]
Stack pops: 2
Stack additions: [S0]
Exit stack: [0xc0, S2, V251]

================================

Block 0x40c
[0x40c:0x463]
---
Predecessors: [0x14e]
Successors: [0x464, 0x468]
---
0x40c JUMPDEST
0x40d PUSH1 0x0
0x40f PUSH1 0x0
0x411 SWAP1
0x412 SLOAD
0x413 SWAP1
0x414 PUSH2 0x100
0x417 EXP
0x418 SWAP1
0x419 DIV
0x41a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42f AND
0x430 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x445 AND
0x446 CALLER
0x447 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45c AND
0x45d EQ
0x45e ISZERO
0x45f ISZERO
0x460 PUSH2 0x468
0x463 JUMPI
---
0x40c: JUMPDEST 
0x40d: V253 = 0x0
0x40f: V254 = 0x0
0x412: V255 = S[0x0]
0x414: V256 = 0x100
0x417: V257 = EXP 0x100 0x0
0x419: V258 = DIV V255 0x1
0x41a: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x430: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x445: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x446: V263 = CALLER
0x447: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x45c: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x45d: V266 = EQ V265 V262
0x45e: V267 = ISZERO V266
0x45f: V268 = ISZERO V267
0x460: V269 = 0x468
0x463: JUMPI 0x468 V268
---
Entry stack: [V5, 0x164, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x164, V79]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x40c]
Successors: []
---
0x464 PUSH2 0x2
0x467 JUMP
---
0x464: V270 = 0x2
0x467: THROW 
---
Entry stack: [V5, 0x164, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x164, V79]

================================

Block 0x468
[0x468:0x493]
---
Predecessors: [0x40c]
Successors: [0x494]
---
0x468 JUMPDEST
0x469 DUP1
0x46a PUSH1 0x0
0x46c PUSH1 0x0
0x46e PUSH2 0x100
0x471 EXP
0x472 DUP2
0x473 SLOAD
0x474 DUP2
0x475 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48a MUL
0x48b NOT
0x48c AND
0x48d SWAP1
0x48e DUP4
0x48f MUL
0x490 OR
0x491 SWAP1
0x492 SSTORE
0x493 POP
---
0x468: JUMPDEST 
0x46a: V271 = 0x0
0x46c: V272 = 0x0
0x46e: V273 = 0x100
0x471: V274 = EXP 0x100 0x0
0x473: V275 = S[0x0]
0x475: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V277 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x48b: V278 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x48c: V279 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V275
0x48f: V280 = MUL V79 0x1
0x490: V281 = OR V280 V279
0x492: S[0x0] = V281
---
Entry stack: [V5, 0x164, V79]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5, 0x164, V79]

================================

Block 0x494
[0x494:0x496]
---
Predecessors: [0x468]
Successors: [0x164]
---
0x494 JUMPDEST
0x495 POP
0x496 JUMP
---
0x494: JUMPDEST 
0x496: JUMP 0x164
---
Entry stack: [V5, 0x164, V79]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x497
[0x497:0x4b7]
---
Predecessors: []
Successors: [0x4b8]
---
0x497 PUSH1 0x60
0x499 PUSH1 0x40
0x49b MSTORE
0x49c PUSH1 0x40
0x49e MLOAD
0x49f PUSH1 0x20
0x4a1 DUP1
0x4a2 PUSH2 0x389
0x4a5 DUP4
0x4a6 CODECOPY
0x4a7 DUP2
0x4a8 ADD
0x4a9 PUSH1 0x40
0x4ab MSTORE
0x4ac DUP1
0x4ad DUP1
0x4ae MLOAD
0x4af SWAP1
0x4b0 PUSH1 0x20
0x4b2 ADD
0x4b3 SWAP1
0x4b4 SWAP2
0x4b5 SWAP1
0x4b6 POP
0x4b7 POP
---
0x497: V282 = 0x60
0x499: V283 = 0x40
0x49b: M[0x40] = 0x60
0x49c: V284 = 0x40
0x49e: V285 = M[0x40]
0x49f: V286 = 0x20
0x4a2: V287 = 0x389
0x4a6: CODECOPY V285 0x389 0x20
0x4a8: V288 = ADD V285 0x20
0x4a9: V289 = 0x40
0x4ab: M[0x40] = V288
0x4ae: V290 = M[V285]
0x4b0: V291 = 0x20
0x4b2: V292 = ADD 0x20 V285
---
Entry stack: []
Stack pops: 0
Stack additions: [V290]
Exit stack: [V290]

================================

Block 0x4b8
[0x4b8:0x4b8]
---
Predecessors: [0x497]
Successors: [0x4b9]
---
0x4b8 JUMPDEST
---
0x4b8: JUMPDEST 
---
Entry stack: [V290]
Stack pops: 0
Stack additions: []
Exit stack: [V290]

================================

Block 0x4b9
[0x4b9:0x4e4]
---
Predecessors: [0x4b8]
Successors: [0x4e5]
---
0x4b9 JUMPDEST
0x4ba CALLER
0x4bb PUSH1 0x0
0x4bd PUSH1 0x0
0x4bf PUSH2 0x100
0x4c2 EXP
0x4c3 DUP2
0x4c4 SLOAD
0x4c5 DUP2
0x4c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4db MUL
0x4dc NOT
0x4dd AND
0x4de SWAP1
0x4df DUP4
0x4e0 MUL
0x4e1 OR
0x4e2 SWAP1
0x4e3 SSTORE
0x4e4 POP
---
0x4b9: JUMPDEST 
0x4ba: V293 = CALLER
0x4bb: V294 = 0x0
0x4bd: V295 = 0x0
0x4bf: V296 = 0x100
0x4c2: V297 = EXP 0x100 0x0
0x4c4: V298 = S[0x0]
0x4c6: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4db: V300 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4dc: V301 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4dd: V302 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V298
0x4e0: V303 = MUL V293 0x1
0x4e1: V304 = OR V303 V302
0x4e3: S[0x0] = V304
---
Entry stack: [V290]
Stack pops: 0
Stack additions: []
Exit stack: [V290]

================================

Block 0x4e5
[0x4e5:0x510]
---
Predecessors: [0x4b9]
Successors: [0x511]
---
0x4e5 JUMPDEST
0x4e6 DUP1
0x4e7 PUSH1 0x1
0x4e9 PUSH1 0x0
0x4eb PUSH2 0x100
0x4ee EXP
0x4ef DUP2
0x4f0 SLOAD
0x4f1 DUP2
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 MUL
0x508 NOT
0x509 AND
0x50a SWAP1
0x50b DUP4
0x50c MUL
0x50d OR
0x50e SWAP1
0x50f SSTORE
0x510 POP
---
0x4e5: JUMPDEST 
0x4e7: V305 = 0x1
0x4e9: V306 = 0x0
0x4eb: V307 = 0x100
0x4ee: V308 = EXP 0x100 0x0
0x4f0: V309 = S[0x1]
0x4f2: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V311 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x508: V312 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x509: V313 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V309
0x50c: V314 = MUL V290 0x1
0x50d: V315 = OR V314 V313
0x50f: S[0x1] = V315
---
Entry stack: [V290]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V290]

================================

Block 0x511
[0x511:0x52a]
---
Predecessors: [0x4e5]
Successors: [0x52b]
---
0x511 JUMPDEST
0x512 POP
0x513 PUSH2 0x300
0x516 DUP1
0x517 PUSH2 0x89
0x51a PUSH1 0x0
0x51c CODECOPY
0x51d PUSH1 0x0
0x51f RETURN
0x520 PUSH1 0x60
0x522 PUSH1 0x40
0x524 MSTORE
0x525 CALLDATASIZE
0x526 ISZERO
0x527 PUSH2 0x53
0x52a JUMPI
---
0x511: JUMPDEST 
0x513: V316 = 0x300
0x517: V317 = 0x89
0x51a: V318 = 0x0
0x51c: CODECOPY 0x0 0x89 0x300
0x51d: V319 = 0x0
0x51f: RETURN 0x0 0x300
0x520: V320 = 0x60
0x522: V321 = 0x40
0x524: M[0x40] = 0x60
0x525: V322 = CALLDATASIZE
0x526: V323 = ISZERO V322
0x527: V324 = 0x53
0x52a: THROWI V323
---
Entry stack: [V290]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x52b
[0x52b:0x558]
---
Predecessors: [0x511]
Successors: [0x559]
---
0x52b PUSH1 0x0
0x52d CALLDATALOAD
0x52e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x54c SWAP1
0x54d DIV
0x54e DUP1
0x54f PUSH4 0x8da5cb5b
0x554 EQ
0x555 PUSH2 0xc2
0x558 JUMPI
---
0x52b: V325 = 0x0
0x52d: V326 = CALLDATALOAD 0x0
0x52e: V327 = 0x100000000000000000000000000000000000000000000000000000000
0x54d: V328 = DIV V326 0x100000000000000000000000000000000000000000000000000000000
0x54f: V329 = 0x8da5cb5b
0x554: V330 = EQ 0x8da5cb5b V328
0x555: V331 = 0xc2
0x558: THROWI V330
---
Entry stack: []
Stack pops: 0
Stack additions: [V328]
Exit stack: [V328]

================================

Block 0x559
[0x559:0x563]
---
Predecessors: [0x52b]
Successors: [0x564]
---
0x559 DUP1
0x55a PUSH4 0xf2fde38b
0x55f EQ
0x560 PUSH2 0xfb
0x563 JUMPI
---
0x55a: V332 = 0xf2fde38b
0x55f: V333 = EQ 0xf2fde38b V328
0x560: V334 = 0xfb
0x563: THROWI V333
---
Entry stack: [V328]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V328]

================================

Block 0x564
[0x564:0x56e]
---
Predecessors: [0x559]
Successors: [0x56f]
---
0x564 DUP1
0x565 PUSH4 0xfa89401a
0x56a EQ
0x56b PUSH2 0x113
0x56e JUMPI
---
0x565: V335 = 0xfa89401a
0x56a: V336 = EQ 0xfa89401a V328
0x56b: V337 = 0x113
0x56e: THROWI V336
---
Entry stack: [V328]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V328]

================================

Block 0x56f
[0x56f:0x576]
---
Predecessors: [0x564]
Successors: [0x577]
---
0x56f PUSH2 0x53
0x572 JUMP
0x573 JUMPDEST
0x574 PUSH2 0xc0
---
0x56f: V338 = 0x53
0x572: THROW 
0x573: JUMPDEST 
0x574: V339 = 0xc0
---
Entry stack: [V328]
Stack pops: 0
Stack additions: [0xc0]
Exit stack: []

================================

Block 0x577
[0x577:0x5dc]
---
Predecessors: [0x56f]
Successors: [0x12b]
---
0x577 JUMPDEST
0x578 NUMBER
0x579 PUSH32 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x59a CALLER
0x59b CALLVALUE
0x59c TIMESTAMP
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP1
0x5a1 DUP5
0x5a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b7 AND
0x5b8 DUP2
0x5b9 MSTORE
0x5ba PUSH1 0x20
0x5bc ADD
0x5bd DUP4
0x5be DUP2
0x5bf MSTORE
0x5c0 PUSH1 0x20
0x5c2 ADD
0x5c3 DUP3
0x5c4 DUP2
0x5c5 MSTORE
0x5c6 PUSH1 0x20
0x5c8 ADD
0x5c9 SWAP4
0x5ca POP
0x5cb POP
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 DUP1
0x5d2 SWAP2
0x5d3 SUB
0x5d4 SWAP1
0x5d5 LOG2
0x5d6 PUSH2 0xbd
0x5d9 PUSH2 0x12b
0x5dc JUMP
---
0x577: JUMPDEST 
0x578: V340 = NUMBER
0x579: V341 = 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db
0x59a: V342 = CALLER
0x59b: V343 = CALLVALUE
0x59c: V344 = TIMESTAMP
0x59d: V345 = 0x40
0x59f: V346 = M[0x40]
0x5a2: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x5b9: M[V346] = V348
0x5ba: V349 = 0x20
0x5bc: V350 = ADD 0x20 V346
0x5bf: M[V350] = V343
0x5c0: V351 = 0x20
0x5c2: V352 = ADD 0x20 V350
0x5c5: M[V352] = V344
0x5c6: V353 = 0x20
0x5c8: V354 = ADD 0x20 V352
0x5ce: V355 = 0x40
0x5d0: V356 = M[0x40]
0x5d3: V357 = SUB V354 V356
0x5d5: LOG V356 V357 0x5d6ac9b7defd8fbb29ef2ab0f08c3744192b3777466dd98d1fd7daed5064b6db V340
0x5d6: V358 = 0xbd
0x5d9: V359 = 0x12b
0x5dc: JUMP 0x12b
---
Entry stack: [0xc0]
Stack pops: 0
Stack additions: [0xbd]
Exit stack: [0xc0, 0xbd]

================================

Block 0x5dd
[0x5dd:0x5dd]
---
Predecessors: []
Successors: [0x5de]
---
0x5dd JUMPDEST
---
0x5dd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5de
[0x5de:0x6b7]
---
Predecessors: [0x5dd]
Successors: [0x6b8]
---
0x5de JUMPDEST
0x5df JUMP
0x5e0 JUMPDEST
0x5e1 STOP
0x5e2 JUMPDEST
0x5e3 PUSH2 0xcf
0x5e6 PUSH1 0x4
0x5e8 DUP1
0x5e9 POP
0x5ea POP
0x5eb PUSH2 0x19a
0x5ee JUMP
0x5ef JUMPDEST
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 DUP1
0x5f4 DUP3
0x5f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60a AND
0x60b DUP2
0x60c MSTORE
0x60d PUSH1 0x20
0x60f ADD
0x610 SWAP2
0x611 POP
0x612 POP
0x613 PUSH1 0x40
0x615 MLOAD
0x616 DUP1
0x617 SWAP2
0x618 SUB
0x619 SWAP1
0x61a RETURN
0x61b JUMPDEST
0x61c PUSH2 0x111
0x61f PUSH1 0x4
0x621 DUP1
0x622 DUP1
0x623 CALLDATALOAD
0x624 SWAP1
0x625 PUSH1 0x20
0x627 ADD
0x628 SWAP1
0x629 SWAP2
0x62a SWAP1
0x62b POP
0x62c POP
0x62d PUSH2 0x1c0
0x630 JUMP
0x631 JUMPDEST
0x632 STOP
0x633 JUMPDEST
0x634 PUSH2 0x129
0x637 PUSH1 0x4
0x639 DUP1
0x63a DUP1
0x63b CALLDATALOAD
0x63c SWAP1
0x63d PUSH1 0x20
0x63f ADD
0x640 SWAP1
0x641 SWAP2
0x642 SWAP1
0x643 POP
0x644 POP
0x645 PUSH2 0x24b
0x648 JUMP
0x649 JUMPDEST
0x64a STOP
0x64b JUMPDEST
0x64c PUSH1 0x1
0x64e PUSH1 0x0
0x650 SWAP1
0x651 SLOAD
0x652 SWAP1
0x653 PUSH2 0x100
0x656 EXP
0x657 SWAP1
0x658 DIV
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e AND
0x66f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x684 AND
0x685 PUSH1 0x0
0x687 ADDRESS
0x688 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69d AND
0x69e BALANCE
0x69f PUSH1 0x40
0x6a1 MLOAD
0x6a2 DUP1
0x6a3 SWAP1
0x6a4 POP
0x6a5 PUSH1 0x0
0x6a7 PUSH1 0x40
0x6a9 MLOAD
0x6aa DUP1
0x6ab DUP4
0x6ac SUB
0x6ad DUP2
0x6ae DUP6
0x6af DUP9
0x6b0 DUP9
0x6b1 CALL
0x6b2 SWAP4
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 POP
0x6b7 POP
---
0x5de: JUMPDEST 
0x5df: JUMP S0
0x5e0: JUMPDEST 
0x5e1: STOP 
0x5e2: JUMPDEST 
0x5e3: V360 = 0xcf
0x5e6: V361 = 0x4
0x5eb: V362 = 0x19a
0x5ee: THROW 
0x5ef: JUMPDEST 
0x5f0: V363 = 0x40
0x5f2: V364 = M[0x40]
0x5f5: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x60a: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x60c: M[V364] = V366
0x60d: V367 = 0x20
0x60f: V368 = ADD 0x20 V364
0x613: V369 = 0x40
0x615: V370 = M[0x40]
0x618: V371 = SUB V368 V370
0x61a: RETURN V370 V371
0x61b: JUMPDEST 
0x61c: V372 = 0x111
0x61f: V373 = 0x4
0x623: V374 = CALLDATALOAD 0x4
0x625: V375 = 0x20
0x627: V376 = ADD 0x20 0x4
0x62d: V377 = 0x1c0
0x630: THROW 
0x631: JUMPDEST 
0x632: STOP 
0x633: JUMPDEST 
0x634: V378 = 0x129
0x637: V379 = 0x4
0x63b: V380 = CALLDATALOAD 0x4
0x63d: V381 = 0x20
0x63f: V382 = ADD 0x20 0x4
0x645: V383 = 0x24b
0x648: THROW 
0x649: JUMPDEST 
0x64a: STOP 
0x64b: JUMPDEST 
0x64c: V384 = 0x1
0x64e: V385 = 0x0
0x651: V386 = S[0x1]
0x653: V387 = 0x100
0x656: V388 = EXP 0x100 0x0
0x658: V389 = DIV V386 0x1
0x659: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x66f: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x684: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x685: V394 = 0x0
0x687: V395 = ADDRESS
0x688: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x69d: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x69e: V398 = BALANCE V397
0x69f: V399 = 0x40
0x6a1: V400 = M[0x40]
0x6a5: V401 = 0x0
0x6a7: V402 = 0x40
0x6a9: V403 = M[0x40]
0x6ac: V404 = SUB V400 V403
0x6b1: V405 = CALL 0x0 V393 V398 V403 V404 V403 0x0
---
Entry stack: []
Stack pops: 204
Stack additions: []
Exit stack: []

================================

Block 0x6b8
[0x6b8:0x737]
---
Predecessors: [0x5de]
Successors: [0x738]
---
0x6b8 JUMPDEST
0x6b9 JUMP
0x6ba JUMPDEST
0x6bb PUSH1 0x0
0x6bd PUSH1 0x0
0x6bf SWAP1
0x6c0 SLOAD
0x6c1 SWAP1
0x6c2 PUSH2 0x100
0x6c5 EXP
0x6c6 SWAP1
0x6c7 DIV
0x6c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6dd AND
0x6de DUP2
0x6df JUMP
0x6e0 JUMPDEST
0x6e1 PUSH1 0x0
0x6e3 PUSH1 0x0
0x6e5 SWAP1
0x6e6 SLOAD
0x6e7 SWAP1
0x6e8 PUSH2 0x100
0x6eb EXP
0x6ec SWAP1
0x6ed DIV
0x6ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x703 AND
0x704 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x719 AND
0x71a CALLER
0x71b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x730 AND
0x731 EQ
0x732 ISZERO
0x733 ISZERO
0x734 PUSH2 0x21c
0x737 JUMPI
---
0x6b8: JUMPDEST 
0x6b9: JUMP S0
0x6ba: JUMPDEST 
0x6bb: V406 = 0x0
0x6bd: V407 = 0x0
0x6c0: V408 = S[0x0]
0x6c2: V409 = 0x100
0x6c5: V410 = EXP 0x100 0x0
0x6c7: V411 = DIV V408 0x1
0x6c8: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x6dd: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x6df: JUMP S0
0x6e0: JUMPDEST 
0x6e1: V414 = 0x0
0x6e3: V415 = 0x0
0x6e6: V416 = S[0x0]
0x6e8: V417 = 0x100
0x6eb: V418 = EXP 0x100 0x0
0x6ed: V419 = DIV V416 0x1
0x6ee: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x703: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x704: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x719: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x71a: V424 = CALLER
0x71b: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x730: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x731: V427 = EQ V426 V423
0x732: V428 = ISZERO V427
0x733: V429 = ISZERO V428
0x734: V430 = 0x21c
0x737: THROWI V429
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x738
[0x738:0x767]
---
Predecessors: [0x6b8]
Successors: [0x768]
---
0x738 PUSH2 0x2
0x73b JUMP
0x73c JUMPDEST
0x73d DUP1
0x73e PUSH1 0x0
0x740 PUSH1 0x0
0x742 PUSH2 0x100
0x745 EXP
0x746 DUP2
0x747 SLOAD
0x748 DUP2
0x749 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75e MUL
0x75f NOT
0x760 AND
0x761 SWAP1
0x762 DUP4
0x763 MUL
0x764 OR
0x765 SWAP1
0x766 SSTORE
0x767 POP
---
0x738: V431 = 0x2
0x73b: THROW 
0x73c: JUMPDEST 
0x73e: V432 = 0x0
0x740: V433 = 0x0
0x742: V434 = 0x100
0x745: V435 = EXP 0x100 0x0
0x747: V436 = S[0x0]
0x749: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x75e: V438 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x75f: V439 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x760: V440 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V436
0x763: V441 = MUL S0 0x1
0x764: V442 = OR V441 V440
0x766: S[0x0] = V442
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x768
[0x768:0x7c2]
---
Predecessors: [0x738]
Successors: [0x7c3]
---
0x768 JUMPDEST
0x769 POP
0x76a JUMP
0x76b JUMPDEST
0x76c PUSH1 0x0
0x76e PUSH1 0x0
0x770 SWAP1
0x771 SLOAD
0x772 SWAP1
0x773 PUSH2 0x100
0x776 EXP
0x777 SWAP1
0x778 DIV
0x779 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78e AND
0x78f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a4 AND
0x7a5 CALLER
0x7a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7bb AND
0x7bc EQ
0x7bd ISZERO
0x7be ISZERO
0x7bf PUSH2 0x2a7
0x7c2 JUMPI
---
0x768: JUMPDEST 
0x76a: JUMP S1
0x76b: JUMPDEST 
0x76c: V443 = 0x0
0x76e: V444 = 0x0
0x771: V445 = S[0x0]
0x773: V446 = 0x100
0x776: V447 = EXP 0x100 0x0
0x778: V448 = DIV V445 0x1
0x779: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x78f: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a4: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x7a5: V453 = CALLER
0x7a6: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x7bb: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x7bc: V456 = EQ V455 V452
0x7bd: V457 = ISZERO V456
0x7be: V458 = ISZERO V457
0x7bf: V459 = 0x2a7
0x7c2: THROWI V458
---
Entry stack: [S0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x7c3
[0x7c3:0x81c]
---
Predecessors: [0x768]
Successors: [0x81d]
---
0x7c3 PUSH2 0x2
0x7c6 JUMP
0x7c7 JUMPDEST
0x7c8 PUSH32 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x7e9 ADDRESS
0x7ea TIMESTAMP
0x7eb PUSH1 0x40
0x7ed MLOAD
0x7ee DUP1
0x7ef DUP4
0x7f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x805 AND
0x806 DUP2
0x807 MSTORE
0x808 PUSH1 0x20
0x80a ADD
0x80b DUP3
0x80c DUP2
0x80d MSTORE
0x80e PUSH1 0x20
0x810 ADD
0x811 SWAP3
0x812 POP
0x813 POP
0x814 POP
0x815 PUSH1 0x40
0x817 MLOAD
0x818 DUP1
0x819 SWAP2
0x81a SUB
0x81b SWAP1
0x81c LOG1
---
0x7c3: V460 = 0x2
0x7c6: THROW 
0x7c7: JUMPDEST 
0x7c8: V461 = 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
0x7e9: V462 = ADDRESS
0x7ea: V463 = TIMESTAMP
0x7eb: V464 = 0x40
0x7ed: V465 = M[0x40]
0x7f0: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x805: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x807: M[V465] = V467
0x808: V468 = 0x20
0x80a: V469 = ADD 0x20 V465
0x80d: M[V469] = V463
0x80e: V470 = 0x20
0x810: V471 = ADD 0x20 V469
0x815: V472 = 0x40
0x817: V473 = M[0x40]
0x81a: V474 = SUB V471 V473
0x81c: LOG V473 V474 0xb854f581145dc1eb640e9c943dd96947618be343eb869017cae7a0d959b41689
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x81d
[0x81d:0x81f]
---
Predecessors: [0x7c3]
Successors: []
Has unresolved jump.
---
0x81d JUMPDEST
0x81e POP
0x81f JUMP
---
0x81d: JUMPDEST 
0x81f: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x85652d1f
Entry block: 0x65
Exit block: 0x7b
Body: 0x65, 0x7b, 0x166, 0x1c2, 0x1c6, 0x20d

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xa7
Exit block: 0xb4
Body: 0xa7, 0xb4, 0x213

Function 2:
Public function signature: 0x92f70af7
Entry block: 0xe0
Exit block: 0xff
Body: 0xe0, 0xff, 0x239, 0x295, 0x299, 0x397

Function 3:
Public function signature: 0xd716e9ca
Entry block: 0x12b
Exit block: 0x138
Body: 0x12b, 0x138, 0x39e, 0x3f8, 0x3fc, 0x409

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x14e
Exit block: 0x164
Body: 0x14e, 0x164, 0x40c, 0x464, 0x468, 0x494

Function 5:
Public fallback function
Entry block: 0x5f
Exit block: 0x63
Body: 0x5f, 0x63

