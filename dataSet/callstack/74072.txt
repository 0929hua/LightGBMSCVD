Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x74]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x74
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x74
0xa: JUMPI 0x74 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x24f]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x38d52e0f
0x34 EQ
0x35 PUSH2 0x24f
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x38d52e0f
0x34: V10 = EQ 0x38d52e0f V8
0x35: V11 = 0x24f
0x38: JUMPI 0x24f V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x288]
---
0x39 DUP1
0x3a PUSH4 0x8da5cb5b
0x3f EQ
0x40 PUSH2 0x288
0x43 JUMPI
---
0x3a: V12 = 0x8da5cb5b
0x3f: V13 = EQ 0x8da5cb5b V8
0x40: V14 = 0x288
0x43: JUMPI 0x288 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x2c1]
---
0x44 DUP1
0x45 PUSH4 0x97fcb54e
0x4a EQ
0x4b PUSH2 0x2c1
0x4e JUMPI
---
0x45: V15 = 0x97fcb54e
0x4a: V16 = EQ 0x97fcb54e V8
0x4b: V17 = 0x2c1
0x4e: JUMPI 0x2c1 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x2e2]
---
0x4f DUP1
0x50 PUSH4 0xa035b1fe
0x55 EQ
0x56 PUSH2 0x2e2
0x59 JUMPI
---
0x50: V18 = 0xa035b1fe
0x55: V19 = EQ 0xa035b1fe V8
0x56: V20 = 0x2e2
0x59: JUMPI 0x2e2 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x305]
---
0x5a DUP1
0x5b PUSH4 0xe7dafdb6
0x60 EQ
0x61 PUSH2 0x305
0x64 JUMPI
---
0x5b: V21 = 0xe7dafdb6
0x60: V22 = EQ 0xe7dafdb6 V8
0x61: V23 = 0x305
0x64: JUMPI 0x305 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x32f]
---
0x65 DUP1
0x66 PUSH4 0xf2fde38b
0x6b EQ
0x6c PUSH2 0x32f
0x6f JUMPI
---
0x66: V24 = 0xf2fde38b
0x6b: V25 = EQ 0xf2fde38b V8
0x6c: V26 = 0x32f
0x6f: JUMPI 0x32f V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x73]
---
Predecessors: [0x65]
Successors: [0x74]
---
0x70 PUSH2 0x74
0x73 JUMP
---
0x70: V27 = 0x74
0x73: JUMP 0x74
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x74
[0x74:0x77]
---
Predecessors: [0x0, 0x70]
Successors: [0x78]
---
0x74 JUMPDEST
0x75 PUSH2 0x24d
---
0x74: JUMPDEST 
0x75: V28 = 0x24d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x24d]
Exit stack: [V8, 0x24d]

================================

Block 0x78
[0x78:0x91]
---
Predecessors: [0x74]
Successors: [0x92, 0x96]
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b PUSH1 0x0
0x7d PUSH1 0x0
0x7f PUSH1 0x2
0x81 PUSH1 0x0
0x83 POP
0x84 SLOAD
0x85 CALLVALUE
0x86 DIV
0x87 SWAP3
0x88 POP
0x89 PUSH1 0x0
0x8b DUP4
0x8c EQ
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x78: JUMPDEST 
0x79: V29 = 0x0
0x7b: V30 = 0x0
0x7d: V31 = 0x0
0x7f: V32 = 0x2
0x81: V33 = 0x0
0x84: V34 = S[0x2]
0x85: V35 = CALLVALUE
0x86: V36 = DIV V35 V34
0x89: V37 = 0x0
0x8c: V38 = EQ V36 0x0
0x8d: V39 = ISZERO V38
0x8e: V40 = 0x96
0x91: JUMPI 0x96 V39
---
Entry stack: [V8, 0x24d]
Stack pops: 0
Stack additions: [V36, 0x0, 0x0]
Exit stack: [V8, 0x24d, V36, 0x0, 0x0]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x78]
Successors: []
---
0x92 PUSH2 0x2
0x95 JUMP
---
0x92: V41 = 0x2
0x95: THROW 
---
Entry stack: [V8, 0x24d, V36, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x24d, V36, 0x0, 0x0]

================================

Block 0x96
[0x96:0x134]
---
Predecessors: [0x78]
Successors: [0x135]
---
0x96 JUMPDEST
0x97 PUSH1 0x1
0x99 PUSH1 0x0
0x9b SWAP1
0x9c SLOAD
0x9d SWAP1
0x9e PUSH2 0x100
0xa1 EXP
0xa2 SWAP1
0xa3 DIV
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 PUSH4 0x70a08231
0xd5 ADDRESS
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP3
0xda PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf8 MUL
0xf9 DUP2
0xfa MSTORE
0xfb PUSH1 0x4
0xfd ADD
0xfe DUP1
0xff DUP3
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
0x11d POP
0x11e PUSH1 0x20
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP1
0x124 DUP4
0x125 SUB
0x126 DUP2
0x127 PUSH1 0x0
0x129 DUP8
0x12a PUSH2 0x61da
0x12d GAS
0x12e SUB
0x12f CALL
0x130 ISZERO
0x131 PUSH2 0x2
0x134 JUMPI
---
0x96: JUMPDEST 
0x97: V42 = 0x1
0x99: V43 = 0x0
0x9c: V44 = S[0x1]
0x9e: V45 = 0x100
0xa1: V46 = EXP 0x100 0x0
0xa3: V47 = DIV V44 0x1
0xa4: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xba: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xd0: V52 = 0x70a08231
0xd5: V53 = ADDRESS
0xd6: V54 = 0x40
0xd8: V55 = M[0x40]
0xda: V56 = 0x100000000000000000000000000000000000000000000000000000000
0xf8: V57 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xfa: M[V55] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xfb: V58 = 0x4
0xfd: V59 = ADD 0x4 V55
0x100: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x117: M[V59] = V61
0x118: V62 = 0x20
0x11a: V63 = ADD 0x20 V59
0x11e: V64 = 0x20
0x120: V65 = 0x40
0x122: V66 = M[0x40]
0x125: V67 = SUB V63 V66
0x127: V68 = 0x0
0x12a: V69 = 0x61da
0x12d: V70 = GAS
0x12e: V71 = SUB V70 0x61da
0x12f: V72 = CALL V71 V51 0x0 V66 V67 V66 0x20
0x130: V73 = ISZERO V72
0x131: V74 = 0x2
0x134: THROWI V73
---
Entry stack: [V8, 0x24d, V36, 0x0, 0x0]
Stack pops: 0
Stack additions: [V51, 0x70a08231, V63]
Exit stack: [V8, 0x24d, V36, 0x0, 0x0, V51, 0x70a08231, V63]

================================

Block 0x135
[0x135:0x14c]
---
Predecessors: [0x96]
Successors: [0x14d, 0x151]
---
0x135 POP
0x136 POP
0x137 POP
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c MLOAD
0x13d SWAP1
0x13e PUSH1 0x20
0x140 ADD
0x141 POP
0x142 SWAP2
0x143 POP
0x144 PUSH1 0x0
0x146 DUP3
0x147 EQ
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x138: V75 = 0x40
0x13a: V76 = M[0x40]
0x13c: V77 = M[V76]
0x13e: V78 = 0x20
0x140: V79 = ADD 0x20 V76
0x144: V80 = 0x0
0x147: V81 = EQ V77 0x0
0x148: V82 = ISZERO V81
0x149: V83 = 0x151
0x14c: JUMPI 0x151 V82
---
Entry stack: [V8, 0x24d, V36, 0x0, 0x0, V51, 0x70a08231, V63]
Stack pops: 5
Stack additions: [V77, S3]
Exit stack: [V8, 0x24d, V36, V77, 0x0]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x135]
Successors: []
---
0x14d PUSH2 0x2
0x150 JUMP
---
0x14d: V84 = 0x2
0x150: THROW 
---
Entry stack: [V8, 0x24d, V36, V77, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x24d, V36, V77, 0x0]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0x135]
Successors: [0x15a, 0x19e]
---
0x151 JUMPDEST
0x152 DUP2
0x153 DUP4
0x154 GT
0x155 ISZERO
0x156 PUSH2 0x19e
0x159 JUMPI
---
0x151: JUMPDEST 
0x154: V85 = GT V36 V77
0x155: V86 = ISZERO V85
0x156: V87 = 0x19e
0x159: JUMPI 0x19e V86
---
Entry stack: [V8, 0x24d, V36, V77, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0x24d, V36, V77, 0x0]

================================

Block 0x15a
[0x15a:0x19d]
---
Predecessors: [0x151]
Successors: [0x19e]
---
0x15a DUP2
0x15b SWAP3
0x15c POP
0x15d DUP3
0x15e POP
0x15f PUSH1 0x2
0x161 PUSH1 0x0
0x163 POP
0x164 SLOAD
0x165 DUP4
0x166 MUL
0x167 CALLVALUE
0x168 SUB
0x169 SWAP1
0x16a POP
0x16b CALLER
0x16c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181 AND
0x182 PUSH1 0x0
0x184 DUP3
0x185 PUSH1 0x40
0x187 MLOAD
0x188 DUP1
0x189 SWAP1
0x18a POP
0x18b PUSH1 0x0
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 DUP4
0x192 SUB
0x193 DUP2
0x194 DUP6
0x195 DUP9
0x196 DUP9
0x197 CALL
0x198 SWAP4
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d POP
---
0x15f: V88 = 0x2
0x161: V89 = 0x0
0x164: V90 = S[0x2]
0x166: V91 = MUL V77 V90
0x167: V92 = CALLVALUE
0x168: V93 = SUB V92 V91
0x16b: V94 = CALLER
0x16c: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x181: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x182: V97 = 0x0
0x185: V98 = 0x40
0x187: V99 = M[0x40]
0x18b: V100 = 0x0
0x18d: V101 = 0x40
0x18f: V102 = M[0x40]
0x192: V103 = SUB V99 V102
0x197: V104 = CALL 0x0 V96 V93 V102 V103 V102 0x0
---
Entry stack: [V8, 0x24d, V36, V77, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V93]
Exit stack: [V8, 0x24d, V77, V77, V93]

================================

Block 0x19e
[0x19e:0x244]
---
Predecessors: [0x151, 0x15a]
Successors: [0x245]
---
0x19e JUMPDEST
0x19f PUSH1 0x1
0x1a1 PUSH1 0x0
0x1a3 SWAP1
0x1a4 SLOAD
0x1a5 SWAP1
0x1a6 PUSH2 0x100
0x1a9 EXP
0x1aa SWAP1
0x1ab DIV
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 PUSH4 0xa9059cbb
0x1dd CALLER
0x1de DUP6
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP4
0x1e3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x201 MUL
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x4
0x206 ADD
0x207 DUP1
0x208 DUP4
0x209 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21e AND
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 DUP3
0x225 DUP2
0x226 MSTORE
0x227 PUSH1 0x20
0x229 ADD
0x22a SWAP3
0x22b POP
0x22c POP
0x22d POP
0x22e PUSH1 0x0
0x230 PUSH1 0x40
0x232 MLOAD
0x233 DUP1
0x234 DUP4
0x235 SUB
0x236 DUP2
0x237 PUSH1 0x0
0x239 DUP8
0x23a PUSH2 0x61da
0x23d GAS
0x23e SUB
0x23f CALL
0x240 ISZERO
0x241 PUSH2 0x2
0x244 JUMPI
---
0x19e: JUMPDEST 
0x19f: V105 = 0x1
0x1a1: V106 = 0x0
0x1a4: V107 = S[0x1]
0x1a6: V108 = 0x100
0x1a9: V109 = EXP 0x100 0x0
0x1ab: V110 = DIV V107 0x1
0x1ac: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1c2: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1d8: V115 = 0xa9059cbb
0x1dd: V116 = CALLER
0x1df: V117 = 0x40
0x1e1: V118 = M[0x40]
0x1e3: V119 = 0x100000000000000000000000000000000000000000000000000000000
0x201: V120 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x203: M[V118] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x204: V121 = 0x4
0x206: V122 = ADD 0x4 V118
0x209: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x220: M[V122] = V124
0x221: V125 = 0x20
0x223: V126 = ADD 0x20 V122
0x226: M[V126] = S2
0x227: V127 = 0x20
0x229: V128 = ADD 0x20 V126
0x22e: V129 = 0x0
0x230: V130 = 0x40
0x232: V131 = M[0x40]
0x235: V132 = SUB V128 V131
0x237: V133 = 0x0
0x23a: V134 = 0x61da
0x23d: V135 = GAS
0x23e: V136 = SUB V135 0x61da
0x23f: V137 = CALL V136 V114 0x0 V131 V132 V131 0x0
0x240: V138 = ISZERO V137
0x241: V139 = 0x2
0x244: THROWI V138
---
Entry stack: [V8, 0x24d, S2, V77, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V114, 0xa9059cbb, V128]
Exit stack: [V8, 0x24d, S2, V77, S0, V114, 0xa9059cbb, V128]

================================

Block 0x245
[0x245:0x247]
---
Predecessors: [0x19e]
Successors: [0x248]
---
0x245 POP
0x246 POP
0x247 POP
---
0x245: NOP 
---
Entry stack: [V8, 0x24d, S5, V77, S3, V114, 0xa9059cbb, V128]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x24d, S5, V77, S3]

================================

Block 0x248
[0x248:0x24c]
---
Predecessors: [0x245]
Successors: [0x24d]
---
0x248 JUMPDEST
0x249 POP
0x24a POP
0x24b POP
0x24c JUMP
---
0x248: JUMPDEST 
0x24c: JUMP 0x24d
---
Entry stack: [V8, 0x24d, S2, V77, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V8]

================================

Block 0x24d
[0x24d:0x24e]
---
Predecessors: [0x248]
Successors: []
---
0x24d JUMPDEST
0x24e STOP
---
0x24d: JUMPDEST 
0x24e: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x24f
[0x24f:0x25b]
---
Predecessors: [0xb]
Successors: [0x3f8]
---
0x24f JUMPDEST
0x250 PUSH2 0x25c
0x253 PUSH1 0x4
0x255 DUP1
0x256 POP
0x257 POP
0x258 PUSH2 0x3f8
0x25b JUMP
---
0x24f: JUMPDEST 
0x250: V140 = 0x25c
0x253: V141 = 0x4
0x258: V142 = 0x3f8
0x25b: JUMP 0x3f8
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x25c]
Exit stack: [V8, 0x25c]

================================

Block 0x25c
[0x25c:0x287]
---
Predecessors: [0x3f8]
Successors: []
---
0x25c JUMPDEST
0x25d PUSH1 0x40
0x25f MLOAD
0x260 DUP1
0x261 DUP3
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP2
0x27e POP
0x27f POP
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 SWAP2
0x285 SUB
0x286 SWAP1
0x287 RETURN
---
0x25c: JUMPDEST 
0x25d: V143 = 0x40
0x25f: V144 = M[0x40]
0x262: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x279: M[V144] = V146
0x27a: V147 = 0x20
0x27c: V148 = ADD 0x20 V144
0x280: V149 = 0x40
0x282: V150 = M[0x40]
0x285: V151 = SUB V148 V150
0x287: RETURN V150 V151
---
Entry stack: [V8, 0x25c, V245]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x25c]

================================

Block 0x288
[0x288:0x294]
---
Predecessors: [0x39]
Successors: [0x347]
---
0x288 JUMPDEST
0x289 PUSH2 0x295
0x28c PUSH1 0x4
0x28e DUP1
0x28f POP
0x290 POP
0x291 PUSH2 0x347
0x294 JUMP
---
0x288: JUMPDEST 
0x289: V152 = 0x295
0x28c: V153 = 0x4
0x291: V154 = 0x347
0x294: JUMP 0x347
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x295]
Exit stack: [V8, 0x295]

================================

Block 0x295
[0x295:0x2c0]
---
Predecessors: [0x347]
Successors: []
---
0x295 JUMPDEST
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a DUP3
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP2
0x2b7 POP
0x2b8 POP
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd SWAP2
0x2be SUB
0x2bf SWAP1
0x2c0 RETURN
---
0x295: JUMPDEST 
0x296: V155 = 0x40
0x298: V156 = M[0x40]
0x29b: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x2b2: M[V156] = V158
0x2b3: V159 = 0x20
0x2b5: V160 = ADD 0x20 V156
0x2b9: V161 = 0x40
0x2bb: V162 = M[0x40]
0x2be: V163 = SUB V160 V162
0x2c0: RETURN V162 V163
---
Entry stack: [V8, 0x295, V208]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x295]

================================

Block 0x2c1
[0x2c1:0x2df]
---
Predecessors: [0x44]
Successors: [0x510]
---
0x2c1 JUMPDEST
0x2c2 PUSH2 0x2e0
0x2c5 PUSH1 0x4
0x2c7 DUP1
0x2c8 DUP1
0x2c9 CALLDATALOAD
0x2ca SWAP1
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce SWAP1
0x2cf SWAP2
0x2d0 SWAP1
0x2d1 DUP1
0x2d2 CALLDATALOAD
0x2d3 SWAP1
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 SWAP1
0x2d8 SWAP2
0x2d9 SWAP1
0x2da POP
0x2db POP
0x2dc PUSH2 0x510
0x2df JUMP
---
0x2c1: JUMPDEST 
0x2c2: V164 = 0x2e0
0x2c5: V165 = 0x4
0x2c9: V166 = CALLDATALOAD 0x4
0x2cb: V167 = 0x20
0x2cd: V168 = ADD 0x20 0x4
0x2d2: V169 = CALLDATALOAD 0x24
0x2d4: V170 = 0x20
0x2d6: V171 = ADD 0x20 0x24
0x2dc: V172 = 0x510
0x2df: JUMP 0x510
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2e0, V166, V169]
Exit stack: [V8, 0x2e0, V166, V169]

================================

Block 0x2e0
[0x2e0:0x2e1]
---
Predecessors: [0x5c1]
Successors: []
---
0x2e0 JUMPDEST
0x2e1 STOP
---
0x2e0: JUMPDEST 
0x2e1: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x2e2
[0x2e2:0x2ee]
---
Predecessors: [0x4f]
Successors: [0x41e]
---
0x2e2 JUMPDEST
0x2e3 PUSH2 0x2ef
0x2e6 PUSH1 0x4
0x2e8 DUP1
0x2e9 POP
0x2ea POP
0x2eb PUSH2 0x41e
0x2ee JUMP
---
0x2e2: JUMPDEST 
0x2e3: V173 = 0x2ef
0x2e6: V174 = 0x4
0x2eb: V175 = 0x41e
0x2ee: JUMP 0x41e
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2ef]
Exit stack: [V8, 0x2ef]

================================

Block 0x2ef
[0x2ef:0x304]
---
Predecessors: [0x41e]
Successors: []
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 DUP3
0x2f5 DUP2
0x2f6 MSTORE
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa SWAP2
0x2fb POP
0x2fc POP
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 DUP1
0x301 SWAP2
0x302 SUB
0x303 SWAP1
0x304 RETURN
---
0x2ef: JUMPDEST 
0x2f0: V176 = 0x40
0x2f2: V177 = M[0x40]
0x2f6: M[V177] = V248
0x2f7: V178 = 0x20
0x2f9: V179 = ADD 0x20 V177
0x2fd: V180 = 0x40
0x2ff: V181 = M[0x40]
0x302: V182 = SUB V179 V181
0x304: RETURN V181 V182
---
Entry stack: [V8, 0x2ef, V248]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x2ef]

================================

Block 0x305
[0x305:0x32c]
---
Predecessors: [0x5a]
Successors: [0x427]
---
0x305 JUMPDEST
0x306 PUSH2 0x32d
0x309 PUSH1 0x4
0x30b DUP1
0x30c DUP1
0x30d CALLDATALOAD
0x30e SWAP1
0x30f PUSH1 0x20
0x311 ADD
0x312 SWAP1
0x313 SWAP2
0x314 SWAP1
0x315 DUP1
0x316 CALLDATALOAD
0x317 SWAP1
0x318 PUSH1 0x20
0x31a ADD
0x31b SWAP1
0x31c SWAP2
0x31d SWAP1
0x31e DUP1
0x31f CALLDATALOAD
0x320 SWAP1
0x321 PUSH1 0x20
0x323 ADD
0x324 SWAP1
0x325 SWAP2
0x326 SWAP1
0x327 POP
0x328 POP
0x329 PUSH2 0x427
0x32c JUMP
---
0x305: JUMPDEST 
0x306: V183 = 0x32d
0x309: V184 = 0x4
0x30d: V185 = CALLDATALOAD 0x4
0x30f: V186 = 0x20
0x311: V187 = ADD 0x20 0x4
0x316: V188 = CALLDATALOAD 0x24
0x318: V189 = 0x20
0x31a: V190 = ADD 0x20 0x24
0x31f: V191 = CALLDATALOAD 0x44
0x321: V192 = 0x20
0x323: V193 = ADD 0x20 0x44
0x329: V194 = 0x427
0x32c: JUMP 0x427
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x32d, V185, V188, V191]
Exit stack: [V8, 0x32d, V185, V188, V191]

================================

Block 0x32d
[0x32d:0x32e]
---
Predecessors: [0x50b]
Successors: []
---
0x32d JUMPDEST
0x32e STOP
---
0x32d: JUMPDEST 
0x32e: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x32f
[0x32f:0x344]
---
Predecessors: [0x65]
Successors: [0x36d]
---
0x32f JUMPDEST
0x330 PUSH2 0x345
0x333 PUSH1 0x4
0x335 DUP1
0x336 DUP1
0x337 CALLDATALOAD
0x338 SWAP1
0x339 PUSH1 0x20
0x33b ADD
0x33c SWAP1
0x33d SWAP2
0x33e SWAP1
0x33f POP
0x340 POP
0x341 PUSH2 0x36d
0x344 JUMP
---
0x32f: JUMPDEST 
0x330: V195 = 0x345
0x333: V196 = 0x4
0x337: V197 = CALLDATALOAD 0x4
0x339: V198 = 0x20
0x33b: V199 = ADD 0x20 0x4
0x341: V200 = 0x36d
0x344: JUMP 0x36d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x345, V197]
Exit stack: [V8, 0x345, V197]

================================

Block 0x345
[0x345:0x346]
---
Predecessors: [0x3f5]
Successors: []
---
0x345 JUMPDEST
0x346 STOP
---
0x345: JUMPDEST 
0x346: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x347
[0x347:0x36c]
---
Predecessors: [0x288]
Successors: [0x295]
---
0x347 JUMPDEST
0x348 PUSH1 0x0
0x34a PUSH1 0x0
0x34c SWAP1
0x34d SLOAD
0x34e SWAP1
0x34f PUSH2 0x100
0x352 EXP
0x353 SWAP1
0x354 DIV
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b DUP2
0x36c JUMP
---
0x347: JUMPDEST 
0x348: V201 = 0x0
0x34a: V202 = 0x0
0x34d: V203 = S[0x0]
0x34f: V204 = 0x100
0x352: V205 = EXP 0x100 0x0
0x354: V206 = DIV V203 0x1
0x355: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x36c: JUMP 0x295
---
Entry stack: [V8, 0x295]
Stack pops: 1
Stack additions: [S0, V208]
Exit stack: [V8, 0x295, V208]

================================

Block 0x36d
[0x36d:0x3c4]
---
Predecessors: [0x32f]
Successors: [0x3c5, 0x3c9]
---
0x36d JUMPDEST
0x36e PUSH1 0x0
0x370 PUSH1 0x0
0x372 SWAP1
0x373 SLOAD
0x374 SWAP1
0x375 PUSH2 0x100
0x378 EXP
0x379 SWAP1
0x37a DIV
0x37b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x390 AND
0x391 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a6 AND
0x3a7 CALLER
0x3a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bd AND
0x3be EQ
0x3bf ISZERO
0x3c0 ISZERO
0x3c1 PUSH2 0x3c9
0x3c4 JUMPI
---
0x36d: JUMPDEST 
0x36e: V209 = 0x0
0x370: V210 = 0x0
0x373: V211 = S[0x0]
0x375: V212 = 0x100
0x378: V213 = EXP 0x100 0x0
0x37a: V214 = DIV V211 0x1
0x37b: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x390: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x391: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x3a7: V219 = CALLER
0x3a8: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3be: V222 = EQ V221 V218
0x3bf: V223 = ISZERO V222
0x3c0: V224 = ISZERO V223
0x3c1: V225 = 0x3c9
0x3c4: JUMPI 0x3c9 V224
---
Entry stack: [V8, 0x345, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x345, V197]

================================

Block 0x3c5
[0x3c5:0x3c8]
---
Predecessors: [0x36d]
Successors: []
---
0x3c5 PUSH2 0x2
0x3c8 JUMP
---
0x3c5: V226 = 0x2
0x3c8: THROW 
---
Entry stack: [V8, 0x345, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x345, V197]

================================

Block 0x3c9
[0x3c9:0x3f4]
---
Predecessors: [0x36d]
Successors: [0x3f5]
---
0x3c9 JUMPDEST
0x3ca DUP1
0x3cb PUSH1 0x0
0x3cd PUSH1 0x0
0x3cf PUSH2 0x100
0x3d2 EXP
0x3d3 DUP2
0x3d4 SLOAD
0x3d5 DUP2
0x3d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3eb MUL
0x3ec NOT
0x3ed AND
0x3ee SWAP1
0x3ef DUP4
0x3f0 MUL
0x3f1 OR
0x3f2 SWAP1
0x3f3 SSTORE
0x3f4 POP
---
0x3c9: JUMPDEST 
0x3cb: V227 = 0x0
0x3cd: V228 = 0x0
0x3cf: V229 = 0x100
0x3d2: V230 = EXP 0x100 0x0
0x3d4: V231 = S[0x0]
0x3d6: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V233 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3ec: V234 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V235 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V231
0x3f0: V236 = MUL V197 0x1
0x3f1: V237 = OR V236 V235
0x3f3: S[0x0] = V237
---
Entry stack: [V8, 0x345, V197]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x345, V197]

================================

Block 0x3f5
[0x3f5:0x3f7]
---
Predecessors: [0x3c9]
Successors: [0x345]
---
0x3f5 JUMPDEST
0x3f6 POP
0x3f7 JUMP
---
0x3f5: JUMPDEST 
0x3f7: JUMP 0x345
---
Entry stack: [V8, 0x345, V197]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x3f8
[0x3f8:0x41d]
---
Predecessors: [0x24f]
Successors: [0x25c]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x1
0x3fb PUSH1 0x0
0x3fd SWAP1
0x3fe SLOAD
0x3ff SWAP1
0x400 PUSH2 0x100
0x403 EXP
0x404 SWAP1
0x405 DIV
0x406 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41b AND
0x41c DUP2
0x41d JUMP
---
0x3f8: JUMPDEST 
0x3f9: V238 = 0x1
0x3fb: V239 = 0x0
0x3fe: V240 = S[0x1]
0x400: V241 = 0x100
0x403: V242 = EXP 0x100 0x0
0x405: V243 = DIV V240 0x1
0x406: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x41d: JUMP 0x25c
---
Entry stack: [V8, 0x25c]
Stack pops: 1
Stack additions: [S0, V245]
Exit stack: [V8, 0x25c, V245]

================================

Block 0x41e
[0x41e:0x426]
---
Predecessors: [0x2e2]
Successors: [0x2ef]
---
0x41e JUMPDEST
0x41f PUSH1 0x2
0x421 PUSH1 0x0
0x423 POP
0x424 SLOAD
0x425 DUP2
0x426 JUMP
---
0x41e: JUMPDEST 
0x41f: V246 = 0x2
0x421: V247 = 0x0
0x424: V248 = S[0x2]
0x426: JUMP 0x2ef
---
Entry stack: [V8, 0x2ef]
Stack pops: 1
Stack additions: [S0, V248]
Exit stack: [V8, 0x2ef, V248]

================================

Block 0x427
[0x427:0x47e]
---
Predecessors: [0x305]
Successors: [0x47f, 0x483]
---
0x427 JUMPDEST
0x428 PUSH1 0x0
0x42a PUSH1 0x0
0x42c SWAP1
0x42d SLOAD
0x42e SWAP1
0x42f PUSH2 0x100
0x432 EXP
0x433 SWAP1
0x434 DIV
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 CALLER
0x462 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x477 AND
0x478 EQ
0x479 ISZERO
0x47a ISZERO
0x47b PUSH2 0x483
0x47e JUMPI
---
0x427: JUMPDEST 
0x428: V249 = 0x0
0x42a: V250 = 0x0
0x42d: V251 = S[0x0]
0x42f: V252 = 0x100
0x432: V253 = EXP 0x100 0x0
0x434: V254 = DIV V251 0x1
0x435: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x44b: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x461: V259 = CALLER
0x462: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x477: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x478: V262 = EQ V261 V258
0x479: V263 = ISZERO V262
0x47a: V264 = ISZERO V263
0x47b: V265 = 0x483
0x47e: JUMPI 0x483 V264
---
Entry stack: [V8, 0x32d, V185, V188, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x32d, V185, V188, V191]

================================

Block 0x47f
[0x47f:0x482]
---
Predecessors: [0x427]
Successors: []
---
0x47f PUSH2 0x2
0x482 JUMP
---
0x47f: V266 = 0x2
0x482: THROW 
---
Entry stack: [V8, 0x32d, V185, V188, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x32d, V185, V188, V191]

================================

Block 0x483
[0x483:0x507]
---
Predecessors: [0x427]
Successors: [0x508]
---
0x483 JUMPDEST
0x484 DUP3
0x485 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49a AND
0x49b PUSH4 0xa9059cbb
0x4a0 DUP4
0x4a1 DUP4
0x4a2 PUSH1 0x40
0x4a4 MLOAD
0x4a5 DUP4
0x4a6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4c4 MUL
0x4c5 DUP2
0x4c6 MSTORE
0x4c7 PUSH1 0x4
0x4c9 ADD
0x4ca DUP1
0x4cb DUP4
0x4cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e1 AND
0x4e2 DUP2
0x4e3 MSTORE
0x4e4 PUSH1 0x20
0x4e6 ADD
0x4e7 DUP3
0x4e8 DUP2
0x4e9 MSTORE
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed SWAP3
0x4ee POP
0x4ef POP
0x4f0 POP
0x4f1 PUSH1 0x0
0x4f3 PUSH1 0x40
0x4f5 MLOAD
0x4f6 DUP1
0x4f7 DUP4
0x4f8 SUB
0x4f9 DUP2
0x4fa PUSH1 0x0
0x4fc DUP8
0x4fd PUSH2 0x61da
0x500 GAS
0x501 SUB
0x502 CALL
0x503 ISZERO
0x504 PUSH2 0x2
0x507 JUMPI
---
0x483: JUMPDEST 
0x485: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x49b: V269 = 0xa9059cbb
0x4a2: V270 = 0x40
0x4a4: V271 = M[0x40]
0x4a6: V272 = 0x100000000000000000000000000000000000000000000000000000000
0x4c4: V273 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x4c6: M[V271] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4c7: V274 = 0x4
0x4c9: V275 = ADD 0x4 V271
0x4cc: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x4e3: M[V275] = V277
0x4e4: V278 = 0x20
0x4e6: V279 = ADD 0x20 V275
0x4e9: M[V279] = V191
0x4ea: V280 = 0x20
0x4ec: V281 = ADD 0x20 V279
0x4f1: V282 = 0x0
0x4f3: V283 = 0x40
0x4f5: V284 = M[0x40]
0x4f8: V285 = SUB V281 V284
0x4fa: V286 = 0x0
0x4fd: V287 = 0x61da
0x500: V288 = GAS
0x501: V289 = SUB V288 0x61da
0x502: V290 = CALL V289 V268 0x0 V284 V285 V284 0x0
0x503: V291 = ISZERO V290
0x504: V292 = 0x2
0x507: THROWI V291
---
Entry stack: [V8, 0x32d, V185, V188, V191]
Stack pops: 3
Stack additions: [S2, S1, S0, V268, 0xa9059cbb, V281]
Exit stack: [V8, 0x32d, V185, V188, V191, V268, 0xa9059cbb, V281]

================================

Block 0x508
[0x508:0x50a]
---
Predecessors: [0x483]
Successors: [0x50b]
---
0x508 POP
0x509 POP
0x50a POP
---
0x508: NOP 
---
Entry stack: [V8, 0x32d, V185, V188, V191, V268, 0xa9059cbb, V281]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x32d, V185, V188, V191]

================================

Block 0x50b
[0x50b:0x50f]
---
Predecessors: [0x508]
Successors: [0x32d]
---
0x50b JUMPDEST
0x50c POP
0x50d POP
0x50e POP
0x50f JUMP
---
0x50b: JUMPDEST 
0x50f: JUMP 0x32d
---
Entry stack: [V8, 0x32d, V185, V188, V191]
Stack pops: 4
Stack additions: []
Exit stack: [V8]

================================

Block 0x510
[0x510:0x567]
---
Predecessors: [0x2c1]
Successors: [0x568, 0x56c]
---
0x510 JUMPDEST
0x511 PUSH1 0x0
0x513 PUSH1 0x0
0x515 SWAP1
0x516 SLOAD
0x517 SWAP1
0x518 PUSH2 0x100
0x51b EXP
0x51c SWAP1
0x51d DIV
0x51e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x533 AND
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a CALLER
0x54b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x560 AND
0x561 EQ
0x562 ISZERO
0x563 ISZERO
0x564 PUSH2 0x56c
0x567 JUMPI
---
0x510: JUMPDEST 
0x511: V293 = 0x0
0x513: V294 = 0x0
0x516: V295 = S[0x0]
0x518: V296 = 0x100
0x51b: V297 = EXP 0x100 0x0
0x51d: V298 = DIV V295 0x1
0x51e: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x533: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x534: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x54a: V303 = CALLER
0x54b: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x560: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x561: V306 = EQ V305 V302
0x562: V307 = ISZERO V306
0x563: V308 = ISZERO V307
0x564: V309 = 0x56c
0x567: JUMPI 0x56c V308
---
Entry stack: [V8, 0x2e0, V166, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e0, V166, V169]

================================

Block 0x568
[0x568:0x56b]
---
Predecessors: [0x510]
Successors: []
---
0x568 PUSH2 0x2
0x56b JUMP
---
0x568: V310 = 0x2
0x56b: THROW 
---
Entry stack: [V8, 0x2e0, V166, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e0, V166, V169]

================================

Block 0x56c
[0x56c:0x58c]
---
Predecessors: [0x510]
Successors: [0x58d, 0x5c0]
---
0x56c JUMPDEST
0x56d DUP1
0x56e ADDRESS
0x56f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x584 AND
0x585 BALANCE
0x586 LT
0x587 ISZERO
0x588 ISZERO
0x589 PUSH2 0x5c0
0x58c JUMPI
---
0x56c: JUMPDEST 
0x56e: V311 = ADDRESS
0x56f: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x584: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x585: V314 = BALANCE V313
0x586: V315 = LT V314 V169
0x587: V316 = ISZERO V315
0x588: V317 = ISZERO V316
0x589: V318 = 0x5c0
0x58c: JUMPI 0x5c0 V317
---
Entry stack: [V8, 0x2e0, V166, V169]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x2e0, V166, V169]

================================

Block 0x58d
[0x58d:0x5bf]
---
Predecessors: [0x56c]
Successors: [0x5c0]
---
0x58d DUP2
0x58e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a3 AND
0x5a4 PUSH1 0x0
0x5a6 DUP3
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa DUP1
0x5ab SWAP1
0x5ac POP
0x5ad PUSH1 0x0
0x5af PUSH1 0x40
0x5b1 MLOAD
0x5b2 DUP1
0x5b3 DUP4
0x5b4 SUB
0x5b5 DUP2
0x5b6 DUP6
0x5b7 DUP9
0x5b8 DUP9
0x5b9 CALL
0x5ba SWAP4
0x5bb POP
0x5bc POP
0x5bd POP
0x5be POP
0x5bf POP
---
0x58e: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a3: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x5a4: V321 = 0x0
0x5a7: V322 = 0x40
0x5a9: V323 = M[0x40]
0x5ad: V324 = 0x0
0x5af: V325 = 0x40
0x5b1: V326 = M[0x40]
0x5b4: V327 = SUB V323 V326
0x5b9: V328 = CALL 0x0 V320 V169 V326 V327 V326 0x0
---
Entry stack: [V8, 0x2e0, V166, V169]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x2e0, V166, V169]

================================

Block 0x5c0
[0x5c0:0x5c0]
---
Predecessors: [0x56c, 0x58d]
Successors: [0x5c1]
---
0x5c0 JUMPDEST
---
0x5c0: JUMPDEST 
---
Entry stack: [V8, 0x2e0, V166, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x2e0, V166, V169]

================================

Block 0x5c1
[0x5c1:0x5c4]
---
Predecessors: [0x5c0]
Successors: [0x2e0]
---
0x5c1 JUMPDEST
0x5c2 POP
0x5c3 POP
0x5c4 JUMP
---
0x5c1: JUMPDEST 
0x5c4: JUMP 0x2e0
---
Entry stack: [V8, 0x2e0, V166, V169]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x38d52e0f
Entry block: 0x24f
Exit block: 0x25c
Body: 0x24f, 0x25c, 0x3f8

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x288
Exit block: 0x295
Body: 0x288, 0x295, 0x347

Function 2:
Public function signature: 0x97fcb54e
Entry block: 0x2c1
Exit block: 0x2e0
Body: 0x2c1, 0x2e0, 0x510, 0x568, 0x56c, 0x58d, 0x5c0, 0x5c1

Function 3:
Public function signature: 0xa035b1fe
Entry block: 0x2e2
Exit block: 0x2ef
Body: 0x2e2, 0x2ef, 0x41e

Function 4:
Public function signature: 0xe7dafdb6
Entry block: 0x305
Exit block: 0x32d
Body: 0x305, 0x32d, 0x427, 0x47f, 0x483, 0x508, 0x50b

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x32f
Exit block: 0x345
Body: 0x32f, 0x345, 0x36d, 0x3c5, 0x3c9, 0x3f5

Function 6:
Public fallback function
Entry block: 0x70
Exit block: 0x24d
Body: 0x70, 0x74, 0x78, 0x92, 0x96, 0x135, 0x14d, 0x151, 0x15a, 0x19e, 0x245, 0x248, 0x24d

