Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x40]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x40
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x40
0xa: JUMPI 0x40 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x5b]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0xc08bf88
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x5b
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0xc08bf88
0x1a: V12 = EQ V10 0xc08bf88
0x1b: V13 = 0x5b
0x1e: JUMPI 0x5b V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x6c]
---
0x1f DUP1
0x20 PUSH4 0x590e1ae3
0x25 EQ
0x26 PUSH2 0x6c
0x29 JUMPI
---
0x20: V14 = 0x590e1ae3
0x25: V15 = EQ 0x590e1ae3 V10
0x26: V16 = 0x6c
0x29: JUMPI 0x6c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x81]
---
0x2a DUP1
0x2b PUSH4 0xa9059cbb
0x30 EQ
0x31 PUSH2 0x81
0x34 JUMPI
---
0x2b: V17 = 0xa9059cbb
0x30: V18 = EQ 0xa9059cbb V10
0x31: V19 = 0x81
0x34: JUMPI 0x81 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x9a]
---
0x35 DUP1
0x36 PUSH4 0xe42c08f2
0x3b EQ
0x3c PUSH2 0x9a
0x3f JUMPI
---
0x36: V20 = 0xe42c08f2
0x3b: V21 = EQ 0xe42c08f2 V10
0x3c: V22 = 0x9a
0x3f: JUMPI 0x9a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x56]
---
Predecessors: [0x0, 0x35]
Successors: [0x57, 0xb4]
---
0x40 JUMPDEST
0x41 PUSH2 0xb2
0x44 CALLER
0x45 CALLVALUE
0x46 PUSH7 0x38d7ea4c68000
0x4e DUP2
0x4f MOD
0x50 PUSH1 0x0
0x52 EQ
0x53 PUSH2 0xb4
0x56 JUMPI
---
0x40: JUMPDEST 
0x41: V23 = 0xb2
0x44: V24 = CALLER
0x45: V25 = CALLVALUE
0x46: V26 = 0x38d7ea4c68000
0x4f: V27 = MOD V25 0x38d7ea4c68000
0x50: V28 = 0x0
0x52: V29 = EQ 0x0 V27
0x53: V30 = 0xb4
0x56: JUMPI 0xb4 V29
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2, V24, V25]
Exit stack: [V10, 0xb2, V24, V25]

================================

Block 0x57
[0x57:0x5a]
---
Predecessors: [0x40]
Successors: []
---
0x57 PUSH2 0x2
0x5a JUMP
---
0x57: V31 = 0x2
0x5a: THROW 
---
Entry stack: [V10, 0xb2, V24, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, V24, V25]

================================

Block 0x5b
[0x5b:0x67]
---
Predecessors: [0xb]
Successors: [0x68, 0x12c]
---
0x5b JUMPDEST
0x5c PUSH2 0xb2
0x5f PUSH1 0x0
0x61 CALLVALUE
0x62 GT
0x63 ISZERO
0x64 PUSH2 0x12c
0x67 JUMPI
---
0x5b: JUMPDEST 
0x5c: V32 = 0xb2
0x5f: V33 = 0x0
0x61: V34 = CALLVALUE
0x62: V35 = GT V34 0x0
0x63: V36 = ISZERO V35
0x64: V37 = 0x12c
0x67: JUMPI 0x12c V36
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2]
Exit stack: [V10, 0xb2]

================================

Block 0x68
[0x68:0x6b]
---
Predecessors: [0x5b]
Successors: []
---
0x68 PUSH2 0x2
0x6b JUMP
---
0x68: V38 = 0x2
0x6b: THROW 
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x6c
[0x6c:0x7c]
---
Predecessors: [0x1f]
Successors: [0x7d, 0x1db]
---
0x6c JUMPDEST
0x6d PUSH2 0xb2
0x70 PUSH1 0x0
0x72 PUSH1 0x0
0x74 PUSH1 0x0
0x76 CALLVALUE
0x77 GT
0x78 ISZERO
0x79 PUSH2 0x1db
0x7c JUMPI
---
0x6c: JUMPDEST 
0x6d: V39 = 0xb2
0x70: V40 = 0x0
0x72: V41 = 0x0
0x74: V42 = 0x0
0x76: V43 = CALLVALUE
0x77: V44 = GT V43 0x0
0x78: V45 = ISZERO V44
0x79: V46 = 0x1db
0x7c: JUMPI 0x1db V45
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2, 0x0, 0x0]
Exit stack: [V10, 0xb2, 0x0, 0x0]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x6c]
Successors: []
---
0x7d PUSH2 0x2
0x80 JUMP
---
0x7d: V47 = 0x2
0x80: THROW 
---
Entry stack: [V10, 0xb2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, 0x0, 0x0]

================================

Block 0x81
[0x81:0x95]
---
Predecessors: [0x2a]
Successors: [0x96, 0x2ce]
---
0x81 JUMPDEST
0x82 PUSH2 0xb2
0x85 PUSH1 0x4
0x87 CALLDATALOAD
0x88 PUSH1 0x24
0x8a CALLDATALOAD
0x8b PUSH1 0x0
0x8d PUSH1 0x0
0x8f CALLVALUE
0x90 GT
0x91 ISZERO
0x92 PUSH2 0x2ce
0x95 JUMPI
---
0x81: JUMPDEST 
0x82: V48 = 0xb2
0x85: V49 = 0x4
0x87: V50 = CALLDATALOAD 0x4
0x88: V51 = 0x24
0x8a: V52 = CALLDATALOAD 0x24
0x8b: V53 = 0x0
0x8d: V54 = 0x0
0x8f: V55 = CALLVALUE
0x90: V56 = GT V55 0x0
0x91: V57 = ISZERO V56
0x92: V58 = 0x2ce
0x95: JUMPI 0x2ce V57
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb2, V50, V52, 0x0]
Exit stack: [V10, 0xb2, V50, V52, 0x0]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x81]
Successors: []
---
0x96 PUSH2 0x2
0x99 JUMP
---
0x96: V59 = 0x2
0x99: THROW 
---
Entry stack: [V10, 0xb2, V50, V52, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, V50, V52, 0x0]

================================

Block 0x9a
[0x9a:0xb1]
---
Predecessors: [0x35]
Successors: [0x11a]
---
0x9a JUMPDEST
0x9b PUSH2 0x11a
0x9e PUSH1 0x4
0xa0 CALLDATALOAD
0xa1 PUSH1 0x0
0xa3 PUSH1 0x20
0xa5 DUP2
0xa6 SWAP1
0xa7 MSTORE
0xa8 SWAP1
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x40
0xad SWAP1
0xae SHA3
0xaf SLOAD
0xb0 DUP2
0xb1 JUMP
---
0x9a: JUMPDEST 
0x9b: V60 = 0x11a
0x9e: V61 = 0x4
0xa0: V62 = CALLDATALOAD 0x4
0xa1: V63 = 0x0
0xa3: V64 = 0x20
0xa7: M[0x20] = 0x0
0xaa: M[0x0] = V62
0xab: V65 = 0x40
0xae: V66 = SHA3 0x0 0x40
0xaf: V67 = S[V66]
0xb1: JUMP 0x11a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11a, V67]
Exit stack: [V10, 0x11a, V67]

================================

Block 0xb2
[0xb2:0xb3]
---
Predecessors: [0x116, 0x194, 0x25c]
Successors: []
---
0xb2 JUMPDEST
0xb3 STOP
---
0xb2: JUMPDEST 
0xb3: STOP 
---
Entry stack: [V10, 0xb2, V149, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, V149, S0]

================================

Block 0xb4
[0xb4:0x115]
---
Predecessors: [0x40]
Successors: [0x116]
---
0xb4 JUMPDEST
0xb5 PUSH1 0x1
0xb7 PUSH1 0xa0
0xb9 PUSH1 0x2
0xbb EXP
0xbc SUB
0xbd DUP3
0xbe AND
0xbf PUSH1 0x0
0xc1 DUP2
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 DUP2
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x40
0xcb SWAP2
0xcc DUP3
0xcd SWAP1
0xce SHA3
0xcf DUP1
0xd0 SLOAD
0xd1 PUSH7 0x38d7ea4c68000
0xd9 DUP7
0xda DIV
0xdb ADD
0xdc SWAP1
0xdd SSTORE
0xde DUP2
0xdf MLOAD
0xe0 DUP5
0xe1 DUP2
0xe2 MSTORE
0xe3 SWAP1
0xe4 DUP2
0xe5 ADD
0xe6 SWAP3
0xe7 SWAP1
0xe8 SWAP3
0xe9 MSTORE
0xea DUP1
0xeb MLOAD
0xec PUSH32 0xc848a0bc6fc10f63d456eae535b952f8768bfd21d409b4933f8032cce0432ea4
0x10d SWAP3
0x10e DUP2
0x10f SWAP1
0x110 SUB
0x111 SWAP1
0x112 SWAP2
0x113 ADD
0x114 SWAP1
0x115 LOG1
---
0xb4: JUMPDEST 
0xb5: V68 = 0x1
0xb7: V69 = 0xa0
0xb9: V70 = 0x2
0xbb: V71 = EXP 0x2 0xa0
0xbc: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V73 = AND V24 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V74 = 0x0
0xc3: M[0x0] = V73
0xc4: V75 = 0x20
0xc8: M[0x20] = 0x0
0xc9: V76 = 0x40
0xce: V77 = SHA3 0x0 0x40
0xd0: V78 = S[V77]
0xd1: V79 = 0x38d7ea4c68000
0xda: V80 = DIV V25 0x38d7ea4c68000
0xdb: V81 = ADD V80 V78
0xdd: S[V77] = V81
0xdf: V82 = M[0x40]
0xe2: M[V82] = V25
0xe5: V83 = ADD V82 0x20
0xe9: M[V83] = V73
0xeb: V84 = M[0x40]
0xec: V85 = 0xc848a0bc6fc10f63d456eae535b952f8768bfd21d409b4933f8032cce0432ea4
0x110: V86 = SUB V82 V84
0x113: V87 = ADD 0x40 V86
0x115: LOG V84 V87 0xc848a0bc6fc10f63d456eae535b952f8768bfd21d409b4933f8032cce0432ea4
---
Entry stack: [V10, 0xb2, V24, V25]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xb2, V24, V25]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0xb4, 0x205]
Successors: [0xb2, 0x194]
---
0x116 JUMPDEST
0x117 POP
0x118 POP
0x119 JUMP
---
0x116: JUMPDEST 
0x119: JUMP {0xb2, 0x194}
---
Entry stack: [V10, 0xb2, V149, S3, {0xb2, 0x194}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xb2, V149, S3]

================================

Block 0x11a
[0x11a:0x12b]
---
Predecessors: [0x9a]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d DUP1
0x11e MLOAD
0x11f SWAP2
0x120 DUP3
0x121 MSTORE
0x122 MLOAD
0x123 SWAP1
0x124 DUP2
0x125 SWAP1
0x126 SUB
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP1
0x12b RETURN
---
0x11a: JUMPDEST 
0x11b: V88 = 0x40
0x11e: V89 = M[0x40]
0x121: M[V89] = V67
0x122: V90 = M[0x40]
0x126: V91 = SUB V89 V90
0x127: V92 = 0x20
0x129: V93 = ADD 0x20 V91
0x12b: RETURN V90 V93
---
Entry stack: [V10, 0x11a, V67]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11a]

================================

Block 0x12c
[0x12c:0x144]
---
Predecessors: [0x5b]
Successors: [0x145, 0x149]
---
0x12c JUMPDEST
0x12d PUSH1 0x1
0x12f SLOAD
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 SWAP1
0x139 DUP2
0x13a AND
0x13b CALLER
0x13c SWAP2
0x13d SWAP1
0x13e SWAP2
0x13f AND
0x140 EQ
0x141 PUSH2 0x149
0x144 JUMPI
---
0x12c: JUMPDEST 
0x12d: V94 = 0x1
0x12f: V95 = S[0x1]
0x130: V96 = 0x1
0x132: V97 = 0xa0
0x134: V98 = 0x2
0x136: V99 = EXP 0x2 0xa0
0x137: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x13b: V102 = CALLER
0x13f: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x140: V104 = EQ V103 V101
0x141: V105 = 0x149
0x144: JUMPI 0x149 V104
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x12c]
Successors: []
---
0x145 PUSH2 0x2
0x148 JUMP
---
0x145: V106 = 0x2
0x148: THROW 
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x149
[0x149:0x193]
---
Predecessors: [0x12c]
Successors: []
---
0x149 JUMPDEST
0x14a PUSH1 0x40
0x14c DUP1
0x14d MLOAD
0x14e ADDRESS
0x14f PUSH1 0x1
0x151 PUSH1 0xa0
0x153 PUSH1 0x2
0x155 EXP
0x156 SUB
0x157 AND
0x158 BALANCE
0x159 DUP2
0x15a MSTORE
0x15b SWAP1
0x15c MLOAD
0x15d PUSH32 0xedf2f7451a6c99c99b58baaddbe18df51bec156fe6ae8dd3ea730168326f94cd
0x17e SWAP2
0x17f DUP2
0x180 SWAP1
0x181 SUB
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP1
0x186 LOG1
0x187 PUSH1 0x1
0x189 SLOAD
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 AND
0x193 SELFDESTRUCT
---
0x149: JUMPDEST 
0x14a: V107 = 0x40
0x14d: V108 = M[0x40]
0x14e: V109 = ADDRESS
0x14f: V110 = 0x1
0x151: V111 = 0xa0
0x153: V112 = 0x2
0x155: V113 = EXP 0x2 0xa0
0x156: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x158: V116 = BALANCE V115
0x15a: M[V108] = V116
0x15c: V117 = M[0x40]
0x15d: V118 = 0xedf2f7451a6c99c99b58baaddbe18df51bec156fe6ae8dd3ea730168326f94cd
0x181: V119 = SUB V108 V117
0x182: V120 = 0x20
0x184: V121 = ADD 0x20 V119
0x186: LOG V117 V121 0xedf2f7451a6c99c99b58baaddbe18df51bec156fe6ae8dd3ea730168326f94cd
0x187: V122 = 0x1
0x189: V123 = S[0x1]
0x18a: V124 = 0x1
0x18c: V125 = 0xa0
0x18e: V126 = 0x2
0x190: V127 = EXP 0x2 0xa0
0x191: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x192: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x193: SELFDESTRUCT V129
---
Entry stack: [V10, 0xb2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2]

================================

Block 0x194
[0x194:0x1da]
---
Predecessors: [0x116]
Successors: [0xb2]
---
0x194 JUMPDEST
0x195 PUSH1 0x40
0x197 DUP1
0x198 MLOAD
0x199 DUP3
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x1
0x19e PUSH1 0xa0
0x1a0 PUSH1 0x2
0x1a2 EXP
0x1a3 SUB
0x1a4 DUP5
0x1a5 AND
0x1a6 PUSH1 0x20
0x1a8 DUP3
0x1a9 ADD
0x1aa MSTORE
0x1ab DUP2
0x1ac MLOAD
0x1ad PUSH32 0x658eefd1c566207ffd3fb44f4d9b1e443698a39f8a6f7b134b3fef529e3f3f02
0x1ce SWAP3
0x1cf SWAP2
0x1d0 DUP2
0x1d1 SWAP1
0x1d2 SUB
0x1d3 SWAP1
0x1d4 SWAP2
0x1d5 ADD
0x1d6 SWAP1
0x1d7 LOG1
0x1d8 POP
0x1d9 POP
0x1da JUMP
---
0x194: JUMPDEST 
0x195: V130 = 0x40
0x198: V131 = M[0x40]
0x19b: M[V131] = S0
0x19c: V132 = 0x1
0x19e: V133 = 0xa0
0x1a0: V134 = 0x2
0x1a2: V135 = EXP 0x2 0xa0
0x1a3: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V137 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V138 = 0x20
0x1a9: V139 = ADD V131 0x20
0x1aa: M[V139] = V137
0x1ac: V140 = M[0x40]
0x1ad: V141 = 0x658eefd1c566207ffd3fb44f4d9b1e443698a39f8a6f7b134b3fef529e3f3f02
0x1d2: V142 = SUB V131 V140
0x1d5: V143 = ADD 0x40 V142
0x1d7: LOG V140 V143 0x658eefd1c566207ffd3fb44f4d9b1e443698a39f8a6f7b134b3fef529e3f3f02
0x1da: JUMP 0xb2
---
Entry stack: [V10, 0xb2, V149, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x1db
[0x1db:0x200]
---
Predecessors: [0x6c]
Successors: [0x201, 0x205]
---
0x1db JUMPDEST
0x1dc POP
0x1dd POP
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 CALLER
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 AND
0x1ea PUSH1 0x0
0x1ec SWAP1
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 DUP2
0x1f2 SWAP1
0x1f3 MSTORE
0x1f4 PUSH1 0x40
0x1f6 DUP2
0x1f7 SHA3
0x1f8 SLOAD
0x1f9 SWAP1
0x1fa DUP2
0x1fb EQ
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1db: JUMPDEST 
0x1de: V144 = 0x1
0x1e0: V145 = 0xa0
0x1e2: V146 = 0x2
0x1e4: V147 = EXP 0x2 0xa0
0x1e5: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V149 = CALLER
0x1e9: V150 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V151 = 0x0
0x1ee: M[0x0] = V150
0x1ef: V152 = 0x20
0x1f3: M[0x20] = 0x0
0x1f4: V153 = 0x40
0x1f7: V154 = SHA3 0x0 0x40
0x1f8: V155 = S[V154]
0x1fb: V156 = EQ V155 0x0
0x1fc: V157 = ISZERO V156
0x1fd: V158 = 0x205
0x200: JUMPI 0x205 V157
---
Entry stack: [V10, 0xb2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V149, V155]
Exit stack: [V10, 0xb2, V149, V155]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1db]
Successors: []
---
0x201 PUSH2 0x2
0x204 JUMP
---
0x201: V159 = 0x2
0x204: THROW 
---
Entry stack: [V10, 0xb2, V149, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, V149, V155]

================================

Block 0x205
[0x205:0x257]
---
Predecessors: [0x1db]
Successors: [0x116, 0x258]
---
0x205 JUMPDEST
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e DUP3
0x20f AND
0x210 PUSH1 0x0
0x212 SWAP1
0x213 DUP2
0x214 MSTORE
0x215 PUSH1 0x20
0x217 DUP2
0x218 SWAP1
0x219 MSTORE
0x21a PUSH1 0x40
0x21c DUP2
0x21d SHA3
0x21e SSTORE
0x21f PUSH2 0x194
0x222 PUSH7 0x38d7ea4c68000
0x22a DUP3
0x22b MUL
0x22c PUSH1 0x40
0x22e MLOAD
0x22f PUSH1 0x0
0x231 SWAP1
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a CALLER
0x23b AND
0x23c SWAP1
0x23d DUP4
0x23e SWAP1
0x23f DUP4
0x240 DUP2
0x241 DUP2
0x242 DUP2
0x243 DUP6
0x244 DUP8
0x245 PUSH2 0x8502
0x248 GAS
0x249 SUB
0x24a CALL
0x24b SWAP3
0x24c POP
0x24d POP
0x24e POP
0x24f SWAP1
0x250 POP
0x251 DUP1
0x252 ISZERO
0x253 ISZERO
0x254 PUSH2 0x116
0x257 JUMPI
---
0x205: JUMPDEST 
0x206: V160 = 0x1
0x208: V161 = 0xa0
0x20a: V162 = 0x2
0x20c: V163 = EXP 0x2 0xa0
0x20d: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20f: V165 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x210: V166 = 0x0
0x214: M[0x0] = V165
0x215: V167 = 0x20
0x219: M[0x20] = 0x0
0x21a: V168 = 0x40
0x21d: V169 = SHA3 0x0 0x40
0x21e: S[V169] = 0x0
0x21f: V170 = 0x194
0x222: V171 = 0x38d7ea4c68000
0x22b: V172 = MUL V155 0x38d7ea4c68000
0x22c: V173 = 0x40
0x22e: V174 = M[0x40]
0x22f: V175 = 0x0
0x232: V176 = 0x1
0x234: V177 = 0xa0
0x236: V178 = 0x2
0x238: V179 = EXP 0x2 0xa0
0x239: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V181 = CALLER
0x23b: V182 = AND V181 0xffffffffffffffffffffffffffffffffffffffff
0x245: V183 = 0x8502
0x248: V184 = GAS
0x249: V185 = SUB V184 0x8502
0x24a: V186 = CALL V185 V182 V172 V174 0x0 V174 0x0
0x252: V187 = ISZERO V186
0x253: V188 = ISZERO V187
0x254: V189 = 0x116
0x257: JUMPI 0x116 V188
---
Entry stack: [V10, 0xb2, V149, V155]
Stack pops: 2
Stack additions: [S1, S0, 0x194, V172, V186]
Exit stack: [V10, 0xb2, V149, V155, 0x194, V172, V186]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x205]
Successors: []
---
0x258 PUSH2 0x2
0x25b JUMP
---
0x258: V190 = 0x2
0x25b: THROW 
---
Entry stack: [V10, 0xb2, V149, V155, 0x194, V172, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, V149, V155, 0x194, V172, V186]

================================

Block 0x25c
[0x25c:0x2cd]
---
Predecessors: [0x2f7]
Successors: [0xb2]
---
0x25c JUMPDEST
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 DUP2
0x266 DUP2
0x267 AND
0x268 PUSH1 0x0
0x26a DUP2
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x20
0x26f DUP2
0x270 DUP2
0x271 MSTORE
0x272 PUSH1 0x40
0x274 DUP1
0x275 DUP4
0x276 SHA3
0x277 DUP1
0x278 SLOAD
0x279 DUP9
0x27a SWAP1
0x27b SUB
0x27c SWAP1
0x27d SSTORE
0x27e SWAP4
0x27f DUP8
0x280 AND
0x281 DUP1
0x282 DUP4
0x283 MSTORE
0x284 SWAP2
0x285 DUP5
0x286 SWAP1
0x287 SHA3
0x288 DUP1
0x289 SLOAD
0x28a DUP8
0x28b ADD
0x28c SWAP1
0x28d SSTORE
0x28e DUP4
0x28f MLOAD
0x290 DUP7
0x291 DUP2
0x292 MSTORE
0x293 SWAP1
0x294 DUP2
0x295 ADD
0x296 SWAP3
0x297 SWAP1
0x298 SWAP3
0x299 MSTORE
0x29a DUP2
0x29b DUP4
0x29c ADD
0x29d MSTORE
0x29e SWAP1
0x29f MLOAD
0x2a0 PUSH32 0xa25be434081445744d5b297a785f7b7073142ae4bcd91a0e7aa802f802b4e0c7
0x2c1 SWAP2
0x2c2 DUP2
0x2c3 SWAP1
0x2c4 SUB
0x2c5 PUSH1 0x60
0x2c7 ADD
0x2c8 SWAP1
0x2c9 LOG1
0x2ca POP
0x2cb POP
0x2cc POP
0x2cd JUMP
---
0x25c: JUMPDEST 
0x25d: V191 = 0x1
0x25f: V192 = 0xa0
0x261: V193 = 0x2
0x263: V194 = EXP 0x2 0xa0
0x264: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x268: V197 = 0x0
0x26c: M[0x0] = V196
0x26d: V198 = 0x20
0x271: M[0x20] = 0x0
0x272: V199 = 0x40
0x276: V200 = SHA3 0x0 0x40
0x278: V201 = S[V200]
0x27b: V202 = SUB V201 V52
0x27d: S[V200] = V202
0x280: V203 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x283: M[0x0] = V203
0x287: V204 = SHA3 0x0 0x40
0x289: V205 = S[V204]
0x28b: V206 = ADD V52 V205
0x28d: S[V204] = V206
0x28f: V207 = M[0x40]
0x292: M[V207] = V52
0x295: V208 = ADD V207 0x20
0x299: M[V208] = V196
0x29c: V209 = ADD 0x40 V207
0x29d: M[V209] = V203
0x29f: V210 = M[0x40]
0x2a0: V211 = 0xa25be434081445744d5b297a785f7b7073142ae4bcd91a0e7aa802f802b4e0c7
0x2c4: V212 = SUB V207 V210
0x2c5: V213 = 0x60
0x2c7: V214 = ADD 0x60 V212
0x2c9: LOG V210 V214 0xa25be434081445744d5b297a785f7b7073142ae4bcd91a0e7aa802f802b4e0c7
0x2cd: JUMP 0xb2
---
Entry stack: [V10, 0xb2, V50, V52, V220]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ce
[0x2ce:0x2f2]
---
Predecessors: [0x81]
Successors: [0x2f3, 0x2f7]
---
0x2ce JUMPDEST
0x2cf POP
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 CALLER
0x2d9 SWAP1
0x2da DUP2
0x2db AND
0x2dc PUSH1 0x0
0x2de SWAP1
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 DUP2
0x2e4 SWAP1
0x2e5 MSTORE
0x2e6 PUSH1 0x40
0x2e8 SWAP1
0x2e9 SHA3
0x2ea SLOAD
0x2eb DUP3
0x2ec SWAP1
0x2ed LT
0x2ee ISZERO
0x2ef PUSH2 0x2f7
0x2f2 JUMPI
---
0x2ce: JUMPDEST 
0x2d0: V215 = 0x1
0x2d2: V216 = 0xa0
0x2d4: V217 = 0x2
0x2d6: V218 = EXP 0x2 0xa0
0x2d7: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d8: V220 = CALLER
0x2db: V221 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V222 = 0x0
0x2e0: M[0x0] = V221
0x2e1: V223 = 0x20
0x2e5: M[0x20] = 0x0
0x2e6: V224 = 0x40
0x2e9: V225 = SHA3 0x0 0x40
0x2ea: V226 = S[V225]
0x2ed: V227 = LT V226 V52
0x2ee: V228 = ISZERO V227
0x2ef: V229 = 0x2f7
0x2f2: JUMPI 0x2f7 V228
---
Entry stack: [V10, 0xb2, V50, V52, 0x0]
Stack pops: 2
Stack additions: [S1, V220]
Exit stack: [V10, 0xb2, V50, V52, V220]

================================

Block 0x2f3
[0x2f3:0x2f6]
---
Predecessors: [0x2ce]
Successors: []
---
0x2f3 PUSH2 0x2
0x2f6 JUMP
---
0x2f3: V230 = 0x2
0x2f6: THROW 
---
Entry stack: [V10, 0xb2, V50, V52, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, V50, V52, V220]

================================

Block 0x2f7
[0x2f7:0x319]
---
Predecessors: [0x2ce]
Successors: [0x25c, 0x31a]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 DUP4
0x301 AND
0x302 PUSH1 0x0
0x304 SWAP1
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 DUP2
0x30a SWAP1
0x30b MSTORE
0x30c PUSH1 0x40
0x30e SWAP1
0x30f SHA3
0x310 SLOAD
0x311 DUP1
0x312 DUP4
0x313 ADD
0x314 LT
0x315 ISZERO
0x316 PUSH2 0x25c
0x319 JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V231 = 0x1
0x2fa: V232 = 0xa0
0x2fc: V233 = 0x2
0x2fe: V234 = EXP 0x2 0xa0
0x2ff: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x301: V236 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x302: V237 = 0x0
0x306: M[0x0] = V236
0x307: V238 = 0x20
0x30b: M[0x20] = 0x0
0x30c: V239 = 0x40
0x30f: V240 = SHA3 0x0 0x40
0x310: V241 = S[V240]
0x313: V242 = ADD V52 V241
0x314: V243 = LT V242 V241
0x315: V244 = ISZERO V243
0x316: V245 = 0x25c
0x319: JUMPI 0x25c V244
---
Entry stack: [V10, 0xb2, V50, V52, V220]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xb2, V50, V52, V220]

================================

Block 0x31a
[0x31a:0x31d]
---
Predecessors: [0x2f7]
Successors: []
---
0x31a PUSH2 0x2
0x31d JUMP
---
0x31a: V246 = 0x2
0x31d: THROW 
---
Entry stack: [V10, 0xb2, V50, V52, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb2, V50, V52, V220]

================================

Function 0:
Public function signature: 0xc08bf88
Entry block: 0x5b
Exit block: 0x149
Body: 0x5b, 0x68, 0x12c, 0x145, 0x149

Function 1:
Public function signature: 0x590e1ae3
Entry block: 0x6c
Exit block: 0xb2
Body: 0x6c, 0x7d, 0xb2, 0x116, 0x194, 0x1db, 0x201, 0x205, 0x258

Function 2:
Public function signature: 0xa9059cbb
Entry block: 0x81
Exit block: 0xb2
Body: 0x81, 0x96, 0xb2, 0x25c, 0x2ce, 0x2f3, 0x2f7, 0x31a

Function 3:
Public function signature: 0xe42c08f2
Entry block: 0x9a
Exit block: 0x11a
Body: 0x9a, 0x11a

Function 4:
Public fallback function
Entry block: 0x40
Exit block: 0xb2
Body: 0x40, 0x57, 0xb2, 0xb4, 0x116, 0x194

