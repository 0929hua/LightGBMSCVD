Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x95]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x95
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x95
0xa: JUMPI 0x95 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x120]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x2079fb9a
0x34 EQ
0x35 PUSH2 0x120
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x2079fb9a
0x34: V10 = EQ 0x2079fb9a V8
0x35: V11 = 0x120
0x38: JUMPI 0x120 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x162]
---
0x39 DUP1
0x3a PUSH4 0x39125215
0x3f EQ
0x40 PUSH2 0x162
0x43 JUMPI
---
0x3a: V12 = 0x39125215
0x3f: V13 = EQ 0x39125215 V8
0x40: V14 = 0x162
0x43: JUMPI 0x162 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x223]
---
0x44 DUP1
0x45 PUSH4 0x45550a51
0x4a EQ
0x4b PUSH2 0x223
0x4e JUMPI
---
0x45: V15 = 0x45550a51
0x4a: V16 = EQ 0x45550a51 V8
0x4b: V17 = 0x223
0x4e: JUMPI 0x223 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x2ac]
---
0x4f DUP1
0x50 PUSH4 0x7df73e27
0x55 EQ
0x56 PUSH2 0x2ac
0x59 JUMPI
---
0x50: V18 = 0x7df73e27
0x55: V19 = EQ 0x7df73e27 V8
0x56: V20 = 0x2ac
0x59: JUMPI 0x2ac V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x2da]
---
0x5a DUP1
0x5b PUSH4 0x979f1976
0x60 EQ
0x61 PUSH2 0x2da
0x64 JUMPI
---
0x5b: V21 = 0x979f1976
0x60: V22 = EQ 0x979f1976 V8
0x61: V23 = 0x2da
0x64: JUMPI 0x2da V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x306]
---
0x65 DUP1
0x66 PUSH4 0xa0b7967b
0x6b EQ
0x6c PUSH2 0x306
0x6f JUMPI
---
0x66: V24 = 0xa0b7967b
0x6b: V25 = EQ 0xa0b7967b V8
0x6c: V26 = 0x306
0x6f: JUMPI 0x306 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x329]
---
0x70 DUP1
0x71 PUSH4 0xa68a76cc
0x76 EQ
0x77 PUSH2 0x329
0x7a JUMPI
---
0x71: V27 = 0xa68a76cc
0x76: V28 = EQ 0xa68a76cc V8
0x77: V29 = 0x329
0x7a: JUMPI 0x329 V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x362]
---
0x7b DUP1
0x7c PUSH4 0xabe3219c
0x81 EQ
0x82 PUSH2 0x362
0x85 JUMPI
---
0x7c: V30 = 0xabe3219c
0x81: V31 = EQ 0xabe3219c V8
0x82: V32 = 0x362
0x85: JUMPI 0x362 V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x7b]
Successors: [0x91, 0x387]
---
0x86 DUP1
0x87 PUSH4 0xfc0f392d
0x8c EQ
0x8d PUSH2 0x387
0x90 JUMPI
---
0x87: V33 = 0xfc0f392d
0x8c: V34 = EQ 0xfc0f392d V8
0x8d: V35 = 0x387
0x90: JUMPI 0x387 V34
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x91
[0x91:0x94]
---
Predecessors: [0x86]
Successors: [0x95]
---
0x91 PUSH2 0x95
0x94 JUMP
---
0x91: V36 = 0x95
0x94: JUMP 0x95
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x0, 0x91]
Successors: [0x99]
---
0x95 JUMPDEST
0x96 PUSH2 0x11e
---
0x95: JUMPDEST 
0x96: V37 = 0x11e
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V8, 0x11e]

================================

Block 0x99
[0x99:0xa2]
---
Predecessors: [0x95]
Successors: [0xa3, 0x11b]
---
0x99 JUMPDEST
0x9a PUSH1 0x0
0x9c CALLVALUE
0x9d GT
0x9e ISZERO
0x9f PUSH2 0x11b
0xa2 JUMPI
---
0x99: JUMPDEST 
0x9a: V38 = 0x0
0x9c: V39 = CALLVALUE
0x9d: V40 = GT V39 0x0
0x9e: V41 = ISZERO V40
0x9f: V42 = 0x11b
0xa2: JUMPI 0x11b V41
---
Entry stack: [V8, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x11e]

================================

Block 0xa3
[0xa3:0x11a]
---
Predecessors: [0x99]
Successors: [0x11b]
---
0xa3 PUSH32 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0xc4 CALLER
0xc5 CALLVALUE
0xc6 PUSH1 0x0
0xc8 CALLDATASIZE
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd DUP6
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 DUP5
0xea DUP2
0xeb MSTORE
0xec PUSH1 0x20
0xee ADD
0xef DUP1
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 DUP3
0xf4 DUP2
0xf5 SUB
0xf6 DUP3
0xf7 MSTORE
0xf8 DUP5
0xf9 DUP5
0xfa DUP3
0xfb DUP2
0xfc DUP2
0xfd MSTORE
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP3
0x102 POP
0x103 DUP1
0x104 DUP3
0x105 DUP5
0x106 CALLDATACOPY
0x107 DUP3
0x108 ADD
0x109 SWAP2
0x10a POP
0x10b POP
0x10c SWAP6
0x10d POP
0x10e POP
0x10f POP
0x110 POP
0x111 POP
0x112 POP
0x113 PUSH1 0x40
0x115 MLOAD
0x116 DUP1
0x117 SWAP2
0x118 SUB
0x119 SWAP1
0x11a LOG1
---
0xa3: V43 = 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
0xc4: V44 = CALLER
0xc5: V45 = CALLVALUE
0xc6: V46 = 0x0
0xc8: V47 = CALLDATASIZE
0xc9: V48 = 0x40
0xcb: V49 = M[0x40]
0xce: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xe5: M[V49] = V51
0xe6: V52 = 0x20
0xe8: V53 = ADD 0x20 V49
0xeb: M[V53] = V45
0xec: V54 = 0x20
0xee: V55 = ADD 0x20 V53
0xf0: V56 = 0x20
0xf2: V57 = ADD 0x20 V55
0xf5: V58 = SUB V57 V49
0xf7: M[V55] = V58
0xfd: M[V57] = V47
0xfe: V59 = 0x20
0x100: V60 = ADD 0x20 V57
0x106: CALLDATACOPY V60 0x0 V47
0x108: V61 = ADD V60 V47
0x113: V62 = 0x40
0x115: V63 = M[0x40]
0x118: V64 = SUB V61 V63
0x11a: LOG V63 V64 0x6e89d517057028190560dd200cf6bf792842861353d1173761dfa362e1c133f0
---
Entry stack: [V8, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x11e]

================================

Block 0x11b
[0x11b:0x11b]
---
Predecessors: [0x99, 0xa3]
Successors: [0x11c]
---
0x11b JUMPDEST
---
0x11b: JUMPDEST 
---
Entry stack: [V8, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x11e]

================================

Block 0x11c
[0x11c:0x11d]
---
Predecessors: [0x11b]
Successors: [0x11e]
---
0x11c JUMPDEST
0x11d JUMP
---
0x11c: JUMPDEST 
0x11d: JUMP 0x11e
---
Entry stack: [V8, 0x11e]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x11e
[0x11e:0x11f]
---
Predecessors: [0x11c]
Successors: []
---
0x11e JUMPDEST
0x11f STOP
---
0x11e: JUMPDEST 
0x11f: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x120
[0x120:0x135]
---
Predecessors: [0xb]
Successors: [0x396]
---
0x120 JUMPDEST
0x121 PUSH2 0x136
0x124 PUSH1 0x4
0x126 DUP1
0x127 DUP1
0x128 CALLDATALOAD
0x129 SWAP1
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP1
0x12e SWAP2
0x12f SWAP1
0x130 POP
0x131 POP
0x132 PUSH2 0x396
0x135 JUMP
---
0x120: JUMPDEST 
0x121: V65 = 0x136
0x124: V66 = 0x4
0x128: V67 = CALLDATALOAD 0x4
0x12a: V68 = 0x20
0x12c: V69 = ADD 0x20 0x4
0x132: V70 = 0x396
0x135: JUMP 0x396
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x136, V67]
Exit stack: [V8, 0x136, V67]

================================

Block 0x136
[0x136:0x161]
---
Predecessors: [0x3b3]
Successors: []
---
0x136 JUMPDEST
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b DUP3
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP2
0x158 POP
0x159 POP
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e SWAP2
0x15f SUB
0x160 SWAP1
0x161 RETURN
---
0x136: JUMPDEST 
0x137: V71 = 0x40
0x139: V72 = M[0x40]
0x13c: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x153: M[V72] = V74
0x154: V75 = 0x20
0x156: V76 = ADD 0x20 V72
0x15a: V77 = 0x40
0x15c: V78 = M[0x40]
0x15f: V79 = SUB V76 V78
0x161: RETURN V78 V79
---
Entry stack: [V8, 0x136, V255]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x136]

================================

Block 0x162
[0x162:0x220]
---
Predecessors: [0x39]
Successors: [0x3d8]
---
0x162 JUMPDEST
0x163 PUSH2 0x221
0x166 PUSH1 0x4
0x168 DUP1
0x169 DUP1
0x16a CALLDATALOAD
0x16b SWAP1
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP1
0x170 SWAP2
0x171 SWAP1
0x172 DUP1
0x173 CALLDATALOAD
0x174 SWAP1
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 SWAP2
0x17a SWAP1
0x17b DUP1
0x17c CALLDATALOAD
0x17d SWAP1
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP1
0x182 DUP3
0x183 ADD
0x184 DUP1
0x185 CALLDATALOAD
0x186 SWAP1
0x187 PUSH1 0x20
0x189 ADD
0x18a SWAP2
0x18b SWAP2
0x18c SWAP1
0x18d DUP1
0x18e DUP1
0x18f PUSH1 0x1f
0x191 ADD
0x192 PUSH1 0x20
0x194 DUP1
0x195 SWAP2
0x196 DIV
0x197 MUL
0x198 PUSH1 0x20
0x19a ADD
0x19b PUSH1 0x40
0x19d MLOAD
0x19e SWAP1
0x19f DUP2
0x1a0 ADD
0x1a1 PUSH1 0x40
0x1a3 MSTORE
0x1a4 DUP1
0x1a5 SWAP4
0x1a6 SWAP3
0x1a7 SWAP2
0x1a8 SWAP1
0x1a9 DUP2
0x1aa DUP2
0x1ab MSTORE
0x1ac PUSH1 0x20
0x1ae ADD
0x1af DUP4
0x1b0 DUP4
0x1b1 DUP1
0x1b2 DUP3
0x1b3 DUP5
0x1b4 CALLDATACOPY
0x1b5 DUP3
0x1b6 ADD
0x1b7 SWAP2
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd POP
0x1be SWAP1
0x1bf SWAP1
0x1c0 SWAP2
0x1c1 SWAP1
0x1c2 DUP1
0x1c3 CALLDATALOAD
0x1c4 SWAP1
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 SWAP1
0x1c9 SWAP2
0x1ca SWAP1
0x1cb DUP1
0x1cc CALLDATALOAD
0x1cd SWAP1
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 SWAP1
0x1d2 SWAP2
0x1d3 SWAP1
0x1d4 DUP1
0x1d5 CALLDATALOAD
0x1d6 SWAP1
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP1
0x1db DUP3
0x1dc ADD
0x1dd DUP1
0x1de CALLDATALOAD
0x1df SWAP1
0x1e0 PUSH1 0x20
0x1e2 ADD
0x1e3 SWAP2
0x1e4 SWAP2
0x1e5 SWAP1
0x1e6 DUP1
0x1e7 DUP1
0x1e8 PUSH1 0x1f
0x1ea ADD
0x1eb PUSH1 0x20
0x1ed DUP1
0x1ee SWAP2
0x1ef DIV
0x1f0 MUL
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 ADD
0x1fa PUSH1 0x40
0x1fc MSTORE
0x1fd DUP1
0x1fe SWAP4
0x1ff SWAP3
0x200 SWAP2
0x201 SWAP1
0x202 DUP2
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 DUP4
0x209 DUP4
0x20a DUP1
0x20b DUP3
0x20c DUP5
0x20d CALLDATACOPY
0x20e DUP3
0x20f ADD
0x210 SWAP2
0x211 POP
0x212 POP
0x213 POP
0x214 POP
0x215 POP
0x216 POP
0x217 SWAP1
0x218 SWAP1
0x219 SWAP2
0x21a SWAP1
0x21b POP
0x21c POP
0x21d PUSH2 0x3d8
0x220 JUMP
---
0x162: JUMPDEST 
0x163: V80 = 0x221
0x166: V81 = 0x4
0x16a: V82 = CALLDATALOAD 0x4
0x16c: V83 = 0x20
0x16e: V84 = ADD 0x20 0x4
0x173: V85 = CALLDATALOAD 0x24
0x175: V86 = 0x20
0x177: V87 = ADD 0x20 0x24
0x17c: V88 = CALLDATALOAD 0x44
0x17e: V89 = 0x20
0x180: V90 = ADD 0x20 0x44
0x183: V91 = ADD 0x4 V88
0x185: V92 = CALLDATALOAD V91
0x187: V93 = 0x20
0x189: V94 = ADD 0x20 V91
0x18f: V95 = 0x1f
0x191: V96 = ADD 0x1f V92
0x192: V97 = 0x20
0x196: V98 = DIV V96 0x20
0x197: V99 = MUL V98 0x20
0x198: V100 = 0x20
0x19a: V101 = ADD 0x20 V99
0x19b: V102 = 0x40
0x19d: V103 = M[0x40]
0x1a0: V104 = ADD V103 V101
0x1a1: V105 = 0x40
0x1a3: M[0x40] = V104
0x1ab: M[V103] = V92
0x1ac: V106 = 0x20
0x1ae: V107 = ADD 0x20 V103
0x1b4: CALLDATACOPY V107 V94 V92
0x1b6: V108 = ADD V107 V92
0x1c3: V109 = CALLDATALOAD 0x64
0x1c5: V110 = 0x20
0x1c7: V111 = ADD 0x20 0x64
0x1cc: V112 = CALLDATALOAD 0x84
0x1ce: V113 = 0x20
0x1d0: V114 = ADD 0x20 0x84
0x1d5: V115 = CALLDATALOAD 0xa4
0x1d7: V116 = 0x20
0x1d9: V117 = ADD 0x20 0xa4
0x1dc: V118 = ADD 0x4 V115
0x1de: V119 = CALLDATALOAD V118
0x1e0: V120 = 0x20
0x1e2: V121 = ADD 0x20 V118
0x1e8: V122 = 0x1f
0x1ea: V123 = ADD 0x1f V119
0x1eb: V124 = 0x20
0x1ef: V125 = DIV V123 0x20
0x1f0: V126 = MUL V125 0x20
0x1f1: V127 = 0x20
0x1f3: V128 = ADD 0x20 V126
0x1f4: V129 = 0x40
0x1f6: V130 = M[0x40]
0x1f9: V131 = ADD V130 V128
0x1fa: V132 = 0x40
0x1fc: M[0x40] = V131
0x204: M[V130] = V119
0x205: V133 = 0x20
0x207: V134 = ADD 0x20 V130
0x20d: CALLDATACOPY V134 V121 V119
0x20f: V135 = ADD V134 V119
0x21d: V136 = 0x3d8
0x220: JUMP 0x3d8
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x221, V82, V85, V103, V109, V112, V130]
Exit stack: [V8, 0x221, V82, V85, V103, V109, V112, V130]

================================

Block 0x221
[0x221:0x222]
---
Predecessors: []
Successors: []
---
0x221 JUMPDEST
0x222 STOP
---
0x221: JUMPDEST 
0x222: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x223
[0x223:0x27f]
---
Predecessors: [0x44]
Successors: [0x65d]
---
0x223 JUMPDEST
0x224 PUSH2 0x280
0x227 PUSH1 0x4
0x229 DUP1
0x22a DUP1
0x22b CALLDATALOAD
0x22c SWAP1
0x22d PUSH1 0x20
0x22f ADD
0x230 SWAP1
0x231 SWAP2
0x232 SWAP1
0x233 DUP1
0x234 CALLDATALOAD
0x235 SWAP1
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP1
0x23a DUP3
0x23b ADD
0x23c DUP1
0x23d CALLDATALOAD
0x23e SWAP1
0x23f PUSH1 0x20
0x241 ADD
0x242 SWAP2
0x243 SWAP2
0x244 SWAP1
0x245 DUP1
0x246 DUP1
0x247 PUSH1 0x1f
0x249 ADD
0x24a PUSH1 0x20
0x24c DUP1
0x24d SWAP2
0x24e DIV
0x24f MUL
0x250 PUSH1 0x20
0x252 ADD
0x253 PUSH1 0x40
0x255 MLOAD
0x256 SWAP1
0x257 DUP2
0x258 ADD
0x259 PUSH1 0x40
0x25b MSTORE
0x25c DUP1
0x25d SWAP4
0x25e SWAP3
0x25f SWAP2
0x260 SWAP1
0x261 DUP2
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 DUP4
0x268 DUP4
0x269 DUP1
0x26a DUP3
0x26b DUP5
0x26c CALLDATACOPY
0x26d DUP3
0x26e ADD
0x26f SWAP2
0x270 POP
0x271 POP
0x272 POP
0x273 POP
0x274 POP
0x275 POP
0x276 SWAP1
0x277 SWAP1
0x278 SWAP2
0x279 SWAP1
0x27a POP
0x27b POP
0x27c PUSH2 0x65d
0x27f JUMP
---
0x223: JUMPDEST 
0x224: V137 = 0x280
0x227: V138 = 0x4
0x22b: V139 = CALLDATALOAD 0x4
0x22d: V140 = 0x20
0x22f: V141 = ADD 0x20 0x4
0x234: V142 = CALLDATALOAD 0x24
0x236: V143 = 0x20
0x238: V144 = ADD 0x20 0x24
0x23b: V145 = ADD 0x4 V142
0x23d: V146 = CALLDATALOAD V145
0x23f: V147 = 0x20
0x241: V148 = ADD 0x20 V145
0x247: V149 = 0x1f
0x249: V150 = ADD 0x1f V146
0x24a: V151 = 0x20
0x24e: V152 = DIV V150 0x20
0x24f: V153 = MUL V152 0x20
0x250: V154 = 0x20
0x252: V155 = ADD 0x20 V153
0x253: V156 = 0x40
0x255: V157 = M[0x40]
0x258: V158 = ADD V157 V155
0x259: V159 = 0x40
0x25b: M[0x40] = V158
0x263: M[V157] = V146
0x264: V160 = 0x20
0x266: V161 = ADD 0x20 V157
0x26c: CALLDATACOPY V161 V148 V146
0x26e: V162 = ADD V161 V146
0x27c: V163 = 0x65d
0x27f: JUMP 0x65d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x280, V139, V157]
Exit stack: [V8, 0x280, V139, V157]

================================

Block 0x280
[0x280:0x2ab]
---
Predecessors: [0x7ac]
Successors: []
---
0x280 JUMPDEST
0x281 PUSH1 0x40
0x283 MLOAD
0x284 DUP1
0x285 DUP3
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b AND
0x29c DUP2
0x29d MSTORE
0x29e PUSH1 0x20
0x2a0 ADD
0x2a1 SWAP2
0x2a2 POP
0x2a3 POP
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 DUP1
0x2a8 SWAP2
0x2a9 SUB
0x2aa SWAP1
0x2ab RETURN
---
0x280: JUMPDEST 
0x281: V164 = 0x40
0x283: V165 = M[0x40]
0x286: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x29d: M[V165] = V167
0x29e: V168 = 0x20
0x2a0: V169 = ADD 0x20 V165
0x2a4: V170 = 0x40
0x2a6: V171 = M[0x40]
0x2a9: V172 = SUB V169 V171
0x2ab: RETURN V171 V172
---
Entry stack: [S8, S7, S6, V8, 0x221, V82, V320, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S8, S7, S6, V8, 0x221, V82, V320, S1]

================================

Block 0x2ac
[0x2ac:0x2c1]
---
Predecessors: [0x4f]
Successors: [0x7b5]
---
0x2ac JUMPDEST
0x2ad PUSH2 0x2c2
0x2b0 PUSH1 0x4
0x2b2 DUP1
0x2b3 DUP1
0x2b4 CALLDATALOAD
0x2b5 SWAP1
0x2b6 PUSH1 0x20
0x2b8 ADD
0x2b9 SWAP1
0x2ba SWAP2
0x2bb SWAP1
0x2bc POP
0x2bd POP
0x2be PUSH2 0x7b5
0x2c1 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V173 = 0x2c2
0x2b0: V174 = 0x4
0x2b4: V175 = CALLDATALOAD 0x4
0x2b6: V176 = 0x20
0x2b8: V177 = ADD 0x20 0x4
0x2be: V178 = 0x7b5
0x2c1: JUMP 0x7b5
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2c2, V175]
Exit stack: [V8, 0x2c2, V175]

================================

Block 0x2c2
[0x2c2:0x2d9]
---
Predecessors: [0x85d]
Successors: []
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 DUP1
0x2c7 DUP3
0x2c8 ISZERO
0x2c9 ISZERO
0x2ca DUP2
0x2cb MSTORE
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf SWAP2
0x2d0 POP
0x2d1 POP
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 DUP1
0x2d6 SWAP2
0x2d7 SUB
0x2d8 SWAP1
0x2d9 RETURN
---
0x2c2: JUMPDEST 
0x2c3: V179 = 0x40
0x2c5: V180 = M[0x40]
0x2c8: V181 = ISZERO {0x0, 0x1}
0x2c9: V182 = ISZERO V181
0x2cb: M[V180] = V182
0x2cc: V183 = 0x20
0x2ce: V184 = ADD 0x20 V180
0x2d2: V185 = 0x40
0x2d4: V186 = M[0x40]
0x2d7: V187 = SUB V184 V186
0x2d9: RETURN V186 V187
---
Entry stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2da
[0x2da:0x2ef]
---
Predecessors: [0x5a]
Successors: [0x863]
---
0x2da JUMPDEST
0x2db PUSH2 0x2f0
0x2de PUSH1 0x4
0x2e0 DUP1
0x2e1 DUP1
0x2e2 CALLDATALOAD
0x2e3 SWAP1
0x2e4 PUSH1 0x20
0x2e6 ADD
0x2e7 SWAP1
0x2e8 SWAP2
0x2e9 SWAP1
0x2ea POP
0x2eb POP
0x2ec PUSH2 0x863
0x2ef JUMP
---
0x2da: JUMPDEST 
0x2db: V188 = 0x2f0
0x2de: V189 = 0x4
0x2e2: V190 = CALLDATALOAD 0x4
0x2e4: V191 = 0x20
0x2e6: V192 = ADD 0x20 0x4
0x2ec: V193 = 0x863
0x2ef: JUMP 0x863
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x2f0, V190]
Exit stack: [V8, 0x2f0, V190]

================================

Block 0x2f0
[0x2f0:0x305]
---
Predecessors: [0x945]
Successors: []
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 DUP3
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP2
0x2fc POP
0x2fd POP
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 DUP1
0x302 SWAP2
0x303 SUB
0x304 SWAP1
0x305 RETURN
---
0x2f0: JUMPDEST 
0x2f1: V194 = 0x40
0x2f3: V195 = M[0x40]
0x2f7: M[V195] = S0
0x2f8: V196 = 0x20
0x2fa: V197 = ADD 0x20 V195
0x2fe: V198 = 0x40
0x300: V199 = M[0x40]
0x303: V200 = SUB V197 V199
0x305: RETURN V199 V200
---
Entry stack: [V103, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V103, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x306
[0x306:0x312]
---
Predecessors: [0x65]
Successors: [0x94c]
---
0x306 JUMPDEST
0x307 PUSH2 0x313
0x30a PUSH1 0x4
0x30c DUP1
0x30d POP
0x30e POP
0x30f PUSH2 0x94c
0x312 JUMP
---
0x306: JUMPDEST 
0x307: V201 = 0x313
0x30a: V202 = 0x4
0x30f: V203 = 0x94c
0x312: JUMP 0x94c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x313]
Exit stack: [V8, 0x313]

================================

Block 0x313
[0x313:0x328]
---
Predecessors: [0x9b7]
Successors: []
---
0x313 JUMPDEST
0x314 PUSH1 0x40
0x316 MLOAD
0x317 DUP1
0x318 DUP3
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP2
0x31f POP
0x320 POP
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 SWAP2
0x326 SUB
0x327 SWAP1
0x328 RETURN
---
0x313: JUMPDEST 
0x314: V204 = 0x40
0x316: V205 = M[0x40]
0x31a: M[V205] = V721
0x31b: V206 = 0x20
0x31d: V207 = ADD 0x20 V205
0x321: V208 = 0x40
0x323: V209 = M[0x40]
0x326: V210 = SUB V207 V209
0x328: RETURN V209 V210
---
Entry stack: [V8, V721]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x329
[0x329:0x335]
---
Predecessors: [0x70]
Successors: [0x9bc]
---
0x329 JUMPDEST
0x32a PUSH2 0x336
0x32d PUSH1 0x4
0x32f DUP1
0x330 POP
0x331 POP
0x332 PUSH2 0x9bc
0x335 JUMP
---
0x329: JUMPDEST 
0x32a: V211 = 0x336
0x32d: V212 = 0x4
0x332: V213 = 0x9bc
0x335: JUMP 0x9bc
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x336]
Exit stack: [V8, 0x336]

================================

Block 0x336
[0x336:0x361]
---
Predecessors: [0x9f3]
Successors: []
---
0x336 JUMPDEST
0x337 PUSH1 0x40
0x339 MLOAD
0x33a DUP1
0x33b DUP3
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 DUP2
0x353 MSTORE
0x354 PUSH1 0x20
0x356 ADD
0x357 SWAP2
0x358 POP
0x359 POP
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e SWAP2
0x35f SUB
0x360 SWAP1
0x361 RETURN
---
0x336: JUMPDEST 
0x337: V214 = 0x40
0x339: V215 = M[0x40]
0x33c: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x353: M[V215] = V217
0x354: V218 = 0x20
0x356: V219 = ADD 0x20 V215
0x35a: V220 = 0x40
0x35c: V221 = M[0x40]
0x35f: V222 = SUB V219 V221
0x361: RETURN V221 V222
---
Entry stack: [V103, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V103, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x362
[0x362:0x36e]
---
Predecessors: [0x7b]
Successors: [0x9f6]
---
0x362 JUMPDEST
0x363 PUSH2 0x36f
0x366 PUSH1 0x4
0x368 DUP1
0x369 POP
0x36a POP
0x36b PUSH2 0x9f6
0x36e JUMP
---
0x362: JUMPDEST 
0x363: V223 = 0x36f
0x366: V224 = 0x4
0x36b: V225 = 0x9f6
0x36e: JUMP 0x9f6
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x36f]
Exit stack: [V8, 0x36f]

================================

Block 0x36f
[0x36f:0x386]
---
Predecessors: [0x9f6]
Successors: []
---
0x36f JUMPDEST
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 DUP3
0x375 ISZERO
0x376 ISZERO
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x20
0x37b ADD
0x37c SWAP2
0x37d POP
0x37e POP
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP1
0x383 SWAP2
0x384 SUB
0x385 SWAP1
0x386 RETURN
---
0x36f: JUMPDEST 
0x370: V226 = 0x40
0x372: V227 = M[0x40]
0x375: V228 = ISZERO V749
0x376: V229 = ISZERO V228
0x378: M[V227] = V229
0x379: V230 = 0x20
0x37b: V231 = ADD 0x20 V227
0x37f: V232 = 0x40
0x381: V233 = M[0x40]
0x384: V234 = SUB V231 V233
0x386: RETURN V233 V234
---
Entry stack: [V8, 0x36f, V749]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x36f]

================================

Block 0x387
[0x387:0x393]
---
Predecessors: [0x86]
Successors: [0xa09]
---
0x387 JUMPDEST
0x388 PUSH2 0x394
0x38b PUSH1 0x4
0x38d DUP1
0x38e POP
0x38f POP
0x390 PUSH2 0xa09
0x393 JUMP
---
0x387: JUMPDEST 
0x388: V235 = 0x394
0x38b: V236 = 0x4
0x390: V237 = 0xa09
0x393: JUMP 0xa09
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x394]
Exit stack: [V8, 0x394]

================================

Block 0x394
[0x394:0x395]
---
Predecessors: [0xa84]
Successors: []
---
0x394 JUMPDEST
0x395 STOP
---
0x394: JUMPDEST 
0x395: STOP 
---
Entry stack: [V103, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x396
[0x396:0x3a5]
---
Predecessors: [0x120]
Successors: [0x3a6]
---
0x396 JUMPDEST
0x397 PUSH1 0x0
0x399 PUSH1 0x0
0x39b POP
0x39c DUP2
0x39d DUP2
0x39e SLOAD
0x39f DUP2
0x3a0 LT
0x3a1 ISZERO
0x3a2 PUSH2 0x2
0x3a5 JUMPI
---
0x396: JUMPDEST 
0x397: V238 = 0x0
0x399: V239 = 0x0
0x39e: V240 = S[0x0]
0x3a0: V241 = LT V67 V240
0x3a1: V242 = ISZERO V241
0x3a2: V243 = 0x2
0x3a5: THROWI V242
---
Entry stack: [V8, 0x136, V67]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V8, 0x136, V67, 0x0, V67]

================================

Block 0x3a6
[0x3a6:0x3b2]
---
Predecessors: [0x396]
Successors: [0x3b3]
---
0x3a6 SWAP1
0x3a7 PUSH1 0x0
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac PUSH1 0x0
0x3ae SHA3
0x3af SWAP1
0x3b0 ADD
0x3b1 PUSH1 0x0
---
0x3a7: V244 = 0x0
0x3a9: M[0x0] = 0x0
0x3aa: V245 = 0x20
0x3ac: V246 = 0x0
0x3ae: V247 = SHA3 0x0 0x20
0x3b0: V248 = ADD V67 V247
0x3b1: V249 = 0x0
---
Entry stack: [V8, 0x136, V67, 0x0, V67]
Stack pops: 2
Stack additions: [V248, 0x0]
Exit stack: [V8, 0x136, V67, V248, 0x0]

================================

Block 0x3b3
[0x3b3:0x3d7]
---
Predecessors: [0x3a6]
Successors: [0x136]
---
0x3b3 JUMPDEST
0x3b4 SWAP2
0x3b5 POP
0x3b6 SWAP1
0x3b7 SWAP1
0x3b8 SLOAD
0x3b9 SWAP1
0x3ba PUSH2 0x100
0x3bd EXP
0x3be SWAP1
0x3bf DIV
0x3c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d5 AND
0x3d6 DUP2
0x3d7 JUMP
---
0x3b3: JUMPDEST 
0x3b8: V250 = S[V248]
0x3ba: V251 = 0x100
0x3bd: V252 = EXP 0x100 0x0
0x3bf: V253 = DIV V250 0x1
0x3c0: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x3d7: JUMP 0x136
---
Entry stack: [V8, 0x136, V67, V248, 0x0]
Stack pops: 4
Stack additions: [S3, V255]
Exit stack: [V8, 0x136, V255]

================================

Block 0x3d8
[0x3d8:0x3e4]
---
Predecessors: [0x162]
Successors: [0x7b5]
---
0x3d8 JUMPDEST
0x3d9 PUSH1 0x0
0x3db PUSH1 0x0
0x3dd PUSH2 0x3e5
0x3e0 CALLER
0x3e1 PUSH2 0x7b5
0x3e4 JUMP
---
0x3d8: JUMPDEST 
0x3d9: V256 = 0x0
0x3db: V257 = 0x0
0x3dd: V258 = 0x3e5
0x3e0: V259 = CALLER
0x3e1: V260 = 0x7b5
0x3e4: JUMP 0x7b5
---
Entry stack: [V8, 0x221, V82, V85, V103, V109, V112, V130]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x3e5, V259]
Exit stack: [V8, 0x221, V82, V85, V103, V109, V112, V130, 0x0, 0x0, 0x3e5, V259]

================================

Block 0x3e5
[0x3e5:0x3eb]
---
Predecessors: [0x85d]
Successors: [0x3ec, 0x3f0]
---
0x3e5 JUMPDEST
0x3e6 ISZERO
0x3e7 ISZERO
0x3e8 PUSH2 0x3f0
0x3eb JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V261 = ISZERO {0x0, 0x1}
0x3e7: V262 = ISZERO V261
0x3e8: V263 = 0x3f0
0x3eb: JUMPI 0x3f0 V262
---
Entry stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x3ec
[0x3ec:0x3ef]
---
Predecessors: [0x3e5]
Successors: []
---
0x3ec PUSH2 0x2
0x3ef JUMP
---
0x3ec: V264 = 0x2
0x3ef: THROW 
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3f0
[0x3f0:0x406]
---
Predecessors: [0x3e5]
Successors: [0x407, 0x412]
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x1
0x3f3 PUSH1 0x0
0x3f5 SWAP1
0x3f6 SLOAD
0x3f7 SWAP1
0x3f8 PUSH2 0x100
0x3fb EXP
0x3fc SWAP1
0x3fd DIV
0x3fe PUSH1 0xff
0x400 AND
0x401 DUP1
0x402 ISZERO
0x403 PUSH2 0x412
0x406 JUMPI
---
0x3f0: JUMPDEST 
0x3f1: V265 = 0x1
0x3f3: V266 = 0x0
0x3f6: V267 = S[0x1]
0x3f8: V268 = 0x100
0x3fb: V269 = EXP 0x100 0x0
0x3fd: V270 = DIV V267 0x1
0x3fe: V271 = 0xff
0x400: V272 = AND 0xff V270
0x402: V273 = ISZERO V272
0x403: V274 = 0x412
0x406: JUMPI 0x412 V273
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V272]
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V272]

================================

Block 0x407
[0x407:0x40f]
---
Predecessors: [0x3f0]
Successors: [0x7b5]
---
0x407 POP
0x408 PUSH2 0x410
0x40b DUP9
0x40c PUSH2 0x7b5
0x40f JUMP
---
0x408: V275 = 0x410
0x40c: V276 = 0x7b5
0x40f: JUMP 0x7b5
---
Entry stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V272]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, 0x410, S8]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x410, S8]

================================

Block 0x410
[0x410:0x411]
---
Predecessors: [0x85d]
Successors: [0x412]
---
0x410 JUMPDEST
0x411 ISZERO
---
0x410: JUMPDEST 
0x411: V277 = ISZERO {0x0, 0x1}
---
Entry stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [V277]
Exit stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V277]

================================

Block 0x412
[0x412:0x417]
---
Predecessors: [0x3f0, 0x410]
Successors: [0x418, 0x41c]
---
0x412 JUMPDEST
0x413 ISZERO
0x414 PUSH2 0x41c
0x417 JUMPI
---
0x412: JUMPDEST 
0x413: V278 = ISZERO S0
0x414: V279 = 0x41c
0x417: JUMPI 0x41c V278
---
Entry stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x418
[0x418:0x41b]
---
Predecessors: [0x412]
Successors: []
---
0x418 PUSH2 0x2
0x41b JUMP
---
0x418: V280 = 0x2
0x41b: THROW 
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x41c
[0x41c:0x424]
---
Predecessors: [0x412]
Successors: [0x425, 0x429]
---
0x41c JUMPDEST
0x41d TIMESTAMP
0x41e DUP6
0x41f LT
0x420 ISZERO
0x421 PUSH2 0x429
0x424 JUMPI
---
0x41c: JUMPDEST 
0x41d: V281 = TIMESTAMP
0x41f: V282 = LT S4 V281
0x420: V283 = ISZERO V282
0x421: V284 = 0x429
0x424: JUMPI 0x429 V283
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x41c]
Successors: []
---
0x425 PUSH2 0x2
0x428 JUMP
---
0x425: V285 = 0x2
0x428: THROW 
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x429
[0x429:0x431]
---
Predecessors: [0x41c]
Successors: [0x863]
---
0x429 JUMPDEST
0x42a PUSH2 0x432
0x42d DUP5
0x42e PUSH2 0x863
0x431 JUMP
---
0x429: JUMPDEST 
0x42a: V286 = 0x432
0x42e: V287 = 0x863
0x431: JUMP 0x863
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x432, S3]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x432, S3]

================================

Block 0x432
[0x432:0x4b6]
---
Predecessors: [0x945]
Successors: [0x65d]
---
0x432 JUMPDEST
0x433 POP
0x434 DUP8
0x435 DUP8
0x436 DUP8
0x437 DUP8
0x438 DUP8
0x439 PUSH1 0x40
0x43b MLOAD
0x43c DUP1
0x43d DUP7
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 PUSH13 0x1000000000000000000000000
0x462 MUL
0x463 DUP2
0x464 MSTORE
0x465 PUSH1 0x14
0x467 ADD
0x468 DUP6
0x469 DUP2
0x46a MSTORE
0x46b PUSH1 0x20
0x46d ADD
0x46e DUP5
0x46f DUP1
0x470 MLOAD
0x471 SWAP1
0x472 PUSH1 0x20
0x474 ADD
0x475 SWAP1
0x476 DUP1
0x477 DUP4
0x478 DUP4
0x479 DUP3
0x47a SWAP1
0x47b PUSH1 0x0
0x47d PUSH1 0x4
0x47f PUSH1 0x20
0x481 DUP5
0x482 PUSH1 0x1f
0x484 ADD
0x485 DIV
0x486 PUSH1 0xf
0x488 MUL
0x489 PUSH1 0x3
0x48b ADD
0x48c CALL
0x48d POP
0x48e SWAP1
0x48f POP
0x490 ADD
0x491 DUP4
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x20
0x496 ADD
0x497 DUP3
0x498 DUP2
0x499 MSTORE
0x49a PUSH1 0x20
0x49c ADD
0x49d SWAP6
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 SWAP2
0x4a9 SUB
0x4aa SWAP1
0x4ab SHA3
0x4ac SWAP2
0x4ad POP
0x4ae PUSH2 0x4b7
0x4b1 DUP3
0x4b2 DUP5
0x4b3 PUSH2 0x65d
0x4b6 JUMP
---
0x432: JUMPDEST 
0x439: V288 = 0x40
0x43b: V289 = M[0x40]
0x43e: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x454: V292 = 0x1000000000000000000000000
0x462: V293 = MUL 0x1000000000000000000000000 V291
0x464: M[V289] = V293
0x465: V294 = 0x14
0x467: V295 = ADD 0x14 V289
0x46a: M[V295] = S7
0x46b: V296 = 0x20
0x46d: V297 = ADD 0x20 V295
0x470: V298 = M[S6]
0x472: V299 = 0x20
0x474: V300 = ADD 0x20 S6
0x47b: V301 = 0x0
0x47d: V302 = 0x4
0x47f: V303 = 0x20
0x482: V304 = 0x1f
0x484: V305 = ADD 0x1f V298
0x485: V306 = DIV V305 0x20
0x486: V307 = 0xf
0x488: V308 = MUL 0xf V306
0x489: V309 = 0x3
0x48b: V310 = ADD 0x3 V308
0x48c: V311 = CALL V310 0x4 0x0 V300 V298 V297 V298
0x490: V312 = ADD V298 V297
0x493: M[V312] = S5
0x494: V313 = 0x20
0x496: V314 = ADD 0x20 V312
0x499: M[V314] = S4
0x49a: V315 = 0x20
0x49c: V316 = ADD 0x20 V314
0x4a4: V317 = 0x40
0x4a6: V318 = M[0x40]
0x4a9: V319 = SUB V316 V318
0x4ab: V320 = SHA3 V318 V319
0x4ae: V321 = 0x4b7
0x4b3: V322 = 0x65d
0x4b6: JUMP 0x65d
---
Entry stack: [V103, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V320, S1, 0x4b7, V320, S3]
Exit stack: [V103, S10, S9, S8, S7, S6, S5, S4, S3, V320, S1, 0x4b7, V320, S3]

================================

Block 0x4b7
[0x4b7:0x4ea]
---
Predecessors: [0x7ac]
Successors: [0x4eb]
---
0x4b7 JUMPDEST
0x4b8 SWAP1
0x4b9 POP
0x4ba PUSH32 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad
0x4db PUSH1 0x0
0x4dd PUSH1 0x0
0x4df POP
0x4e0 PUSH1 0x1
0x4e2 DUP2
0x4e3 SLOAD
0x4e4 DUP2
0x4e5 LT
0x4e6 ISZERO
0x4e7 PUSH2 0x2
0x4ea JUMPI
---
0x4b7: JUMPDEST 
0x4ba: V323 = 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad
0x4db: V324 = 0x0
0x4dd: V325 = 0x0
0x4e0: V326 = 0x1
0x4e3: V327 = S[0x0]
0x4e5: V328 = LT 0x1 V327
0x4e6: V329 = ISZERO V328
0x4e7: V330 = 0x2
0x4ea: THROWI V329
---
Entry stack: [S8, S7, S6, V8, 0x221, V82, V320, S1, V560]
Stack pops: 2
Stack additions: [S0, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, 0x0, 0x1]
Exit stack: [S8, S7, S6, V8, 0x221, V82, V320, V560, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, 0x0, 0x1]

================================

Block 0x4eb
[0x4eb:0x4f7]
---
Predecessors: [0x4b7]
Successors: [0x4f8]
---
0x4eb SWAP1
0x4ec PUSH1 0x0
0x4ee MSTORE
0x4ef PUSH1 0x20
0x4f1 PUSH1 0x0
0x4f3 SHA3
0x4f4 SWAP1
0x4f5 ADD
0x4f6 PUSH1 0x0
---
0x4ec: V331 = 0x0
0x4ee: M[0x0] = 0x0
0x4ef: V332 = 0x20
0x4f1: V333 = 0x0
0x4f3: V334 = SHA3 0x0 0x20
0x4f5: V335 = ADD 0x1 V334
0x4f6: V336 = 0x0
---
Entry stack: [S10, S9, S8, V8, 0x221, V82, V320, S3, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, 0x0, 0x1]
Stack pops: 2
Stack additions: [V335, 0x0]
Exit stack: [S10, S9, S8, V8, 0x221, V82, V320, S3, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V335, 0x0]

================================

Block 0x4f8
[0x4f8:0x5cb]
---
Predecessors: [0x4eb]
Successors: [0x5cc, 0x5e5]
---
0x4f8 JUMPDEST
0x4f9 SWAP1
0x4fa SLOAD
0x4fb SWAP1
0x4fc PUSH2 0x100
0x4ff EXP
0x500 SWAP1
0x501 DIV
0x502 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x517 AND
0x518 DUP3
0x519 DUP5
0x51a DUP12
0x51b DUP12
0x51c DUP12
0x51d DUP10
0x51e PUSH1 0x40
0x520 MLOAD
0x521 DUP1
0x522 DUP9
0x523 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x538 AND
0x539 DUP2
0x53a MSTORE
0x53b PUSH1 0x20
0x53d ADD
0x53e DUP8
0x53f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x554 AND
0x555 DUP2
0x556 MSTORE
0x557 PUSH1 0x20
0x559 ADD
0x55a DUP7
0x55b PUSH1 0x0
0x55d NOT
0x55e AND
0x55f DUP2
0x560 MSTORE
0x561 PUSH1 0x20
0x563 ADD
0x564 DUP6
0x565 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57a AND
0x57b DUP2
0x57c MSTORE
0x57d PUSH1 0x20
0x57f ADD
0x580 DUP5
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x20
0x585 ADD
0x586 DUP1
0x587 PUSH1 0x20
0x589 ADD
0x58a DUP1
0x58b PUSH1 0x20
0x58d ADD
0x58e DUP4
0x58f DUP2
0x590 SUB
0x591 DUP4
0x592 MSTORE
0x593 DUP6
0x594 DUP2
0x595 DUP2
0x596 MLOAD
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP2
0x59d POP
0x59e DUP1
0x59f MLOAD
0x5a0 SWAP1
0x5a1 PUSH1 0x20
0x5a3 ADD
0x5a4 SWAP1
0x5a5 DUP1
0x5a6 DUP4
0x5a7 DUP4
0x5a8 DUP3
0x5a9 SWAP1
0x5aa PUSH1 0x0
0x5ac PUSH1 0x4
0x5ae PUSH1 0x20
0x5b0 DUP5
0x5b1 PUSH1 0x1f
0x5b3 ADD
0x5b4 DIV
0x5b5 PUSH1 0xf
0x5b7 MUL
0x5b8 PUSH1 0x3
0x5ba ADD
0x5bb CALL
0x5bc POP
0x5bd SWAP1
0x5be POP
0x5bf SWAP1
0x5c0 DUP2
0x5c1 ADD
0x5c2 SWAP1
0x5c3 PUSH1 0x1f
0x5c5 AND
0x5c6 DUP1
0x5c7 ISZERO
0x5c8 PUSH2 0x5e5
0x5cb JUMPI
---
0x4f8: JUMPDEST 
0x4fa: V337 = S[V335]
0x4fc: V338 = 0x100
0x4ff: V339 = EXP 0x100 0x0
0x501: V340 = DIV V337 0x1
0x502: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x517: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x51e: V343 = 0x40
0x520: V344 = M[0x40]
0x523: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x538: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x53a: M[V344] = V346
0x53b: V347 = 0x20
0x53d: V348 = ADD 0x20 V344
0x53f: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x554: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x556: M[V348] = V350
0x557: V351 = 0x20
0x559: V352 = ADD 0x20 V348
0x55b: V353 = 0x0
0x55d: V354 = NOT 0x0
0x55e: V355 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V320
0x560: M[V352] = V355
0x561: V356 = 0x20
0x563: V357 = ADD 0x20 V352
0x565: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x57a: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x57c: M[V357] = V359
0x57d: V360 = 0x20
0x57f: V361 = ADD 0x20 V357
0x582: M[V361] = S9
0x583: V362 = 0x20
0x585: V363 = ADD 0x20 V361
0x587: V364 = 0x20
0x589: V365 = ADD 0x20 V363
0x58b: V366 = 0x20
0x58d: V367 = ADD 0x20 V365
0x590: V368 = SUB V367 V344
0x592: M[V363] = V368
0x596: V369 = M[S8]
0x598: M[V367] = V369
0x599: V370 = 0x20
0x59b: V371 = ADD 0x20 V367
0x59f: V372 = M[S8]
0x5a1: V373 = 0x20
0x5a3: V374 = ADD 0x20 S8
0x5aa: V375 = 0x0
0x5ac: V376 = 0x4
0x5ae: V377 = 0x20
0x5b1: V378 = 0x1f
0x5b3: V379 = ADD 0x1f V372
0x5b4: V380 = DIV V379 0x20
0x5b5: V381 = 0xf
0x5b7: V382 = MUL 0xf V380
0x5b8: V383 = 0x3
0x5ba: V384 = ADD 0x3 V382
0x5bb: V385 = CALL V384 0x4 0x0 V374 V372 V371 V372
0x5c1: V386 = ADD V372 V371
0x5c3: V387 = 0x1f
0x5c5: V388 = AND 0x1f V372
0x5c7: V389 = ISZERO V388
0x5c8: V390 = 0x5e5
0x5cb: JUMPI 0x5e5 V389
---
Entry stack: [S10, S9, S8, V8, 0x221, V82, V320, S3, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V335, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V342, S3, S4, S10, S9, S8, S5, V344, V363, V365, V386, V388]
Exit stack: [S10, S9, S8, V8, 0x221, V82, V320, S3, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V342, S3, V320, S10, S9, S8, V82, V344, V363, V365, V386, V388]

================================

Block 0x5cc
[0x5cc:0x5e4]
---
Predecessors: [0x4f8]
Successors: [0x5e5]
---
0x5cc DUP1
0x5cd DUP3
0x5ce SUB
0x5cf DUP1
0x5d0 MLOAD
0x5d1 PUSH1 0x1
0x5d3 DUP4
0x5d4 PUSH1 0x20
0x5d6 SUB
0x5d7 PUSH2 0x100
0x5da EXP
0x5db SUB
0x5dc NOT
0x5dd AND
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH1 0x20
0x5e2 ADD
0x5e3 SWAP2
0x5e4 POP
---
0x5ce: V391 = SUB V386 V388
0x5d0: V392 = M[V391]
0x5d1: V393 = 0x1
0x5d4: V394 = 0x20
0x5d6: V395 = SUB 0x20 V388
0x5d7: V396 = 0x100
0x5da: V397 = EXP 0x100 V395
0x5db: V398 = SUB V397 0x1
0x5dc: V399 = NOT V398
0x5dd: V400 = AND V399 V392
0x5df: M[V391] = V400
0x5e0: V401 = 0x20
0x5e2: V402 = ADD 0x20 V391
---
Entry stack: [S20, S19, S18, V8, 0x221, V82, V320, S13, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V342, S10, V320, S8, S7, S6, V82, V344, V363, V365, V386, V388]
Stack pops: 2
Stack additions: [V402, S0]
Exit stack: [S20, S19, S18, V8, 0x221, V82, V320, S13, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V342, S10, V320, S8, S7, S6, V82, V344, V363, V365, V402, V388]

================================

Block 0x5e5
[0x5e5:0x624]
---
Predecessors: [0x4f8, 0x5cc]
Successors: [0x625, 0x63e]
---
0x5e5 JUMPDEST
0x5e6 POP
0x5e7 DUP4
0x5e8 DUP2
0x5e9 SUB
0x5ea DUP3
0x5eb MSTORE
0x5ec DUP5
0x5ed DUP2
0x5ee DUP2
0x5ef MLOAD
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 ADD
0x5f5 SWAP2
0x5f6 POP
0x5f7 DUP1
0x5f8 MLOAD
0x5f9 SWAP1
0x5fa PUSH1 0x20
0x5fc ADD
0x5fd SWAP1
0x5fe DUP1
0x5ff DUP4
0x600 DUP4
0x601 DUP3
0x602 SWAP1
0x603 PUSH1 0x0
0x605 PUSH1 0x4
0x607 PUSH1 0x20
0x609 DUP5
0x60a PUSH1 0x1f
0x60c ADD
0x60d DIV
0x60e PUSH1 0xf
0x610 MUL
0x611 PUSH1 0x3
0x613 ADD
0x614 CALL
0x615 POP
0x616 SWAP1
0x617 POP
0x618 SWAP1
0x619 DUP2
0x61a ADD
0x61b SWAP1
0x61c PUSH1 0x1f
0x61e AND
0x61f DUP1
0x620 ISZERO
0x621 PUSH2 0x63e
0x624 JUMPI
---
0x5e5: JUMPDEST 
0x5e9: V403 = SUB S1 V344
0x5eb: M[V365] = V403
0x5ef: V404 = M[V82]
0x5f1: M[S1] = V404
0x5f2: V405 = 0x20
0x5f4: V406 = ADD 0x20 S1
0x5f8: V407 = M[V82]
0x5fa: V408 = 0x20
0x5fc: V409 = ADD 0x20 V82
0x603: V410 = 0x0
0x605: V411 = 0x4
0x607: V412 = 0x20
0x60a: V413 = 0x1f
0x60c: V414 = ADD 0x1f V407
0x60d: V415 = DIV V414 0x20
0x60e: V416 = 0xf
0x610: V417 = MUL 0xf V415
0x611: V418 = 0x3
0x613: V419 = ADD 0x3 V417
0x614: V420 = CALL V419 0x4 0x0 V409 V407 V406 V407
0x61a: V421 = ADD V407 V406
0x61c: V422 = 0x1f
0x61e: V423 = AND 0x1f V407
0x620: V424 = ISZERO V423
0x621: V425 = 0x63e
0x624: JUMPI 0x63e V424
---
Entry stack: [S20, S19, S18, V8, 0x221, V82, V320, S13, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V342, S10, V320, S8, S7, S6, V82, V344, V363, V365, S1, V388]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V421, V423]
Exit stack: [S20, S19, S18, V8, 0x221, V82, V320, S13, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V342, S10, V320, S8, S7, S6, V82, V344, V363, V365, V421, V423]

================================

Block 0x625
[0x625:0x63d]
---
Predecessors: [0x5e5]
Successors: [0x63e]
---
0x625 DUP1
0x626 DUP3
0x627 SUB
0x628 DUP1
0x629 MLOAD
0x62a PUSH1 0x1
0x62c DUP4
0x62d PUSH1 0x20
0x62f SUB
0x630 PUSH2 0x100
0x633 EXP
0x634 SUB
0x635 NOT
0x636 AND
0x637 DUP2
0x638 MSTORE
0x639 PUSH1 0x20
0x63b ADD
0x63c SWAP2
0x63d POP
---
0x627: V426 = SUB V421 V423
0x629: V427 = M[V426]
0x62a: V428 = 0x1
0x62d: V429 = 0x20
0x62f: V430 = SUB 0x20 V423
0x630: V431 = 0x100
0x633: V432 = EXP 0x100 V430
0x634: V433 = SUB V432 0x1
0x635: V434 = NOT V433
0x636: V435 = AND V434 V427
0x638: M[V426] = V435
0x639: V436 = 0x20
0x63b: V437 = ADD 0x20 V426
---
Entry stack: [S20, S19, S18, V8, 0x221, V82, V320, S13, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V342, S10, V320, S8, S7, S6, V82, V344, V363, V365, V421, V423]
Stack pops: 2
Stack additions: [V437, S0]
Exit stack: [S20, S19, S18, V8, 0x221, V82, V320, S13, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, V342, S10, V320, S8, S7, S6, V82, V344, V363, V365, V437, V423]

================================

Block 0x63e
[0x63e:0x652]
---
Predecessors: [0x5e5, 0x625]
Successors: [0x653]
---
0x63e JUMPDEST
0x63f POP
0x640 SWAP10
0x641 POP
0x642 POP
0x643 POP
0x644 POP
0x645 POP
0x646 POP
0x647 POP
0x648 POP
0x649 POP
0x64a POP
0x64b PUSH1 0x40
0x64d MLOAD
0x64e DUP1
0x64f SWAP2
0x650 SUB
0x651 SWAP1
0x652 LOG1
---
0x63e: JUMPDEST 
0x64b: V438 = 0x40
0x64d: V439 = M[0x40]
0x650: V440 = SUB S1 V439
0x652: LOG V439 V440 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad
---
Entry stack: [S20, S19, S18, V8, 0x221, V82, V320, S13, 0x5e78541724fbb06560a006f11d6cd21e8ae13076f4c3a5ae3fa6820e68af11ad, S11, S10, V320, S8, S7, S6, V82, S4, S3, S2, S1, V423]
Stack pops: 13
Stack additions: []
Exit stack: [S20, S19, S18, V8, 0x221, V82, V320, S13]

================================

Block 0x653
[0x653:0x65c]
---
Predecessors: [0x63e]
Successors: []
Has unresolved jump.
---
0x653 JUMPDEST
0x654 POP
0x655 POP
0x656 POP
0x657 POP
0x658 POP
0x659 POP
0x65a POP
0x65b POP
0x65c JUMP
---
0x653: JUMPDEST 
0x65c: JUMP S8
---
Entry stack: [S7, S6, S5, V8, 0x221, V82, V320, S0]
Stack pops: 9
Stack additions: []
Exit stack: []

================================

Block 0x65d
[0x65d:0x670]
---
Predecessors: [0x223, 0x432]
Successors: [0x671, 0x675]
---
0x65d JUMPDEST
0x65e PUSH1 0x0
0x660 PUSH1 0x0
0x662 PUSH1 0x0
0x664 PUSH1 0x0
0x666 PUSH1 0x41
0x668 DUP6
0x669 MLOAD
0x66a EQ
0x66b ISZERO
0x66c ISZERO
0x66d PUSH2 0x675
0x670 JUMPI
---
0x65d: JUMPDEST 
0x65e: V441 = 0x0
0x660: V442 = 0x0
0x662: V443 = 0x0
0x664: V444 = 0x0
0x666: V445 = 0x41
0x669: V446 = M[S0]
0x66a: V447 = EQ V446 0x41
0x66b: V448 = ISZERO V447
0x66c: V449 = ISZERO V448
0x66d: V450 = 0x675
0x670: JUMPI 0x675 V449
---
Entry stack: [V103, S12, S11, S10, S9, S8, S7, S6, S5, V320, S3, {0x280, 0x4b7}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V103, S12, S11, S10, S9, S8, S7, S6, S5, V320, S3, {0x280, 0x4b7}, S1, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x671
[0x671:0x674]
---
Predecessors: [0x65d]
Successors: []
---
0x671 PUSH2 0x2
0x674 JUMP
---
0x671: V451 = 0x2
0x674: THROW 
---
Entry stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, V320, S7, {0x280, 0x4b7}, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, V320, S7, {0x280, 0x4b7}, S5, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x675
[0x675:0x720]
---
Predecessors: [0x65d]
Successors: [0x721, 0x73a]
---
0x675 JUMPDEST
0x676 PUSH1 0x20
0x678 DUP6
0x679 ADD
0x67a MLOAD
0x67b SWAP3
0x67c POP
0x67d PUSH1 0x40
0x67f DUP6
0x680 ADD
0x681 MLOAD
0x682 SWAP2
0x683 POP
0x684 PUSH1 0xff
0x686 PUSH1 0x41
0x688 DUP7
0x689 ADD
0x68a MLOAD
0x68b AND
0x68c SWAP1
0x68d POP
0x68e PUSH32 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7
0x6af DUP6
0x6b0 DUP8
0x6b1 DUP4
0x6b2 DUP7
0x6b3 DUP7
0x6b4 PUSH1 0x40
0x6b6 MLOAD
0x6b7 DUP1
0x6b8 DUP1
0x6b9 PUSH1 0x20
0x6bb ADD
0x6bc DUP7
0x6bd PUSH1 0x0
0x6bf NOT
0x6c0 AND
0x6c1 DUP2
0x6c2 MSTORE
0x6c3 PUSH1 0x20
0x6c5 ADD
0x6c6 DUP6
0x6c7 PUSH1 0xff
0x6c9 AND
0x6ca DUP2
0x6cb MSTORE
0x6cc PUSH1 0x20
0x6ce ADD
0x6cf DUP5
0x6d0 PUSH1 0x0
0x6d2 NOT
0x6d3 AND
0x6d4 DUP2
0x6d5 MSTORE
0x6d6 PUSH1 0x20
0x6d8 ADD
0x6d9 DUP4
0x6da PUSH1 0x0
0x6dc NOT
0x6dd AND
0x6de DUP2
0x6df MSTORE
0x6e0 PUSH1 0x20
0x6e2 ADD
0x6e3 DUP3
0x6e4 DUP2
0x6e5 SUB
0x6e6 DUP3
0x6e7 MSTORE
0x6e8 DUP8
0x6e9 DUP2
0x6ea DUP2
0x6eb MLOAD
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x20
0x6f0 ADD
0x6f1 SWAP2
0x6f2 POP
0x6f3 DUP1
0x6f4 MLOAD
0x6f5 SWAP1
0x6f6 PUSH1 0x20
0x6f8 ADD
0x6f9 SWAP1
0x6fa DUP1
0x6fb DUP4
0x6fc DUP4
0x6fd DUP3
0x6fe SWAP1
0x6ff PUSH1 0x0
0x701 PUSH1 0x4
0x703 PUSH1 0x20
0x705 DUP5
0x706 PUSH1 0x1f
0x708 ADD
0x709 DIV
0x70a PUSH1 0xf
0x70c MUL
0x70d PUSH1 0x3
0x70f ADD
0x710 CALL
0x711 POP
0x712 SWAP1
0x713 POP
0x714 SWAP1
0x715 DUP2
0x716 ADD
0x717 SWAP1
0x718 PUSH1 0x1f
0x71a AND
0x71b DUP1
0x71c ISZERO
0x71d PUSH2 0x73a
0x720 JUMPI
---
0x675: JUMPDEST 
0x676: V452 = 0x20
0x679: V453 = ADD S4 0x20
0x67a: V454 = M[V453]
0x67d: V455 = 0x40
0x680: V456 = ADD S4 0x40
0x681: V457 = M[V456]
0x684: V458 = 0xff
0x686: V459 = 0x41
0x689: V460 = ADD S4 0x41
0x68a: V461 = M[V460]
0x68b: V462 = AND V461 0xff
0x68e: V463 = 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7
0x6b4: V464 = 0x40
0x6b6: V465 = M[0x40]
0x6b9: V466 = 0x20
0x6bb: V467 = ADD 0x20 V465
0x6bd: V468 = 0x0
0x6bf: V469 = NOT 0x0
0x6c0: V470 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S5
0x6c2: M[V467] = V470
0x6c3: V471 = 0x20
0x6c5: V472 = ADD 0x20 V467
0x6c7: V473 = 0xff
0x6c9: V474 = AND 0xff V462
0x6cb: M[V472] = V474
0x6cc: V475 = 0x20
0x6ce: V476 = ADD 0x20 V472
0x6d0: V477 = 0x0
0x6d2: V478 = NOT 0x0
0x6d3: V479 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V454
0x6d5: M[V476] = V479
0x6d6: V480 = 0x20
0x6d8: V481 = ADD 0x20 V476
0x6da: V482 = 0x0
0x6dc: V483 = NOT 0x0
0x6dd: V484 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V457
0x6df: M[V481] = V484
0x6e0: V485 = 0x20
0x6e2: V486 = ADD 0x20 V481
0x6e5: V487 = SUB V486 V465
0x6e7: M[V465] = V487
0x6eb: V488 = M[S4]
0x6ed: M[V486] = V488
0x6ee: V489 = 0x20
0x6f0: V490 = ADD 0x20 V486
0x6f4: V491 = M[S4]
0x6f6: V492 = 0x20
0x6f8: V493 = ADD 0x20 S4
0x6ff: V494 = 0x0
0x701: V495 = 0x4
0x703: V496 = 0x20
0x706: V497 = 0x1f
0x708: V498 = ADD 0x1f V491
0x709: V499 = DIV V498 0x20
0x70a: V500 = 0xf
0x70c: V501 = MUL 0xf V499
0x70d: V502 = 0x3
0x70f: V503 = ADD 0x3 V501
0x710: V504 = CALL V503 0x4 0x0 V493 V491 V490 V491
0x716: V505 = ADD V491 V490
0x718: V506 = 0x1f
0x71a: V507 = AND 0x1f V491
0x71c: V508 = ISZERO V507
0x71d: V509 = 0x73a
0x720: JUMPI 0x73a V508
---
Entry stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, V320, S7, {0x280, 0x4b7}, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V454, V457, V462, 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7, S4, S5, V462, V454, V457, V465, V465, V505, V507]
Exit stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, V320, S7, {0x280, 0x4b7}, S5, S4, 0x0, V454, V457, V462, 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7, S4, S5, V462, V454, V457, V465, V465, V505, V507]

================================

Block 0x721
[0x721:0x739]
---
Predecessors: [0x675]
Successors: [0x73a]
---
0x721 DUP1
0x722 DUP3
0x723 SUB
0x724 DUP1
0x725 MLOAD
0x726 PUSH1 0x1
0x728 DUP4
0x729 PUSH1 0x20
0x72b SUB
0x72c PUSH2 0x100
0x72f EXP
0x730 SUB
0x731 NOT
0x732 AND
0x733 DUP2
0x734 MSTORE
0x735 PUSH1 0x20
0x737 ADD
0x738 SWAP2
0x739 POP
---
0x723: V510 = SUB V505 V507
0x725: V511 = M[V510]
0x726: V512 = 0x1
0x729: V513 = 0x20
0x72b: V514 = SUB 0x20 V507
0x72c: V515 = 0x100
0x72f: V516 = EXP 0x100 V514
0x730: V517 = SUB V516 0x1
0x731: V518 = NOT V517
0x732: V519 = AND V518 V511
0x734: M[V510] = V519
0x735: V520 = 0x20
0x737: V521 = ADD 0x20 V510
---
Entry stack: [V103, S26, S25, S24, S23, S22, S21, S20, S19, V320, S17, {0x280, 0x4b7}, S15, S14, 0x0, V454, V457, V462, 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7, S8, S7, V462, V454, V457, V465, V465, V505, V507]
Stack pops: 2
Stack additions: [V521, S0]
Exit stack: [V103, S26, S25, S24, S23, S22, S21, S20, S19, V320, S17, {0x280, 0x4b7}, S15, S14, 0x0, V454, V457, V462, 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7, S8, S7, V462, V454, V457, V465, V465, V521, V507]

================================

Block 0x73a
[0x73a:0x799]
---
Predecessors: [0x675, 0x721]
Successors: [0x79a]
---
0x73a JUMPDEST
0x73b POP
0x73c SWAP7
0x73d POP
0x73e POP
0x73f POP
0x740 POP
0x741 POP
0x742 POP
0x743 POP
0x744 PUSH1 0x40
0x746 MLOAD
0x747 DUP1
0x748 SWAP2
0x749 SUB
0x74a SWAP1
0x74b LOG1
0x74c PUSH1 0x1
0x74e DUP7
0x74f DUP3
0x750 DUP6
0x751 DUP6
0x752 PUSH1 0x40
0x754 MLOAD
0x755 DUP1
0x756 DUP6
0x757 PUSH1 0x0
0x759 NOT
0x75a AND
0x75b DUP2
0x75c MSTORE
0x75d PUSH1 0x20
0x75f ADD
0x760 DUP5
0x761 PUSH1 0xff
0x763 AND
0x764 DUP2
0x765 MSTORE
0x766 PUSH1 0x20
0x768 ADD
0x769 DUP4
0x76a PUSH1 0x0
0x76c NOT
0x76d AND
0x76e DUP2
0x76f MSTORE
0x770 PUSH1 0x20
0x772 ADD
0x773 DUP3
0x774 PUSH1 0x0
0x776 NOT
0x777 AND
0x778 DUP2
0x779 MSTORE
0x77a PUSH1 0x20
0x77c ADD
0x77d SWAP5
0x77e POP
0x77f POP
0x780 POP
0x781 POP
0x782 POP
0x783 PUSH1 0x20
0x785 PUSH1 0x40
0x787 MLOAD
0x788 DUP1
0x789 DUP4
0x78a SUB
0x78b DUP2
0x78c PUSH1 0x0
0x78e DUP7
0x78f PUSH2 0x61da
0x792 GAS
0x793 SUB
0x794 CALL
0x795 ISZERO
0x796 PUSH2 0x2
0x799 JUMPI
---
0x73a: JUMPDEST 
0x744: V522 = 0x40
0x746: V523 = M[0x40]
0x749: V524 = SUB S1 V523
0x74b: LOG V523 V524 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7
0x74c: V525 = 0x1
0x752: V526 = 0x40
0x754: V527 = M[0x40]
0x757: V528 = 0x0
0x759: V529 = NOT 0x0
0x75a: V530 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S15
0x75c: M[V527] = V530
0x75d: V531 = 0x20
0x75f: V532 = ADD 0x20 V527
0x761: V533 = 0xff
0x763: V534 = AND 0xff V462
0x765: M[V532] = V534
0x766: V535 = 0x20
0x768: V536 = ADD 0x20 V532
0x76a: V537 = 0x0
0x76c: V538 = NOT 0x0
0x76d: V539 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V454
0x76f: M[V536] = V539
0x770: V540 = 0x20
0x772: V541 = ADD 0x20 V536
0x774: V542 = 0x0
0x776: V543 = NOT 0x0
0x777: V544 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V457
0x779: M[V541] = V544
0x77a: V545 = 0x20
0x77c: V546 = ADD 0x20 V541
0x783: V547 = 0x20
0x785: V548 = 0x40
0x787: V549 = M[0x40]
0x78a: V550 = SUB V546 V549
0x78c: V551 = 0x0
0x78f: V552 = 0x61da
0x792: V553 = GAS
0x793: V554 = SUB V553 0x61da
0x794: V555 = CALL V554 0x1 0x0 V549 V550 V549 0x20
0x795: V556 = ISZERO V555
0x796: V557 = 0x2
0x799: THROWI V556
---
Entry stack: [V103, S26, S25, S24, S23, S22, S21, S20, S19, V320, S17, {0x280, 0x4b7}, S15, S14, 0x0, V454, V457, V462, 0xeb7789b606ba0a7fd403fd40fd3bc19f031b88bf789ae630f76cbfc81c39b4d7, S8, S7, V462, V454, V457, V465, V465, S1, V507]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, 0x1, V546]
Exit stack: [V103, S26, S25, S24, S23, S22, S21, S20, S19, V320, S17, {0x280, 0x4b7}, S15, S14, 0x0, V454, V457, V462, 0x1, V546]

================================

Block 0x79a
[0x79a:0x7ab]
---
Predecessors: [0x73a]
Successors: [0x7ac]
---
0x79a POP
0x79b POP
0x79c PUSH1 0x40
0x79e MLOAD
0x79f DUP1
0x7a0 MLOAD
0x7a1 SWAP1
0x7a2 PUSH1 0x20
0x7a4 ADD
0x7a5 POP
0x7a6 SWAP4
0x7a7 POP
0x7a8 PUSH2 0x7ac
0x7ab JUMP
---
0x79c: V558 = 0x40
0x79e: V559 = M[0x40]
0x7a0: V560 = M[V559]
0x7a2: V561 = 0x20
0x7a4: V562 = ADD 0x20 V559
0x7a8: V563 = 0x7ac
0x7ab: JUMP 0x7ac
---
Entry stack: [S16, S15, S14, V8, 0x221, V82, V320, S9, {0x280, 0x4b7}, S7, S6, 0x0, S4, S3, S2, 0x1, V546]
Stack pops: 6
Stack additions: [V560, S4, S3, S2]
Exit stack: [S16, S15, S14, V8, 0x221, V82, V320, S9, {0x280, 0x4b7}, S7, S6, V560, S4, S3, S2]

================================

Block 0x7ac
[0x7ac:0x7b4]
---
Predecessors: [0x79a]
Successors: [0x280, 0x4b7]
---
0x7ac JUMPDEST
0x7ad POP
0x7ae POP
0x7af POP
0x7b0 SWAP3
0x7b1 SWAP2
0x7b2 POP
0x7b3 POP
0x7b4 JUMP
---
0x7ac: JUMPDEST 
0x7b4: JUMP {0x280, 0x4b7}
---
Entry stack: [S14, S13, S12, V8, 0x221, V82, V320, S7, {0x280, 0x4b7}, S5, S4, V560, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [S14, S13, S12, V8, 0x221, V82, V320, S7, V560]

================================

Block 0x7b5
[0x7b5:0x7bd]
---
Predecessors: [0x2ac, 0x3d8, 0x407, 0x863, 0x9bc, 0xa09]
Successors: [0x7be]
---
0x7b5 JUMPDEST
0x7b6 PUSH1 0x0
0x7b8 PUSH1 0x0
0x7ba PUSH1 0x0
0x7bc SWAP1
0x7bd POP
---
0x7b5: JUMPDEST 
0x7b6: V564 = 0x0
0x7b8: V565 = 0x0
0x7ba: V566 = 0x0
---
Entry stack: [V8, 0x221, V82, V85, V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V8, 0x221, V82, V85, V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S0, 0x0, 0x0]

================================

Block 0x7be
[0x7be:0x7ce]
---
Predecessors: [0x7b5, 0x847]
Successors: [0x7cf, 0x854]
---
0x7be JUMPDEST
0x7bf PUSH1 0x0
0x7c1 PUSH1 0x0
0x7c3 POP
0x7c4 DUP1
0x7c5 SLOAD
0x7c6 SWAP1
0x7c7 POP
0x7c8 DUP2
0x7c9 LT
0x7ca ISZERO
0x7cb PUSH2 0x854
0x7ce JUMPI
---
0x7be: JUMPDEST 
0x7bf: V567 = 0x0
0x7c1: V568 = 0x0
0x7c5: V569 = S[0x0]
0x7c9: V570 = LT S0 V569
0x7ca: V571 = ISZERO V570
0x7cb: V572 = 0x854
0x7ce: JUMPI 0x854 V571
---
Entry stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]

================================

Block 0x7cf
[0x7cf:0x7f4]
---
Predecessors: [0x7be]
Successors: [0x7f5]
---
0x7cf DUP3
0x7d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e5 AND
0x7e6 PUSH1 0x0
0x7e8 PUSH1 0x0
0x7ea POP
0x7eb DUP3
0x7ec DUP2
0x7ed SLOAD
0x7ee DUP2
0x7ef LT
0x7f0 ISZERO
0x7f1 PUSH2 0x2
0x7f4 JUMPI
---
0x7d0: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x7e6: V575 = 0x0
0x7e8: V576 = 0x0
0x7ed: V577 = S[0x0]
0x7ef: V578 = LT S0 V577
0x7f0: V579 = ISZERO V578
0x7f1: V580 = 0x2
0x7f4: THROWI V579
---
Entry stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V574, 0x0, S0]
Exit stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0, V574, 0x0, S0]

================================

Block 0x7f5
[0x7f5:0x801]
---
Predecessors: [0x7cf]
Successors: [0x802]
---
0x7f5 SWAP1
0x7f6 PUSH1 0x0
0x7f8 MSTORE
0x7f9 PUSH1 0x20
0x7fb PUSH1 0x0
0x7fd SHA3
0x7fe SWAP1
0x7ff ADD
0x800 PUSH1 0x0
---
0x7f6: V581 = 0x0
0x7f8: M[0x0] = 0x0
0x7f9: V582 = 0x20
0x7fb: V583 = 0x0
0x7fd: V584 = SHA3 0x0 0x20
0x7ff: V585 = ADD S0 V584
0x800: V586 = 0x0
---
Entry stack: [V8, 0x221, V82, V85, V103, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S5, 0x0, S3, V574, 0x0, S0]
Stack pops: 2
Stack additions: [V585, 0x0]
Exit stack: [V8, 0x221, V82, V85, V103, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S5, 0x0, S3, V574, V585, 0x0]

================================

Block 0x802
[0x802:0x83d]
---
Predecessors: [0x7f5]
Successors: [0x83e, 0x846]
---
0x802 JUMPDEST
0x803 SWAP1
0x804 SLOAD
0x805 SWAP1
0x806 PUSH2 0x100
0x809 EXP
0x80a SWAP1
0x80b DIV
0x80c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x821 AND
0x822 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x837 AND
0x838 EQ
0x839 ISZERO
0x83a PUSH2 0x846
0x83d JUMPI
---
0x802: JUMPDEST 
0x804: V587 = S[V585]
0x806: V588 = 0x100
0x809: V589 = EXP 0x100 0x0
0x80b: V590 = DIV V587 0x1
0x80c: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0x821: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x822: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x837: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x838: V595 = EQ V594 S2
0x839: V596 = ISZERO V595
0x83a: V597 = 0x846
0x83d: JUMPI 0x846 V596
---
Entry stack: [V8, 0x221, V82, V85, V103, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S5, 0x0, S3, S2, V585, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x221, V82, V85, V103, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S5, 0x0, S3]

================================

Block 0x83e
[0x83e:0x845]
---
Predecessors: [0x802]
Successors: [0x85d]
---
0x83e PUSH1 0x1
0x840 SWAP2
0x841 POP
0x842 PUSH2 0x85d
0x845 JUMP
---
0x83e: V598 = 0x1
0x842: V599 = 0x85d
0x845: JUMP 0x85d
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x1, S0]

================================

Block 0x846
[0x846:0x846]
---
Predecessors: [0x802]
Successors: [0x847]
---
0x846 JUMPDEST
---
0x846: JUMPDEST 
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]

================================

Block 0x847
[0x847:0x853]
---
Predecessors: [0x846]
Successors: [0x7be]
---
0x847 JUMPDEST
0x848 DUP1
0x849 DUP1
0x84a PUSH1 0x1
0x84c ADD
0x84d SWAP2
0x84e POP
0x84f POP
0x850 PUSH2 0x7be
0x853 JUMP
---
0x847: JUMPDEST 
0x84a: V600 = 0x1
0x84c: V601 = ADD 0x1 S0
0x850: V602 = 0x7be
0x853: JUMP 0x7be
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]
Stack pops: 1
Stack additions: [V601]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, V601]

================================

Block 0x854
[0x854:0x85c]
---
Predecessors: [0x7be]
Successors: [0x85d]
---
0x854 JUMPDEST
0x855 PUSH1 0x0
0x857 SWAP2
0x858 POP
0x859 PUSH2 0x85d
0x85c JUMP
---
0x854: JUMPDEST 
0x855: V603 = 0x0
0x859: V604 = 0x85d
0x85c: JUMP 0x85d
---
Entry stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, 0x0, S0]

================================

Block 0x85d
[0x85d:0x862]
---
Predecessors: [0x83e, 0x854]
Successors: [0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12]
---
0x85d JUMPDEST
0x85e POP
0x85f SWAP2
0x860 SWAP1
0x861 POP
0x862 JUMP
---
0x85d: JUMPDEST 
0x862: JUMP {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}
---
Entry stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2c2, 0x3e5, 0x410, 0x872, 0x9c7, 0xa12}, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V8, 0x221, V82, V85, V103, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x1}]

================================

Block 0x863
[0x863:0x871]
---
Predecessors: [0x2da, 0x429]
Successors: [0x7b5]
---
0x863 JUMPDEST
0x864 PUSH1 0x0
0x866 PUSH1 0x0
0x868 PUSH1 0x0
0x86a PUSH2 0x872
0x86d CALLER
0x86e PUSH2 0x7b5
0x871 JUMP
---
0x863: JUMPDEST 
0x864: V605 = 0x0
0x866: V606 = 0x0
0x868: V607 = 0x0
0x86a: V608 = 0x872
0x86d: V609 = CALLER
0x86e: V610 = 0x7b5
0x871: JUMP 0x7b5
---
Entry stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x2f0, 0x432}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x872, V609]
Exit stack: [S16, 0x221, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x2f0, 0x432}, S0, 0x0, 0x0, 0x0, 0x872, V609]

================================

Block 0x872
[0x872:0x878]
---
Predecessors: [0x85d]
Successors: [0x879, 0x87d]
---
0x872 JUMPDEST
0x873 ISZERO
0x874 ISZERO
0x875 PUSH2 0x87d
0x878 JUMPI
---
0x872: JUMPDEST 
0x873: V611 = ISZERO {0x0, 0x1}
0x874: V612 = ISZERO V611
0x875: V613 = 0x87d
0x878: JUMPI 0x87d V612
---
Entry stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x879
[0x879:0x87c]
---
Predecessors: [0x872]
Successors: []
---
0x879 PUSH2 0x2
0x87c JUMP
---
0x879: V614 = 0x2
0x87c: THROW 
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x87d
[0x87d:0x885]
---
Predecessors: [0x872]
Successors: [0x886]
---
0x87d JUMPDEST
0x87e PUSH1 0x0
0x880 SWAP2
0x881 POP
0x882 PUSH1 0x0
0x884 SWAP1
0x885 POP
---
0x87d: JUMPDEST 
0x87e: V615 = 0x0
0x882: V616 = 0x0
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x886
[0x886:0x892]
---
Predecessors: [0x87d, 0x8f9]
Successors: [0x893, 0x906]
---
0x886 JUMPDEST
0x887 PUSH1 0xa
0x889 DUP2
0x88a PUSH1 0xff
0x88c AND
0x88d LT
0x88e ISZERO
0x88f PUSH2 0x906
0x892 JUMPI
---
0x886: JUMPDEST 
0x887: V617 = 0xa
0x88a: V618 = 0xff
0x88c: V619 = AND 0xff S0
0x88d: V620 = LT V619 0xa
0x88e: V621 = ISZERO V620
0x88f: V622 = 0x906
0x892: JUMPI 0x906 V621
---
Entry stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x221, V82, V85, V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x893
[0x893:0x8a5]
---
Predecessors: [0x886]
Successors: [0x8a6]
---
0x893 DUP4
0x894 PUSH1 0x2
0x896 PUSH1 0x0
0x898 POP
0x899 DUP3
0x89a PUSH1 0xff
0x89c AND
0x89d PUSH1 0xa
0x89f DUP2
0x8a0 LT
0x8a1 ISZERO
0x8a2 PUSH2 0x2
0x8a5 JUMPI
---
0x894: V623 = 0x2
0x896: V624 = 0x0
0x89a: V625 = 0xff
0x89c: V626 = AND 0xff S0
0x89d: V627 = 0xa
0x8a0: V628 = LT V626 0xa
0x8a1: V629 = ISZERO V628
0x8a2: V630 = 0x2
0x8a5: THROWI V629
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x2, V626]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S3, 0x2, V626]

================================

Block 0x8a6
[0x8a6:0x8aa]
---
Predecessors: [0x893]
Successors: [0x8ab]
---
0x8a6 SWAP1
0x8a7 SWAP1
0x8a8 ADD
0x8a9 PUSH1 0x0
---
0x8a8: V631 = ADD V626 0x2
0x8a9: V632 = 0x0
---
Entry stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x2, V626]
Stack pops: 2
Stack additions: [V631, 0x0]
Exit stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V631, 0x0]

================================

Block 0x8ab
[0x8ab:0x8b3]
---
Predecessors: [0x8a6]
Successors: [0x8b4, 0x8b8]
---
0x8ab JUMPDEST
0x8ac POP
0x8ad SLOAD
0x8ae EQ
0x8af ISZERO
0x8b0 PUSH2 0x8b8
0x8b3 JUMPI
---
0x8ab: JUMPDEST 
0x8ad: V633 = S[V631]
0x8ae: V634 = EQ V633 S2
0x8af: V635 = ISZERO V634
0x8b0: V636 = 0x8b8
0x8b3: JUMPI 0x8b8 V635
---
Entry stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V631, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x8b4
[0x8b4:0x8b7]
---
Predecessors: [0x8ab]
Successors: []
---
0x8b4 PUSH2 0x2
0x8b7 JUMP
---
0x8b4: V637 = 0x2
0x8b7: THROW 
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8b8
[0x8b8:0x8c7]
---
Predecessors: [0x8ab]
Successors: [0x8c8]
---
0x8b8 JUMPDEST
0x8b9 PUSH1 0x2
0x8bb PUSH1 0x0
0x8bd POP
0x8be DUP3
0x8bf PUSH1 0xa
0x8c1 DUP2
0x8c2 LT
0x8c3 ISZERO
0x8c4 PUSH2 0x2
0x8c7 JUMPI
---
0x8b8: JUMPDEST 
0x8b9: V638 = 0x2
0x8bb: V639 = 0x0
0x8bf: V640 = 0xa
0x8c2: V641 = LT S1 0xa
0x8c3: V642 = ISZERO V641
0x8c4: V643 = 0x2
0x8c7: THROWI V642
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x2, S1]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x2, S1]

================================

Block 0x8c8
[0x8c8:0x8cc]
---
Predecessors: [0x8b8]
Successors: [0x8cd]
---
0x8c8 SWAP1
0x8c9 SWAP1
0x8ca ADD
0x8cb PUSH1 0x0
---
0x8ca: V644 = ADD S0 0x2
0x8cb: V645 = 0x0
---
Entry stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x2, S0]
Stack pops: 2
Stack additions: [V644, 0x0]
Exit stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V644, 0x0]

================================

Block 0x8cd
[0x8cd:0x8e1]
---
Predecessors: [0x8c8]
Successors: [0x8e2]
---
0x8cd JUMPDEST
0x8ce POP
0x8cf SLOAD
0x8d0 PUSH1 0x2
0x8d2 PUSH1 0x0
0x8d4 POP
0x8d5 DUP3
0x8d6 PUSH1 0xff
0x8d8 AND
0x8d9 PUSH1 0xa
0x8db DUP2
0x8dc LT
0x8dd ISZERO
0x8de PUSH2 0x2
0x8e1 JUMPI
---
0x8cd: JUMPDEST 
0x8cf: V646 = S[V644]
0x8d0: V647 = 0x2
0x8d2: V648 = 0x0
0x8d6: V649 = 0xff
0x8d8: V650 = AND 0xff S2
0x8d9: V651 = 0xa
0x8dc: V652 = LT V650 0xa
0x8dd: V653 = ISZERO V652
0x8de: V654 = 0x2
0x8e1: THROWI V653
---
Entry stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V644, 0x0]
Stack pops: 3
Stack additions: [S2, V646, 0x2, V650]
Exit stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V646, 0x2, V650]

================================

Block 0x8e2
[0x8e2:0x8e6]
---
Predecessors: [0x8cd]
Successors: [0x8e7]
---
0x8e2 SWAP1
0x8e3 SWAP1
0x8e4 ADD
0x8e5 PUSH1 0x0
---
0x8e4: V655 = ADD V650 0x2
0x8e5: V656 = 0x0
---
Entry stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V646, 0x2, V650]
Stack pops: 2
Stack additions: [V655, 0x0]
Exit stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V646, V655, 0x0]

================================

Block 0x8e7
[0x8e7:0x8ef]
---
Predecessors: [0x8e2]
Successors: [0x8f0, 0x8f8]
---
0x8e7 JUMPDEST
0x8e8 POP
0x8e9 SLOAD
0x8ea LT
0x8eb ISZERO
0x8ec PUSH2 0x8f8
0x8ef JUMPI
---
0x8e7: JUMPDEST 
0x8e9: V657 = S[V655]
0x8ea: V658 = LT V657 V646
0x8eb: V659 = ISZERO V658
0x8ec: V660 = 0x8f8
0x8ef: JUMPI 0x8f8 V659
---
Entry stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V646, V655, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x8f0
[0x8f0:0x8f7]
---
Predecessors: [0x8e7]
Successors: [0x8f8]
---
0x8f0 DUP1
0x8f1 PUSH1 0xff
0x8f3 AND
0x8f4 SWAP2
0x8f5 POP
0x8f6 DUP2
0x8f7 POP
---
0x8f1: V661 = 0xff
0x8f3: V662 = AND 0xff S0
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V662, S0]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V662, S0]

================================

Block 0x8f8
[0x8f8:0x8f8]
---
Predecessors: [0x8e7, 0x8f0]
Successors: [0x8f9]
---
0x8f8 JUMPDEST
---
0x8f8: JUMPDEST 
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8f9
[0x8f9:0x905]
---
Predecessors: [0x8f8]
Successors: [0x886]
---
0x8f9 JUMPDEST
0x8fa DUP1
0x8fb DUP1
0x8fc PUSH1 0x1
0x8fe ADD
0x8ff SWAP2
0x900 POP
0x901 POP
0x902 PUSH2 0x886
0x905 JUMP
---
0x8f9: JUMPDEST 
0x8fc: V663 = 0x1
0x8fe: V664 = ADD 0x1 S0
0x902: V665 = 0x886
0x905: JUMP 0x886
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V664]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V664]

================================

Block 0x906
[0x906:0x915]
---
Predecessors: [0x886]
Successors: [0x916]
---
0x906 JUMPDEST
0x907 PUSH1 0x2
0x909 PUSH1 0x0
0x90b POP
0x90c DUP3
0x90d PUSH1 0xa
0x90f DUP2
0x910 LT
0x911 ISZERO
0x912 PUSH2 0x2
0x915 JUMPI
---
0x906: JUMPDEST 
0x907: V666 = 0x2
0x909: V667 = 0x0
0x90d: V668 = 0xa
0x910: V669 = LT S1 0xa
0x911: V670 = ISZERO V669
0x912: V671 = 0x2
0x915: THROWI V670
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x2, S1]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x2, S1]

================================

Block 0x916
[0x916:0x91a]
---
Predecessors: [0x906]
Successors: [0x91b]
---
0x916 SWAP1
0x917 SWAP1
0x918 ADD
0x919 PUSH1 0x0
---
0x918: V672 = ADD S0 0x2
0x919: V673 = 0x0
---
Entry stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x2, S0]
Stack pops: 2
Stack additions: [V672, 0x0]
Exit stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V672, 0x0]

================================

Block 0x91b
[0x91b:0x924]
---
Predecessors: [0x916]
Successors: [0x925, 0x929]
---
0x91b JUMPDEST
0x91c POP
0x91d SLOAD
0x91e DUP5
0x91f LT
0x920 ISZERO
0x921 PUSH2 0x929
0x924 JUMPI
---
0x91b: JUMPDEST 
0x91d: V674 = S[V672]
0x91f: V675 = LT S5 V674
0x920: V676 = ISZERO V675
0x921: V677 = 0x929
0x924: JUMPI 0x929 V676
---
Entry stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V672, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2]
Exit stack: [V103, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x925
[0x925:0x928]
---
Predecessors: [0x91b]
Successors: []
---
0x925 PUSH2 0x2
0x928 JUMP
---
0x925: V678 = 0x2
0x928: THROW 
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x929
[0x929:0x939]
---
Predecessors: [0x91b]
Successors: [0x93a]
---
0x929 JUMPDEST
0x92a DUP4
0x92b PUSH1 0x2
0x92d PUSH1 0x0
0x92f POP
0x930 DUP4
0x931 PUSH1 0xa
0x933 DUP2
0x934 LT
0x935 ISZERO
0x936 PUSH2 0x2
0x939 JUMPI
---
0x929: JUMPDEST 
0x92b: V679 = 0x2
0x92d: V680 = 0x0
0x931: V681 = 0xa
0x934: V682 = LT S1 0xa
0x935: V683 = ISZERO V682
0x936: V684 = 0x2
0x939: THROWI V683
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x2, S1]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S3, 0x2, S1]

================================

Block 0x93a
[0x93a:0x93e]
---
Predecessors: [0x929]
Successors: [0x93f]
---
0x93a SWAP1
0x93b SWAP1
0x93c ADD
0x93d PUSH1 0x0
---
0x93c: V685 = ADD S0 0x2
0x93d: V686 = 0x0
---
Entry stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x2, S0]
Stack pops: 2
Stack additions: [V685, 0x0]
Exit stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V685, 0x0]

================================

Block 0x93f
[0x93f:0x944]
---
Predecessors: [0x93a]
Successors: [0x945]
---
0x93f JUMPDEST
0x940 POP
0x941 DUP2
0x942 SWAP1
0x943 SSTORE
0x944 POP
---
0x93f: JUMPDEST 
0x943: S[V685] = S2
---
Entry stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V685, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V103, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x945
[0x945:0x94b]
---
Predecessors: [0x93f]
Successors: [0x2f0, 0x432]
---
0x945 JUMPDEST
0x946 POP
0x947 POP
0x948 SWAP2
0x949 SWAP1
0x94a POP
0x94b JUMP
---
0x945: JUMPDEST 
0x94b: JUMP S4
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S2]

================================

Block 0x94c
[0x94c:0x95a]
---
Predecessors: [0x306]
Successors: [0x95b]
---
0x94c JUMPDEST
0x94d PUSH1 0x0
0x94f PUSH1 0x0
0x951 PUSH1 0x0
0x953 PUSH1 0x0
0x955 SWAP2
0x956 POP
0x957 PUSH1 0x0
0x959 SWAP1
0x95a POP
---
0x94c: JUMPDEST 
0x94d: V687 = 0x0
0x94f: V688 = 0x0
0x951: V689 = 0x0
0x953: V690 = 0x0
0x957: V691 = 0x0
---
Entry stack: [V8, 0x313]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V8, 0x313, 0x0, 0x0, 0x0]

================================

Block 0x95b
[0x95b:0x964]
---
Predecessors: [0x94c, 0x99f]
Successors: [0x965, 0x9ac]
---
0x95b JUMPDEST
0x95c PUSH1 0xa
0x95e DUP2
0x95f LT
0x960 ISZERO
0x961 PUSH2 0x9ac
0x964 JUMPI
---
0x95b: JUMPDEST 
0x95c: V692 = 0xa
0x95f: V693 = LT S0 0xa
0x960: V694 = ISZERO V693
0x961: V695 = 0x9ac
0x964: JUMPI 0x9ac V694
---
Entry stack: [V8, 0x313, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x313, 0x0, S1, S0]

================================

Block 0x965
[0x965:0x974]
---
Predecessors: [0x95b]
Successors: [0x975]
---
0x965 DUP2
0x966 PUSH1 0x2
0x968 PUSH1 0x0
0x96a POP
0x96b DUP3
0x96c PUSH1 0xa
0x96e DUP2
0x96f LT
0x970 ISZERO
0x971 PUSH2 0x2
0x974 JUMPI
---
0x966: V696 = 0x2
0x968: V697 = 0x0
0x96c: V698 = 0xa
0x96f: V699 = LT S0 0xa
0x970: V700 = ISZERO V699
0x971: V701 = 0x2
0x974: THROWI V700
---
Entry stack: [V8, 0x313, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, 0x2, S0]
Exit stack: [V8, 0x313, 0x0, S1, S0, S1, 0x2, S0]

================================

Block 0x975
[0x975:0x979]
---
Predecessors: [0x965]
Successors: [0x97a]
---
0x975 SWAP1
0x976 SWAP1
0x977 ADD
0x978 PUSH1 0x0
---
0x977: V702 = ADD S0 0x2
0x978: V703 = 0x0
---
Entry stack: [V8, 0x313, 0x0, S4, S3, S2, 0x2, S0]
Stack pops: 2
Stack additions: [V702, 0x0]
Exit stack: [V8, 0x313, 0x0, S4, S3, S2, V702, 0x0]

================================

Block 0x97a
[0x97a:0x982]
---
Predecessors: [0x975]
Successors: [0x983, 0x99e]
---
0x97a JUMPDEST
0x97b POP
0x97c SLOAD
0x97d GT
0x97e ISZERO
0x97f PUSH2 0x99e
0x982 JUMPI
---
0x97a: JUMPDEST 
0x97c: V704 = S[V702]
0x97d: V705 = GT V704 S2
0x97e: V706 = ISZERO V705
0x97f: V707 = 0x99e
0x982: JUMPI 0x99e V706
---
Entry stack: [V8, 0x313, 0x0, S4, S3, S2, V702, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V8, 0x313, 0x0, S4, S3]

================================

Block 0x983
[0x983:0x991]
---
Predecessors: [0x97a]
Successors: [0x992]
---
0x983 PUSH1 0x2
0x985 PUSH1 0x0
0x987 POP
0x988 DUP2
0x989 PUSH1 0xa
0x98b DUP2
0x98c LT
0x98d ISZERO
0x98e PUSH2 0x2
0x991 JUMPI
---
0x983: V708 = 0x2
0x985: V709 = 0x0
0x989: V710 = 0xa
0x98c: V711 = LT S0 0xa
0x98d: V712 = ISZERO V711
0x98e: V713 = 0x2
0x991: THROWI V712
---
Entry stack: [V8, 0x313, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x2, S0]
Exit stack: [V8, 0x313, 0x0, S1, S0, 0x2, S0]

================================

Block 0x992
[0x992:0x996]
---
Predecessors: [0x983]
Successors: [0x997]
---
0x992 SWAP1
0x993 SWAP1
0x994 ADD
0x995 PUSH1 0x0
---
0x994: V714 = ADD S0 0x2
0x995: V715 = 0x0
---
Entry stack: [V8, 0x313, 0x0, S3, S2, 0x2, S0]
Stack pops: 2
Stack additions: [V714, 0x0]
Exit stack: [V8, 0x313, 0x0, S3, S2, V714, 0x0]

================================

Block 0x997
[0x997:0x99d]
---
Predecessors: [0x992]
Successors: [0x99e]
---
0x997 JUMPDEST
0x998 POP
0x999 SLOAD
0x99a SWAP2
0x99b POP
0x99c DUP2
0x99d POP
---
0x997: JUMPDEST 
0x999: V716 = S[V714]
---
Entry stack: [V8, 0x313, 0x0, S3, S2, V714, 0x0]
Stack pops: 4
Stack additions: [V716, S2]
Exit stack: [V8, 0x313, 0x0, V716, S2]

================================

Block 0x99e
[0x99e:0x99e]
---
Predecessors: [0x97a, 0x997]
Successors: [0x99f]
---
0x99e JUMPDEST
---
0x99e: JUMPDEST 
---
Entry stack: [V8, 0x313, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x313, 0x0, S1, S0]

================================

Block 0x99f
[0x99f:0x9ab]
---
Predecessors: [0x99e]
Successors: [0x95b]
---
0x99f JUMPDEST
0x9a0 DUP1
0x9a1 DUP1
0x9a2 PUSH1 0x1
0x9a4 ADD
0x9a5 SWAP2
0x9a6 POP
0x9a7 POP
0x9a8 PUSH2 0x95b
0x9ab JUMP
---
0x99f: JUMPDEST 
0x9a2: V717 = 0x1
0x9a4: V718 = ADD 0x1 S0
0x9a8: V719 = 0x95b
0x9ab: JUMP 0x95b
---
Entry stack: [V8, 0x313, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V718]
Exit stack: [V8, 0x313, 0x0, S1, V718]

================================

Block 0x9ac
[0x9ac:0x9b6]
---
Predecessors: [0x95b]
Successors: [0x9b7]
---
0x9ac JUMPDEST
0x9ad PUSH1 0x1
0x9af DUP3
0x9b0 ADD
0x9b1 SWAP3
0x9b2 POP
0x9b3 PUSH2 0x9b7
0x9b6 JUMP
---
0x9ac: JUMPDEST 
0x9ad: V720 = 0x1
0x9b0: V721 = ADD S1 0x1
0x9b3: V722 = 0x9b7
0x9b6: JUMP 0x9b7
---
Entry stack: [V8, 0x313, 0x0, S1, S0]
Stack pops: 3
Stack additions: [V721, S1, S0]
Exit stack: [V8, 0x313, V721, S1, S0]

================================

Block 0x9b7
[0x9b7:0x9bb]
---
Predecessors: [0x9ac]
Successors: [0x313]
---
0x9b7 JUMPDEST
0x9b8 POP
0x9b9 POP
0x9ba SWAP1
0x9bb JUMP
---
0x9b7: JUMPDEST 
0x9bb: JUMP 0x313
---
Entry stack: [V8, 0x313, V721, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V8, V721]

================================

Block 0x9bc
[0x9bc:0x9c6]
---
Predecessors: [0x329]
Successors: [0x7b5]
---
0x9bc JUMPDEST
0x9bd PUSH1 0x0
0x9bf PUSH2 0x9c7
0x9c2 CALLER
0x9c3 PUSH2 0x7b5
0x9c6 JUMP
---
0x9bc: JUMPDEST 
0x9bd: V723 = 0x0
0x9bf: V724 = 0x9c7
0x9c2: V725 = CALLER
0x9c3: V726 = 0x7b5
0x9c6: JUMP 0x7b5
---
Entry stack: [V8, 0x336]
Stack pops: 0
Stack additions: [0x0, 0x9c7, V725]
Exit stack: [V8, 0x336, 0x0, 0x9c7, V725]

================================

Block 0x9c7
[0x9c7:0x9cd]
---
Predecessors: [0x85d]
Successors: [0x9ce, 0x9d2]
---
0x9c7 JUMPDEST
0x9c8 ISZERO
0x9c9 ISZERO
0x9ca PUSH2 0x9d2
0x9cd JUMPI
---
0x9c7: JUMPDEST 
0x9c8: V727 = ISZERO {0x0, 0x1}
0x9c9: V728 = ISZERO V727
0x9ca: V729 = 0x9d2
0x9cd: JUMPI 0x9d2 V728
---
Entry stack: [V8, 0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x9ce
[0x9ce:0x9d1]
---
Predecessors: [0x9c7]
Successors: []
---
0x9ce PUSH2 0x2
0x9d1 JUMP
---
0x9ce: V730 = 0x2
0x9d1: THROW 
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9d2
[0x9d2:0x9f2]
---
Predecessors: [0x9c7]
Successors: [0x9f3]
---
0x9d2 JUMPDEST
0x9d3 PUSH1 0x40
0x9d5 MLOAD
0x9d6 PUSH2 0x1c2
0x9d9 DUP1
0x9da PUSH2 0xa86
0x9dd DUP4
0x9de CODECOPY
0x9df ADD
0x9e0 DUP1
0x9e1 SWAP1
0x9e2 POP
0x9e3 PUSH1 0x40
0x9e5 MLOAD
0x9e6 DUP1
0x9e7 SWAP2
0x9e8 SUB
0x9e9 SWAP1
0x9ea PUSH1 0x0
0x9ec CREATE
0x9ed SWAP1
0x9ee POP
0x9ef PUSH2 0x9f3
0x9f2 JUMP
---
0x9d2: JUMPDEST 
0x9d3: V731 = 0x40
0x9d5: V732 = M[0x40]
0x9d6: V733 = 0x1c2
0x9da: V734 = 0xa86
0x9de: CODECOPY V732 0xa86 0x1c2
0x9df: V735 = ADD 0x1c2 V732
0x9e3: V736 = 0x40
0x9e5: V737 = M[0x40]
0x9e8: V738 = SUB V735 V737
0x9ea: V739 = 0x0
0x9ec: V740 = CREATE 0x0 V737 V738
0x9ef: V741 = 0x9f3
0x9f2: JUMP 0x9f3
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V740]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V740]

================================

Block 0x9f3
[0x9f3:0x9f5]
---
Predecessors: [0x9d2]
Successors: [0x336]
---
0x9f3 JUMPDEST
0x9f4 SWAP1
0x9f5 JUMP
---
0x9f3: JUMPDEST 
0x9f5: JUMP S1
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V740]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V740]

================================

Block 0x9f6
[0x9f6:0xa08]
---
Predecessors: [0x362]
Successors: [0x36f]
---
0x9f6 JUMPDEST
0x9f7 PUSH1 0x1
0x9f9 PUSH1 0x0
0x9fb SWAP1
0x9fc SLOAD
0x9fd SWAP1
0x9fe PUSH2 0x100
0xa01 EXP
0xa02 SWAP1
0xa03 DIV
0xa04 PUSH1 0xff
0xa06 AND
0xa07 DUP2
0xa08 JUMP
---
0x9f6: JUMPDEST 
0x9f7: V742 = 0x1
0x9f9: V743 = 0x0
0x9fc: V744 = S[0x1]
0x9fe: V745 = 0x100
0xa01: V746 = EXP 0x100 0x0
0xa03: V747 = DIV V744 0x1
0xa04: V748 = 0xff
0xa06: V749 = AND 0xff V747
0xa08: JUMP 0x36f
---
Entry stack: [V8, 0x36f]
Stack pops: 1
Stack additions: [S0, V749]
Exit stack: [V8, 0x36f, V749]

================================

Block 0xa09
[0xa09:0xa11]
---
Predecessors: [0x387]
Successors: [0x7b5]
---
0xa09 JUMPDEST
0xa0a PUSH2 0xa12
0xa0d CALLER
0xa0e PUSH2 0x7b5
0xa11 JUMP
---
0xa09: JUMPDEST 
0xa0a: V750 = 0xa12
0xa0d: V751 = CALLER
0xa0e: V752 = 0x7b5
0xa11: JUMP 0x7b5
---
Entry stack: [V8, 0x394]
Stack pops: 0
Stack additions: [0xa12, V751]
Exit stack: [V8, 0x394, 0xa12, V751]

================================

Block 0xa12
[0xa12:0xa18]
---
Predecessors: [0x85d]
Successors: [0xa19, 0xa1d]
---
0xa12 JUMPDEST
0xa13 ISZERO
0xa14 ISZERO
0xa15 PUSH2 0xa1d
0xa18 JUMPI
---
0xa12: JUMPDEST 
0xa13: V753 = ISZERO {0x0, 0x1}
0xa14: V754 = ISZERO V753
0xa15: V755 = 0xa1d
0xa18: JUMPI 0xa1d V754
---
Entry stack: [V8, 0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x221, V82, V85, V103, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa19
[0xa19:0xa1c]
---
Predecessors: [0xa12]
Successors: []
---
0xa19 PUSH2 0x2
0xa1c JUMP
---
0xa19: V756 = 0x2
0xa1c: THROW 
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa1d
[0xa1d:0xa83]
---
Predecessors: [0xa12]
Successors: [0xa84]
---
0xa1d JUMPDEST
0xa1e PUSH1 0x1
0xa20 PUSH1 0x1
0xa22 PUSH1 0x0
0xa24 PUSH2 0x100
0xa27 EXP
0xa28 DUP2
0xa29 SLOAD
0xa2a DUP2
0xa2b PUSH1 0xff
0xa2d MUL
0xa2e NOT
0xa2f AND
0xa30 SWAP1
0xa31 DUP4
0xa32 MUL
0xa33 OR
0xa34 SWAP1
0xa35 SSTORE
0xa36 POP
0xa37 PUSH32 0x909e8f76a4fd3e970f2eaef56c0ee6dfaf8b87c5b8d3f56ffce78e825a91157
0xa58 CALLER
0xa59 PUSH1 0x40
0xa5b MLOAD
0xa5c DUP1
0xa5d DUP3
0xa5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa73 AND
0xa74 DUP2
0xa75 MSTORE
0xa76 PUSH1 0x20
0xa78 ADD
0xa79 SWAP2
0xa7a POP
0xa7b POP
0xa7c PUSH1 0x40
0xa7e MLOAD
0xa7f DUP1
0xa80 SWAP2
0xa81 SUB
0xa82 SWAP1
0xa83 LOG1
---
0xa1d: JUMPDEST 
0xa1e: V757 = 0x1
0xa20: V758 = 0x1
0xa22: V759 = 0x0
0xa24: V760 = 0x100
0xa27: V761 = EXP 0x100 0x0
0xa29: V762 = S[0x1]
0xa2b: V763 = 0xff
0xa2d: V764 = MUL 0xff 0x1
0xa2e: V765 = NOT 0xff
0xa2f: V766 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V762
0xa32: V767 = MUL 0x1 0x1
0xa33: V768 = OR 0x1 V766
0xa35: S[0x1] = V768
0xa37: V769 = 0x909e8f76a4fd3e970f2eaef56c0ee6dfaf8b87c5b8d3f56ffce78e825a91157
0xa58: V770 = CALLER
0xa59: V771 = 0x40
0xa5b: V772 = M[0x40]
0xa5e: V773 = 0xffffffffffffffffffffffffffffffffffffffff
0xa73: V774 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xa75: M[V772] = V774
0xa76: V775 = 0x20
0xa78: V776 = ADD 0x20 V772
0xa7c: V777 = 0x40
0xa7e: V778 = M[0x40]
0xa81: V779 = SUB V776 V778
0xa83: LOG V778 V779 0x909e8f76a4fd3e970f2eaef56c0ee6dfaf8b87c5b8d3f56ffce78e825a91157
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa84
[0xa84:0xa85]
---
Predecessors: [0xa1d]
Successors: [0x394]
---
0xa84 JUMPDEST
0xa85 JUMP
---
0xa84: JUMPDEST 
0xa85: JUMP S0
---
Entry stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V103, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa86
[0xa86:0xa8a]
---
Predecessors: []
Successors: [0xa8b]
---
0xa86 PUSH1 0x60
0xa88 PUSH1 0x40
0xa8a MSTORE
---
0xa86: V780 = 0x60
0xa88: V781 = 0x40
0xa8a: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa8b
[0xa8b:0xab6]
---
Predecessors: [0xa86]
Successors: [0xab7]
---
0xa8b JUMPDEST
0xa8c CALLER
0xa8d PUSH1 0x0
0xa8f PUSH1 0x0
0xa91 PUSH2 0x100
0xa94 EXP
0xa95 DUP2
0xa96 SLOAD
0xa97 DUP2
0xa98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaad MUL
0xaae NOT
0xaaf AND
0xab0 SWAP1
0xab1 DUP4
0xab2 MUL
0xab3 OR
0xab4 SWAP1
0xab5 SSTORE
0xab6 POP
---
0xa8b: JUMPDEST 
0xa8c: V782 = CALLER
0xa8d: V783 = 0x0
0xa8f: V784 = 0x0
0xa91: V785 = 0x100
0xa94: V786 = EXP 0x100 0x0
0xa96: V787 = S[0x0]
0xa98: V788 = 0xffffffffffffffffffffffffffffffffffffffff
0xaad: V789 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xaae: V790 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaaf: V791 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V787
0xab2: V792 = MUL V782 0x1
0xab3: V793 = OR V792 V791
0xab5: S[0x0] = V793
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xab7
[0xab7:0xacf]
---
Predecessors: [0xa8b]
Successors: [0xad0]
---
0xab7 JUMPDEST
0xab8 PUSH2 0x183
0xabb DUP1
0xabc PUSH2 0x3f
0xabf PUSH1 0x0
0xac1 CODECOPY
0xac2 PUSH1 0x0
0xac4 RETURN
0xac5 PUSH1 0x60
0xac7 PUSH1 0x40
0xac9 MSTORE
0xaca CALLDATASIZE
0xacb ISZERO
0xacc PUSH2 0x48
0xacf JUMPI
---
0xab7: JUMPDEST 
0xab8: V794 = 0x183
0xabc: V795 = 0x3f
0xabf: V796 = 0x0
0xac1: CODECOPY 0x0 0x3f 0x183
0xac2: V797 = 0x0
0xac4: RETURN 0x0 0x183
0xac5: V798 = 0x60
0xac7: V799 = 0x40
0xac9: M[0x40] = 0x60
0xaca: V800 = CALLDATASIZE
0xacb: V801 = ISZERO V800
0xacc: V802 = 0x48
0xacf: THROWI V801
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xad0
[0xad0:0xafd]
---
Predecessors: [0xab7]
Successors: [0xafe]
---
0xad0 PUSH1 0x0
0xad2 CALLDATALOAD
0xad3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xaf1 SWAP1
0xaf2 DIV
0xaf3 DUP1
0xaf4 PUSH4 0x6b9f96ea
0xaf9 EQ
0xafa PUSH2 0xa6
0xafd JUMPI
---
0xad0: V803 = 0x0
0xad2: V804 = CALLDATALOAD 0x0
0xad3: V805 = 0x100000000000000000000000000000000000000000000000000000000
0xaf2: V806 = DIV V804 0x100000000000000000000000000000000000000000000000000000000
0xaf4: V807 = 0x6b9f96ea
0xaf9: V808 = EQ 0x6b9f96ea V806
0xafa: V809 = 0xa6
0xafd: THROWI V808
---
Entry stack: []
Stack pops: 0
Stack additions: [V806]
Exit stack: [V806]

================================

Block 0xafe
[0xafe:0xb08]
---
Predecessors: [0xad0]
Successors: [0xb09]
---
0xafe DUP1
0xaff PUSH4 0xca325469
0xb04 EQ
0xb05 PUSH2 0xb5
0xb08 JUMPI
---
0xaff: V810 = 0xca325469
0xb04: V811 = EQ 0xca325469 V806
0xb05: V812 = 0xb5
0xb08: THROWI V811
---
Entry stack: [V806]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V806]

================================

Block 0xb09
[0xb09:0xb10]
---
Predecessors: [0xafe]
Successors: [0xb11]
---
0xb09 PUSH2 0x48
0xb0c JUMP
0xb0d JUMPDEST
0xb0e PUSH2 0xa4
---
0xb09: V813 = 0x48
0xb0c: THROW 
0xb0d: JUMPDEST 
0xb0e: V814 = 0xa4
---
Entry stack: [V806]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: []

================================

Block 0xb11
[0xb11:0xb66]
---
Predecessors: [0xb09]
Successors: [0xb67]
---
0xb11 JUMPDEST
0xb12 PUSH1 0x0
0xb14 PUSH1 0x0
0xb16 SWAP1
0xb17 SLOAD
0xb18 SWAP1
0xb19 PUSH2 0x100
0xb1c EXP
0xb1d SWAP1
0xb1e DIV
0xb1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb34 AND
0xb35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4a AND
0xb4b PUSH1 0x0
0xb4d CALLVALUE
0xb4e PUSH1 0x40
0xb50 MLOAD
0xb51 DUP1
0xb52 SWAP1
0xb53 POP
0xb54 PUSH1 0x0
0xb56 PUSH1 0x40
0xb58 MLOAD
0xb59 DUP1
0xb5a DUP4
0xb5b SUB
0xb5c DUP2
0xb5d DUP6
0xb5e DUP9
0xb5f DUP9
0xb60 CALL
0xb61 SWAP4
0xb62 POP
0xb63 POP
0xb64 POP
0xb65 POP
0xb66 POP
---
0xb11: JUMPDEST 
0xb12: V815 = 0x0
0xb14: V816 = 0x0
0xb17: V817 = S[0x0]
0xb19: V818 = 0x100
0xb1c: V819 = EXP 0x100 0x0
0xb1e: V820 = DIV V817 0x1
0xb1f: V821 = 0xffffffffffffffffffffffffffffffffffffffff
0xb34: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0xb35: V823 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4a: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0xb4b: V825 = 0x0
0xb4d: V826 = CALLVALUE
0xb4e: V827 = 0x40
0xb50: V828 = M[0x40]
0xb54: V829 = 0x0
0xb56: V830 = 0x40
0xb58: V831 = M[0x40]
0xb5b: V832 = SUB V828 V831
0xb60: V833 = CALL 0x0 V824 V826 V831 V832 V831 0x0
---
Entry stack: [0xa4]
Stack pops: 0
Stack additions: []
Exit stack: [0xa4]

================================

Block 0xb67
[0xb67:0xc1f]
---
Predecessors: [0xb11]
Successors: [0xc20]
---
0xb67 JUMPDEST
0xb68 JUMP
0xb69 JUMPDEST
0xb6a STOP
0xb6b JUMPDEST
0xb6c PUSH2 0xb3
0xb6f PUSH1 0x4
0xb71 DUP1
0xb72 POP
0xb73 POP
0xb74 PUSH2 0xee
0xb77 JUMP
0xb78 JUMPDEST
0xb79 STOP
0xb7a JUMPDEST
0xb7b PUSH2 0xc2
0xb7e PUSH1 0x4
0xb80 DUP1
0xb81 POP
0xb82 POP
0xb83 PUSH2 0x15d
0xb86 JUMP
0xb87 JUMPDEST
0xb88 PUSH1 0x40
0xb8a MLOAD
0xb8b DUP1
0xb8c DUP3
0xb8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba2 AND
0xba3 DUP2
0xba4 MSTORE
0xba5 PUSH1 0x20
0xba7 ADD
0xba8 SWAP2
0xba9 POP
0xbaa POP
0xbab PUSH1 0x40
0xbad MLOAD
0xbae DUP1
0xbaf SWAP2
0xbb0 SUB
0xbb1 SWAP1
0xbb2 RETURN
0xbb3 JUMPDEST
0xbb4 PUSH1 0x0
0xbb6 PUSH1 0x0
0xbb8 SWAP1
0xbb9 SLOAD
0xbba SWAP1
0xbbb PUSH2 0x100
0xbbe EXP
0xbbf SWAP1
0xbc0 DIV
0xbc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd6 AND
0xbd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbec AND
0xbed PUSH1 0x0
0xbef ADDRESS
0xbf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc05 AND
0xc06 BALANCE
0xc07 PUSH1 0x40
0xc09 MLOAD
0xc0a DUP1
0xc0b SWAP1
0xc0c POP
0xc0d PUSH1 0x0
0xc0f PUSH1 0x40
0xc11 MLOAD
0xc12 DUP1
0xc13 DUP4
0xc14 SUB
0xc15 DUP2
0xc16 DUP6
0xc17 DUP9
0xc18 DUP9
0xc19 CALL
0xc1a SWAP4
0xc1b POP
0xc1c POP
0xc1d POP
0xc1e POP
0xc1f POP
---
0xb67: JUMPDEST 
0xb68: THROW 
0xb69: JUMPDEST 
0xb6a: STOP 
0xb6b: JUMPDEST 
0xb6c: V834 = 0xb3
0xb6f: V835 = 0x4
0xb74: V836 = 0xee
0xb77: THROW 
0xb78: JUMPDEST 
0xb79: STOP 
0xb7a: JUMPDEST 
0xb7b: V837 = 0xc2
0xb7e: V838 = 0x4
0xb83: V839 = 0x15d
0xb86: THROW 
0xb87: JUMPDEST 
0xb88: V840 = 0x40
0xb8a: V841 = M[0x40]
0xb8d: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xba2: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xba4: M[V841] = V843
0xba5: V844 = 0x20
0xba7: V845 = ADD 0x20 V841
0xbab: V846 = 0x40
0xbad: V847 = M[0x40]
0xbb0: V848 = SUB V845 V847
0xbb2: RETURN V847 V848
0xbb3: JUMPDEST 
0xbb4: V849 = 0x0
0xbb6: V850 = 0x0
0xbb9: V851 = S[0x0]
0xbbb: V852 = 0x100
0xbbe: V853 = EXP 0x100 0x0
0xbc0: V854 = DIV V851 0x1
0xbc1: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd6: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0xbd7: V857 = 0xffffffffffffffffffffffffffffffffffffffff
0xbec: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff V856
0xbed: V859 = 0x0
0xbef: V860 = ADDRESS
0xbf0: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xc05: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V860
0xc06: V863 = BALANCE V862
0xc07: V864 = 0x40
0xc09: V865 = M[0x40]
0xc0d: V866 = 0x0
0xc0f: V867 = 0x40
0xc11: V868 = M[0x40]
0xc14: V869 = SUB V865 V868
0xc19: V870 = CALL 0x0 V858 V863 V868 V869 V868 0x0
---
Entry stack: [0xa4]
Stack pops: 54
Stack additions: []
Exit stack: []

================================

Block 0xc20
[0xc20:0xc47]
---
Predecessors: [0xb67]
Successors: []
Has unresolved jump.
---
0xc20 JUMPDEST
0xc21 JUMP
0xc22 JUMPDEST
0xc23 PUSH1 0x0
0xc25 PUSH1 0x0
0xc27 SWAP1
0xc28 SLOAD
0xc29 SWAP1
0xc2a PUSH2 0x100
0xc2d EXP
0xc2e SWAP1
0xc2f DIV
0xc30 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc45 AND
0xc46 DUP2
0xc47 JUMP
---
0xc20: JUMPDEST 
0xc21: JUMP S0
0xc22: JUMPDEST 
0xc23: V871 = 0x0
0xc25: V872 = 0x0
0xc28: V873 = S[0x0]
0xc2a: V874 = 0x100
0xc2d: V875 = EXP 0x100 0x0
0xc2f: V876 = DIV V873 0x1
0xc30: V877 = 0xffffffffffffffffffffffffffffffffffffffff
0xc45: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff V876
0xc47: JUMP S0
---
Entry stack: []
Stack pops: 2
Stack additions: [V878, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x2079fb9a
Entry block: 0x120
Exit block: 0x136
Body: 0x120, 0x136, 0x396, 0x3a6, 0x3b3

Function 1:
Public function signature: 0x39125215
Entry block: 0x162
Exit block: 0x653
Body: 0x162, 0x3d8, 0x3e5, 0x3ec, 0x3f0, 0x407, 0x410, 0x412, 0x418, 0x41c, 0x425, 0x429, 0x432, 0x653

Function 2:
Public function signature: 0x45550a51
Entry block: 0x223
Exit block: 0x280
Body: 0x223, 0x280

Function 3:
Public function signature: 0x7df73e27
Entry block: 0x2ac
Exit block: 0x2c2
Body: 0x2ac, 0x2c2

Function 4:
Public function signature: 0x979f1976
Entry block: 0x2da
Exit block: 0x2f0
Body: 0x2da, 0x2f0

Function 5:
Public function signature: 0xa0b7967b
Entry block: 0x306
Exit block: 0x313
Body: 0x306, 0x313, 0x94c, 0x95b, 0x965, 0x975, 0x97a, 0x983, 0x992, 0x997, 0x99e, 0x99f, 0x9ac, 0x9b7

Function 6:
Public function signature: 0xa68a76cc
Entry block: 0x329
Exit block: 0x336
Body: 0x329, 0x336, 0x9bc, 0x9c7, 0x9ce, 0x9d2, 0x9f3

Function 7:
Public function signature: 0xabe3219c
Entry block: 0x362
Exit block: 0x36f
Body: 0x362, 0x36f, 0x9f6

Function 8:
Public function signature: 0xfc0f392d
Entry block: 0x387
Exit block: 0x394
Body: 0x387, 0x394, 0xa09, 0xa12, 0xa19, 0xa1d, 0xa84

Function 9:
Public fallback function
Entry block: 0x91
Exit block: 0x11e
Body: 0x91, 0x95, 0x99, 0xa3, 0x11b, 0x11c, 0x11e

Function 10:
Private function
Entry block: 0x7b5
Exit block: 0x85d
Body: 0x7b5, 0x7be, 0x7cf, 0x7f5, 0x802, 0x83e, 0x846, 0x847, 0x854, 0x85d

Function 11:
Private function
Entry block: 0x65d
Exit block: 0x7ac
Body: 0x65d, 0x675, 0x721, 0x73a, 0x79a, 0x7ac

Function 12:
Private function
Entry block: 0x863
Exit block: 0x945
Body: 0x863, 0x872, 0x87d, 0x886, 0x893, 0x8a6, 0x8ab, 0x8b8, 0x8c8, 0x8cd, 0x8e2, 0x8e7, 0x8f0, 0x8f8, 0x8f9, 0x906, 0x916, 0x91b, 0x929, 0x93a, 0x93f, 0x945

