Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x93]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1916037d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x93
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1916037d
0x3b: V13 = EQ V11 0x1916037d
0x3c: V14 = 0x93
0x3f: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa7]
---
0x40 DUP1
0x41 PUSH4 0x8da5cb5b
0x46 EQ
0x47 PUSH2 0xa7
0x4a JUMPI
---
0x41: V15 = 0x8da5cb5b
0x46: V16 = EQ 0x8da5cb5b V11
0x47: V17 = 0xa7
0x4a: JUMPI 0xa7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xd8]
---
0x4b DUP1
0x4c PUSH4 0xe9c4a3ac
0x51 EQ
0x52 PUSH2 0xd8
0x55 JUMPI
---
0x4c: V18 = 0xe9c4a3ac
0x51: V19 = EQ 0xe9c4a3ac V11
0x52: V20 = 0xd8
0x55: JUMPI 0xd8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xed]
---
0x56 DUP1
0x57 PUSH4 0xf5715d56
0x5c EQ
0x5d PUSH2 0xed
0x60 JUMPI
---
0x57: V21 = 0xf5715d56
0x5c: V22 = EQ 0xf5715d56 V11
0x5d: V23 = 0xed
0x60: JUMPI 0xed V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x75]
---
Predecessors: [0x0, 0x56]
Successors: [0x128]
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 SLOAD
0x65 PUSH2 0x76
0x68 SWAP1
0x69 PUSH1 0x1
0x6b PUSH1 0xa0
0x6d PUSH1 0x2
0x6f EXP
0x70 SUB
0x71 AND
0x72 PUSH2 0x128
0x75 JUMP
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x64: V25 = S[0x0]
0x65: V26 = 0x76
0x69: V27 = 0x1
0x6b: V28 = 0xa0
0x6d: V29 = 0x2
0x6f: V30 = EXP 0x2 0xa0
0x70: V31 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x72: V33 = 0x128
0x75: JUMP 0x128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x76, V32]
Exit stack: [V11, 0x76, V32]

================================

Block 0x76
[0x76:0x89]
---
Predecessors: [0x245]
Successors: [0x8a, 0x91]
---
0x76 JUMPDEST
0x77 PUSH1 0x0
0x79 SLOAD
0x7a PUSH1 0x1
0x7c PUSH1 0xa0
0x7e PUSH1 0x2
0x80 EXP
0x81 SUB
0x82 AND
0x83 CALLER
0x84 EQ
0x85 ISZERO
0x86 PUSH2 0x91
0x89 JUMPI
---
0x76: JUMPDEST 
0x77: V34 = 0x0
0x79: V35 = S[0x0]
0x7a: V36 = 0x1
0x7c: V37 = 0xa0
0x7e: V38 = 0x2
0x80: V39 = EXP 0x2 0xa0
0x81: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x83: V42 = CALLER
0x84: V43 = EQ V42 V41
0x85: V44 = ISZERO V43
0x86: V45 = 0x91
0x89: JUMPI 0x91 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8a
[0x8a:0x90]
---
Predecessors: [0x76]
Successors: [0x248]
---
0x8a PUSH2 0x91
0x8d PUSH2 0x248
0x90 JUMP
---
0x8a: V46 = 0x91
0x8d: V47 = 0x248
0x90: JUMP 0x248
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x91]
Exit stack: [V11, 0x91]

================================

Block 0x91
[0x91:0x92]
---
Predecessors: [0x76, 0x245, 0x317]
Successors: []
---
0x91 JUMPDEST
0x92 STOP
---
0x91: JUMPDEST 
0x92: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0xa6]
---
Predecessors: [0xd]
Successors: [0x128]
---
0x93 JUMPDEST
0x94 PUSH2 0x91
0x97 PUSH1 0x1
0x99 PUSH1 0xa0
0x9b PUSH1 0x2
0x9d EXP
0x9e SUB
0x9f PUSH1 0x4
0xa1 CALLDATALOAD
0xa2 AND
0xa3 PUSH2 0x128
0xa6 JUMP
---
0x93: JUMPDEST 
0x94: V48 = 0x91
0x97: V49 = 0x1
0x99: V50 = 0xa0
0x9b: V51 = 0x2
0x9d: V52 = EXP 0x2 0xa0
0x9e: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f: V54 = 0x4
0xa1: V55 = CALLDATALOAD 0x4
0xa2: V56 = AND V55 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V57 = 0x128
0xa6: JUMP 0x128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x91, V56]
Exit stack: [V11, 0x91, V56]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x40]
Successors: [0xaf, 0xb3]
---
0xa7 JUMPDEST
0xa8 CALLVALUE
0xa9 DUP1
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0xa7: JUMPDEST 
0xa8: V58 = CALLVALUE
0xaa: V59 = ISZERO V58
0xab: V60 = 0xb3
0xae: JUMPI 0xb3 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0xa7]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V61 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xb3
[0xb3:0xbb]
---
Predecessors: [0xa7]
Successors: [0x324]
---
0xb3 JUMPDEST
0xb4 POP
0xb5 PUSH2 0xbc
0xb8 PUSH2 0x324
0xbb JUMP
---
0xb3: JUMPDEST 
0xb5: V62 = 0xbc
0xb8: V63 = 0x324
0xbb: JUMP 0x324
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xbc]
Exit stack: [V11, 0xbc]

================================

Block 0xbc
[0xbc:0xd7]
---
Predecessors: [0x324]
Successors: []
---
0xbc JUMPDEST
0xbd PUSH1 0x40
0xbf DUP1
0xc0 MLOAD
0xc1 PUSH1 0x1
0xc3 PUSH1 0xa0
0xc5 PUSH1 0x2
0xc7 EXP
0xc8 SUB
0xc9 SWAP1
0xca SWAP3
0xcb AND
0xcc DUP3
0xcd MSTORE
0xce MLOAD
0xcf SWAP1
0xd0 DUP2
0xd1 SWAP1
0xd2 SUB
0xd3 PUSH1 0x20
0xd5 ADD
0xd6 SWAP1
0xd7 RETURN
---
0xbc: JUMPDEST 
0xbd: V64 = 0x40
0xc0: V65 = M[0x40]
0xc1: V66 = 0x1
0xc3: V67 = 0xa0
0xc5: V68 = 0x2
0xc7: V69 = EXP 0x2 0xa0
0xc8: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb: V71 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0xcd: M[V65] = V71
0xce: V72 = M[0x40]
0xd2: V73 = SUB V65 V72
0xd3: V74 = 0x20
0xd5: V75 = ADD 0x20 V73
0xd7: RETURN V72 V75
---
Entry stack: [V11, 0xbc, V283]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0x4b]
Successors: [0xe0, 0xe4]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda DUP1
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd8: JUMPDEST 
0xd9: V76 = CALLVALUE
0xdb: V77 = ISZERO V76
0xdc: V78 = 0xe4
0xdf: JUMPI 0xe4 V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V11, V76]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd8]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V79 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V11, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V76]

================================

Block 0xe4
[0xe4:0xec]
---
Predecessors: [0xd8]
Successors: [0x248]
---
0xe4 JUMPDEST
0xe5 POP
0xe6 PUSH2 0x91
0xe9 PUSH2 0x248
0xec JUMP
---
0xe4: JUMPDEST 
0xe6: V80 = 0x91
0xe9: V81 = 0x248
0xec: JUMP 0x248
---
Entry stack: [V11, V76]
Stack pops: 1
Stack additions: [0x91]
Exit stack: [V11, 0x91]

================================

Block 0xed
[0xed:0xf4]
---
Predecessors: [0x56]
Successors: [0xf5, 0xf9]
---
0xed JUMPDEST
0xee CALLVALUE
0xef DUP1
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xed: JUMPDEST 
0xee: V82 = CALLVALUE
0xf0: V83 = ISZERO V82
0xf1: V84 = 0xf9
0xf4: JUMPI 0xf9 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, V82]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xed]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V85 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V82]

================================

Block 0xf9
[0xf9:0x104]
---
Predecessors: [0xed]
Successors: [0x333]
---
0xf9 JUMPDEST
0xfa POP
0xfb PUSH2 0x105
0xfe PUSH1 0x4
0x100 CALLDATALOAD
0x101 PUSH2 0x333
0x104 JUMP
---
0xf9: JUMPDEST 
0xfb: V86 = 0x105
0xfe: V87 = 0x4
0x100: V88 = CALLDATALOAD 0x4
0x101: V89 = 0x333
0x104: JUMP 0x333
---
Entry stack: [V11, V82]
Stack pops: 1
Stack additions: [0x105, V88]
Exit stack: [V11, 0x105, V88]

================================

Block 0x105
[0x105:0x127]
---
Predecessors: [0x341]
Successors: []
---
0x105 JUMPDEST
0x106 PUSH1 0x40
0x108 DUP1
0x109 MLOAD
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 SWAP1
0x113 SWAP4
0x114 AND
0x115 DUP4
0x116 MSTORE
0x117 PUSH1 0x20
0x119 DUP4
0x11a ADD
0x11b SWAP2
0x11c SWAP1
0x11d SWAP2
0x11e MSTORE
0x11f DUP1
0x120 MLOAD
0x121 SWAP2
0x122 DUP3
0x123 SWAP1
0x124 SUB
0x125 ADD
0x126 SWAP1
0x127 RETURN
---
0x105: JUMPDEST 
0x106: V90 = 0x40
0x109: V91 = M[0x40]
0x10a: V92 = 0x1
0x10c: V93 = 0xa0
0x10e: V94 = 0x2
0x110: V95 = EXP 0x2 0xa0
0x111: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114: V97 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x116: M[V91] = V97
0x117: V98 = 0x20
0x11a: V99 = ADD V91 0x20
0x11e: M[V99] = V297
0x120: V100 = M[0x40]
0x124: V101 = SUB V91 V100
0x125: V102 = ADD V101 0x40
0x127: RETURN V100 V102
---
Entry stack: [V11, 0x105, V303, V297]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x105]

================================

Block 0x128
[0x128:0x133]
---
Predecessors: [0x61, 0x93]
Successors: [0x134, 0x138]
---
0x128 JUMPDEST
0x129 PUSH1 0x2
0x12b SLOAD
0x12c PUSH1 0xff
0x12e AND
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x128: JUMPDEST 
0x129: V103 = 0x2
0x12b: V104 = S[0x2]
0x12c: V105 = 0xff
0x12e: V106 = AND 0xff V104
0x12f: V107 = ISZERO V106
0x130: V108 = 0x138
0x133: JUMPI 0x138 V107
---
Entry stack: [V11, {0x76, 0x91}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x76, 0x91}, S0]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x128]
Successors: [0x245]
---
0x134 PUSH2 0x245
0x137 JUMP
---
0x134: V109 = 0x245
0x137: JUMP 0x245
---
Entry stack: [V11, {0x76, 0x91}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x76, 0x91}, S0]

================================

Block 0x138
[0x138:0x19d]
---
Predecessors: [0x128]
Successors: [0x19e, 0x1a2]
---
0x138 JUMPDEST
0x139 PUSH1 0x0
0x13b SLOAD
0x13c PUSH1 0x1
0x13e PUSH1 0xa0
0x140 PUSH1 0x2
0x142 EXP
0x143 SUB
0x144 AND
0x145 PUSH2 0x8fc
0x148 PUSH1 0xa
0x14a CALLVALUE
0x14b DIV
0x14c SWAP1
0x14d DUP2
0x14e ISZERO
0x14f MUL
0x150 SWAP1
0x151 PUSH1 0x40
0x153 MLOAD
0x154 PUSH1 0x0
0x156 PUSH1 0x40
0x158 MLOAD
0x159 DUP1
0x15a DUP4
0x15b SUB
0x15c DUP2
0x15d DUP6
0x15e DUP9
0x15f DUP9
0x160 CALL
0x161 POP
0x162 POP
0x163 PUSH1 0x40
0x165 MLOAD
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e DUP6
0x16f AND
0x170 SWAP4
0x171 POP
0x172 PUSH1 0xa
0x174 CALLVALUE
0x175 DIV
0x176 DUP1
0x177 ISZERO
0x178 PUSH2 0x8fc
0x17b MUL
0x17c SWAP4
0x17d POP
0x17e SWAP2
0x17f POP
0x180 PUSH1 0x0
0x182 DUP2
0x183 DUP2
0x184 DUP2
0x185 DUP6
0x186 DUP9
0x187 DUP9
0x188 CALL
0x189 SWAP4
0x18a POP
0x18b POP
0x18c POP
0x18d POP
0x18e POP
0x18f PUSH7 0x2386f26fc10000
0x197 CALLVALUE
0x198 LT
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x138: JUMPDEST 
0x139: V110 = 0x0
0x13b: V111 = S[0x0]
0x13c: V112 = 0x1
0x13e: V113 = 0xa0
0x140: V114 = 0x2
0x142: V115 = EXP 0x2 0xa0
0x143: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x145: V118 = 0x8fc
0x148: V119 = 0xa
0x14a: V120 = CALLVALUE
0x14b: V121 = DIV V120 0xa
0x14e: V122 = ISZERO V121
0x14f: V123 = MUL V122 0x8fc
0x151: V124 = 0x40
0x153: V125 = M[0x40]
0x154: V126 = 0x0
0x156: V127 = 0x40
0x158: V128 = M[0x40]
0x15b: V129 = SUB V125 V128
0x160: V130 = CALL V123 V117 V121 V128 V129 V128 0x0
0x163: V131 = 0x40
0x165: V132 = M[0x40]
0x166: V133 = 0x1
0x168: V134 = 0xa0
0x16a: V135 = 0x2
0x16c: V136 = EXP 0x2 0xa0
0x16d: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V138 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x172: V139 = 0xa
0x174: V140 = CALLVALUE
0x175: V141 = DIV V140 0xa
0x177: V142 = ISZERO V141
0x178: V143 = 0x8fc
0x17b: V144 = MUL 0x8fc V142
0x180: V145 = 0x0
0x188: V146 = CALL V144 V138 V141 V132 0x0 V132 0x0
0x18f: V147 = 0x2386f26fc10000
0x197: V148 = CALLVALUE
0x198: V149 = LT V148 0x2386f26fc10000
0x199: V150 = ISZERO V149
0x19a: V151 = 0x1a2
0x19d: JUMPI 0x1a2 V150
---
Entry stack: [V11, {0x76, 0x91}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x76, 0x91}, S0]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x138]
Successors: [0x245]
---
0x19e PUSH2 0x245
0x1a1 JUMP
---
0x19e: V152 = 0x245
0x1a1: JUMP 0x245
---
Entry stack: [V11, {0x76, 0x91}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x76, 0x91}, S0]

================================

Block 0x1a2
[0x1a2:0x244]
---
Predecessors: [0x138]
Successors: [0x245]
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x40
0x1a5 DUP1
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 DUP3
0x1a9 ADD
0x1aa SWAP1
0x1ab SWAP2
0x1ac MSTORE
0x1ad CALLER
0x1ae DUP2
0x1af MSTORE
0x1b0 PUSH1 0x1e
0x1b2 CALLVALUE
0x1b3 DIV
0x1b4 PUSH1 0x20
0x1b6 DUP3
0x1b7 ADD
0x1b8 SWAP1
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x1
0x1bd DUP1
0x1be SLOAD
0x1bf DUP1
0x1c0 DUP3
0x1c1 ADD
0x1c2 DUP3
0x1c3 SSTORE
0x1c4 PUSH1 0x0
0x1c6 SWAP2
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 MSTORE
0x1ca SWAP2
0x1cb MLOAD
0x1cc PUSH32 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x1ed PUSH1 0x2
0x1ef SWAP1
0x1f0 SWAP4
0x1f1 MUL
0x1f2 SWAP3
0x1f3 DUP4
0x1f4 ADD
0x1f5 DUP1
0x1f6 SLOAD
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c NOT
0x20d AND
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 SWAP1
0x217 SWAP3
0x218 AND
0x219 SWAP2
0x21a SWAP1
0x21b SWAP2
0x21c OR
0x21d SWAP1
0x21e SSTORE
0x21f MLOAD
0x220 PUSH32 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7
0x241 SWAP1
0x242 SWAP2
0x243 ADD
0x244 SSTORE
---
0x1a2: JUMPDEST 
0x1a3: V153 = 0x40
0x1a6: V154 = M[0x40]
0x1a9: V155 = ADD 0x40 V154
0x1ac: M[0x40] = V155
0x1ad: V156 = CALLER
0x1af: M[V154] = V156
0x1b0: V157 = 0x1e
0x1b2: V158 = CALLVALUE
0x1b3: V159 = DIV V158 0x1e
0x1b4: V160 = 0x20
0x1b7: V161 = ADD V154 0x20
0x1ba: M[V161] = V159
0x1bb: V162 = 0x1
0x1be: V163 = S[0x1]
0x1c1: V164 = ADD 0x1 V163
0x1c3: S[0x1] = V164
0x1c4: V165 = 0x0
0x1c9: M[0x0] = 0x1
0x1cb: V166 = M[V154]
0x1cc: V167 = 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x1ed: V168 = 0x2
0x1f1: V169 = MUL V163 0x2
0x1f4: V170 = ADD V169 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
0x1f6: V171 = S[V170]
0x1f7: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V173 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V174 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V171
0x20e: V175 = 0x1
0x210: V176 = 0xa0
0x212: V177 = 0x2
0x214: V178 = EXP 0x2 0xa0
0x215: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V180 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V181 = OR V180 V174
0x21e: S[V170] = V181
0x21f: V182 = M[V161]
0x220: V183 = 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7
0x243: V184 = ADD V169 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7
0x244: S[V184] = V182
---
Entry stack: [V11, {0x76, 0x91}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x76, 0x91}, S0]

================================

Block 0x245
[0x245:0x247]
---
Predecessors: [0x134, 0x19e, 0x1a2]
Successors: [0x76, 0x91]
---
0x245 JUMPDEST
0x246 POP
0x247 JUMP
---
0x245: JUMPDEST 
0x247: JUMP {0x76, 0x91}
---
Entry stack: [V11, {0x76, 0x91}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x248
[0x248:0x25b]
---
Predecessors: [0x8a, 0xe4]
Successors: [0x25c, 0x260]
---
0x248 JUMPDEST
0x249 PUSH1 0x0
0x24b DUP1
0x24c SLOAD
0x24d PUSH1 0x1
0x24f PUSH1 0xa0
0x251 PUSH1 0x2
0x253 EXP
0x254 SUB
0x255 AND
0x256 CALLER
0x257 EQ
0x258 PUSH2 0x260
0x25b JUMPI
---
0x248: JUMPDEST 
0x249: V185 = 0x0
0x24c: V186 = S[0x0]
0x24d: V187 = 0x1
0x24f: V188 = 0xa0
0x251: V189 = 0x2
0x253: V190 = EXP 0x2 0xa0
0x254: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x255: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x256: V193 = CALLER
0x257: V194 = EQ V193 V192
0x258: V195 = 0x260
0x25b: JUMPI 0x260 V194
---
Entry stack: [V11, 0x91]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x91, 0x0]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x248]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V196 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x91, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, 0x0]

================================

Block 0x260
[0x260:0x270]
---
Predecessors: [0x248]
Successors: [0x271]
---
0x260 JUMPDEST
0x261 POP
0x262 PUSH1 0x2
0x264 DUP1
0x265 SLOAD
0x266 PUSH1 0xff
0x268 NOT
0x269 AND
0x26a PUSH1 0x1
0x26c OR
0x26d SWAP1
0x26e SSTORE
0x26f PUSH1 0x0
---
0x260: JUMPDEST 
0x262: V197 = 0x2
0x265: V198 = S[0x2]
0x266: V199 = 0xff
0x268: V200 = NOT 0xff
0x269: V201 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V198
0x26a: V202 = 0x1
0x26c: V203 = OR 0x1 V201
0x26e: S[0x2] = V203
0x26f: V204 = 0x0
---
Entry stack: [V11, 0x91, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x91, 0x0]

================================

Block 0x271
[0x271:0x27b]
---
Predecessors: [0x260, 0x30f]
Successors: [0x27c, 0x317]
---
0x271 JUMPDEST
0x272 PUSH1 0x1
0x274 SLOAD
0x275 DUP2
0x276 LT
0x277 ISZERO
0x278 PUSH2 0x317
0x27b JUMPI
---
0x271: JUMPDEST 
0x272: V205 = 0x1
0x274: V206 = S[0x1]
0x276: V207 = LT S0 V206
0x277: V208 = ISZERO V207
0x278: V209 = 0x317
0x27b: JUMPI 0x317 V208
---
Entry stack: [V11, 0x91, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x91, S0]

================================

Block 0x27c
[0x27c:0x287]
---
Predecessors: [0x271]
Successors: [0x288, 0x289]
---
0x27c PUSH1 0x1
0x27e DUP1
0x27f SLOAD
0x280 DUP3
0x281 SWAP1
0x282 DUP2
0x283 LT
0x284 PUSH2 0x289
0x287 JUMPI
---
0x27c: V210 = 0x1
0x27f: V211 = S[0x1]
0x283: V212 = LT S0 V211
0x284: V213 = 0x289
0x287: JUMPI 0x289 V212
---
Entry stack: [V11, 0x91, S0]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x91, S0, 0x1, S0]

================================

Block 0x288
[0x288:0x288]
---
Predecessors: [0x27c]
Successors: []
---
0x288 INVALID
---
0x288: INVALID 
---
Entry stack: [V11, 0x91, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, S2, 0x1, S0]

================================

Block 0x289
[0x289:0x2a4]
---
Predecessors: [0x27c]
Successors: [0x2a5, 0x30f]
---
0x289 JUMPDEST
0x28a PUSH1 0x0
0x28c SWAP2
0x28d DUP3
0x28e MSTORE
0x28f PUSH1 0x20
0x291 SWAP1
0x292 SWAP2
0x293 SHA3
0x294 PUSH1 0x1
0x296 PUSH1 0x2
0x298 SWAP1
0x299 SWAP3
0x29a MUL
0x29b ADD
0x29c ADD
0x29d SLOAD
0x29e ADDRESS
0x29f BALANCE
0x2a0 LT
0x2a1 PUSH2 0x30f
0x2a4 JUMPI
---
0x289: JUMPDEST 
0x28a: V214 = 0x0
0x28e: M[0x0] = 0x1
0x28f: V215 = 0x20
0x293: V216 = SHA3 0x0 0x20
0x294: V217 = 0x1
0x296: V218 = 0x2
0x29a: V219 = MUL S0 0x2
0x29b: V220 = ADD V219 V216
0x29c: V221 = ADD V220 0x1
0x29d: V222 = S[V221]
0x29e: V223 = ADDRESS
0x29f: V224 = BALANCE V223
0x2a0: V225 = LT V224 V222
0x2a1: V226 = 0x30f
0x2a4: JUMPI 0x30f V225
---
Entry stack: [V11, 0x91, S2, 0x1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x91, S2]

================================

Block 0x2a5
[0x2a5:0x2b0]
---
Predecessors: [0x289]
Successors: [0x2b1, 0x2b2]
---
0x2a5 PUSH1 0x1
0x2a7 DUP1
0x2a8 SLOAD
0x2a9 DUP3
0x2aa SWAP1
0x2ab DUP2
0x2ac LT
0x2ad PUSH2 0x2b2
0x2b0 JUMPI
---
0x2a5: V227 = 0x1
0x2a8: V228 = S[0x1]
0x2ac: V229 = LT S0 V228
0x2ad: V230 = 0x2b2
0x2b0: JUMPI 0x2b2 V229
---
Entry stack: [V11, 0x91, S0]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x91, S0, 0x1, S0]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x2a5]
Successors: []
---
0x2b1 INVALID
---
0x2b1: INVALID 
---
Entry stack: [V11, 0x91, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, S2, 0x1, S0]

================================

Block 0x2b2
[0x2b2:0x2e0]
---
Predecessors: [0x2a5]
Successors: [0x2e1, 0x2e2]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x0
0x2b5 SWAP2
0x2b6 DUP3
0x2b7 MSTORE
0x2b8 PUSH1 0x20
0x2ba SWAP1
0x2bb SWAP2
0x2bc SHA3
0x2bd PUSH1 0x2
0x2bf SWAP1
0x2c0 SWAP2
0x2c1 MUL
0x2c2 ADD
0x2c3 SLOAD
0x2c4 PUSH1 0x1
0x2c6 DUP1
0x2c7 SLOAD
0x2c8 PUSH1 0x1
0x2ca PUSH1 0xa0
0x2cc PUSH1 0x2
0x2ce EXP
0x2cf SUB
0x2d0 SWAP1
0x2d1 SWAP3
0x2d2 AND
0x2d3 SWAP2
0x2d4 PUSH2 0x8fc
0x2d7 SWAP2
0x2d8 SWAP1
0x2d9 DUP5
0x2da SWAP1
0x2db DUP2
0x2dc LT
0x2dd PUSH2 0x2e2
0x2e0 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V231 = 0x0
0x2b7: M[0x0] = 0x1
0x2b8: V232 = 0x20
0x2bc: V233 = SHA3 0x0 0x20
0x2bd: V234 = 0x2
0x2c1: V235 = MUL S0 0x2
0x2c2: V236 = ADD V235 V233
0x2c3: V237 = S[V236]
0x2c4: V238 = 0x1
0x2c7: V239 = S[0x1]
0x2c8: V240 = 0x1
0x2ca: V241 = 0xa0
0x2cc: V242 = 0x2
0x2ce: V243 = EXP 0x2 0xa0
0x2cf: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V245 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V246 = 0x8fc
0x2dc: V247 = LT S2 V239
0x2dd: V248 = 0x2e2
0x2e0: JUMPI 0x2e2 V247
---
Entry stack: [V11, 0x91, S2, 0x1, S0]
Stack pops: 3
Stack additions: [S2, V245, 0x8fc, 0x1, S2]
Exit stack: [V11, 0x91, S2, V245, 0x8fc, 0x1, S2]

================================

Block 0x2e1
[0x2e1:0x2e1]
---
Predecessors: [0x2b2]
Successors: []
---
0x2e1 INVALID
---
0x2e1: INVALID 
---
Entry stack: [V11, 0x91, S4, V245, 0x8fc, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x91, S4, V245, 0x8fc, 0x1, S0]

================================

Block 0x2e2
[0x2e2:0x30e]
---
Predecessors: [0x2b2]
Successors: [0x30f]
---
0x2e2 JUMPDEST
0x2e3 SWAP1
0x2e4 PUSH1 0x0
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 PUSH1 0x0
0x2eb SHA3
0x2ec SWAP1
0x2ed PUSH1 0x2
0x2ef MUL
0x2f0 ADD
0x2f1 PUSH1 0x1
0x2f3 ADD
0x2f4 SLOAD
0x2f5 SWAP1
0x2f6 DUP2
0x2f7 ISZERO
0x2f8 MUL
0x2f9 SWAP1
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd PUSH1 0x0
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 DUP4
0x304 SUB
0x305 DUP2
0x306 DUP6
0x307 DUP9
0x308 DUP9
0x309 CALL
0x30a POP
0x30b POP
0x30c POP
0x30d POP
0x30e POP
---
0x2e2: JUMPDEST 
0x2e4: V249 = 0x0
0x2e6: M[0x0] = 0x1
0x2e7: V250 = 0x20
0x2e9: V251 = 0x0
0x2eb: V252 = SHA3 0x0 0x20
0x2ed: V253 = 0x2
0x2ef: V254 = MUL 0x2 S0
0x2f0: V255 = ADD V254 V252
0x2f1: V256 = 0x1
0x2f3: V257 = ADD 0x1 V255
0x2f4: V258 = S[V257]
0x2f7: V259 = ISZERO V258
0x2f8: V260 = MUL V259 0x8fc
0x2fa: V261 = 0x40
0x2fc: V262 = M[0x40]
0x2fd: V263 = 0x0
0x2ff: V264 = 0x40
0x301: V265 = M[0x40]
0x304: V266 = SUB V262 V265
0x309: V267 = CALL V260 V245 V258 V265 V266 V265 0x0
---
Entry stack: [V11, 0x91, S4, V245, 0x8fc, 0x1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x91, S4]

================================

Block 0x30f
[0x30f:0x316]
---
Predecessors: [0x289, 0x2e2]
Successors: [0x271]
---
0x30f JUMPDEST
0x310 PUSH1 0x1
0x312 ADD
0x313 PUSH2 0x271
0x316 JUMP
---
0x30f: JUMPDEST 
0x310: V268 = 0x1
0x312: V269 = ADD 0x1 S0
0x313: V270 = 0x271
0x316: JUMP 0x271
---
Entry stack: [V11, 0x91, S0]
Stack pops: 1
Stack additions: [V269]
Exit stack: [V11, 0x91, V269]

================================

Block 0x317
[0x317:0x323]
---
Predecessors: [0x271]
Successors: [0x91]
---
0x317 JUMPDEST
0x318 POP
0x319 PUSH1 0x2
0x31b DUP1
0x31c SLOAD
0x31d PUSH1 0xff
0x31f NOT
0x320 AND
0x321 SWAP1
0x322 SSTORE
0x323 JUMP
---
0x317: JUMPDEST 
0x319: V271 = 0x2
0x31c: V272 = S[0x2]
0x31d: V273 = 0xff
0x31f: V274 = NOT 0xff
0x320: V275 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V272
0x322: S[0x2] = V275
0x323: JUMP 0x91
---
Entry stack: [V11, 0x91, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x324
[0x324:0x332]
---
Predecessors: [0xb3]
Successors: [0xbc]
---
0x324 JUMPDEST
0x325 PUSH1 0x0
0x327 SLOAD
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 AND
0x331 DUP2
0x332 JUMP
---
0x324: JUMPDEST 
0x325: V276 = 0x0
0x327: V277 = S[0x0]
0x328: V278 = 0x1
0x32a: V279 = 0xa0
0x32c: V280 = 0x2
0x32e: V281 = EXP 0x2 0xa0
0x32f: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x332: JUMP 0xbc
---
Entry stack: [V11, 0xbc]
Stack pops: 1
Stack additions: [S0, V283]
Exit stack: [V11, 0xbc, V283]

================================

Block 0x333
[0x333:0x33f]
---
Predecessors: [0xf9]
Successors: [0x340, 0x341]
---
0x333 JUMPDEST
0x334 PUSH1 0x1
0x336 DUP1
0x337 SLOAD
0x338 DUP3
0x339 SWAP1
0x33a DUP2
0x33b LT
0x33c PUSH2 0x341
0x33f JUMPI
---
0x333: JUMPDEST 
0x334: V284 = 0x1
0x337: V285 = S[0x1]
0x33b: V286 = LT V88 V285
0x33c: V287 = 0x341
0x33f: JUMPI 0x341 V286
---
Entry stack: [V11, 0x105, V88]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x105, V88, 0x1, V88]

================================

Block 0x340
[0x340:0x340]
---
Predecessors: [0x333]
Successors: []
---
0x340 INVALID
---
0x340: INVALID 
---
Entry stack: [V11, 0x105, V88, 0x1, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V88, 0x1, V88]

================================

Block 0x341
[0x341:0x368]
---
Predecessors: [0x333]
Successors: [0x105]
---
0x341 JUMPDEST
0x342 PUSH1 0x0
0x344 SWAP2
0x345 DUP3
0x346 MSTORE
0x347 PUSH1 0x20
0x349 SWAP1
0x34a SWAP2
0x34b SHA3
0x34c PUSH1 0x2
0x34e SWAP1
0x34f SWAP2
0x350 MUL
0x351 ADD
0x352 DUP1
0x353 SLOAD
0x354 PUSH1 0x1
0x356 SWAP1
0x357 SWAP2
0x358 ADD
0x359 SLOAD
0x35a PUSH1 0x1
0x35c PUSH1 0xa0
0x35e PUSH1 0x2
0x360 EXP
0x361 SUB
0x362 SWAP1
0x363 SWAP2
0x364 AND
0x365 SWAP2
0x366 POP
0x367 DUP3
0x368 JUMP
---
0x341: JUMPDEST 
0x342: V288 = 0x0
0x346: M[0x0] = 0x1
0x347: V289 = 0x20
0x34b: V290 = SHA3 0x0 0x20
0x34c: V291 = 0x2
0x350: V292 = MUL V88 0x2
0x351: V293 = ADD V292 V290
0x353: V294 = S[V293]
0x354: V295 = 0x1
0x358: V296 = ADD V293 0x1
0x359: V297 = S[V296]
0x35a: V298 = 0x1
0x35c: V299 = 0xa0
0x35e: V300 = 0x2
0x360: V301 = EXP 0x2 0xa0
0x361: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x364: V303 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x368: JUMP 0x105
---
Entry stack: [V11, 0x105, V88, 0x1, V88]
Stack pops: 4
Stack additions: [S3, V303, V297]
Exit stack: [V11, 0x105, V303, V297]

================================

Block 0x369
[0x369:0x398]
---
Predecessors: []
Successors: []
---
0x369 STOP
0x36a LOG1
0x36b PUSH6 0x627a7a723058
0x372 SHA3
0x373 PUSH8 0xc0d3c4a90edf3a08
0x37c SWAP6
0x37d STOP
0x37e JUMP
0x37f MISSING 0xd1
0x380 MISSING 0x23
0x381 MISSING 0xb5
0x382 SWAP4
0x383 BLOCKHASH
0x384 EXTCODECOPY
0x385 SLOAD
0x386 MISSING 0xdb
0x387 MISSING 0xd2
0x388 ADD
0x389 PUSH1 0xfa
0x38b MISSING 0xdb
0x38c INVALID
0x38d MISSING 0xbf
0x38e MISSING 0xbd
0x38f SHL
0x390 ADD
0x391 ADD
0x392 PUSH6 0x29
---
0x369: STOP 
0x36a: LOG S0 S1 S2
0x36b: V304 = 0x627a7a723058
0x372: V305 = SHA3 0x627a7a723058 S3
0x373: V306 = 0xc0d3c4a90edf3a08
0x37d: STOP 
0x37e: JUMP S0
0x37f: MISSING 0xd1
0x380: MISSING 0x23
0x381: MISSING 0xb5
0x383: V307 = BLOCKHASH S4
0x384: EXTCODECOPY V307 S1 S2 S3
0x385: V308 = S[S0]
0x386: MISSING 0xdb
0x387: MISSING 0xd2
0x388: V309 = ADD S0 S1
0x389: V310 = 0xfa
0x38b: MISSING 0xdb
0x38c: INVALID 
0x38d: MISSING 0xbf
0x38e: MISSING 0xbd
0x38f: V311 = SHL S0 S1
0x390: V312 = ADD V311 S2
0x391: V313 = ADD V312 S3
0x392: V314 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S8, V305, S4, S5, S6, S7, 0xc0d3c4a90edf3a08, V308, 0xfa, V309, 0x29, V313]
Exit stack: []

================================

Function 0:
Public function signature: 0x1916037d
Entry block: 0x93
Exit block: 0x91
Body: 0x91, 0x93

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xa7
Exit block: 0xbc
Body: 0xa7, 0xaf, 0xb3, 0xbc, 0x324

Function 2:
Public function signature: 0xe9c4a3ac
Entry block: 0xd8
Exit block: 0xe0
Body: 0x91, 0xd8, 0xe0, 0xe4

Function 3:
Public function signature: 0xf5715d56
Entry block: 0xed
Exit block: 0x105
Body: 0xed, 0xf5, 0xf9, 0x105, 0x333, 0x340, 0x341

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x91
Body: 0x61, 0x76, 0x8a, 0x91

Function 5:
Private function
Entry block: 0x128
Exit block: 0x245
Body: 0x128, 0x134, 0x138, 0x19e, 0x1a2, 0x245

Function 6:
Private function
Entry block: 0x248
Exit block: 0x317
Body: 0x248, 0x260, 0x271, 0x27c, 0x289, 0x2a5, 0x2b2, 0x2e2, 0x30f, 0x317

