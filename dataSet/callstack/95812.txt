Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x70]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x4592cd1d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x70
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x4592cd1d
0x20: V14 = EQ V12 0x4592cd1d
0x21: V15 = 0x70
0x24: JUMPI 0x70 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x94]
---
0x25 DUP1
0x26 PUSH4 0x557f4bc9
0x2b EQ
0x2c PUSH2 0x94
0x2f JUMPI
---
0x26: V16 = 0x557f4bc9
0x2b: V17 = EQ 0x557f4bc9 V12
0x2c: V18 = 0x94
0x2f: JUMPI 0x94 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xc4]
---
0x30 DUP1
0x31 PUSH4 0x5aa77d3c
0x36 EQ
0x37 PUSH2 0xc4
0x3a JUMPI
---
0x31: V19 = 0x5aa77d3c
0x36: V20 = EQ 0x5aa77d3c V12
0x37: V21 = 0xc4
0x3a: JUMPI 0xc4 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xf0]
---
0x3b DUP1
0x3c PUSH4 0xce606ee0
0x41 EQ
0x42 PUSH2 0xf0
0x45 JUMPI
---
0x3c: V22 = 0xce606ee0
0x41: V23 = EQ 0xce606ee0 V12
0x42: V24 = 0xf0
0x45: JUMPI 0xf0 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x11c]
---
0x46 DUP1
0x47 PUSH4 0xd613be0a
0x4c EQ
0x4d PUSH2 0x11c
0x50 JUMPI
---
0x47: V25 = 0xd613be0a
0x4c: V26 = EQ 0xd613be0a V12
0x4d: V27 = 0x11c
0x50: JUMPI 0x11c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x14c]
---
0x51 DUP1
0x52 PUSH4 0xe04f31e9
0x57 EQ
0x58 PUSH2 0x14c
0x5b JUMPI
---
0x52: V28 = 0xe04f31e9
0x57: V29 = EQ 0xe04f31e9 V12
0x58: V30 = 0x14c
0x5b: JUMPI 0x14c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1c5]
---
0x5c DUP1
0x5d PUSH4 0xf8a6c595
0x62 EQ
0x63 PUSH2 0x1c5
0x66 JUMPI
---
0x5d: V31 = 0xf8a6c595
0x62: V32 = EQ 0xf8a6c595 V12
0x63: V33 = 0x1c5
0x66: JUMPI 0x1c5 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x0, 0x5c]
Successors: [0x6b]
---
0x67 JUMPDEST
0x68 PUSH2 0x6e
---
0x67: JUMPDEST 
0x68: V34 = 0x6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V12, 0x6e]

================================

Block 0x6b
[0x6b:0x6b]
---
Predecessors: [0x67]
Successors: [0x6c]
---
0x6b JUMPDEST
---
0x6b: JUMPDEST 
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x6b]
Successors: [0x6e]
---
0x6c JUMPDEST
0x6d JUMP
---
0x6c: JUMPDEST 
0x6d: JUMP 0x6e
---
Entry stack: [V12, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x6c, 0x350]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x70
[0x70:0x76]
---
Predecessors: [0xb]
Successors: [0x77, 0x78]
---
0x70 JUMPDEST
0x71 CALLVALUE
0x72 ISZERO
0x73 PUSH2 0x78
0x76 JUMPI
---
0x70: JUMPDEST 
0x71: V35 = CALLVALUE
0x72: V36 = ISZERO V35
0x73: V37 = 0x78
0x76: JUMPI 0x78 V36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77
[0x77:0x77]
---
Predecessors: [0x70]
Successors: []
---
0x77 INVALID
---
0x77: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x70]
Successors: [0x1e3]
---
0x78 JUMPDEST
0x79 PUSH2 0x80
0x7c PUSH2 0x1e3
0x7f JUMP
---
0x78: JUMPDEST 
0x79: V38 = 0x80
0x7c: V39 = 0x1e3
0x7f: JUMP 0x1e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V12, 0x80]

================================

Block 0x80
[0x80:0x93]
---
Predecessors: [0x22b, 0x265, 0x2c1]
Successors: []
---
0x80 JUMPDEST
0x81 PUSH1 0x40
0x83 DUP1
0x84 MLOAD
0x85 SWAP2
0x86 ISZERO
0x87 ISZERO
0x88 DUP3
0x89 MSTORE
0x8a MLOAD
0x8b SWAP1
0x8c DUP2
0x8d SWAP1
0x8e SUB
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 RETURN
---
0x80: JUMPDEST 
0x81: V40 = 0x40
0x84: V41 = M[0x40]
0x86: V42 = ISZERO {0x0, 0x1}
0x87: V43 = ISZERO V42
0x89: M[V41] = V43
0x8a: V44 = M[0x40]
0x8e: V45 = SUB V41 V44
0x8f: V46 = 0x20
0x91: V47 = ADD 0x20 V45
0x93: RETURN V44 V47
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0x25]
Successors: [0x9b, 0x9c]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9c
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V48 = CALLVALUE
0x96: V49 = ISZERO V48
0x97: V50 = 0x9c
0x9a: JUMPI 0x9c V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b
[0x9b:0x9b]
---
Predecessors: [0x94]
Successors: []
---
0x9b INVALID
---
0x9b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xaf]
---
Predecessors: [0x94]
Successors: [0x22e]
---
0x9c JUMPDEST
0x9d PUSH2 0x80
0xa0 PUSH1 0x1
0xa2 PUSH1 0xa0
0xa4 PUSH1 0x2
0xa6 EXP
0xa7 SUB
0xa8 PUSH1 0x4
0xaa CALLDATALOAD
0xab AND
0xac PUSH2 0x22e
0xaf JUMP
---
0x9c: JUMPDEST 
0x9d: V51 = 0x80
0xa0: V52 = 0x1
0xa2: V53 = 0xa0
0xa4: V54 = 0x2
0xa6: V55 = EXP 0x2 0xa0
0xa7: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8: V57 = 0x4
0xaa: V58 = CALLDATALOAD 0x4
0xab: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0xac: V60 = 0x22e
0xaf: JUMP 0x22e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x80, V59]
Exit stack: [V12, 0x80, V59]

================================

Block 0xb0
[0xb0:0xc3]
---
Predecessors: []
Successors: []
---
0xb0 JUMPDEST
0xb1 PUSH1 0x40
0xb3 DUP1
0xb4 MLOAD
0xb5 SWAP2
0xb6 ISZERO
0xb7 ISZERO
0xb8 DUP3
0xb9 MSTORE
0xba MLOAD
0xbb SWAP1
0xbc DUP2
0xbd SWAP1
0xbe SUB
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP1
0xc3 RETURN
---
0xb0: JUMPDEST 
0xb1: V61 = 0x40
0xb4: V62 = M[0x40]
0xb6: V63 = ISZERO S0
0xb7: V64 = ISZERO V63
0xb9: M[V62] = V64
0xba: V65 = M[0x40]
0xbe: V66 = SUB V62 V65
0xbf: V67 = 0x20
0xc1: V68 = ADD 0x20 V66
0xc3: RETURN V65 V68
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0x30]
Successors: [0xcb, 0xcc]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcc
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V69 = CALLVALUE
0xc6: V70 = ISZERO V69
0xc7: V71 = 0xcc
0xca: JUMPI 0xcc V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xcb]
---
Predecessors: [0xc4]
Successors: []
---
0xcb INVALID
---
0xcb: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0xc4]
Successors: [0x26a]
---
0xcc JUMPDEST
0xcd PUSH2 0xd4
0xd0 PUSH2 0x26a
0xd3 JUMP
---
0xcc: JUMPDEST 
0xcd: V72 = 0xd4
0xd0: V73 = 0x26a
0xd3: JUMP 0x26a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0xd4
[0xd4:0xef]
---
Predecessors: [0x26a, 0x279]
Successors: []
---
0xd4 JUMPDEST
0xd5 PUSH1 0x40
0xd7 DUP1
0xd8 MLOAD
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 SWAP1
0xe2 SWAP3
0xe3 AND
0xe4 DUP3
0xe5 MSTORE
0xe6 MLOAD
0xe7 SWAP1
0xe8 DUP2
0xe9 SWAP1
0xea SUB
0xeb PUSH1 0x20
0xed ADD
0xee SWAP1
0xef RETURN
---
0xd4: JUMPDEST 
0xd5: V74 = 0x40
0xd8: V75 = M[0x40]
0xd9: V76 = 0x1
0xdb: V77 = 0xa0
0xdd: V78 = 0x2
0xdf: V79 = EXP 0x2 0xa0
0xe0: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V81 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe5: M[V75] = V81
0xe6: V82 = M[0x40]
0xea: V83 = SUB V75 V82
0xeb: V84 = 0x20
0xed: V85 = ADD 0x20 V83
0xef: RETURN V82 V85
---
Entry stack: [V12, 0xd4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xd4]

================================

Block 0xf0
[0xf0:0xf6]
---
Predecessors: [0x3b]
Successors: [0xf7, 0xf8]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 ISZERO
0xf3 PUSH2 0xf8
0xf6 JUMPI
---
0xf0: JUMPDEST 
0xf1: V86 = CALLVALUE
0xf2: V87 = ISZERO V86
0xf3: V88 = 0xf8
0xf6: JUMPI 0xf8 V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf7
[0xf7:0xf7]
---
Predecessors: [0xf0]
Successors: []
---
0xf7 INVALID
---
0xf7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xf0]
Successors: [0x279]
---
0xf8 JUMPDEST
0xf9 PUSH2 0xd4
0xfc PUSH2 0x279
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V89 = 0xd4
0xfc: V90 = 0x279
0xff: JUMP 0x279
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V12, 0xd4]

================================

Block 0x100
[0x100:0x11b]
---
Predecessors: []
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x40
0x103 DUP1
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP3
0x10f AND
0x110 DUP3
0x111 MSTORE
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 SWAP1
0x116 SUB
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b RETURN
---
0x100: JUMPDEST 
0x101: V91 = 0x40
0x104: V92 = M[0x40]
0x105: V93 = 0x1
0x107: V94 = 0xa0
0x109: V95 = 0x2
0x10b: V96 = EXP 0x2 0xa0
0x10c: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V98 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x111: M[V92] = V98
0x112: V99 = M[0x40]
0x116: V100 = SUB V92 V99
0x117: V101 = 0x20
0x119: V102 = ADD 0x20 V100
0x11b: RETURN V99 V102
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x11c
[0x11c:0x122]
---
Predecessors: [0x46]
Successors: [0x123, 0x124]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e ISZERO
0x11f PUSH2 0x124
0x122 JUMPI
---
0x11c: JUMPDEST 
0x11d: V103 = CALLVALUE
0x11e: V104 = ISZERO V103
0x11f: V105 = 0x124
0x122: JUMPI 0x124 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x123
[0x123:0x123]
---
Predecessors: [0x11c]
Successors: []
---
0x123 INVALID
---
0x123: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x124
[0x124:0x137]
---
Predecessors: [0x11c]
Successors: [0x288]
---
0x124 JUMPDEST
0x125 PUSH2 0x80
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 PUSH1 0x4
0x132 CALLDATALOAD
0x133 AND
0x134 PUSH2 0x288
0x137 JUMP
---
0x124: JUMPDEST 
0x125: V106 = 0x80
0x128: V107 = 0x1
0x12a: V108 = 0xa0
0x12c: V109 = 0x2
0x12e: V110 = EXP 0x2 0xa0
0x12f: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V112 = 0x4
0x132: V113 = CALLDATALOAD 0x4
0x133: V114 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x134: V115 = 0x288
0x137: JUMP 0x288
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x80, V114]
Exit stack: [V12, 0x80, V114]

================================

Block 0x138
[0x138:0x14b]
---
Predecessors: []
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b DUP1
0x13c MLOAD
0x13d SWAP2
0x13e ISZERO
0x13f ISZERO
0x140 DUP3
0x141 MSTORE
0x142 MLOAD
0x143 SWAP1
0x144 DUP2
0x145 SWAP1
0x146 SUB
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP1
0x14b RETURN
---
0x138: JUMPDEST 
0x139: V116 = 0x40
0x13c: V117 = M[0x40]
0x13e: V118 = ISZERO S0
0x13f: V119 = ISZERO V118
0x141: M[V117] = V119
0x142: V120 = M[0x40]
0x146: V121 = SUB V117 V120
0x147: V122 = 0x20
0x149: V123 = ADD 0x20 V121
0x14b: RETURN V120 V123
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x51]
Successors: [0x153, 0x154]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x154
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V124 = CALLVALUE
0x14e: V125 = ISZERO V124
0x14f: V126 = 0x154
0x152: JUMPI 0x154 V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x153
[0x153:0x153]
---
Predecessors: [0x14c]
Successors: []
---
0x153 INVALID
---
0x153: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x154
[0x154:0x1b2]
---
Predecessors: [0x14c]
Successors: [0x2c6]
---
0x154 JUMPDEST
0x155 PUSH1 0x40
0x157 DUP1
0x158 MLOAD
0x159 PUSH1 0x20
0x15b PUSH1 0x4
0x15d PUSH1 0x44
0x15f CALLDATALOAD
0x160 DUP2
0x161 DUP2
0x162 ADD
0x163 CALLDATALOAD
0x164 PUSH1 0x1f
0x166 DUP2
0x167 ADD
0x168 DUP5
0x169 SWAP1
0x16a DIV
0x16b DUP5
0x16c MUL
0x16d DUP6
0x16e ADD
0x16f DUP5
0x170 ADD
0x171 SWAP1
0x172 SWAP6
0x173 MSTORE
0x174 DUP5
0x175 DUP5
0x176 MSTORE
0x177 PUSH2 0x1b3
0x17a SWAP5
0x17b DUP3
0x17c CALLDATALOAD
0x17d PUSH1 0x1
0x17f PUSH1 0xa0
0x181 PUSH1 0x2
0x183 EXP
0x184 SUB
0x185 AND
0x186 SWAP5
0x187 PUSH1 0x24
0x189 DUP1
0x18a CALLDATALOAD
0x18b SWAP6
0x18c PUSH1 0x64
0x18e SWAP5
0x18f SWAP3
0x190 SWAP4
0x191 SWAP2
0x192 SWAP1
0x193 SWAP3
0x194 ADD
0x195 SWAP2
0x196 DUP2
0x197 SWAP1
0x198 DUP5
0x199 ADD
0x19a DUP4
0x19b DUP3
0x19c DUP1
0x19d DUP3
0x19e DUP5
0x19f CALLDATACOPY
0x1a0 POP
0x1a1 SWAP5
0x1a2 SWAP7
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 SWAP2
0x1a8 CALLDATALOAD
0x1a9 ISZERO
0x1aa ISZERO
0x1ab SWAP2
0x1ac POP
0x1ad PUSH2 0x2c6
0x1b0 SWAP1
0x1b1 POP
0x1b2 JUMP
---
0x154: JUMPDEST 
0x155: V127 = 0x40
0x158: V128 = M[0x40]
0x159: V129 = 0x20
0x15b: V130 = 0x4
0x15d: V131 = 0x44
0x15f: V132 = CALLDATALOAD 0x44
0x162: V133 = ADD V132 0x4
0x163: V134 = CALLDATALOAD V133
0x164: V135 = 0x1f
0x167: V136 = ADD V134 0x1f
0x16a: V137 = DIV V136 0x20
0x16c: V138 = MUL 0x20 V137
0x16e: V139 = ADD V128 V138
0x170: V140 = ADD 0x20 V139
0x173: M[0x40] = V140
0x176: M[V128] = V134
0x177: V141 = 0x1b3
0x17c: V142 = CALLDATALOAD 0x4
0x17d: V143 = 0x1
0x17f: V144 = 0xa0
0x181: V145 = 0x2
0x183: V146 = EXP 0x2 0xa0
0x184: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x185: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x187: V149 = 0x24
0x18a: V150 = CALLDATALOAD 0x24
0x18c: V151 = 0x64
0x194: V152 = ADD V132 0x24
0x199: V153 = ADD V128 0x20
0x19f: CALLDATACOPY V153 V152 V134
0x1a8: V154 = CALLDATALOAD 0x64
0x1a9: V155 = ISZERO V154
0x1aa: V156 = ISZERO V155
0x1ad: V157 = 0x2c6
0x1b2: JUMP 0x2c6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1b3, V148, V150, V128, V156]
Exit stack: [V12, 0x1b3, V148, V150, V128, V156]

================================

Block 0x1b3
[0x1b3:0x1c4]
---
Predecessors: [0x314]
Successors: []
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x40
0x1b6 DUP1
0x1b7 MLOAD
0x1b8 SWAP2
0x1b9 DUP3
0x1ba MSTORE
0x1bb MLOAD
0x1bc SWAP1
0x1bd DUP2
0x1be SWAP1
0x1bf SUB
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 SWAP1
0x1c4 RETURN
---
0x1b3: JUMPDEST 
0x1b4: V158 = 0x40
0x1b7: V159 = M[0x40]
0x1ba: M[V159] = S0
0x1bb: V160 = M[0x40]
0x1bf: V161 = SUB V159 V160
0x1c0: V162 = 0x20
0x1c2: V163 = ADD 0x20 V161
0x1c4: RETURN V160 V163
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c5
[0x1c5:0x1cb]
---
Predecessors: [0x5c]
Successors: [0x1cc, 0x1cd]
---
0x1c5 JUMPDEST
0x1c6 CALLVALUE
0x1c7 ISZERO
0x1c8 PUSH2 0x1cd
0x1cb JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V164 = CALLVALUE
0x1c7: V165 = ISZERO V164
0x1c8: V166 = 0x1cd
0x1cb: JUMPI 0x1cd V165
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cc
[0x1cc:0x1cc]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cc INVALID
---
0x1cc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cd
[0x1cd:0x1e0]
---
Predecessors: [0x1c5]
Successors: [0x31d]
---
0x1cd JUMPDEST
0x1ce PUSH2 0x6e
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 PUSH1 0x4
0x1db CALLDATALOAD
0x1dc AND
0x1dd PUSH2 0x31d
0x1e0 JUMP
---
0x1cd: JUMPDEST 
0x1ce: V167 = 0x6e
0x1d1: V168 = 0x1
0x1d3: V169 = 0xa0
0x1d5: V170 = 0x2
0x1d7: V171 = EXP 0x2 0xa0
0x1d8: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V173 = 0x4
0x1db: V174 = CALLDATALOAD 0x4
0x1dc: V175 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: V176 = 0x31d
0x1e0: JUMP 0x31d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e, V175]
Exit stack: [V12, 0x6e, V175]

================================

Block 0x1e1
[0x1e1:0x1e2]
---
Predecessors: []
Successors: []
---
0x1e1 JUMPDEST
0x1e2 STOP
---
0x1e1: JUMPDEST 
0x1e2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1e3
[0x1e3:0x1fc]
---
Predecessors: [0x78]
Successors: [0x1fd, 0x204]
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x1
0x1e6 SLOAD
0x1e7 PUSH1 0x0
0x1e9 SWAP1
0x1ea CALLER
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 SWAP1
0x1f4 DUP2
0x1f5 AND
0x1f6 SWAP2
0x1f7 AND
0x1f8 EQ
0x1f9 PUSH2 0x204
0x1fc JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V177 = 0x1
0x1e6: V178 = S[0x1]
0x1e7: V179 = 0x0
0x1ea: V180 = CALLER
0x1eb: V181 = 0x1
0x1ed: V182 = 0xa0
0x1ef: V183 = 0x2
0x1f1: V184 = EXP 0x2 0xa0
0x1f2: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x1f7: V187 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V188 = EQ V187 V186
0x1f9: V189 = 0x204
0x1fc: JUMPI 0x204 V188
---
Entry stack: [V12, 0x80]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x80, 0x0]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0x1e3]
Successors: [0x22b]
---
0x1fd POP
0x1fe PUSH1 0x0
0x200 PUSH2 0x22b
0x203 JUMP
---
0x1fe: V190 = 0x0
0x200: V191 = 0x22b
0x203: JUMP 0x22b
---
Entry stack: [V12, 0x80, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x80, 0x0]

================================

Block 0x204
[0x204:0x22a]
---
Predecessors: [0x1e3]
Successors: [0x22b]
---
0x204 JUMPDEST
0x205 POP
0x206 PUSH1 0x1
0x208 DUP1
0x209 SLOAD
0x20a PUSH1 0x0
0x20c DUP1
0x20d SLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 NOT
0x217 SWAP1
0x218 DUP2
0x219 AND
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 DUP5
0x223 AND
0x224 OR
0x225 SWAP1
0x226 SWAP2
0x227 SSTORE
0x228 AND
0x229 DUP2
0x22a SSTORE
---
0x204: JUMPDEST 
0x206: V192 = 0x1
0x209: V193 = S[0x1]
0x20a: V194 = 0x0
0x20d: V195 = S[0x0]
0x20e: V196 = 0x1
0x210: V197 = 0xa0
0x212: V198 = 0x2
0x214: V199 = EXP 0x2 0xa0
0x215: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V201 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x219: V202 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V195
0x21a: V203 = 0x1
0x21c: V204 = 0xa0
0x21e: V205 = 0x2
0x220: V206 = EXP 0x2 0xa0
0x221: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V208 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x224: V209 = OR V208 V202
0x227: S[0x0] = V209
0x228: V210 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V193
0x22a: S[0x1] = V210
---
Entry stack: [V12, 0x80, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x80, 0x1]

================================

Block 0x22b
[0x22b:0x22d]
---
Predecessors: [0x1fd, 0x204]
Successors: [0x80]
---
0x22b JUMPDEST
0x22c SWAP1
0x22d JUMP
---
0x22b: JUMPDEST 
0x22d: JUMP 0x80
---
Entry stack: [V12, 0x80, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x22e
[0x22e:0x246]
---
Predecessors: [0x9c]
Successors: [0x247, 0x263]
---
0x22e JUMPDEST
0x22f PUSH1 0x0
0x231 DUP1
0x232 SLOAD
0x233 CALLER
0x234 PUSH1 0x1
0x236 PUSH1 0xa0
0x238 PUSH1 0x2
0x23a EXP
0x23b SUB
0x23c SWAP1
0x23d DUP2
0x23e AND
0x23f SWAP2
0x240 AND
0x241 EQ
0x242 ISZERO
0x243 PUSH2 0x263
0x246 JUMPI
---
0x22e: JUMPDEST 
0x22f: V211 = 0x0
0x232: V212 = S[0x0]
0x233: V213 = CALLER
0x234: V214 = 0x1
0x236: V215 = 0xa0
0x238: V216 = 0x2
0x23a: V217 = EXP 0x2 0xa0
0x23b: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23e: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x240: V220 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x241: V221 = EQ V220 V219
0x242: V222 = ISZERO V221
0x243: V223 = 0x263
0x246: JUMPI 0x263 V222
---
Entry stack: [V12, 0x80, V59]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x80, V59, 0x0]

================================

Block 0x247
[0x247:0x262]
---
Predecessors: [0x22e]
Successors: [0x263]
---
0x247 POP
0x248 PUSH1 0x1
0x24a DUP1
0x24b SLOAD
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 NOT
0x255 AND
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SUB
0x25e DUP4
0x25f AND
0x260 OR
0x261 DUP2
0x262 SSTORE
---
0x248: V224 = 0x1
0x24b: V225 = S[0x1]
0x24c: V226 = 0x1
0x24e: V227 = 0xa0
0x250: V228 = 0x2
0x252: V229 = EXP 0x2 0xa0
0x253: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V231 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x255: V232 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V225
0x256: V233 = 0x1
0x258: V234 = 0xa0
0x25a: V235 = 0x2
0x25c: V236 = EXP 0x2 0xa0
0x25d: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V238 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0x260: V239 = OR V238 V232
0x262: S[0x1] = V239
---
Entry stack: [V12, 0x80, V59, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x80, V59, 0x1]

================================

Block 0x263
[0x263:0x263]
---
Predecessors: [0x22e, 0x247, 0x288]
Successors: [0x264]
---
0x263 JUMPDEST
---
0x263: JUMPDEST 
---
Entry stack: [V12, 0x80, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x80, S1, {0x0, 0x1}]

================================

Block 0x264
[0x264:0x264]
---
Predecessors: [0x263]
Successors: [0x265]
---
0x264 JUMPDEST
---
0x264: JUMPDEST 
---
Entry stack: [V12, 0x80, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x80, S1, {0x0, 0x1}]

================================

Block 0x265
[0x265:0x269]
---
Predecessors: [0x264]
Successors: [0x80]
---
0x265 JUMPDEST
0x266 SWAP2
0x267 SWAP1
0x268 POP
0x269 JUMP
---
0x265: JUMPDEST 
0x269: JUMP 0x80
---
Entry stack: [V12, 0x80, S1, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x26a
[0x26a:0x278]
---
Predecessors: [0xcc]
Successors: [0xd4]
---
0x26a JUMPDEST
0x26b PUSH1 0x1
0x26d SLOAD
0x26e PUSH1 0x1
0x270 PUSH1 0xa0
0x272 PUSH1 0x2
0x274 EXP
0x275 SUB
0x276 AND
0x277 DUP2
0x278 JUMP
---
0x26a: JUMPDEST 
0x26b: V240 = 0x1
0x26d: V241 = S[0x1]
0x26e: V242 = 0x1
0x270: V243 = 0xa0
0x272: V244 = 0x2
0x274: V245 = EXP 0x2 0xa0
0x275: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x276: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x278: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V247]
Exit stack: [V12, 0xd4, V247]

================================

Block 0x279
[0x279:0x287]
---
Predecessors: [0xf8]
Successors: [0xd4]
---
0x279 JUMPDEST
0x27a PUSH1 0x0
0x27c SLOAD
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 AND
0x286 DUP2
0x287 JUMP
---
0x279: JUMPDEST 
0x27a: V248 = 0x0
0x27c: V249 = S[0x0]
0x27d: V250 = 0x1
0x27f: V251 = 0xa0
0x281: V252 = 0x2
0x283: V253 = EXP 0x2 0xa0
0x284: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x285: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x287: JUMP 0xd4
---
Entry stack: [V12, 0xd4]
Stack pops: 1
Stack additions: [S0, V255]
Exit stack: [V12, 0xd4, V255]

================================

Block 0x288
[0x288:0x2a0]
---
Predecessors: [0x124]
Successors: [0x263, 0x2a1]
---
0x288 JUMPDEST
0x289 PUSH1 0x0
0x28b DUP1
0x28c SLOAD
0x28d CALLER
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 SWAP1
0x297 DUP2
0x298 AND
0x299 SWAP2
0x29a AND
0x29b EQ
0x29c ISZERO
0x29d PUSH2 0x263
0x2a0 JUMPI
---
0x288: JUMPDEST 
0x289: V256 = 0x0
0x28c: V257 = S[0x0]
0x28d: V258 = CALLER
0x28e: V259 = 0x1
0x290: V260 = 0xa0
0x292: V261 = 0x2
0x294: V262 = EXP 0x2 0xa0
0x295: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x29a: V265 = AND V257 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V266 = EQ V265 V264
0x29c: V267 = ISZERO V266
0x29d: V268 = 0x263
0x2a0: JUMPI 0x263 V267
---
Entry stack: [V12, 0x80, V114]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x80, V114, 0x0]

================================

Block 0x2a1
[0x2a1:0x2be]
---
Predecessors: [0x288]
Successors: [0x2bf]
---
0x2a1 POP
0x2a2 PUSH1 0x0
0x2a4 DUP1
0x2a5 SLOAD
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae NOT
0x2af AND
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 DUP4
0x2b9 AND
0x2ba OR
0x2bb SWAP1
0x2bc SSTORE
0x2bd PUSH1 0x1
---
0x2a2: V269 = 0x0
0x2a5: V270 = S[0x0]
0x2a6: V271 = 0x1
0x2a8: V272 = 0xa0
0x2aa: V273 = 0x2
0x2ac: V274 = EXP 0x2 0xa0
0x2ad: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V276 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V277 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V270
0x2b0: V278 = 0x1
0x2b2: V279 = 0xa0
0x2b4: V280 = 0x2
0x2b6: V281 = EXP 0x2 0xa0
0x2b7: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V283 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V284 = OR V283 V277
0x2bc: S[0x0] = V284
0x2bd: V285 = 0x1
---
Entry stack: [V12, 0x80, V114, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0x80, V114, 0x1]

================================

Block 0x2bf
[0x2bf:0x2bf]
---
Predecessors: [0x2a1]
Successors: [0x2c0]
---
0x2bf JUMPDEST
---
0x2bf: JUMPDEST 
---
Entry stack: [V12, 0x80, V114, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x80, V114, 0x1]

================================

Block 0x2c0
[0x2c0:0x2c0]
---
Predecessors: [0x2bf]
Successors: [0x2c1]
---
0x2c0 JUMPDEST
---
0x2c0: JUMPDEST 
---
Entry stack: [V12, 0x80, V114, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x80, V114, 0x1]

================================

Block 0x2c1
[0x2c1:0x2c5]
---
Predecessors: [0x2c0]
Successors: [0x80]
---
0x2c1 JUMPDEST
0x2c2 SWAP2
0x2c3 SWAP1
0x2c4 POP
0x2c5 JUMP
---
0x2c1: JUMPDEST 
0x2c5: JUMP 0x80
---
Entry stack: [V12, 0x80, V114, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x2c6
[0x2c6:0x2e0]
---
Predecessors: [0x154]
Successors: [0x2e1, 0x311]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca SLOAD
0x2cb DUP2
0x2cc SWAP1
0x2cd CALLER
0x2ce PUSH1 0x1
0x2d0 PUSH1 0xa0
0x2d2 PUSH1 0x2
0x2d4 EXP
0x2d5 SUB
0x2d6 SWAP1
0x2d7 DUP2
0x2d8 AND
0x2d9 SWAP2
0x2da AND
0x2db EQ
0x2dc ISZERO
0x2dd PUSH2 0x311
0x2e0 JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V286 = 0x0
0x2ca: V287 = S[0x0]
0x2cd: V288 = CALLER
0x2ce: V289 = 0x1
0x2d0: V290 = 0xa0
0x2d2: V291 = 0x2
0x2d4: V292 = EXP 0x2 0xa0
0x2d5: V293 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d8: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x2da: V295 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V296 = EQ V295 V294
0x2dc: V297 = ISZERO V296
0x2dd: V298 = 0x311
0x2e0: JUMPI 0x311 V297
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, 0x0, 0x0]

================================

Block 0x2e1
[0x2e1:0x303]
---
Predecessors: [0x2c6]
Successors: [0x304, 0x306]
---
0x2e1 PUSH1 0x20
0x2e3 PUSH1 0x0
0x2e5 DUP6
0x2e6 MLOAD
0x2e7 PUSH1 0x20
0x2e9 DUP8
0x2ea ADD
0x2eb DUP9
0x2ec DUP11
0x2ed PUSH1 0x40
0x2ef PUSH1 0x3f
0x2f1 GAS
0x2f2 MUL
0x2f3 DIV
0x2f4 CALL
0x2f5 SWAP1
0x2f6 POP
0x2f7 PUSH1 0x0
0x2f9 MLOAD
0x2fa SWAP2
0x2fb POP
0x2fc DUP1
0x2fd ISZERO
0x2fe DUP1
0x2ff ISZERO
0x300 PUSH2 0x306
0x303 JUMPI
---
0x2e1: V299 = 0x20
0x2e3: V300 = 0x0
0x2e6: V301 = M[V128]
0x2e7: V302 = 0x20
0x2ea: V303 = ADD V128 0x20
0x2ed: V304 = 0x40
0x2ef: V305 = 0x3f
0x2f1: V306 = GAS
0x2f2: V307 = MUL V306 0x3f
0x2f3: V308 = DIV V307 0x40
0x2f4: V309 = CALL V308 V148 V150 V303 V301 0x0 0x20
0x2f7: V310 = 0x0
0x2f9: V311 = M[0x0]
0x2fd: V312 = ISZERO V309
0x2ff: V313 = ISZERO V312
0x300: V314 = 0x306
0x303: JUMPI 0x306 V313
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V311, V309, V312]
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, V311, V309, V312]

================================

Block 0x304
[0x304:0x305]
---
Predecessors: [0x2e1]
Successors: [0x306]
---
0x304 POP
0x305 DUP3
---
0x304: NOP 
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, V311, V309, V312]
Stack pops: 4
Stack additions: [S3, S2, S1, S3]
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, V311, V309, V156]

================================

Block 0x306
[0x306:0x30b]
---
Predecessors: [0x2e1, 0x304]
Successors: [0x30c, 0x311]
---
0x306 JUMPDEST
0x307 ISZERO
0x308 PUSH2 0x311
0x30b JUMPI
---
0x306: JUMPDEST 
0x307: V315 = ISZERO S0
0x308: V316 = 0x311
0x30b: JUMPI 0x311 V315
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, V311, V309, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, V311, V309]

================================

Block 0x30c
[0x30c:0x310]
---
Predecessors: [0x306]
Successors: []
---
0x30c PUSH1 0x0
0x30e PUSH1 0x0
0x310 REVERT
---
0x30c: V317 = 0x0
0x30e: V318 = 0x0
0x310: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, V311, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, V311, V309]

================================

Block 0x311
[0x311:0x311]
---
Predecessors: [0x2c6, 0x306]
Successors: [0x312]
---
0x311 JUMPDEST
---
0x311: JUMPDEST 
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, S1, S0]

================================

Block 0x312
[0x312:0x312]
---
Predecessors: [0x311]
Successors: [0x313]
---
0x312 JUMPDEST
---
0x312: JUMPDEST 
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, S1, S0]

================================

Block 0x313
[0x313:0x313]
---
Predecessors: [0x312]
Successors: [0x314]
---
0x313 JUMPDEST
---
0x313: JUMPDEST 
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1b3, V148, V150, V128, V156, S1, S0]

================================

Block 0x314
[0x314:0x31c]
---
Predecessors: [0x313]
Successors: [0x1b3]
---
0x314 JUMPDEST
0x315 POP
0x316 SWAP5
0x317 SWAP4
0x318 POP
0x319 POP
0x31a POP
0x31b POP
0x31c JUMP
---
0x314: JUMPDEST 
0x31c: JUMP 0x1b3
---
Entry stack: [V12, 0x1b3, V148, V150, V128, V156, S1, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V12, S1]

================================

Block 0x31d
[0x31d:0x32e]
---
Predecessors: [0x1cd]
Successors: [0x32f, 0x334]
---
0x31d JUMPDEST
0x31e PUSH1 0x0
0x320 SLOAD
0x321 PUSH1 0x1
0x323 PUSH1 0xa0
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 AND
0x32a ISZERO
0x32b PUSH2 0x334
0x32e JUMPI
---
0x31d: JUMPDEST 
0x31e: V319 = 0x0
0x320: V320 = S[0x0]
0x321: V321 = 0x1
0x323: V322 = 0xa0
0x325: V323 = 0x2
0x327: V324 = EXP 0x2 0xa0
0x328: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x32a: V327 = ISZERO V326
0x32b: V328 = 0x334
0x32e: JUMPI 0x334 V327
---
Entry stack: [V12, 0x6e, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V175]

================================

Block 0x32f
[0x32f:0x333]
---
Predecessors: [0x31d]
Successors: []
---
0x32f PUSH1 0x0
0x331 PUSH1 0x0
0x333 REVERT
---
0x32f: V329 = 0x0
0x331: V330 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6e, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V175]

================================

Block 0x334
[0x334:0x34f]
---
Predecessors: [0x31d]
Successors: [0x350]
---
0x334 JUMPDEST
0x335 PUSH1 0x0
0x337 DUP1
0x338 SLOAD
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 NOT
0x342 AND
0x343 PUSH1 0x1
0x345 PUSH1 0xa0
0x347 PUSH1 0x2
0x349 EXP
0x34a SUB
0x34b DUP4
0x34c AND
0x34d OR
0x34e SWAP1
0x34f SSTORE
---
0x334: JUMPDEST 
0x335: V331 = 0x0
0x338: V332 = S[0x0]
0x339: V333 = 0x1
0x33b: V334 = 0xa0
0x33d: V335 = 0x2
0x33f: V336 = EXP 0x2 0xa0
0x340: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V338 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x342: V339 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V332
0x343: V340 = 0x1
0x345: V341 = 0xa0
0x347: V342 = 0x2
0x349: V343 = EXP 0x2 0xa0
0x34a: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V345 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V346 = OR V345 V339
0x34f: S[0x0] = V346
---
Entry stack: [V12, 0x6e, V175]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x6e, V175]

================================

Block 0x350
[0x350:0x352]
---
Predecessors: [0x334]
Successors: [0x6e]
---
0x350 JUMPDEST
0x351 POP
0x352 JUMP
---
0x350: JUMPDEST 
0x352: JUMP 0x6e
---
Entry stack: [V12, 0x6e, V175]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x353
[0x353:0x37f]
---
Predecessors: []
Successors: []
---
0x353 STOP
0x354 LOG1
0x355 PUSH6 0x627a7a723058
0x35c SHA3
0x35d MISSING 0x21
0x35e DUP4
0x35f LOG4
0x360 SIGNEXTEND
0x361 SELFDESTRUCT
0x362 JUMP
0x363 MISSING 0x2e
0x364 MISSING 0x46
0x365 MISSING 0x4f
0x366 PUSH19 0x8d9a1a7c1f7dc4468708ee0c4565e19b5fb330
0x37a PUSH5 0x58b60029
---
0x353: STOP 
0x354: LOG S0 S1 S2
0x355: V347 = 0x627a7a723058
0x35c: V348 = SHA3 0x627a7a723058 S3
0x35d: MISSING 0x21
0x35f: LOG S3 S0 S1 S2 S3 S4
0x360: V349 = SIGNEXTEND S5 S6
0x361: SELFDESTRUCT V349
0x362: JUMP S0
0x363: MISSING 0x2e
0x364: MISSING 0x46
0x365: MISSING 0x4f
0x366: V350 = 0x8d9a1a7c1f7dc4468708ee0c4565e19b5fb330
0x37a: V351 = 0x58b60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V348, 0x58b60029, 0x8d9a1a7c1f7dc4468708ee0c4565e19b5fb330]
Exit stack: []

================================

Function 0:
Public function signature: 0x4592cd1d
Entry block: 0x70
Exit block: 0x80
Body: 0x70, 0x77, 0x78, 0x80, 0x1e3, 0x1fd, 0x204, 0x22b

Function 1:
Public function signature: 0x557f4bc9
Entry block: 0x94
Exit block: 0x80
Body: 0x80, 0x94, 0x9b, 0x9c, 0x22e, 0x247, 0x263, 0x264, 0x265

Function 2:
Public function signature: 0x5aa77d3c
Entry block: 0xc4
Exit block: 0xd4
Body: 0xc4, 0xcb, 0xcc, 0xd4, 0x26a

Function 3:
Public function signature: 0xce606ee0
Entry block: 0xf0
Exit block: 0xd4
Body: 0xd4, 0xf0, 0xf7, 0xf8, 0x279

Function 4:
Public function signature: 0xd613be0a
Entry block: 0x11c
Exit block: 0x80
Body: 0x80, 0x11c, 0x123, 0x124, 0x263, 0x264, 0x265, 0x288, 0x2a1, 0x2bf, 0x2c0, 0x2c1

Function 5:
Public function signature: 0xe04f31e9
Entry block: 0x14c
Exit block: 0x1b3
Body: 0x14c, 0x153, 0x154, 0x1b3, 0x2c6, 0x2e1, 0x304, 0x306, 0x30c, 0x311, 0x312, 0x313, 0x314

Function 6:
Public function signature: 0xf8a6c595
Entry block: 0x1c5
Exit block: 0x6e
Body: 0x6e, 0x1c5, 0x1cc, 0x1cd, 0x31d, 0x32f, 0x334, 0x350

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0x6e
Body: 0x67, 0x6b, 0x6c, 0x6e

