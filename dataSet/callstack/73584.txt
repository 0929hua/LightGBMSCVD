Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x141]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3dcc0db2
0x3c EQ
0x3d PUSH2 0x141
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3dcc0db2
0x3c: V13 = EQ 0x3dcc0db2 V11
0x3d: V14 = 0x141
0x40: JUMPI 0x141 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x184]
---
0x41 DUP1
0x42 PUSH4 0x83197ef0
0x47 EQ
0x48 PUSH2 0x184
0x4b JUMPI
---
0x42: V15 = 0x83197ef0
0x47: V16 = EQ 0x83197ef0 V11
0x48: V17 = 0x184
0x4b: JUMPI 0x184 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x52]
---
Predecessors: [0x0, 0x41]
Successors: [0x53]
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f PUSH1 0x1
0x51 SWAP1
0x52 POP
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x4f: V19 = 0x1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x4c, 0x12f]
Successors: [0x5e, 0x13e]
---
0x53 JUMPDEST
0x54 PUSH1 0x14
0x56 DUP2
0x57 GT
0x58 ISZERO
0x59 ISZERO
0x5a PUSH2 0x13e
0x5d JUMPI
---
0x53: JUMPDEST 
0x54: V20 = 0x14
0x57: V21 = GT S0 0x14
0x58: V22 = ISZERO V21
0x59: V23 = ISZERO V22
0x5a: V24 = 0x13e
0x5d: JUMPI 0x13e V23
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x5e
[0x5e:0xa9]
---
Predecessors: [0x53]
Successors: [0x2ae]
---
0x5e PUSH1 0x1
0x60 PUSH1 0x0
0x62 SWAP1
0x63 SLOAD
0x64 SWAP1
0x65 PUSH2 0x100
0x68 EXP
0x69 SWAP1
0x6a DIV
0x6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80 AND
0x81 PUSH1 0x0
0x83 DUP1
0x84 SWAP1
0x85 SLOAD
0x86 SWAP1
0x87 PUSH2 0x100
0x8a EXP
0x8b SWAP1
0x8c DIV
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 PUSH2 0xaa
0xa6 PUSH2 0x2ae
0xa9 JUMP
---
0x5e: V25 = 0x1
0x60: V26 = 0x0
0x63: V27 = S[0x1]
0x65: V28 = 0x100
0x68: V29 = EXP 0x100 0x0
0x6a: V30 = DIV V27 0x1
0x6b: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x80: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x81: V33 = 0x0
0x85: V34 = S[0x0]
0x87: V35 = 0x100
0x8a: V36 = EXP 0x100 0x0
0x8c: V37 = DIV V34 0x1
0x8d: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xa3: V40 = 0xaa
0xa6: V41 = 0x2ae
0xa9: JUMP 0x2ae
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: [V32, V39, 0xaa]
Exit stack: [V11, S0, V32, V39, 0xaa]

================================

Block 0xaa
[0xaa:0x125]
---
Predecessors: [0x2ae]
Successors: [0x126, 0x12f]
---
0xaa JUMPDEST
0xab DUP1
0xac DUP4
0xad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2 AND
0xc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8 AND
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde DUP3
0xdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4 AND
0xf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a AND
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP3
0x111 POP
0x112 POP
0x113 POP
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 SWAP2
0x119 SUB
0x11a SWAP1
0x11b PUSH1 0x0
0x11d CREATE
0x11e DUP1
0x11f ISZERO
0x120 DUP1
0x121 ISZERO
0x122 PUSH2 0x12f
0x125 JUMPI
---
0xaa: JUMPDEST 
0xad: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xc3: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xda: M[V144] = V45
0xdb: V46 = 0x20
0xdd: V47 = ADD 0x20 V144
0xdf: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xf5: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x10c: M[V47] = V51
0x10d: V52 = 0x20
0x10f: V53 = ADD 0x20 V47
0x114: V54 = 0x40
0x116: V55 = M[0x40]
0x119: V56 = SUB V53 V55
0x11b: V57 = 0x0
0x11d: V58 = CREATE 0x0 V55 V56
0x11f: V59 = ISZERO V58
0x121: V60 = ISZERO V59
0x122: V61 = 0x12f
0x125: JUMPI 0x12f V60
---
Entry stack: [V11, S3, V32, V39, V144]
Stack pops: 3
Stack additions: [V58, V59]
Exit stack: [V11, S3, V58, V59]

================================

Block 0x126
[0x126:0x12e]
---
Predecessors: [0xaa]
Successors: []
---
0x126 RETURNDATASIZE
0x127 PUSH1 0x0
0x129 DUP1
0x12a RETURNDATACOPY
0x12b RETURNDATASIZE
0x12c PUSH1 0x0
0x12e REVERT
---
0x126: V62 = RETURNDATASIZE
0x127: V63 = 0x0
0x12a: RETURNDATACOPY 0x0 0x0 V62
0x12b: V64 = RETURNDATASIZE
0x12c: V65 = 0x0
0x12e: REVERT 0x0 V64
---
Entry stack: [V11, S2, V58, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, V58, V59]

================================

Block 0x12f
[0x12f:0x13d]
---
Predecessors: [0xaa]
Successors: [0x53]
---
0x12f JUMPDEST
0x130 POP
0x131 POP
0x132 DUP1
0x133 DUP1
0x134 PUSH1 0x1
0x136 ADD
0x137 SWAP2
0x138 POP
0x139 POP
0x13a PUSH2 0x53
0x13d JUMP
---
0x12f: JUMPDEST 
0x134: V66 = 0x1
0x136: V67 = ADD 0x1 S2
0x13a: V68 = 0x53
0x13d: JUMP 0x53
---
Entry stack: [V11, S2, V58, V59]
Stack pops: 3
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0x13e
[0x13e:0x140]
---
Predecessors: [0x53]
Successors: []
---
0x13e JUMPDEST
0x13f POP
0x140 STOP
---
0x13e: JUMPDEST 
0x140: STOP 
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0xd]
Successors: [0x149, 0x14d]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 DUP1
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x141: JUMPDEST 
0x142: V69 = CALLVALUE
0x144: V70 = ISZERO V69
0x145: V71 = 0x14d
0x148: JUMPI 0x14d V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x141]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V72 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0x14d
[0x14d:0x181]
---
Predecessors: [0x141]
Successors: [0x19b]
---
0x14d JUMPDEST
0x14e POP
0x14f PUSH2 0x182
0x152 PUSH1 0x4
0x154 DUP1
0x155 CALLDATASIZE
0x156 SUB
0x157 DUP2
0x158 ADD
0x159 SWAP1
0x15a DUP1
0x15b DUP1
0x15c CALLDATALOAD
0x15d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x172 AND
0x173 SWAP1
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP1
0x178 SWAP3
0x179 SWAP2
0x17a SWAP1
0x17b POP
0x17c POP
0x17d POP
0x17e PUSH2 0x19b
0x181 JUMP
---
0x14d: JUMPDEST 
0x14f: V73 = 0x182
0x152: V74 = 0x4
0x155: V75 = CALLDATASIZE
0x156: V76 = SUB V75 0x4
0x158: V77 = ADD 0x4 V76
0x15c: V78 = CALLDATALOAD 0x4
0x15d: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x172: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x174: V81 = 0x20
0x176: V82 = ADD 0x20 0x4
0x17e: V83 = 0x19b
0x181: JUMP 0x19b
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x182, V80]
Exit stack: [V11, 0x182, V80]

================================

Block 0x182
[0x182:0x183]
---
Predecessors: [0x1f6]
Successors: []
---
0x182 JUMPDEST
0x183 STOP
---
0x182: JUMPDEST 
0x183: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x184
[0x184:0x18b]
---
Predecessors: [0x41]
Successors: [0x18c, 0x190]
---
0x184 JUMPDEST
0x185 CALLVALUE
0x186 DUP1
0x187 ISZERO
0x188 PUSH2 0x190
0x18b JUMPI
---
0x184: JUMPDEST 
0x185: V84 = CALLVALUE
0x187: V85 = ISZERO V84
0x188: V86 = 0x190
0x18b: JUMPI 0x190 V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, V84]

================================

Block 0x18c
[0x18c:0x18f]
---
Predecessors: [0x184]
Successors: []
---
0x18c PUSH1 0x0
0x18e DUP1
0x18f REVERT
---
0x18c: V87 = 0x0
0x18f: REVERT 0x0 0x0
---
Entry stack: [V11, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84]

================================

Block 0x190
[0x190:0x198]
---
Predecessors: [0x184]
Successors: [0x23a]
---
0x190 JUMPDEST
0x191 POP
0x192 PUSH2 0x199
0x195 PUSH2 0x23a
0x198 JUMP
---
0x190: JUMPDEST 
0x192: V88 = 0x199
0x195: V89 = 0x23a
0x198: JUMP 0x23a
---
Entry stack: [V11, V84]
Stack pops: 1
Stack additions: [0x199]
Exit stack: [V11, 0x199]

================================

Block 0x199
[0x199:0x19a]
---
Predecessors: []
Successors: []
---
0x199 JUMPDEST
0x19a STOP
---
0x199: JUMPDEST 
0x19a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19b
[0x19b:0x1f1]
---
Predecessors: [0x14d]
Successors: [0x1f2, 0x1f6]
---
0x19b JUMPDEST
0x19c PUSH1 0x0
0x19e DUP1
0x19f SWAP1
0x1a0 SLOAD
0x1a1 SWAP1
0x1a2 PUSH2 0x100
0x1a5 EXP
0x1a6 SWAP1
0x1a7 DIV
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 CALLER
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb EQ
0x1ec ISZERO
0x1ed ISZERO
0x1ee PUSH2 0x1f6
0x1f1 JUMPI
---
0x19b: JUMPDEST 
0x19c: V90 = 0x0
0x1a0: V91 = S[0x0]
0x1a2: V92 = 0x100
0x1a5: V93 = EXP 0x100 0x0
0x1a7: V94 = DIV V91 0x1
0x1a8: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1be: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1d4: V99 = CALLER
0x1d5: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1eb: V102 = EQ V101 V98
0x1ec: V103 = ISZERO V102
0x1ed: V104 = ISZERO V103
0x1ee: V105 = 0x1f6
0x1f1: JUMPI 0x1f6 V104
---
Entry stack: [V11, 0x182, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x182, V80]

================================

Block 0x1f2
[0x1f2:0x1f5]
---
Predecessors: [0x19b]
Successors: []
---
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 REVERT
---
0x1f2: V106 = 0x0
0x1f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x182, V80]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x182, V80]

================================

Block 0x1f6
[0x1f6:0x239]
---
Predecessors: [0x19b]
Successors: [0x182]
---
0x1f6 JUMPDEST
0x1f7 DUP1
0x1f8 PUSH1 0x1
0x1fa PUSH1 0x0
0x1fc PUSH2 0x100
0x1ff EXP
0x200 DUP2
0x201 SLOAD
0x202 DUP2
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 MUL
0x219 NOT
0x21a AND
0x21b SWAP1
0x21c DUP4
0x21d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x232 AND
0x233 MUL
0x234 OR
0x235 SWAP1
0x236 SSTORE
0x237 POP
0x238 POP
0x239 JUMP
---
0x1f6: JUMPDEST 
0x1f8: V107 = 0x1
0x1fa: V108 = 0x0
0x1fc: V109 = 0x100
0x1ff: V110 = EXP 0x100 0x0
0x201: V111 = S[0x1]
0x203: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V113 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x219: V114 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V115 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V111
0x21d: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x232: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x233: V118 = MUL V117 0x1
0x234: V119 = OR V118 V115
0x236: S[0x1] = V119
0x239: JUMP 0x182
---
Entry stack: [V11, 0x182, V80]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x23a
[0x23a:0x290]
---
Predecessors: [0x190]
Successors: [0x291, 0x295]
---
0x23a JUMPDEST
0x23b PUSH1 0x0
0x23d DUP1
0x23e SWAP1
0x23f SLOAD
0x240 SWAP1
0x241 PUSH2 0x100
0x244 EXP
0x245 SWAP1
0x246 DIV
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 AND
0x273 CALLER
0x274 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x289 AND
0x28a EQ
0x28b ISZERO
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x23a: JUMPDEST 
0x23b: V120 = 0x0
0x23f: V121 = S[0x0]
0x241: V122 = 0x100
0x244: V123 = EXP 0x100 0x0
0x246: V124 = DIV V121 0x1
0x247: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x25d: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x273: V129 = CALLER
0x274: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x289: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x28a: V132 = EQ V131 V128
0x28b: V133 = ISZERO V132
0x28c: V134 = ISZERO V133
0x28d: V135 = 0x295
0x290: JUMPI 0x295 V134
---
Entry stack: [V11, 0x199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x23a]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V136 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V11, 0x199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199]

================================

Block 0x295
[0x295:0x2ad]
---
Predecessors: [0x23a]
Successors: []
---
0x295 JUMPDEST
0x296 CALLER
0x297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ac AND
0x2ad SELFDESTRUCT
---
0x295: JUMPDEST 
0x296: V137 = CALLER
0x297: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ac: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x2ad: SELFDESTRUCT V139
---
Entry stack: [V11, 0x199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199]

================================

Block 0x2ae
[0x2ae:0x2bd]
---
Predecessors: [0x5e]
Successors: [0xaa]
---
0x2ae JUMPDEST
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 PUSH2 0x23e
0x2b5 DUP1
0x2b6 PUSH2 0x2bf
0x2b9 DUP4
0x2ba CODECOPY
0x2bb ADD
0x2bc SWAP1
0x2bd JUMP
---
0x2ae: JUMPDEST 
0x2af: V140 = 0x40
0x2b1: V141 = M[0x40]
0x2b2: V142 = 0x23e
0x2b6: V143 = 0x2bf
0x2ba: CODECOPY V141 0x2bf 0x23e
0x2bb: V144 = ADD 0x23e V141
0x2bd: JUMP 0xaa
---
Entry stack: [V11, S3, V32, V39, 0xaa]
Stack pops: 1
Stack additions: [V144]
Exit stack: [V11, S3, V32, V39, V144]

================================

Block 0x2be
[0x2be:0x2ca]
---
Predecessors: []
Successors: [0x2cb]
---
0x2be STOP
0x2bf PUSH1 0x80
0x2c1 PUSH1 0x40
0x2c3 MSTORE
0x2c4 CALLVALUE
0x2c5 DUP1
0x2c6 ISZERO
0x2c7 PUSH2 0x10
0x2ca JUMPI
---
0x2be: STOP 
0x2bf: V145 = 0x80
0x2c1: V146 = 0x40
0x2c3: M[0x40] = 0x80
0x2c4: V147 = CALLVALUE
0x2c6: V148 = ISZERO V147
0x2c7: V149 = 0x10
0x2ca: THROWI V148
---
Entry stack: []
Stack pops: 0
Stack additions: [V147]
Exit stack: []

================================

Block 0x2cb
[0x2cb:0x3c2]
---
Predecessors: [0x2be]
Successors: [0x3c3]
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
0x2cf JUMPDEST
0x2d0 POP
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 PUSH1 0x40
0x2d6 DUP1
0x2d7 PUSH2 0x23e
0x2da DUP4
0x2db CODECOPY
0x2dc DUP2
0x2dd ADD
0x2de DUP1
0x2df PUSH1 0x40
0x2e1 MSTORE
0x2e2 DUP2
0x2e3 ADD
0x2e4 SWAP1
0x2e5 DUP1
0x2e6 DUP1
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP1
0x2ed SWAP3
0x2ee SWAP2
0x2ef SWAP1
0x2f0 DUP1
0x2f1 MLOAD
0x2f2 SWAP1
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 SWAP1
0x2f7 SWAP3
0x2f8 SWAP2
0x2f9 SWAP1
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd PUSH1 0x0
0x2ff DUP3
0x300 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x315 AND
0x316 PUSH1 0x0
0x318 PUSH1 0x40
0x31a MLOAD
0x31b PUSH1 0x0
0x31d PUSH1 0x40
0x31f MLOAD
0x320 DUP1
0x321 DUP4
0x322 SUB
0x323 DUP2
0x324 DUP6
0x325 DUP8
0x326 GAS
0x327 CALL
0x328 SWAP3
0x329 POP
0x32a POP
0x32b POP
0x32c POP
0x32d DUP3
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 PUSH4 0x70a08231
0x349 ADDRESS
0x34a PUSH1 0x40
0x34c MLOAD
0x34d DUP3
0x34e PUSH4 0xffffffff
0x353 AND
0x354 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x372 MUL
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x4
0x377 ADD
0x378 DUP1
0x379 DUP3
0x37a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38f AND
0x390 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a5 AND
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab SWAP2
0x3ac POP
0x3ad POP
0x3ae PUSH1 0x20
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 DUP4
0x3b5 SUB
0x3b6 DUP2
0x3b7 PUSH1 0x0
0x3b9 DUP8
0x3ba DUP1
0x3bb EXTCODESIZE
0x3bc ISZERO
0x3bd DUP1
0x3be ISZERO
0x3bf PUSH2 0x108
0x3c2 JUMPI
---
0x2cb: V150 = 0x0
0x2ce: REVERT 0x0 0x0
0x2cf: JUMPDEST 
0x2d1: V151 = 0x40
0x2d3: V152 = M[0x40]
0x2d4: V153 = 0x40
0x2d7: V154 = 0x23e
0x2db: CODECOPY V152 0x23e 0x40
0x2dd: V155 = ADD V152 0x40
0x2df: V156 = 0x40
0x2e1: M[0x40] = V155
0x2e3: V157 = ADD V152 V155
0x2e7: V158 = M[V152]
0x2e9: V159 = 0x20
0x2eb: V160 = ADD 0x20 V152
0x2f1: V161 = M[V160]
0x2f3: V162 = 0x20
0x2f5: V163 = ADD 0x20 V160
0x2fd: V164 = 0x0
0x300: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x315: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x316: V167 = 0x0
0x318: V168 = 0x40
0x31a: V169 = M[0x40]
0x31b: V170 = 0x0
0x31d: V171 = 0x40
0x31f: V172 = M[0x40]
0x322: V173 = SUB V169 V172
0x326: V174 = GAS
0x327: V175 = CALL V174 V166 0x0 V172 V173 V172 0x0
0x32e: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x344: V178 = 0x70a08231
0x349: V179 = ADDRESS
0x34a: V180 = 0x40
0x34c: V181 = M[0x40]
0x34e: V182 = 0xffffffff
0x353: V183 = AND 0xffffffff 0x70a08231
0x354: V184 = 0x100000000000000000000000000000000000000000000000000000000
0x372: V185 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x374: M[V181] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x375: V186 = 0x4
0x377: V187 = ADD 0x4 V181
0x37a: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x390: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x3a7: M[V187] = V191
0x3a8: V192 = 0x20
0x3aa: V193 = ADD 0x20 V187
0x3ae: V194 = 0x20
0x3b0: V195 = 0x40
0x3b2: V196 = M[0x40]
0x3b5: V197 = SUB V193 V196
0x3b7: V198 = 0x0
0x3bb: V199 = EXTCODESIZE V177
0x3bc: V200 = ISZERO V199
0x3be: V201 = ISZERO V200
0x3bf: V202 = 0x108
0x3c2: THROWI V201
---
Entry stack: [V147]
Stack pops: 0
Stack additions: [V200, V177, 0x0, V196, V197, V196, 0x20, V193, 0x70a08231, V177, 0x0, V161, V158]
Exit stack: []

================================

Block 0x3c3
[0x3c3:0x3d1]
---
Predecessors: [0x2cb]
Successors: [0x3d2]
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 GAS
0x3ca CALL
0x3cb ISZERO
0x3cc DUP1
0x3cd ISZERO
0x3ce PUSH2 0x11c
0x3d1 JUMPI
---
0x3c3: V203 = 0x0
0x3c6: REVERT 0x0 0x0
0x3c7: JUMPDEST 
0x3c9: V204 = GAS
0x3ca: V205 = CALL V204 S1 S2 S3 S4 S5 S6
0x3cb: V206 = ISZERO V205
0x3cd: V207 = ISZERO V206
0x3ce: V208 = 0x11c
0x3d1: THROWI V207
---
Entry stack: [V158, V161, 0x0, V177, 0x70a08231, V193, 0x20, V196, V197, V196, 0x0, V177, V200]
Stack pops: 0
Stack additions: [V206]
Exit stack: []

================================

Block 0x3d2
[0x3d2:0x3ec]
---
Predecessors: [0x3c3]
Successors: [0x3ed]
---
0x3d2 RETURNDATASIZE
0x3d3 PUSH1 0x0
0x3d5 DUP1
0x3d6 RETURNDATACOPY
0x3d7 RETURNDATASIZE
0x3d8 PUSH1 0x0
0x3da REVERT
0x3db JUMPDEST
0x3dc POP
0x3dd POP
0x3de POP
0x3df POP
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 RETURNDATASIZE
0x3e4 PUSH1 0x20
0x3e6 DUP2
0x3e7 LT
0x3e8 ISZERO
0x3e9 PUSH2 0x132
0x3ec JUMPI
---
0x3d2: V209 = RETURNDATASIZE
0x3d3: V210 = 0x0
0x3d6: RETURNDATACOPY 0x0 0x0 V209
0x3d7: V211 = RETURNDATASIZE
0x3d8: V212 = 0x0
0x3da: REVERT 0x0 V211
0x3db: JUMPDEST 
0x3e0: V213 = 0x40
0x3e2: V214 = M[0x40]
0x3e3: V215 = RETURNDATASIZE
0x3e4: V216 = 0x20
0x3e7: V217 = LT V215 0x20
0x3e8: V218 = ISZERO V217
0x3e9: V219 = 0x132
0x3ec: THROWI V218
---
Entry stack: [V206]
Stack pops: 0
Stack additions: [V215, V214]
Exit stack: []

================================

Block 0x3ed
[0x3ed:0x4a2]
---
Predecessors: [0x3d2]
Successors: [0x4a3]
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
0x3f1 JUMPDEST
0x3f2 DUP2
0x3f3 ADD
0x3f4 SWAP1
0x3f5 DUP1
0x3f6 DUP1
0x3f7 MLOAD
0x3f8 SWAP1
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP1
0x3fd SWAP3
0x3fe SWAP2
0x3ff SWAP1
0x400 POP
0x401 POP
0x402 POP
0x403 SWAP1
0x404 POP
0x405 DUP3
0x406 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41b AND
0x41c PUSH4 0xa9059cbb
0x421 DUP4
0x422 DUP4
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP4
0x427 PUSH4 0xffffffff
0x42c AND
0x42d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x44b MUL
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x4
0x450 ADD
0x451 DUP1
0x452 DUP4
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47e AND
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x20
0x483 ADD
0x484 DUP3
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x20
0x489 ADD
0x48a SWAP3
0x48b POP
0x48c POP
0x48d POP
0x48e PUSH1 0x20
0x490 PUSH1 0x40
0x492 MLOAD
0x493 DUP1
0x494 DUP4
0x495 SUB
0x496 DUP2
0x497 PUSH1 0x0
0x499 DUP8
0x49a DUP1
0x49b EXTCODESIZE
0x49c ISZERO
0x49d DUP1
0x49e ISZERO
0x49f PUSH2 0x1e8
0x4a2 JUMPI
---
0x3ed: V220 = 0x0
0x3f0: REVERT 0x0 0x0
0x3f1: JUMPDEST 
0x3f3: V221 = ADD S1 S0
0x3f7: V222 = M[S1]
0x3f9: V223 = 0x20
0x3fb: V224 = ADD 0x20 S1
0x406: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x41c: V227 = 0xa9059cbb
0x423: V228 = 0x40
0x425: V229 = M[0x40]
0x427: V230 = 0xffffffff
0x42c: V231 = AND 0xffffffff 0xa9059cbb
0x42d: V232 = 0x100000000000000000000000000000000000000000000000000000000
0x44b: V233 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x44d: M[V229] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x44e: V234 = 0x4
0x450: V235 = ADD 0x4 V229
0x453: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x469: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x480: M[V235] = V239
0x481: V240 = 0x20
0x483: V241 = ADD 0x20 V235
0x486: M[V241] = V222
0x487: V242 = 0x20
0x489: V243 = ADD 0x20 V241
0x48e: V244 = 0x20
0x490: V245 = 0x40
0x492: V246 = M[0x40]
0x495: V247 = SUB V243 V246
0x497: V248 = 0x0
0x49b: V249 = EXTCODESIZE V226
0x49c: V250 = ISZERO V249
0x49e: V251 = ISZERO V250
0x49f: V252 = 0x1e8
0x4a2: THROWI V251
---
Entry stack: [V214, V215]
Stack pops: 0
Stack additions: [V250, V226, 0x0, V246, V247, V246, 0x20, V243, 0xa9059cbb, V226, V222, S3, S4]
Exit stack: []

================================

Block 0x4a3
[0x4a3:0x4b1]
---
Predecessors: [0x3ed]
Successors: [0x4b2]
---
0x4a3 PUSH1 0x0
0x4a5 DUP1
0x4a6 REVERT
0x4a7 JUMPDEST
0x4a8 POP
0x4a9 GAS
0x4aa CALL
0x4ab ISZERO
0x4ac DUP1
0x4ad ISZERO
0x4ae PUSH2 0x1fc
0x4b1 JUMPI
---
0x4a3: V253 = 0x0
0x4a6: REVERT 0x0 0x0
0x4a7: JUMPDEST 
0x4a9: V254 = GAS
0x4aa: V255 = CALL V254 S1 S2 S3 S4 S5 S6
0x4ab: V256 = ISZERO V255
0x4ad: V257 = ISZERO V256
0x4ae: V258 = 0x1fc
0x4b1: THROWI V257
---
Entry stack: [S12, S11, V222, V226, 0xa9059cbb, V243, 0x20, V246, V247, V246, 0x0, V226, V250]
Stack pops: 0
Stack additions: [V256]
Exit stack: []

================================

Block 0x4b2
[0x4b2:0x4cc]
---
Predecessors: [0x4a3]
Successors: [0x4cd]
---
0x4b2 RETURNDATASIZE
0x4b3 PUSH1 0x0
0x4b5 DUP1
0x4b6 RETURNDATACOPY
0x4b7 RETURNDATASIZE
0x4b8 PUSH1 0x0
0x4ba REVERT
0x4bb JUMPDEST
0x4bc POP
0x4bd POP
0x4be POP
0x4bf POP
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 RETURNDATASIZE
0x4c4 PUSH1 0x20
0x4c6 DUP2
0x4c7 LT
0x4c8 ISZERO
0x4c9 PUSH2 0x212
0x4cc JUMPI
---
0x4b2: V259 = RETURNDATASIZE
0x4b3: V260 = 0x0
0x4b6: RETURNDATACOPY 0x0 0x0 V259
0x4b7: V261 = RETURNDATASIZE
0x4b8: V262 = 0x0
0x4ba: REVERT 0x0 V261
0x4bb: JUMPDEST 
0x4c0: V263 = 0x40
0x4c2: V264 = M[0x40]
0x4c3: V265 = RETURNDATASIZE
0x4c4: V266 = 0x20
0x4c7: V267 = LT V265 0x20
0x4c8: V268 = ISZERO V267
0x4c9: V269 = 0x212
0x4cc: THROWI V268
---
Entry stack: [V256]
Stack pops: 0
Stack additions: [V265, V264]
Exit stack: []

================================

Block 0x4cd
[0x4cd:0x532]
---
Predecessors: [0x4b2]
Successors: []
---
0x4cd PUSH1 0x0
0x4cf DUP1
0x4d0 REVERT
0x4d1 JUMPDEST
0x4d2 DUP2
0x4d3 ADD
0x4d4 SWAP1
0x4d5 DUP1
0x4d6 DUP1
0x4d7 MLOAD
0x4d8 SWAP1
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc SWAP1
0x4dd SWAP3
0x4de SWAP2
0x4df SWAP1
0x4e0 POP
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 CALLER
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb SELFDESTRUCT
0x4fc STOP
0x4fd LOG1
0x4fe PUSH6 0x627a7a723058
0x505 SHA3
0x506 MISSING 0xb8
0x507 SWAP4
0x508 GT
0x509 MISSING 0xc4
0x50a MISSING 0x4c
0x50b SHL
0x50c MISSING 0x4d
0x50d PUSH12 0x456d66335ccfd04ff1ef90b8
0x51a PUSH24 0x452c66c85b125022499f060029
---
0x4cd: V270 = 0x0
0x4d0: REVERT 0x0 0x0
0x4d1: JUMPDEST 
0x4d3: V271 = ADD S1 S0
0x4d7: V272 = M[S1]
0x4d9: V273 = 0x20
0x4db: V274 = ADD 0x20 S1
0x4e4: V275 = CALLER
0x4e5: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4fb: SELFDESTRUCT V277
0x4fc: STOP 
0x4fd: LOG S0 S1 S2
0x4fe: V278 = 0x627a7a723058
0x505: V279 = SHA3 0x627a7a723058 S3
0x506: MISSING 0xb8
0x508: V280 = GT S4 S1
0x509: MISSING 0xc4
0x50a: MISSING 0x4c
0x50b: V281 = SHL S0 S1
0x50c: MISSING 0x4d
0x50d: V282 = 0x456d66335ccfd04ff1ef90b8
0x51a: V283 = 0x452c66c85b125022499f060029
---
Entry stack: [V264, V265]
Stack pops: 0
Stack additions: [V279, V280, S2, S3, S0, V281, 0x452c66c85b125022499f060029, 0x456d66335ccfd04ff1ef90b8]
Exit stack: []

================================

Function 0:
Public function signature: 0x3dcc0db2
Entry block: 0x141
Exit block: 0x182
Body: 0x141, 0x149, 0x14d, 0x182, 0x19b, 0x1f2, 0x1f6

Function 1:
Public function signature: 0x83197ef0
Entry block: 0x184
Exit block: 0x295
Body: 0x184, 0x18c, 0x190, 0x23a, 0x291, 0x295

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x126
Body: 0x4c, 0x53, 0x5e, 0xaa, 0x126, 0x12f, 0x13e, 0x2ae

