Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8a
0xa: JUMPI 0x8a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x8c]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xefafd01
0x34 EQ
0x35 PUSH2 0x8c
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xefafd01
0x34: V10 = EQ 0xefafd01 V8
0x35: V11 = 0x8c
0x38: JUMPI 0x8c V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xad]
---
0x39 DUP1
0x3a PUSH4 0x25d8dcf2
0x3f EQ
0x40 PUSH2 0xad
0x43 JUMPI
---
0x3a: V12 = 0x25d8dcf2
0x3f: V13 = EQ 0x25d8dcf2 V8
0x40: V14 = 0xad
0x43: JUMPI 0xad V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xba]
---
0x44 DUP1
0x45 PUSH4 0x34dbe44d
0x4a EQ
0x4b PUSH2 0xba
0x4e JUMPI
---
0x45: V15 = 0x34dbe44d
0x4a: V16 = EQ 0x34dbe44d V8
0x4b: V17 = 0xba
0x4e: JUMPI 0xba V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xdb]
---
0x4f DUP1
0x50 PUSH4 0x41c0e1b5
0x55 EQ
0x56 PUSH2 0xdb
0x59 JUMPI
---
0x50: V18 = 0x41c0e1b5
0x55: V19 = EQ 0x41c0e1b5 V8
0x56: V20 = 0xdb
0x59: JUMPI 0xdb V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0xe8]
---
0x5a DUP1
0x5b PUSH4 0x5acce36b
0x60 EQ
0x61 PUSH2 0xe8
0x64 JUMPI
---
0x5b: V21 = 0x5acce36b
0x60: V22 = EQ 0x5acce36b V8
0x61: V23 = 0xe8
0x64: JUMPI 0xe8 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x109]
---
0x65 DUP1
0x66 PUSH4 0x7c8cf50c
0x6b EQ
0x6c PUSH2 0x109
0x6f JUMPI
---
0x66: V24 = 0x7c8cf50c
0x6b: V25 = EQ 0x7c8cf50c V8
0x6c: V26 = 0x109
0x6f: JUMPI 0x109 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x12d]
---
0x70 DUP1
0x71 PUSH4 0x94c3fa2e
0x76 EQ
0x77 PUSH2 0x12d
0x7a JUMPI
---
0x71: V27 = 0x94c3fa2e
0x76: V28 = EQ 0x94c3fa2e V8
0x77: V29 = 0x12d
0x7a: JUMPI 0x12d V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x14e]
---
0x7b DUP1
0x7c PUSH4 0xcee6f93c
0x81 EQ
0x82 PUSH2 0x14e
0x85 JUMPI
---
0x7c: V30 = 0xcee6f93c
0x81: V31 = EQ 0xcee6f93c V8
0x82: V32 = 0x14e
0x85: JUMPI 0x14e V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7b]
Successors: [0x8a]
---
0x86 PUSH2 0x8a
0x89 JUMP
---
0x86: V33 = 0x8a
0x89: JUMP 0x8a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x0, 0x86]
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0xb]
Successors: [0x853]
---
0x8c JUMPDEST
0x8d PUSH2 0x97
0x90 PUSH1 0x4
0x92 POP
0x93 PUSH2 0x853
0x96 JUMP
---
0x8c: JUMPDEST 
0x8d: V34 = 0x97
0x90: V35 = 0x4
0x93: V36 = 0x853
0x96: JUMP 0x853
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x97]
Exit stack: [V8, 0x97]

================================

Block 0x97
[0x97:0xac]
---
Predecessors: [0x862]
Successors: []
---
0x97 JUMPDEST
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c DUP3
0x9d DUP2
0x9e MSTORE
0x9f PUSH1 0x20
0xa1 ADD
0xa2 SWAP2
0xa3 POP
0xa4 POP
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 SWAP2
0xaa SUB
0xab SWAP1
0xac RETURN
---
0x97: JUMPDEST 
0x98: V37 = 0x40
0x9a: V38 = M[0x40]
0x9e: M[V38] = V582
0x9f: V39 = 0x20
0xa1: V40 = ADD 0x20 V38
0xa5: V41 = 0x40
0xa7: V42 = M[0x40]
0xaa: V43 = SUB V40 V42
0xac: RETURN V42 V43
---
Entry stack: [V8, V582]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0x39]
Successors: [0x1eb]
---
0xad JUMPDEST
0xae PUSH2 0xb8
0xb1 PUSH1 0x4
0xb3 POP
0xb4 PUSH2 0x1eb
0xb7 JUMP
---
0xad: JUMPDEST 
0xae: V44 = 0xb8
0xb1: V45 = 0x4
0xb4: V46 = 0x1eb
0xb7: JUMP 0x1eb
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xb8]
Exit stack: [V8, 0xb8]

================================

Block 0xb8
[0xb8:0xb9]
---
Predecessors: [0x791]
Successors: []
---
0xb8 JUMPDEST
0xb9 STOP
---
0xb8: JUMPDEST 
0xb9: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0x44]
Successors: [0x7b1]
---
0xba JUMPDEST
0xbb PUSH2 0xc5
0xbe PUSH1 0x4
0xc0 POP
0xc1 PUSH2 0x7b1
0xc4 JUMP
---
0xba: JUMPDEST 
0xbb: V47 = 0xc5
0xbe: V48 = 0x4
0xc1: V49 = 0x7b1
0xc4: JUMP 0x7b1
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V8, 0xc5]

================================

Block 0xc5
[0xc5:0xda]
---
Predecessors: [0x7c0]
Successors: []
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca DUP3
0xcb DUP2
0xcc MSTORE
0xcd PUSH1 0x20
0xcf ADD
0xd0 SWAP2
0xd1 POP
0xd2 POP
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 SWAP2
0xd8 SUB
0xd9 SWAP1
0xda RETURN
---
0xc5: JUMPDEST 
0xc6: V50 = 0x40
0xc8: V51 = M[0x40]
0xcc: M[V51] = V528
0xcd: V52 = 0x20
0xcf: V53 = ADD 0x20 V51
0xd3: V54 = 0x40
0xd5: V55 = M[0x40]
0xd8: V56 = SUB V53 V55
0xda: RETURN V55 V56
---
Entry stack: [V8, V528]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xdb
[0xdb:0xe5]
---
Predecessors: [0x4f]
Successors: [0x865]
---
0xdb JUMPDEST
0xdc PUSH2 0xe6
0xdf PUSH1 0x4
0xe1 POP
0xe2 PUSH2 0x865
0xe5 JUMP
---
0xdb: JUMPDEST 
0xdc: V57 = 0xe6
0xdf: V58 = 0x4
0xe2: V59 = 0x865
0xe5: JUMP 0x865
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V8, 0xe6]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x8f7]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xe8
[0xe8:0xf2]
---
Predecessors: [0x5a]
Successors: [0x1c7]
---
0xe8 JUMPDEST
0xe9 PUSH2 0xf3
0xec PUSH1 0x4
0xee POP
0xef PUSH2 0x1c7
0xf2 JUMP
---
0xe8: JUMPDEST 
0xe9: V60 = 0xf3
0xec: V61 = 0x4
0xef: V62 = 0x1c7
0xf2: JUMP 0x1c7
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V8, 0xf3]

================================

Block 0xf3
[0xf3:0x108]
---
Predecessors: [0x1e8]
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP3
0xf9 DUP2
0xfa MSTORE
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP2
0xff POP
0x100 POP
0x101 PUSH1 0x40
0x103 MLOAD
0x104 DUP1
0x105 SWAP2
0x106 SUB
0x107 SWAP1
0x108 RETURN
---
0xf3: JUMPDEST 
0xf4: V63 = 0x40
0xf6: V64 = M[0x40]
0xfa: M[V64] = V141
0xfb: V65 = 0x20
0xfd: V66 = ADD 0x20 V64
0x101: V67 = 0x40
0x103: V68 = M[0x40]
0x106: V69 = SUB V66 V68
0x108: RETURN V68 V69
---
Entry stack: [V8, V141]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x109
[0x109:0x113]
---
Predecessors: [0x65]
Successors: [0x795]
---
0x109 JUMPDEST
0x10a PUSH2 0x114
0x10d PUSH1 0x4
0x10f POP
0x110 PUSH2 0x795
0x113 JUMP
---
0x109: JUMPDEST 
0x10a: V70 = 0x114
0x10d: V71 = 0x4
0x110: V72 = 0x795
0x113: JUMP 0x795
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V8, 0x114]

================================

Block 0x114
[0x114:0x12c]
---
Predecessors: [0x7ae]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 DUP3
0x11a PUSH1 0xff
0x11c AND
0x11d DUP2
0x11e MSTORE
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP2
0x123 POP
0x124 POP
0x125 PUSH1 0x40
0x127 MLOAD
0x128 DUP1
0x129 SWAP2
0x12a SUB
0x12b SWAP1
0x12c RETURN
---
0x114: JUMPDEST 
0x115: V73 = 0x40
0x117: V74 = M[0x40]
0x11a: V75 = 0xff
0x11c: V76 = AND 0xff V523
0x11e: M[V74] = V76
0x11f: V77 = 0x20
0x121: V78 = ADD 0x20 V74
0x125: V79 = 0x40
0x127: V80 = M[0x40]
0x12a: V81 = SUB V78 V80
0x12c: RETURN V80 V81
---
Entry stack: [V8, V523]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x70]
Successors: [0x7c3]
---
0x12d JUMPDEST
0x12e PUSH2 0x138
0x131 PUSH1 0x4
0x133 POP
0x134 PUSH2 0x7c3
0x137 JUMP
---
0x12d: JUMPDEST 
0x12e: V82 = 0x138
0x131: V83 = 0x4
0x134: V84 = 0x7c3
0x137: JUMP 0x7c3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x138]
Exit stack: [V8, 0x138]

================================

Block 0x138
[0x138:0x14d]
---
Predecessors: [0x7d2]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
---
0x138: JUMPDEST 
0x139: V85 = 0x40
0x13b: V86 = M[0x40]
0x13f: M[V86] = V533
0x140: V87 = 0x20
0x142: V88 = ADD 0x20 V86
0x146: V89 = 0x40
0x148: V90 = M[0x40]
0x14b: V91 = SUB V88 V90
0x14d: RETURN V90 V91
---
Entry stack: [V8, V533]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x14e
[0x14e:0x158]
---
Predecessors: [0x7b]
Successors: [0x7d5]
---
0x14e JUMPDEST
0x14f PUSH2 0x159
0x152 PUSH1 0x4
0x154 POP
0x155 PUSH2 0x7d5
0x158 JUMP
---
0x14e: JUMPDEST 
0x14f: V92 = 0x159
0x152: V93 = 0x4
0x155: V94 = 0x7d5
0x158: JUMP 0x7d5
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x159]
Exit stack: [V8, 0x159]

================================

Block 0x159
[0x159:0x19f]
---
Predecessors: [0x850]
Successors: [0x1a0, 0x1b9]
---
0x159 JUMPDEST
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e DUP1
0x15f PUSH1 0x20
0x161 ADD
0x162 DUP3
0x163 DUP2
0x164 SUB
0x165 DUP3
0x166 MSTORE
0x167 DUP4
0x168 DUP2
0x169 DUP2
0x16a MLOAD
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x20
0x16f ADD
0x170 SWAP2
0x171 POP
0x172 DUP1
0x173 MLOAD
0x174 SWAP1
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 DUP1
0x17a DUP4
0x17b DUP4
0x17c DUP3
0x17d SWAP1
0x17e PUSH1 0x0
0x180 PUSH1 0x4
0x182 PUSH1 0x20
0x184 DUP5
0x185 PUSH1 0x1f
0x187 ADD
0x188 DIV
0x189 PUSH1 0x3
0x18b MUL
0x18c PUSH1 0xf
0x18e ADD
0x18f CALL
0x190 POP
0x191 SWAP1
0x192 POP
0x193 SWAP1
0x194 DUP2
0x195 ADD
0x196 SWAP1
0x197 PUSH1 0x1f
0x199 AND
0x19a DUP1
0x19b ISZERO
0x19c PUSH2 0x1b9
0x19f JUMPI
---
0x159: JUMPDEST 
0x15a: V95 = 0x40
0x15c: V96 = M[0x40]
0x15f: V97 = 0x20
0x161: V98 = ADD 0x20 V96
0x164: V99 = SUB V98 V96
0x166: M[V96] = V99
0x16a: V100 = M[V554]
0x16c: M[V98] = V100
0x16d: V101 = 0x20
0x16f: V102 = ADD 0x20 V98
0x173: V103 = M[V554]
0x175: V104 = 0x20
0x177: V105 = ADD 0x20 V554
0x17e: V106 = 0x0
0x180: V107 = 0x4
0x182: V108 = 0x20
0x185: V109 = 0x1f
0x187: V110 = ADD 0x1f V103
0x188: V111 = DIV V110 0x20
0x189: V112 = 0x3
0x18b: V113 = MUL 0x3 V111
0x18c: V114 = 0xf
0x18e: V115 = ADD 0xf V113
0x18f: V116 = CALL V115 0x4 0x0 V105 V103 V102 V103
0x195: V117 = ADD V103 V102
0x197: V118 = 0x1f
0x199: V119 = AND 0x1f V103
0x19b: V120 = ISZERO V119
0x19c: V121 = 0x1b9
0x19f: JUMPI 0x1b9 V120
---
Entry stack: [V8, V554]
Stack pops: 1
Stack additions: [S0, V96, V96, V117, V119]
Exit stack: [V8, V554, V96, V96, V117, V119]

================================

Block 0x1a0
[0x1a0:0x1b8]
---
Predecessors: [0x159]
Successors: [0x1b9]
---
0x1a0 DUP1
0x1a1 DUP3
0x1a2 SUB
0x1a3 DUP1
0x1a4 MLOAD
0x1a5 PUSH1 0x1
0x1a7 DUP4
0x1a8 PUSH1 0x20
0x1aa SUB
0x1ab PUSH2 0x100
0x1ae EXP
0x1af SUB
0x1b0 NOT
0x1b1 AND
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 SWAP2
0x1b8 POP
---
0x1a2: V122 = SUB V117 V119
0x1a4: V123 = M[V122]
0x1a5: V124 = 0x1
0x1a8: V125 = 0x20
0x1aa: V126 = SUB 0x20 V119
0x1ab: V127 = 0x100
0x1ae: V128 = EXP 0x100 V126
0x1af: V129 = SUB V128 0x1
0x1b0: V130 = NOT V129
0x1b1: V131 = AND V130 V123
0x1b3: M[V122] = V131
0x1b4: V132 = 0x20
0x1b6: V133 = ADD 0x20 V122
---
Entry stack: [V8, V554, V96, V96, V117, V119]
Stack pops: 2
Stack additions: [V133, S0]
Exit stack: [V8, V554, V96, V96, V133, V119]

================================

Block 0x1b9
[0x1b9:0x1c6]
---
Predecessors: [0x159, 0x1a0]
Successors: []
---
0x1b9 JUMPDEST
0x1ba POP
0x1bb SWAP3
0x1bc POP
0x1bd POP
0x1be POP
0x1bf PUSH1 0x40
0x1c1 MLOAD
0x1c2 DUP1
0x1c3 SWAP2
0x1c4 SUB
0x1c5 SWAP1
0x1c6 RETURN
---
0x1b9: JUMPDEST 
0x1bf: V134 = 0x40
0x1c1: V135 = M[0x40]
0x1c4: V136 = SUB S1 V135
0x1c6: RETURN V135 V136
---
Entry stack: [V8, V554, V96, V96, S1, V119]
Stack pops: 5
Stack additions: []
Exit stack: [V8]

================================

Block 0x1c7
[0x1c7:0x1e7]
---
Predecessors: [0xe8]
Successors: [0x1e8]
---
0x1c7 JUMPDEST
0x1c8 PUSH1 0x0
0x1ca ADDRESS
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 BALANCE
0x1e2 SWAP1
0x1e3 POP
0x1e4 PUSH2 0x1e8
0x1e7 JUMP
---
0x1c7: JUMPDEST 
0x1c8: V137 = 0x0
0x1ca: V138 = ADDRESS
0x1cb: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x1e1: V141 = BALANCE V140
0x1e4: V142 = 0x1e8
0x1e7: JUMP 0x1e8
---
Entry stack: [V8, 0xf3]
Stack pops: 0
Stack additions: [V141]
Exit stack: [V8, 0xf3, V141]

================================

Block 0x1e8
[0x1e8:0x1ea]
---
Predecessors: [0x1c7]
Successors: [0xf3]
---
0x1e8 JUMPDEST
0x1e9 SWAP1
0x1ea JUMP
---
0x1e8: JUMPDEST 
0x1ea: JUMP 0xf3
---
Entry stack: [V8, 0xf3, V141]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V141]

================================

Block 0x1eb
[0x1eb:0x231]
---
Predecessors: [0xad]
Successors: [0x232, 0x32f]
---
0x1eb JUMPDEST
0x1ec PUSH1 0x0
0x1ee PUSH1 0x0
0x1f0 PUSH1 0x1
0x1f2 PUSH1 0x6
0x1f4 PUSH1 0x0
0x1f6 SWAP1
0x1f7 SLOAD
0x1f8 SWAP1
0x1f9 PUSH2 0x100
0x1fc EXP
0x1fd SWAP1
0x1fe DIV
0x1ff PUSH1 0xff
0x201 AND
0x202 ADD
0x203 PUSH1 0x6
0x205 PUSH1 0x0
0x207 PUSH2 0x100
0x20a EXP
0x20b DUP2
0x20c SLOAD
0x20d DUP2
0x20e PUSH1 0xff
0x210 MUL
0x211 NOT
0x212 AND
0x213 SWAP1
0x214 DUP4
0x215 MUL
0x216 OR
0x217 SWAP1
0x218 SSTORE
0x219 POP
0x21a PUSH16 0xffffffffffffffffffffffffffffffff
0x22b CALLVALUE
0x22c GT
0x22d ISZERO
0x22e PUSH2 0x32f
0x231 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V143 = 0x0
0x1ee: V144 = 0x0
0x1f0: V145 = 0x1
0x1f2: V146 = 0x6
0x1f4: V147 = 0x0
0x1f7: V148 = S[0x6]
0x1f9: V149 = 0x100
0x1fc: V150 = EXP 0x100 0x0
0x1fe: V151 = DIV V148 0x1
0x1ff: V152 = 0xff
0x201: V153 = AND 0xff V151
0x202: V154 = ADD V153 0x1
0x203: V155 = 0x6
0x205: V156 = 0x0
0x207: V157 = 0x100
0x20a: V158 = EXP 0x100 0x0
0x20c: V159 = S[0x6]
0x20e: V160 = 0xff
0x210: V161 = MUL 0xff 0x1
0x211: V162 = NOT 0xff
0x212: V163 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V159
0x215: V164 = MUL V154 0x1
0x216: V165 = OR V164 V163
0x218: S[0x6] = V165
0x21a: V166 = 0xffffffffffffffffffffffffffffffff
0x22b: V167 = CALLVALUE
0x22c: V168 = GT V167 0xffffffffffffffffffffffffffffffff
0x22d: V169 = ISZERO V168
0x22e: V170 = 0x32f
0x231: JUMPI 0x32f V169
---
Entry stack: [V8, 0xb8]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x232
[0x232:0x298]
---
Predecessors: [0x1eb]
Successors: [0x299, 0x2bb]
---
0x232 PUSH1 0x40
0x234 PUSH1 0x40
0x236 MLOAD
0x237 SWAP1
0x238 DUP2
0x239 ADD
0x23a PUSH1 0x40
0x23c MSTORE
0x23d DUP1
0x23e PUSH1 0xf
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 PUSH32 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b POP
0x26c PUSH1 0x3
0x26e PUSH1 0x0
0x270 POP
0x271 SWAP1
0x272 DUP1
0x273 MLOAD
0x274 SWAP1
0x275 PUSH1 0x20
0x277 ADD
0x278 SWAP1
0x279 DUP3
0x27a DUP1
0x27b SLOAD
0x27c DUP3
0x27d DUP3
0x27e SSTORE
0x27f SWAP1
0x280 PUSH1 0x0
0x282 MSTORE
0x283 PUSH1 0x20
0x285 PUSH1 0x0
0x287 SHA3
0x288 SWAP1
0x289 PUSH1 0x1f
0x28b ADD
0x28c PUSH1 0x20
0x28e SWAP1
0x28f DIV
0x290 DUP2
0x291 ADD
0x292 SWAP3
0x293 DUP3
0x294 ISZERO
0x295 PUSH2 0x2bb
0x298 JUMPI
---
0x232: V171 = 0x40
0x234: V172 = 0x40
0x236: V173 = M[0x40]
0x239: V174 = ADD V173 0x40
0x23a: V175 = 0x40
0x23c: M[0x40] = V174
0x23e: V176 = 0xf
0x241: M[V173] = 0xf
0x242: V177 = 0x20
0x244: V178 = ADD 0x20 V173
0x245: V179 = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x267: M[V178] = 0x776167657220746f6f206c617267650000000000000000000000000000000000
0x268: V180 = 0x20
0x26a: V181 = ADD 0x20 V178
0x26c: V182 = 0x3
0x26e: V183 = 0x0
0x273: V184 = M[V173]
0x275: V185 = 0x20
0x277: V186 = ADD 0x20 V173
0x27b: V187 = S[0x3]
0x27e: S[0x3] = V184
0x280: V188 = 0x0
0x282: M[0x0] = 0x3
0x283: V189 = 0x20
0x285: V190 = 0x0
0x287: V191 = SHA3 0x0 0x20
0x289: V192 = 0x1f
0x28b: V193 = ADD 0x1f V187
0x28c: V194 = 0x20
0x28f: V195 = DIV V193 0x20
0x291: V196 = ADD V191 V195
0x294: V197 = ISZERO V184
0x295: V198 = 0x2bb
0x298: JUMPI 0x2bb V197
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V196, V184, V191, V186]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, V184, V191, V186]

================================

Block 0x299
[0x299:0x29b]
---
Predecessors: [0x232]
Successors: [0x29c]
---
0x299 SWAP2
0x29a DUP3
0x29b ADD
---
0x29b: V199 = ADD V186 V184
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, V184, V191, V186]
Stack pops: 3
Stack additions: [S0, S1, V199]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, V186, V191, V199]

================================

Block 0x29c
[0x29c:0x2a4]
---
Predecessors: [0x299, 0x2a5]
Successors: [0x2a5, 0x2ba]
---
0x29c JUMPDEST
0x29d DUP3
0x29e DUP2
0x29f GT
0x2a0 ISZERO
0x2a1 PUSH2 0x2ba
0x2a4 JUMPI
---
0x29c: JUMPDEST 
0x29f: V200 = GT V199 S2
0x2a0: V201 = ISZERO V200
0x2a1: V202 = 0x2ba
0x2a4: JUMPI 0x2ba V201
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, S2, S1, V199]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, S2, S1, V199]

================================

Block 0x2a5
[0x2a5:0x2b9]
---
Predecessors: [0x29c]
Successors: [0x29c]
---
0x2a5 DUP3
0x2a6 MLOAD
0x2a7 DUP3
0x2a8 PUSH1 0x0
0x2aa POP
0x2ab SSTORE
0x2ac SWAP2
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP2
0x2b1 SWAP1
0x2b2 PUSH1 0x1
0x2b4 ADD
0x2b5 SWAP1
0x2b6 PUSH2 0x29c
0x2b9 JUMP
---
0x2a6: V203 = M[S2]
0x2a8: V204 = 0x0
0x2ab: S[S1] = V203
0x2ad: V205 = 0x20
0x2af: V206 = ADD 0x20 S2
0x2b2: V207 = 0x1
0x2b4: V208 = ADD 0x1 S1
0x2b6: V209 = 0x29c
0x2b9: JUMP 0x29c
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, S2, S1, V199]
Stack pops: 3
Stack additions: [V206, V208, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, V206, V208, V199]

================================

Block 0x2ba
[0x2ba:0x2ba]
---
Predecessors: [0x29c]
Successors: [0x2bb]
---
0x2ba JUMPDEST
---
0x2ba: JUMPDEST 
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, S2, S1, V199]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, S2, S1, V199]

================================

Block 0x2bb
[0x2bb:0x2c7]
---
Predecessors: [0x232, 0x2ba]
Successors: [0x2c8]
---
0x2bb JUMPDEST
0x2bc POP
0x2bd SWAP1
0x2be POP
0x2bf PUSH2 0x2e6
0x2c2 SWAP2
0x2c3 SWAP1
0x2c4 PUSH2 0x2c8
0x2c7 JUMP
---
0x2bb: JUMPDEST 
0x2bf: V210 = 0x2e6
0x2c4: V211 = 0x2c8
0x2c7: JUMP 0x2c8
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196, S2, S1, S0]
Stack pops: 4
Stack additions: [0x2e6, S3, S1]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x2e6, V196, S1]

================================

Block 0x2c8
[0x2c8:0x2d0]
---
Predecessors: [0x2bb, 0x2d1]
Successors: [0x2d1, 0x2e2]
---
0x2c8 JUMPDEST
0x2c9 DUP1
0x2ca DUP3
0x2cb GT
0x2cc ISZERO
0x2cd PUSH2 0x2e2
0x2d0 JUMPI
---
0x2c8: JUMPDEST 
0x2cb: V212 = GT V196 S0
0x2cc: V213 = ISZERO V212
0x2cd: V214 = 0x2e2
0x2d0: JUMPI 0x2e2 V213
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x2e6, V196, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x2e6, V196, S0]

================================

Block 0x2d1
[0x2d1:0x2e1]
---
Predecessors: [0x2c8]
Successors: [0x2c8]
---
0x2d1 PUSH1 0x0
0x2d3 DUP2
0x2d4 DUP2
0x2d5 POP
0x2d6 PUSH1 0x0
0x2d8 SWAP1
0x2d9 SSTORE
0x2da POP
0x2db PUSH1 0x1
0x2dd ADD
0x2de PUSH2 0x2c8
0x2e1 JUMP
---
0x2d1: V215 = 0x0
0x2d6: V216 = 0x0
0x2d9: S[S0] = 0x0
0x2db: V217 = 0x1
0x2dd: V218 = ADD 0x1 S0
0x2de: V219 = 0x2c8
0x2e1: JUMP 0x2c8
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x2e6, V196, S0]
Stack pops: 1
Stack additions: [V218]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x2e6, V196, V218]

================================

Block 0x2e2
[0x2e2:0x2e5]
---
Predecessors: [0x2c8]
Successors: [0x2e6]
---
0x2e2 JUMPDEST
0x2e3 POP
0x2e4 SWAP1
0x2e5 JUMP
---
0x2e2: JUMPDEST 
0x2e5: JUMP 0x2e6
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x2e6, V196, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196]

================================

Block 0x2e6
[0x2e6:0x32a]
---
Predecessors: [0x2e2]
Successors: [0x791]
---
0x2e6 JUMPDEST
0x2e7 POP
0x2e8 POP
0x2e9 PUSH1 0x0
0x2eb PUSH1 0x2
0x2ed PUSH1 0x0
0x2ef POP
0x2f0 DUP2
0x2f1 SWAP1
0x2f2 SSTORE
0x2f3 POP
0x2f4 CALLER
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b PUSH1 0x0
0x30d CALLVALUE
0x30e PUSH1 0x40
0x310 MLOAD
0x311 DUP1
0x312 SWAP1
0x313 POP
0x314 PUSH1 0x0
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a DUP4
0x31b SUB
0x31c DUP2
0x31d DUP6
0x31e DUP9
0x31f DUP9
0x320 CALL
0x321 SWAP4
0x322 POP
0x323 POP
0x324 POP
0x325 POP
0x326 POP
0x327 PUSH2 0x791
0x32a JUMP
---
0x2e6: JUMPDEST 
0x2e9: V220 = 0x0
0x2eb: V221 = 0x2
0x2ed: V222 = 0x0
0x2f2: S[0x2] = 0x0
0x2f4: V223 = CALLER
0x2f5: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x30b: V226 = 0x0
0x30d: V227 = CALLVALUE
0x30e: V228 = 0x40
0x310: V229 = M[0x40]
0x314: V230 = 0x0
0x316: V231 = 0x40
0x318: V232 = M[0x40]
0x31b: V233 = SUB V229 V232
0x320: V234 = CALL 0x0 V225 V227 V232 V233 V232 0x0
0x327: V235 = 0x791
0x32a: JUMP 0x791
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V196]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: []
Successors: [0x547]
---
0x32b PUSH2 0x547
0x32e JUMP
---
0x32b: V236 = 0x547
0x32e: JUMP 0x547
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32f
[0x32f:0x351]
---
Predecessors: [0x1eb]
Successors: [0x352, 0x475]
---
0x32f JUMPDEST
0x330 ADDRESS
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 BALANCE
0x348 PUSH1 0x2
0x34a CALLVALUE
0x34b MUL
0x34c GT
0x34d ISZERO
0x34e PUSH2 0x475
0x351 JUMPI
---
0x32f: JUMPDEST 
0x330: V237 = ADDRESS
0x331: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x347: V240 = BALANCE V239
0x348: V241 = 0x2
0x34a: V242 = CALLVALUE
0x34b: V243 = MUL V242 0x2
0x34c: V244 = GT V243 V240
0x34d: V245 = ISZERO V244
0x34e: V246 = 0x475
0x351: JUMPI 0x475 V245
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x352
[0x352:0x3de]
---
Predecessors: [0x32f]
Successors: [0x3df, 0x401]
---
0x352 PUSH1 0x60
0x354 PUSH1 0x40
0x356 MLOAD
0x357 SWAP1
0x358 DUP2
0x359 ADD
0x35a PUSH1 0x40
0x35c MSTORE
0x35d DUP1
0x35e PUSH1 0x2b
0x360 DUP2
0x361 MSTORE
0x362 PUSH1 0x20
0x364 ADD
0x365 PUSH32 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x386 DUP2
0x387 MSTORE
0x388 PUSH1 0x20
0x38a ADD
0x38b PUSH32 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x3ac DUP2
0x3ad MSTORE
0x3ae PUSH1 0x20
0x3b0 ADD
0x3b1 POP
0x3b2 PUSH1 0x3
0x3b4 PUSH1 0x0
0x3b6 POP
0x3b7 SWAP1
0x3b8 DUP1
0x3b9 MLOAD
0x3ba SWAP1
0x3bb PUSH1 0x20
0x3bd ADD
0x3be SWAP1
0x3bf DUP3
0x3c0 DUP1
0x3c1 SLOAD
0x3c2 DUP3
0x3c3 DUP3
0x3c4 SSTORE
0x3c5 SWAP1
0x3c6 PUSH1 0x0
0x3c8 MSTORE
0x3c9 PUSH1 0x20
0x3cb PUSH1 0x0
0x3cd SHA3
0x3ce SWAP1
0x3cf PUSH1 0x1f
0x3d1 ADD
0x3d2 PUSH1 0x20
0x3d4 SWAP1
0x3d5 DIV
0x3d6 DUP2
0x3d7 ADD
0x3d8 SWAP3
0x3d9 DUP3
0x3da ISZERO
0x3db PUSH2 0x401
0x3de JUMPI
---
0x352: V247 = 0x60
0x354: V248 = 0x40
0x356: V249 = M[0x40]
0x359: V250 = ADD V249 0x60
0x35a: V251 = 0x40
0x35c: M[0x40] = V250
0x35e: V252 = 0x2b
0x361: M[V249] = 0x2b
0x362: V253 = 0x20
0x364: V254 = ADD 0x20 V249
0x365: V255 = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x387: M[V254] = 0x7761676572206c6172676572207468616e20636f6e7472616374277320616269
0x388: V256 = 0x20
0x38a: V257 = ADD 0x20 V254
0x38b: V258 = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x3ad: M[V257] = 0x6c69747920746f20706179000000000000000000000000000000000000000000
0x3ae: V259 = 0x20
0x3b0: V260 = ADD 0x20 V257
0x3b2: V261 = 0x3
0x3b4: V262 = 0x0
0x3b9: V263 = M[V249]
0x3bb: V264 = 0x20
0x3bd: V265 = ADD 0x20 V249
0x3c1: V266 = S[0x3]
0x3c4: S[0x3] = V263
0x3c6: V267 = 0x0
0x3c8: M[0x0] = 0x3
0x3c9: V268 = 0x20
0x3cb: V269 = 0x0
0x3cd: V270 = SHA3 0x0 0x20
0x3cf: V271 = 0x1f
0x3d1: V272 = ADD 0x1f V266
0x3d2: V273 = 0x20
0x3d5: V274 = DIV V272 0x20
0x3d7: V275 = ADD V270 V274
0x3da: V276 = ISZERO V263
0x3db: V277 = 0x401
0x3de: JUMPI 0x401 V276
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V275, V263, V270, V265]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, V263, V270, V265]

================================

Block 0x3df
[0x3df:0x3e1]
---
Predecessors: [0x352]
Successors: [0x3e2]
---
0x3df SWAP2
0x3e0 DUP3
0x3e1 ADD
---
0x3e1: V278 = ADD V265 V263
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, V263, V270, V265]
Stack pops: 3
Stack additions: [S0, S1, V278]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, V265, V270, V278]

================================

Block 0x3e2
[0x3e2:0x3ea]
---
Predecessors: [0x3df, 0x3eb]
Successors: [0x3eb, 0x400]
---
0x3e2 JUMPDEST
0x3e3 DUP3
0x3e4 DUP2
0x3e5 GT
0x3e6 ISZERO
0x3e7 PUSH2 0x400
0x3ea JUMPI
---
0x3e2: JUMPDEST 
0x3e5: V279 = GT V278 S2
0x3e6: V280 = ISZERO V279
0x3e7: V281 = 0x400
0x3ea: JUMPI 0x400 V280
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, S2, S1, V278]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, S2, S1, V278]

================================

Block 0x3eb
[0x3eb:0x3ff]
---
Predecessors: [0x3e2]
Successors: [0x3e2]
---
0x3eb DUP3
0x3ec MLOAD
0x3ed DUP3
0x3ee PUSH1 0x0
0x3f0 POP
0x3f1 SSTORE
0x3f2 SWAP2
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 SWAP2
0x3f7 SWAP1
0x3f8 PUSH1 0x1
0x3fa ADD
0x3fb SWAP1
0x3fc PUSH2 0x3e2
0x3ff JUMP
---
0x3ec: V282 = M[S2]
0x3ee: V283 = 0x0
0x3f1: S[S1] = V282
0x3f3: V284 = 0x20
0x3f5: V285 = ADD 0x20 S2
0x3f8: V286 = 0x1
0x3fa: V287 = ADD 0x1 S1
0x3fc: V288 = 0x3e2
0x3ff: JUMP 0x3e2
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, S2, S1, V278]
Stack pops: 3
Stack additions: [V285, V287, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, V285, V287, V278]

================================

Block 0x400
[0x400:0x400]
---
Predecessors: [0x3e2]
Successors: [0x401]
---
0x400 JUMPDEST
---
0x400: JUMPDEST 
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, S2, S1, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, S2, S1, V278]

================================

Block 0x401
[0x401:0x40d]
---
Predecessors: [0x352, 0x400]
Successors: [0x40e]
---
0x401 JUMPDEST
0x402 POP
0x403 SWAP1
0x404 POP
0x405 PUSH2 0x42c
0x408 SWAP2
0x409 SWAP1
0x40a PUSH2 0x40e
0x40d JUMP
---
0x401: JUMPDEST 
0x405: V289 = 0x42c
0x40a: V290 = 0x40e
0x40d: JUMP 0x40e
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275, S2, S1, S0]
Stack pops: 4
Stack additions: [0x42c, S3, S1]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x42c, V275, S1]

================================

Block 0x40e
[0x40e:0x416]
---
Predecessors: [0x401, 0x417]
Successors: [0x417, 0x428]
---
0x40e JUMPDEST
0x40f DUP1
0x410 DUP3
0x411 GT
0x412 ISZERO
0x413 PUSH2 0x428
0x416 JUMPI
---
0x40e: JUMPDEST 
0x411: V291 = GT V275 S0
0x412: V292 = ISZERO V291
0x413: V293 = 0x428
0x416: JUMPI 0x428 V292
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x42c, V275, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x42c, V275, S0]

================================

Block 0x417
[0x417:0x427]
---
Predecessors: [0x40e]
Successors: [0x40e]
---
0x417 PUSH1 0x0
0x419 DUP2
0x41a DUP2
0x41b POP
0x41c PUSH1 0x0
0x41e SWAP1
0x41f SSTORE
0x420 POP
0x421 PUSH1 0x1
0x423 ADD
0x424 PUSH2 0x40e
0x427 JUMP
---
0x417: V294 = 0x0
0x41c: V295 = 0x0
0x41f: S[S0] = 0x0
0x421: V296 = 0x1
0x423: V297 = ADD 0x1 S0
0x424: V298 = 0x40e
0x427: JUMP 0x40e
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x42c, V275, S0]
Stack pops: 1
Stack additions: [V297]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x42c, V275, V297]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x40e]
Successors: [0x42c]
---
0x428 JUMPDEST
0x429 POP
0x42a SWAP1
0x42b JUMP
---
0x428: JUMPDEST 
0x42b: JUMP 0x42c
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x42c, V275, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275]

================================

Block 0x42c
[0x42c:0x470]
---
Predecessors: [0x428]
Successors: [0x791]
---
0x42c JUMPDEST
0x42d POP
0x42e POP
0x42f PUSH1 0x0
0x431 PUSH1 0x2
0x433 PUSH1 0x0
0x435 POP
0x436 DUP2
0x437 SWAP1
0x438 SSTORE
0x439 POP
0x43a CALLER
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 PUSH1 0x0
0x453 CALLVALUE
0x454 PUSH1 0x40
0x456 MLOAD
0x457 DUP1
0x458 SWAP1
0x459 POP
0x45a PUSH1 0x0
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP1
0x460 DUP4
0x461 SUB
0x462 DUP2
0x463 DUP6
0x464 DUP9
0x465 DUP9
0x466 CALL
0x467 SWAP4
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c POP
0x46d PUSH2 0x791
0x470 JUMP
---
0x42c: JUMPDEST 
0x42f: V299 = 0x0
0x431: V300 = 0x2
0x433: V301 = 0x0
0x438: S[0x2] = 0x0
0x43a: V302 = CALLER
0x43b: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x451: V305 = 0x0
0x453: V306 = CALLVALUE
0x454: V307 = 0x40
0x456: V308 = M[0x40]
0x45a: V309 = 0x0
0x45c: V310 = 0x40
0x45e: V311 = M[0x40]
0x461: V312 = SUB V308 V311
0x466: V313 = CALL 0x0 V304 V306 V311 V312 V311 0x0
0x46d: V314 = 0x791
0x470: JUMP 0x791
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V275]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x471
[0x471:0x474]
---
Predecessors: []
Successors: [0x546]
---
0x471 PUSH2 0x546
0x474 JUMP
---
0x471: V315 = 0x546
0x474: JUMP 0x546
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x475
[0x475:0x47e]
---
Predecessors: [0x32f]
Successors: [0x47f, 0x545]
---
0x475 JUMPDEST
0x476 PUSH1 0x0
0x478 CALLVALUE
0x479 EQ
0x47a ISZERO
0x47b PUSH2 0x545
0x47e JUMPI
---
0x475: JUMPDEST 
0x476: V316 = 0x0
0x478: V317 = CALLVALUE
0x479: V318 = EQ V317 0x0
0x47a: V319 = ISZERO V318
0x47b: V320 = 0x545
0x47e: JUMPI 0x545 V319
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x47f
[0x47f:0x4e5]
---
Predecessors: [0x475]
Successors: [0x4e6, 0x508]
---
0x47f PUSH1 0x40
0x481 PUSH1 0x40
0x483 MLOAD
0x484 SWAP1
0x485 DUP2
0x486 ADD
0x487 PUSH1 0x40
0x489 MSTORE
0x48a DUP1
0x48b PUSH1 0xe
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x20
0x491 ADD
0x492 PUSH32 0x776167657220776173207a65726f000000000000000000000000000000000000
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 PUSH1 0x20
0x4b7 ADD
0x4b8 POP
0x4b9 PUSH1 0x3
0x4bb PUSH1 0x0
0x4bd POP
0x4be SWAP1
0x4bf DUP1
0x4c0 MLOAD
0x4c1 SWAP1
0x4c2 PUSH1 0x20
0x4c4 ADD
0x4c5 SWAP1
0x4c6 DUP3
0x4c7 DUP1
0x4c8 SLOAD
0x4c9 DUP3
0x4ca DUP3
0x4cb SSTORE
0x4cc SWAP1
0x4cd PUSH1 0x0
0x4cf MSTORE
0x4d0 PUSH1 0x20
0x4d2 PUSH1 0x0
0x4d4 SHA3
0x4d5 SWAP1
0x4d6 PUSH1 0x1f
0x4d8 ADD
0x4d9 PUSH1 0x20
0x4db SWAP1
0x4dc DIV
0x4dd DUP2
0x4de ADD
0x4df SWAP3
0x4e0 DUP3
0x4e1 ISZERO
0x4e2 PUSH2 0x508
0x4e5 JUMPI
---
0x47f: V321 = 0x40
0x481: V322 = 0x40
0x483: V323 = M[0x40]
0x486: V324 = ADD V323 0x40
0x487: V325 = 0x40
0x489: M[0x40] = V324
0x48b: V326 = 0xe
0x48e: M[V323] = 0xe
0x48f: V327 = 0x20
0x491: V328 = ADD 0x20 V323
0x492: V329 = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x4b4: M[V328] = 0x776167657220776173207a65726f000000000000000000000000000000000000
0x4b5: V330 = 0x20
0x4b7: V331 = ADD 0x20 V328
0x4b9: V332 = 0x3
0x4bb: V333 = 0x0
0x4c0: V334 = M[V323]
0x4c2: V335 = 0x20
0x4c4: V336 = ADD 0x20 V323
0x4c8: V337 = S[0x3]
0x4cb: S[0x3] = V334
0x4cd: V338 = 0x0
0x4cf: M[0x0] = 0x3
0x4d0: V339 = 0x20
0x4d2: V340 = 0x0
0x4d4: V341 = SHA3 0x0 0x20
0x4d6: V342 = 0x1f
0x4d8: V343 = ADD 0x1f V337
0x4d9: V344 = 0x20
0x4dc: V345 = DIV V343 0x20
0x4de: V346 = ADD V341 V345
0x4e1: V347 = ISZERO V334
0x4e2: V348 = 0x508
0x4e5: JUMPI 0x508 V347
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3, V346, V334, V341, V336]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, V334, V341, V336]

================================

Block 0x4e6
[0x4e6:0x4e8]
---
Predecessors: [0x47f]
Successors: [0x4e9]
---
0x4e6 SWAP2
0x4e7 DUP3
0x4e8 ADD
---
0x4e8: V349 = ADD V336 V334
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, V334, V341, V336]
Stack pops: 3
Stack additions: [S0, S1, V349]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, V336, V341, V349]

================================

Block 0x4e9
[0x4e9:0x4f1]
---
Predecessors: [0x4e6, 0x4f2]
Successors: [0x4f2, 0x507]
---
0x4e9 JUMPDEST
0x4ea DUP3
0x4eb DUP2
0x4ec GT
0x4ed ISZERO
0x4ee PUSH2 0x507
0x4f1 JUMPI
---
0x4e9: JUMPDEST 
0x4ec: V350 = GT V349 S2
0x4ed: V351 = ISZERO V350
0x4ee: V352 = 0x507
0x4f1: JUMPI 0x507 V351
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, S2, S1, V349]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, S2, S1, V349]

================================

Block 0x4f2
[0x4f2:0x506]
---
Predecessors: [0x4e9]
Successors: [0x4e9]
---
0x4f2 DUP3
0x4f3 MLOAD
0x4f4 DUP3
0x4f5 PUSH1 0x0
0x4f7 POP
0x4f8 SSTORE
0x4f9 SWAP2
0x4fa PUSH1 0x20
0x4fc ADD
0x4fd SWAP2
0x4fe SWAP1
0x4ff PUSH1 0x1
0x501 ADD
0x502 SWAP1
0x503 PUSH2 0x4e9
0x506 JUMP
---
0x4f3: V353 = M[S2]
0x4f5: V354 = 0x0
0x4f8: S[S1] = V353
0x4fa: V355 = 0x20
0x4fc: V356 = ADD 0x20 S2
0x4ff: V357 = 0x1
0x501: V358 = ADD 0x1 S1
0x503: V359 = 0x4e9
0x506: JUMP 0x4e9
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, S2, S1, V349]
Stack pops: 3
Stack additions: [V356, V358, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, V356, V358, V349]

================================

Block 0x507
[0x507:0x507]
---
Predecessors: [0x4e9]
Successors: [0x508]
---
0x507 JUMPDEST
---
0x507: JUMPDEST 
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, S2, S1, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, S2, S1, V349]

================================

Block 0x508
[0x508:0x514]
---
Predecessors: [0x47f, 0x507]
Successors: [0x515]
---
0x508 JUMPDEST
0x509 POP
0x50a SWAP1
0x50b POP
0x50c PUSH2 0x533
0x50f SWAP2
0x510 SWAP1
0x511 PUSH2 0x515
0x514 JUMP
---
0x508: JUMPDEST 
0x50c: V360 = 0x533
0x511: V361 = 0x515
0x514: JUMP 0x515
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346, S2, S1, S0]
Stack pops: 4
Stack additions: [0x533, S3, S1]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x533, V346, S1]

================================

Block 0x515
[0x515:0x51d]
---
Predecessors: [0x508, 0x51e]
Successors: [0x51e, 0x52f]
---
0x515 JUMPDEST
0x516 DUP1
0x517 DUP3
0x518 GT
0x519 ISZERO
0x51a PUSH2 0x52f
0x51d JUMPI
---
0x515: JUMPDEST 
0x518: V362 = GT V346 S0
0x519: V363 = ISZERO V362
0x51a: V364 = 0x52f
0x51d: JUMPI 0x52f V363
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x533, V346, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x533, V346, S0]

================================

Block 0x51e
[0x51e:0x52e]
---
Predecessors: [0x515]
Successors: [0x515]
---
0x51e PUSH1 0x0
0x520 DUP2
0x521 DUP2
0x522 POP
0x523 PUSH1 0x0
0x525 SWAP1
0x526 SSTORE
0x527 POP
0x528 PUSH1 0x1
0x52a ADD
0x52b PUSH2 0x515
0x52e JUMP
---
0x51e: V365 = 0x0
0x523: V366 = 0x0
0x526: S[S0] = 0x0
0x528: V367 = 0x1
0x52a: V368 = ADD 0x1 S0
0x52b: V369 = 0x515
0x52e: JUMP 0x515
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x533, V346, S0]
Stack pops: 1
Stack additions: [V368]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x533, V346, V368]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x515]
Successors: [0x533]
---
0x52f JUMPDEST
0x530 POP
0x531 SWAP1
0x532 JUMP
---
0x52f: JUMPDEST 
0x532: JUMP 0x533
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, 0x533, V346, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346]

================================

Block 0x533
[0x533:0x544]
---
Predecessors: [0x52f]
Successors: [0x791]
---
0x533 JUMPDEST
0x534 POP
0x535 POP
0x536 PUSH1 0x0
0x538 PUSH1 0x2
0x53a PUSH1 0x0
0x53c POP
0x53d DUP2
0x53e SWAP1
0x53f SSTORE
0x540 POP
0x541 PUSH2 0x791
0x544 JUMP
---
0x533: JUMPDEST 
0x536: V370 = 0x0
0x538: V371 = 0x2
0x53a: V372 = 0x0
0x53f: S[0x2] = 0x0
0x541: V373 = 0x791
0x544: JUMP 0x791
---
Entry stack: [V8, 0xb8, 0x0, 0x0, 0x3, V346]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x545
[0x545:0x545]
---
Predecessors: [0x475]
Successors: [0x546]
---
0x545 JUMPDEST
---
0x545: JUMPDEST 
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x546
[0x546:0x546]
---
Predecessors: [0x471, 0x545]
Successors: [0x547]
---
0x546 JUMPDEST
---
0x546: JUMPDEST 
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, 0x0, 0x0]

================================

Block 0x547
[0x547:0x567]
---
Predecessors: [0x32b, 0x546]
Successors: [0x8f9]
---
0x547 JUMPDEST
0x548 CALLVALUE
0x549 SWAP2
0x54a POP
0x54b NUMBER
0x54c PUSH1 0x5
0x54e PUSH1 0x0
0x550 POP
0x551 DUP2
0x552 SWAP1
0x553 SSTORE
0x554 POP
0x555 NUMBER
0x556 BLOCKHASH
0x557 PUSH1 0x4
0x559 PUSH1 0x0
0x55b POP
0x55c DUP2
0x55d SWAP1
0x55e SSTORE
0x55f POP
0x560 PUSH2 0x568
0x563 DUP3
0x564 PUSH2 0x8f9
0x567 JUMP
---
0x547: JUMPDEST 
0x548: V374 = CALLVALUE
0x54b: V375 = NUMBER
0x54c: V376 = 0x5
0x54e: V377 = 0x0
0x553: S[0x5] = V375
0x555: V378 = NUMBER
0x556: V379 = BLOCKHASH V378
0x557: V380 = 0x4
0x559: V381 = 0x0
0x55e: S[0x4] = V379
0x560: V382 = 0x568
0x564: V383 = 0x8f9
0x567: JUMP 0x8f9
---
Entry stack: [V8, 0xb8, 0x0, 0x0]
Stack pops: 2
Stack additions: [V374, S0, 0x568, V374]
Exit stack: [V8, 0xb8, V374, 0x0, 0x568, V374]

================================

Block 0x568
[0x568:0x576]
---
Predecessors: [0x941]
Successors: [0x577, 0x674]
---
0x568 JUMPDEST
0x569 SWAP1
0x56a POP
0x56b PUSH1 0x0
0x56d PUSH1 0x2
0x56f DUP3
0x570 MOD
0x571 EQ
0x572 ISZERO
0x573 PUSH2 0x674
0x576 JUMPI
---
0x568: JUMPDEST 
0x56b: V384 = 0x0
0x56d: V385 = 0x2
0x570: V386 = MOD V624 0x2
0x571: V387 = EQ V386 0x0
0x572: V388 = ISZERO V387
0x573: V389 = 0x674
0x576: JUMPI 0x674 V388
---
Entry stack: [V8, 0xb8, V374, 0x0, V624]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, 0xb8, V374, V624]

================================

Block 0x577
[0x577:0x61b]
---
Predecessors: [0x568]
Successors: [0x61c, 0x63e]
---
0x577 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x598 DUP3
0x599 PUSH16 0xffffffffffffffffffffffffffffffff
0x5aa AND
0x5ab MUL
0x5ac PUSH1 0x2
0x5ae PUSH1 0x0
0x5b0 POP
0x5b1 DUP2
0x5b2 SWAP1
0x5b3 SSTORE
0x5b4 POP
0x5b5 PUSH1 0x40
0x5b7 PUSH1 0x40
0x5b9 MLOAD
0x5ba SWAP1
0x5bb DUP2
0x5bc ADD
0x5bd PUSH1 0x40
0x5bf MSTORE
0x5c0 DUP1
0x5c1 PUSH1 0x4
0x5c3 DUP2
0x5c4 MSTORE
0x5c5 PUSH1 0x20
0x5c7 ADD
0x5c8 PUSH32 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x5e9 DUP2
0x5ea MSTORE
0x5eb PUSH1 0x20
0x5ed ADD
0x5ee POP
0x5ef PUSH1 0x3
0x5f1 PUSH1 0x0
0x5f3 POP
0x5f4 SWAP1
0x5f5 DUP1
0x5f6 MLOAD
0x5f7 SWAP1
0x5f8 PUSH1 0x20
0x5fa ADD
0x5fb SWAP1
0x5fc DUP3
0x5fd DUP1
0x5fe SLOAD
0x5ff DUP3
0x600 DUP3
0x601 SSTORE
0x602 SWAP1
0x603 PUSH1 0x0
0x605 MSTORE
0x606 PUSH1 0x20
0x608 PUSH1 0x0
0x60a SHA3
0x60b SWAP1
0x60c PUSH1 0x1f
0x60e ADD
0x60f PUSH1 0x20
0x611 SWAP1
0x612 DIV
0x613 DUP2
0x614 ADD
0x615 SWAP3
0x616 DUP3
0x617 ISZERO
0x618 PUSH2 0x63e
0x61b JUMPI
---
0x577: V390 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x599: V391 = 0xffffffffffffffffffffffffffffffff
0x5aa: V392 = AND 0xffffffffffffffffffffffffffffffff V374
0x5ab: V393 = MUL V392 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5ac: V394 = 0x2
0x5ae: V395 = 0x0
0x5b3: S[0x2] = V393
0x5b5: V396 = 0x40
0x5b7: V397 = 0x40
0x5b9: V398 = M[0x40]
0x5bc: V399 = ADD V398 0x40
0x5bd: V400 = 0x40
0x5bf: M[0x40] = V399
0x5c1: V401 = 0x4
0x5c4: M[V398] = 0x4
0x5c5: V402 = 0x20
0x5c7: V403 = ADD 0x20 V398
0x5c8: V404 = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x5ea: M[V403] = 0x6c6f737300000000000000000000000000000000000000000000000000000000
0x5eb: V405 = 0x20
0x5ed: V406 = ADD 0x20 V403
0x5ef: V407 = 0x3
0x5f1: V408 = 0x0
0x5f6: V409 = M[V398]
0x5f8: V410 = 0x20
0x5fa: V411 = ADD 0x20 V398
0x5fe: V412 = S[0x3]
0x601: S[0x3] = V409
0x603: V413 = 0x0
0x605: M[0x0] = 0x3
0x606: V414 = 0x20
0x608: V415 = 0x0
0x60a: V416 = SHA3 0x0 0x20
0x60c: V417 = 0x1f
0x60e: V418 = ADD 0x1f V412
0x60f: V419 = 0x20
0x612: V420 = DIV V418 0x20
0x614: V421 = ADD V416 V420
0x617: V422 = ISZERO V409
0x618: V423 = 0x63e
0x61b: JUMPI 0x63e V422
---
Entry stack: [V8, 0xb8, V374, V624]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V421, V409, V416, V411]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V421, V409, V416, V411]

================================

Block 0x61c
[0x61c:0x61e]
---
Predecessors: [0x577]
Successors: [0x61f]
---
0x61c SWAP2
0x61d DUP3
0x61e ADD
---
0x61e: V424 = ADD V411 V409
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V421, V409, V416, V411]
Stack pops: 3
Stack additions: [S0, S1, V424]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V421, V411, V416, V424]

================================

Block 0x61f
[0x61f:0x627]
---
Predecessors: [0x61c, 0x628]
Successors: [0x628, 0x63d]
---
0x61f JUMPDEST
0x620 DUP3
0x621 DUP2
0x622 GT
0x623 ISZERO
0x624 PUSH2 0x63d
0x627 JUMPI
---
0x61f: JUMPDEST 
0x622: V425 = GT V424 S2
0x623: V426 = ISZERO V425
0x624: V427 = 0x63d
0x627: JUMPI 0x63d V426
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V421, S2, S1, V424]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V421, S2, S1, V424]

================================

Block 0x628
[0x628:0x63c]
---
Predecessors: [0x61f]
Successors: [0x61f]
---
0x628 DUP3
0x629 MLOAD
0x62a DUP3
0x62b PUSH1 0x0
0x62d POP
0x62e SSTORE
0x62f SWAP2
0x630 PUSH1 0x20
0x632 ADD
0x633 SWAP2
0x634 SWAP1
0x635 PUSH1 0x1
0x637 ADD
0x638 SWAP1
0x639 PUSH2 0x61f
0x63c JUMP
---
0x629: V428 = M[S2]
0x62b: V429 = 0x0
0x62e: S[S1] = V428
0x630: V430 = 0x20
0x632: V431 = ADD 0x20 S2
0x635: V432 = 0x1
0x637: V433 = ADD 0x1 S1
0x639: V434 = 0x61f
0x63c: JUMP 0x61f
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V421, S2, S1, V424]
Stack pops: 3
Stack additions: [V431, V433, S0]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V421, V431, V433, V424]

================================

Block 0x63d
[0x63d:0x63d]
---
Predecessors: [0x61f]
Successors: [0x63e]
---
0x63d JUMPDEST
---
0x63d: JUMPDEST 
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V421, S2, S1, V424]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, V374, V624, 0x3, V421, S2, S1, V424]

================================

Block 0x63e
[0x63e:0x64a]
---
Predecessors: [0x577, 0x63d]
Successors: [0x64b]
---
0x63e JUMPDEST
0x63f POP
0x640 SWAP1
0x641 POP
0x642 PUSH2 0x669
0x645 SWAP2
0x646 SWAP1
0x647 PUSH2 0x64b
0x64a JUMP
---
0x63e: JUMPDEST 
0x642: V435 = 0x669
0x647: V436 = 0x64b
0x64a: JUMP 0x64b
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V421, S2, S1, S0]
Stack pops: 4
Stack additions: [0x669, S3, S1]
Exit stack: [V8, 0xb8, V374, V624, 0x3, 0x669, V421, S1]

================================

Block 0x64b
[0x64b:0x653]
---
Predecessors: [0x63e, 0x654]
Successors: [0x654, 0x665]
---
0x64b JUMPDEST
0x64c DUP1
0x64d DUP3
0x64e GT
0x64f ISZERO
0x650 PUSH2 0x665
0x653 JUMPI
---
0x64b: JUMPDEST 
0x64e: V437 = GT V421 S0
0x64f: V438 = ISZERO V437
0x650: V439 = 0x665
0x653: JUMPI 0x665 V438
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, 0x669, V421, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xb8, V374, V624, 0x3, 0x669, V421, S0]

================================

Block 0x654
[0x654:0x664]
---
Predecessors: [0x64b]
Successors: [0x64b]
---
0x654 PUSH1 0x0
0x656 DUP2
0x657 DUP2
0x658 POP
0x659 PUSH1 0x0
0x65b SWAP1
0x65c SSTORE
0x65d POP
0x65e PUSH1 0x1
0x660 ADD
0x661 PUSH2 0x64b
0x664 JUMP
---
0x654: V440 = 0x0
0x659: V441 = 0x0
0x65c: S[S0] = 0x0
0x65e: V442 = 0x1
0x660: V443 = ADD 0x1 S0
0x661: V444 = 0x64b
0x664: JUMP 0x64b
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, 0x669, V421, S0]
Stack pops: 1
Stack additions: [V443]
Exit stack: [V8, 0xb8, V374, V624, 0x3, 0x669, V421, V443]

================================

Block 0x665
[0x665:0x668]
---
Predecessors: [0x64b]
Successors: [0x669]
---
0x665 JUMPDEST
0x666 POP
0x667 SWAP1
0x668 JUMP
---
0x665: JUMPDEST 
0x668: JUMP 0x669
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, 0x669, V421, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V421]

================================

Block 0x669
[0x669:0x66f]
---
Predecessors: [0x665]
Successors: [0x791]
---
0x669 JUMPDEST
0x66a POP
0x66b POP
0x66c PUSH2 0x791
0x66f JUMP
---
0x669: JUMPDEST 
0x66c: V445 = 0x791
0x66f: JUMP 0x791
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V421]
Stack pops: 2
Stack additions: []
Exit stack: [V8, 0xb8, V374, V624]

================================

Block 0x670
[0x670:0x673]
---
Predecessors: []
Successors: [0x790]
---
0x670 PUSH2 0x790
0x673 JUMP
---
0x670: V446 = 0x790
0x673: JUMP 0x790
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x674
[0x674:0x6f7]
---
Predecessors: [0x568]
Successors: [0x6f8, 0x71a]
---
0x674 JUMPDEST
0x675 DUP2
0x676 PUSH16 0xffffffffffffffffffffffffffffffff
0x687 AND
0x688 PUSH1 0x2
0x68a PUSH1 0x0
0x68c POP
0x68d DUP2
0x68e SWAP1
0x68f SSTORE
0x690 POP
0x691 PUSH1 0x40
0x693 PUSH1 0x40
0x695 MLOAD
0x696 SWAP1
0x697 DUP2
0x698 ADD
0x699 PUSH1 0x40
0x69b MSTORE
0x69c DUP1
0x69d PUSH1 0x3
0x69f DUP2
0x6a0 MSTORE
0x6a1 PUSH1 0x20
0x6a3 ADD
0x6a4 PUSH32 0x77696e0000000000000000000000000000000000000000000000000000000000
0x6c5 DUP2
0x6c6 MSTORE
0x6c7 PUSH1 0x20
0x6c9 ADD
0x6ca POP
0x6cb PUSH1 0x3
0x6cd PUSH1 0x0
0x6cf POP
0x6d0 SWAP1
0x6d1 DUP1
0x6d2 MLOAD
0x6d3 SWAP1
0x6d4 PUSH1 0x20
0x6d6 ADD
0x6d7 SWAP1
0x6d8 DUP3
0x6d9 DUP1
0x6da SLOAD
0x6db DUP3
0x6dc DUP3
0x6dd SSTORE
0x6de SWAP1
0x6df PUSH1 0x0
0x6e1 MSTORE
0x6e2 PUSH1 0x20
0x6e4 PUSH1 0x0
0x6e6 SHA3
0x6e7 SWAP1
0x6e8 PUSH1 0x1f
0x6ea ADD
0x6eb PUSH1 0x20
0x6ed SWAP1
0x6ee DIV
0x6ef DUP2
0x6f0 ADD
0x6f1 SWAP3
0x6f2 DUP3
0x6f3 ISZERO
0x6f4 PUSH2 0x71a
0x6f7 JUMPI
---
0x674: JUMPDEST 
0x676: V447 = 0xffffffffffffffffffffffffffffffff
0x687: V448 = AND 0xffffffffffffffffffffffffffffffff V374
0x688: V449 = 0x2
0x68a: V450 = 0x0
0x68f: S[0x2] = V448
0x691: V451 = 0x40
0x693: V452 = 0x40
0x695: V453 = M[0x40]
0x698: V454 = ADD V453 0x40
0x699: V455 = 0x40
0x69b: M[0x40] = V454
0x69d: V456 = 0x3
0x6a0: M[V453] = 0x3
0x6a1: V457 = 0x20
0x6a3: V458 = ADD 0x20 V453
0x6a4: V459 = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x6c6: M[V458] = 0x77696e0000000000000000000000000000000000000000000000000000000000
0x6c7: V460 = 0x20
0x6c9: V461 = ADD 0x20 V458
0x6cb: V462 = 0x3
0x6cd: V463 = 0x0
0x6d2: V464 = M[V453]
0x6d4: V465 = 0x20
0x6d6: V466 = ADD 0x20 V453
0x6da: V467 = S[0x3]
0x6dd: S[0x3] = V464
0x6df: V468 = 0x0
0x6e1: M[0x0] = 0x3
0x6e2: V469 = 0x20
0x6e4: V470 = 0x0
0x6e6: V471 = SHA3 0x0 0x20
0x6e8: V472 = 0x1f
0x6ea: V473 = ADD 0x1f V467
0x6eb: V474 = 0x20
0x6ee: V475 = DIV V473 0x20
0x6f0: V476 = ADD V471 V475
0x6f3: V477 = ISZERO V464
0x6f4: V478 = 0x71a
0x6f7: JUMPI 0x71a V477
---
Entry stack: [V8, 0xb8, V374, V624]
Stack pops: 2
Stack additions: [S1, S0, 0x3, V476, V464, V471, V466]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V476, V464, V471, V466]

================================

Block 0x6f8
[0x6f8:0x6fa]
---
Predecessors: [0x674]
Successors: [0x6fb]
---
0x6f8 SWAP2
0x6f9 DUP3
0x6fa ADD
---
0x6fa: V479 = ADD V466 V464
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V476, V464, V471, V466]
Stack pops: 3
Stack additions: [S0, S1, V479]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V476, V466, V471, V479]

================================

Block 0x6fb
[0x6fb:0x703]
---
Predecessors: [0x6f8, 0x704]
Successors: [0x704, 0x719]
---
0x6fb JUMPDEST
0x6fc DUP3
0x6fd DUP2
0x6fe GT
0x6ff ISZERO
0x700 PUSH2 0x719
0x703 JUMPI
---
0x6fb: JUMPDEST 
0x6fe: V480 = GT V479 S2
0x6ff: V481 = ISZERO V480
0x700: V482 = 0x719
0x703: JUMPI 0x719 V481
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V476, S2, S1, V479]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V476, S2, S1, V479]

================================

Block 0x704
[0x704:0x718]
---
Predecessors: [0x6fb]
Successors: [0x6fb]
---
0x704 DUP3
0x705 MLOAD
0x706 DUP3
0x707 PUSH1 0x0
0x709 POP
0x70a SSTORE
0x70b SWAP2
0x70c PUSH1 0x20
0x70e ADD
0x70f SWAP2
0x710 SWAP1
0x711 PUSH1 0x1
0x713 ADD
0x714 SWAP1
0x715 PUSH2 0x6fb
0x718 JUMP
---
0x705: V483 = M[S2]
0x707: V484 = 0x0
0x70a: S[S1] = V483
0x70c: V485 = 0x20
0x70e: V486 = ADD 0x20 S2
0x711: V487 = 0x1
0x713: V488 = ADD 0x1 S1
0x715: V489 = 0x6fb
0x718: JUMP 0x6fb
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V476, S2, S1, V479]
Stack pops: 3
Stack additions: [V486, V488, S0]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V476, V486, V488, V479]

================================

Block 0x719
[0x719:0x719]
---
Predecessors: [0x6fb]
Successors: [0x71a]
---
0x719 JUMPDEST
---
0x719: JUMPDEST 
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V476, S2, S1, V479]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, V374, V624, 0x3, V476, S2, S1, V479]

================================

Block 0x71a
[0x71a:0x726]
---
Predecessors: [0x674, 0x719]
Successors: [0x727]
---
0x71a JUMPDEST
0x71b POP
0x71c SWAP1
0x71d POP
0x71e PUSH2 0x745
0x721 SWAP2
0x722 SWAP1
0x723 PUSH2 0x727
0x726 JUMP
---
0x71a: JUMPDEST 
0x71e: V490 = 0x745
0x723: V491 = 0x727
0x726: JUMP 0x727
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V476, S2, S1, S0]
Stack pops: 4
Stack additions: [0x745, S3, S1]
Exit stack: [V8, 0xb8, V374, V624, 0x3, 0x745, V476, S1]

================================

Block 0x727
[0x727:0x72f]
---
Predecessors: [0x71a, 0x730]
Successors: [0x730, 0x741]
---
0x727 JUMPDEST
0x728 DUP1
0x729 DUP3
0x72a GT
0x72b ISZERO
0x72c PUSH2 0x741
0x72f JUMPI
---
0x727: JUMPDEST 
0x72a: V492 = GT V476 S0
0x72b: V493 = ISZERO V492
0x72c: V494 = 0x741
0x72f: JUMPI 0x741 V493
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, 0x745, V476, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0xb8, V374, V624, 0x3, 0x745, V476, S0]

================================

Block 0x730
[0x730:0x740]
---
Predecessors: [0x727]
Successors: [0x727]
---
0x730 PUSH1 0x0
0x732 DUP2
0x733 DUP2
0x734 POP
0x735 PUSH1 0x0
0x737 SWAP1
0x738 SSTORE
0x739 POP
0x73a PUSH1 0x1
0x73c ADD
0x73d PUSH2 0x727
0x740 JUMP
---
0x730: V495 = 0x0
0x735: V496 = 0x0
0x738: S[S0] = 0x0
0x73a: V497 = 0x1
0x73c: V498 = ADD 0x1 S0
0x73d: V499 = 0x727
0x740: JUMP 0x727
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, 0x745, V476, S0]
Stack pops: 1
Stack additions: [V498]
Exit stack: [V8, 0xb8, V374, V624, 0x3, 0x745, V476, V498]

================================

Block 0x741
[0x741:0x744]
---
Predecessors: [0x727]
Successors: [0x745]
---
0x741 JUMPDEST
0x742 POP
0x743 SWAP1
0x744 JUMP
---
0x741: JUMPDEST 
0x744: JUMP 0x745
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, 0x745, V476, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V8, 0xb8, V374, V624, 0x3, V476]

================================

Block 0x745
[0x745:0x78f]
---
Predecessors: [0x741]
Successors: [0x790]
---
0x745 JUMPDEST
0x746 POP
0x747 POP
0x748 CALLER
0x749 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75e AND
0x75f PUSH1 0x0
0x761 PUSH1 0x2
0x763 DUP5
0x764 MUL
0x765 PUSH16 0xffffffffffffffffffffffffffffffff
0x776 AND
0x777 PUSH1 0x40
0x779 MLOAD
0x77a DUP1
0x77b SWAP1
0x77c POP
0x77d PUSH1 0x0
0x77f PUSH1 0x40
0x781 MLOAD
0x782 DUP1
0x783 DUP4
0x784 SUB
0x785 DUP2
0x786 DUP6
0x787 DUP9
0x788 DUP9
0x789 CALL
0x78a SWAP4
0x78b POP
0x78c POP
0x78d POP
0x78e POP
0x78f POP
---
0x745: JUMPDEST 
0x748: V500 = CALLER
0x749: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x75e: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x75f: V503 = 0x0
0x761: V504 = 0x2
0x764: V505 = MUL V374 0x2
0x765: V506 = 0xffffffffffffffffffffffffffffffff
0x776: V507 = AND 0xffffffffffffffffffffffffffffffff V505
0x777: V508 = 0x40
0x779: V509 = M[0x40]
0x77d: V510 = 0x0
0x77f: V511 = 0x40
0x781: V512 = M[0x40]
0x784: V513 = SUB V509 V512
0x789: V514 = CALL 0x0 V502 V507 V512 V513 V512 0x0
---
Entry stack: [V8, 0xb8, V374, V624, 0x3, V476]
Stack pops: 4
Stack additions: [S3, S2]
Exit stack: [V8, 0xb8, V374, V624]

================================

Block 0x790
[0x790:0x790]
---
Predecessors: [0x670, 0x745]
Successors: [0x791]
---
0x790 JUMPDEST
---
0x790: JUMPDEST 
---
Entry stack: [V8, 0xb8, V374, V624]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xb8, V374, V624]

================================

Block 0x791
[0x791:0x794]
---
Predecessors: [0x2e6, 0x42c, 0x533, 0x669, 0x790]
Successors: [0xb8]
---
0x791 JUMPDEST
0x792 POP
0x793 POP
0x794 JUMP
---
0x791: JUMPDEST 
0x794: JUMP 0xb8
---
Entry stack: [V8, 0xb8, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Block 0x795
[0x795:0x7ad]
---
Predecessors: [0x109]
Successors: [0x7ae]
---
0x795 JUMPDEST
0x796 PUSH1 0x0
0x798 PUSH1 0x6
0x79a PUSH1 0x0
0x79c SWAP1
0x79d SLOAD
0x79e SWAP1
0x79f PUSH2 0x100
0x7a2 EXP
0x7a3 SWAP1
0x7a4 DIV
0x7a5 PUSH1 0xff
0x7a7 AND
0x7a8 SWAP1
0x7a9 POP
0x7aa PUSH2 0x7ae
0x7ad JUMP
---
0x795: JUMPDEST 
0x796: V515 = 0x0
0x798: V516 = 0x6
0x79a: V517 = 0x0
0x79d: V518 = S[0x6]
0x79f: V519 = 0x100
0x7a2: V520 = EXP 0x100 0x0
0x7a4: V521 = DIV V518 0x1
0x7a5: V522 = 0xff
0x7a7: V523 = AND 0xff V521
0x7aa: V524 = 0x7ae
0x7ad: JUMP 0x7ae
---
Entry stack: [V8, 0x114]
Stack pops: 0
Stack additions: [V523]
Exit stack: [V8, 0x114, V523]

================================

Block 0x7ae
[0x7ae:0x7b0]
---
Predecessors: [0x795]
Successors: [0x114]
---
0x7ae JUMPDEST
0x7af SWAP1
0x7b0 JUMP
---
0x7ae: JUMPDEST 
0x7b0: JUMP 0x114
---
Entry stack: [V8, 0x114, V523]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V523]

================================

Block 0x7b1
[0x7b1:0x7bf]
---
Predecessors: [0xba]
Successors: [0x7c0]
---
0x7b1 JUMPDEST
0x7b2 PUSH1 0x0
0x7b4 PUSH1 0x5
0x7b6 PUSH1 0x0
0x7b8 POP
0x7b9 SLOAD
0x7ba SWAP1
0x7bb POP
0x7bc PUSH2 0x7c0
0x7bf JUMP
---
0x7b1: JUMPDEST 
0x7b2: V525 = 0x0
0x7b4: V526 = 0x5
0x7b6: V527 = 0x0
0x7b9: V528 = S[0x5]
0x7bc: V529 = 0x7c0
0x7bf: JUMP 0x7c0
---
Entry stack: [V8, 0xc5]
Stack pops: 0
Stack additions: [V528]
Exit stack: [V8, 0xc5, V528]

================================

Block 0x7c0
[0x7c0:0x7c2]
---
Predecessors: [0x7b1]
Successors: [0xc5]
---
0x7c0 JUMPDEST
0x7c1 SWAP1
0x7c2 JUMP
---
0x7c0: JUMPDEST 
0x7c2: JUMP 0xc5
---
Entry stack: [V8, 0xc5, V528]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V528]

================================

Block 0x7c3
[0x7c3:0x7d1]
---
Predecessors: [0x12d]
Successors: [0x7d2]
---
0x7c3 JUMPDEST
0x7c4 PUSH1 0x0
0x7c6 PUSH1 0x4
0x7c8 PUSH1 0x0
0x7ca POP
0x7cb SLOAD
0x7cc SWAP1
0x7cd POP
0x7ce PUSH2 0x7d2
0x7d1 JUMP
---
0x7c3: JUMPDEST 
0x7c4: V530 = 0x0
0x7c6: V531 = 0x4
0x7c8: V532 = 0x0
0x7cb: V533 = S[0x4]
0x7ce: V534 = 0x7d2
0x7d1: JUMP 0x7d2
---
Entry stack: [V8, 0x138]
Stack pops: 0
Stack additions: [V533]
Exit stack: [V8, 0x138, V533]

================================

Block 0x7d2
[0x7d2:0x7d4]
---
Predecessors: [0x7c3]
Successors: [0x138]
---
0x7d2 JUMPDEST
0x7d3 SWAP1
0x7d4 JUMP
---
0x7d2: JUMPDEST 
0x7d4: JUMP 0x138
---
Entry stack: [V8, 0x138, V533]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V533]

================================

Block 0x7d5
[0x7d5:0x819]
---
Predecessors: [0x14e]
Successors: [0x81a, 0x844]
---
0x7d5 JUMPDEST
0x7d6 PUSH1 0x20
0x7d8 PUSH1 0x40
0x7da MLOAD
0x7db SWAP1
0x7dc DUP2
0x7dd ADD
0x7de PUSH1 0x40
0x7e0 MSTORE
0x7e1 DUP1
0x7e2 PUSH1 0x0
0x7e4 DUP2
0x7e5 MSTORE
0x7e6 PUSH1 0x20
0x7e8 ADD
0x7e9 POP
0x7ea PUSH1 0x3
0x7ec PUSH1 0x0
0x7ee POP
0x7ef DUP1
0x7f0 SLOAD
0x7f1 DUP1
0x7f2 PUSH1 0x1f
0x7f4 ADD
0x7f5 PUSH1 0x20
0x7f7 DUP1
0x7f8 SWAP2
0x7f9 DIV
0x7fa MUL
0x7fb PUSH1 0x20
0x7fd ADD
0x7fe PUSH1 0x40
0x800 MLOAD
0x801 SWAP1
0x802 DUP2
0x803 ADD
0x804 PUSH1 0x40
0x806 MSTORE
0x807 DUP1
0x808 SWAP3
0x809 SWAP2
0x80a SWAP1
0x80b DUP2
0x80c DUP2
0x80d MSTORE
0x80e PUSH1 0x20
0x810 ADD
0x811 DUP3
0x812 DUP1
0x813 SLOAD
0x814 DUP1
0x815 ISZERO
0x816 PUSH2 0x844
0x819 JUMPI
---
0x7d5: JUMPDEST 
0x7d6: V535 = 0x20
0x7d8: V536 = 0x40
0x7da: V537 = M[0x40]
0x7dd: V538 = ADD V537 0x20
0x7de: V539 = 0x40
0x7e0: M[0x40] = V538
0x7e2: V540 = 0x0
0x7e5: M[V537] = 0x0
0x7e6: V541 = 0x20
0x7e8: V542 = ADD 0x20 V537
0x7ea: V543 = 0x3
0x7ec: V544 = 0x0
0x7f0: V545 = S[0x3]
0x7f2: V546 = 0x1f
0x7f4: V547 = ADD 0x1f V545
0x7f5: V548 = 0x20
0x7f9: V549 = DIV V547 0x20
0x7fa: V550 = MUL V549 0x20
0x7fb: V551 = 0x20
0x7fd: V552 = ADD 0x20 V550
0x7fe: V553 = 0x40
0x800: V554 = M[0x40]
0x803: V555 = ADD V554 V552
0x804: V556 = 0x40
0x806: M[0x40] = V555
0x80d: M[V554] = V545
0x80e: V557 = 0x20
0x810: V558 = ADD 0x20 V554
0x813: V559 = S[0x3]
0x815: V560 = ISZERO V559
0x816: V561 = 0x844
0x819: JUMPI 0x844 V560
---
Entry stack: [V8, 0x159]
Stack pops: 0
Stack additions: [V537, V554, 0x3, V545, V558, 0x3, V559]
Exit stack: [V8, 0x159, V537, V554, 0x3, V545, V558, 0x3, V559]

================================

Block 0x81a
[0x81a:0x826]
---
Predecessors: [0x7d5]
Successors: [0x827]
---
0x81a DUP3
0x81b ADD
0x81c SWAP2
0x81d SWAP1
0x81e PUSH1 0x0
0x820 MSTORE
0x821 PUSH1 0x20
0x823 PUSH1 0x0
0x825 SHA3
0x826 SWAP1
---
0x81b: V562 = ADD V558 V559
0x81e: V563 = 0x0
0x820: M[0x0] = 0x3
0x821: V564 = 0x20
0x823: V565 = 0x0
0x825: V566 = SHA3 0x0 0x20
---
Entry stack: [V8, 0x159, V537, V554, 0x3, V545, V558, 0x3, V559]
Stack pops: 3
Stack additions: [V562, V566, S2]
Exit stack: [V8, 0x159, V537, V554, 0x3, V545, V562, V566, V558]

================================

Block 0x827
[0x827:0x83a]
---
Predecessors: [0x81a, 0x827]
Successors: [0x827, 0x83b]
---
0x827 JUMPDEST
0x828 DUP2
0x829 SLOAD
0x82a DUP2
0x82b MSTORE
0x82c SWAP1
0x82d PUSH1 0x1
0x82f ADD
0x830 SWAP1
0x831 PUSH1 0x20
0x833 ADD
0x834 DUP1
0x835 DUP4
0x836 GT
0x837 PUSH2 0x827
0x83a JUMPI
---
0x827: JUMPDEST 
0x829: V567 = S[S1]
0x82b: M[S0] = V567
0x82d: V568 = 0x1
0x82f: V569 = ADD 0x1 S1
0x831: V570 = 0x20
0x833: V571 = ADD 0x20 S0
0x836: V572 = GT V562 V571
0x837: V573 = 0x827
0x83a: JUMPI 0x827 V572
---
Entry stack: [V8, 0x159, V537, V554, 0x3, V545, V562, S1, S0]
Stack pops: 3
Stack additions: [S2, V569, V571]
Exit stack: [V8, 0x159, V537, V554, 0x3, V545, V562, V569, V571]

================================

Block 0x83b
[0x83b:0x843]
---
Predecessors: [0x827]
Successors: [0x844]
---
0x83b DUP3
0x83c SWAP1
0x83d SUB
0x83e PUSH1 0x1f
0x840 AND
0x841 DUP3
0x842 ADD
0x843 SWAP2
---
0x83d: V574 = SUB V571 V562
0x83e: V575 = 0x1f
0x840: V576 = AND 0x1f V574
0x842: V577 = ADD V562 V576
---
Entry stack: [V8, 0x159, V537, V554, 0x3, V545, V562, V569, V571]
Stack pops: 3
Stack additions: [V577, S1, S2]
Exit stack: [V8, 0x159, V537, V554, 0x3, V545, V577, V569, V562]

================================

Block 0x844
[0x844:0x84f]
---
Predecessors: [0x7d5, 0x83b]
Successors: [0x850]
---
0x844 JUMPDEST
0x845 POP
0x846 POP
0x847 POP
0x848 POP
0x849 POP
0x84a SWAP1
0x84b POP
0x84c PUSH2 0x850
0x84f JUMP
---
0x844: JUMPDEST 
0x84c: V578 = 0x850
0x84f: JUMP 0x850
---
Entry stack: [V8, 0x159, V537, V554, 0x3, V545, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V8, 0x159, V554]

================================

Block 0x850
[0x850:0x852]
---
Predecessors: [0x844]
Successors: [0x159]
---
0x850 JUMPDEST
0x851 SWAP1
0x852 JUMP
---
0x850: JUMPDEST 
0x852: JUMP 0x159
---
Entry stack: [V8, 0x159, V554]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V554]

================================

Block 0x853
[0x853:0x861]
---
Predecessors: [0x8c]
Successors: [0x862]
---
0x853 JUMPDEST
0x854 PUSH1 0x0
0x856 PUSH1 0x2
0x858 PUSH1 0x0
0x85a POP
0x85b SLOAD
0x85c SWAP1
0x85d POP
0x85e PUSH2 0x862
0x861 JUMP
---
0x853: JUMPDEST 
0x854: V579 = 0x0
0x856: V580 = 0x2
0x858: V581 = 0x0
0x85b: V582 = S[0x2]
0x85e: V583 = 0x862
0x861: JUMP 0x862
---
Entry stack: [V8, 0x97]
Stack pops: 0
Stack additions: [V582]
Exit stack: [V8, 0x97, V582]

================================

Block 0x862
[0x862:0x864]
---
Predecessors: [0x853]
Successors: [0x97]
---
0x862 JUMPDEST
0x863 SWAP1
0x864 JUMP
---
0x862: JUMPDEST 
0x864: JUMP 0x97
---
Entry stack: [V8, 0x97, V582]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V582]

================================

Block 0x865
[0x865:0x8bb]
---
Predecessors: [0xdb]
Successors: [0x8bc, 0x8f6]
---
0x865 JUMPDEST
0x866 PUSH1 0x0
0x868 PUSH1 0x0
0x86a SWAP1
0x86b SLOAD
0x86c SWAP1
0x86d PUSH2 0x100
0x870 EXP
0x871 SWAP1
0x872 DIV
0x873 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x888 AND
0x889 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89e AND
0x89f CALLER
0x8a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b5 AND
0x8b6 EQ
0x8b7 ISZERO
0x8b8 PUSH2 0x8f6
0x8bb JUMPI
---
0x865: JUMPDEST 
0x866: V584 = 0x0
0x868: V585 = 0x0
0x86b: V586 = S[0x0]
0x86d: V587 = 0x100
0x870: V588 = EXP 0x100 0x0
0x872: V589 = DIV V586 0x1
0x873: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x888: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x889: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x89e: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x89f: V594 = CALLER
0x8a0: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b5: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x8b6: V597 = EQ V596 V593
0x8b7: V598 = ISZERO V597
0x8b8: V599 = 0x8f6
0x8bb: JUMPI 0x8f6 V598
---
Entry stack: [V8, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe6]

================================

Block 0x8bc
[0x8bc:0x8f5]
---
Predecessors: [0x865]
Successors: []
---
0x8bc PUSH1 0x0
0x8be PUSH1 0x0
0x8c0 SWAP1
0x8c1 SLOAD
0x8c2 SWAP1
0x8c3 PUSH2 0x100
0x8c6 EXP
0x8c7 SWAP1
0x8c8 DIV
0x8c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8de AND
0x8df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f4 AND
0x8f5 SELFDESTRUCT
---
0x8bc: V600 = 0x0
0x8be: V601 = 0x0
0x8c1: V602 = S[0x0]
0x8c3: V603 = 0x100
0x8c6: V604 = EXP 0x100 0x0
0x8c8: V605 = DIV V602 0x1
0x8c9: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0x8de: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x8df: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f4: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x8f5: SELFDESTRUCT V609
---
Entry stack: [V8, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe6]

================================

Block 0x8f6
[0x8f6:0x8f6]
---
Predecessors: [0x865]
Successors: [0x8f7]
---
0x8f6 JUMPDEST
---
0x8f6: JUMPDEST 
---
Entry stack: [V8, 0xe6]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe6]

================================

Block 0x8f7
[0x8f7:0x8f8]
---
Predecessors: [0x8f6]
Successors: [0xe6]
---
0x8f7 JUMPDEST
0x8f8 JUMP
---
0x8f7: JUMPDEST 
0x8f8: JUMP 0xe6
---
Entry stack: [V8, 0xe6]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x8f9
[0x8f9:0x940]
---
Predecessors: [0x547]
Successors: [0x941]
---
0x8f9 JUMPDEST
0x8fa PUSH1 0x0
0x8fc DUP2
0x8fd PUSH1 0x40
0x8ff MLOAD
0x900 DUP1
0x901 DUP3
0x902 PUSH16 0xffffffffffffffffffffffffffffffff
0x913 AND
0x914 PUSH17 0x100000000000000000000000000000000
0x926 MUL
0x927 DUP2
0x928 MSTORE
0x929 PUSH1 0x10
0x92b ADD
0x92c SWAP2
0x92d POP
0x92e POP
0x92f PUSH1 0x40
0x931 MLOAD
0x932 DUP1
0x933 SWAP2
0x934 SUB
0x935 SWAP1
0x936 SHA3
0x937 PUSH1 0x1
0x939 SWAP1
0x93a DIV
0x93b SWAP1
0x93c POP
0x93d PUSH2 0x941
0x940 JUMP
---
0x8f9: JUMPDEST 
0x8fa: V610 = 0x0
0x8fd: V611 = 0x40
0x8ff: V612 = M[0x40]
0x902: V613 = 0xffffffffffffffffffffffffffffffff
0x913: V614 = AND 0xffffffffffffffffffffffffffffffff V374
0x914: V615 = 0x100000000000000000000000000000000
0x926: V616 = MUL 0x100000000000000000000000000000000 V614
0x928: M[V612] = V616
0x929: V617 = 0x10
0x92b: V618 = ADD 0x10 V612
0x92f: V619 = 0x40
0x931: V620 = M[0x40]
0x934: V621 = SUB V618 V620
0x936: V622 = SHA3 V620 V621
0x937: V623 = 0x1
0x93a: V624 = DIV V622 0x1
0x93d: V625 = 0x941
0x940: JUMP 0x941
---
Entry stack: [V8, 0xb8, V374, 0x0, 0x568, V374]
Stack pops: 1
Stack additions: [S0, V624]
Exit stack: [V8, 0xb8, V374, 0x0, 0x568, V374, V624]

================================

Block 0x941
[0x941:0x945]
---
Predecessors: [0x8f9]
Successors: [0x568]
---
0x941 JUMPDEST
0x942 SWAP2
0x943 SWAP1
0x944 POP
0x945 JUMP
---
0x941: JUMPDEST 
0x945: JUMP 0x568
---
Entry stack: [V8, 0xb8, V374, 0x0, 0x568, V374, V624]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V8, 0xb8, V374, 0x0, V624]

================================

Function 0:
Public function signature: 0xefafd01
Entry block: 0x8c
Exit block: 0x97
Body: 0x8c, 0x97, 0x853, 0x862

Function 1:
Public function signature: 0x25d8dcf2
Entry block: 0xad
Exit block: 0xb8
Body: 0xad, 0xb8, 0x1eb, 0x232, 0x299, 0x29c, 0x2a5, 0x2ba, 0x2bb, 0x2c8, 0x2d1, 0x2e2, 0x2e6, 0x32f, 0x352, 0x3df, 0x3e2, 0x3eb, 0x400, 0x401, 0x40e, 0x417, 0x428, 0x42c, 0x475, 0x47f, 0x4e6, 0x4e9, 0x4f2, 0x507, 0x508, 0x515, 0x51e, 0x52f, 0x533, 0x545, 0x546, 0x547, 0x568, 0x577, 0x61c, 0x61f, 0x628, 0x63d, 0x63e, 0x64b, 0x654, 0x665, 0x669, 0x674, 0x6f8, 0x6fb, 0x704, 0x719, 0x71a, 0x727, 0x730, 0x741, 0x745, 0x790, 0x791, 0x8f9, 0x941

Function 2:
Public function signature: 0x34dbe44d
Entry block: 0xba
Exit block: 0xc5
Body: 0xba, 0xc5, 0x7b1, 0x7c0

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xdb
Exit block: 0xe6
Body: 0xdb, 0xe6, 0x865, 0x8bc, 0x8f6, 0x8f7

Function 4:
Public function signature: 0x5acce36b
Entry block: 0xe8
Exit block: 0xf3
Body: 0xe8, 0xf3, 0x1c7, 0x1e8

Function 5:
Public function signature: 0x7c8cf50c
Entry block: 0x109
Exit block: 0x114
Body: 0x109, 0x114, 0x795, 0x7ae

Function 6:
Public function signature: 0x94c3fa2e
Entry block: 0x12d
Exit block: 0x138
Body: 0x12d, 0x138, 0x7c3, 0x7d2

Function 7:
Public function signature: 0xcee6f93c
Entry block: 0x14e
Exit block: 0x1b9
Body: 0x14e, 0x159, 0x1a0, 0x1b9, 0x7d5, 0x81a, 0x827, 0x83b, 0x844, 0x850

Function 8:
Public fallback function
Entry block: 0x86
Exit block: 0x8a
Body: 0x86, 0x8a

