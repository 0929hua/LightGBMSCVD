Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x5d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x3d6a32bd
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x5d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x3d6a32bd
0x1a: V12 = EQ V10 0x3d6a32bd
0x1b: V13 = 0x5d
0x1e: JUMPI 0x5d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x98]
---
0x1f DUP1
0x20 PUSH4 0x5de01497
0x25 EQ
0x26 PUSH2 0x98
0x29 JUMPI
---
0x20: V14 = 0x5de01497
0x25: V15 = EQ 0x5de01497 V10
0x26: V16 = 0x98
0x29: JUMPI 0x98 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xbf]
---
0x2a DUP1
0x2b PUSH4 0x63a9c3d7
0x30 EQ
0x31 PUSH2 0xbf
0x34 JUMPI
---
0x2b: V17 = 0x63a9c3d7
0x30: V18 = EQ 0x63a9c3d7 V10
0x31: V19 = 0xbf
0x34: JUMPI 0xbf V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x120]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x120
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x120
0x3f: JUMPI 0x120 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x149]
---
0x40 DUP1
0x41 PUSH4 0xf2fde38b
0x46 EQ
0x47 PUSH2 0x149
0x4a JUMPI
---
0x41: V23 = 0xf2fde38b
0x46: V24 = EQ 0xf2fde38b V10
0x47: V25 = 0x149
0x4a: JUMPI 0x149 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x50]
---
Predecessors: [0x0, 0x40]
Successors: [0x51]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d PUSH2 0x0
0x50 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = CALLVALUE
0x4d: V27 = 0x0
0x50: THROWI V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51
[0x51:0x53]
---
Predecessors: [0x4b]
Successors: [0x54]
---
0x51 PUSH2 0x5b
---
0x51: V28 = 0x5b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b]
Exit stack: [V10, 0x5b]

================================

Block 0x54
[0x54:0x58]
---
Predecessors: [0x51]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH2 0x0
0x58 JUMP
---
0x54: JUMPDEST 
0x55: V29 = 0x0
0x58: THROW 
---
Entry stack: [V10, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x59 JUMPDEST
0x5a JUMP
---
0x59: JUMPDEST 
0x5a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x702]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x62]
---
Predecessors: [0xb]
Successors: [0x63]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f PUSH2 0x0
0x62 JUMPI
---
0x5d: JUMPDEST 
0x5e: V30 = CALLVALUE
0x5f: V31 = 0x0
0x62: THROWI V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x7b]
---
Predecessors: [0x5d]
Successors: [0x15b]
---
0x63 PUSH2 0x7c
0x66 PUSH1 0x4
0x68 CALLDATALOAD
0x69 PUSH1 0x24
0x6b CALLDATALOAD
0x6c PUSH1 0x44
0x6e CALLDATALOAD
0x6f PUSH1 0x64
0x71 CALLDATALOAD
0x72 PUSH1 0x84
0x74 CALLDATALOAD
0x75 PUSH1 0xa4
0x77 CALLDATALOAD
0x78 PUSH2 0x15b
0x7b JUMP
---
0x63: V32 = 0x7c
0x66: V33 = 0x4
0x68: V34 = CALLDATALOAD 0x4
0x69: V35 = 0x24
0x6b: V36 = CALLDATALOAD 0x24
0x6c: V37 = 0x44
0x6e: V38 = CALLDATALOAD 0x44
0x6f: V39 = 0x64
0x71: V40 = CALLDATALOAD 0x64
0x72: V41 = 0x84
0x74: V42 = CALLDATALOAD 0x84
0x75: V43 = 0xa4
0x77: V44 = CALLDATALOAD 0xa4
0x78: V45 = 0x15b
0x7b: JUMP 0x15b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c, V34, V36, V38, V40, V42, V44]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44]

================================

Block 0x7c
[0x7c:0x97]
---
Predecessors: [0x2ee, 0x66d]
Successors: []
---
0x7c JUMPDEST
0x7d PUSH1 0x40
0x7f DUP1
0x80 MLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a SWAP3
0x8b AND
0x8c DUP3
0x8d MSTORE
0x8e MLOAD
0x8f SWAP1
0x90 DUP2
0x91 SWAP1
0x92 SUB
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 RETURN
---
0x7c: JUMPDEST 
0x7d: V46 = 0x40
0x80: V47 = M[0x40]
0x81: V48 = 0x1
0x83: V49 = 0xa0
0x85: V50 = 0x2
0x87: V51 = EXP 0x2 0xa0
0x88: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V53 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8d: M[V47] = V53
0x8e: V54 = M[0x40]
0x92: V55 = SUB V47 V54
0x93: V56 = 0x20
0x95: V57 = ADD 0x20 V55
0x97: RETURN V54 V57
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x98
[0x98:0x9d]
---
Predecessors: [0x1f]
Successors: [0x9e]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a PUSH2 0x0
0x9d JUMPI
---
0x98: JUMPDEST 
0x99: V58 = CALLVALUE
0x9a: V59 = 0x0
0x9d: THROWI V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9e
[0x9e:0xaa]
---
Predecessors: [0x98]
Successors: [0x2f8]
---
0x9e PUSH2 0xab
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 PUSH1 0x24
0xa6 CALLDATALOAD
0xa7 PUSH2 0x2f8
0xaa JUMP
---
0x9e: V60 = 0xab
0xa1: V61 = 0x4
0xa3: V62 = CALLDATALOAD 0x4
0xa4: V63 = 0x24
0xa6: V64 = CALLDATALOAD 0x24
0xa7: V65 = 0x2f8
0xaa: JUMP 0x2f8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab, V62, V64]
Exit stack: [V10, 0xab, V62, V64]

================================

Block 0xab
[0xab:0xbe]
---
Predecessors: [0x3d8]
Successors: []
---
0xab JUMPDEST
0xac PUSH1 0x40
0xae DUP1
0xaf MLOAD
0xb0 SWAP2
0xb1 ISZERO
0xb2 ISZERO
0xb3 DUP3
0xb4 MSTORE
0xb5 MLOAD
0xb6 SWAP1
0xb7 DUP2
0xb8 SWAP1
0xb9 SUB
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe RETURN
---
0xab: JUMPDEST 
0xac: V66 = 0x40
0xaf: V67 = M[0x40]
0xb1: V68 = ISZERO V322
0xb2: V69 = ISZERO V68
0xb4: M[V67] = V69
0xb5: V70 = M[0x40]
0xb9: V71 = SUB V67 V70
0xba: V72 = 0x20
0xbc: V73 = ADD 0x20 V71
0xbe: RETURN V70 V73
---
Entry stack: [V10, V322]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xbf
[0xbf:0xc4]
---
Predecessors: [0x2a]
Successors: [0xc5]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 PUSH2 0x0
0xc4 JUMPI
---
0xbf: JUMPDEST 
0xc0: V74 = CALLVALUE
0xc1: V75 = 0x0
0xc4: THROWI V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xce]
---
Predecessors: [0xbf]
Successors: [0x3de]
---
0xc5 PUSH2 0xcf
0xc8 PUSH1 0x4
0xca CALLDATALOAD
0xcb PUSH2 0x3de
0xce JUMP
---
0xc5: V76 = 0xcf
0xc8: V77 = 0x4
0xca: V78 = CALLDATALOAD 0x4
0xcb: V79 = 0x3de
0xce: JUMP 0x3de
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcf, V78]
Exit stack: [V10, 0xcf, V78]

================================

Block 0xcf
[0xcf:0x11f]
---
Predecessors: [0x661]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 DUP1
0xd3 MLOAD
0xd4 SWAP9
0xd5 ISZERO
0xd6 ISZERO
0xd7 DUP10
0xd8 MSTORE
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 SWAP8
0xe2 DUP9
0xe3 AND
0xe4 PUSH1 0x20
0xe6 DUP11
0xe7 ADD
0xe8 MSTORE
0xe9 SWAP6
0xea SWAP1
0xeb SWAP7
0xec AND
0xed DUP8
0xee DUP7
0xef ADD
0xf0 MSTORE
0xf1 PUSH1 0x60
0xf3 DUP8
0xf4 ADD
0xf5 SWAP4
0xf6 SWAP1
0xf7 SWAP4
0xf8 MSTORE
0xf9 PUSH1 0x80
0xfb DUP7
0xfc ADD
0xfd SWAP2
0xfe SWAP1
0xff SWAP2
0x100 MSTORE
0x101 PUSH1 0xa0
0x103 DUP6
0x104 ADD
0x105 MSTORE
0x106 ISZERO
0x107 ISZERO
0x108 PUSH1 0xc0
0x10a DUP5
0x10b ADD
0x10c MSTORE
0x10d SWAP1
0x10e ISZERO
0x10f ISZERO
0x110 PUSH1 0xe0
0x112 DUP4
0x113 ADD
0x114 MSTORE
0x115 MLOAD
0x116 SWAP1
0x117 DUP2
0x118 SWAP1
0x119 SUB
0x11a PUSH2 0x100
0x11d ADD
0x11e SWAP1
0x11f RETURN
---
0xcf: JUMPDEST 
0xd0: V80 = 0x40
0xd3: V81 = M[0x40]
0xd5: V82 = ISZERO V336
0xd6: V83 = ISZERO V82
0xd8: M[V81] = V83
0xd9: V84 = 0x1
0xdb: V85 = 0xa0
0xdd: V86 = 0x2
0xdf: V87 = EXP 0x2 0xa0
0xe0: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xe4: V90 = 0x20
0xe7: V91 = ADD V81 0x20
0xe8: M[V91] = V89
0xec: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xef: V93 = ADD 0x40 V81
0xf0: M[V93] = V92
0xf1: V94 = 0x60
0xf4: V95 = ADD V81 0x60
0xf8: M[V95] = S4
0xf9: V96 = 0x80
0xfc: V97 = ADD V81 0x80
0x100: M[V97] = S3
0x101: V98 = 0xa0
0x104: V99 = ADD V81 0xa0
0x105: M[V99] = S2
0x106: V100 = ISZERO S1
0x107: V101 = ISZERO V100
0x108: V102 = 0xc0
0x10b: V103 = ADD V81 0xc0
0x10c: M[V103] = V101
0x10e: V104 = ISZERO S0
0x10f: V105 = ISZERO V104
0x110: V106 = 0xe0
0x113: V107 = ADD V81 0xe0
0x114: M[V107] = V105
0x115: V108 = M[0x40]
0x119: V109 = SUB V81 V108
0x11a: V110 = 0x100
0x11d: V111 = ADD 0x100 V109
0x11f: RETURN V108 V111
---
Entry stack: [V10, V336, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x125]
---
Predecessors: [0x35]
Successors: [0x126]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 PUSH2 0x0
0x125 JUMPI
---
0x120: JUMPDEST 
0x121: V112 = CALLVALUE
0x122: V113 = 0x0
0x125: THROWI V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x120]
Successors: [0x66d]
---
0x126 PUSH2 0x7c
0x129 PUSH2 0x66d
0x12c JUMP
---
0x126: V114 = 0x7c
0x129: V115 = 0x66d
0x12c: JUMP 0x66d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0x12d
[0x12d:0x148]
---
Predecessors: []
Successors: []
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 DUP1
0x131 MLOAD
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a SWAP1
0x13b SWAP3
0x13c AND
0x13d DUP3
0x13e MSTORE
0x13f MLOAD
0x140 SWAP1
0x141 DUP2
0x142 SWAP1
0x143 SUB
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP1
0x148 RETURN
---
0x12d: JUMPDEST 
0x12e: V116 = 0x40
0x131: V117 = M[0x40]
0x132: V118 = 0x1
0x134: V119 = 0xa0
0x136: V120 = 0x2
0x138: V121 = EXP 0x2 0xa0
0x139: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V123 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13e: M[V117] = V123
0x13f: V124 = M[0x40]
0x143: V125 = SUB V117 V124
0x144: V126 = 0x20
0x146: V127 = ADD 0x20 V125
0x148: RETURN V124 V127
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x149
[0x149:0x14e]
---
Predecessors: [0x40]
Successors: [0x14f]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b PUSH2 0x0
0x14e JUMPI
---
0x149: JUMPDEST 
0x14a: V128 = CALLVALUE
0x14b: V129 = 0x0
0x14e: THROWI V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14f
[0x14f:0x158]
---
Predecessors: [0x149]
Successors: [0x67c]
---
0x14f PUSH2 0x5b
0x152 PUSH1 0x4
0x154 CALLDATALOAD
0x155 PUSH2 0x67c
0x158 JUMP
---
0x14f: V130 = 0x5b
0x152: V131 = 0x4
0x154: V132 = CALLDATALOAD 0x4
0x155: V133 = 0x67c
0x158: JUMP 0x67c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b, V132]
Exit stack: [V10, 0x5b, V132]

================================

Block 0x159
[0x159:0x15a]
---
Predecessors: []
Successors: []
---
0x159 JUMPDEST
0x15a STOP
---
0x159: JUMPDEST 
0x15a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15b
[0x15b:0x16d]
---
Predecessors: [0x63]
Successors: [0x16e, 0x172]
---
0x15b JUMPDEST
0x15c PUSH1 0x0
0x15e PUSH1 0x1
0x160 PUSH1 0xa0
0x162 PUSH1 0x2
0x164 EXP
0x165 SUB
0x166 DUP8
0x167 AND
0x168 ISZERO
0x169 ISZERO
0x16a PUSH2 0x172
0x16d JUMPI
---
0x15b: JUMPDEST 
0x15c: V134 = 0x0
0x15e: V135 = 0x1
0x160: V136 = 0xa0
0x162: V137 = 0x2
0x164: V138 = EXP 0x2 0xa0
0x165: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V140 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x168: V141 = ISZERO V140
0x169: V142 = ISZERO V141
0x16a: V143 = 0x172
0x16d: JUMPI 0x172 V142
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x16e
[0x16e:0x171]
---
Predecessors: [0x15b]
Successors: []
---
0x16e PUSH2 0x0
0x171 JUMP
---
0x16e: V144 = 0x0
0x171: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x172
[0x172:0x17c]
---
Predecessors: [0x15b]
Successors: [0x17d, 0x183]
---
0x172 JUMPDEST
0x173 PUSH1 0x0
0x175 DUP7
0x176 GT
0x177 ISZERO
0x178 DUP1
0x179 PUSH2 0x183
0x17c JUMPI
---
0x172: JUMPDEST 
0x173: V145 = 0x0
0x176: V146 = GT V36 0x0
0x177: V147 = ISZERO V146
0x179: V148 = 0x183
0x17c: JUMPI 0x183 V147
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V147]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V147]

================================

Block 0x17d
[0x17d:0x182]
---
Predecessors: [0x172]
Successors: [0x183]
---
0x17d POP
0x17e PUSH1 0x0
0x180 DUP6
0x181 GT
0x182 ISZERO
---
0x17e: V149 = 0x0
0x181: V150 = GT V38 0x0
0x182: V151 = ISZERO V150
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V147]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V151]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V151]

================================

Block 0x183
[0x183:0x188]
---
Predecessors: [0x172, 0x17d]
Successors: [0x189, 0x18d]
---
0x183 JUMPDEST
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x183: JUMPDEST 
0x184: V152 = ISZERO S0
0x185: V153 = 0x18d
0x188: JUMPI 0x18d V152
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x183]
Successors: []
---
0x189 PUSH2 0x0
0x18c JUMP
---
0x189: V154 = 0x0
0x18c: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x183]
Successors: [0x195, 0x199]
---
0x18d JUMPDEST
0x18e DUP5
0x18f DUP7
0x190 LT
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18d: JUMPDEST 
0x190: V155 = LT V36 V38
0x191: V156 = 0x199
0x194: JUMPI 0x199 V155
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18d]
Successors: []
---
0x195 PUSH2 0x0
0x198 JUMP
---
0x195: V157 = 0x0
0x198: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x199
[0x199:0x1a1]
---
Predecessors: [0x18d]
Successors: [0x1a2, 0x1a6]
---
0x199 JUMPDEST
0x19a PUSH1 0x0
0x19c DUP5
0x19d GT
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x199: JUMPDEST 
0x19a: V158 = 0x0
0x19d: V159 = GT V40 0x0
0x19e: V160 = 0x1a6
0x1a1: JUMPI 0x1a6 V159
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x199]
Successors: []
---
0x1a2 PUSH2 0x0
0x1a5 JUMP
---
0x1a2: V161 = 0x0
0x1a5: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x1a6
[0x1a6:0x203]
---
Predecessors: [0x199]
Successors: [0x204]
---
0x1a6 JUMPDEST
0x1a7 DUP7
0x1a8 DUP7
0x1a9 DUP7
0x1aa DUP7
0x1ab DUP7
0x1ac DUP7
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 PUSH2 0xb50
0x1b3 DUP1
0x1b4 PUSH2 0x705
0x1b7 DUP4
0x1b8 CODECOPY
0x1b9 ADD
0x1ba DUP1
0x1bb DUP8
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 AND
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca DUP7
0x1cb DUP2
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 DUP6
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 DUP5
0x1d7 DUP2
0x1d8 MSTORE
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc DUP4
0x1dd ISZERO
0x1de ISZERO
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 DUP3
0x1e5 ISZERO
0x1e6 ISZERO
0x1e7 DUP2
0x1e8 MSTORE
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec SWAP7
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP1
0x1f8 SWAP2
0x1f9 SUB
0x1fa SWAP1
0x1fb PUSH1 0x0
0x1fd CREATE
0x1fe DUP1
0x1ff ISZERO
0x200 PUSH2 0x0
0x203 JUMPI
---
0x1a6: JUMPDEST 
0x1ad: V162 = 0x40
0x1af: V163 = M[0x40]
0x1b0: V164 = 0xb50
0x1b4: V165 = 0x705
0x1b8: CODECOPY V163 0x705 0xb50
0x1b9: V166 = ADD 0xb50 V163
0x1bc: V167 = 0x1
0x1be: V168 = 0xa0
0x1c0: V169 = 0x2
0x1c2: V170 = EXP 0x2 0xa0
0x1c3: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x1c6: M[V166] = V172
0x1c7: V173 = 0x20
0x1c9: V174 = ADD 0x20 V166
0x1cc: M[V174] = V36
0x1cd: V175 = 0x20
0x1cf: V176 = ADD 0x20 V174
0x1d2: M[V176] = V38
0x1d3: V177 = 0x20
0x1d5: V178 = ADD 0x20 V176
0x1d8: M[V178] = V40
0x1d9: V179 = 0x20
0x1db: V180 = ADD 0x20 V178
0x1dd: V181 = ISZERO V42
0x1de: V182 = ISZERO V181
0x1e0: M[V180] = V182
0x1e1: V183 = 0x20
0x1e3: V184 = ADD 0x20 V180
0x1e5: V185 = ISZERO V44
0x1e6: V186 = ISZERO V185
0x1e8: M[V184] = V186
0x1e9: V187 = 0x20
0x1eb: V188 = ADD 0x20 V184
0x1f4: V189 = 0x40
0x1f6: V190 = M[0x40]
0x1f9: V191 = SUB V188 V190
0x1fb: V192 = 0x0
0x1fd: V193 = CREATE 0x0 V190 V191
0x1ff: V194 = ISZERO V193
0x200: V195 = 0x0
0x203: THROWI V194
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V193]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V193]

================================

Block 0x204
[0x204:0x27b]
---
Predecessors: [0x1a6]
Successors: [0x27c]
---
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c DUP1
0x20d DUP3
0x20e AND
0x20f PUSH1 0x0
0x211 DUP2
0x212 DUP2
0x213 MSTORE
0x214 PUSH1 0x1
0x216 PUSH1 0x20
0x218 DUP2
0x219 SWAP1
0x21a MSTORE
0x21b PUSH1 0x40
0x21d DUP1
0x21e DUP4
0x21f SHA3
0x220 DUP1
0x221 SLOAD
0x222 PUSH1 0xff
0x224 NOT
0x225 AND
0x226 SWAP1
0x227 SWAP3
0x228 OR
0x229 SWAP1
0x22a SWAP2
0x22b SSTORE
0x22c DUP1
0x22d MLOAD
0x22e PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x24f DUP2
0x250 MSTORE
0x251 CALLER
0x252 SWAP1
0x253 SWAP5
0x254 AND
0x255 PUSH1 0x4
0x257 DUP6
0x258 ADD
0x259 MSTORE
0x25a MLOAD
0x25b SWAP4
0x25c SWAP5
0x25d POP
0x25e SWAP1
0x25f SWAP3
0x260 PUSH4 0xf2fde38b
0x265 SWAP3
0x266 PUSH1 0x24
0x268 DUP1
0x269 DUP3
0x26a ADD
0x26b SWAP4
0x26c SWAP3
0x26d SWAP2
0x26e DUP3
0x26f SWAP1
0x270 SUB
0x271 ADD
0x272 DUP2
0x273 DUP4
0x274 DUP8
0x275 DUP1
0x276 EXTCODESIZE
0x277 ISZERO
0x278 PUSH2 0x0
0x27b JUMPI
---
0x204: V196 = 0x1
0x206: V197 = 0xa0
0x208: V198 = 0x2
0x20a: V199 = EXP 0x2 0xa0
0x20b: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V201 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x20f: V202 = 0x0
0x213: M[0x0] = V201
0x214: V203 = 0x1
0x216: V204 = 0x20
0x21a: M[0x20] = 0x1
0x21b: V205 = 0x40
0x21f: V206 = SHA3 0x0 0x40
0x221: V207 = S[V206]
0x222: V208 = 0xff
0x224: V209 = NOT 0xff
0x225: V210 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V207
0x228: V211 = OR 0x1 V210
0x22b: S[V206] = V211
0x22d: V212 = M[0x40]
0x22e: V213 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x250: M[V212] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x251: V214 = CALLER
0x254: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x255: V216 = 0x4
0x258: V217 = ADD V212 0x4
0x259: M[V217] = V215
0x25a: V218 = M[0x40]
0x260: V219 = 0xf2fde38b
0x266: V220 = 0x24
0x26a: V221 = ADD V212 0x24
0x270: V222 = SUB V212 V218
0x271: V223 = ADD V222 0x24
0x276: V224 = EXTCODESIZE V201
0x277: V225 = ISZERO V224
0x278: V226 = 0x0
0x27b: THROWI V225
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V193]
Stack pops: 2
Stack additions: [S0, V201, 0xf2fde38b, V221, 0x0, V218, V223, V218, 0x0, V201]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V193, V201, 0xf2fde38b, V221, 0x0, V218, V223, V218, 0x0, V201]

================================

Block 0x27c
[0x27c:0x285]
---
Predecessors: [0x204]
Successors: [0x286]
---
0x27c PUSH1 0x32
0x27e GAS
0x27f SUB
0x280 CALL
0x281 ISZERO
0x282 PUSH2 0x0
0x285 JUMPI
---
0x27c: V227 = 0x32
0x27e: V228 = GAS
0x27f: V229 = SUB V228 0x32
0x280: V230 = CALL V229 V201 0x0 V218 V223 V218 0x0
0x281: V231 = ISZERO V230
0x282: V232 = 0x0
0x285: THROWI V231
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V193, V201, 0xf2fde38b, V221, 0x0, V218, V223, V218, 0x0, V201]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V193, V201, 0xf2fde38b, V221]

================================

Block 0x286
[0x286:0x2ed]
---
Predecessors: [0x27c]
Successors: [0x2ee]
---
0x286 POP
0x287 POP
0x288 PUSH1 0x40
0x28a DUP1
0x28b MLOAD
0x28c DUP9
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x20
0x291 DUP2
0x292 ADD
0x293 DUP9
0x294 SWAP1
0x295 MSTORE
0x296 DUP1
0x297 DUP3
0x298 ADD
0x299 DUP8
0x29a SWAP1
0x29b MSTORE
0x29c DUP6
0x29d ISZERO
0x29e ISZERO
0x29f PUSH1 0x60
0x2a1 DUP3
0x2a2 ADD
0x2a3 MSTORE
0x2a4 DUP5
0x2a5 ISZERO
0x2a6 ISZERO
0x2a7 PUSH1 0x80
0x2a9 DUP3
0x2aa ADD
0x2ab MSTORE
0x2ac SWAP1
0x2ad MLOAD
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 DUP1
0x2b7 DUP12
0x2b8 AND
0x2b9 SWAP4
0x2ba POP
0x2bb DUP5
0x2bc DUP2
0x2bd AND
0x2be SWAP3
0x2bf CALLER
0x2c0 SWAP1
0x2c1 SWAP2
0x2c2 AND
0x2c3 SWAP2
0x2c4 PUSH32 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d
0x2e5 SWAP2
0x2e6 DUP2
0x2e7 SWAP1
0x2e8 SUB
0x2e9 PUSH1 0xa0
0x2eb ADD
0x2ec SWAP1
0x2ed LOG4
---
0x288: V233 = 0x40
0x28b: V234 = M[0x40]
0x28e: M[V234] = V36
0x28f: V235 = 0x20
0x292: V236 = ADD V234 0x20
0x295: M[V236] = V38
0x298: V237 = ADD 0x40 V234
0x29b: M[V237] = V40
0x29d: V238 = ISZERO V42
0x29e: V239 = ISZERO V238
0x29f: V240 = 0x60
0x2a2: V241 = ADD V234 0x60
0x2a3: M[V241] = V239
0x2a5: V242 = ISZERO V44
0x2a6: V243 = ISZERO V242
0x2a7: V244 = 0x80
0x2aa: V245 = ADD V234 0x80
0x2ab: M[V245] = V243
0x2ad: V246 = M[0x40]
0x2ae: V247 = 0x1
0x2b0: V248 = 0xa0
0x2b2: V249 = 0x2
0x2b4: V250 = EXP 0x2 0xa0
0x2b5: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V252 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x2bf: V254 = CALLER
0x2c2: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x2c4: V256 = 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d
0x2e8: V257 = SUB V234 V246
0x2e9: V258 = 0xa0
0x2eb: V259 = ADD 0xa0 V257
0x2ed: LOG V246 V259 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d V255 V253 V252
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V193, V201, 0xf2fde38b, V221]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V193]

================================

Block 0x2ee
[0x2ee:0x2f7]
---
Predecessors: [0x286]
Successors: [0x7c]
---
0x2ee JUMPDEST
0x2ef SWAP7
0x2f0 SWAP6
0x2f1 POP
0x2f2 POP
0x2f3 POP
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 JUMP
---
0x2ee: JUMPDEST 
0x2f7: JUMP 0x7c
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V193]
Stack pops: 8
Stack additions: [S0]
Exit stack: [V10, V193]

================================

Block 0x2f8
[0x2f8:0x30f]
---
Predecessors: [0x9e]
Successors: [0x310, 0x314]
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc SLOAD
0x2fd CALLER
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 SWAP1
0x307 DUP2
0x308 AND
0x309 SWAP2
0x30a AND
0x30b EQ
0x30c PUSH2 0x314
0x30f JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V260 = 0x0
0x2fc: V261 = S[0x0]
0x2fd: V262 = CALLER
0x2fe: V263 = 0x1
0x300: V264 = 0xa0
0x302: V265 = 0x2
0x304: V266 = EXP 0x2 0xa0
0x305: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x30a: V269 = AND V261 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V270 = EQ V269 V268
0x30c: V271 = 0x314
0x30f: JUMPI 0x314 V270
---
Entry stack: [V10, 0xab, V62, V64]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xab, V62, V64, 0x0]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x2f8]
Successors: []
---
0x310 PUSH2 0x0
0x313 JUMP
---
0x310: V272 = 0x0
0x313: THROW 
---
Entry stack: [V10, 0xab, V62, V64, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, 0x0]

================================

Block 0x314
[0x314:0x3c3]
---
Predecessors: [0x2f8]
Successors: [0x3c4]
---
0x314 JUMPDEST
0x315 PUSH1 0x40
0x317 DUP1
0x318 MLOAD
0x319 DUP4
0x31a DUP2
0x31b MSTORE
0x31c SWAP1
0x31d MLOAD
0x31e PUSH1 0x1
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SUB
0x326 DUP6
0x327 AND
0x328 SWAP2
0x329 PUSH32 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x34a SWAP2
0x34b SWAP1
0x34c DUP2
0x34d SWAP1
0x34e SUB
0x34f PUSH1 0x20
0x351 ADD
0x352 SWAP1
0x353 LOG2
0x354 PUSH1 0x0
0x356 DUP1
0x357 SLOAD
0x358 PUSH1 0x40
0x35a DUP1
0x35b MLOAD
0x35c PUSH1 0x20
0x35e SWAP1
0x35f DUP2
0x360 ADD
0x361 DUP5
0x362 SWAP1
0x363 MSTORE
0x364 DUP2
0x365 MLOAD
0x366 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x387 DUP2
0x388 MSTORE
0x389 PUSH1 0x1
0x38b PUSH1 0xa0
0x38d PUSH1 0x2
0x38f EXP
0x390 SUB
0x391 SWAP4
0x392 DUP5
0x393 AND
0x394 PUSH1 0x4
0x396 DUP3
0x397 ADD
0x398 MSTORE
0x399 PUSH1 0x24
0x39b DUP2
0x39c ADD
0x39d DUP8
0x39e SWAP1
0x39f MSTORE
0x3a0 SWAP2
0x3a1 MLOAD
0x3a2 SWAP3
0x3a3 DUP8
0x3a4 AND
0x3a5 SWAP4
0x3a6 PUSH4 0xa9059cbb
0x3ab SWAP4
0x3ac PUSH1 0x44
0x3ae DUP1
0x3af DUP6
0x3b0 ADD
0x3b1 SWAP5
0x3b2 SWAP2
0x3b3 SWAP3
0x3b4 SWAP2
0x3b5 DUP4
0x3b6 SWAP1
0x3b7 SUB
0x3b8 ADD
0x3b9 SWAP1
0x3ba DUP3
0x3bb SWAP1
0x3bc DUP8
0x3bd DUP1
0x3be EXTCODESIZE
0x3bf ISZERO
0x3c0 PUSH2 0x0
0x3c3 JUMPI
---
0x314: JUMPDEST 
0x315: V273 = 0x40
0x318: V274 = M[0x40]
0x31b: M[V274] = V64
0x31d: V275 = M[0x40]
0x31e: V276 = 0x1
0x320: V277 = 0xa0
0x322: V278 = 0x2
0x324: V279 = EXP 0x2 0xa0
0x325: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x327: V281 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x329: V282 = 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x34e: V283 = SUB V274 V275
0x34f: V284 = 0x20
0x351: V285 = ADD 0x20 V283
0x353: LOG V275 V285 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba V281
0x354: V286 = 0x0
0x357: V287 = S[0x0]
0x358: V288 = 0x40
0x35b: V289 = M[0x40]
0x35c: V290 = 0x20
0x360: V291 = ADD 0x20 V289
0x363: M[V291] = 0x0
0x365: V292 = M[0x40]
0x366: V293 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x388: M[V292] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x389: V294 = 0x1
0x38b: V295 = 0xa0
0x38d: V296 = 0x2
0x38f: V297 = EXP 0x2 0xa0
0x390: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x393: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x394: V300 = 0x4
0x397: V301 = ADD V292 0x4
0x398: M[V301] = V299
0x399: V302 = 0x24
0x39c: V303 = ADD V292 0x24
0x39f: M[V303] = V64
0x3a1: V304 = M[0x40]
0x3a4: V305 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V306 = 0xa9059cbb
0x3ac: V307 = 0x44
0x3b0: V308 = ADD V292 0x44
0x3b7: V309 = SUB V292 V304
0x3b8: V310 = ADD V309 0x44
0x3be: V311 = EXTCODESIZE V305
0x3bf: V312 = ISZERO V311
0x3c0: V313 = 0x0
0x3c3: THROWI V312
---
Entry stack: [V10, 0xab, V62, V64, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V305, 0xa9059cbb, V308, 0x20, V304, V310, V304, 0x0, V305]
Exit stack: [V10, 0xab, V62, V64, 0x0, V305, 0xa9059cbb, V308, 0x20, V304, V310, V304, 0x0, V305]

================================

Block 0x3c4
[0x3c4:0x3cd]
---
Predecessors: [0x314]
Successors: [0x3ce]
---
0x3c4 PUSH1 0x32
0x3c6 GAS
0x3c7 SUB
0x3c8 CALL
0x3c9 ISZERO
0x3ca PUSH2 0x0
0x3cd JUMPI
---
0x3c4: V314 = 0x32
0x3c6: V315 = GAS
0x3c7: V316 = SUB V315 0x32
0x3c8: V317 = CALL V316 V305 0x0 V304 V310 V304 0x20
0x3c9: V318 = ISZERO V317
0x3ca: V319 = 0x0
0x3cd: THROWI V318
---
Entry stack: [V10, 0xab, V62, V64, 0x0, V305, 0xa9059cbb, V308, 0x20, V304, V310, V304, 0x0, V305]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, 0x0, V305, 0xa9059cbb, V308]

================================

Block 0x3ce
[0x3ce:0x3d6]
---
Predecessors: [0x3c4]
Successors: [0x3d7]
---
0x3ce POP
0x3cf POP
0x3d0 PUSH1 0x40
0x3d2 MLOAD
0x3d3 MLOAD
0x3d4 SWAP2
0x3d5 POP
0x3d6 POP
---
0x3d0: V320 = 0x40
0x3d2: V321 = M[0x40]
0x3d3: V322 = M[V321]
---
Entry stack: [V10, 0xab, V62, V64, 0x0, V305, 0xa9059cbb, V308]
Stack pops: 4
Stack additions: [V322]
Exit stack: [V10, 0xab, V62, V64, V322]

================================

Block 0x3d7
[0x3d7:0x3d7]
---
Predecessors: [0x3ce]
Successors: [0x3d8]
---
0x3d7 JUMPDEST
---
0x3d7: JUMPDEST 
---
Entry stack: [V10, 0xab, V62, V64, V322]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, V322]

================================

Block 0x3d8
[0x3d8:0x3dd]
---
Predecessors: [0x3d7]
Successors: [0xab]
---
0x3d8 JUMPDEST
0x3d9 SWAP3
0x3da SWAP2
0x3db POP
0x3dc POP
0x3dd JUMP
---
0x3d8: JUMPDEST 
0x3dd: JUMP 0xab
---
Entry stack: [V10, 0xab, V62, V64, V322]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V322]

================================

Block 0x3de
[0x3de:0x408]
---
Predecessors: [0xc5]
Successors: [0x409, 0x660]
---
0x3de JUMPDEST
0x3df PUSH1 0x1
0x3e1 PUSH1 0xa0
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 SUB
0x3e7 DUP2
0x3e8 AND
0x3e9 PUSH1 0x0
0x3eb SWAP1
0x3ec DUP2
0x3ed MSTORE
0x3ee PUSH1 0x1
0x3f0 PUSH1 0x20
0x3f2 MSTORE
0x3f3 PUSH1 0x40
0x3f5 DUP2
0x3f6 SHA3
0x3f7 SLOAD
0x3f8 PUSH1 0xff
0x3fa AND
0x3fb SWAP1
0x3fc DUP1
0x3fd DUP1
0x3fe DUP1
0x3ff DUP1
0x400 DUP1
0x401 DUP1
0x402 DUP1
0x403 DUP9
0x404 ISZERO
0x405 PUSH2 0x660
0x408 JUMPI
---
0x3de: JUMPDEST 
0x3df: V323 = 0x1
0x3e1: V324 = 0xa0
0x3e3: V325 = 0x2
0x3e5: V326 = EXP 0x2 0xa0
0x3e6: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e8: V328 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V329 = 0x0
0x3ed: M[0x0] = V328
0x3ee: V330 = 0x1
0x3f0: V331 = 0x20
0x3f2: M[0x20] = 0x1
0x3f3: V332 = 0x40
0x3f6: V333 = SHA3 0x0 0x40
0x3f7: V334 = S[V333]
0x3f8: V335 = 0xff
0x3fa: V336 = AND 0xff V334
0x404: V337 = ISZERO V336
0x405: V338 = 0x660
0x408: JUMPI 0x660 V337
---
Entry stack: [V10, 0xcf, V78]
Stack pops: 1
Stack additions: [S0, V336, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0xcf, V78, V336, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x409
[0x409:0x448]
---
Predecessors: [0x3de]
Successors: [0x449]
---
0x409 DUP10
0x40a SWAP1
0x40b POP
0x40c DUP1
0x40d PUSH1 0x1
0x40f PUSH1 0xa0
0x411 PUSH1 0x2
0x413 EXP
0x414 SUB
0x415 AND
0x416 PUSH4 0x8da5cb5b
0x41b PUSH1 0x0
0x41d PUSH1 0x40
0x41f MLOAD
0x420 PUSH1 0x20
0x422 ADD
0x423 MSTORE
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP2
0x428 PUSH1 0xe0
0x42a PUSH1 0x2
0x42c EXP
0x42d MUL
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x4
0x432 ADD
0x433 DUP1
0x434 SWAP1
0x435 POP
0x436 PUSH1 0x20
0x438 PUSH1 0x40
0x43a MLOAD
0x43b DUP1
0x43c DUP4
0x43d SUB
0x43e DUP2
0x43f PUSH1 0x0
0x441 DUP8
0x442 DUP1
0x443 EXTCODESIZE
0x444 ISZERO
0x445 PUSH2 0x0
0x448 JUMPI
---
0x40d: V339 = 0x1
0x40f: V340 = 0xa0
0x411: V341 = 0x2
0x413: V342 = EXP 0x2 0xa0
0x414: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x415: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x416: V345 = 0x8da5cb5b
0x41b: V346 = 0x0
0x41d: V347 = 0x40
0x41f: V348 = M[0x40]
0x420: V349 = 0x20
0x422: V350 = ADD 0x20 V348
0x423: M[V350] = 0x0
0x424: V351 = 0x40
0x426: V352 = M[0x40]
0x428: V353 = 0xe0
0x42a: V354 = 0x2
0x42c: V355 = EXP 0x2 0xe0
0x42d: V356 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x42f: M[V352] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x430: V357 = 0x4
0x432: V358 = ADD 0x4 V352
0x436: V359 = 0x20
0x438: V360 = 0x40
0x43a: V361 = M[0x40]
0x43d: V362 = SUB V358 V361
0x43f: V363 = 0x0
0x443: V364 = EXTCODESIZE V344
0x444: V365 = ISZERO V364
0x445: V366 = 0x0
0x448: THROWI V365
---
Entry stack: [V10, 0xcf, V78, V336, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S9, V344, 0x8da5cb5b, V358, 0x20, V361, V362, V361, 0x0, V344]
Exit stack: [V10, 0xcf, V78, V336, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V344, 0x8da5cb5b, V358, 0x20, V361, V362, V361, 0x0, V344]

================================

Block 0x449
[0x449:0x452]
---
Predecessors: [0x409]
Successors: [0x453]
---
0x449 PUSH1 0x32
0x44b GAS
0x44c SUB
0x44d CALL
0x44e ISZERO
0x44f PUSH2 0x0
0x452 JUMPI
---
0x449: V367 = 0x32
0x44b: V368 = GAS
0x44c: V369 = SUB V368 0x32
0x44d: V370 = CALL V369 V344 0x0 V361 V362 V361 0x20
0x44e: V371 = ISZERO V370
0x44f: V372 = 0x0
0x452: THROWI V371
---
Entry stack: [V10, 0xcf, V78, V336, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V344, 0x8da5cb5b, V358, 0x20, V361, V362, V361, 0x0, V344]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V344, 0x8da5cb5b, V358]

================================

Block 0x453
[0x453:0x49e]
---
Predecessors: [0x449]
Successors: [0x49f]
---
0x453 POP
0x454 POP
0x455 POP
0x456 PUSH1 0x40
0x458 MLOAD
0x459 DUP1
0x45a MLOAD
0x45b SWAP1
0x45c PUSH1 0x20
0x45e ADD
0x45f POP
0x460 SWAP8
0x461 POP
0x462 DUP1
0x463 PUSH1 0x1
0x465 PUSH1 0xa0
0x467 PUSH1 0x2
0x469 EXP
0x46a SUB
0x46b AND
0x46c PUSH4 0x38d52e0f
0x471 PUSH1 0x0
0x473 PUSH1 0x40
0x475 MLOAD
0x476 PUSH1 0x20
0x478 ADD
0x479 MSTORE
0x47a PUSH1 0x40
0x47c MLOAD
0x47d DUP2
0x47e PUSH1 0xe0
0x480 PUSH1 0x2
0x482 EXP
0x483 MUL
0x484 DUP2
0x485 MSTORE
0x486 PUSH1 0x4
0x488 ADD
0x489 DUP1
0x48a SWAP1
0x48b POP
0x48c PUSH1 0x20
0x48e PUSH1 0x40
0x490 MLOAD
0x491 DUP1
0x492 DUP4
0x493 SUB
0x494 DUP2
0x495 PUSH1 0x0
0x497 DUP8
0x498 DUP1
0x499 EXTCODESIZE
0x49a ISZERO
0x49b PUSH2 0x0
0x49e JUMPI
---
0x456: V373 = 0x40
0x458: V374 = M[0x40]
0x45a: V375 = M[V374]
0x45c: V376 = 0x20
0x45e: V377 = ADD 0x20 V374
0x463: V378 = 0x1
0x465: V379 = 0xa0
0x467: V380 = 0x2
0x469: V381 = EXP 0x2 0xa0
0x46a: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46b: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x46c: V384 = 0x38d52e0f
0x471: V385 = 0x0
0x473: V386 = 0x40
0x475: V387 = M[0x40]
0x476: V388 = 0x20
0x478: V389 = ADD 0x20 V387
0x479: M[V389] = 0x0
0x47a: V390 = 0x40
0x47c: V391 = M[0x40]
0x47e: V392 = 0xe0
0x480: V393 = 0x2
0x482: V394 = EXP 0x2 0xe0
0x483: V395 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x485: M[V391] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x486: V396 = 0x4
0x488: V397 = ADD 0x4 V391
0x48c: V398 = 0x20
0x48e: V399 = 0x40
0x490: V400 = M[0x40]
0x493: V401 = SUB V397 V400
0x495: V402 = 0x0
0x499: V403 = EXTCODESIZE V383
0x49a: V404 = ISZERO V403
0x49b: V405 = 0x0
0x49e: THROWI V404
---
Entry stack: [V10, 0xcf, V78, V336, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V344, 0x8da5cb5b, V358]
Stack pops: 11
Stack additions: [V375, S9, S8, S7, S6, S5, S4, S3, V383, 0x38d52e0f, V397, 0x20, V400, V401, V400, 0x0, V383]
Exit stack: [V10, 0xcf, V78, V336, V375, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V383, 0x38d52e0f, V397, 0x20, V400, V401, V400, 0x0, V383]

================================

Block 0x49f
[0x49f:0x4a8]
---
Predecessors: [0x453]
Successors: [0x4a9]
---
0x49f PUSH1 0x32
0x4a1 GAS
0x4a2 SUB
0x4a3 CALL
0x4a4 ISZERO
0x4a5 PUSH2 0x0
0x4a8 JUMPI
---
0x49f: V406 = 0x32
0x4a1: V407 = GAS
0x4a2: V408 = SUB V407 0x32
0x4a3: V409 = CALL V408 V383 0x0 V400 V401 V400 0x20
0x4a4: V410 = ISZERO V409
0x4a5: V411 = 0x0
0x4a8: THROWI V410
---
Entry stack: [V10, 0xcf, V78, V336, V375, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V383, 0x38d52e0f, V397, 0x20, V400, V401, V400, 0x0, V383]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, V375, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V383, 0x38d52e0f, V397]

================================

Block 0x4a9
[0x4a9:0x4f4]
---
Predecessors: [0x49f]
Successors: [0x4f5]
---
0x4a9 POP
0x4aa POP
0x4ab POP
0x4ac PUSH1 0x40
0x4ae MLOAD
0x4af DUP1
0x4b0 MLOAD
0x4b1 SWAP1
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 POP
0x4b6 SWAP7
0x4b7 POP
0x4b8 DUP1
0x4b9 PUSH1 0x1
0x4bb PUSH1 0xa0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 SUB
0x4c1 AND
0x4c2 PUSH4 0x8620410b
0x4c7 PUSH1 0x0
0x4c9 PUSH1 0x40
0x4cb MLOAD
0x4cc PUSH1 0x20
0x4ce ADD
0x4cf MSTORE
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 DUP2
0x4d4 PUSH1 0xe0
0x4d6 PUSH1 0x2
0x4d8 EXP
0x4d9 MUL
0x4da DUP2
0x4db MSTORE
0x4dc PUSH1 0x4
0x4de ADD
0x4df DUP1
0x4e0 SWAP1
0x4e1 POP
0x4e2 PUSH1 0x20
0x4e4 PUSH1 0x40
0x4e6 MLOAD
0x4e7 DUP1
0x4e8 DUP4
0x4e9 SUB
0x4ea DUP2
0x4eb PUSH1 0x0
0x4ed DUP8
0x4ee DUP1
0x4ef EXTCODESIZE
0x4f0 ISZERO
0x4f1 PUSH2 0x0
0x4f4 JUMPI
---
0x4ac: V412 = 0x40
0x4ae: V413 = M[0x40]
0x4b0: V414 = M[V413]
0x4b2: V415 = 0x20
0x4b4: V416 = ADD 0x20 V413
0x4b9: V417 = 0x1
0x4bb: V418 = 0xa0
0x4bd: V419 = 0x2
0x4bf: V420 = EXP 0x2 0xa0
0x4c0: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c1: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x4c2: V423 = 0x8620410b
0x4c7: V424 = 0x0
0x4c9: V425 = 0x40
0x4cb: V426 = M[0x40]
0x4cc: V427 = 0x20
0x4ce: V428 = ADD 0x20 V426
0x4cf: M[V428] = 0x0
0x4d0: V429 = 0x40
0x4d2: V430 = M[0x40]
0x4d4: V431 = 0xe0
0x4d6: V432 = 0x2
0x4d8: V433 = EXP 0x2 0xe0
0x4d9: V434 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8620410b
0x4db: M[V430] = 0x8620410b00000000000000000000000000000000000000000000000000000000
0x4dc: V435 = 0x4
0x4de: V436 = ADD 0x4 V430
0x4e2: V437 = 0x20
0x4e4: V438 = 0x40
0x4e6: V439 = M[0x40]
0x4e9: V440 = SUB V436 V439
0x4eb: V441 = 0x0
0x4ef: V442 = EXTCODESIZE V422
0x4f0: V443 = ISZERO V442
0x4f1: V444 = 0x0
0x4f4: THROWI V443
---
Entry stack: [V10, 0xcf, V78, V336, V375, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V383, 0x38d52e0f, V397]
Stack pops: 10
Stack additions: [V414, S8, S7, S6, S5, S4, S3, V422, 0x8620410b, V436, 0x20, V439, V440, V439, 0x0, V422]
Exit stack: [V10, 0xcf, V78, V336, V375, V414, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V422, 0x8620410b, V436, 0x20, V439, V440, V439, 0x0, V422]

================================

Block 0x4f5
[0x4f5:0x4fe]
---
Predecessors: [0x4a9]
Successors: [0x4ff]
---
0x4f5 PUSH1 0x32
0x4f7 GAS
0x4f8 SUB
0x4f9 CALL
0x4fa ISZERO
0x4fb PUSH2 0x0
0x4fe JUMPI
---
0x4f5: V445 = 0x32
0x4f7: V446 = GAS
0x4f8: V447 = SUB V446 0x32
0x4f9: V448 = CALL V447 V422 0x0 V439 V440 V439 0x20
0x4fa: V449 = ISZERO V448
0x4fb: V450 = 0x0
0x4fe: THROWI V449
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V422, 0x8620410b, V436, 0x20, V439, V440, V439, 0x0, V422]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, V375, V414, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V422, 0x8620410b, V436]

================================

Block 0x4ff
[0x4ff:0x54a]
---
Predecessors: [0x4f5]
Successors: [0x54b]
---
0x4ff POP
0x500 POP
0x501 POP
0x502 PUSH1 0x40
0x504 MLOAD
0x505 DUP1
0x506 MLOAD
0x507 SWAP1
0x508 PUSH1 0x20
0x50a ADD
0x50b POP
0x50c SWAP6
0x50d POP
0x50e DUP1
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 AND
0x518 PUSH4 0x4b750334
0x51d PUSH1 0x0
0x51f PUSH1 0x40
0x521 MLOAD
0x522 PUSH1 0x20
0x524 ADD
0x525 MSTORE
0x526 PUSH1 0x40
0x528 MLOAD
0x529 DUP2
0x52a PUSH1 0xe0
0x52c PUSH1 0x2
0x52e EXP
0x52f MUL
0x530 DUP2
0x531 MSTORE
0x532 PUSH1 0x4
0x534 ADD
0x535 DUP1
0x536 SWAP1
0x537 POP
0x538 PUSH1 0x20
0x53a PUSH1 0x40
0x53c MLOAD
0x53d DUP1
0x53e DUP4
0x53f SUB
0x540 DUP2
0x541 PUSH1 0x0
0x543 DUP8
0x544 DUP1
0x545 EXTCODESIZE
0x546 ISZERO
0x547 PUSH2 0x0
0x54a JUMPI
---
0x502: V451 = 0x40
0x504: V452 = M[0x40]
0x506: V453 = M[V452]
0x508: V454 = 0x20
0x50a: V455 = ADD 0x20 V452
0x50f: V456 = 0x1
0x511: V457 = 0xa0
0x513: V458 = 0x2
0x515: V459 = EXP 0x2 0xa0
0x516: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x518: V462 = 0x4b750334
0x51d: V463 = 0x0
0x51f: V464 = 0x40
0x521: V465 = M[0x40]
0x522: V466 = 0x20
0x524: V467 = ADD 0x20 V465
0x525: M[V467] = 0x0
0x526: V468 = 0x40
0x528: V469 = M[0x40]
0x52a: V470 = 0xe0
0x52c: V471 = 0x2
0x52e: V472 = EXP 0x2 0xe0
0x52f: V473 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4b750334
0x531: M[V469] = 0x4b75033400000000000000000000000000000000000000000000000000000000
0x532: V474 = 0x4
0x534: V475 = ADD 0x4 V469
0x538: V476 = 0x20
0x53a: V477 = 0x40
0x53c: V478 = M[0x40]
0x53f: V479 = SUB V475 V478
0x541: V480 = 0x0
0x545: V481 = EXTCODESIZE V461
0x546: V482 = ISZERO V481
0x547: V483 = 0x0
0x54a: THROWI V482
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V422, 0x8620410b, V436]
Stack pops: 9
Stack additions: [V453, S7, S6, S5, S4, S3, V461, 0x4b750334, V475, 0x20, V478, V479, V478, 0x0, V461]
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, 0x0, 0x0, 0x0, 0x0, V78, V461, 0x4b750334, V475, 0x20, V478, V479, V478, 0x0, V461]

================================

Block 0x54b
[0x54b:0x554]
---
Predecessors: [0x4ff]
Successors: [0x555]
---
0x54b PUSH1 0x32
0x54d GAS
0x54e SUB
0x54f CALL
0x550 ISZERO
0x551 PUSH2 0x0
0x554 JUMPI
---
0x54b: V484 = 0x32
0x54d: V485 = GAS
0x54e: V486 = SUB V485 0x32
0x54f: V487 = CALL V486 V461 0x0 V478 V479 V478 0x20
0x550: V488 = ISZERO V487
0x551: V489 = 0x0
0x554: THROWI V488
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, 0x0, 0x0, 0x0, 0x0, V78, V461, 0x4b750334, V475, 0x20, V478, V479, V478, 0x0, V461]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, 0x0, 0x0, 0x0, 0x0, V78, V461, 0x4b750334, V475]

================================

Block 0x555
[0x555:0x5a0]
---
Predecessors: [0x54b]
Successors: [0x5a1]
---
0x555 POP
0x556 POP
0x557 POP
0x558 PUSH1 0x40
0x55a MLOAD
0x55b DUP1
0x55c MLOAD
0x55d SWAP1
0x55e PUSH1 0x20
0x560 ADD
0x561 POP
0x562 SWAP5
0x563 POP
0x564 DUP1
0x565 PUSH1 0x1
0x567 PUSH1 0xa0
0x569 PUSH1 0x2
0x56b EXP
0x56c SUB
0x56d AND
0x56e PUSH4 0x976a8435
0x573 PUSH1 0x0
0x575 PUSH1 0x40
0x577 MLOAD
0x578 PUSH1 0x20
0x57a ADD
0x57b MSTORE
0x57c PUSH1 0x40
0x57e MLOAD
0x57f DUP2
0x580 PUSH1 0xe0
0x582 PUSH1 0x2
0x584 EXP
0x585 MUL
0x586 DUP2
0x587 MSTORE
0x588 PUSH1 0x4
0x58a ADD
0x58b DUP1
0x58c SWAP1
0x58d POP
0x58e PUSH1 0x20
0x590 PUSH1 0x40
0x592 MLOAD
0x593 DUP1
0x594 DUP4
0x595 SUB
0x596 DUP2
0x597 PUSH1 0x0
0x599 DUP8
0x59a DUP1
0x59b EXTCODESIZE
0x59c ISZERO
0x59d PUSH2 0x0
0x5a0 JUMPI
---
0x558: V490 = 0x40
0x55a: V491 = M[0x40]
0x55c: V492 = M[V491]
0x55e: V493 = 0x20
0x560: V494 = ADD 0x20 V491
0x565: V495 = 0x1
0x567: V496 = 0xa0
0x569: V497 = 0x2
0x56b: V498 = EXP 0x2 0xa0
0x56c: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56d: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x56e: V501 = 0x976a8435
0x573: V502 = 0x0
0x575: V503 = 0x40
0x577: V504 = M[0x40]
0x578: V505 = 0x20
0x57a: V506 = ADD 0x20 V504
0x57b: M[V506] = 0x0
0x57c: V507 = 0x40
0x57e: V508 = M[0x40]
0x580: V509 = 0xe0
0x582: V510 = 0x2
0x584: V511 = EXP 0x2 0xe0
0x585: V512 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x976a8435
0x587: M[V508] = 0x976a843500000000000000000000000000000000000000000000000000000000
0x588: V513 = 0x4
0x58a: V514 = ADD 0x4 V508
0x58e: V515 = 0x20
0x590: V516 = 0x40
0x592: V517 = M[0x40]
0x595: V518 = SUB V514 V517
0x597: V519 = 0x0
0x59b: V520 = EXTCODESIZE V500
0x59c: V521 = ISZERO V520
0x59d: V522 = 0x0
0x5a0: THROWI V521
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, 0x0, 0x0, 0x0, 0x0, V78, V461, 0x4b750334, V475]
Stack pops: 8
Stack additions: [V492, S6, S5, S4, S3, V500, 0x976a8435, V514, 0x20, V517, V518, V517, 0x0, V500]
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, 0x0, 0x0, 0x0, V78, V500, 0x976a8435, V514, 0x20, V517, V518, V517, 0x0, V500]

================================

Block 0x5a1
[0x5a1:0x5aa]
---
Predecessors: [0x555]
Successors: [0x5ab]
---
0x5a1 PUSH1 0x32
0x5a3 GAS
0x5a4 SUB
0x5a5 CALL
0x5a6 ISZERO
0x5a7 PUSH2 0x0
0x5aa JUMPI
---
0x5a1: V523 = 0x32
0x5a3: V524 = GAS
0x5a4: V525 = SUB V524 0x32
0x5a5: V526 = CALL V525 V500 0x0 V517 V518 V517 0x20
0x5a6: V527 = ISZERO V526
0x5a7: V528 = 0x0
0x5aa: THROWI V527
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, 0x0, 0x0, 0x0, V78, V500, 0x976a8435, V514, 0x20, V517, V518, V517, 0x0, V500]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, 0x0, 0x0, 0x0, V78, V500, 0x976a8435, V514]

================================

Block 0x5ab
[0x5ab:0x5f6]
---
Predecessors: [0x5a1]
Successors: [0x5f7]
---
0x5ab POP
0x5ac POP
0x5ad POP
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 DUP1
0x5b2 MLOAD
0x5b3 SWAP1
0x5b4 PUSH1 0x20
0x5b6 ADD
0x5b7 POP
0x5b8 SWAP4
0x5b9 POP
0x5ba DUP1
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf PUSH1 0x2
0x5c1 EXP
0x5c2 SUB
0x5c3 AND
0x5c4 PUSH4 0xb1099347
0x5c9 PUSH1 0x0
0x5cb PUSH1 0x40
0x5cd MLOAD
0x5ce PUSH1 0x20
0x5d0 ADD
0x5d1 MSTORE
0x5d2 PUSH1 0x40
0x5d4 MLOAD
0x5d5 DUP2
0x5d6 PUSH1 0xe0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db MUL
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x4
0x5e0 ADD
0x5e1 DUP1
0x5e2 SWAP1
0x5e3 POP
0x5e4 PUSH1 0x20
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 DUP1
0x5ea DUP4
0x5eb SUB
0x5ec DUP2
0x5ed PUSH1 0x0
0x5ef DUP8
0x5f0 DUP1
0x5f1 EXTCODESIZE
0x5f2 ISZERO
0x5f3 PUSH2 0x0
0x5f6 JUMPI
---
0x5ae: V529 = 0x40
0x5b0: V530 = M[0x40]
0x5b2: V531 = M[V530]
0x5b4: V532 = 0x20
0x5b6: V533 = ADD 0x20 V530
0x5bb: V534 = 0x1
0x5bd: V535 = 0xa0
0x5bf: V536 = 0x2
0x5c1: V537 = EXP 0x2 0xa0
0x5c2: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c3: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x5c4: V540 = 0xb1099347
0x5c9: V541 = 0x0
0x5cb: V542 = 0x40
0x5cd: V543 = M[0x40]
0x5ce: V544 = 0x20
0x5d0: V545 = ADD 0x20 V543
0x5d1: M[V545] = 0x0
0x5d2: V546 = 0x40
0x5d4: V547 = M[0x40]
0x5d6: V548 = 0xe0
0x5d8: V549 = 0x2
0x5da: V550 = EXP 0x2 0xe0
0x5db: V551 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1099347
0x5dd: M[V547] = 0xb109934700000000000000000000000000000000000000000000000000000000
0x5de: V552 = 0x4
0x5e0: V553 = ADD 0x4 V547
0x5e4: V554 = 0x20
0x5e6: V555 = 0x40
0x5e8: V556 = M[0x40]
0x5eb: V557 = SUB V553 V556
0x5ed: V558 = 0x0
0x5f1: V559 = EXTCODESIZE V539
0x5f2: V560 = ISZERO V559
0x5f3: V561 = 0x0
0x5f6: THROWI V560
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, 0x0, 0x0, 0x0, V78, V500, 0x976a8435, V514]
Stack pops: 7
Stack additions: [V531, S5, S4, S3, V539, 0xb1099347, V553, 0x20, V556, V557, V556, 0x0, V539]
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, 0x0, 0x0, V78, V539, 0xb1099347, V553, 0x20, V556, V557, V556, 0x0, V539]

================================

Block 0x5f7
[0x5f7:0x600]
---
Predecessors: [0x5ab]
Successors: [0x601]
---
0x5f7 PUSH1 0x32
0x5f9 GAS
0x5fa SUB
0x5fb CALL
0x5fc ISZERO
0x5fd PUSH2 0x0
0x600 JUMPI
---
0x5f7: V562 = 0x32
0x5f9: V563 = GAS
0x5fa: V564 = SUB V563 0x32
0x5fb: V565 = CALL V564 V539 0x0 V556 V557 V556 0x20
0x5fc: V566 = ISZERO V565
0x5fd: V567 = 0x0
0x600: THROWI V566
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, 0x0, 0x0, V78, V539, 0xb1099347, V553, 0x20, V556, V557, V556, 0x0, V539]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, 0x0, 0x0, V78, V539, 0xb1099347, V553]

================================

Block 0x601
[0x601:0x64c]
---
Predecessors: [0x5f7]
Successors: [0x64d]
---
0x601 POP
0x602 POP
0x603 POP
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP1
0x608 MLOAD
0x609 SWAP1
0x60a PUSH1 0x20
0x60c ADD
0x60d POP
0x60e SWAP3
0x60f POP
0x610 DUP1
0x611 PUSH1 0x1
0x613 PUSH1 0xa0
0x615 PUSH1 0x2
0x617 EXP
0x618 SUB
0x619 AND
0x61a PUSH4 0x4ca50f59
0x61f PUSH1 0x0
0x621 PUSH1 0x40
0x623 MLOAD
0x624 PUSH1 0x20
0x626 ADD
0x627 MSTORE
0x628 PUSH1 0x40
0x62a MLOAD
0x62b DUP2
0x62c PUSH1 0xe0
0x62e PUSH1 0x2
0x630 EXP
0x631 MUL
0x632 DUP2
0x633 MSTORE
0x634 PUSH1 0x4
0x636 ADD
0x637 DUP1
0x638 SWAP1
0x639 POP
0x63a PUSH1 0x20
0x63c PUSH1 0x40
0x63e MLOAD
0x63f DUP1
0x640 DUP4
0x641 SUB
0x642 DUP2
0x643 PUSH1 0x0
0x645 DUP8
0x646 DUP1
0x647 EXTCODESIZE
0x648 ISZERO
0x649 PUSH2 0x0
0x64c JUMPI
---
0x604: V568 = 0x40
0x606: V569 = M[0x40]
0x608: V570 = M[V569]
0x60a: V571 = 0x20
0x60c: V572 = ADD 0x20 V569
0x611: V573 = 0x1
0x613: V574 = 0xa0
0x615: V575 = 0x2
0x617: V576 = EXP 0x2 0xa0
0x618: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x619: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x61a: V579 = 0x4ca50f59
0x61f: V580 = 0x0
0x621: V581 = 0x40
0x623: V582 = M[0x40]
0x624: V583 = 0x20
0x626: V584 = ADD 0x20 V582
0x627: M[V584] = 0x0
0x628: V585 = 0x40
0x62a: V586 = M[0x40]
0x62c: V587 = 0xe0
0x62e: V588 = 0x2
0x630: V589 = EXP 0x2 0xe0
0x631: V590 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4ca50f59
0x633: M[V586] = 0x4ca50f5900000000000000000000000000000000000000000000000000000000
0x634: V591 = 0x4
0x636: V592 = ADD 0x4 V586
0x63a: V593 = 0x20
0x63c: V594 = 0x40
0x63e: V595 = M[0x40]
0x641: V596 = SUB V592 V595
0x643: V597 = 0x0
0x647: V598 = EXTCODESIZE V578
0x648: V599 = ISZERO V598
0x649: V600 = 0x0
0x64c: THROWI V599
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, 0x0, 0x0, V78, V539, 0xb1099347, V553]
Stack pops: 6
Stack additions: [V570, S4, S3, V578, 0x4ca50f59, V592, 0x20, V595, V596, V595, 0x0, V578]
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, V570, 0x0, V78, V578, 0x4ca50f59, V592, 0x20, V595, V596, V595, 0x0, V578]

================================

Block 0x64d
[0x64d:0x656]
---
Predecessors: [0x601]
Successors: [0x657]
---
0x64d PUSH1 0x32
0x64f GAS
0x650 SUB
0x651 CALL
0x652 ISZERO
0x653 PUSH2 0x0
0x656 JUMPI
---
0x64d: V601 = 0x32
0x64f: V602 = GAS
0x650: V603 = SUB V602 0x32
0x651: V604 = CALL V603 V578 0x0 V595 V596 V595 0x20
0x652: V605 = ISZERO V604
0x653: V606 = 0x0
0x656: THROWI V605
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, V570, 0x0, V78, V578, 0x4ca50f59, V592, 0x20, V595, V596, V595, 0x0, V578]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, V570, 0x0, V78, V578, 0x4ca50f59, V592]

================================

Block 0x657
[0x657:0x65f]
---
Predecessors: [0x64d]
Successors: [0x660]
---
0x657 POP
0x658 POP
0x659 PUSH1 0x40
0x65b MLOAD
0x65c MLOAD
0x65d SWAP3
0x65e POP
0x65f POP
---
0x659: V607 = 0x40
0x65b: V608 = M[0x40]
0x65c: V609 = M[V608]
---
Entry stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, V570, 0x0, V78, V578, 0x4ca50f59, V592]
Stack pops: 5
Stack additions: [V609, S3]
Exit stack: [V10, 0xcf, V78, V336, V375, V414, V453, V492, V531, V570, V609, V78]

================================

Block 0x660
[0x660:0x660]
---
Predecessors: [0x3de, 0x657]
Successors: [0x661]
---
0x660 JUMPDEST
---
0x660: JUMPDEST 
---
Entry stack: [V10, 0xcf, V78, V336, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcf, V78, V336, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x661
[0x661:0x66c]
---
Predecessors: [0x660]
Successors: [0xcf]
---
0x661 JUMPDEST
0x662 POP
0x663 SWAP2
0x664 SWAP4
0x665 SWAP6
0x666 SWAP8
0x667 POP
0x668 SWAP2
0x669 SWAP4
0x66a SWAP6
0x66b SWAP8
0x66c JUMP
---
0x661: JUMPDEST 
0x66c: JUMP 0xcf
---
Entry stack: [V10, 0xcf, V78, V336, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1]
Exit stack: [V10, V336, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x66d
[0x66d:0x67b]
---
Predecessors: [0x126]
Successors: [0x7c]
---
0x66d JUMPDEST
0x66e PUSH1 0x0
0x670 SLOAD
0x671 PUSH1 0x1
0x673 PUSH1 0xa0
0x675 PUSH1 0x2
0x677 EXP
0x678 SUB
0x679 AND
0x67a DUP2
0x67b JUMP
---
0x66d: JUMPDEST 
0x66e: V610 = 0x0
0x670: V611 = S[0x0]
0x671: V612 = 0x1
0x673: V613 = 0xa0
0x675: V614 = 0x2
0x677: V615 = EXP 0x2 0xa0
0x678: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x679: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x67b: JUMP 0x7c
---
Entry stack: [V10, 0x7c]
Stack pops: 1
Stack additions: [S0, V617]
Exit stack: [V10, 0x7c, V617]

================================

Block 0x67c
[0x67c:0x692]
---
Predecessors: [0x14f]
Successors: [0x693, 0x697]
---
0x67c JUMPDEST
0x67d PUSH1 0x0
0x67f SLOAD
0x680 CALLER
0x681 PUSH1 0x1
0x683 PUSH1 0xa0
0x685 PUSH1 0x2
0x687 EXP
0x688 SUB
0x689 SWAP1
0x68a DUP2
0x68b AND
0x68c SWAP2
0x68d AND
0x68e EQ
0x68f PUSH2 0x697
0x692 JUMPI
---
0x67c: JUMPDEST 
0x67d: V618 = 0x0
0x67f: V619 = S[0x0]
0x680: V620 = CALLER
0x681: V621 = 0x1
0x683: V622 = 0xa0
0x685: V623 = 0x2
0x687: V624 = EXP 0x2 0xa0
0x688: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68b: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x68d: V627 = AND V619 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V628 = EQ V627 V626
0x68f: V629 = 0x697
0x692: JUMPI 0x697 V628
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x693
[0x693:0x696]
---
Predecessors: [0x67c]
Successors: []
---
0x693 PUSH2 0x0
0x696 JUMP
---
0x693: V630 = 0x0
0x696: THROW 
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x697
[0x697:0x700]
---
Predecessors: [0x67c]
Successors: [0x701]
---
0x697 JUMPDEST
0x698 PUSH1 0x0
0x69a DUP1
0x69b SLOAD
0x69c PUSH1 0x40
0x69e MLOAD
0x69f PUSH1 0x1
0x6a1 PUSH1 0xa0
0x6a3 PUSH1 0x2
0x6a5 EXP
0x6a6 SUB
0x6a7 DUP1
0x6a8 DUP6
0x6a9 AND
0x6aa SWAP4
0x6ab SWAP3
0x6ac AND
0x6ad SWAP2
0x6ae PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6cf SWAP2
0x6d0 LOG3
0x6d1 PUSH1 0x0
0x6d3 DUP1
0x6d4 SLOAD
0x6d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ea NOT
0x6eb AND
0x6ec PUSH13 0x1000000000000000000000000
0x6fa DUP4
0x6fb DUP2
0x6fc MUL
0x6fd DIV
0x6fe OR
0x6ff SWAP1
0x700 SSTORE
---
0x697: JUMPDEST 
0x698: V631 = 0x0
0x69b: V632 = S[0x0]
0x69c: V633 = 0x40
0x69e: V634 = M[0x40]
0x69f: V635 = 0x1
0x6a1: V636 = 0xa0
0x6a3: V637 = 0x2
0x6a5: V638 = EXP 0x2 0xa0
0x6a6: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a9: V640 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V641 = AND V632 0xffffffffffffffffffffffffffffffffffffffff
0x6ae: V642 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6d0: LOG V634 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V641 V640
0x6d1: V643 = 0x0
0x6d4: V644 = S[0x0]
0x6d5: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ea: V646 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V647 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V644
0x6ec: V648 = 0x1000000000000000000000000
0x6fc: V649 = MUL 0x1000000000000000000000000 V132
0x6fd: V650 = DIV V649 0x1000000000000000000000000
0x6fe: V651 = OR V650 V647
0x700: S[0x0] = V651
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5b, V132]

================================

Block 0x701
[0x701:0x701]
---
Predecessors: [0x697]
Successors: [0x702]
---
0x701 JUMPDEST
---
0x701: JUMPDEST 
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x702
[0x702:0x704]
---
Predecessors: [0x701]
Successors: [0x5b]
---
0x702 JUMPDEST
0x703 POP
0x704 JUMP
---
0x702: JUMPDEST 
0x704: JUMP 0x5b
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x705
[0x705:0x70e]
---
Predecessors: []
Successors: [0x70f]
---
0x705 PUSH1 0x60
0x707 PUSH1 0x40
0x709 MSTORE
0x70a CALLVALUE
0x70b PUSH2 0x0
0x70e JUMPI
---
0x705: V652 = 0x60
0x707: V653 = 0x40
0x709: M[0x40] = 0x60
0x70a: V654 = CALLVALUE
0x70b: V655 = 0x0
0x70e: THROWI V654
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x70f
[0x70f:0x742]
---
Predecessors: [0x705]
Successors: [0x743]
---
0x70f PUSH1 0x40
0x711 MLOAD
0x712 PUSH1 0xc0
0x714 DUP1
0x715 PUSH2 0xb50
0x718 DUP4
0x719 CODECOPY
0x71a DUP2
0x71b ADD
0x71c PUSH1 0x40
0x71e SWAP1
0x71f DUP2
0x720 MSTORE
0x721 DUP2
0x722 MLOAD
0x723 PUSH1 0x20
0x725 DUP4
0x726 ADD
0x727 MLOAD
0x728 SWAP2
0x729 DUP4
0x72a ADD
0x72b MLOAD
0x72c PUSH1 0x60
0x72e DUP5
0x72f ADD
0x730 MLOAD
0x731 PUSH1 0x80
0x733 DUP6
0x734 ADD
0x735 MLOAD
0x736 PUSH1 0xa0
0x738 SWAP1
0x739 SWAP6
0x73a ADD
0x73b MLOAD
0x73c SWAP3
0x73d SWAP5
0x73e SWAP2
0x73f SWAP3
0x740 SWAP1
0x741 SWAP2
0x742 SWAP1
---
0x70f: V656 = 0x40
0x711: V657 = M[0x40]
0x712: V658 = 0xc0
0x715: V659 = 0xb50
0x719: CODECOPY V657 0xb50 0xc0
0x71b: V660 = ADD V657 0xc0
0x71c: V661 = 0x40
0x720: M[0x40] = V660
0x722: V662 = M[V657]
0x723: V663 = 0x20
0x726: V664 = ADD V657 0x20
0x727: V665 = M[V664]
0x72a: V666 = ADD V657 0x40
0x72b: V667 = M[V666]
0x72c: V668 = 0x60
0x72f: V669 = ADD V657 0x60
0x730: V670 = M[V669]
0x731: V671 = 0x80
0x734: V672 = ADD V657 0x80
0x735: V673 = M[V672]
0x736: V674 = 0xa0
0x73a: V675 = ADD V657 0xa0
0x73b: V676 = M[V675]
---
Entry stack: []
Stack pops: 0
Stack additions: [V662, V665, V667, V670, V673, V676]
Exit stack: [V662, V665, V667, V670, V673, V676]

================================

Block 0x743
[0x743:0x743]
---
Predecessors: [0x70f]
Successors: [0x744]
---
0x743 JUMPDEST
---
0x743: JUMPDEST 
---
Entry stack: [V662, V665, V667, V670, V673, V676]
Stack pops: 0
Stack additions: []
Exit stack: [V662, V665, V667, V670, V673, V676]

================================

Block 0x744
[0x744:0x767]
---
Predecessors: [0x743]
Successors: [0x768]
---
0x744 JUMPDEST
0x745 PUSH1 0x0
0x747 DUP1
0x748 SLOAD
0x749 PUSH1 0x1
0x74b PUSH1 0xa0
0x74d PUSH1 0x2
0x74f EXP
0x750 SUB
0x751 NOT
0x752 AND
0x753 PUSH13 0x1000000000000000000000000
0x761 CALLER
0x762 DUP2
0x763 MUL
0x764 DIV
0x765 OR
0x766 SWAP1
0x767 SSTORE
---
0x744: JUMPDEST 
0x745: V677 = 0x0
0x748: V678 = S[0x0]
0x749: V679 = 0x1
0x74b: V680 = 0xa0
0x74d: V681 = 0x2
0x74f: V682 = EXP 0x2 0xa0
0x750: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x751: V684 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x752: V685 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V678
0x753: V686 = 0x1000000000000000000000000
0x761: V687 = CALLER
0x763: V688 = MUL 0x1000000000000000000000000 V687
0x764: V689 = DIV V688 0x1000000000000000000000000
0x765: V690 = OR V689 V685
0x767: S[0x0] = V690
---
Entry stack: [V662, V665, V667, V670, V673, V676]
Stack pops: 0
Stack additions: []
Exit stack: [V662, V665, V667, V670, V673, V676]

================================

Block 0x768
[0x768:0x82a]
---
Predecessors: [0x744]
Successors: [0x82b]
---
0x768 JUMPDEST
0x769 PUSH1 0x1
0x76b DUP1
0x76c SLOAD
0x76d PUSH1 0x1
0x76f PUSH1 0xa0
0x771 PUSH1 0x2
0x773 EXP
0x774 SUB
0x775 NOT
0x776 AND
0x777 PUSH13 0x1000000000000000000000000
0x785 DUP9
0x786 DUP2
0x787 MUL
0x788 DIV
0x789 OR
0x78a SWAP1
0x78b SSTORE
0x78c PUSH1 0x2
0x78e DUP6
0x78f SWAP1
0x790 SSTORE
0x791 PUSH1 0x3
0x793 DUP5
0x794 SWAP1
0x795 SSTORE
0x796 PUSH1 0x4
0x798 DUP4
0x799 SWAP1
0x79a SSTORE
0x79b PUSH1 0x5
0x79d DUP1
0x79e SLOAD
0x79f PUSH1 0xff
0x7a1 NOT
0x7a2 AND
0x7a3 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x7c4 DUP5
0x7c5 DUP2
0x7c6 MUL
0x7c7 DUP2
0x7c8 SWAP1
0x7c9 DIV
0x7ca SWAP2
0x7cb SWAP1
0x7cc SWAP2
0x7cd OR
0x7ce PUSH2 0xff00
0x7d1 NOT
0x7d2 AND
0x7d3 PUSH2 0x100
0x7d6 DUP5
0x7d7 DUP4
0x7d8 MUL
0x7d9 SWAP3
0x7da SWAP1
0x7db SWAP3
0x7dc DIV
0x7dd DUP3
0x7de MUL
0x7df OR
0x7e0 SWAP2
0x7e1 DUP3
0x7e2 SWAP1
0x7e3 SSTORE
0x7e4 PUSH1 0x40
0x7e6 DUP1
0x7e7 MLOAD
0x7e8 PUSH1 0xff
0x7ea DUP1
0x7eb DUP6
0x7ec AND
0x7ed ISZERO
0x7ee ISZERO
0x7ef DUP3
0x7f0 MSTORE
0x7f1 SWAP3
0x7f2 SWAP1
0x7f3 SWAP4
0x7f4 DIV
0x7f5 SWAP1
0x7f6 SWAP2
0x7f7 AND
0x7f8 ISZERO
0x7f9 ISZERO
0x7fa PUSH1 0x20
0x7fc DUP4
0x7fd ADD
0x7fe MSTORE
0x7ff DUP1
0x800 MLOAD
0x801 PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x822 SWAP3
0x823 DUP2
0x824 SWAP1
0x825 SUB
0x826 SWAP1
0x827 SWAP2
0x828 ADD
0x829 SWAP1
0x82a LOG1
---
0x768: JUMPDEST 
0x769: V691 = 0x1
0x76c: V692 = S[0x1]
0x76d: V693 = 0x1
0x76f: V694 = 0xa0
0x771: V695 = 0x2
0x773: V696 = EXP 0x2 0xa0
0x774: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x775: V698 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x776: V699 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V692
0x777: V700 = 0x1000000000000000000000000
0x787: V701 = MUL 0x1000000000000000000000000 V662
0x788: V702 = DIV V701 0x1000000000000000000000000
0x789: V703 = OR V702 V699
0x78b: S[0x1] = V703
0x78c: V704 = 0x2
0x790: S[0x2] = V665
0x791: V705 = 0x3
0x795: S[0x3] = V667
0x796: V706 = 0x4
0x79a: S[0x4] = V670
0x79b: V707 = 0x5
0x79e: V708 = S[0x5]
0x79f: V709 = 0xff
0x7a1: V710 = NOT 0xff
0x7a2: V711 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V708
0x7a3: V712 = 0x100000000000000000000000000000000000000000000000000000000000000
0x7c6: V713 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V673
0x7c9: V714 = DIV V713 0x100000000000000000000000000000000000000000000000000000000000000
0x7cd: V715 = OR V714 V711
0x7ce: V716 = 0xff00
0x7d1: V717 = NOT 0xff00
0x7d2: V718 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V715
0x7d3: V719 = 0x100
0x7d8: V720 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V676
0x7dc: V721 = DIV V720 0x100000000000000000000000000000000000000000000000000000000000000
0x7de: V722 = MUL 0x100 V721
0x7df: V723 = OR V722 V718
0x7e3: S[0x5] = V723
0x7e4: V724 = 0x40
0x7e7: V725 = M[0x40]
0x7e8: V726 = 0xff
0x7ec: V727 = AND V723 0xff
0x7ed: V728 = ISZERO V727
0x7ee: V729 = ISZERO V728
0x7f0: M[V725] = V729
0x7f4: V730 = DIV V723 0x100
0x7f7: V731 = AND 0xff V730
0x7f8: V732 = ISZERO V731
0x7f9: V733 = ISZERO V732
0x7fa: V734 = 0x20
0x7fd: V735 = ADD V725 0x20
0x7fe: M[V735] = V733
0x800: V736 = M[0x40]
0x801: V737 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x825: V738 = SUB V725 V736
0x828: V739 = ADD 0x40 V738
0x82a: LOG V736 V739 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: [V662, V665, V667, V670, V673, V676]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V662, V665, V667, V670, V673, V676]

================================

Block 0x82b
[0x82b:0x831]
---
Predecessors: [0x768]
Successors: [0x832]
---
0x82b JUMPDEST
0x82c POP
0x82d POP
0x82e POP
0x82f POP
0x830 POP
0x831 POP
---
0x82b: JUMPDEST 
---
Entry stack: [V662, V665, V667, V670, V673, V676]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x832
[0x832:0x84a]
---
Predecessors: [0x82b]
Successors: [0x84b]
---
0x832 JUMPDEST
0x833 PUSH2 0xa15
0x836 DUP1
0x837 PUSH2 0x13b
0x83a PUSH1 0x0
0x83c CODECOPY
0x83d PUSH1 0x0
0x83f RETURN
0x840 PUSH1 0x60
0x842 PUSH1 0x40
0x844 MSTORE
0x845 CALLDATASIZE
0x846 ISZERO
0x847 PUSH2 0xb9
0x84a JUMPI
---
0x832: JUMPDEST 
0x833: V740 = 0xa15
0x837: V741 = 0x13b
0x83a: V742 = 0x0
0x83c: CODECOPY 0x0 0x13b 0xa15
0x83d: V743 = 0x0
0x83f: RETURN 0x0 0xa15
0x840: V744 = 0x60
0x842: V745 = 0x40
0x844: M[0x40] = 0x60
0x845: V746 = CALLDATASIZE
0x846: V747 = ISZERO V746
0x847: V748 = 0xb9
0x84a: THROWI V747
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x84b
[0x84b:0x85e]
---
Predecessors: [0x832]
Successors: [0x85f]
---
0x84b PUSH1 0xe0
0x84d PUSH1 0x2
0x84f EXP
0x850 PUSH1 0x0
0x852 CALLDATALOAD
0x853 DIV
0x854 PUSH4 0x2170ebf7
0x859 DUP2
0x85a EQ
0x85b PUSH2 0xca
0x85e JUMPI
---
0x84b: V749 = 0xe0
0x84d: V750 = 0x2
0x84f: V751 = EXP 0x2 0xe0
0x850: V752 = 0x0
0x852: V753 = CALLDATALOAD 0x0
0x853: V754 = DIV V753 0x100000000000000000000000000000000000000000000000000000000
0x854: V755 = 0x2170ebf7
0x85a: V756 = EQ V754 0x2170ebf7
0x85b: V757 = 0xca
0x85e: THROWI V756
---
Entry stack: []
Stack pops: 0
Stack additions: [V754]
Exit stack: [V754]

================================

Block 0x85f
[0x85f:0x869]
---
Predecessors: [0x84b]
Successors: [0x86a]
---
0x85f DUP1
0x860 PUSH4 0x38d52e0f
0x865 EQ
0x866 PUSH2 0xee
0x869 JUMPI
---
0x860: V758 = 0x38d52e0f
0x865: V759 = EQ 0x38d52e0f V754
0x866: V760 = 0xee
0x869: THROWI V759
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x86a
[0x86a:0x874]
---
Predecessors: [0x85f]
Successors: [0x875]
---
0x86a DUP1
0x86b PUSH4 0x4b750334
0x870 EQ
0x871 PUSH2 0x117
0x874 JUMPI
---
0x86b: V761 = 0x4b750334
0x870: V762 = EQ 0x4b750334 V754
0x871: V763 = 0x117
0x874: THROWI V762
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x875
[0x875:0x87f]
---
Predecessors: [0x86a]
Successors: [0x880]
---
0x875 DUP1
0x876 PUSH4 0x4ca50f59
0x87b EQ
0x87c PUSH2 0x136
0x87f JUMPI
---
0x876: V764 = 0x4ca50f59
0x87b: V765 = EQ 0x4ca50f59 V754
0x87c: V766 = 0x136
0x87f: THROWI V765
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x880
[0x880:0x88a]
---
Predecessors: [0x875]
Successors: [0x88b]
---
0x880 DUP1
0x881 PUSH4 0x8620410b
0x886 EQ
0x887 PUSH2 0x157
0x88a JUMPI
---
0x881: V767 = 0x8620410b
0x886: V768 = EQ 0x8620410b V754
0x887: V769 = 0x157
0x88a: THROWI V768
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x88b
[0x88b:0x895]
---
Predecessors: [0x880]
Successors: [0x896]
---
0x88b DUP1
0x88c PUSH4 0x8da5cb5b
0x891 EQ
0x892 PUSH2 0x176
0x895 JUMPI
---
0x88c: V770 = 0x8da5cb5b
0x891: V771 = EQ 0x8da5cb5b V754
0x892: V772 = 0x176
0x895: THROWI V771
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x896
[0x896:0x8a0]
---
Predecessors: [0x88b]
Successors: [0x8a1]
---
0x896 DUP1
0x897 PUSH4 0x919f8cfc
0x89c EQ
0x89d PUSH2 0x19f
0x8a0 JUMPI
---
0x897: V773 = 0x919f8cfc
0x89c: V774 = EQ 0x919f8cfc V754
0x89d: V775 = 0x19f
0x8a0: THROWI V774
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8a1
[0x8a1:0x8ab]
---
Predecessors: [0x896]
Successors: [0x8ac]
---
0x8a1 DUP1
0x8a2 PUSH4 0x976a8435
0x8a7 EQ
0x8a8 PUSH2 0x1a9
0x8ab JUMPI
---
0x8a2: V776 = 0x976a8435
0x8a7: V777 = EQ 0x976a8435 V754
0x8a8: V778 = 0x1a9
0x8ab: THROWI V777
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8ac
[0x8ac:0x8b6]
---
Predecessors: [0x8a1]
Successors: [0x8b7]
---
0x8ac DUP1
0x8ad PUSH4 0xa7abc124
0x8b2 EQ
0x8b3 PUSH2 0x1c8
0x8b6 JUMPI
---
0x8ad: V779 = 0xa7abc124
0x8b2: V780 = EQ 0xa7abc124 V754
0x8b3: V781 = 0x1c8
0x8b6: THROWI V780
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8b7
[0x8b7:0x8c1]
---
Predecessors: [0x8ac]
Successors: [0x8c2]
---
0x8b7 DUP1
0x8b8 PUSH4 0xb1099347
0x8bd EQ
0x8be PUSH2 0x1dd
0x8c1 JUMPI
---
0x8b8: V782 = 0xb1099347
0x8bd: V783 = EQ 0xb1099347 V754
0x8be: V784 = 0x1dd
0x8c1: THROWI V783
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8c2
[0x8c2:0x8cc]
---
Predecessors: [0x8b7]
Successors: [0x8cd]
---
0x8c2 DUP1
0x8c3 PUSH4 0xc34764cf
0x8c8 EQ
0x8c9 PUSH2 0x1fe
0x8cc JUMPI
---
0x8c3: V785 = 0xc34764cf
0x8c8: V786 = EQ 0xc34764cf V754
0x8c9: V787 = 0x1fe
0x8cc: THROWI V786
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8cd
[0x8cd:0x8d7]
---
Predecessors: [0x8c2]
Successors: [0x8d8]
---
0x8cd DUP1
0x8ce PUSH4 0xc60ccb0e
0x8d3 EQ
0x8d4 PUSH2 0x225
0x8d7 JUMPI
---
0x8ce: V788 = 0xc60ccb0e
0x8d3: V789 = EQ 0xc60ccb0e V754
0x8d4: V790 = 0x225
0x8d7: THROWI V789
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8d8
[0x8d8:0x8e2]
---
Predecessors: [0x8cd]
Successors: [0x8e3]
---
0x8d8 DUP1
0x8d9 PUSH4 0xcd53a3b7
0x8de EQ
0x8df PUSH2 0x22f
0x8e2 JUMPI
---
0x8d9: V791 = 0xcd53a3b7
0x8de: V792 = EQ 0xcd53a3b7 V754
0x8df: V793 = 0x22f
0x8e2: THROWI V792
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8e3
[0x8e3:0x8ed]
---
Predecessors: [0x8d8]
Successors: [0x8ee]
---
0x8e3 DUP1
0x8e4 PUSH4 0xeff883bd
0x8e9 EQ
0x8ea PUSH2 0x253
0x8ed JUMPI
---
0x8e4: V794 = 0xeff883bd
0x8e9: V795 = EQ 0xeff883bd V754
0x8ea: V796 = 0x253
0x8ed: THROWI V795
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8ee
[0x8ee:0x8f8]
---
Predecessors: [0x8e3]
Successors: [0x8f9]
---
0x8ee DUP1
0x8ef PUSH4 0xf2fde38b
0x8f4 EQ
0x8f5 PUSH2 0x265
0x8f8 JUMPI
---
0x8ef: V797 = 0xf2fde38b
0x8f4: V798 = EQ 0xf2fde38b V754
0x8f5: V799 = 0x265
0x8f8: THROWI V798
---
Entry stack: [V754]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V754]

================================

Block 0x8f9
[0x8f9:0x8fc]
---
Predecessors: [0x8ee]
Successors: [0x8fd]
---
0x8f9 JUMPDEST
0x8fa PUSH2 0xc8
---
0x8f9: JUMPDEST 
0x8fa: V800 = 0xc8
---
Entry stack: [V754]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V754, 0xc8]

================================

Block 0x8fd
[0x8fd:0x905]
---
Predecessors: [0x8f9]
Successors: [0x906]
---
0x8fd JUMPDEST
0x8fe PUSH2 0xc5
0x901 PUSH2 0x277
0x904 JUMP
0x905 JUMPDEST
---
0x8fd: JUMPDEST 
0x8fe: V801 = 0xc5
0x901: V802 = 0x277
0x904: THROW 
0x905: JUMPDEST 
---
Entry stack: [V754, 0xc8]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: []

================================

Block 0x906
[0x906:0x90f]
---
Predecessors: [0x8fd]
Successors: [0x910]
---
0x906 JUMPDEST
0x907 JUMP
0x908 JUMPDEST
0x909 STOP
0x90a JUMPDEST
0x90b CALLVALUE
0x90c PUSH2 0x0
0x90f JUMPI
---
0x906: JUMPDEST 
0x907: JUMP S0
0x908: JUMPDEST 
0x909: STOP 
0x90a: JUMPDEST 
0x90b: V803 = CALLVALUE
0x90c: V804 = 0x0
0x90f: THROWI V803
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x910
[0x910:0x933]
---
Predecessors: [0x906]
Successors: [0x934]
---
0x910 PUSH2 0xda
0x913 PUSH1 0x4
0x915 CALLDATALOAD
0x916 PUSH2 0x4a5
0x919 JUMP
0x91a JUMPDEST
0x91b PUSH1 0x40
0x91d DUP1
0x91e MLOAD
0x91f SWAP2
0x920 ISZERO
0x921 ISZERO
0x922 DUP3
0x923 MSTORE
0x924 MLOAD
0x925 SWAP1
0x926 DUP2
0x927 SWAP1
0x928 SUB
0x929 PUSH1 0x20
0x92b ADD
0x92c SWAP1
0x92d RETURN
0x92e JUMPDEST
0x92f CALLVALUE
0x930 PUSH2 0x0
0x933 JUMPI
---
0x910: V805 = 0xda
0x913: V806 = 0x4
0x915: V807 = CALLDATALOAD 0x4
0x916: V808 = 0x4a5
0x919: THROW 
0x91a: JUMPDEST 
0x91b: V809 = 0x40
0x91e: V810 = M[0x40]
0x920: V811 = ISZERO S0
0x921: V812 = ISZERO V811
0x923: M[V810] = V812
0x924: V813 = M[0x40]
0x928: V814 = SUB V810 V813
0x929: V815 = 0x20
0x92b: V816 = ADD 0x20 V814
0x92d: RETURN V813 V816
0x92e: JUMPDEST 
0x92f: V817 = CALLVALUE
0x930: V818 = 0x0
0x933: THROWI V817
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V807]
Exit stack: []

================================

Block 0x934
[0x934:0x95c]
---
Predecessors: [0x910]
Successors: [0x95d]
---
0x934 PUSH2 0xfb
0x937 PUSH2 0x537
0x93a JUMP
0x93b JUMPDEST
0x93c PUSH1 0x40
0x93e DUP1
0x93f MLOAD
0x940 PUSH1 0x1
0x942 PUSH1 0xa0
0x944 PUSH1 0x2
0x946 EXP
0x947 SUB
0x948 SWAP1
0x949 SWAP3
0x94a AND
0x94b DUP3
0x94c MSTORE
0x94d MLOAD
0x94e SWAP1
0x94f DUP2
0x950 SWAP1
0x951 SUB
0x952 PUSH1 0x20
0x954 ADD
0x955 SWAP1
0x956 RETURN
0x957 JUMPDEST
0x958 CALLVALUE
0x959 PUSH2 0x0
0x95c JUMPI
---
0x934: V819 = 0xfb
0x937: V820 = 0x537
0x93a: THROW 
0x93b: JUMPDEST 
0x93c: V821 = 0x40
0x93f: V822 = M[0x40]
0x940: V823 = 0x1
0x942: V824 = 0xa0
0x944: V825 = 0x2
0x946: V826 = EXP 0x2 0xa0
0x947: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94a: V828 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x94c: M[V822] = V828
0x94d: V829 = M[0x40]
0x951: V830 = SUB V822 V829
0x952: V831 = 0x20
0x954: V832 = ADD 0x20 V830
0x956: RETURN V829 V832
0x957: JUMPDEST 
0x958: V833 = CALLVALUE
0x959: V834 = 0x0
0x95c: THROWI V833
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfb]
Exit stack: []

================================

Block 0x95d
[0x95d:0x97b]
---
Predecessors: [0x934]
Successors: [0x97c]
---
0x95d PUSH2 0x124
0x960 PUSH2 0x546
0x963 JUMP
0x964 JUMPDEST
0x965 PUSH1 0x40
0x967 DUP1
0x968 MLOAD
0x969 SWAP2
0x96a DUP3
0x96b MSTORE
0x96c MLOAD
0x96d SWAP1
0x96e DUP2
0x96f SWAP1
0x970 SUB
0x971 PUSH1 0x20
0x973 ADD
0x974 SWAP1
0x975 RETURN
0x976 JUMPDEST
0x977 CALLVALUE
0x978 PUSH2 0x0
0x97b JUMPI
---
0x95d: V835 = 0x124
0x960: V836 = 0x546
0x963: THROW 
0x964: JUMPDEST 
0x965: V837 = 0x40
0x968: V838 = M[0x40]
0x96b: M[V838] = S0
0x96c: V839 = M[0x40]
0x970: V840 = SUB V838 V839
0x971: V841 = 0x20
0x973: V842 = ADD 0x20 V840
0x975: RETURN V839 V842
0x976: JUMPDEST 
0x977: V843 = CALLVALUE
0x978: V844 = 0x0
0x97b: THROWI V843
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0x97c
[0x97c:0x99c]
---
Predecessors: [0x95d]
Successors: [0x99d]
---
0x97c PUSH2 0xda
0x97f PUSH2 0x54c
0x982 JUMP
0x983 JUMPDEST
0x984 PUSH1 0x40
0x986 DUP1
0x987 MLOAD
0x988 SWAP2
0x989 ISZERO
0x98a ISZERO
0x98b DUP3
0x98c MSTORE
0x98d MLOAD
0x98e SWAP1
0x98f DUP2
0x990 SWAP1
0x991 SUB
0x992 PUSH1 0x20
0x994 ADD
0x995 SWAP1
0x996 RETURN
0x997 JUMPDEST
0x998 CALLVALUE
0x999 PUSH2 0x0
0x99c JUMPI
---
0x97c: V845 = 0xda
0x97f: V846 = 0x54c
0x982: THROW 
0x983: JUMPDEST 
0x984: V847 = 0x40
0x987: V848 = M[0x40]
0x989: V849 = ISZERO S0
0x98a: V850 = ISZERO V849
0x98c: M[V848] = V850
0x98d: V851 = M[0x40]
0x991: V852 = SUB V848 V851
0x992: V853 = 0x20
0x994: V854 = ADD 0x20 V852
0x996: RETURN V851 V854
0x997: JUMPDEST 
0x998: V855 = CALLVALUE
0x999: V856 = 0x0
0x99c: THROWI V855
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda]
Exit stack: []

================================

Block 0x99d
[0x99d:0x9bb]
---
Predecessors: [0x97c]
Successors: [0x9bc]
---
0x99d PUSH2 0x124
0x9a0 PUSH2 0x55a
0x9a3 JUMP
0x9a4 JUMPDEST
0x9a5 PUSH1 0x40
0x9a7 DUP1
0x9a8 MLOAD
0x9a9 SWAP2
0x9aa DUP3
0x9ab MSTORE
0x9ac MLOAD
0x9ad SWAP1
0x9ae DUP2
0x9af SWAP1
0x9b0 SUB
0x9b1 PUSH1 0x20
0x9b3 ADD
0x9b4 SWAP1
0x9b5 RETURN
0x9b6 JUMPDEST
0x9b7 CALLVALUE
0x9b8 PUSH2 0x0
0x9bb JUMPI
---
0x99d: V857 = 0x124
0x9a0: V858 = 0x55a
0x9a3: THROW 
0x9a4: JUMPDEST 
0x9a5: V859 = 0x40
0x9a8: V860 = M[0x40]
0x9ab: M[V860] = S0
0x9ac: V861 = M[0x40]
0x9b0: V862 = SUB V860 V861
0x9b1: V863 = 0x20
0x9b3: V864 = ADD 0x20 V862
0x9b5: RETURN V861 V864
0x9b6: JUMPDEST 
0x9b7: V865 = CALLVALUE
0x9b8: V866 = 0x0
0x9bb: THROWI V865
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0x9bc
[0x9bc:0x9ee]
---
Predecessors: [0x99d]
Successors: [0x9ef]
---
0x9bc PUSH2 0xfb
0x9bf PUSH2 0x560
0x9c2 JUMP
0x9c3 JUMPDEST
0x9c4 PUSH1 0x40
0x9c6 DUP1
0x9c7 MLOAD
0x9c8 PUSH1 0x1
0x9ca PUSH1 0xa0
0x9cc PUSH1 0x2
0x9ce EXP
0x9cf SUB
0x9d0 SWAP1
0x9d1 SWAP3
0x9d2 AND
0x9d3 DUP3
0x9d4 MSTORE
0x9d5 MLOAD
0x9d6 SWAP1
0x9d7 DUP2
0x9d8 SWAP1
0x9d9 SUB
0x9da PUSH1 0x20
0x9dc ADD
0x9dd SWAP1
0x9de RETURN
0x9df JUMPDEST
0x9e0 PUSH2 0xc8
0x9e3 PUSH2 0x56f
0x9e6 JUMP
0x9e7 JUMPDEST
0x9e8 STOP
0x9e9 JUMPDEST
0x9ea CALLVALUE
0x9eb PUSH2 0x0
0x9ee JUMPI
---
0x9bc: V867 = 0xfb
0x9bf: V868 = 0x560
0x9c2: THROW 
0x9c3: JUMPDEST 
0x9c4: V869 = 0x40
0x9c7: V870 = M[0x40]
0x9c8: V871 = 0x1
0x9ca: V872 = 0xa0
0x9cc: V873 = 0x2
0x9ce: V874 = EXP 0x2 0xa0
0x9cf: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d2: V876 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9d4: M[V870] = V876
0x9d5: V877 = M[0x40]
0x9d9: V878 = SUB V870 V877
0x9da: V879 = 0x20
0x9dc: V880 = ADD 0x20 V878
0x9de: RETURN V877 V880
0x9df: JUMPDEST 
0x9e0: V881 = 0xc8
0x9e3: V882 = 0x56f
0x9e6: THROW 
0x9e7: JUMPDEST 
0x9e8: STOP 
0x9e9: JUMPDEST 
0x9ea: V883 = CALLVALUE
0x9eb: V884 = 0x0
0x9ee: THROWI V883
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfb, 0xc8]
Exit stack: []

================================

Block 0x9ef
[0x9ef:0xa0d]
---
Predecessors: [0x9bc]
Successors: [0xa0e]
---
0x9ef PUSH2 0x124
0x9f2 PUSH2 0x5c1
0x9f5 JUMP
0x9f6 JUMPDEST
0x9f7 PUSH1 0x40
0x9f9 DUP1
0x9fa MLOAD
0x9fb SWAP2
0x9fc DUP3
0x9fd MSTORE
0x9fe MLOAD
0x9ff SWAP1
0xa00 DUP2
0xa01 SWAP1
0xa02 SUB
0xa03 PUSH1 0x20
0xa05 ADD
0xa06 SWAP1
0xa07 RETURN
0xa08 JUMPDEST
0xa09 CALLVALUE
0xa0a PUSH2 0x0
0xa0d JUMPI
---
0x9ef: V885 = 0x124
0x9f2: V886 = 0x5c1
0x9f5: THROW 
0x9f6: JUMPDEST 
0x9f7: V887 = 0x40
0x9fa: V888 = M[0x40]
0x9fd: M[V888] = S0
0x9fe: V889 = M[0x40]
0xa02: V890 = SUB V888 V889
0xa03: V891 = 0x20
0xa05: V892 = ADD 0x20 V890
0xa07: RETURN V889 V892
0xa08: JUMPDEST 
0xa09: V893 = CALLVALUE
0xa0a: V894 = 0x0
0xa0d: THROWI V893
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0xa0e
[0xa0e:0xa22]
---
Predecessors: [0x9ef]
Successors: [0xa23]
---
0xa0e PUSH2 0xc8
0xa11 PUSH1 0x4
0xa13 CALLDATALOAD
0xa14 PUSH1 0x24
0xa16 CALLDATALOAD
0xa17 PUSH2 0x5c7
0xa1a JUMP
0xa1b JUMPDEST
0xa1c STOP
0xa1d JUMPDEST
0xa1e CALLVALUE
0xa1f PUSH2 0x0
0xa22 JUMPI
---
0xa0e: V895 = 0xc8
0xa11: V896 = 0x4
0xa13: V897 = CALLDATALOAD 0x4
0xa14: V898 = 0x24
0xa16: V899 = CALLDATALOAD 0x24
0xa17: V900 = 0x5c7
0xa1a: THROW 
0xa1b: JUMPDEST 
0xa1c: STOP 
0xa1d: JUMPDEST 
0xa1e: V901 = CALLVALUE
0xa1f: V902 = 0x0
0xa22: THROWI V901
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V897, V899]
Exit stack: []

================================

Block 0xa23
[0xa23:0xa43]
---
Predecessors: [0xa0e]
Successors: [0xa44]
---
0xa23 PUSH2 0xda
0xa26 PUSH2 0x65c
0xa29 JUMP
0xa2a JUMPDEST
0xa2b PUSH1 0x40
0xa2d DUP1
0xa2e MLOAD
0xa2f SWAP2
0xa30 ISZERO
0xa31 ISZERO
0xa32 DUP3
0xa33 MSTORE
0xa34 MLOAD
0xa35 SWAP1
0xa36 DUP2
0xa37 SWAP1
0xa38 SUB
0xa39 PUSH1 0x20
0xa3b ADD
0xa3c SWAP1
0xa3d RETURN
0xa3e JUMPDEST
0xa3f CALLVALUE
0xa40 PUSH2 0x0
0xa43 JUMPI
---
0xa23: V903 = 0xda
0xa26: V904 = 0x65c
0xa29: THROW 
0xa2a: JUMPDEST 
0xa2b: V905 = 0x40
0xa2e: V906 = M[0x40]
0xa30: V907 = ISZERO S0
0xa31: V908 = ISZERO V907
0xa33: M[V906] = V908
0xa34: V909 = M[0x40]
0xa38: V910 = SUB V906 V909
0xa39: V911 = 0x20
0xa3b: V912 = ADD 0x20 V910
0xa3d: RETURN V909 V912
0xa3e: JUMPDEST 
0xa3f: V913 = CALLVALUE
0xa40: V914 = 0x0
0xa43: THROWI V913
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda]
Exit stack: []

================================

Block 0xa44
[0xa44:0xa74]
---
Predecessors: [0xa23]
Successors: [0xa75]
---
0xa44 PUSH2 0xda
0xa47 PUSH1 0x4
0xa49 CALLDATALOAD
0xa4a PUSH1 0x24
0xa4c CALLDATALOAD
0xa4d PUSH2 0x665
0xa50 JUMP
0xa51 JUMPDEST
0xa52 PUSH1 0x40
0xa54 DUP1
0xa55 MLOAD
0xa56 SWAP2
0xa57 ISZERO
0xa58 ISZERO
0xa59 DUP3
0xa5a MSTORE
0xa5b MLOAD
0xa5c SWAP1
0xa5d DUP2
0xa5e SWAP1
0xa5f SUB
0xa60 PUSH1 0x20
0xa62 ADD
0xa63 SWAP1
0xa64 RETURN
0xa65 JUMPDEST
0xa66 PUSH2 0xc8
0xa69 PUSH2 0x277
0xa6c JUMP
0xa6d JUMPDEST
0xa6e STOP
0xa6f JUMPDEST
0xa70 CALLVALUE
0xa71 PUSH2 0x0
0xa74 JUMPI
---
0xa44: V915 = 0xda
0xa47: V916 = 0x4
0xa49: V917 = CALLDATALOAD 0x4
0xa4a: V918 = 0x24
0xa4c: V919 = CALLDATALOAD 0x24
0xa4d: V920 = 0x665
0xa50: THROW 
0xa51: JUMPDEST 
0xa52: V921 = 0x40
0xa55: V922 = M[0x40]
0xa57: V923 = ISZERO S0
0xa58: V924 = ISZERO V923
0xa5a: M[V922] = V924
0xa5b: V925 = M[0x40]
0xa5f: V926 = SUB V922 V925
0xa60: V927 = 0x20
0xa62: V928 = ADD 0x20 V926
0xa64: RETURN V925 V928
0xa65: JUMPDEST 
0xa66: V929 = 0xc8
0xa69: V930 = 0x277
0xa6c: THROW 
0xa6d: JUMPDEST 
0xa6e: STOP 
0xa6f: JUMPDEST 
0xa70: V931 = CALLVALUE
0xa71: V932 = 0x0
0xa74: THROWI V931
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V917, V919, 0xc8]
Exit stack: []

================================

Block 0xa75
[0xa75:0xa98]
---
Predecessors: [0xa44]
Successors: [0xa99]
---
0xa75 PUSH2 0xda
0xa78 PUSH1 0x4
0xa7a CALLDATALOAD
0xa7b PUSH2 0x73a
0xa7e JUMP
0xa7f JUMPDEST
0xa80 PUSH1 0x40
0xa82 DUP1
0xa83 MLOAD
0xa84 SWAP2
0xa85 ISZERO
0xa86 ISZERO
0xa87 DUP3
0xa88 MSTORE
0xa89 MLOAD
0xa8a SWAP1
0xa8b DUP2
0xa8c SWAP1
0xa8d SUB
0xa8e PUSH1 0x20
0xa90 ADD
0xa91 SWAP1
0xa92 RETURN
0xa93 JUMPDEST
0xa94 CALLVALUE
0xa95 PUSH2 0x0
0xa98 JUMPI
---
0xa75: V933 = 0xda
0xa78: V934 = 0x4
0xa7a: V935 = CALLDATALOAD 0x4
0xa7b: V936 = 0x73a
0xa7e: THROW 
0xa7f: JUMPDEST 
0xa80: V937 = 0x40
0xa83: V938 = M[0x40]
0xa85: V939 = ISZERO S0
0xa86: V940 = ISZERO V939
0xa88: M[V938] = V940
0xa89: V941 = M[0x40]
0xa8d: V942 = SUB V938 V941
0xa8e: V943 = 0x20
0xa90: V944 = ADD 0x20 V942
0xa92: RETURN V941 V944
0xa93: JUMPDEST 
0xa94: V945 = CALLVALUE
0xa95: V946 = 0x0
0xa98: THROWI V945
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V935]
Exit stack: []

================================

Block 0xa99
[0xa99:0xaaa]
---
Predecessors: [0xa75]
Successors: [0xaab]
---
0xa99 PUSH2 0xc8
0xa9c PUSH1 0x4
0xa9e CALLDATALOAD
0xa9f PUSH2 0x800
0xaa2 JUMP
0xaa3 JUMPDEST
0xaa4 STOP
0xaa5 JUMPDEST
0xaa6 CALLVALUE
0xaa7 PUSH2 0x0
0xaaa JUMPI
---
0xa99: V947 = 0xc8
0xa9c: V948 = 0x4
0xa9e: V949 = CALLDATALOAD 0x4
0xa9f: V950 = 0x800
0xaa2: THROW 
0xaa3: JUMPDEST 
0xaa4: STOP 
0xaa5: JUMPDEST 
0xaa6: V951 = CALLVALUE
0xaa7: V952 = 0x0
0xaaa: THROWI V951
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V949]
Exit stack: []

================================

Block 0xaab
[0xaab:0xad2]
---
Predecessors: [0xa99]
Successors: [0xad3]
---
0xaab PUSH2 0xc8
0xaae PUSH1 0x4
0xab0 CALLDATALOAD
0xab1 PUSH2 0x98c
0xab4 JUMP
0xab5 JUMPDEST
0xab6 STOP
0xab7 JUMPDEST
0xab8 PUSH1 0x0
0xaba PUSH1 0x0
0xabc PUSH1 0x0
0xabe PUSH1 0x5
0xac0 PUSH1 0x1
0xac2 SWAP1
0xac3 SLOAD
0xac4 SWAP1
0xac5 PUSH2 0x100
0xac8 EXP
0xac9 SWAP1
0xaca DIV
0xacb PUSH1 0xff
0xacd AND
0xace DUP1
0xacf PUSH2 0x2a6
0xad2 JUMPI
---
0xaab: V953 = 0xc8
0xaae: V954 = 0x4
0xab0: V955 = CALLDATALOAD 0x4
0xab1: V956 = 0x98c
0xab4: THROW 
0xab5: JUMPDEST 
0xab6: STOP 
0xab7: JUMPDEST 
0xab8: V957 = 0x0
0xaba: V958 = 0x0
0xabc: V959 = 0x0
0xabe: V960 = 0x5
0xac0: V961 = 0x1
0xac3: V962 = S[0x5]
0xac5: V963 = 0x100
0xac8: V964 = EXP 0x100 0x1
0xaca: V965 = DIV V962 0x100
0xacb: V966 = 0xff
0xacd: V967 = AND 0xff V965
0xacf: V968 = 0x2a6
0xad2: THROWI V967
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V955, V967, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xad3
[0xad3:0xae5]
---
Predecessors: [0xaab]
Successors: [0xae6]
---
0xad3 POP
0xad4 PUSH1 0x0
0xad6 SLOAD
0xad7 CALLER
0xad8 PUSH1 0x1
0xada PUSH1 0xa0
0xadc PUSH1 0x2
0xade EXP
0xadf SUB
0xae0 SWAP1
0xae1 DUP2
0xae2 AND
0xae3 SWAP2
0xae4 AND
0xae5 EQ
---
0xad4: V969 = 0x0
0xad6: V970 = S[0x0]
0xad7: V971 = CALLER
0xad8: V972 = 0x1
0xada: V973 = 0xa0
0xadc: V974 = 0x2
0xade: V975 = EXP 0x2 0xa0
0xadf: V976 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae2: V977 = AND 0xffffffffffffffffffffffffffffffffffffffff V971
0xae4: V978 = AND V970 0xffffffffffffffffffffffffffffffffffffffff
0xae5: V979 = EQ V978 V977
---
Entry stack: [0x0, 0x0, 0x0, V967]
Stack pops: 1
Stack additions: [V979]
Exit stack: [0x0, 0x0, 0x0, V979]

================================

Block 0xae6
[0xae6:0xaeb]
---
Predecessors: [0xad3]
Successors: [0xaec]
---
0xae6 JUMPDEST
0xae7 ISZERO
0xae8 PUSH2 0x46f
0xaeb JUMPI
---
0xae6: JUMPDEST 
0xae7: V980 = ISZERO V979
0xae8: V981 = 0x46f
0xaeb: THROWI V980
---
Entry stack: [0x0, 0x0, 0x0, V979]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0, 0x0]

================================

Block 0xaec
[0xaec:0xaf5]
---
Predecessors: [0xae6]
Successors: [0xaf6]
---
0xaec PUSH1 0x3
0xaee SLOAD
0xaef CALLVALUE
0xaf0 DUP2
0xaf1 ISZERO
0xaf2 PUSH2 0x0
0xaf5 JUMPI
---
0xaec: V982 = 0x3
0xaee: V983 = S[0x3]
0xaef: V984 = CALLVALUE
0xaf1: V985 = ISZERO V983
0xaf2: V986 = 0x0
0xaf5: THROWI V985
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V983, V984]
Exit stack: [0x0, 0x0, 0x0, V983, V984]

================================

Block 0xaf6
[0xaf6:0xb5e]
---
Predecessors: [0xaec]
Successors: [0xb5f]
---
0xaf6 DIV
0xaf7 SWAP3
0xaf8 POP
0xaf9 PUSH1 0x4
0xafb SLOAD
0xafc PUSH1 0x1
0xafe PUSH1 0x0
0xb00 SWAP1
0xb01 SLOAD
0xb02 SWAP1
0xb03 PUSH2 0x100
0xb06 EXP
0xb07 SWAP1
0xb08 DIV
0xb09 PUSH1 0x1
0xb0b PUSH1 0xa0
0xb0d PUSH1 0x2
0xb0f EXP
0xb10 SUB
0xb11 AND
0xb12 PUSH1 0x1
0xb14 PUSH1 0xa0
0xb16 PUSH1 0x2
0xb18 EXP
0xb19 SUB
0xb1a AND
0xb1b PUSH4 0x70a08231
0xb20 ADDRESS
0xb21 PUSH1 0x0
0xb23 PUSH1 0x40
0xb25 MLOAD
0xb26 PUSH1 0x20
0xb28 ADD
0xb29 MSTORE
0xb2a PUSH1 0x40
0xb2c MLOAD
0xb2d DUP3
0xb2e PUSH1 0xe0
0xb30 PUSH1 0x2
0xb32 EXP
0xb33 MUL
0xb34 DUP2
0xb35 MSTORE
0xb36 PUSH1 0x4
0xb38 ADD
0xb39 DUP1
0xb3a DUP3
0xb3b PUSH1 0x1
0xb3d PUSH1 0xa0
0xb3f PUSH1 0x2
0xb41 EXP
0xb42 SUB
0xb43 AND
0xb44 DUP2
0xb45 MSTORE
0xb46 PUSH1 0x20
0xb48 ADD
0xb49 SWAP2
0xb4a POP
0xb4b POP
0xb4c PUSH1 0x20
0xb4e PUSH1 0x40
0xb50 MLOAD
0xb51 DUP1
0xb52 DUP4
0xb53 SUB
0xb54 DUP2
0xb55 PUSH1 0x0
0xb57 DUP8
0xb58 DUP1
0xb59 EXTCODESIZE
0xb5a ISZERO
0xb5b PUSH2 0x0
0xb5e JUMPI
---
0xaf6: V987 = DIV V984 V983
0xaf9: V988 = 0x4
0xafb: V989 = S[0x4]
0xafc: V990 = 0x1
0xafe: V991 = 0x0
0xb01: V992 = S[0x1]
0xb03: V993 = 0x100
0xb06: V994 = EXP 0x100 0x0
0xb08: V995 = DIV V992 0x1
0xb09: V996 = 0x1
0xb0b: V997 = 0xa0
0xb0d: V998 = 0x2
0xb0f: V999 = EXP 0x2 0xa0
0xb10: V1000 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb11: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0xb12: V1002 = 0x1
0xb14: V1003 = 0xa0
0xb16: V1004 = 0x2
0xb18: V1005 = EXP 0x2 0xa0
0xb19: V1006 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1a: V1007 = AND 0xffffffffffffffffffffffffffffffffffffffff V1001
0xb1b: V1008 = 0x70a08231
0xb20: V1009 = ADDRESS
0xb21: V1010 = 0x0
0xb23: V1011 = 0x40
0xb25: V1012 = M[0x40]
0xb26: V1013 = 0x20
0xb28: V1014 = ADD 0x20 V1012
0xb29: M[V1014] = 0x0
0xb2a: V1015 = 0x40
0xb2c: V1016 = M[0x40]
0xb2e: V1017 = 0xe0
0xb30: V1018 = 0x2
0xb32: V1019 = EXP 0x2 0xe0
0xb33: V1020 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xb35: M[V1016] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb36: V1021 = 0x4
0xb38: V1022 = ADD 0x4 V1016
0xb3b: V1023 = 0x1
0xb3d: V1024 = 0xa0
0xb3f: V1025 = 0x2
0xb41: V1026 = EXP 0x2 0xa0
0xb42: V1027 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb43: V1028 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
0xb45: M[V1022] = V1028
0xb46: V1029 = 0x20
0xb48: V1030 = ADD 0x20 V1022
0xb4c: V1031 = 0x20
0xb4e: V1032 = 0x40
0xb50: V1033 = M[0x40]
0xb53: V1034 = SUB V1030 V1033
0xb55: V1035 = 0x0
0xb59: V1036 = EXTCODESIZE V1007
0xb5a: V1037 = ISZERO V1036
0xb5b: V1038 = 0x0
0xb5e: THROWI V1037
---
Entry stack: [0x0, 0x0, 0x0, V983, V984]
Stack pops: 5
Stack additions: [V987, S3, S2, V989, V1007, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1007]
Exit stack: [V987, 0x0, 0x0, V989, V1007, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1007]

================================

Block 0xb5f
[0xb5f:0xb68]
---
Predecessors: [0xaf6]
Successors: [0xb69]
---
0xb5f PUSH1 0x32
0xb61 GAS
0xb62 SUB
0xb63 CALL
0xb64 ISZERO
0xb65 PUSH2 0x0
0xb68 JUMPI
---
0xb5f: V1039 = 0x32
0xb61: V1040 = GAS
0xb62: V1041 = SUB V1040 0x32
0xb63: V1042 = CALL V1041 V1007 0x0 V1033 V1034 V1033 0x20
0xb64: V1043 = ISZERO V1042
0xb65: V1044 = 0x0
0xb68: THROWI V1043
---
Entry stack: [V987, 0x0, 0x0, V989, V1007, 0x70a08231, V1030, 0x20, V1033, V1034, V1033, 0x0, V1007]
Stack pops: 6
Stack additions: []
Exit stack: [V987, 0x0, 0x0, V989, V1007, 0x70a08231, V1030]

================================

Block 0xb69
[0xb69:0xb76]
---
Predecessors: [0xb5f]
Successors: [0xb77]
---
0xb69 POP
0xb6a POP
0xb6b PUSH1 0x40
0xb6d MLOAD
0xb6e MLOAD
0xb6f SWAP1
0xb70 POP
0xb71 DUP2
0xb72 ISZERO
0xb73 PUSH2 0x0
0xb76 JUMPI
---
0xb6b: V1045 = 0x40
0xb6d: V1046 = M[0x40]
0xb6e: V1047 = M[V1046]
0xb72: V1048 = ISZERO V989
0xb73: V1049 = 0x0
0xb76: THROWI V1048
---
Entry stack: [V987, 0x0, 0x0, V989, V1007, 0x70a08231, V1030]
Stack pops: 4
Stack additions: [S3, V1047]
Exit stack: [V987, 0x0, 0x0, V989, V1047]

================================

Block 0xb77
[0xb77:0xb85]
---
Predecessors: [0xb69]
Successors: [0xb86]
---
0xb77 DIV
0xb78 SWAP2
0xb79 POP
0xb7a PUSH1 0x0
0xb7c SWAP1
0xb7d POP
0xb7e DUP2
0xb7f DUP4
0xb80 GT
0xb81 ISZERO
0xb82 PUSH2 0x384
0xb85 JUMPI
---
0xb77: V1050 = DIV V1047 V989
0xb7a: V1051 = 0x0
0xb80: V1052 = GT V987 V1050
0xb81: V1053 = ISZERO V1052
0xb82: V1054 = 0x384
0xb85: THROWI V1053
---
Entry stack: [V987, 0x0, 0x0, V989, V1047]
Stack pops: 5
Stack additions: [S4, V1050, 0x0]
Exit stack: [V987, V1050, 0x0]

================================

Block 0xb86
[0xb86:0xbbf]
---
Predecessors: [0xb77]
Successors: [0xbc0]
---
0xb86 POP
0xb87 PUSH1 0x3
0xb89 SLOAD
0xb8a PUSH1 0x40
0xb8c MLOAD
0xb8d SWAP2
0xb8e SWAP3
0xb8f POP
0xb90 DUP3
0xb91 SWAP2
0xb92 SWAP1
0xb93 DUP3
0xb94 MUL
0xb95 CALLVALUE
0xb96 SUB
0xb97 SWAP1
0xb98 PUSH1 0x1
0xb9a PUSH1 0xa0
0xb9c PUSH1 0x2
0xb9e EXP
0xb9f SUB
0xba0 CALLER
0xba1 AND
0xba2 SWAP1
0xba3 DUP3
0xba4 ISZERO
0xba5 PUSH2 0x8fc
0xba8 MUL
0xba9 SWAP1
0xbaa DUP4
0xbab SWAP1
0xbac PUSH1 0x0
0xbae DUP2
0xbaf DUP2
0xbb0 DUP2
0xbb1 DUP6
0xbb2 DUP9
0xbb3 DUP9
0xbb4 CALL
0xbb5 SWAP4
0xbb6 POP
0xbb7 POP
0xbb8 POP
0xbb9 POP
0xbba ISZERO
0xbbb ISZERO
0xbbc PUSH2 0x384
0xbbf JUMPI
---
0xb87: V1055 = 0x3
0xb89: V1056 = S[0x3]
0xb8a: V1057 = 0x40
0xb8c: V1058 = M[0x40]
0xb94: V1059 = MUL V1050 V1056
0xb95: V1060 = CALLVALUE
0xb96: V1061 = SUB V1060 V1059
0xb98: V1062 = 0x1
0xb9a: V1063 = 0xa0
0xb9c: V1064 = 0x2
0xb9e: V1065 = EXP 0x2 0xa0
0xb9f: V1066 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba0: V1067 = CALLER
0xba1: V1068 = AND V1067 0xffffffffffffffffffffffffffffffffffffffff
0xba4: V1069 = ISZERO V1061
0xba5: V1070 = 0x8fc
0xba8: V1071 = MUL 0x8fc V1069
0xbac: V1072 = 0x0
0xbb4: V1073 = CALL V1071 V1068 V1061 V1058 0x0 V1058 0x0
0xbba: V1074 = ISZERO V1073
0xbbb: V1075 = ISZERO V1074
0xbbc: V1076 = 0x384
0xbbf: THROWI V1075
---
Entry stack: [V987, V1050, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V1061]
Exit stack: [V1050, V1050, V1061]

================================

Block 0xbc0
[0xbc0:0xbc4]
---
Predecessors: [0xb86]
Successors: [0xbc5]
---
0xbc0 PUSH2 0x0
0xbc3 JUMP
0xbc4 JUMPDEST
---
0xbc0: V1077 = 0x0
0xbc3: THROW 
0xbc4: JUMPDEST 
---
Entry stack: [V1050, V1050, V1061]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbc5
[0xbc5:0xbce]
---
Predecessors: [0xbc0]
Successors: [0xbcf]
---
0xbc5 JUMPDEST
0xbc6 PUSH1 0x0
0xbc8 DUP4
0xbc9 GT
0xbca ISZERO
0xbcb PUSH2 0x41a
0xbce JUMPI
---
0xbc5: JUMPDEST 
0xbc6: V1078 = 0x0
0xbc9: V1079 = GT S2 0x0
0xbca: V1080 = ISZERO V1079
0xbcb: V1081 = 0x41a
0xbce: THROWI V1080
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0xbcf
[0xbcf:0xc3d]
---
Predecessors: [0xbc5]
Successors: [0xc3e]
---
0xbcf PUSH1 0x1
0xbd1 PUSH1 0x0
0xbd3 SWAP1
0xbd4 SLOAD
0xbd5 SWAP1
0xbd6 PUSH2 0x100
0xbd9 EXP
0xbda SWAP1
0xbdb DIV
0xbdc PUSH1 0x1
0xbde PUSH1 0xa0
0xbe0 PUSH1 0x2
0xbe2 EXP
0xbe3 SUB
0xbe4 AND
0xbe5 PUSH1 0x1
0xbe7 PUSH1 0xa0
0xbe9 PUSH1 0x2
0xbeb EXP
0xbec SUB
0xbed AND
0xbee PUSH4 0xa9059cbb
0xbf3 CALLER
0xbf4 PUSH1 0x4
0xbf6 SLOAD
0xbf7 DUP7
0xbf8 MUL
0xbf9 PUSH1 0x0
0xbfb PUSH1 0x40
0xbfd MLOAD
0xbfe PUSH1 0x20
0xc00 ADD
0xc01 MSTORE
0xc02 PUSH1 0x40
0xc04 MLOAD
0xc05 DUP4
0xc06 PUSH1 0xe0
0xc08 PUSH1 0x2
0xc0a EXP
0xc0b MUL
0xc0c DUP2
0xc0d MSTORE
0xc0e PUSH1 0x4
0xc10 ADD
0xc11 DUP1
0xc12 DUP4
0xc13 PUSH1 0x1
0xc15 PUSH1 0xa0
0xc17 PUSH1 0x2
0xc19 EXP
0xc1a SUB
0xc1b AND
0xc1c DUP2
0xc1d MSTORE
0xc1e PUSH1 0x20
0xc20 ADD
0xc21 DUP3
0xc22 DUP2
0xc23 MSTORE
0xc24 PUSH1 0x20
0xc26 ADD
0xc27 SWAP3
0xc28 POP
0xc29 POP
0xc2a POP
0xc2b PUSH1 0x20
0xc2d PUSH1 0x40
0xc2f MLOAD
0xc30 DUP1
0xc31 DUP4
0xc32 SUB
0xc33 DUP2
0xc34 PUSH1 0x0
0xc36 DUP8
0xc37 DUP1
0xc38 EXTCODESIZE
0xc39 ISZERO
0xc3a PUSH2 0x0
0xc3d JUMPI
---
0xbcf: V1082 = 0x1
0xbd1: V1083 = 0x0
0xbd4: V1084 = S[0x1]
0xbd6: V1085 = 0x100
0xbd9: V1086 = EXP 0x100 0x0
0xbdb: V1087 = DIV V1084 0x1
0xbdc: V1088 = 0x1
0xbde: V1089 = 0xa0
0xbe0: V1090 = 0x2
0xbe2: V1091 = EXP 0x2 0xa0
0xbe3: V1092 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe4: V1093 = AND 0xffffffffffffffffffffffffffffffffffffffff V1087
0xbe5: V1094 = 0x1
0xbe7: V1095 = 0xa0
0xbe9: V1096 = 0x2
0xbeb: V1097 = EXP 0x2 0xa0
0xbec: V1098 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbed: V1099 = AND 0xffffffffffffffffffffffffffffffffffffffff V1093
0xbee: V1100 = 0xa9059cbb
0xbf3: V1101 = CALLER
0xbf4: V1102 = 0x4
0xbf6: V1103 = S[0x4]
0xbf8: V1104 = MUL S2 V1103
0xbf9: V1105 = 0x0
0xbfb: V1106 = 0x40
0xbfd: V1107 = M[0x40]
0xbfe: V1108 = 0x20
0xc00: V1109 = ADD 0x20 V1107
0xc01: M[V1109] = 0x0
0xc02: V1110 = 0x40
0xc04: V1111 = M[0x40]
0xc06: V1112 = 0xe0
0xc08: V1113 = 0x2
0xc0a: V1114 = EXP 0x2 0xe0
0xc0b: V1115 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc0d: M[V1111] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc0e: V1116 = 0x4
0xc10: V1117 = ADD 0x4 V1111
0xc13: V1118 = 0x1
0xc15: V1119 = 0xa0
0xc17: V1120 = 0x2
0xc19: V1121 = EXP 0x2 0xa0
0xc1a: V1122 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1b: V1123 = AND 0xffffffffffffffffffffffffffffffffffffffff V1101
0xc1d: M[V1117] = V1123
0xc1e: V1124 = 0x20
0xc20: V1125 = ADD 0x20 V1117
0xc23: M[V1125] = V1104
0xc24: V1126 = 0x20
0xc26: V1127 = ADD 0x20 V1125
0xc2b: V1128 = 0x20
0xc2d: V1129 = 0x40
0xc2f: V1130 = M[0x40]
0xc32: V1131 = SUB V1127 V1130
0xc34: V1132 = 0x0
0xc38: V1133 = EXTCODESIZE V1099
0xc39: V1134 = ISZERO V1133
0xc3a: V1135 = 0x0
0xc3d: THROWI V1134
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1099, 0xa9059cbb, V1127, 0x20, V1130, V1131, V1130, 0x0, V1099]
Exit stack: [S2, S1, S0, V1099, 0xa9059cbb, V1127, 0x20, V1130, V1131, V1130, 0x0, V1099]

================================

Block 0xc3e
[0xc3e:0xc47]
---
Predecessors: [0xbcf]
Successors: [0xc48]
---
0xc3e PUSH1 0x32
0xc40 GAS
0xc41 SUB
0xc42 CALL
0xc43 ISZERO
0xc44 PUSH2 0x0
0xc47 JUMPI
---
0xc3e: V1136 = 0x32
0xc40: V1137 = GAS
0xc41: V1138 = SUB V1137 0x32
0xc42: V1139 = CALL V1138 V1099 0x0 V1130 V1131 V1130 0x20
0xc43: V1140 = ISZERO V1139
0xc44: V1141 = 0x0
0xc47: THROWI V1140
---
Entry stack: [S11, S10, S9, V1099, 0xa9059cbb, V1127, 0x20, V1130, V1131, V1130, 0x0, V1099]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1099, 0xa9059cbb, V1127]

================================

Block 0xc48
[0xc48:0xc55]
---
Predecessors: [0xc3e]
Successors: [0xc56]
---
0xc48 POP
0xc49 POP
0xc4a PUSH1 0x40
0xc4c MLOAD
0xc4d MLOAD
0xc4e ISZERO
0xc4f ISZERO
0xc50 SWAP1
0xc51 POP
0xc52 PUSH2 0x41a
0xc55 JUMPI
---
0xc4a: V1142 = 0x40
0xc4c: V1143 = M[0x40]
0xc4d: V1144 = M[V1143]
0xc4e: V1145 = ISZERO V1144
0xc4f: V1146 = ISZERO V1145
0xc52: V1147 = 0x41a
0xc55: THROWI V1146
---
Entry stack: [S5, S4, S3, V1099, 0xa9059cbb, V1127]
Stack pops: 3
Stack additions: []
Exit stack: [S5, S4, S3]

================================

Block 0xc56
[0xc56:0xc5a]
---
Predecessors: [0xc48]
Successors: [0xc5b]
---
0xc56 PUSH2 0x0
0xc59 JUMP
0xc5a JUMPDEST
---
0xc56: V1148 = 0x0
0xc59: THROW 
0xc5a: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc5b
[0xc5b:0xcd9]
---
Predecessors: [0xc56]
Successors: [0xcda]
---
0xc5b JUMPDEST
0xc5c PUSH1 0x4
0xc5e SLOAD
0xc5f PUSH1 0x40
0xc61 DUP1
0xc62 MLOAD
0xc63 CALLVALUE
0xc64 DUP2
0xc65 MSTORE
0xc66 PUSH1 0x20
0xc68 DUP2
0xc69 ADD
0xc6a DUP5
0xc6b SWAP1
0xc6c MSTORE
0xc6d SWAP2
0xc6e DUP6
0xc6f MUL
0xc70 DUP3
0xc71 DUP3
0xc72 ADD
0xc73 MSTORE
0xc74 MLOAD
0xc75 PUSH1 0x1
0xc77 PUSH1 0xa0
0xc79 PUSH1 0x2
0xc7b EXP
0xc7c SUB
0xc7d CALLER
0xc7e AND
0xc7f SWAP2
0xc80 PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xca1 SWAP2
0xca2 SWAP1
0xca3 DUP2
0xca4 SWAP1
0xca5 SUB
0xca6 PUSH1 0x60
0xca8 ADD
0xca9 SWAP1
0xcaa LOG2
0xcab PUSH2 0x49e
0xcae JUMP
0xcaf JUMPDEST
0xcb0 PUSH1 0x40
0xcb2 MLOAD
0xcb3 PUSH1 0x1
0xcb5 PUSH1 0xa0
0xcb7 PUSH1 0x2
0xcb9 EXP
0xcba SUB
0xcbb CALLER
0xcbc AND
0xcbd SWAP1
0xcbe CALLVALUE
0xcbf DUP1
0xcc0 ISZERO
0xcc1 PUSH2 0x8fc
0xcc4 MUL
0xcc5 SWAP2
0xcc6 PUSH1 0x0
0xcc8 DUP2
0xcc9 DUP2
0xcca DUP2
0xccb DUP6
0xccc DUP9
0xccd DUP9
0xcce CALL
0xccf SWAP4
0xcd0 POP
0xcd1 POP
0xcd2 POP
0xcd3 POP
0xcd4 ISZERO
0xcd5 ISZERO
0xcd6 PUSH2 0x49e
0xcd9 JUMPI
---
0xc5b: JUMPDEST 
0xc5c: V1149 = 0x4
0xc5e: V1150 = S[0x4]
0xc5f: V1151 = 0x40
0xc62: V1152 = M[0x40]
0xc63: V1153 = CALLVALUE
0xc65: M[V1152] = V1153
0xc66: V1154 = 0x20
0xc69: V1155 = ADD V1152 0x20
0xc6c: M[V1155] = S0
0xc6f: V1156 = MUL S2 V1150
0xc72: V1157 = ADD 0x40 V1152
0xc73: M[V1157] = V1156
0xc74: V1158 = M[0x40]
0xc75: V1159 = 0x1
0xc77: V1160 = 0xa0
0xc79: V1161 = 0x2
0xc7b: V1162 = EXP 0x2 0xa0
0xc7c: V1163 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7d: V1164 = CALLER
0xc7e: V1165 = AND V1164 0xffffffffffffffffffffffffffffffffffffffff
0xc80: V1166 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xca5: V1167 = SUB V1152 V1158
0xca6: V1168 = 0x60
0xca8: V1169 = ADD 0x60 V1167
0xcaa: LOG V1158 V1169 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V1165
0xcab: V1170 = 0x49e
0xcae: THROW 
0xcaf: JUMPDEST 
0xcb0: V1171 = 0x40
0xcb2: V1172 = M[0x40]
0xcb3: V1173 = 0x1
0xcb5: V1174 = 0xa0
0xcb7: V1175 = 0x2
0xcb9: V1176 = EXP 0x2 0xa0
0xcba: V1177 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcbb: V1178 = CALLER
0xcbc: V1179 = AND V1178 0xffffffffffffffffffffffffffffffffffffffff
0xcbe: V1180 = CALLVALUE
0xcc0: V1181 = ISZERO V1180
0xcc1: V1182 = 0x8fc
0xcc4: V1183 = MUL 0x8fc V1181
0xcc6: V1184 = 0x0
0xcce: V1185 = CALL V1183 V1179 V1180 V1172 0x0 V1172 0x0
0xcd4: V1186 = ISZERO V1185
0xcd5: V1187 = ISZERO V1186
0xcd6: V1188 = 0x49e
0xcd9: THROWI V1187
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xcda
[0xcda:0xcde]
---
Predecessors: [0xc5b]
Successors: [0xcdf]
---
0xcda PUSH2 0x0
0xcdd JUMP
0xcde JUMPDEST
---
0xcda: V1189 = 0x0
0xcdd: THROW 
0xcde: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcdf
[0xcdf:0xcdf]
---
Predecessors: [0xcda]
Successors: [0xce0]
---
0xcdf JUMPDEST
---
0xcdf: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce0
[0xce0:0xcfc]
---
Predecessors: [0xcdf]
Successors: [0xcfd]
---
0xce0 JUMPDEST
0xce1 POP
0xce2 POP
0xce3 POP
0xce4 JUMP
0xce5 JUMPDEST
0xce6 PUSH1 0x0
0xce8 DUP1
0xce9 SLOAD
0xcea CALLER
0xceb PUSH1 0x1
0xced PUSH1 0xa0
0xcef PUSH1 0x2
0xcf1 EXP
0xcf2 SUB
0xcf3 SWAP1
0xcf4 DUP2
0xcf5 AND
0xcf6 SWAP2
0xcf7 AND
0xcf8 EQ
0xcf9 PUSH2 0x4c1
0xcfc JUMPI
---
0xce0: JUMPDEST 
0xce4: JUMP S3
0xce5: JUMPDEST 
0xce6: V1190 = 0x0
0xce9: V1191 = S[0x0]
0xcea: V1192 = CALLER
0xceb: V1193 = 0x1
0xced: V1194 = 0xa0
0xcef: V1195 = 0x2
0xcf1: V1196 = EXP 0x2 0xa0
0xcf2: V1197 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf5: V1198 = AND 0xffffffffffffffffffffffffffffffffffffffff V1192
0xcf7: V1199 = AND V1191 0xffffffffffffffffffffffffffffffffffffffff
0xcf8: V1200 = EQ V1199 V1198
0xcf9: V1201 = 0x4c1
0xcfc: THROWI V1200
---
Entry stack: []
Stack pops: 8
Stack additions: [0x0]
Exit stack: []

================================

Block 0xcfd
[0xcfd:0xd13]
---
Predecessors: [0xce0]
Successors: [0xd14]
---
0xcfd PUSH2 0x0
0xd00 JUMP
0xd01 JUMPDEST
0xd02 PUSH1 0x1
0xd04 PUSH1 0xa0
0xd06 PUSH1 0x2
0xd08 EXP
0xd09 SUB
0xd0a ADDRESS
0xd0b AND
0xd0c BALANCE
0xd0d DUP3
0xd0e SWAP1
0xd0f LT
0xd10 PUSH2 0x530
0xd13 JUMPI
---
0xcfd: V1202 = 0x0
0xd00: THROW 
0xd01: JUMPDEST 
0xd02: V1203 = 0x1
0xd04: V1204 = 0xa0
0xd06: V1205 = 0x2
0xd08: V1206 = EXP 0x2 0xa0
0xd09: V1207 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0a: V1208 = ADDRESS
0xd0b: V1209 = AND V1208 0xffffffffffffffffffffffffffffffffffffffff
0xd0c: V1210 = BALANCE V1209
0xd0f: V1211 = LT V1210 S1
0xd10: V1212 = 0x530
0xd13: THROWI V1211
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xd14
[0xd14:0xd6f]
---
Predecessors: [0xcfd]
Successors: [0xd70]
---
0xd14 PUSH1 0x40
0xd16 DUP1
0xd17 MLOAD
0xd18 DUP4
0xd19 DUP2
0xd1a MSTORE
0xd1b SWAP1
0xd1c MLOAD
0xd1d PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd3e SWAP2
0xd3f DUP2
0xd40 SWAP1
0xd41 SUB
0xd42 PUSH1 0x20
0xd44 ADD
0xd45 SWAP1
0xd46 LOG1
0xd47 PUSH1 0x0
0xd49 DUP1
0xd4a SLOAD
0xd4b PUSH1 0x40
0xd4d MLOAD
0xd4e PUSH1 0x1
0xd50 PUSH1 0xa0
0xd52 PUSH1 0x2
0xd54 EXP
0xd55 SUB
0xd56 SWAP1
0xd57 SWAP2
0xd58 AND
0xd59 SWAP2
0xd5a DUP5
0xd5b ISZERO
0xd5c PUSH2 0x8fc
0xd5f MUL
0xd60 SWAP2
0xd61 DUP6
0xd62 SWAP2
0xd63 DUP2
0xd64 DUP2
0xd65 DUP2
0xd66 DUP6
0xd67 DUP9
0xd68 DUP9
0xd69 CALL
0xd6a SWAP5
0xd6b POP
0xd6c POP
0xd6d POP
0xd6e POP
0xd6f POP
---
0xd14: V1213 = 0x40
0xd17: V1214 = M[0x40]
0xd1a: M[V1214] = S1
0xd1c: V1215 = M[0x40]
0xd1d: V1216 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd41: V1217 = SUB V1214 V1215
0xd42: V1218 = 0x20
0xd44: V1219 = ADD 0x20 V1217
0xd46: LOG V1215 V1219 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd47: V1220 = 0x0
0xd4a: V1221 = S[0x0]
0xd4b: V1222 = 0x40
0xd4d: V1223 = M[0x40]
0xd4e: V1224 = 0x1
0xd50: V1225 = 0xa0
0xd52: V1226 = 0x2
0xd54: V1227 = EXP 0x2 0xa0
0xd55: V1228 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd58: V1229 = AND V1221 0xffffffffffffffffffffffffffffffffffffffff
0xd5b: V1230 = ISZERO S1
0xd5c: V1231 = 0x8fc
0xd5f: V1232 = MUL 0x8fc V1230
0xd69: V1233 = CALL V1232 V1229 S1 V1223 0x0 V1223 0x0
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, V1233]
Exit stack: [S1, V1233]

================================

Block 0xd70
[0xd70:0xd70]
---
Predecessors: [0xd14]
Successors: [0xd71]
---
0xd70 JUMPDEST
---
0xd70: JUMPDEST 
---
Entry stack: [S1, V1233]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1233]

================================

Block 0xd71
[0xd71:0xd71]
---
Predecessors: [0xd70]
Successors: [0xd72]
---
0xd71 JUMPDEST
---
0xd71: JUMPDEST 
---
Entry stack: [S1, V1233]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1233]

================================

Block 0xd72
[0xd72:0xdc5]
---
Predecessors: [0xd71]
Successors: [0xdc6]
---
0xd72 JUMPDEST
0xd73 SWAP2
0xd74 SWAP1
0xd75 POP
0xd76 JUMP
0xd77 JUMPDEST
0xd78 PUSH1 0x1
0xd7a SLOAD
0xd7b PUSH1 0x1
0xd7d PUSH1 0xa0
0xd7f PUSH1 0x2
0xd81 EXP
0xd82 SUB
0xd83 AND
0xd84 DUP2
0xd85 JUMP
0xd86 JUMPDEST
0xd87 PUSH1 0x3
0xd89 SLOAD
0xd8a DUP2
0xd8b JUMP
0xd8c JUMPDEST
0xd8d PUSH1 0x5
0xd8f SLOAD
0xd90 PUSH2 0x100
0xd93 SWAP1
0xd94 DIV
0xd95 PUSH1 0xff
0xd97 AND
0xd98 DUP2
0xd99 JUMP
0xd9a JUMPDEST
0xd9b PUSH1 0x2
0xd9d SLOAD
0xd9e DUP2
0xd9f JUMP
0xda0 JUMPDEST
0xda1 PUSH1 0x0
0xda3 SLOAD
0xda4 PUSH1 0x1
0xda6 PUSH1 0xa0
0xda8 PUSH1 0x2
0xdaa EXP
0xdab SUB
0xdac AND
0xdad DUP2
0xdae JUMP
0xdaf JUMPDEST
0xdb0 PUSH1 0x0
0xdb2 SLOAD
0xdb3 CALLER
0xdb4 PUSH1 0x1
0xdb6 PUSH1 0xa0
0xdb8 PUSH1 0x2
0xdba EXP
0xdbb SUB
0xdbc SWAP1
0xdbd DUP2
0xdbe AND
0xdbf SWAP2
0xdc0 AND
0xdc1 EQ
0xdc2 PUSH2 0x58a
0xdc5 JUMPI
---
0xd72: JUMPDEST 
0xd76: JUMP S2
0xd77: JUMPDEST 
0xd78: V1234 = 0x1
0xd7a: V1235 = S[0x1]
0xd7b: V1236 = 0x1
0xd7d: V1237 = 0xa0
0xd7f: V1238 = 0x2
0xd81: V1239 = EXP 0x2 0xa0
0xd82: V1240 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd83: V1241 = AND 0xffffffffffffffffffffffffffffffffffffffff V1235
0xd85: JUMP S0
0xd86: JUMPDEST 
0xd87: V1242 = 0x3
0xd89: V1243 = S[0x3]
0xd8b: JUMP S0
0xd8c: JUMPDEST 
0xd8d: V1244 = 0x5
0xd8f: V1245 = S[0x5]
0xd90: V1246 = 0x100
0xd94: V1247 = DIV V1245 0x100
0xd95: V1248 = 0xff
0xd97: V1249 = AND 0xff V1247
0xd99: JUMP S0
0xd9a: JUMPDEST 
0xd9b: V1250 = 0x2
0xd9d: V1251 = S[0x2]
0xd9f: JUMP S0
0xda0: JUMPDEST 
0xda1: V1252 = 0x0
0xda3: V1253 = S[0x0]
0xda4: V1254 = 0x1
0xda6: V1255 = 0xa0
0xda8: V1256 = 0x2
0xdaa: V1257 = EXP 0x2 0xa0
0xdab: V1258 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdac: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffff V1253
0xdae: JUMP S0
0xdaf: JUMPDEST 
0xdb0: V1260 = 0x0
0xdb2: V1261 = S[0x0]
0xdb3: V1262 = CALLER
0xdb4: V1263 = 0x1
0xdb6: V1264 = 0xa0
0xdb8: V1265 = 0x2
0xdba: V1266 = EXP 0x2 0xa0
0xdbb: V1267 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdbe: V1268 = AND 0xffffffffffffffffffffffffffffffffffffffff V1262
0xdc0: V1269 = AND V1261 0xffffffffffffffffffffffffffffffffffffffff
0xdc1: V1270 = EQ V1269 V1268
0xdc2: V1271 = 0x58a
0xdc5: THROWI V1270
---
Entry stack: [S1, V1233]
Stack pops: 98
Stack additions: []
Exit stack: []

================================

Block 0xdc6
[0xdc6:0xdfd]
---
Predecessors: [0xd72]
Successors: [0xdfe]
---
0xdc6 PUSH2 0x0
0xdc9 JUMP
0xdca JUMPDEST
0xdcb PUSH1 0x40
0xdcd DUP1
0xdce MLOAD
0xdcf CALLVALUE
0xdd0 DUP2
0xdd1 MSTORE
0xdd2 SWAP1
0xdd3 MLOAD
0xdd4 PUSH32 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xdf5 SWAP2
0xdf6 DUP2
0xdf7 SWAP1
0xdf8 SUB
0xdf9 PUSH1 0x20
0xdfb ADD
0xdfc SWAP1
0xdfd LOG1
---
0xdc6: V1272 = 0x0
0xdc9: THROW 
0xdca: JUMPDEST 
0xdcb: V1273 = 0x40
0xdce: V1274 = M[0x40]
0xdcf: V1275 = CALLVALUE
0xdd1: M[V1274] = V1275
0xdd3: V1276 = M[0x40]
0xdd4: V1277 = 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xdf8: V1278 = SUB V1274 V1276
0xdf9: V1279 = 0x20
0xdfb: V1280 = ADD 0x20 V1278
0xdfd: LOG V1276 V1280 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdfe
[0xdfe:0xdfe]
---
Predecessors: [0xdc6]
Successors: [0xdff]
---
0xdfe JUMPDEST
---
0xdfe: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdff
[0xdff:0xe1d]
---
Predecessors: [0xdfe]
Successors: [0xe1e]
---
0xdff JUMPDEST
0xe00 JUMP
0xe01 JUMPDEST
0xe02 PUSH1 0x4
0xe04 SLOAD
0xe05 DUP2
0xe06 JUMP
0xe07 JUMPDEST
0xe08 PUSH1 0x0
0xe0a SLOAD
0xe0b CALLER
0xe0c PUSH1 0x1
0xe0e PUSH1 0xa0
0xe10 PUSH1 0x2
0xe12 EXP
0xe13 SUB
0xe14 SWAP1
0xe15 DUP2
0xe16 AND
0xe17 SWAP2
0xe18 AND
0xe19 EQ
0xe1a PUSH2 0x5e2
0xe1d JUMPI
---
0xdff: JUMPDEST 
0xe00: JUMP S0
0xe01: JUMPDEST 
0xe02: V1281 = 0x4
0xe04: V1282 = S[0x4]
0xe06: JUMP S0
0xe07: JUMPDEST 
0xe08: V1283 = 0x0
0xe0a: V1284 = S[0x0]
0xe0b: V1285 = CALLER
0xe0c: V1286 = 0x1
0xe0e: V1287 = 0xa0
0xe10: V1288 = 0x2
0xe12: V1289 = EXP 0x2 0xa0
0xe13: V1290 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe16: V1291 = AND 0xffffffffffffffffffffffffffffffffffffffff V1285
0xe18: V1292 = AND V1284 0xffffffffffffffffffffffffffffffffffffffff
0xe19: V1293 = EQ V1292 V1291
0xe1a: V1294 = 0x5e2
0xe1d: THROWI V1293
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xe1e
[0xe1e:0xe96]
---
Predecessors: [0xdff]
Successors: [0xe97]
---
0xe1e PUSH2 0x0
0xe21 JUMP
0xe22 JUMPDEST
0xe23 PUSH1 0x5
0xe25 DUP1
0xe26 SLOAD
0xe27 PUSH1 0xff
0xe29 NOT
0xe2a AND
0xe2b PUSH1 0xf8
0xe2d PUSH1 0x2
0xe2f EXP
0xe30 DUP5
0xe31 DUP2
0xe32 MUL
0xe33 DUP2
0xe34 SWAP1
0xe35 DIV
0xe36 SWAP2
0xe37 SWAP1
0xe38 SWAP2
0xe39 OR
0xe3a PUSH2 0xff00
0xe3d NOT
0xe3e AND
0xe3f PUSH2 0x100
0xe42 DUP5
0xe43 DUP4
0xe44 MUL
0xe45 SWAP3
0xe46 SWAP1
0xe47 SWAP3
0xe48 DIV
0xe49 DUP3
0xe4a MUL
0xe4b OR
0xe4c SWAP2
0xe4d DUP3
0xe4e SWAP1
0xe4f SSTORE
0xe50 PUSH1 0x40
0xe52 DUP1
0xe53 MLOAD
0xe54 PUSH1 0xff
0xe56 DUP1
0xe57 DUP6
0xe58 AND
0xe59 ISZERO
0xe5a ISZERO
0xe5b DUP3
0xe5c MSTORE
0xe5d SWAP3
0xe5e SWAP1
0xe5f SWAP4
0xe60 DIV
0xe61 SWAP1
0xe62 SWAP2
0xe63 AND
0xe64 ISZERO
0xe65 ISZERO
0xe66 PUSH1 0x20
0xe68 DUP4
0xe69 ADD
0xe6a MSTORE
0xe6b DUP1
0xe6c MLOAD
0xe6d PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0xe8e SWAP3
0xe8f DUP2
0xe90 SWAP1
0xe91 SUB
0xe92 SWAP1
0xe93 SWAP2
0xe94 ADD
0xe95 SWAP1
0xe96 LOG1
---
0xe1e: V1295 = 0x0
0xe21: THROW 
0xe22: JUMPDEST 
0xe23: V1296 = 0x5
0xe26: V1297 = S[0x5]
0xe27: V1298 = 0xff
0xe29: V1299 = NOT 0xff
0xe2a: V1300 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1297
0xe2b: V1301 = 0xf8
0xe2d: V1302 = 0x2
0xe2f: V1303 = EXP 0x2 0xf8
0xe32: V1304 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S1
0xe35: V1305 = DIV V1304 0x100000000000000000000000000000000000000000000000000000000000000
0xe39: V1306 = OR V1305 V1300
0xe3a: V1307 = 0xff00
0xe3d: V1308 = NOT 0xff00
0xe3e: V1309 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1306
0xe3f: V1310 = 0x100
0xe44: V1311 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S0
0xe48: V1312 = DIV V1311 0x100000000000000000000000000000000000000000000000000000000000000
0xe4a: V1313 = MUL 0x100 V1312
0xe4b: V1314 = OR V1313 V1309
0xe4f: S[0x5] = V1314
0xe50: V1315 = 0x40
0xe53: V1316 = M[0x40]
0xe54: V1317 = 0xff
0xe58: V1318 = AND V1314 0xff
0xe59: V1319 = ISZERO V1318
0xe5a: V1320 = ISZERO V1319
0xe5c: M[V1316] = V1320
0xe60: V1321 = DIV V1314 0x100
0xe63: V1322 = AND 0xff V1321
0xe64: V1323 = ISZERO V1322
0xe65: V1324 = ISZERO V1323
0xe66: V1325 = 0x20
0xe69: V1326 = ADD V1316 0x20
0xe6a: M[V1326] = V1324
0xe6c: V1327 = M[0x40]
0xe6d: V1328 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0xe91: V1329 = SUB V1316 V1327
0xe94: V1330 = ADD 0x40 V1329
0xe96: LOG V1327 V1330 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xe97
[0xe97:0xe97]
---
Predecessors: [0xe1e]
Successors: [0xe98]
---
0xe97 JUMPDEST
---
0xe97: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0xe98
[0xe98:0xebc]
---
Predecessors: [0xe97]
Successors: [0xebd]
---
0xe98 JUMPDEST
0xe99 POP
0xe9a POP
0xe9b JUMP
0xe9c JUMPDEST
0xe9d PUSH1 0x5
0xe9f SLOAD
0xea0 PUSH1 0xff
0xea2 AND
0xea3 DUP2
0xea4 JUMP
0xea5 JUMPDEST
0xea6 PUSH1 0x0
0xea8 DUP1
0xea9 SLOAD
0xeaa CALLER
0xeab PUSH1 0x1
0xead PUSH1 0xa0
0xeaf PUSH1 0x2
0xeb1 EXP
0xeb2 SUB
0xeb3 SWAP1
0xeb4 DUP2
0xeb5 AND
0xeb6 SWAP2
0xeb7 AND
0xeb8 EQ
0xeb9 PUSH2 0x681
0xebc JUMPI
---
0xe98: JUMPDEST 
0xe9b: JUMP S2
0xe9c: JUMPDEST 
0xe9d: V1331 = 0x5
0xe9f: V1332 = S[0x5]
0xea0: V1333 = 0xff
0xea2: V1334 = AND 0xff V1332
0xea4: JUMP S0
0xea5: JUMPDEST 
0xea6: V1335 = 0x0
0xea9: V1336 = S[0x0]
0xeaa: V1337 = CALLER
0xeab: V1338 = 0x1
0xead: V1339 = 0xa0
0xeaf: V1340 = 0x2
0xeb1: V1341 = EXP 0x2 0xa0
0xeb2: V1342 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb5: V1343 = AND 0xffffffffffffffffffffffffffffffffffffffff V1337
0xeb7: V1344 = AND V1336 0xffffffffffffffffffffffffffffffffffffffff
0xeb8: V1345 = EQ V1344 V1343
0xeb9: V1346 = 0x681
0xebc: THROWI V1345
---
Entry stack: [S1, S0]
Stack pops: 10
Stack additions: [0x0]
Exit stack: []

================================

Block 0xebd
[0xebd:0xf5f]
---
Predecessors: [0xe98]
Successors: [0xf60]
---
0xebd PUSH2 0x0
0xec0 JUMP
0xec1 JUMPDEST
0xec2 PUSH1 0x40
0xec4 DUP1
0xec5 MLOAD
0xec6 PUSH1 0x1
0xec8 PUSH1 0xa0
0xeca PUSH1 0x2
0xecc EXP
0xecd SUB
0xece DUP6
0xecf AND
0xed0 DUP2
0xed1 MSTORE
0xed2 PUSH1 0x20
0xed4 DUP2
0xed5 ADD
0xed6 DUP5
0xed7 SWAP1
0xed8 MSTORE
0xed9 DUP2
0xeda MLOAD
0xedb PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xefc SWAP3
0xefd SWAP2
0xefe DUP2
0xeff SWAP1
0xf00 SUB
0xf01 SWAP1
0xf02 SWAP2
0xf03 ADD
0xf04 SWAP1
0xf05 LOG1
0xf06 PUSH1 0x0
0xf08 DUP1
0xf09 SLOAD
0xf0a PUSH1 0x40
0xf0c DUP1
0xf0d MLOAD
0xf0e PUSH1 0x20
0xf10 SWAP1
0xf11 DUP2
0xf12 ADD
0xf13 DUP5
0xf14 SWAP1
0xf15 MSTORE
0xf16 DUP2
0xf17 MLOAD
0xf18 PUSH1 0xe0
0xf1a PUSH1 0x2
0xf1c EXP
0xf1d PUSH4 0xa9059cbb
0xf22 MUL
0xf23 DUP2
0xf24 MSTORE
0xf25 PUSH1 0x1
0xf27 PUSH1 0xa0
0xf29 PUSH1 0x2
0xf2b EXP
0xf2c SUB
0xf2d SWAP4
0xf2e DUP5
0xf2f AND
0xf30 PUSH1 0x4
0xf32 DUP3
0xf33 ADD
0xf34 MSTORE
0xf35 PUSH1 0x24
0xf37 DUP2
0xf38 ADD
0xf39 DUP8
0xf3a SWAP1
0xf3b MSTORE
0xf3c SWAP2
0xf3d MLOAD
0xf3e SWAP3
0xf3f DUP8
0xf40 AND
0xf41 SWAP4
0xf42 PUSH4 0xa9059cbb
0xf47 SWAP4
0xf48 PUSH1 0x44
0xf4a DUP1
0xf4b DUP6
0xf4c ADD
0xf4d SWAP5
0xf4e SWAP2
0xf4f SWAP3
0xf50 SWAP2
0xf51 DUP4
0xf52 SWAP1
0xf53 SUB
0xf54 ADD
0xf55 SWAP1
0xf56 DUP3
0xf57 SWAP1
0xf58 DUP8
0xf59 DUP1
0xf5a EXTCODESIZE
0xf5b ISZERO
0xf5c PUSH2 0x0
0xf5f JUMPI
---
0xebd: V1347 = 0x0
0xec0: THROW 
0xec1: JUMPDEST 
0xec2: V1348 = 0x40
0xec5: V1349 = M[0x40]
0xec6: V1350 = 0x1
0xec8: V1351 = 0xa0
0xeca: V1352 = 0x2
0xecc: V1353 = EXP 0x2 0xa0
0xecd: V1354 = SUB 0x10000000000000000000000000000000000000000 0x1
0xecf: V1355 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xed1: M[V1349] = V1355
0xed2: V1356 = 0x20
0xed5: V1357 = ADD V1349 0x20
0xed8: M[V1357] = S1
0xeda: V1358 = M[0x40]
0xedb: V1359 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xf00: V1360 = SUB V1349 V1358
0xf03: V1361 = ADD 0x40 V1360
0xf05: LOG V1358 V1361 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xf06: V1362 = 0x0
0xf09: V1363 = S[0x0]
0xf0a: V1364 = 0x40
0xf0d: V1365 = M[0x40]
0xf0e: V1366 = 0x20
0xf12: V1367 = ADD 0x20 V1365
0xf15: M[V1367] = 0x0
0xf17: V1368 = M[0x40]
0xf18: V1369 = 0xe0
0xf1a: V1370 = 0x2
0xf1c: V1371 = EXP 0x2 0xe0
0xf1d: V1372 = 0xa9059cbb
0xf22: V1373 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xf24: M[V1368] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf25: V1374 = 0x1
0xf27: V1375 = 0xa0
0xf29: V1376 = 0x2
0xf2b: V1377 = EXP 0x2 0xa0
0xf2c: V1378 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2f: V1379 = AND 0xffffffffffffffffffffffffffffffffffffffff V1363
0xf30: V1380 = 0x4
0xf33: V1381 = ADD V1368 0x4
0xf34: M[V1381] = V1379
0xf35: V1382 = 0x24
0xf38: V1383 = ADD V1368 0x24
0xf3b: M[V1383] = S1
0xf3d: V1384 = M[0x40]
0xf40: V1385 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xf42: V1386 = 0xa9059cbb
0xf48: V1387 = 0x44
0xf4c: V1388 = ADD V1368 0x44
0xf53: V1389 = SUB V1368 V1384
0xf54: V1390 = ADD V1389 0x44
0xf5a: V1391 = EXTCODESIZE V1385
0xf5b: V1392 = ISZERO V1391
0xf5c: V1393 = 0x0
0xf5f: THROWI V1392
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1385, 0x0, V1384, V1390, V1384, 0x20, V1388, 0xa9059cbb, V1385, S0, S1, S2]
Exit stack: []

================================

Block 0xf60
[0xf60:0xf69]
---
Predecessors: [0xebd]
Successors: [0xf6a]
---
0xf60 PUSH1 0x32
0xf62 GAS
0xf63 SUB
0xf64 CALL
0xf65 ISZERO
0xf66 PUSH2 0x0
0xf69 JUMPI
---
0xf60: V1394 = 0x32
0xf62: V1395 = GAS
0xf63: V1396 = SUB V1395 0x32
0xf64: V1397 = CALL V1396 V1385 0x0 V1384 V1390 V1384 0x20
0xf65: V1398 = ISZERO V1397
0xf66: V1399 = 0x0
0xf69: THROWI V1398
---
Entry stack: [S11, S10, S9, V1385, 0xa9059cbb, V1388, 0x20, V1384, V1390, V1384, 0x0, V1385]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1385, 0xa9059cbb, V1388]

================================

Block 0xf6a
[0xf6a:0xf72]
---
Predecessors: [0xf60]
Successors: [0xf73]
---
0xf6a POP
0xf6b POP
0xf6c PUSH1 0x40
0xf6e MLOAD
0xf6f MLOAD
0xf70 SWAP2
0xf71 POP
0xf72 POP
---
0xf6c: V1400 = 0x40
0xf6e: V1401 = M[0x40]
0xf6f: V1402 = M[V1401]
---
Entry stack: [S5, S4, S3, V1385, 0xa9059cbb, V1388]
Stack pops: 4
Stack additions: [V1402]
Exit stack: [S5, S4, V1402]

================================

Block 0xf73
[0xf73:0xf73]
---
Predecessors: [0xf6a]
Successors: [0xf74]
---
0xf73 JUMPDEST
---
0xf73: JUMPDEST 
---
Entry stack: [S2, S1, V1402]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, V1402]

================================

Block 0xf74
[0xf74:0xf91]
---
Predecessors: [0xf73]
Successors: [0xf92]
---
0xf74 JUMPDEST
0xf75 SWAP3
0xf76 SWAP2
0xf77 POP
0xf78 POP
0xf79 JUMP
0xf7a JUMPDEST
0xf7b PUSH1 0x0
0xf7d DUP1
0xf7e SLOAD
0xf7f CALLER
0xf80 PUSH1 0x1
0xf82 PUSH1 0xa0
0xf84 PUSH1 0x2
0xf86 EXP
0xf87 SUB
0xf88 SWAP1
0xf89 DUP2
0xf8a AND
0xf8b SWAP2
0xf8c AND
0xf8d EQ
0xf8e PUSH2 0x756
0xf91 JUMPI
---
0xf74: JUMPDEST 
0xf79: JUMP S3
0xf7a: JUMPDEST 
0xf7b: V1403 = 0x0
0xf7e: V1404 = S[0x0]
0xf7f: V1405 = CALLER
0xf80: V1406 = 0x1
0xf82: V1407 = 0xa0
0xf84: V1408 = 0x2
0xf86: V1409 = EXP 0x2 0xa0
0xf87: V1410 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8a: V1411 = AND 0xffffffffffffffffffffffffffffffffffffffff V1405
0xf8c: V1412 = AND V1404 0xffffffffffffffffffffffffffffffffffffffff
0xf8d: V1413 = EQ V1412 V1411
0xf8e: V1414 = 0x756
0xf91: THROWI V1413
---
Entry stack: [S2, S1, V1402]
Stack pops: 7
Stack additions: [0x0]
Exit stack: []

================================

Block 0xf92
[0xf92:0x1026]
---
Predecessors: [0xf74]
Successors: [0x1027]
---
0xf92 PUSH2 0x0
0xf95 JUMP
0xf96 JUMPDEST
0xf97 PUSH1 0x40
0xf99 DUP1
0xf9a MLOAD
0xf9b DUP4
0xf9c DUP2
0xf9d MSTORE
0xf9e SWAP1
0xf9f MLOAD
0xfa0 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfc1 SWAP2
0xfc2 DUP2
0xfc3 SWAP1
0xfc4 SUB
0xfc5 PUSH1 0x20
0xfc7 ADD
0xfc8 SWAP1
0xfc9 LOG1
0xfca PUSH1 0x1
0xfcc SLOAD
0xfcd PUSH1 0x0
0xfcf DUP1
0xfd0 SLOAD
0xfd1 PUSH1 0x40
0xfd3 DUP1
0xfd4 MLOAD
0xfd5 PUSH1 0x20
0xfd7 SWAP1
0xfd8 DUP2
0xfd9 ADD
0xfda DUP5
0xfdb SWAP1
0xfdc MSTORE
0xfdd DUP2
0xfde MLOAD
0xfdf PUSH1 0xe0
0xfe1 PUSH1 0x2
0xfe3 EXP
0xfe4 PUSH4 0xa9059cbb
0xfe9 MUL
0xfea DUP2
0xfeb MSTORE
0xfec PUSH1 0x1
0xfee PUSH1 0xa0
0xff0 PUSH1 0x2
0xff2 EXP
0xff3 SUB
0xff4 SWAP4
0xff5 DUP5
0xff6 AND
0xff7 PUSH1 0x4
0xff9 DUP3
0xffa ADD
0xffb MSTORE
0xffc PUSH1 0x24
0xffe DUP2
0xfff ADD
0x1000 DUP9
0x1001 SWAP1
0x1002 MSTORE
0x1003 SWAP2
0x1004 MLOAD
0x1005 SWAP3
0x1006 SWAP1
0x1007 SWAP5
0x1008 AND
0x1009 SWAP4
0x100a PUSH4 0xa9059cbb
0x100f SWAP4
0x1010 PUSH1 0x44
0x1012 DUP1
0x1013 DUP5
0x1014 ADD
0x1015 SWAP5
0x1016 SWAP3
0x1017 SWAP4
0x1018 DUP4
0x1019 SWAP1
0x101a SUB
0x101b ADD
0x101c SWAP1
0x101d DUP3
0x101e SWAP1
0x101f DUP8
0x1020 DUP1
0x1021 EXTCODESIZE
0x1022 ISZERO
0x1023 PUSH2 0x0
0x1026 JUMPI
---
0xf92: V1415 = 0x0
0xf95: THROW 
0xf96: JUMPDEST 
0xf97: V1416 = 0x40
0xf9a: V1417 = M[0x40]
0xf9d: M[V1417] = S1
0xf9f: V1418 = M[0x40]
0xfa0: V1419 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfc4: V1420 = SUB V1417 V1418
0xfc5: V1421 = 0x20
0xfc7: V1422 = ADD 0x20 V1420
0xfc9: LOG V1418 V1422 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfca: V1423 = 0x1
0xfcc: V1424 = S[0x1]
0xfcd: V1425 = 0x0
0xfd0: V1426 = S[0x0]
0xfd1: V1427 = 0x40
0xfd4: V1428 = M[0x40]
0xfd5: V1429 = 0x20
0xfd9: V1430 = ADD 0x20 V1428
0xfdc: M[V1430] = 0x0
0xfde: V1431 = M[0x40]
0xfdf: V1432 = 0xe0
0xfe1: V1433 = 0x2
0xfe3: V1434 = EXP 0x2 0xe0
0xfe4: V1435 = 0xa9059cbb
0xfe9: V1436 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xfeb: M[V1431] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xfec: V1437 = 0x1
0xfee: V1438 = 0xa0
0xff0: V1439 = 0x2
0xff2: V1440 = EXP 0x2 0xa0
0xff3: V1441 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff6: V1442 = AND 0xffffffffffffffffffffffffffffffffffffffff V1426
0xff7: V1443 = 0x4
0xffa: V1444 = ADD V1431 0x4
0xffb: M[V1444] = V1442
0xffc: V1445 = 0x24
0xfff: V1446 = ADD V1431 0x24
0x1002: M[V1446] = S1
0x1004: V1447 = M[0x40]
0x1008: V1448 = AND V1424 0xffffffffffffffffffffffffffffffffffffffff
0x100a: V1449 = 0xa9059cbb
0x1010: V1450 = 0x44
0x1014: V1451 = ADD V1431 0x44
0x101a: V1452 = SUB V1431 V1447
0x101b: V1453 = ADD V1452 0x44
0x1021: V1454 = EXTCODESIZE V1448
0x1022: V1455 = ISZERO V1454
0x1023: V1456 = 0x0
0x1026: THROWI V1455
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1448, 0x0, V1447, V1453, V1447, 0x20, V1451, 0xa9059cbb, V1448, S0, S1]
Exit stack: []

================================

Block 0x1027
[0x1027:0x1030]
---
Predecessors: [0xf92]
Successors: [0x1031]
---
0x1027 PUSH1 0x32
0x1029 GAS
0x102a SUB
0x102b CALL
0x102c ISZERO
0x102d PUSH2 0x0
0x1030 JUMPI
---
0x1027: V1457 = 0x32
0x1029: V1458 = GAS
0x102a: V1459 = SUB V1458 0x32
0x102b: V1460 = CALL V1459 V1448 0x0 V1447 V1453 V1447 0x20
0x102c: V1461 = ISZERO V1460
0x102d: V1462 = 0x0
0x1030: THROWI V1461
---
Entry stack: [S10, S9, V1448, 0xa9059cbb, V1451, 0x20, V1447, V1453, V1447, 0x0, V1448]
Stack pops: 6
Stack additions: []
Exit stack: [S10, S9, V1448, 0xa9059cbb, V1451]

================================

Block 0x1031
[0x1031:0x1039]
---
Predecessors: [0x1027]
Successors: [0x103a]
---
0x1031 POP
0x1032 POP
0x1033 PUSH1 0x40
0x1035 MLOAD
0x1036 MLOAD
0x1037 SWAP2
0x1038 POP
0x1039 POP
---
0x1033: V1463 = 0x40
0x1035: V1464 = M[0x40]
0x1036: V1465 = M[V1464]
---
Entry stack: [S4, S3, V1448, 0xa9059cbb, V1451]
Stack pops: 4
Stack additions: [V1465]
Exit stack: [S4, V1465]

================================

Block 0x103a
[0x103a:0x103a]
---
Predecessors: [0x1031]
Successors: [0x103b]
---
0x103a JUMPDEST
---
0x103a: JUMPDEST 
---
Entry stack: [S1, V1465]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1465]

================================

Block 0x103b
[0x103b:0x1050]
---
Predecessors: [0x103a]
Successors: [0x1051]
---
0x103b JUMPDEST
0x103c SWAP2
0x103d SWAP1
0x103e POP
0x103f JUMP
0x1040 JUMPDEST
0x1041 PUSH1 0x5
0x1043 SLOAD
0x1044 PUSH1 0x0
0x1046 SWAP1
0x1047 DUP2
0x1048 SWAP1
0x1049 PUSH1 0xff
0x104b AND
0x104c DUP1
0x104d PUSH2 0x824
0x1050 JUMPI
---
0x103b: JUMPDEST 
0x103f: JUMP S2
0x1040: JUMPDEST 
0x1041: V1466 = 0x5
0x1043: V1467 = S[0x5]
0x1044: V1468 = 0x0
0x1049: V1469 = 0xff
0x104b: V1470 = AND 0xff V1467
0x104d: V1471 = 0x824
0x1050: THROWI V1470
---
Entry stack: [S1, V1465]
Stack pops: 5
Stack additions: [V1470, 0x0, 0x0]
Exit stack: []

================================

Block 0x1051
[0x1051:0x1063]
---
Predecessors: [0x103b]
Successors: [0x1064]
---
0x1051 POP
0x1052 PUSH1 0x0
0x1054 SLOAD
0x1055 CALLER
0x1056 PUSH1 0x1
0x1058 PUSH1 0xa0
0x105a PUSH1 0x2
0x105c EXP
0x105d SUB
0x105e SWAP1
0x105f DUP2
0x1060 AND
0x1061 SWAP2
0x1062 AND
0x1063 EQ
---
0x1052: V1472 = 0x0
0x1054: V1473 = S[0x0]
0x1055: V1474 = CALLER
0x1056: V1475 = 0x1
0x1058: V1476 = 0xa0
0x105a: V1477 = 0x2
0x105c: V1478 = EXP 0x2 0xa0
0x105d: V1479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1060: V1480 = AND 0xffffffffffffffffffffffffffffffffffffffff V1474
0x1062: V1481 = AND V1473 0xffffffffffffffffffffffffffffffffffffffff
0x1063: V1482 = EQ V1481 V1480
---
Entry stack: [0x0, 0x0, V1470]
Stack pops: 1
Stack additions: [V1482]
Exit stack: [0x0, 0x0, V1482]

================================

Block 0x1064
[0x1064:0x1069]
---
Predecessors: [0x1051]
Successors: [0x106a]
---
0x1064 JUMPDEST
0x1065 ISZERO
0x1066 PUSH2 0x49e
0x1069 JUMPI
---
0x1064: JUMPDEST 
0x1065: V1483 = ISZERO V1482
0x1066: V1484 = 0x49e
0x1069: THROWI V1483
---
Entry stack: [0x0, 0x0, V1482]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0]

================================

Block 0x106a
[0x106a:0x107d]
---
Predecessors: [0x1064]
Successors: [0x107e]
---
0x106a PUSH1 0x2
0x106c SLOAD
0x106d ADDRESS
0x106e PUSH1 0x1
0x1070 PUSH1 0xa0
0x1072 PUSH1 0x2
0x1074 EXP
0x1075 SUB
0x1076 AND
0x1077 BALANCE
0x1078 DUP2
0x1079 ISZERO
0x107a PUSH2 0x0
0x107d JUMPI
---
0x106a: V1485 = 0x2
0x106c: V1486 = S[0x2]
0x106d: V1487 = ADDRESS
0x106e: V1488 = 0x1
0x1070: V1489 = 0xa0
0x1072: V1490 = 0x2
0x1074: V1491 = EXP 0x2 0xa0
0x1075: V1492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1076: V1493 = AND 0xffffffffffffffffffffffffffffffffffffffff V1487
0x1077: V1494 = BALANCE V1493
0x1079: V1495 = ISZERO V1486
0x107a: V1496 = 0x0
0x107d: THROWI V1495
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V1486, V1494]
Exit stack: [0x0, 0x0, V1486, V1494]

================================

Block 0x107e
[0x107e:0x108a]
---
Predecessors: [0x106a]
Successors: [0x108b]
---
0x107e DIV
0x107f SWAP2
0x1080 POP
0x1081 PUSH1 0x4
0x1083 SLOAD
0x1084 DUP4
0x1085 DUP2
0x1086 ISZERO
0x1087 PUSH2 0x0
0x108a JUMPI
---
0x107e: V1497 = DIV V1494 V1486
0x1081: V1498 = 0x4
0x1083: V1499 = S[0x4]
0x1086: V1500 = ISZERO V1499
0x1087: V1501 = 0x0
0x108a: THROWI V1500
---
Entry stack: [0x0, 0x0, V1486, V1494]
Stack pops: 5
Stack additions: [S4, V1497, S2, V1499, S4]
Exit stack: [S0, V1497, 0x0, V1499, S0]

================================

Block 0x108b
[0x108b:0x1095]
---
Predecessors: [0x107e]
Successors: [0x1096]
---
0x108b DIV
0x108c SWAP1
0x108d POP
0x108e DUP2
0x108f DUP2
0x1090 GT
0x1091 ISZERO
0x1092 PUSH2 0x858
0x1095 JUMPI
---
0x108b: V1502 = DIV S0 V1499
0x1090: V1503 = GT V1502 V1497
0x1091: V1504 = ISZERO V1503
0x1092: V1505 = 0x858
0x1095: THROWI V1504
---
Entry stack: [S4, V1497, 0x0, V1499, S0]
Stack pops: 4
Stack additions: [S3, V1502]
Exit stack: [S4, V1497, V1502]

================================

Block 0x1096
[0x1096:0x1097]
---
Predecessors: [0x108b]
Successors: [0x1098]
---
0x1096 POP
0x1097 DUP1
---
0x1096: NOP 
---
Entry stack: [S2, V1497, V1502]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [S2, V1497, V1497]

================================

Block 0x1098
[0x1098:0x10a1]
---
Predecessors: [0x1096]
Successors: [0x10a2]
---
0x1098 JUMPDEST
0x1099 PUSH1 0x0
0x109b DUP2
0x109c GT
0x109d ISZERO
0x109e PUSH2 0x931
0x10a1 JUMPI
---
0x1098: JUMPDEST 
0x1099: V1506 = 0x0
0x109c: V1507 = GT V1497 0x0
0x109d: V1508 = ISZERO V1507
0x109e: V1509 = 0x931
0x10a1: THROWI V1508
---
Entry stack: [S2, V1497, V1497]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S2, V1497, V1497]

================================

Block 0x10a2
[0x10a2:0x1121]
---
Predecessors: [0x1098]
Successors: [0x1122]
---
0x10a2 PUSH1 0x1
0x10a4 PUSH1 0x0
0x10a6 SWAP1
0x10a7 SLOAD
0x10a8 SWAP1
0x10a9 PUSH2 0x100
0x10ac EXP
0x10ad SWAP1
0x10ae DIV
0x10af PUSH1 0x1
0x10b1 PUSH1 0xa0
0x10b3 PUSH1 0x2
0x10b5 EXP
0x10b6 SUB
0x10b7 AND
0x10b8 PUSH1 0x1
0x10ba PUSH1 0xa0
0x10bc PUSH1 0x2
0x10be EXP
0x10bf SUB
0x10c0 AND
0x10c1 PUSH4 0x23b872dd
0x10c6 CALLER
0x10c7 ADDRESS
0x10c8 PUSH1 0x4
0x10ca SLOAD
0x10cb DUP6
0x10cc MUL
0x10cd PUSH1 0x0
0x10cf PUSH1 0x40
0x10d1 MLOAD
0x10d2 PUSH1 0x20
0x10d4 ADD
0x10d5 MSTORE
0x10d6 PUSH1 0x40
0x10d8 MLOAD
0x10d9 DUP5
0x10da PUSH1 0xe0
0x10dc PUSH1 0x2
0x10de EXP
0x10df MUL
0x10e0 DUP2
0x10e1 MSTORE
0x10e2 PUSH1 0x4
0x10e4 ADD
0x10e5 DUP1
0x10e6 DUP5
0x10e7 PUSH1 0x1
0x10e9 PUSH1 0xa0
0x10eb PUSH1 0x2
0x10ed EXP
0x10ee SUB
0x10ef AND
0x10f0 DUP2
0x10f1 MSTORE
0x10f2 PUSH1 0x20
0x10f4 ADD
0x10f5 DUP4
0x10f6 PUSH1 0x1
0x10f8 PUSH1 0xa0
0x10fa PUSH1 0x2
0x10fc EXP
0x10fd SUB
0x10fe AND
0x10ff DUP2
0x1100 MSTORE
0x1101 PUSH1 0x20
0x1103 ADD
0x1104 DUP3
0x1105 DUP2
0x1106 MSTORE
0x1107 PUSH1 0x20
0x1109 ADD
0x110a SWAP4
0x110b POP
0x110c POP
0x110d POP
0x110e POP
0x110f PUSH1 0x20
0x1111 PUSH1 0x40
0x1113 MLOAD
0x1114 DUP1
0x1115 DUP4
0x1116 SUB
0x1117 DUP2
0x1118 PUSH1 0x0
0x111a DUP8
0x111b DUP1
0x111c EXTCODESIZE
0x111d ISZERO
0x111e PUSH2 0x0
0x1121 JUMPI
---
0x10a2: V1510 = 0x1
0x10a4: V1511 = 0x0
0x10a7: V1512 = S[0x1]
0x10a9: V1513 = 0x100
0x10ac: V1514 = EXP 0x100 0x0
0x10ae: V1515 = DIV V1512 0x1
0x10af: V1516 = 0x1
0x10b1: V1517 = 0xa0
0x10b3: V1518 = 0x2
0x10b5: V1519 = EXP 0x2 0xa0
0x10b6: V1520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b7: V1521 = AND 0xffffffffffffffffffffffffffffffffffffffff V1515
0x10b8: V1522 = 0x1
0x10ba: V1523 = 0xa0
0x10bc: V1524 = 0x2
0x10be: V1525 = EXP 0x2 0xa0
0x10bf: V1526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c0: V1527 = AND 0xffffffffffffffffffffffffffffffffffffffff V1521
0x10c1: V1528 = 0x23b872dd
0x10c6: V1529 = CALLER
0x10c7: V1530 = ADDRESS
0x10c8: V1531 = 0x4
0x10ca: V1532 = S[0x4]
0x10cc: V1533 = MUL V1497 V1532
0x10cd: V1534 = 0x0
0x10cf: V1535 = 0x40
0x10d1: V1536 = M[0x40]
0x10d2: V1537 = 0x20
0x10d4: V1538 = ADD 0x20 V1536
0x10d5: M[V1538] = 0x0
0x10d6: V1539 = 0x40
0x10d8: V1540 = M[0x40]
0x10da: V1541 = 0xe0
0x10dc: V1542 = 0x2
0x10de: V1543 = EXP 0x2 0xe0
0x10df: V1544 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x10e1: M[V1540] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x10e2: V1545 = 0x4
0x10e4: V1546 = ADD 0x4 V1540
0x10e7: V1547 = 0x1
0x10e9: V1548 = 0xa0
0x10eb: V1549 = 0x2
0x10ed: V1550 = EXP 0x2 0xa0
0x10ee: V1551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10ef: V1552 = AND 0xffffffffffffffffffffffffffffffffffffffff V1529
0x10f1: M[V1546] = V1552
0x10f2: V1553 = 0x20
0x10f4: V1554 = ADD 0x20 V1546
0x10f6: V1555 = 0x1
0x10f8: V1556 = 0xa0
0x10fa: V1557 = 0x2
0x10fc: V1558 = EXP 0x2 0xa0
0x10fd: V1559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10fe: V1560 = AND 0xffffffffffffffffffffffffffffffffffffffff V1530
0x1100: M[V1554] = V1560
0x1101: V1561 = 0x20
0x1103: V1562 = ADD 0x20 V1554
0x1106: M[V1562] = V1533
0x1107: V1563 = 0x20
0x1109: V1564 = ADD 0x20 V1562
0x110f: V1565 = 0x20
0x1111: V1566 = 0x40
0x1113: V1567 = M[0x40]
0x1116: V1568 = SUB V1564 V1567
0x1118: V1569 = 0x0
0x111c: V1570 = EXTCODESIZE V1527
0x111d: V1571 = ISZERO V1570
0x111e: V1572 = 0x0
0x1121: THROWI V1571
---
Entry stack: [S2, V1497, V1497]
Stack pops: 1
Stack additions: [S0, V1527, 0x23b872dd, V1564, 0x20, V1567, V1568, V1567, 0x0, V1527]
Exit stack: [S2, V1497, V1497, V1527, 0x23b872dd, V1564, 0x20, V1567, V1568, V1567, 0x0, V1527]

================================

Block 0x1122
[0x1122:0x112b]
---
Predecessors: [0x10a2]
Successors: [0x112c]
---
0x1122 PUSH1 0x32
0x1124 GAS
0x1125 SUB
0x1126 CALL
0x1127 ISZERO
0x1128 PUSH2 0x0
0x112b JUMPI
---
0x1122: V1573 = 0x32
0x1124: V1574 = GAS
0x1125: V1575 = SUB V1574 0x32
0x1126: V1576 = CALL V1575 V1527 0x0 V1567 V1568 V1567 0x20
0x1127: V1577 = ISZERO V1576
0x1128: V1578 = 0x0
0x112b: THROWI V1577
---
Entry stack: [S11, V1497, V1497, V1527, 0x23b872dd, V1564, 0x20, V1567, V1568, V1567, 0x0, V1527]
Stack pops: 6
Stack additions: []
Exit stack: [S11, V1497, V1497, V1527, 0x23b872dd, V1564]

================================

Block 0x112c
[0x112c:0x1139]
---
Predecessors: [0x1122]
Successors: [0x113a]
---
0x112c POP
0x112d POP
0x112e PUSH1 0x40
0x1130 MLOAD
0x1131 MLOAD
0x1132 ISZERO
0x1133 ISZERO
0x1134 SWAP1
0x1135 POP
0x1136 PUSH2 0x8fe
0x1139 JUMPI
---
0x112e: V1579 = 0x40
0x1130: V1580 = M[0x40]
0x1131: V1581 = M[V1580]
0x1132: V1582 = ISZERO V1581
0x1133: V1583 = ISZERO V1582
0x1136: V1584 = 0x8fe
0x1139: THROWI V1583
---
Entry stack: [S5, V1497, V1497, V1527, 0x23b872dd, V1564]
Stack pops: 3
Stack additions: []
Exit stack: [S5, V1497, V1497]

================================

Block 0x113a
[0x113a:0x116c]
---
Predecessors: [0x112c]
Successors: [0x116d]
---
0x113a PUSH2 0x0
0x113d JUMP
0x113e JUMPDEST
0x113f PUSH1 0x2
0x1141 SLOAD
0x1142 PUSH1 0x40
0x1144 MLOAD
0x1145 PUSH1 0x1
0x1147 PUSH1 0xa0
0x1149 PUSH1 0x2
0x114b EXP
0x114c SUB
0x114d CALLER
0x114e AND
0x114f SWAP2
0x1150 DUP4
0x1151 MUL
0x1152 DUP1
0x1153 ISZERO
0x1154 PUSH2 0x8fc
0x1157 MUL
0x1158 SWAP2
0x1159 PUSH1 0x0
0x115b DUP2
0x115c DUP2
0x115d DUP2
0x115e DUP6
0x115f DUP9
0x1160 DUP9
0x1161 CALL
0x1162 SWAP4
0x1163 POP
0x1164 POP
0x1165 POP
0x1166 POP
0x1167 ISZERO
0x1168 ISZERO
0x1169 PUSH2 0x931
0x116c JUMPI
---
0x113a: V1585 = 0x0
0x113d: THROW 
0x113e: JUMPDEST 
0x113f: V1586 = 0x2
0x1141: V1587 = S[0x2]
0x1142: V1588 = 0x40
0x1144: V1589 = M[0x40]
0x1145: V1590 = 0x1
0x1147: V1591 = 0xa0
0x1149: V1592 = 0x2
0x114b: V1593 = EXP 0x2 0xa0
0x114c: V1594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114d: V1595 = CALLER
0x114e: V1596 = AND V1595 0xffffffffffffffffffffffffffffffffffffffff
0x1151: V1597 = MUL S0 V1587
0x1153: V1598 = ISZERO V1597
0x1154: V1599 = 0x8fc
0x1157: V1600 = MUL 0x8fc V1598
0x1159: V1601 = 0x0
0x1161: V1602 = CALL V1600 V1596 V1597 V1589 0x0 V1589 0x0
0x1167: V1603 = ISZERO V1602
0x1168: V1604 = ISZERO V1603
0x1169: V1605 = 0x931
0x116c: THROWI V1604
---
Entry stack: [S2, V1497, V1497]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x116d
[0x116d:0x1171]
---
Predecessors: [0x113a]
Successors: [0x1172]
---
0x116d PUSH2 0x0
0x1170 JUMP
0x1171 JUMPDEST
---
0x116d: V1606 = 0x0
0x1170: THROW 
0x1171: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1172
[0x1172:0x11c5]
---
Predecessors: [0x116d]
Successors: [0x11c6]
---
0x1172 JUMPDEST
0x1173 PUSH1 0x4
0x1175 SLOAD
0x1176 PUSH1 0x2
0x1178 SLOAD
0x1179 PUSH1 0x40
0x117b DUP1
0x117c MLOAD
0x117d DUP7
0x117e DUP2
0x117f MSTORE
0x1180 SWAP3
0x1181 DUP5
0x1182 MUL
0x1183 PUSH1 0x20
0x1185 DUP5
0x1186 ADD
0x1187 MSTORE
0x1188 SWAP1
0x1189 DUP4
0x118a MUL
0x118b DUP3
0x118c DUP3
0x118d ADD
0x118e MSTORE
0x118f MLOAD
0x1190 PUSH1 0x1
0x1192 PUSH1 0xa0
0x1194 PUSH1 0x2
0x1196 EXP
0x1197 SUB
0x1198 CALLER
0x1199 AND
0x119a SWAP2
0x119b PUSH32 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x11bc SWAP2
0x11bd SWAP1
0x11be DUP2
0x11bf SWAP1
0x11c0 SUB
0x11c1 PUSH1 0x60
0x11c3 ADD
0x11c4 SWAP1
0x11c5 LOG2
---
0x1172: JUMPDEST 
0x1173: V1607 = 0x4
0x1175: V1608 = S[0x4]
0x1176: V1609 = 0x2
0x1178: V1610 = S[0x2]
0x1179: V1611 = 0x40
0x117c: V1612 = M[0x40]
0x117f: M[V1612] = S2
0x1182: V1613 = MUL S0 V1608
0x1183: V1614 = 0x20
0x1186: V1615 = ADD V1612 0x20
0x1187: M[V1615] = V1613
0x118a: V1616 = MUL S0 V1610
0x118d: V1617 = ADD 0x40 V1612
0x118e: M[V1617] = V1616
0x118f: V1618 = M[0x40]
0x1190: V1619 = 0x1
0x1192: V1620 = 0xa0
0x1194: V1621 = 0x2
0x1196: V1622 = EXP 0x2 0xa0
0x1197: V1623 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1198: V1624 = CALLER
0x1199: V1625 = AND V1624 0xffffffffffffffffffffffffffffffffffffffff
0x119b: V1626 = 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x11c0: V1627 = SUB V1612 V1618
0x11c1: V1628 = 0x60
0x11c3: V1629 = ADD 0x60 V1627
0x11c5: LOG V1618 V1629 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683 V1625
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0x11c6
[0x11c6:0x11c6]
---
Predecessors: [0x1172]
Successors: [0x11c7]
---
0x11c6 JUMPDEST
---
0x11c6: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x11c7
[0x11c7:0x11e2]
---
Predecessors: [0x11c6]
Successors: [0x11e3]
---
0x11c7 JUMPDEST
0x11c8 POP
0x11c9 POP
0x11ca POP
0x11cb JUMP
0x11cc JUMPDEST
0x11cd PUSH1 0x0
0x11cf SLOAD
0x11d0 CALLER
0x11d1 PUSH1 0x1
0x11d3 PUSH1 0xa0
0x11d5 PUSH1 0x2
0x11d7 EXP
0x11d8 SUB
0x11d9 SWAP1
0x11da DUP2
0x11db AND
0x11dc SWAP2
0x11dd AND
0x11de EQ
0x11df PUSH2 0x9a7
0x11e2 JUMPI
---
0x11c7: JUMPDEST 
0x11cb: JUMP S3
0x11cc: JUMPDEST 
0x11cd: V1630 = 0x0
0x11cf: V1631 = S[0x0]
0x11d0: V1632 = CALLER
0x11d1: V1633 = 0x1
0x11d3: V1634 = 0xa0
0x11d5: V1635 = 0x2
0x11d7: V1636 = EXP 0x2 0xa0
0x11d8: V1637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11db: V1638 = AND 0xffffffffffffffffffffffffffffffffffffffff V1632
0x11dd: V1639 = AND V1631 0xffffffffffffffffffffffffffffffffffffffff
0x11de: V1640 = EQ V1639 V1638
0x11df: V1641 = 0x9a7
0x11e2: THROWI V1640
---
Entry stack: [S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0x11e3
[0x11e3:0x1250]
---
Predecessors: [0x11c7]
Successors: [0x1251]
---
0x11e3 PUSH2 0x0
0x11e6 JUMP
0x11e7 JUMPDEST
0x11e8 PUSH1 0x0
0x11ea DUP1
0x11eb SLOAD
0x11ec PUSH1 0x40
0x11ee MLOAD
0x11ef PUSH1 0x1
0x11f1 PUSH1 0xa0
0x11f3 PUSH1 0x2
0x11f5 EXP
0x11f6 SUB
0x11f7 DUP1
0x11f8 DUP6
0x11f9 AND
0x11fa SWAP4
0x11fb SWAP3
0x11fc AND
0x11fd SWAP2
0x11fe PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x121f SWAP2
0x1220 LOG3
0x1221 PUSH1 0x0
0x1223 DUP1
0x1224 SLOAD
0x1225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123a NOT
0x123b AND
0x123c PUSH13 0x1000000000000000000000000
0x124a DUP4
0x124b DUP2
0x124c MUL
0x124d DIV
0x124e OR
0x124f SWAP1
0x1250 SSTORE
---
0x11e3: V1642 = 0x0
0x11e6: THROW 
0x11e7: JUMPDEST 
0x11e8: V1643 = 0x0
0x11eb: V1644 = S[0x0]
0x11ec: V1645 = 0x40
0x11ee: V1646 = M[0x40]
0x11ef: V1647 = 0x1
0x11f1: V1648 = 0xa0
0x11f3: V1649 = 0x2
0x11f5: V1650 = EXP 0x2 0xa0
0x11f6: V1651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11f9: V1652 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11fc: V1653 = AND V1644 0xffffffffffffffffffffffffffffffffffffffff
0x11fe: V1654 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1220: LOG V1646 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1653 V1652
0x1221: V1655 = 0x0
0x1224: V1656 = S[0x0]
0x1225: V1657 = 0xffffffffffffffffffffffffffffffffffffffff
0x123a: V1658 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x123b: V1659 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1656
0x123c: V1660 = 0x1000000000000000000000000
0x124c: V1661 = MUL 0x1000000000000000000000000 S0
0x124d: V1662 = DIV V1661 0x1000000000000000000000000
0x124e: V1663 = OR V1662 V1659
0x1250: S[0x0] = V1663
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1251
[0x1251:0x1251]
---
Predecessors: [0x11e3]
Successors: [0x1252]
---
0x1251 JUMPDEST
---
0x1251: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x1252
[0x1252:0x1254]
---
Predecessors: [0x1251]
Successors: []
Has unresolved jump.
---
0x1252 JUMPDEST
0x1253 POP
0x1254 JUMP
---
0x1252: JUMPDEST 
0x1254: JUMP S1
---
Entry stack: [S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x3d6a32bd
Entry block: 0x5d
Exit block: 0x7c
Body: 0x5d, 0x63, 0x7c, 0x15b, 0x16e, 0x172, 0x17d, 0x183, 0x189, 0x18d, 0x195, 0x199, 0x1a2, 0x1a6, 0x204, 0x27c, 0x286, 0x2ee

Function 1:
Public function signature: 0x5de01497
Entry block: 0x98
Exit block: 0xab
Body: 0x98, 0x9e, 0xab, 0x2f8, 0x310, 0x314, 0x3c4, 0x3ce, 0x3d7, 0x3d8

Function 2:
Public function signature: 0x63a9c3d7
Entry block: 0xbf
Exit block: 0xcf
Body: 0xbf, 0xc5, 0xcf, 0x3de, 0x409, 0x449, 0x453, 0x49f, 0x4a9, 0x4f5, 0x4ff, 0x54b, 0x555, 0x5a1, 0x5ab, 0x5f7, 0x601, 0x64d, 0x657, 0x660, 0x661

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x120
Exit block: 0x7c
Body: 0x7c, 0x120, 0x126, 0x66d

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x149
Exit block: 0x5b
Body: 0x5b, 0x149, 0x14f, 0x67c, 0x693, 0x697, 0x701, 0x702

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x54
Body: 0x4b, 0x51, 0x54

