Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x3b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x3b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3b
0xc: JUMPI 0x3b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x3d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x6ea056a9
0x36 EQ
0x37 PUSH2 0x3d
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x6ea056a9
0x36: V11 = EQ 0x6ea056a9 V9
0x37: V12 = 0x3d
0x3a: JUMPI 0x3d V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x3c]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x3b JUMPDEST
0x3c STOP
---
0x3b: JUMPDEST 
0x3c: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x3d
[0x3d:0x44]
---
Predecessors: [0xd]
Successors: [0x45, 0x49]
---
0x3d JUMPDEST
0x3e CALLVALUE
0x3f DUP1
0x40 ISZERO
0x41 PUSH2 0x49
0x44 JUMPI
---
0x3d: JUMPDEST 
0x3e: V13 = CALLVALUE
0x40: V14 = ISZERO V13
0x41: V15 = 0x49
0x44: JUMPI 0x49 V14
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V13]
Exit stack: [V9, V13]

================================

Block 0x45
[0x45:0x48]
---
Predecessors: [0x3d]
Successors: []
---
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x45: V16 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V9, V13]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V13]

================================

Block 0x49
[0x49:0x5b]
---
Predecessors: [0x3d]
Successors: [0x5c, 0x60]
---
0x49 JUMPDEST
0x4a POP
0x4b PUSH2 0x96
0x4e PUSH1 0x4
0x50 DUP1
0x51 CALLDATASIZE
0x52 SUB
0x53 PUSH1 0x40
0x55 DUP2
0x56 LT
0x57 ISZERO
0x58 PUSH2 0x60
0x5b JUMPI
---
0x49: JUMPDEST 
0x4b: V17 = 0x96
0x4e: V18 = 0x4
0x51: V19 = CALLDATASIZE
0x52: V20 = SUB V19 0x4
0x53: V21 = 0x40
0x56: V22 = LT V20 0x40
0x57: V23 = ISZERO V22
0x58: V24 = 0x60
0x5b: JUMPI 0x60 V23
---
Entry stack: [V9, V13]
Stack pops: 1
Stack additions: [0x96, 0x4, V20]
Exit stack: [V9, 0x96, 0x4, V20]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: [0x49]
Successors: []
---
0x5c PUSH1 0x0
0x5e DUP1
0x5f REVERT
---
0x5c: V25 = 0x0
0x5f: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, 0x4, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, 0x4, V20]

================================

Block 0x60
[0x60:0x95]
---
Predecessors: [0x49]
Successors: [0x11c]
---
0x60 JUMPDEST
0x61 DUP2
0x62 ADD
0x63 SWAP1
0x64 DUP1
0x65 DUP1
0x66 CALLDATALOAD
0x67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c AND
0x7d SWAP1
0x7e PUSH1 0x20
0x80 ADD
0x81 SWAP1
0x82 SWAP3
0x83 SWAP2
0x84 SWAP1
0x85 DUP1
0x86 CALLDATALOAD
0x87 SWAP1
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP1
0x8c SWAP3
0x8d SWAP2
0x8e SWAP1
0x8f POP
0x90 POP
0x91 POP
0x92 PUSH2 0x11c
0x95 JUMP
---
0x60: JUMPDEST 
0x62: V26 = ADD 0x4 V20
0x66: V27 = CALLDATALOAD 0x4
0x67: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x7e: V30 = 0x20
0x80: V31 = ADD 0x20 0x4
0x86: V32 = CALLDATALOAD 0x24
0x88: V33 = 0x20
0x8a: V34 = ADD 0x20 0x24
0x92: V35 = 0x11c
0x95: JUMP 0x11c
---
Entry stack: [V9, 0x96, 0x4, V20]
Stack pops: 2
Stack additions: [V29, V32]
Exit stack: [V9, 0x96, V29, V32]

================================

Block 0x96
[0x96:0xc4]
---
Predecessors: [0x358]
Successors: [0xc5]
---
0x96 JUMPDEST
0x97 PUSH1 0x40
0x99 MLOAD
0x9a DUP1
0x9b DUP4
0x9c ISZERO
0x9d ISZERO
0x9e ISZERO
0x9f ISZERO
0xa0 DUP2
0xa1 MSTORE
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 DUP1
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 DUP3
0xaa DUP2
0xab SUB
0xac DUP3
0xad MSTORE
0xae DUP4
0xaf DUP2
0xb0 DUP2
0xb1 MLOAD
0xb2 DUP2
0xb3 MSTORE
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP2
0xb8 POP
0xb9 DUP1
0xba MLOAD
0xbb SWAP1
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP1
0xc0 DUP1
0xc1 DUP4
0xc2 DUP4
0xc3 PUSH1 0x0
---
0x96: JUMPDEST 
0x97: V36 = 0x40
0x99: V37 = M[0x40]
0x9c: V38 = ISZERO V203
0x9d: V39 = ISZERO V38
0x9e: V40 = ISZERO V39
0x9f: V41 = ISZERO V40
0xa1: M[V37] = V41
0xa2: V42 = 0x20
0xa4: V43 = ADD 0x20 V37
0xa6: V44 = 0x20
0xa8: V45 = ADD 0x20 V43
0xab: V46 = SUB V45 V37
0xad: M[V43] = V46
0xb1: V47 = M[S0]
0xb3: M[V45] = V47
0xb4: V48 = 0x20
0xb6: V49 = ADD 0x20 V45
0xba: V50 = M[S0]
0xbc: V51 = 0x20
0xbe: V52 = ADD 0x20 S0
0xc3: V53 = 0x0
---
Entry stack: [V9, V203, S0]
Stack pops: 2
Stack additions: [S1, S0, V37, V43, V49, V52, V50, V50, V49, V52, 0x0]
Exit stack: [V9, V203, S0, V37, V43, V49, V52, V50, V50, V49, V52, 0x0]

================================

Block 0xc5
[0xc5:0xcd]
---
Predecessors: [0x96, 0xce]
Successors: [0xce, 0xe0]
---
0xc5 JUMPDEST
0xc6 DUP4
0xc7 DUP2
0xc8 LT
0xc9 ISZERO
0xca PUSH2 0xe0
0xcd JUMPI
---
0xc5: JUMPDEST 
0xc8: V54 = LT S0 V50
0xc9: V55 = ISZERO V54
0xca: V56 = 0xe0
0xcd: JUMPI 0xe0 V55
---
Entry stack: [V9, V203, S9, V37, V43, V49, V52, V50, V50, V49, V52, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, V203, S9, V37, V43, V49, V52, V50, V50, V49, V52, S0]

================================

Block 0xce
[0xce:0xdf]
---
Predecessors: [0xc5]
Successors: [0xc5]
---
0xce DUP1
0xcf DUP3
0xd0 ADD
0xd1 MLOAD
0xd2 DUP2
0xd3 DUP5
0xd4 ADD
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 DUP2
0xd9 ADD
0xda SWAP1
0xdb POP
0xdc PUSH2 0xc5
0xdf JUMP
---
0xd0: V57 = ADD V52 S0
0xd1: V58 = M[V57]
0xd4: V59 = ADD V49 S0
0xd5: M[V59] = V58
0xd6: V60 = 0x20
0xd9: V61 = ADD S0 0x20
0xdc: V62 = 0xc5
0xdf: JUMP 0xc5
---
Entry stack: [V9, V203, S9, V37, V43, V49, V52, V50, V50, V49, V52, S0]
Stack pops: 3
Stack additions: [S2, S1, V61]
Exit stack: [V9, V203, S9, V37, V43, V49, V52, V50, V50, V49, V52, V61]

================================

Block 0xe0
[0xe0:0xf3]
---
Predecessors: [0xc5]
Successors: [0xf4, 0x10d]
---
0xe0 JUMPDEST
0xe1 POP
0xe2 POP
0xe3 POP
0xe4 POP
0xe5 SWAP1
0xe6 POP
0xe7 SWAP1
0xe8 DUP2
0xe9 ADD
0xea SWAP1
0xeb PUSH1 0x1f
0xed AND
0xee DUP1
0xef ISZERO
0xf0 PUSH2 0x10d
0xf3 JUMPI
---
0xe0: JUMPDEST 
0xe9: V63 = ADD V50 V49
0xeb: V64 = 0x1f
0xed: V65 = AND 0x1f V50
0xef: V66 = ISZERO V65
0xf0: V67 = 0x10d
0xf3: JUMPI 0x10d V66
---
Entry stack: [V9, V203, S9, V37, V43, V49, V52, V50, V50, V49, V52, S0]
Stack pops: 7
Stack additions: [V63, V65]
Exit stack: [V9, V203, S9, V37, V43, V63, V65]

================================

Block 0xf4
[0xf4:0x10c]
---
Predecessors: [0xe0]
Successors: [0x10d]
---
0xf4 DUP1
0xf5 DUP3
0xf6 SUB
0xf7 DUP1
0xf8 MLOAD
0xf9 PUSH1 0x1
0xfb DUP4
0xfc PUSH1 0x20
0xfe SUB
0xff PUSH2 0x100
0x102 EXP
0x103 SUB
0x104 NOT
0x105 AND
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x20
0x10a ADD
0x10b SWAP2
0x10c POP
---
0xf6: V68 = SUB V63 V65
0xf8: V69 = M[V68]
0xf9: V70 = 0x1
0xfc: V71 = 0x20
0xfe: V72 = SUB 0x20 V65
0xff: V73 = 0x100
0x102: V74 = EXP 0x100 V72
0x103: V75 = SUB V74 0x1
0x104: V76 = NOT V75
0x105: V77 = AND V76 V69
0x107: M[V68] = V77
0x108: V78 = 0x20
0x10a: V79 = ADD 0x20 V68
---
Entry stack: [V9, V203, S4, V37, V43, V63, V65]
Stack pops: 2
Stack additions: [V79, S0]
Exit stack: [V9, V203, S4, V37, V43, V79, V65]

================================

Block 0x10d
[0x10d:0x11b]
---
Predecessors: [0xe0, 0xf4]
Successors: []
---
0x10d JUMPDEST
0x10e POP
0x10f SWAP4
0x110 POP
0x111 POP
0x112 POP
0x113 POP
0x114 PUSH1 0x40
0x116 MLOAD
0x117 DUP1
0x118 SWAP2
0x119 SUB
0x11a SWAP1
0x11b RETURN
---
0x10d: JUMPDEST 
0x114: V80 = 0x40
0x116: V81 = M[0x40]
0x119: V82 = SUB S1 V81
0x11b: RETURN V81 V82
---
Entry stack: [V9, V203, S4, V37, V43, S1, V65]
Stack pops: 6
Stack additions: []
Exit stack: [V9]

================================

Block 0x11c
[0x11c:0x1bb]
---
Predecessors: [0x60]
Successors: [0x1bc, 0x1c0]
---
0x11c JUMPDEST
0x11d PUSH1 0x0
0x11f PUSH1 0x60
0x121 PUSH1 0x0
0x123 PUSH1 0x60
0x125 DUP6
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH1 0x0
0x13e DUP1
0x13f SWAP1
0x140 SLOAD
0x141 SWAP1
0x142 PUSH2 0x100
0x145 EXP
0x146 SWAP1
0x147 DIV
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 PUSH4 0x601af9b4
0x179 PUSH1 0x40
0x17b MLOAD
0x17c DUP2
0x17d PUSH4 0xffffffff
0x182 AND
0x183 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1a1 MUL
0x1a2 DUP2
0x1a3 MSTORE
0x1a4 PUSH1 0x4
0x1a6 ADD
0x1a7 PUSH1 0x20
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad DUP4
0x1ae SUB
0x1af DUP2
0x1b0 PUSH1 0x0
0x1b2 DUP8
0x1b3 DUP1
0x1b4 EXTCODESIZE
0x1b5 ISZERO
0x1b6 DUP1
0x1b7 ISZERO
0x1b8 PUSH2 0x1c0
0x1bb JUMPI
---
0x11c: JUMPDEST 
0x11d: V83 = 0x0
0x11f: V84 = 0x60
0x121: V85 = 0x0
0x123: V86 = 0x60
0x126: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x13c: V89 = 0x0
0x140: V90 = S[0x0]
0x142: V91 = 0x100
0x145: V92 = EXP 0x100 0x0
0x147: V93 = DIV V90 0x1
0x148: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x15e: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x174: V98 = 0x601af9b4
0x179: V99 = 0x40
0x17b: V100 = M[0x40]
0x17d: V101 = 0xffffffff
0x182: V102 = AND 0xffffffff 0x601af9b4
0x183: V103 = 0x100000000000000000000000000000000000000000000000000000000
0x1a1: V104 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x601af9b4
0x1a3: M[V100] = 0x601af9b400000000000000000000000000000000000000000000000000000000
0x1a4: V105 = 0x4
0x1a6: V106 = ADD 0x4 V100
0x1a7: V107 = 0x20
0x1a9: V108 = 0x40
0x1ab: V109 = M[0x40]
0x1ae: V110 = SUB V106 V109
0x1b0: V111 = 0x0
0x1b4: V112 = EXTCODESIZE V97
0x1b5: V113 = ISZERO V112
0x1b7: V114 = ISZERO V113
0x1b8: V115 = 0x1c0
0x1bb: JUMPI 0x1c0 V114
---
Entry stack: [V9, 0x96, V29, V32]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, 0x20, V109, V110, V109, 0x0, V97, V113]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, 0x20, V109, V110, V109, 0x0, V97, V113]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x11c]
Successors: []
---
0x1bc PUSH1 0x0
0x1be DUP1
0x1bf REVERT
---
0x1bc: V116 = 0x0
0x1bf: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, 0x20, V109, V110, V109, 0x0, V97, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, 0x20, V109, V110, V109, 0x0, V97, V113]

================================

Block 0x1c0
[0x1c0:0x1ca]
---
Predecessors: [0x11c]
Successors: [0x1cb, 0x1d4]
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 GAS
0x1c3 CALL
0x1c4 ISZERO
0x1c5 DUP1
0x1c6 ISZERO
0x1c7 PUSH2 0x1d4
0x1ca JUMPI
---
0x1c0: JUMPDEST 
0x1c2: V117 = GAS
0x1c3: V118 = CALL V117 V97 0x0 V109 V110 V109 0x20
0x1c4: V119 = ISZERO V118
0x1c6: V120 = ISZERO V119
0x1c7: V121 = 0x1d4
0x1ca: JUMPI 0x1d4 V120
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, 0x20, V109, V110, V109, 0x0, V97, V113]
Stack pops: 7
Stack additions: [V119]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, V119]

================================

Block 0x1cb
[0x1cb:0x1d3]
---
Predecessors: [0x1c0]
Successors: []
---
0x1cb RETURNDATASIZE
0x1cc PUSH1 0x0
0x1ce DUP1
0x1cf RETURNDATACOPY
0x1d0 RETURNDATASIZE
0x1d1 PUSH1 0x0
0x1d3 REVERT
---
0x1cb: V122 = RETURNDATASIZE
0x1cc: V123 = 0x0
0x1cf: RETURNDATACOPY 0x0 0x0 V122
0x1d0: V124 = RETURNDATASIZE
0x1d1: V125 = 0x0
0x1d3: REVERT 0x0 V124
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, V119]

================================

Block 0x1d4
[0x1d4:0x1e5]
---
Predecessors: [0x1c0]
Successors: [0x1e6, 0x1ea]
---
0x1d4 JUMPDEST
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc RETURNDATASIZE
0x1dd PUSH1 0x20
0x1df DUP2
0x1e0 LT
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1d4: JUMPDEST 
0x1d9: V126 = 0x40
0x1db: V127 = M[0x40]
0x1dc: V128 = RETURNDATASIZE
0x1dd: V129 = 0x20
0x1e0: V130 = LT V128 0x20
0x1e1: V131 = ISZERO V130
0x1e2: V132 = 0x1ea
0x1e5: JUMPI 0x1ea V131
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V97, 0x601af9b4, V106, V119]
Stack pops: 4
Stack additions: [V127, V128]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V127, V128]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1d4]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V133 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V127, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V127, V128]

================================

Block 0x1ea
[0x1ea:0x2cb]
---
Predecessors: [0x1d4]
Successors: [0x2cc]
---
0x1ea JUMPDEST
0x1eb DUP2
0x1ec ADD
0x1ed SWAP1
0x1ee DUP1
0x1ef DUP1
0x1f0 MLOAD
0x1f1 SWAP1
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 SWAP1
0x1f6 SWAP3
0x1f7 SWAP2
0x1f8 SWAP1
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc DUP7
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 PUSH1 0x24
0x202 ADD
0x203 DUP1
0x204 DUP4
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 DUP2
0x232 MSTORE
0x233 PUSH1 0x20
0x235 ADD
0x236 DUP3
0x237 DUP2
0x238 MSTORE
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP3
0x23d POP
0x23e POP
0x23f POP
0x240 PUSH1 0x40
0x242 MLOAD
0x243 PUSH1 0x20
0x245 DUP2
0x246 DUP4
0x247 SUB
0x248 SUB
0x249 DUP2
0x24a MSTORE
0x24b SWAP1
0x24c PUSH1 0x40
0x24e MSTORE
0x24f PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x270 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x28d NOT
0x28e AND
0x28f PUSH1 0x20
0x291 DUP3
0x292 ADD
0x293 DUP1
0x294 MLOAD
0x295 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2b2 DUP4
0x2b3 DUP2
0x2b4 DUP4
0x2b5 AND
0x2b6 OR
0x2b7 DUP4
0x2b8 MSTORE
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 DUP1
0x2c1 DUP3
0x2c2 DUP1
0x2c3 MLOAD
0x2c4 SWAP1
0x2c5 PUSH1 0x20
0x2c7 ADD
0x2c8 SWAP1
0x2c9 DUP1
0x2ca DUP4
0x2cb DUP4
---
0x1ea: JUMPDEST 
0x1ec: V134 = ADD V127 V128
0x1f0: V135 = M[V127]
0x1f2: V136 = 0x20
0x1f4: V137 = ADD 0x20 V127
0x1fd: V138 = 0x40
0x1ff: V139 = M[0x40]
0x200: V140 = 0x24
0x202: V141 = ADD 0x24 V139
0x205: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x21b: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x232: M[V141] = V145
0x233: V146 = 0x20
0x235: V147 = ADD 0x20 V141
0x238: M[V147] = V32
0x239: V148 = 0x20
0x23b: V149 = ADD 0x20 V147
0x240: V150 = 0x40
0x242: V151 = M[0x40]
0x243: V152 = 0x20
0x247: V153 = SUB V149 V151
0x248: V154 = SUB V153 0x20
0x24a: M[V151] = V154
0x24c: V155 = 0x40
0x24e: M[0x40] = V149
0x24f: V156 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x270: V157 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x28d: V158 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x28e: V159 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x28f: V160 = 0x20
0x292: V161 = ADD V151 0x20
0x294: V162 = M[V161]
0x295: V163 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2b5: V164 = AND V162 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2b6: V165 = OR V164 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2b8: M[V161] = V165
0x2bd: V166 = 0x40
0x2bf: V167 = M[0x40]
0x2c3: V168 = M[V151]
0x2c5: V169 = 0x20
0x2c7: V170 = ADD 0x20 V151
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V127, V128]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V151, V167, V167, V170, V168, V168, V167, V170]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V151, V167, V167, V170, V168, V168, V167, V170]

================================

Block 0x2cc
[0x2cc:0x2d6]
---
Predecessors: [0x1ea, 0x2d7]
Successors: [0x2d7, 0x2f1]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x20
0x2cf DUP4
0x2d0 LT
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 PUSH2 0x2f1
0x2d6 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V171 = 0x20
0x2d0: V172 = LT S2 0x20
0x2d1: V173 = ISZERO V172
0x2d2: V174 = ISZERO V173
0x2d3: V175 = 0x2f1
0x2d6: JUMPI 0x2f1 V174
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V151, V167, V167, V170, V168, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V151, V167, V167, V170, V168, S2, S1, S0]

================================

Block 0x2d7
[0x2d7:0x2f0]
---
Predecessors: [0x2cc]
Successors: [0x2cc]
---
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 DUP3
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd DUP3
0x2de ADD
0x2df SWAP2
0x2e0 POP
0x2e1 PUSH1 0x20
0x2e3 DUP2
0x2e4 ADD
0x2e5 SWAP1
0x2e6 POP
0x2e7 PUSH1 0x20
0x2e9 DUP4
0x2ea SUB
0x2eb SWAP3
0x2ec POP
0x2ed PUSH2 0x2cc
0x2f0 JUMP
---
0x2d8: V176 = M[S0]
0x2da: M[S1] = V176
0x2db: V177 = 0x20
0x2de: V178 = ADD S1 0x20
0x2e1: V179 = 0x20
0x2e4: V180 = ADD S0 0x20
0x2e7: V181 = 0x20
0x2ea: V182 = SUB S2 0x20
0x2ed: V183 = 0x2cc
0x2f0: JUMP 0x2cc
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V151, V167, V167, V170, V168, S2, S1, S0]
Stack pops: 3
Stack additions: [V182, V178, V180]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V151, V167, V167, V170, V168, V182, V178, V180]

================================

Block 0x2f1
[0x2f1:0x331]
---
Predecessors: [0x2cc]
Successors: [0x332, 0x353]
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x1
0x2f4 DUP4
0x2f5 PUSH1 0x20
0x2f7 SUB
0x2f8 PUSH2 0x100
0x2fb EXP
0x2fc SUB
0x2fd DUP1
0x2fe NOT
0x2ff DUP3
0x300 MLOAD
0x301 AND
0x302 DUP2
0x303 DUP5
0x304 MLOAD
0x305 AND
0x306 DUP1
0x307 DUP3
0x308 OR
0x309 DUP6
0x30a MSTORE
0x30b POP
0x30c POP
0x30d POP
0x30e POP
0x30f POP
0x310 POP
0x311 SWAP1
0x312 POP
0x313 ADD
0x314 SWAP2
0x315 POP
0x316 POP
0x317 PUSH1 0x0
0x319 PUSH1 0x40
0x31b MLOAD
0x31c DUP1
0x31d DUP4
0x31e SUB
0x31f DUP2
0x320 PUSH1 0x0
0x322 DUP7
0x323 GAS
0x324 CALL
0x325 SWAP2
0x326 POP
0x327 POP
0x328 RETURNDATASIZE
0x329 DUP1
0x32a PUSH1 0x0
0x32c DUP2
0x32d EQ
0x32e PUSH2 0x353
0x331 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V184 = 0x1
0x2f5: V185 = 0x20
0x2f7: V186 = SUB 0x20 S2
0x2f8: V187 = 0x100
0x2fb: V188 = EXP 0x100 V186
0x2fc: V189 = SUB V188 0x1
0x2fe: V190 = NOT V189
0x300: V191 = M[S0]
0x301: V192 = AND V191 V190
0x304: V193 = M[S1]
0x305: V194 = AND V193 V189
0x308: V195 = OR V192 V194
0x30a: M[S1] = V195
0x313: V196 = ADD V168 V167
0x317: V197 = 0x0
0x319: V198 = 0x40
0x31b: V199 = M[0x40]
0x31e: V200 = SUB V196 V199
0x320: V201 = 0x0
0x323: V202 = GAS
0x324: V203 = CALL V202 V88 0x0 V199 V200 V199 0x0
0x328: V204 = RETURNDATASIZE
0x32a: V205 = 0x0
0x32d: V206 = EQ V204 0x0
0x32e: V207 = 0x353
0x331: JUMPI 0x353 V206
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V88, V151, V167, V167, V170, V168, S2, S1, S0]
Stack pops: 9
Stack additions: [V203, V204, V204]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V203, V204, V204]

================================

Block 0x332
[0x332:0x352]
---
Predecessors: [0x2f1]
Successors: [0x358]
---
0x332 PUSH1 0x40
0x334 MLOAD
0x335 SWAP2
0x336 POP
0x337 PUSH1 0x1f
0x339 NOT
0x33a PUSH1 0x3f
0x33c RETURNDATASIZE
0x33d ADD
0x33e AND
0x33f DUP3
0x340 ADD
0x341 PUSH1 0x40
0x343 MSTORE
0x344 RETURNDATASIZE
0x345 DUP3
0x346 MSTORE
0x347 RETURNDATASIZE
0x348 PUSH1 0x0
0x34a PUSH1 0x20
0x34c DUP5
0x34d ADD
0x34e RETURNDATACOPY
0x34f PUSH2 0x358
0x352 JUMP
---
0x332: V208 = 0x40
0x334: V209 = M[0x40]
0x337: V210 = 0x1f
0x339: V211 = NOT 0x1f
0x33a: V212 = 0x3f
0x33c: V213 = RETURNDATASIZE
0x33d: V214 = ADD V213 0x3f
0x33e: V215 = AND V214 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x340: V216 = ADD V209 V215
0x341: V217 = 0x40
0x343: M[0x40] = V216
0x344: V218 = RETURNDATASIZE
0x346: M[V209] = V218
0x347: V219 = RETURNDATASIZE
0x348: V220 = 0x0
0x34a: V221 = 0x20
0x34d: V222 = ADD V209 0x20
0x34e: RETURNDATACOPY V222 0x0 V219
0x34f: V223 = 0x358
0x352: JUMP 0x358
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V203, V204, V204]
Stack pops: 2
Stack additions: [V209, S0]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V203, V209, V204]

================================

Block 0x353
[0x353:0x357]
---
Predecessors: [0x2f1]
Successors: [0x358]
---
0x353 JUMPDEST
0x354 PUSH1 0x60
0x356 SWAP2
0x357 POP
---
0x353: JUMPDEST 
0x354: V224 = 0x60
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V203, V204, V204]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V203, 0x60, V204]

================================

Block 0x358
[0x358:0x36b]
---
Predecessors: [0x332, 0x353]
Successors: [0x96]
---
0x358 JUMPDEST
0x359 POP
0x35a SWAP2
0x35b POP
0x35c SWAP2
0x35d POP
0x35e DUP2
0x35f DUP2
0x360 SWAP4
0x361 POP
0x362 SWAP4
0x363 POP
0x364 POP
0x365 POP
0x366 SWAP3
0x367 POP
0x368 SWAP3
0x369 SWAP1
0x36a POP
0x36b JUMP
---
0x358: JUMPDEST 
0x36b: JUMP 0x96
---
Entry stack: [V9, 0x96, V29, V32, 0x0, 0x60, 0x0, 0x60, V203, S1, V204]
Stack pops: 10
Stack additions: [S2, S1]
Exit stack: [V9, V203, S1]

================================

Block 0x36c
[0x36c:0x397]
---
Predecessors: []
Successors: []
---
0x36c INVALID
0x36d LOG1
0x36e PUSH6 0x627a7a723058
0x375 SHA3
0x376 CALLCODE
0x377 CODECOPY
0x378 EXTCODESIZE
0x379 MISSING 0xf
0x37a ORIGIN
0x37b MISSING 0xd
0x37c SWAP14
0x37d SMOD
0x37e MISSING 0xa7
0x37f PUSH22 0x551ede5aa8996021a2f99d65838e79217bbc9cbbc93f
0x396 STOP
0x397 MISSING 0x29
---
0x36c: INVALID 
0x36d: LOG S0 S1 S2
0x36e: V225 = 0x627a7a723058
0x375: V226 = SHA3 0x627a7a723058 S3
0x376: V227 = CALLCODE V226 S4 S5 S6 S7 S8 S9
0x377: CODECOPY V227 S10 S11
0x378: V228 = EXTCODESIZE S12
0x379: MISSING 0xf
0x37a: V229 = ORIGIN
0x37b: MISSING 0xd
0x37d: V230 = SMOD S14 S1
0x37e: MISSING 0xa7
0x37f: V231 = 0x551ede5aa8996021a2f99d65838e79217bbc9cbbc93f
0x396: STOP 
0x397: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V228, V229, V230, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, 0x551ede5aa8996021a2f99d65838e79217bbc9cbbc93f]
Exit stack: []

================================

Function 0:
Public function signature: 0x6ea056a9
Entry block: 0x3d
Exit block: 0x10d
Body: 0x3d, 0x45, 0x49, 0x5c, 0x60, 0x96, 0xc5, 0xce, 0xe0, 0xf4, 0x10d, 0x11c, 0x1bc, 0x1c0, 0x1cb, 0x1d4, 0x1e6, 0x1ea, 0x2cc, 0x2d7, 0x2f1, 0x332, 0x353, 0x358

Function 1:
Public fallback function
Entry block: 0x3b
Exit block: 0x3b
Body: 0x3b

