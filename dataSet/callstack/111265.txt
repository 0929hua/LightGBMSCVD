Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6bbb2fe5
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6bbb2fe5
0x3b: V13 = EQ V11 0x6bbb2fe5
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa8]
---
0x40 DUP1
0x41 PUSH4 0xa6622798
0x46 EQ
0x47 PUSH2 0xa8
0x4a JUMPI
---
0x41: V15 = 0xa6622798
0x46: V16 = EQ 0xa6622798 V11
0x47: V17 = 0xa8
0x4a: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xbd]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0xbd
0x55 JUMPI
---
0x4c: V18 = 0xb69ef8a8
0x51: V19 = EQ 0xb69ef8a8 V11
0x52: V20 = 0xbd
0x55: JUMPI 0xbd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xe4]
---
0x56 DUP1
0x57 PUSH4 0xeffc73a4
0x5c EQ
0x5d PUSH2 0xe4
0x60 JUMPI
---
0x57: V21 = 0xeffc73a4
0x5c: V22 = EQ 0xeffc73a4 V11
0x5d: V23 = 0xe4
0x60: JUMPI 0xe4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x2fb]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0x93]
---
Predecessors: [0x63]
Successors: [0xf9]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x94
0x74 PUSH1 0x4
0x76 CALLDATALOAD
0x77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c PUSH1 0x24
0x8e CALLDATALOAD
0x8f AND
0x90 PUSH2 0xf9
0x93 JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x94
0x74: V29 = 0x4
0x76: V30 = CALLDATALOAD 0x4
0x77: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c: V32 = 0x24
0x8e: V33 = CALLDATALOAD 0x24
0x8f: V34 = AND V33 0xffffffffffffffffffffffffffffffffffffffff
0x90: V35 = 0xf9
0x93: JUMP 0xf9
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x94, V30, V34]
Exit stack: [V11, 0x94, V30, V34]

================================

Block 0x94
[0x94:0xa7]
---
Predecessors: [0x289]
Successors: []
---
0x94 JUMPDEST
0x95 PUSH1 0x40
0x97 DUP1
0x98 MLOAD
0x99 SWAP2
0x9a ISZERO
0x9b ISZERO
0x9c DUP3
0x9d MSTORE
0x9e MLOAD
0x9f SWAP1
0xa0 DUP2
0xa1 SWAP1
0xa2 SUB
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 RETURN
---
0x94: JUMPDEST 
0x95: V36 = 0x40
0x98: V37 = M[0x40]
0x9a: V38 = ISZERO 0x1
0x9b: V39 = ISZERO 0x0
0x9d: M[V37] = 0x1
0x9e: V40 = M[0x40]
0xa2: V41 = SUB V37 V40
0xa3: V42 = 0x20
0xa5: V43 = ADD 0x20 V41
0xa7: RETURN V40 V43
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x40]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V44 = CALLVALUE
0xab: V45 = ISZERO V44
0xac: V46 = 0xb4
0xaf: JUMPI 0xb4 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V47 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xb4
[0xb4:0xbc]
---
Predecessors: [0xa8]
Successors: [0x295]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0x61
0xb9 PUSH2 0x295
0xbc JUMP
---
0xb4: JUMPDEST 
0xb6: V48 = 0x61
0xb9: V49 = 0x295
0xbc: JUMP 0x295
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0x4b]
Successors: [0xc5, 0xc9]
---
0xbd JUMPDEST
0xbe CALLVALUE
0xbf DUP1
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xbd: JUMPDEST 
0xbe: V50 = CALLVALUE
0xc0: V51 = ISZERO V50
0xc1: V52 = 0xc9
0xc4: JUMPI 0xc9 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xbd]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V53 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xc9
[0xc9:0xd1]
---
Predecessors: [0xbd]
Successors: [0x2fe]
---
0xc9 JUMPDEST
0xca POP
0xcb PUSH2 0xd2
0xce PUSH2 0x2fe
0xd1 JUMP
---
0xc9: JUMPDEST 
0xcb: V54 = 0xd2
0xce: V55 = 0x2fe
0xd1: JUMP 0x2fe
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0xd2]
Exit stack: [V11, 0xd2]

================================

Block 0xd2
[0xd2:0xe3]
---
Predecessors: [0x2fe]
Successors: []
---
0xd2 JUMPDEST
0xd3 PUSH1 0x40
0xd5 DUP1
0xd6 MLOAD
0xd7 SWAP2
0xd8 DUP3
0xd9 MSTORE
0xda MLOAD
0xdb SWAP1
0xdc DUP2
0xdd SWAP1
0xde SUB
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP1
0xe3 RETURN
---
0xd2: JUMPDEST 
0xd3: V56 = 0x40
0xd6: V57 = M[0x40]
0xd9: M[V57] = V176
0xda: V58 = M[0x40]
0xde: V59 = SUB V57 V58
0xdf: V60 = 0x20
0xe1: V61 = ADD 0x20 V59
0xe3: RETURN V58 V61
---
Entry stack: [V11, 0xd2, V176]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd2]

================================

Block 0xe4
[0xe4:0xeb]
---
Predecessors: [0x56]
Successors: [0xec, 0xf0]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 DUP1
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe4: JUMPDEST 
0xe5: V62 = CALLVALUE
0xe7: V63 = ISZERO V62
0xe8: V64 = 0xf0
0xeb: JUMPI 0xf0 V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V11, V62]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe4]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V65 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V11, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62]

================================

Block 0xf0
[0xf0:0xf8]
---
Predecessors: [0xe4]
Successors: [0x304]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 PUSH2 0x61
0xf5 PUSH2 0x304
0xf8 JUMP
---
0xf0: JUMPDEST 
0xf2: V66 = 0x61
0xf5: V67 = 0x304
0xf8: JUMP 0x304
---
Entry stack: [V11, V62]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xf9
[0xf9:0x11b]
---
Predecessors: [0x6f]
Successors: [0x11c, 0x120]
---
0xf9 JUMPDEST
0xfa PUSH1 0x0
0xfc DUP1
0xfd SLOAD
0xfe DUP2
0xff SWAP1
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 CALLER
0x117 EQ
0x118 PUSH2 0x120
0x11b JUMPI
---
0xf9: JUMPDEST 
0xfa: V68 = 0x0
0xfd: V69 = S[0x0]
0x100: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x116: V72 = CALLER
0x117: V73 = EQ V72 V71
0x118: V74 = 0x120
0x11b: JUMPI 0x120 V73
---
Entry stack: [V11, 0x94, V30, V34]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x94, V30, V34, 0x0, 0x0]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0xf9]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V75 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x94, V30, V34, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x94, V30, V34, 0x0, 0x0]

================================

Block 0x120
[0x120:0x1f3]
---
Predecessors: [0xf9]
Successors: [0x1f4]
---
0x120 JUMPDEST
0x121 PUSH1 0x40
0x123 DUP1
0x124 MLOAD
0x125 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x146 PUSH1 0x20
0x148 DUP1
0x149 DUP4
0x14a ADD
0x14b SWAP2
0x14c SWAP1
0x14d SWAP2
0x14e MSTORE
0x14f PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x170 PUSH1 0x21
0x172 DUP4
0x173 ADD
0x174 MSTORE
0x175 PUSH13 0x1000000000000000000000000
0x183 ADDRESS
0x184 MUL
0x185 PUSH1 0x22
0x187 DUP4
0x188 ADD
0x189 MSTORE
0x18a PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x1ab PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x1cc DUP9
0x1cd MUL
0x1ce AND
0x1cf PUSH1 0x36
0x1d1 DUP4
0x1d2 ADD
0x1d3 MSTORE
0x1d4 DUP3
0x1d5 MLOAD
0x1d6 PUSH1 0x17
0x1d8 DUP2
0x1d9 DUP5
0x1da SUB
0x1db ADD
0x1dc DUP2
0x1dd MSTORE
0x1de PUSH1 0x37
0x1e0 SWAP1
0x1e1 SWAP3
0x1e2 ADD
0x1e3 SWAP3
0x1e4 DUP4
0x1e5 SWAP1
0x1e6 MSTORE
0x1e7 DUP2
0x1e8 MLOAD
0x1e9 SWAP2
0x1ea SWAP3
0x1eb SWAP2
0x1ec DUP3
0x1ed SWAP2
0x1ee DUP5
0x1ef ADD
0x1f0 SWAP1
0x1f1 DUP1
0x1f2 DUP4
0x1f3 DUP4
---
0x120: JUMPDEST 
0x121: V76 = 0x40
0x124: V77 = M[0x40]
0x125: V78 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x146: V79 = 0x20
0x14a: V80 = ADD V77 0x20
0x14e: M[V80] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x14f: V81 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x170: V82 = 0x21
0x173: V83 = ADD V77 0x21
0x174: M[V83] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x175: V84 = 0x1000000000000000000000000
0x183: V85 = ADDRESS
0x184: V86 = MUL V85 0x1000000000000000000000000
0x185: V87 = 0x22
0x188: V88 = ADD V77 0x22
0x189: M[V88] = V86
0x18a: V89 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x1ab: V90 = 0x100000000000000000000000000000000000000000000000000000000000000
0x1cd: V91 = MUL V30 0x100000000000000000000000000000000000000000000000000000000000000
0x1ce: V92 = AND V91 0xff00000000000000000000000000000000000000000000000000000000000000
0x1cf: V93 = 0x36
0x1d2: V94 = ADD V77 0x36
0x1d3: M[V94] = V92
0x1d5: V95 = M[0x40]
0x1d6: V96 = 0x17
0x1da: V97 = SUB V77 V95
0x1db: V98 = ADD V97 0x17
0x1dd: M[V95] = V98
0x1de: V99 = 0x37
0x1e2: V100 = ADD V77 0x37
0x1e6: M[0x40] = V100
0x1e8: V101 = M[V95]
0x1ef: V102 = ADD V95 0x20
---
Entry stack: [V11, 0x94, V30, V34, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V95, V100, V100, V102, V101, V101, V100, V102]
Exit stack: [V11, 0x94, V30, V34, 0x0, 0x0, V95, V100, V100, V102, V101, V101, V100, V102]

================================

Block 0x1f4
[0x1f4:0x1fc]
---
Predecessors: [0x120, 0x1fd]
Successors: [0x1fd, 0x213]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x20
0x1f7 DUP4
0x1f8 LT
0x1f9 PUSH2 0x213
0x1fc JUMPI
---
0x1f4: JUMPDEST 
0x1f5: V103 = 0x20
0x1f8: V104 = LT S2 0x20
0x1f9: V105 = 0x213
0x1fc: JUMPI 0x213 V104
---
Entry stack: [V11, 0x94, V30, V34, 0x0, 0x0, V95, V100, V100, V102, V101, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x94, V30, V34, 0x0, 0x0, V95, V100, V100, V102, V101, S2, S1, S0]

================================

Block 0x1fd
[0x1fd:0x212]
---
Predecessors: [0x1f4]
Successors: [0x1f4]
---
0x1fd DUP1
0x1fe MLOAD
0x1ff DUP3
0x200 MSTORE
0x201 PUSH1 0x1f
0x203 NOT
0x204 SWAP1
0x205 SWAP3
0x206 ADD
0x207 SWAP2
0x208 PUSH1 0x20
0x20a SWAP2
0x20b DUP3
0x20c ADD
0x20d SWAP2
0x20e ADD
0x20f PUSH2 0x1f4
0x212 JUMP
---
0x1fe: V106 = M[S0]
0x200: M[S1] = V106
0x201: V107 = 0x1f
0x203: V108 = NOT 0x1f
0x206: V109 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x208: V110 = 0x20
0x20c: V111 = ADD 0x20 S1
0x20e: V112 = ADD 0x20 S0
0x20f: V113 = 0x1f4
0x212: JUMP 0x1f4
---
Entry stack: [V11, 0x94, V30, V34, 0x0, 0x0, V95, V100, V100, V102, V101, S2, S1, S0]
Stack pops: 3
Stack additions: [V109, V111, V112]
Exit stack: [V11, 0x94, V30, V34, 0x0, 0x0, V95, V100, V100, V102, V101, V109, V111, V112]

================================

Block 0x213
[0x213:0x24e]
---
Predecessors: [0x1f4]
Successors: [0x376]
---
0x213 JUMPDEST
0x214 PUSH1 0x1
0x216 DUP4
0x217 PUSH1 0x20
0x219 SUB
0x21a PUSH2 0x100
0x21d EXP
0x21e SUB
0x21f DUP1
0x220 NOT
0x221 DUP3
0x222 MLOAD
0x223 AND
0x224 DUP2
0x225 DUP5
0x226 MLOAD
0x227 AND
0x228 DUP1
0x229 DUP3
0x22a OR
0x22b DUP6
0x22c MSTORE
0x22d POP
0x22e POP
0x22f POP
0x230 POP
0x231 POP
0x232 POP
0x233 SWAP1
0x234 POP
0x235 ADD
0x236 SWAP2
0x237 POP
0x238 POP
0x239 PUSH1 0x40
0x23b MLOAD
0x23c DUP1
0x23d SWAP2
0x23e SUB
0x23f SWAP1
0x240 SHA3
0x241 PUSH1 0x1
0x243 SWAP1
0x244 DIV
0x245 SWAP1
0x246 POP
0x247 DUP3
0x248 PUSH2 0x24f
0x24b PUSH2 0x376
0x24e JUMP
---
0x213: JUMPDEST 
0x214: V114 = 0x1
0x217: V115 = 0x20
0x219: V116 = SUB 0x20 S2
0x21a: V117 = 0x100
0x21d: V118 = EXP 0x100 V116
0x21e: V119 = SUB V118 0x1
0x220: V120 = NOT V119
0x222: V121 = M[S0]
0x223: V122 = AND V121 V120
0x226: V123 = M[S1]
0x227: V124 = AND V123 V119
0x22a: V125 = OR V122 V124
0x22c: M[S1] = V125
0x235: V126 = ADD V101 V100
0x239: V127 = 0x40
0x23b: V128 = M[0x40]
0x23e: V129 = SUB V126 V128
0x240: V130 = SHA3 V128 V129
0x241: V131 = 0x1
0x244: V132 = DIV V130 0x1
0x248: V133 = 0x24f
0x24b: V134 = 0x376
0x24e: JUMP 0x376
---
Entry stack: [V11, 0x94, V30, V34, 0x0, 0x0, V95, V100, V100, V102, V101, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, V132, S10, 0x24f]
Exit stack: [V11, 0x94, V30, V34, 0x0, V132, V34, 0x24f]

================================

Block 0x24f
[0x24f:0x27f]
---
Predecessors: [0x376]
Successors: [0x280, 0x289]
---
0x24f JUMPDEST
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 SWAP1
0x266 SWAP2
0x267 AND
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x40
0x26c MLOAD
0x26d SWAP1
0x26e DUP2
0x26f SWAP1
0x270 SUB
0x271 PUSH1 0x20
0x273 ADD
0x274 SWAP1
0x275 PUSH1 0x0
0x277 CREATE
0x278 DUP1
0x279 ISZERO
0x27a DUP1
0x27b ISZERO
0x27c PUSH2 0x289
0x27f JUMPI
---
0x24f: JUMPDEST 
0x250: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V136 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x269: M[V209] = V136
0x26a: V137 = 0x40
0x26c: V138 = M[0x40]
0x270: V139 = SUB V209 V138
0x271: V140 = 0x20
0x273: V141 = ADD 0x20 V139
0x275: V142 = 0x0
0x277: V143 = CREATE 0x0 V138 V141
0x279: V144 = ISZERO V143
0x27b: V145 = ISZERO V144
0x27c: V146 = 0x289
0x27f: JUMPI 0x289 V145
---
Entry stack: [V11, 0x94, V30, V34, 0x0, V132, V34, V209]
Stack pops: 2
Stack additions: [V143, V144]
Exit stack: [V11, 0x94, V30, V34, 0x0, V132, V143, V144]

================================

Block 0x280
[0x280:0x288]
---
Predecessors: [0x24f]
Successors: []
---
0x280 RETURNDATASIZE
0x281 PUSH1 0x0
0x283 DUP1
0x284 RETURNDATACOPY
0x285 RETURNDATASIZE
0x286 PUSH1 0x0
0x288 REVERT
---
0x280: V147 = RETURNDATASIZE
0x281: V148 = 0x0
0x284: RETURNDATACOPY 0x0 0x0 V147
0x285: V149 = RETURNDATASIZE
0x286: V150 = 0x0
0x288: REVERT 0x0 V149
---
Entry stack: [V11, 0x94, V30, V34, 0x0, V132, V143, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x94, V30, V34, 0x0, V132, V143, V144]

================================

Block 0x289
[0x289:0x294]
---
Predecessors: [0x24f]
Successors: [0x94]
---
0x289 JUMPDEST
0x28a POP
0x28b PUSH1 0x1
0x28d SWAP6
0x28e SWAP5
0x28f POP
0x290 POP
0x291 POP
0x292 POP
0x293 POP
0x294 JUMP
---
0x289: JUMPDEST 
0x28b: V151 = 0x1
0x294: JUMP 0x94
---
Entry stack: [V11, 0x94, V30, V34, 0x0, V132, V143, V144]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x295
[0x295:0x2b0]
---
Predecessors: [0xb4]
Successors: [0x2b1, 0x2b5]
---
0x295 JUMPDEST
0x296 CALLER
0x297 PUSH20 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x2ac EQ
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x295: JUMPDEST 
0x296: V152 = CALLER
0x297: V153 = 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x2ac: V154 = EQ 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87 V152
0x2ad: V155 = 0x2b5
0x2b0: JUMPI 0x2b5 V154
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x295]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V156 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x2b5
[0x2b5:0x2f1]
---
Predecessors: [0x295]
Successors: [0x2f2, 0x2fb]
---
0x2b5 JUMPDEST
0x2b6 ADDRESS
0x2b7 BALANCE
0x2b8 PUSH1 0x1
0x2ba DUP2
0x2bb SWAP1
0x2bc SSTORE
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 PUSH20 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x2d5 SWAP2
0x2d6 DUP1
0x2d7 ISZERO
0x2d8 PUSH2 0x8fc
0x2db MUL
0x2dc SWAP2
0x2dd PUSH1 0x0
0x2df DUP2
0x2e0 DUP2
0x2e1 DUP2
0x2e2 DUP6
0x2e3 DUP9
0x2e4 DUP9
0x2e5 CALL
0x2e6 SWAP4
0x2e7 POP
0x2e8 POP
0x2e9 POP
0x2ea POP
0x2eb ISZERO
0x2ec DUP1
0x2ed ISZERO
0x2ee PUSH2 0x2fb
0x2f1 JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V157 = ADDRESS
0x2b7: V158 = BALANCE V157
0x2b8: V159 = 0x1
0x2bc: S[0x1] = V158
0x2bd: V160 = 0x40
0x2bf: V161 = M[0x40]
0x2c0: V162 = 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87
0x2d7: V163 = ISZERO V158
0x2d8: V164 = 0x8fc
0x2db: V165 = MUL 0x8fc V163
0x2dd: V166 = 0x0
0x2e5: V167 = CALL V165 0xc855cfd53a1bbbbaf21919083bdb99c24b6d5f87 V158 V161 0x0 V161 0x0
0x2eb: V168 = ISZERO V167
0x2ed: V169 = ISZERO V168
0x2ee: V170 = 0x2fb
0x2f1: JUMPI 0x2fb V169
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V168]
Exit stack: [V11, 0x61, V168]

================================

Block 0x2f2
[0x2f2:0x2fa]
---
Predecessors: [0x2b5]
Successors: []
---
0x2f2 RETURNDATASIZE
0x2f3 PUSH1 0x0
0x2f5 DUP1
0x2f6 RETURNDATACOPY
0x2f7 RETURNDATASIZE
0x2f8 PUSH1 0x0
0x2fa REVERT
---
0x2f2: V171 = RETURNDATASIZE
0x2f3: V172 = 0x0
0x2f6: RETURNDATACOPY 0x0 0x0 V171
0x2f7: V173 = RETURNDATASIZE
0x2f8: V174 = 0x0
0x2fa: REVERT 0x0 V173
---
Entry stack: [V11, 0x61, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V168]

================================

Block 0x2fb
[0x2fb:0x2fd]
---
Predecessors: [0x2b5, 0x328]
Successors: [0x61]
---
0x2fb JUMPDEST
0x2fc POP
0x2fd JUMP
---
0x2fb: JUMPDEST 
0x2fd: JUMP 0x61
---
Entry stack: [V11, 0x61, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fe
[0x2fe:0x303]
---
Predecessors: [0xc9]
Successors: [0xd2]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x1
0x301 SLOAD
0x302 DUP2
0x303 JUMP
---
0x2fe: JUMPDEST 
0x2ff: V175 = 0x1
0x301: V176 = S[0x1]
0x303: JUMP 0xd2
---
Entry stack: [V11, 0xd2]
Stack pops: 1
Stack additions: [S0, V176]
Exit stack: [V11, 0xd2, V176]

================================

Block 0x304
[0x304:0x323]
---
Predecessors: [0xf0]
Successors: [0x324, 0x328]
---
0x304 JUMPDEST
0x305 PUSH1 0x0
0x307 SLOAD
0x308 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31d AND
0x31e CALLER
0x31f EQ
0x320 PUSH2 0x328
0x323 JUMPI
---
0x304: JUMPDEST 
0x305: V177 = 0x0
0x307: V178 = S[0x0]
0x308: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x31e: V181 = CALLER
0x31f: V182 = EQ V181 V180
0x320: V183 = 0x328
0x323: JUMPI 0x328 V182
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x304]
Successors: []
---
0x324 PUSH1 0x0
0x326 DUP1
0x327 REVERT
---
0x324: V184 = 0x0
0x327: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x328
[0x328:0x36c]
---
Predecessors: [0x304]
Successors: [0x2fb, 0x36d]
---
0x328 JUMPDEST
0x329 ADDRESS
0x32a BALANCE
0x32b PUSH1 0x1
0x32d DUP2
0x32e SWAP1
0x32f SSTORE
0x330 PUSH1 0x0
0x332 DUP1
0x333 SLOAD
0x334 PUSH1 0x40
0x336 MLOAD
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c SWAP1
0x34d SWAP2
0x34e AND
0x34f SWAP3
0x350 PUSH2 0x8fc
0x353 DUP2
0x354 ISZERO
0x355 MUL
0x356 SWAP3
0x357 SWAP1
0x358 SWAP2
0x359 SWAP1
0x35a DUP2
0x35b DUP2
0x35c DUP2
0x35d DUP6
0x35e DUP9
0x35f DUP9
0x360 CALL
0x361 SWAP4
0x362 POP
0x363 POP
0x364 POP
0x365 POP
0x366 ISZERO
0x367 DUP1
0x368 ISZERO
0x369 PUSH2 0x2fb
0x36c JUMPI
---
0x328: JUMPDEST 
0x329: V185 = ADDRESS
0x32a: V186 = BALANCE V185
0x32b: V187 = 0x1
0x32f: S[0x1] = V186
0x330: V188 = 0x0
0x333: V189 = S[0x0]
0x334: V190 = 0x40
0x336: V191 = M[0x40]
0x337: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V193 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x350: V194 = 0x8fc
0x354: V195 = ISZERO V186
0x355: V196 = MUL V195 0x8fc
0x360: V197 = CALL V196 V193 V186 V191 0x0 V191 0x0
0x366: V198 = ISZERO V197
0x368: V199 = ISZERO V198
0x369: V200 = 0x2fb
0x36c: JUMPI 0x2fb V199
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V198]
Exit stack: [V11, 0x61, V198]

================================

Block 0x36d
[0x36d:0x375]
---
Predecessors: [0x328]
Successors: []
---
0x36d RETURNDATASIZE
0x36e PUSH1 0x0
0x370 DUP1
0x371 RETURNDATACOPY
0x372 RETURNDATASIZE
0x373 PUSH1 0x0
0x375 REVERT
---
0x36d: V201 = RETURNDATASIZE
0x36e: V202 = 0x0
0x371: RETURNDATACOPY 0x0 0x0 V201
0x372: V203 = RETURNDATASIZE
0x373: V204 = 0x0
0x375: REVERT 0x0 V203
---
Entry stack: [V11, 0x61, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V198]

================================

Block 0x376
[0x376:0x384]
---
Predecessors: [0x213]
Successors: [0x24f]
---
0x376 JUMPDEST
0x377 PUSH1 0x40
0x379 MLOAD
0x37a PUSH1 0xb5
0x37c DUP1
0x37d PUSH2 0x386
0x380 DUP4
0x381 CODECOPY
0x382 ADD
0x383 SWAP1
0x384 JUMP
---
0x376: JUMPDEST 
0x377: V205 = 0x40
0x379: V206 = M[0x40]
0x37a: V207 = 0xb5
0x37d: V208 = 0x386
0x381: CODECOPY V206 0x386 0xb5
0x382: V209 = ADD 0xb5 V206
0x384: JUMP 0x24f
---
Entry stack: [V11, 0x94, V30, V34, 0x0, V132, V34, 0x24f]
Stack pops: 1
Stack additions: [V209]
Exit stack: [V11, 0x94, V30, V34, 0x0, V132, V34, V209]

================================

Block 0x385
[0x385:0x41a]
---
Predecessors: []
Successors: [0x41b]
---
0x385 STOP
0x386 PUSH1 0x80
0x388 PUSH1 0x40
0x38a MSTORE
0x38b PUSH1 0x40
0x38d MLOAD
0x38e PUSH1 0x20
0x390 DUP1
0x391 PUSH1 0xb5
0x393 DUP4
0x394 CODECOPY
0x395 DUP2
0x396 ADD
0x397 PUSH1 0x40
0x399 DUP2
0x39a SWAP1
0x39b MSTORE
0x39c SWAP1
0x39d MLOAD
0x39e SWAP1
0x39f DUP2
0x3a0 SWAP1
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 DUP3
0x3aa AND
0x3ab SWAP1
0x3ac PUSH3 0x9b460
0x3b0 SWAP1
0x3b1 PUSH8 0x16345785d8a0000
0x3ba SWAP1
0x3bb PUSH1 0x0
0x3bd DUP2
0x3be DUP2
0x3bf DUP2
0x3c0 DUP6
0x3c1 DUP9
0x3c2 DUP9
0x3c3 CALL
0x3c4 SWAP4
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 POP
0x3c9 POP
0x3ca DUP1
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 AND
0x3d4 PUSH4 0x3ccfd60b
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP2
0x3dd PUSH4 0xffffffff
0x3e2 AND
0x3e3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x401 MUL
0x402 DUP2
0x403 MSTORE
0x404 PUSH1 0x4
0x406 ADD
0x407 PUSH1 0x0
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d DUP4
0x40e SUB
0x40f DUP2
0x410 PUSH1 0x0
0x412 DUP8
0x413 DUP1
0x414 EXTCODESIZE
0x415 ISZERO
0x416 DUP1
0x417 ISZERO
0x418 PUSH1 0x99
0x41a JUMPI
---
0x385: STOP 
0x386: V210 = 0x80
0x388: V211 = 0x40
0x38a: M[0x40] = 0x80
0x38b: V212 = 0x40
0x38d: V213 = M[0x40]
0x38e: V214 = 0x20
0x391: V215 = 0xb5
0x394: CODECOPY V213 0xb5 0x20
0x396: V216 = ADD V213 0x20
0x397: V217 = 0x40
0x39b: M[0x40] = V216
0x39d: V218 = M[V213]
0x3a1: V219 = 0x1
0x3a3: V220 = 0xa0
0x3a5: V221 = 0x2
0x3a7: V222 = EXP 0x2 0xa0
0x3a8: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V224 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V225 = 0x9b460
0x3b1: V226 = 0x16345785d8a0000
0x3bb: V227 = 0x0
0x3c3: V228 = CALL 0x9b460 V224 0x16345785d8a0000 V216 0x0 V216 0x0
0x3cb: V229 = 0x1
0x3cd: V230 = 0xa0
0x3cf: V231 = 0x2
0x3d1: V232 = EXP 0x2 0xa0
0x3d2: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3d4: V235 = 0x3ccfd60b
0x3d9: V236 = 0x40
0x3db: V237 = M[0x40]
0x3dd: V238 = 0xffffffff
0x3e2: V239 = AND 0xffffffff 0x3ccfd60b
0x3e3: V240 = 0x100000000000000000000000000000000000000000000000000000000
0x401: V241 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x403: M[V237] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x404: V242 = 0x4
0x406: V243 = ADD 0x4 V237
0x407: V244 = 0x0
0x409: V245 = 0x40
0x40b: V246 = M[0x40]
0x40e: V247 = SUB V243 V246
0x410: V248 = 0x0
0x414: V249 = EXTCODESIZE V234
0x415: V250 = ISZERO V249
0x417: V251 = ISZERO V250
0x418: V252 = 0x99
0x41a: THROWI V251
---
Entry stack: []
Stack pops: 0
Stack additions: [V250, V234, 0x0, V246, V247, V246, 0x0, V243, 0x3ccfd60b, V234, V218, V218]
Exit stack: []

================================

Block 0x41b
[0x41b:0x428]
---
Predecessors: [0x385]
Successors: [0x429]
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
0x41f JUMPDEST
0x420 POP
0x421 GAS
0x422 CALL
0x423 ISZERO
0x424 DUP1
0x425 ISZERO
0x426 PUSH1 0xac
0x428 JUMPI
---
0x41b: V253 = 0x0
0x41e: REVERT 0x0 0x0
0x41f: JUMPDEST 
0x421: V254 = GAS
0x422: V255 = CALL V254 S1 S2 S3 S4 S5 S6
0x423: V256 = ISZERO V255
0x425: V257 = ISZERO V256
0x426: V258 = 0xac
0x428: THROWI V257
---
Entry stack: [V218, V218, V234, 0x3ccfd60b, V243, 0x0, V246, V247, V246, 0x0, V234, V250]
Stack pops: 0
Stack additions: [V256]
Exit stack: []

================================

Block 0x429
[0x429:0x47a]
---
Predecessors: [0x41b]
Successors: []
---
0x429 RETURNDATASIZE
0x42a PUSH1 0x0
0x42c DUP1
0x42d RETURNDATACOPY
0x42e RETURNDATASIZE
0x42f PUSH1 0x0
0x431 REVERT
0x432 JUMPDEST
0x433 POP
0x434 CALLER
0x435 SWAP3
0x436 POP
0x437 POP
0x438 POP
0x439 SELFDESTRUCT
0x43a STOP
0x43b LOG1
0x43c PUSH6 0x627a7a723058
0x443 SHA3
0x444 SWAP12
0x445 MISSING 0xf7
0x446 MISSING 0x4d
0x447 MISSING 0xb6
0x448 REVERT
0x449 MISSING 0x24
0x44a MISSING 0x5c
0x44b DUP2
0x44c MISSING 0x46
0x44d PUSH9 0x2b747d19d3bf8e20c3
0x457 SLT
0x458 EXP
0x459 LT
0x45a STATICCALL
0x45b MISSING 0x47
0x45c MISSING 0xe1
0x45d PUSH29 0x70bf45c493970029
---
0x429: V259 = RETURNDATASIZE
0x42a: V260 = 0x0
0x42d: RETURNDATACOPY 0x0 0x0 V259
0x42e: V261 = RETURNDATASIZE
0x42f: V262 = 0x0
0x431: REVERT 0x0 V261
0x432: JUMPDEST 
0x434: V263 = CALLER
0x439: SELFDESTRUCT V263
0x43a: STOP 
0x43b: LOG S0 S1 S2
0x43c: V264 = 0x627a7a723058
0x443: V265 = SHA3 0x627a7a723058 S3
0x445: MISSING 0xf7
0x446: MISSING 0x4d
0x447: MISSING 0xb6
0x448: REVERT S0 S1
0x449: MISSING 0x24
0x44a: MISSING 0x5c
0x44c: MISSING 0x46
0x44d: V266 = 0x2b747d19d3bf8e20c3
0x457: V267 = SLT 0x2b747d19d3bf8e20c3 S0
0x458: V268 = EXP V267 S1
0x459: V269 = LT V268 S2
0x45a: V270 = STATICCALL V269 S3 S4 S5 S6 S7
0x45b: MISSING 0x47
0x45c: MISSING 0xe1
0x45d: V271 = 0x70bf45c493970029
---
Entry stack: [V256]
Stack pops: 0
Stack additions: [S15, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V265, S1, S0, S1, V270, 0x70bf45c493970029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6bbb2fe5
Entry block: 0x63
Exit block: 0x94
Body: 0x63, 0x6b, 0x6f, 0x94, 0xf9, 0x11c, 0x120, 0x1f4, 0x1fd, 0x213, 0x24f, 0x280, 0x289, 0x376

Function 1:
Public function signature: 0xa6622798
Entry block: 0xa8
Exit block: 0x61
Body: 0x61, 0xa8, 0xb0, 0xb4, 0x295, 0x2b1, 0x2b5, 0x2f2, 0x2fb

Function 2:
Public function signature: 0xb69ef8a8
Entry block: 0xbd
Exit block: 0xd2
Body: 0xbd, 0xc5, 0xc9, 0xd2, 0x2fe

Function 3:
Public function signature: 0xeffc73a4
Entry block: 0xe4
Exit block: 0x61
Body: 0x61, 0xe4, 0xec, 0xf0, 0x2fb, 0x304, 0x324, 0x328, 0x36d

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

