Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x61
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x61
0xa: JUMPI 0x61 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x6c]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x2fb0c5e
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x6c
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x2fb0c5e
0x1a: V12 = EQ V10 0x2fb0c5e
0x1b: V13 = 0x6c
0x1e: JUMPI 0x6c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x75]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0x75
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0x75
0x29: JUMPI 0x75 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xb7]
---
0x2a DUP1
0x2b PUSH4 0x41c0e1b5
0x30 EQ
0x31 PUSH2 0xb7
0x34 JUMPI
---
0x2b: V17 = 0x41c0e1b5
0x30: V18 = EQ 0x41c0e1b5 V10
0x31: V19 = 0xb7
0x34: JUMPI 0xb7 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xe6]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0xe6
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0xe6
0x3f: JUMPI 0xe6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0xf8]
---
0x40 DUP1
0x41 PUSH4 0xb69ef8a8
0x46 EQ
0x47 PUSH2 0xf8
0x4a JUMPI
---
0x41: V23 = 0xb69ef8a8
0x46: V24 = EQ 0xb69ef8a8 V10
0x47: V25 = 0xf8
0x4a: JUMPI 0xf8 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x101]
---
0x4b DUP1
0x4c PUSH4 0xddca3f43
0x51 EQ
0x52 PUSH2 0x101
0x55 JUMPI
---
0x4c: V26 = 0xddca3f43
0x51: V27 = EQ 0xddca3f43 V10
0x52: V28 = 0x101
0x55: JUMPI 0x101 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x10a]
---
0x56 DUP1
0x57 PUSH4 0xe97dcb62
0x5c EQ
0x5d PUSH2 0x10a
0x60 JUMPI
---
0x57: V29 = 0xe97dcb62
0x5c: V30 = EQ 0xe97dcb62 V10
0x5d: V31 = 0x10a
0x60: JUMPI 0x10a V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x0, 0x56]
Successors: [0x10e]
---
0x61 JUMPDEST
0x62 PUSH2 0x147
0x65 PUSH2 0x149
0x68 PUSH2 0x10e
0x6b JUMP
---
0x61: JUMPDEST 
0x62: V32 = 0x147
0x65: V33 = 0x149
0x68: V34 = 0x10e
0x6b: JUMP 0x10e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x147, 0x149]
Exit stack: [V10, 0x147, 0x149]

================================

Block 0x6c
[0x6c:0x74]
---
Predecessors: [0xb]
Successors: [0x14b]
---
0x6c JUMPDEST
0x6d PUSH2 0x14b
0x70 PUSH1 0x4
0x72 SLOAD
0x73 DUP2
0x74 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x14b
0x70: V36 = 0x4
0x72: V37 = S[0x4]
0x74: JUMP 0x14b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14b, V37]
Exit stack: [V10, 0x14b, V37]

================================

Block 0x75
[0x75:0x94]
---
Predecessors: [0x1f]
Successors: [0x95, 0xb4]
---
0x75 JUMPDEST
0x76 PUSH2 0x147
0x79 PUSH1 0x4
0x7b CALLDATALOAD
0x7c PUSH1 0x3
0x7e SLOAD
0x7f PUSH1 0x1
0x81 PUSH1 0xa0
0x83 PUSH1 0x2
0x85 EXP
0x86 SUB
0x87 SWAP1
0x88 DUP2
0x89 AND
0x8a CALLER
0x8b SWAP2
0x8c SWAP1
0x8d SWAP2
0x8e AND
0x8f EQ
0x90 ISZERO
0x91 PUSH2 0xb4
0x94 JUMPI
---
0x75: JUMPDEST 
0x76: V38 = 0x147
0x79: V39 = 0x4
0x7b: V40 = CALLDATALOAD 0x4
0x7c: V41 = 0x3
0x7e: V42 = S[0x3]
0x7f: V43 = 0x1
0x81: V44 = 0xa0
0x83: V45 = 0x2
0x85: V46 = EXP 0x2 0xa0
0x86: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x8a: V49 = CALLER
0x8e: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x8f: V51 = EQ V50 V48
0x90: V52 = ISZERO V51
0x91: V53 = 0xb4
0x94: JUMPI 0xb4 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x147, V40]
Exit stack: [V10, 0x147, V40]

================================

Block 0x95
[0x95:0xb3]
---
Predecessors: [0x75]
Successors: [0xb4]
---
0x95 PUSH1 0x3
0x97 DUP1
0x98 SLOAD
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae NOT
0xaf AND
0xb0 DUP3
0xb1 OR
0xb2 SWAP1
0xb3 SSTORE
---
0x95: V54 = 0x3
0x98: V55 = S[0x3]
0x99: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V57 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V58 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xb1: V59 = OR V40 V58
0xb3: S[0x3] = V59
---
Entry stack: [V10, 0x147, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x147, V40]

================================

Block 0xb4
[0xb4:0xb6]
---
Predecessors: [0x75, 0x95]
Successors: [0x147]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 JUMP
---
0xb4: JUMPDEST 
0xb6: JUMP 0x147
---
Entry stack: [V10, 0x147, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xd3]
---
Predecessors: [0x2a]
Successors: [0xd4, 0x149]
---
0xb7 JUMPDEST
0xb8 PUSH2 0x147
0xbb PUSH1 0x3
0xbd SLOAD
0xbe PUSH1 0x1
0xc0 PUSH1 0xa0
0xc2 PUSH1 0x2
0xc4 EXP
0xc5 SUB
0xc6 SWAP1
0xc7 DUP2
0xc8 AND
0xc9 CALLER
0xca SWAP2
0xcb SWAP1
0xcc SWAP2
0xcd AND
0xce EQ
0xcf ISZERO
0xd0 PUSH2 0x149
0xd3 JUMPI
---
0xb7: JUMPDEST 
0xb8: V60 = 0x147
0xbb: V61 = 0x3
0xbd: V62 = S[0x3]
0xbe: V63 = 0x1
0xc0: V64 = 0xa0
0xc2: V65 = 0x2
0xc4: V66 = EXP 0x2 0xa0
0xc5: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc8: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xc9: V69 = CALLER
0xcd: V70 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xce: V71 = EQ V70 V68
0xcf: V72 = ISZERO V71
0xd0: V73 = 0x149
0xd3: JUMPI 0x149 V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x147]
Exit stack: [V10, 0x147]

================================

Block 0xd4
[0xd4:0xe5]
---
Predecessors: [0xb7]
Successors: []
---
0xd4 PUSH1 0x3
0xd6 SLOAD
0xd7 PUSH1 0x0
0xd9 PUSH1 0x4
0xdb SSTORE
0xdc PUSH1 0x1
0xde PUSH1 0xa0
0xe0 PUSH1 0x2
0xe2 EXP
0xe3 SUB
0xe4 AND
0xe5 SELFDESTRUCT
---
0xd4: V74 = 0x3
0xd6: V75 = S[0x3]
0xd7: V76 = 0x0
0xd9: V77 = 0x4
0xdb: S[0x4] = 0x0
0xdc: V78 = 0x1
0xde: V79 = 0xa0
0xe0: V80 = 0x2
0xe2: V81 = EXP 0x2 0xa0
0xe3: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xe5: SELFDESTRUCT V83
---
Entry stack: [V10, 0x147]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x147]

================================

Block 0xe6
[0xe6:0xf7]
---
Predecessors: [0x35]
Successors: [0x15d]
---
0xe6 JUMPDEST
0xe7 PUSH2 0x15d
0xea PUSH1 0x3
0xec SLOAD
0xed PUSH1 0x1
0xef PUSH1 0xa0
0xf1 PUSH1 0x2
0xf3 EXP
0xf4 SUB
0xf5 AND
0xf6 DUP2
0xf7 JUMP
---
0xe6: JUMPDEST 
0xe7: V84 = 0x15d
0xea: V85 = 0x3
0xec: V86 = S[0x3]
0xed: V87 = 0x1
0xef: V88 = 0xa0
0xf1: V89 = 0x2
0xf3: V90 = EXP 0x2 0xa0
0xf4: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf5: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0xf7: JUMP 0x15d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x15d, V92]
Exit stack: [V10, 0x15d, V92]

================================

Block 0xf8
[0xf8:0x100]
---
Predecessors: [0x40]
Successors: [0x14b]
---
0xf8 JUMPDEST
0xf9 PUSH2 0x14b
0xfc PUSH1 0x1
0xfe SLOAD
0xff DUP2
0x100 JUMP
---
0xf8: JUMPDEST 
0xf9: V93 = 0x14b
0xfc: V94 = 0x1
0xfe: V95 = S[0x1]
0x100: JUMP 0x14b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14b, V95]
Exit stack: [V10, 0x14b, V95]

================================

Block 0x101
[0x101:0x109]
---
Predecessors: [0x4b]
Successors: [0x14b]
---
0x101 JUMPDEST
0x102 PUSH2 0x14b
0x105 PUSH1 0x0
0x107 SLOAD
0x108 DUP2
0x109 JUMP
---
0x101: JUMPDEST 
0x102: V96 = 0x14b
0x105: V97 = 0x0
0x107: V98 = S[0x0]
0x109: JUMP 0x14b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14b, V98]
Exit stack: [V10, 0x14b, V98]

================================

Block 0x10a
[0x10a:0x10d]
---
Predecessors: [0x56]
Successors: [0x10e]
---
0x10a JUMPDEST
0x10b PUSH2 0x147
---
0x10a: JUMPDEST 
0x10b: V99 = 0x147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x147]
Exit stack: [V10, 0x147]

================================

Block 0x10e
[0x10e:0x122]
---
Predecessors: [0x61, 0x10a]
Successors: [0x123, 0x188]
---
0x10e JUMPDEST
0x10f PUSH1 0x0
0x111 PUSH1 0x0
0x113 PUSH1 0x0
0x115 PUSH1 0x4
0x117 PUSH1 0x0
0x119 POP
0x11a SLOAD
0x11b PUSH1 0x0
0x11d EQ
0x11e ISZERO
0x11f PUSH2 0x188
0x122 JUMPI
---
0x10e: JUMPDEST 
0x10f: V100 = 0x0
0x111: V101 = 0x0
0x113: V102 = 0x0
0x115: V103 = 0x4
0x117: V104 = 0x0
0x11a: V105 = S[0x4]
0x11b: V106 = 0x0
0x11d: V107 = EQ 0x0 V105
0x11e: V108 = ISZERO V107
0x11f: V109 = 0x188
0x122: JUMPI 0x188 V108
---
Entry stack: [V10, S1, {0x147, 0x149}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0x147, 0x149}, 0x0, 0x0, 0x0]

================================

Block 0x123
[0x123:0x146]
---
Predecessors: [0x10e]
Successors: [0x183]
---
0x123 PUSH1 0x40
0x125 MLOAD
0x126 PUSH1 0x1
0x128 PUSH1 0xa0
0x12a PUSH1 0x2
0x12c EXP
0x12d SUB
0x12e CALLER
0x12f AND
0x130 SWAP1
0x131 DUP3
0x132 SWAP1
0x133 CALLVALUE
0x134 SWAP1
0x135 DUP3
0x136 DUP2
0x137 DUP2
0x138 DUP2
0x139 DUP6
0x13a DUP9
0x13b DUP4
0x13c CALL
0x13d SWAP4
0x13e POP
0x13f POP
0x140 POP
0x141 POP
0x142 POP
0x143 PUSH2 0x183
0x146 JUMP
---
0x123: V110 = 0x40
0x125: V111 = M[0x40]
0x126: V112 = 0x1
0x128: V113 = 0xa0
0x12a: V114 = 0x2
0x12c: V115 = EXP 0x2 0xa0
0x12d: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e: V117 = CALLER
0x12f: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x133: V119 = CALLVALUE
0x13c: V120 = CALL 0x0 V118 V119 V111 0x0 V111 0x0
0x143: V121 = 0x183
0x146: JUMP 0x183
---
Entry stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]

================================

Block 0x147
[0x147:0x148]
---
Predecessors: [0xb4, 0x149, 0x183]
Successors: []
---
0x147 JUMPDEST
0x148 STOP
---
0x147: JUMPDEST 
0x148: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x149
[0x149:0x14a]
---
Predecessors: [0xb7, 0x183]
Successors: [0x147]
---
0x149 JUMPDEST
0x14a JUMP
---
0x149: JUMPDEST 
0x14a: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x14b
[0x14b:0x15c]
---
Predecessors: [0x6c, 0xf8, 0x101]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e DUP1
0x14f MLOAD
0x150 SWAP2
0x151 DUP3
0x152 MSTORE
0x153 MLOAD
0x154 SWAP1
0x155 DUP2
0x156 SWAP1
0x157 SUB
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c RETURN
---
0x14b: JUMPDEST 
0x14c: V122 = 0x40
0x14f: V123 = M[0x40]
0x152: M[V123] = S0
0x153: V124 = M[0x40]
0x157: V125 = SUB V123 V124
0x158: V126 = 0x20
0x15a: V127 = ADD 0x20 V125
0x15c: RETURN V124 V127
---
Entry stack: [V10, 0x14b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x14b]

================================

Block 0x15d
[0x15d:0x179]
---
Predecessors: [0xe6]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 DUP1
0x161 MLOAD
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a SWAP3
0x16b SWAP1
0x16c SWAP3
0x16d AND
0x16e DUP3
0x16f MSTORE
0x170 MLOAD
0x171 SWAP1
0x172 DUP2
0x173 SWAP1
0x174 SUB
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 RETURN
---
0x15d: JUMPDEST 
0x15e: V128 = 0x40
0x161: V129 = M[0x40]
0x162: V130 = 0x1
0x164: V131 = 0xa0
0x166: V132 = 0x2
0x168: V133 = EXP 0x2 0xa0
0x169: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x16f: M[V129] = V135
0x170: V136 = M[0x40]
0x174: V137 = SUB V129 V136
0x175: V138 = 0x20
0x177: V139 = ADD 0x20 V137
0x179: RETURN V136 V139
---
Entry stack: [V10, 0x15d, V92]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x15d]

================================

Block 0x17a
[0x17a:0x182]
---
Predecessors: [0x252]
Successors: [0x183]
---
0x17a JUMPDEST
0x17b PUSH1 0x1
0x17d DUP1
0x17e SLOAD
0x17f DUP5
0x180 ADD
0x181 SWAP1
0x182 SSTORE
---
0x17a: JUMPDEST 
0x17b: V140 = 0x1
0x17e: V141 = S[0x1]
0x180: V142 = ADD S2 V141
0x182: S[0x1] = V142
---
Entry stack: [V10, S4, {0x147, 0x149}, S2, 0x0, V237]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x147, 0x149}, S2, 0x0, V237]

================================

Block 0x183
[0x183:0x187]
---
Predecessors: [0x123, 0x17a, 0x1ad, 0x286]
Successors: [0x147, 0x149]
---
0x183 JUMPDEST
0x184 POP
0x185 POP
0x186 POP
0x187 JUMP
---
0x183: JUMPDEST 
0x187: JUMP {0x147, 0x149}
---
Entry stack: [V10, S4, {0x147, 0x149}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x188
[0x188:0x193]
---
Predecessors: [0x10e]
Successors: [0x194, 0x19d]
---
0x188 JUMPDEST
0x189 PUSH1 0x5
0x18b SLOAD
0x18c PUSH1 0x1
0x18e EQ
0x18f ISZERO
0x190 PUSH2 0x19d
0x193 JUMPI
---
0x188: JUMPDEST 
0x189: V143 = 0x5
0x18b: V144 = S[0x5]
0x18c: V145 = 0x1
0x18e: V146 = EQ 0x1 V144
0x18f: V147 = ISZERO V146
0x190: V148 = 0x19d
0x193: JUMPI 0x19d V147
---
Entry stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]

================================

Block 0x194
[0x194:0x19c]
---
Predecessors: [0x188]
Successors: [0x19d]
---
0x194 CALLVALUE
0x195 PUSH1 0x1
0x197 SSTORE
0x198 PUSH1 0x0
0x19a PUSH1 0x5
0x19c SSTORE
---
0x194: V149 = CALLVALUE
0x195: V150 = 0x1
0x197: S[0x1] = V149
0x198: V151 = 0x0
0x19a: V152 = 0x5
0x19c: S[0x5] = 0x0
---
Entry stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]

================================

Block 0x19d
[0x19d:0x1ac]
---
Predecessors: [0x188, 0x194]
Successors: [0x1ad, 0x1d2]
---
0x19d JUMPDEST
0x19e PUSH7 0x2386f26fc10000
0x1a6 CALLVALUE
0x1a7 LT
0x1a8 ISZERO
0x1a9 PUSH2 0x1d2
0x1ac JUMPI
---
0x19d: JUMPDEST 
0x19e: V153 = 0x2386f26fc10000
0x1a6: V154 = CALLVALUE
0x1a7: V155 = LT V154 0x2386f26fc10000
0x1a8: V156 = ISZERO V155
0x1a9: V157 = 0x1d2
0x1ac: JUMPI 0x1d2 V156
---
Entry stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]

================================

Block 0x1ad
[0x1ad:0x1d1]
---
Predecessors: [0x19d]
Successors: [0x183]
---
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 PUSH1 0x1
0x1b2 PUSH1 0xa0
0x1b4 PUSH1 0x2
0x1b6 EXP
0x1b7 SUB
0x1b8 CALLER
0x1b9 AND
0x1ba SWAP1
0x1bb PUSH1 0x0
0x1bd SWAP1
0x1be CALLVALUE
0x1bf SWAP1
0x1c0 DUP3
0x1c1 DUP2
0x1c2 DUP2
0x1c3 DUP2
0x1c4 DUP6
0x1c5 DUP9
0x1c6 DUP4
0x1c7 CALL
0x1c8 SWAP4
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce PUSH2 0x183
0x1d1 JUMP
---
0x1ad: V158 = 0x40
0x1af: V159 = M[0x40]
0x1b0: V160 = 0x1
0x1b2: V161 = 0xa0
0x1b4: V162 = 0x2
0x1b6: V163 = EXP 0x2 0xa0
0x1b7: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V165 = CALLER
0x1b9: V166 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V167 = 0x0
0x1be: V168 = CALLVALUE
0x1c7: V169 = CALL 0x0 V166 V168 V159 0x0 V159 0x0
0x1ce: V170 = 0x183
0x1d1: JUMP 0x183
---
Entry stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]

================================

Block 0x1d2
[0x1d2:0x220]
---
Predecessors: [0x19d]
Successors: [0x221, 0x252]
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0xa
0x1d5 CALLVALUE
0x1d6 DIV
0x1d7 PUSH1 0x0
0x1d9 DUP2
0x1da DUP2
0x1db SSTORE
0x1dc PUSH1 0x3
0x1de SLOAD
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea SWAP2
0x1eb SWAP1
0x1ec SWAP2
0x1ed AND
0x1ee SWAP3
0x1ef SWAP1
0x1f0 DUP3
0x1f1 DUP2
0x1f2 DUP2
0x1f3 DUP2
0x1f4 DUP6
0x1f5 DUP9
0x1f6 DUP4
0x1f7 CALL
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb DUP1
0x1fc SSTORE
0x1fd POP
0x1fe PUSH1 0x1
0x200 SLOAD
0x201 PUSH1 0xa
0x203 PUSH1 0x8
0x205 SWAP1
0x206 SWAP2
0x207 MUL
0x208 DUP2
0x209 SWAP1
0x20a DIV
0x20b PUSH1 0x2
0x20d DUP2
0x20e SWAP1
0x20f SSTORE
0x210 PUSH1 0x9
0x212 CALLVALUE
0x213 MUL
0x214 SWAP2
0x215 SWAP1
0x216 SWAP2
0x217 DIV
0x218 SWAP4
0x219 POP
0x21a DUP4
0x21b GT
0x21c ISZERO
0x21d PUSH2 0x252
0x220 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V171 = 0xa
0x1d5: V172 = CALLVALUE
0x1d6: V173 = DIV V172 0xa
0x1d7: V174 = 0x0
0x1db: S[0x0] = V173
0x1dc: V175 = 0x3
0x1de: V176 = S[0x3]
0x1df: V177 = 0x40
0x1e1: V178 = M[0x40]
0x1e2: V179 = 0x1
0x1e4: V180 = 0xa0
0x1e6: V181 = 0x2
0x1e8: V182 = EXP 0x2 0xa0
0x1e9: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ed: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x1f7: V185 = CALL 0x0 V184 V173 V178 0x0 V178 0x0
0x1fc: S[0x0] = 0x0
0x1fe: V186 = 0x1
0x200: V187 = S[0x1]
0x201: V188 = 0xa
0x203: V189 = 0x8
0x207: V190 = MUL V187 0x8
0x20a: V191 = DIV V190 0xa
0x20b: V192 = 0x2
0x20f: S[0x2] = V191
0x210: V193 = 0x9
0x212: V194 = CALLVALUE
0x213: V195 = MUL V194 0x9
0x217: V196 = DIV V195 0xa
0x21b: V197 = GT V196 V191
0x21c: V198 = ISZERO V197
0x21d: V199 = 0x252
0x220: JUMPI 0x252 V198
---
Entry stack: [V10, S4, {0x147, 0x149}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V196, S1, S0]
Exit stack: [V10, S4, {0x147, 0x149}, V196, 0x0, 0x0]

================================

Block 0x221
[0x221:0x251]
---
Predecessors: [0x1d2]
Successors: [0x252]
---
0x221 CALLER
0x222 PUSH1 0x1
0x224 PUSH1 0xa0
0x226 PUSH1 0x2
0x228 EXP
0x229 SUB
0x22a AND
0x22b PUSH1 0x0
0x22d PUSH1 0x2
0x22f PUSH1 0x0
0x231 POP
0x232 SLOAD
0x233 DUP6
0x234 SUB
0x235 PUSH1 0x40
0x237 MLOAD
0x238 DUP1
0x239 SWAP1
0x23a POP
0x23b PUSH1 0x0
0x23d PUSH1 0x40
0x23f MLOAD
0x240 DUP1
0x241 DUP4
0x242 SUB
0x243 DUP2
0x244 DUP6
0x245 DUP9
0x246 DUP9
0x247 CALL
0x248 POP
0x249 POP
0x24a PUSH1 0x2
0x24c SLOAD
0x24d SWAP6
0x24e POP
0x24f POP
0x250 POP
0x251 POP
---
0x221: V200 = CALLER
0x222: V201 = 0x1
0x224: V202 = 0xa0
0x226: V203 = 0x2
0x228: V204 = EXP 0x2 0xa0
0x229: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x22b: V207 = 0x0
0x22d: V208 = 0x2
0x22f: V209 = 0x0
0x232: V210 = S[0x2]
0x234: V211 = SUB V196 V210
0x235: V212 = 0x40
0x237: V213 = M[0x40]
0x23b: V214 = 0x0
0x23d: V215 = 0x40
0x23f: V216 = M[0x40]
0x242: V217 = SUB V213 V216
0x247: V218 = CALL 0x0 V206 V211 V216 V217 V216 0x0
0x24a: V219 = 0x2
0x24c: V220 = S[0x2]
---
Entry stack: [V10, S4, {0x147, 0x149}, V196, 0x0, 0x0]
Stack pops: 3
Stack additions: [V220, S1, S0]
Exit stack: [V10, S4, {0x147, 0x149}, V220, 0x0, 0x0]

================================

Block 0x252
[0x252:0x285]
---
Predecessors: [0x1d2, 0x221]
Successors: [0x17a, 0x286]
---
0x252 JUMPDEST
0x253 PUSH1 0x40
0x255 DUP1
0x256 MLOAD
0x257 TIMESTAMP
0x258 DUP2
0x259 MSTORE
0x25a SWAP1
0x25b MLOAD
0x25c SWAP1
0x25d DUP2
0x25e SWAP1
0x25f SUB
0x260 PUSH1 0x20
0x262 ADD
0x263 SWAP1
0x264 SHA3
0x265 GAS
0x266 PUSH1 0x40
0x268 DUP1
0x269 MLOAD
0x26a SWAP2
0x26b DUP3
0x26c MSTORE
0x26d MLOAD
0x26e SWAP1
0x26f DUP2
0x270 SWAP1
0x271 SUB
0x272 PUSH1 0x20
0x274 ADD
0x275 SWAP1
0x276 SHA3
0x277 ADD
0x278 SWAP1
0x279 POP
0x27a PUSH1 0x2
0x27c DUP2
0x27d MOD
0x27e PUSH1 0x0
0x280 EQ
0x281 ISZERO
0x282 PUSH2 0x17a
0x285 JUMPI
---
0x252: JUMPDEST 
0x253: V221 = 0x40
0x256: V222 = M[0x40]
0x257: V223 = TIMESTAMP
0x259: M[V222] = V223
0x25b: V224 = M[0x40]
0x25f: V225 = SUB V222 V224
0x260: V226 = 0x20
0x262: V227 = ADD 0x20 V225
0x264: V228 = SHA3 V224 V227
0x265: V229 = GAS
0x266: V230 = 0x40
0x269: V231 = M[0x40]
0x26c: M[V231] = V229
0x26d: V232 = M[0x40]
0x271: V233 = SUB V231 V232
0x272: V234 = 0x20
0x274: V235 = ADD 0x20 V233
0x276: V236 = SHA3 V232 V235
0x277: V237 = ADD V236 V228
0x27a: V238 = 0x2
0x27d: V239 = MOD V237 0x2
0x27e: V240 = 0x0
0x280: V241 = EQ 0x0 V239
0x281: V242 = ISZERO V241
0x282: V243 = 0x17a
0x285: JUMPI 0x17a V242
---
Entry stack: [V10, S4, {0x147, 0x149}, S2, 0x0, 0x0]
Stack pops: 1
Stack additions: [V237]
Exit stack: [V10, S4, {0x147, 0x149}, S2, 0x0, V237]

================================

Block 0x286
[0x286:0x2b0]
---
Predecessors: [0x252]
Successors: [0x183]
---
0x286 PUSH1 0x40
0x288 MLOAD
0x289 PUSH1 0x2
0x28b DUP5
0x28c MUL
0x28d SWAP3
0x28e POP
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 CALLER
0x298 AND
0x299 SWAP1
0x29a PUSH1 0x0
0x29c SWAP1
0x29d DUP5
0x29e SWAP1
0x29f DUP3
0x2a0 DUP2
0x2a1 DUP2
0x2a2 DUP2
0x2a3 DUP6
0x2a4 DUP9
0x2a5 DUP4
0x2a6 CALL
0x2a7 SWAP4
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH2 0x183
0x2b0 JUMP
---
0x286: V244 = 0x40
0x288: V245 = M[0x40]
0x289: V246 = 0x2
0x28c: V247 = MUL S2 0x2
0x28f: V248 = 0x1
0x291: V249 = 0xa0
0x293: V250 = 0x2
0x295: V251 = EXP 0x2 0xa0
0x296: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V253 = CALLER
0x298: V254 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V255 = 0x0
0x2a6: V256 = CALL 0x0 V254 V247 V245 0x0 V245 0x0
0x2ad: V257 = 0x183
0x2b0: JUMP 0x183
---
Entry stack: [V10, S4, {0x147, 0x149}, S2, 0x0, V237]
Stack pops: 3
Stack additions: [S2, V247, S0]
Exit stack: [V10, S4, {0x147, 0x149}, S2, V247, V237]

================================

Function 0:
Public function signature: 0x2fb0c5e
Entry block: 0x6c
Exit block: 0x14b
Body: 0x6c, 0x14b

Function 1:
Public function signature: 0x13af4035
Entry block: 0x75
Exit block: 0x147
Body: 0x75, 0x95, 0xb4, 0x147

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xb7
Exit block: 0x147
Body: 0xb7, 0xd4, 0x147, 0x149

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xe6
Exit block: 0x15d
Body: 0xe6, 0x15d

Function 4:
Public function signature: 0xb69ef8a8
Entry block: 0xf8
Exit block: 0x14b
Body: 0xf8, 0x14b

Function 5:
Public function signature: 0xddca3f43
Entry block: 0x101
Exit block: 0x14b
Body: 0x101, 0x14b

Function 6:
Public function signature: 0xe97dcb62
Entry block: 0x10a
Exit block: 0x147
Body: 0x10a, 0x10e, 0x123, 0x147, 0x149, 0x17a, 0x183, 0x188, 0x194, 0x19d, 0x1ad, 0x1d2, 0x221, 0x252, 0x286

Function 7:
Public fallback function
Entry block: 0x61
Exit block: 0x147
Body: 0x61, 0x10e, 0x123, 0x147, 0x149, 0x17a, 0x183, 0x188, 0x194, 0x19d, 0x1ad, 0x1d2, 0x221, 0x252, 0x286

