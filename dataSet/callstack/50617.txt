Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x26]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x41c0e1b5
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x26
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x41c0e1b5
0x14: V9 = EQ V7 0x41c0e1b5
0x15: V10 = 0x26
0x18: JUMPI 0x26 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x4e]
---
0x19 DUP1
0x1a PUSH4 0xb5aebc80
0x1f EQ
0x20 PUSH2 0x4e
0x23 JUMPI
---
0x1a: V11 = 0xb5aebc80
0x1f: V12 = EQ 0xb5aebc80 V7
0x20: V13 = 0x4e
0x23: JUMPI 0x4e V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x25]
---
Predecessors: [0x19, 0x190, 0x2cd]
Successors: []
---
0x24 JUMPDEST
0x25 STOP
---
0x24: JUMPDEST 
0x25: STOP 
---
Entry stack: [V7, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, S4, S3, S2, S1, S0]

================================

Block 0x26
[0x26:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x2cd]
---
0x26 JUMPDEST
0x27 PUSH2 0x24
0x2a PUSH1 0x0
0x2c SLOAD
0x2d CALLER
0x2e PUSH1 0x1
0x30 PUSH1 0xa0
0x32 PUSH1 0x2
0x34 EXP
0x35 SUB
0x36 SWAP1
0x37 DUP2
0x38 AND
0x39 SWAP2
0x3a AND
0x3b EQ
0x3c ISZERO
0x3d PUSH2 0x2cd
0x40 JUMPI
---
0x26: JUMPDEST 
0x27: V14 = 0x24
0x2a: V15 = 0x0
0x2c: V16 = S[0x0]
0x2d: V17 = CALLER
0x2e: V18 = 0x1
0x30: V19 = 0xa0
0x32: V20 = 0x2
0x34: V21 = EXP 0x2 0xa0
0x35: V22 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V17
0x3a: V24 = AND V16 0xffffffffffffffffffffffffffffffffffffffff
0x3b: V25 = EQ V24 V23
0x3c: V26 = ISZERO V25
0x3d: V27 = 0x2cd
0x40: JUMPI 0x2cd V26
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x24]
Exit stack: [V7, 0x24]

================================

Block 0x41
[0x41:0x4d]
---
Predecessors: [0x26]
Successors: []
---
0x41 PUSH1 0x0
0x43 SLOAD
0x44 PUSH1 0x1
0x46 PUSH1 0xa0
0x48 PUSH1 0x2
0x4a EXP
0x4b SUB
0x4c AND
0x4d SELFDESTRUCT
---
0x41: V28 = 0x0
0x43: V29 = S[0x0]
0x44: V30 = 0x1
0x46: V31 = 0xa0
0x48: V32 = 0x2
0x4a: V33 = EXP 0x2 0xa0
0x4b: V34 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x4d: SELFDESTRUCT V35
---
Entry stack: [V7, 0x24]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x24]

================================

Block 0x4e
[0x4e:0x133]
---
Predecessors: [0x19]
Successors: [0x134, 0x14d]
---
0x4e JUMPDEST
0x4f PUSH2 0x24
0x52 PUSH1 0x4
0x54 DUP1
0x55 DUP1
0x56 CALLDATALOAD
0x57 SWAP1
0x58 PUSH1 0x20
0x5a ADD
0x5b SWAP1
0x5c DUP3
0x5d ADD
0x5e DUP1
0x5f CALLDATALOAD
0x60 SWAP1
0x61 PUSH1 0x20
0x63 ADD
0x64 SWAP2
0x65 SWAP2
0x66 SWAP1
0x67 DUP1
0x68 DUP1
0x69 PUSH1 0x1f
0x6b ADD
0x6c PUSH1 0x20
0x6e DUP1
0x6f SWAP2
0x70 DIV
0x71 MUL
0x72 PUSH1 0x20
0x74 ADD
0x75 PUSH1 0x40
0x77 MLOAD
0x78 SWAP1
0x79 DUP2
0x7a ADD
0x7b PUSH1 0x40
0x7d MSTORE
0x7e DUP1
0x7f SWAP4
0x80 SWAP3
0x81 SWAP2
0x82 SWAP1
0x83 DUP2
0x84 DUP2
0x85 MSTORE
0x86 PUSH1 0x20
0x88 ADD
0x89 DUP4
0x8a DUP4
0x8b DUP1
0x8c DUP3
0x8d DUP5
0x8e CALLDATACOPY
0x8f POP
0x90 SWAP5
0x91 SWAP7
0x92 POP
0x93 POP
0x94 POP
0x95 POP
0x96 POP
0x97 POP
0x98 POP
0x99 PUSH1 0x0
0x9b DUP1
0x9c SLOAD
0x9d PUSH1 0x40
0x9f MLOAD
0xa0 PUSH1 0x5f
0xa2 PUSH1 0x64
0xa4 CALLVALUE
0xa5 DIV
0xa6 MUL
0xa7 SWAP3
0xa8 PUSH1 0x1
0xaa PUSH1 0xa0
0xac PUSH1 0x2
0xae EXP
0xaf SUB
0xb0 SWAP1
0xb1 SWAP3
0xb2 AND
0xb3 SWAP2
0xb4 SWAP1
0xb5 DUP4
0xb6 SWAP1
0xb7 DUP3
0xb8 DUP2
0xb9 DUP2
0xba DUP2
0xbb DUP6
0xbc DUP9
0xbd DUP4
0xbe CALL
0xbf SWAP4
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 PUSH32 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31
0xe6 DUP3
0xe7 DUP3
0xe8 PUSH1 0x40
0xea MLOAD
0xeb DUP1
0xec DUP1
0xed PUSH1 0x20
0xef ADD
0xf0 DUP4
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 DUP3
0xf7 DUP2
0xf8 SUB
0xf9 DUP3
0xfa MSTORE
0xfb DUP5
0xfc DUP2
0xfd DUP2
0xfe MLOAD
0xff DUP2
0x100 MSTORE
0x101 PUSH1 0x20
0x103 ADD
0x104 SWAP2
0x105 POP
0x106 DUP1
0x107 MLOAD
0x108 SWAP1
0x109 PUSH1 0x20
0x10b ADD
0x10c SWAP1
0x10d DUP1
0x10e DUP4
0x10f DUP4
0x110 DUP3
0x111 SWAP1
0x112 PUSH1 0x0
0x114 PUSH1 0x4
0x116 PUSH1 0x20
0x118 DUP5
0x119 PUSH1 0x1f
0x11b ADD
0x11c DIV
0x11d PUSH1 0xf
0x11f MUL
0x120 PUSH1 0x3
0x122 ADD
0x123 CALL
0x124 POP
0x125 SWAP1
0x126 POP
0x127 SWAP1
0x128 DUP2
0x129 ADD
0x12a SWAP1
0x12b PUSH1 0x1f
0x12d AND
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x14d
0x133 JUMPI
---
0x4e: JUMPDEST 
0x4f: V36 = 0x24
0x52: V37 = 0x4
0x56: V38 = CALLDATALOAD 0x4
0x58: V39 = 0x20
0x5a: V40 = ADD 0x20 0x4
0x5d: V41 = ADD 0x4 V38
0x5f: V42 = CALLDATALOAD V41
0x61: V43 = 0x20
0x63: V44 = ADD 0x20 V41
0x69: V45 = 0x1f
0x6b: V46 = ADD 0x1f V42
0x6c: V47 = 0x20
0x70: V48 = DIV V46 0x20
0x71: V49 = MUL V48 0x20
0x72: V50 = 0x20
0x74: V51 = ADD 0x20 V49
0x75: V52 = 0x40
0x77: V53 = M[0x40]
0x7a: V54 = ADD V53 V51
0x7b: V55 = 0x40
0x7d: M[0x40] = V54
0x85: M[V53] = V42
0x86: V56 = 0x20
0x88: V57 = ADD 0x20 V53
0x8e: CALLDATACOPY V57 V44 V42
0x99: V58 = 0x0
0x9c: V59 = S[0x0]
0x9d: V60 = 0x40
0x9f: V61 = M[0x40]
0xa0: V62 = 0x5f
0xa2: V63 = 0x64
0xa4: V64 = CALLVALUE
0xa5: V65 = DIV V64 0x64
0xa6: V66 = MUL V65 0x5f
0xa8: V67 = 0x1
0xaa: V68 = 0xa0
0xac: V69 = 0x2
0xae: V70 = EXP 0x2 0xa0
0xaf: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2: V72 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V73 = CALL 0x0 V72 V66 V61 0x0 V61 0x0
0xc5: V74 = 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31
0xe8: V75 = 0x40
0xea: V76 = M[0x40]
0xed: V77 = 0x20
0xef: V78 = ADD 0x20 V76
0xf2: M[V78] = V66
0xf3: V79 = 0x20
0xf5: V80 = ADD 0x20 V78
0xf8: V81 = SUB V80 V76
0xfa: M[V76] = V81
0xfe: V82 = M[V53]
0x100: M[V80] = V82
0x101: V83 = 0x20
0x103: V84 = ADD 0x20 V80
0x107: V85 = M[V53]
0x109: V86 = 0x20
0x10b: V87 = ADD 0x20 V53
0x112: V88 = 0x0
0x114: V89 = 0x4
0x116: V90 = 0x20
0x119: V91 = 0x1f
0x11b: V92 = ADD 0x1f V85
0x11c: V93 = DIV V92 0x20
0x11d: V94 = 0xf
0x11f: V95 = MUL 0xf V93
0x120: V96 = 0x3
0x122: V97 = ADD 0x3 V95
0x123: V98 = CALL V97 0x4 0x0 V87 V85 V84 V85
0x129: V99 = ADD V85 V84
0x12b: V100 = 0x1f
0x12d: V101 = AND 0x1f V85
0x12f: V102 = ISZERO V101
0x130: V103 = 0x14d
0x133: JUMPI 0x14d V102
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x24, V53, V66, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V53, V66, V76, V76, V99, V101]
Exit stack: [V7, 0x24, V53, V66, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V53, V66, V76, V76, V99, V101]

================================

Block 0x134
[0x134:0x14c]
---
Predecessors: [0x4e]
Successors: [0x14d]
---
0x134 DUP1
0x135 DUP3
0x136 SUB
0x137 DUP1
0x138 MLOAD
0x139 PUSH1 0x1
0x13b DUP4
0x13c PUSH1 0x20
0x13e SUB
0x13f PUSH2 0x100
0x142 EXP
0x143 SUB
0x144 NOT
0x145 AND
0x146 DUP2
0x147 MSTORE
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP2
0x14c POP
---
0x136: V104 = SUB V99 V101
0x138: V105 = M[V104]
0x139: V106 = 0x1
0x13c: V107 = 0x20
0x13e: V108 = SUB 0x20 V101
0x13f: V109 = 0x100
0x142: V110 = EXP 0x100 V108
0x143: V111 = SUB V110 0x1
0x144: V112 = NOT V111
0x145: V113 = AND V112 V105
0x147: M[V104] = V113
0x148: V114 = 0x20
0x14a: V115 = ADD 0x20 V104
---
Entry stack: [V7, 0x24, V53, V66, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V53, V66, V76, V76, V99, V101]
Stack pops: 2
Stack additions: [V115, S0]
Exit stack: [V7, 0x24, V53, V66, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V53, V66, V76, V76, V115, V101]

================================

Block 0x14d
[0x14d:0x171]
---
Predecessors: [0x4e, 0x134]
Successors: [0x172, 0x1a6]
---
0x14d JUMPDEST
0x14e POP
0x14f SWAP4
0x150 POP
0x151 POP
0x152 POP
0x153 POP
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 SWAP2
0x159 SUB
0x15a SWAP1
0x15b LOG1
0x15c PUSH1 0x1
0x15e DUP1
0x15f SLOAD
0x160 DUP1
0x161 DUP3
0x162 ADD
0x163 DUP1
0x164 DUP4
0x165 SSTORE
0x166 DUP3
0x167 DUP2
0x168 DUP4
0x169 DUP1
0x16a ISZERO
0x16b DUP3
0x16c SWAP1
0x16d GT
0x16e PUSH2 0x1a6
0x171 JUMPI
---
0x14d: JUMPDEST 
0x154: V116 = 0x40
0x156: V117 = M[0x40]
0x159: V118 = SUB S1 V117
0x15b: LOG V117 V118 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31
0x15c: V119 = 0x1
0x15f: V120 = S[0x1]
0x162: V121 = ADD 0x1 V120
0x165: S[0x1] = V121
0x16a: V122 = ISZERO V120
0x16d: V123 = GT V122 V121
0x16e: V124 = 0x1a6
0x171: JUMPI 0x1a6 V123
---
Entry stack: [V7, 0x24, V53, V66, 0x6460c89442b43cbc9b774fd2029482ffb10e52e1505f468ad751988f191ffe31, V53, V66, V76, V76, S1, V101]
Stack pops: 7
Stack additions: [0x1, V120, V121, 0x1, V121, V120]
Exit stack: [V7, 0x24, V53, V66, 0x1, V120, V121, 0x1, V121, V120]

================================

Block 0x172
[0x172:0x18f]
---
Predecessors: [0x14d]
Successors: [0x235]
---
0x172 PUSH1 0x2
0x174 MUL
0x175 DUP2
0x176 PUSH1 0x2
0x178 MUL
0x179 DUP4
0x17a PUSH1 0x0
0x17c MSTORE
0x17d PUSH1 0x20
0x17f PUSH1 0x0
0x181 SHA3
0x182 SWAP2
0x183 DUP3
0x184 ADD
0x185 SWAP2
0x186 ADD
0x187 PUSH2 0x1a6
0x18a SWAP2
0x18b SWAP1
0x18c PUSH2 0x235
0x18f JUMP
---
0x172: V125 = 0x2
0x174: V126 = MUL 0x2 V120
0x176: V127 = 0x2
0x178: V128 = MUL 0x2 V121
0x17a: V129 = 0x0
0x17c: M[0x0] = 0x1
0x17d: V130 = 0x20
0x17f: V131 = 0x0
0x181: V132 = SHA3 0x0 0x20
0x184: V133 = ADD V132 V126
0x186: V134 = ADD V132 V128
0x187: V135 = 0x1a6
0x18c: V136 = 0x235
0x18f: JUMP 0x235
---
Entry stack: [V7, 0x24, V53, V66, 0x1, V120, V121, 0x1, V121, V120]
Stack pops: 3
Stack additions: [S2, S1, 0x1a6, V133, V134]
Exit stack: [V7, 0x24, V53, V66, 0x1, V120, V121, 0x1, V121, 0x1a6, V133, V134]

================================

Block 0x190
[0x190:0x1a5]
---
Predecessors: [0x299]
Successors: [0x24]
---
0x190 JUMPDEST
0x191 POP
0x192 POP
0x193 PUSH1 0x20
0x195 DUP3
0x196 ADD
0x197 MLOAD
0x198 DUP2
0x199 PUSH1 0x1
0x19b ADD
0x19c PUSH1 0x0
0x19e POP
0x19f SSTORE
0x1a0 POP
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 JUMP
---
0x190: JUMPDEST 
0x193: V137 = 0x20
0x196: V138 = ADD S3 0x20
0x197: V139 = M[V138]
0x199: V140 = 0x1
0x19b: V141 = ADD 0x1 S2
0x19c: V142 = 0x0
0x19f: S[V141] = V139
0x1a5: JUMP S7
---
Entry stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V7, S12, S11, S10, S9, S8]

================================

Block 0x1a6
[0x1a6:0x20e]
---
Predecessors: [0x14d, 0x299]
Successors: [0x20f, 0x29d]
---
0x1a6 JUMPDEST
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa SWAP2
0x1ab SWAP1
0x1ac SWAP1
0x1ad PUSH1 0x0
0x1af MSTORE
0x1b0 PUSH1 0x20
0x1b2 PUSH1 0x0
0x1b4 SHA3
0x1b5 SWAP1
0x1b6 PUSH1 0x2
0x1b8 MUL
0x1b9 ADD
0x1ba PUSH1 0x0
0x1bc POP
0x1bd PUSH1 0x40
0x1bf DUP1
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 DUP3
0x1c3 ADD
0x1c4 SWAP1
0x1c5 SWAP2
0x1c6 MSTORE
0x1c7 DUP5
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc DUP2
0x1cd DUP2
0x1ce ADD
0x1cf DUP6
0x1d0 SWAP1
0x1d1 MSTORE
0x1d2 DUP6
0x1d3 MLOAD
0x1d4 DUP4
0x1d5 SLOAD
0x1d6 PUSH1 0x0
0x1d8 DUP6
0x1d9 DUP2
0x1da MSTORE
0x1db DUP4
0x1dc SWAP1
0x1dd SHA3
0x1de SWAP4
0x1df SWAP5
0x1e0 SWAP4
0x1e1 DUP5
0x1e2 SWAP4
0x1e3 PUSH1 0x2
0x1e5 PUSH1 0x1
0x1e7 DUP5
0x1e8 AND
0x1e9 ISZERO
0x1ea PUSH2 0x100
0x1ed MUL
0x1ee PUSH1 0x0
0x1f0 NOT
0x1f1 ADD
0x1f2 SWAP1
0x1f3 SWAP4
0x1f4 AND
0x1f5 SWAP3
0x1f6 SWAP1
0x1f7 SWAP3
0x1f8 DIV
0x1f9 PUSH1 0x1f
0x1fb SWAP1
0x1fc DUP2
0x1fd ADD
0x1fe DUP4
0x1ff SWAP1
0x200 DIV
0x201 DUP3
0x202 ADD
0x203 SWAP4
0x204 SWAP3
0x205 DUP11
0x206 ADD
0x207 SWAP1
0x208 DUP4
0x209 SWAP1
0x20a LT
0x20b PUSH2 0x29d
0x20e JUMPI
---
0x1a6: JUMPDEST 
0x1ad: V143 = 0x0
0x1af: M[0x0] = S5
0x1b0: V144 = 0x20
0x1b2: V145 = 0x0
0x1b4: V146 = SHA3 0x0 0x20
0x1b6: V147 = 0x2
0x1b8: V148 = MUL 0x2 S4
0x1b9: V149 = ADD V148 V146
0x1ba: V150 = 0x0
0x1bd: V151 = 0x40
0x1c0: V152 = M[0x40]
0x1c3: V153 = ADD 0x40 V152
0x1c6: M[0x40] = V153
0x1c9: M[V152] = S7
0x1ca: V154 = 0x20
0x1ce: V155 = ADD 0x20 V152
0x1d1: M[V155] = S6
0x1d3: V156 = M[S7]
0x1d5: V157 = S[V149]
0x1d6: V158 = 0x0
0x1da: M[0x0] = V149
0x1dd: V159 = SHA3 0x0 0x20
0x1e3: V160 = 0x2
0x1e5: V161 = 0x1
0x1e8: V162 = AND V157 0x1
0x1e9: V163 = ISZERO V162
0x1ea: V164 = 0x100
0x1ed: V165 = MUL 0x100 V163
0x1ee: V166 = 0x0
0x1f0: V167 = NOT 0x0
0x1f1: V168 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V165
0x1f4: V169 = AND V157 V168
0x1f8: V170 = DIV V169 0x2
0x1f9: V171 = 0x1f
0x1fd: V172 = ADD 0x1f V170
0x200: V173 = DIV V172 0x20
0x202: V174 = ADD V159 V173
0x206: V175 = ADD S7 0x20
0x20a: V176 = LT 0x1f V156
0x20b: V177 = 0x29d
0x20e: JUMPI 0x29d V176
---
Entry stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S3, V152, V149, V149, V174, V156, V159, V175]
Exit stack: [V7, S12, S11, S10, S9, S8, S7, S6, S3, V152, V149, V149, V174, V156, V159, V175]

================================

Block 0x20f
[0x20f:0x21a]
---
Predecessors: [0x1a6]
Successors: [0x21b]
---
0x20f DUP1
0x210 MLOAD
0x211 PUSH1 0xff
0x213 NOT
0x214 AND
0x215 DUP4
0x216 DUP1
0x217 ADD
0x218 OR
0x219 DUP6
0x21a SSTORE
---
0x210: V178 = M[V175]
0x211: V179 = 0xff
0x213: V180 = NOT 0xff
0x214: V181 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V178
0x217: V182 = ADD V156 V156
0x218: V183 = OR V182 V181
0x21a: S[V149] = V183
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, V156, V159, V175]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, V156, V159, V175]

================================

Block 0x21b
[0x21b:0x226]
---
Predecessors: [0x20f, 0x29d, 0x2af]
Successors: [0x285]
---
0x21b JUMPDEST
0x21c POP
0x21d PUSH2 0x190
0x220 SWAP3
0x221 SWAP2
0x222 POP
0x223 PUSH2 0x285
0x226 JUMP
---
0x21b: JUMPDEST 
0x21d: V184 = 0x190
0x223: V185 = 0x285
0x226: JUMP 0x285
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, S2, S1, S0]
Stack pops: 4
Stack additions: [0x190, S3, S1]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, 0x190, V174, S1]

================================

Block 0x227
[0x227:0x234]
---
Predecessors: [0x266, 0x299]
Successors: [0x235]
---
0x227 JUMPDEST
0x228 POP
0x229 POP
0x22a PUSH1 0x0
0x22c PUSH1 0x1
0x22e SWAP2
0x22f SWAP1
0x230 SWAP2
0x231 ADD
0x232 SWAP1
0x233 DUP2
0x234 SSTORE
---
0x227: JUMPDEST 
0x22a: V186 = 0x0
0x22c: V187 = 0x1
0x231: V188 = ADD 0x1 S2
0x234: S[V188] = 0x0
---
Entry stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V188]
Exit stack: [V7, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V188]

================================

Block 0x235
[0x235:0x23d]
---
Predecessors: [0x172, 0x227]
Successors: [0x23e, 0x299]
---
0x235 JUMPDEST
0x236 DUP1
0x237 DUP3
0x238 GT
0x239 ISZERO
0x23a PUSH2 0x299
0x23d JUMPI
---
0x235: JUMPDEST 
0x238: V189 = GT S1 S0
0x239: V190 = ISZERO V189
0x23a: V191 = 0x299
0x23d: JUMPI 0x299 V190
---
Entry stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x23e
[0x23e:0x265]
---
Predecessors: [0x235]
Successors: [0x266, 0x26b]
---
0x23e PUSH1 0x0
0x240 PUSH1 0x0
0x242 DUP3
0x243 ADD
0x244 PUSH1 0x0
0x246 POP
0x247 DUP1
0x248 SLOAD
0x249 PUSH1 0x1
0x24b DUP2
0x24c PUSH1 0x1
0x24e AND
0x24f ISZERO
0x250 PUSH2 0x100
0x253 MUL
0x254 SUB
0x255 AND
0x256 PUSH1 0x2
0x258 SWAP1
0x259 DIV
0x25a PUSH1 0x0
0x25c DUP3
0x25d SSTORE
0x25e DUP1
0x25f PUSH1 0x1f
0x261 LT
0x262 PUSH2 0x26b
0x265 JUMPI
---
0x23e: V192 = 0x0
0x240: V193 = 0x0
0x243: V194 = ADD S0 0x0
0x244: V195 = 0x0
0x248: V196 = S[V194]
0x249: V197 = 0x1
0x24c: V198 = 0x1
0x24e: V199 = AND 0x1 V196
0x24f: V200 = ISZERO V199
0x250: V201 = 0x100
0x253: V202 = MUL 0x100 V200
0x254: V203 = SUB V202 0x1
0x255: V204 = AND V203 V196
0x256: V205 = 0x2
0x259: V206 = DIV V204 0x2
0x25a: V207 = 0x0
0x25d: S[V194] = 0x0
0x25f: V208 = 0x1f
0x261: V209 = LT 0x1f V206
0x262: V210 = 0x26b
0x265: JUMPI 0x26b V209
---
Entry stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V194, V206]
Exit stack: [V7, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V194, V206]

================================

Block 0x266
[0x266:0x26a]
---
Predecessors: [0x23e]
Successors: [0x227]
---
0x266 POP
0x267 PUSH2 0x227
0x26a JUMP
---
0x267: V211 = 0x227
0x26a: JUMP 0x227
---
Entry stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V194, V206]
Stack pops: 1
Stack additions: []
Exit stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V194]

================================

Block 0x26b
[0x26b:0x284]
---
Predecessors: [0x23e]
Successors: [0x285]
---
0x26b JUMPDEST
0x26c PUSH1 0x1f
0x26e ADD
0x26f PUSH1 0x20
0x271 SWAP1
0x272 DIV
0x273 SWAP1
0x274 PUSH1 0x0
0x276 MSTORE
0x277 PUSH1 0x20
0x279 PUSH1 0x0
0x27b SHA3
0x27c SWAP1
0x27d DUP2
0x27e ADD
0x27f SWAP1
0x280 PUSH2 0x227
0x283 SWAP2
0x284 SWAP1
---
0x26b: JUMPDEST 
0x26c: V212 = 0x1f
0x26e: V213 = ADD 0x1f V206
0x26f: V214 = 0x20
0x272: V215 = DIV V213 0x20
0x274: V216 = 0x0
0x276: M[0x0] = V194
0x277: V217 = 0x20
0x279: V218 = 0x0
0x27b: V219 = SHA3 0x0 0x20
0x27e: V220 = ADD V219 V215
0x280: V221 = 0x227
---
Entry stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, V194, V206]
Stack pops: 2
Stack additions: [0x227, V220, V219]
Exit stack: [V7, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x227, V220, V219]

================================

Block 0x285
[0x285:0x28d]
---
Predecessors: [0x21b, 0x26b, 0x28e]
Successors: [0x28e, 0x299]
---
0x285 JUMPDEST
0x286 DUP1
0x287 DUP3
0x288 GT
0x289 ISZERO
0x28a PUSH2 0x299
0x28d JUMPI
---
0x285: JUMPDEST 
0x288: V222 = GT S1 S0
0x289: V223 = ISZERO V222
0x28a: V224 = 0x299
0x28d: JUMPI 0x299 V223
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x190, 0x227}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x190, 0x227}, S1, S0]

================================

Block 0x28e
[0x28e:0x298]
---
Predecessors: [0x285]
Successors: [0x285]
---
0x28e PUSH1 0x0
0x290 DUP2
0x291 SSTORE
0x292 PUSH1 0x1
0x294 ADD
0x295 PUSH2 0x285
0x298 JUMP
---
0x28e: V225 = 0x0
0x291: S[S0] = 0x0
0x292: V226 = 0x1
0x294: V227 = ADD 0x1 S0
0x295: V228 = 0x285
0x298: JUMP 0x285
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x190, 0x227}, S1, S0]
Stack pops: 1
Stack additions: [V227]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x190, 0x227}, S1, V227]

================================

Block 0x299
[0x299:0x29c]
---
Predecessors: [0x235, 0x285]
Successors: [0x190, 0x1a6, 0x227]
---
0x299 JUMPDEST
0x29a POP
0x29b SWAP1
0x29c JUMP
---
0x299: JUMPDEST 
0x29c: JUMP S2
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x29d
[0x29d:0x2ab]
---
Predecessors: [0x1a6]
Successors: [0x21b, 0x2ac]
---
0x29d JUMPDEST
0x29e DUP3
0x29f DUP1
0x2a0 ADD
0x2a1 PUSH1 0x1
0x2a3 ADD
0x2a4 DUP6
0x2a5 SSTORE
0x2a6 DUP3
0x2a7 ISZERO
0x2a8 PUSH2 0x21b
0x2ab JUMPI
---
0x29d: JUMPDEST 
0x2a0: V229 = ADD V156 V156
0x2a1: V230 = 0x1
0x2a3: V231 = ADD 0x1 V229
0x2a5: S[V149] = V231
0x2a7: V232 = ISZERO V156
0x2a8: V233 = 0x21b
0x2ab: JUMPI 0x21b V232
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, V156, V159, V175]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, V156, V159, V175]

================================

Block 0x2ac
[0x2ac:0x2ae]
---
Predecessors: [0x29d]
Successors: [0x2af]
---
0x2ac SWAP2
0x2ad DUP3
0x2ae ADD
---
0x2ae: V234 = ADD V175 V156
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, V156, V159, V175]
Stack pops: 3
Stack additions: [S0, S1, V234]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, V175, V159, V234]

================================

Block 0x2af
[0x2af:0x2b7]
---
Predecessors: [0x2ac, 0x2b8]
Successors: [0x21b, 0x2b8]
---
0x2af JUMPDEST
0x2b0 DUP3
0x2b1 DUP2
0x2b2 GT
0x2b3 ISZERO
0x2b4 PUSH2 0x21b
0x2b7 JUMPI
---
0x2af: JUMPDEST 
0x2b2: V235 = GT V234 S2
0x2b3: V236 = ISZERO V235
0x2b4: V237 = 0x21b
0x2b7: JUMPI 0x21b V236
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, S2, S1, V234]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, S2, S1, V234]

================================

Block 0x2b8
[0x2b8:0x2cc]
---
Predecessors: [0x2af]
Successors: [0x2af]
---
0x2b8 DUP3
0x2b9 MLOAD
0x2ba DUP3
0x2bb PUSH1 0x0
0x2bd POP
0x2be SSTORE
0x2bf SWAP2
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 SWAP2
0x2c4 SWAP1
0x2c5 PUSH1 0x1
0x2c7 ADD
0x2c8 SWAP1
0x2c9 PUSH2 0x2af
0x2cc JUMP
---
0x2b9: V238 = M[S2]
0x2bb: V239 = 0x0
0x2be: S[S1] = V238
0x2c0: V240 = 0x20
0x2c2: V241 = ADD 0x20 S2
0x2c5: V242 = 0x1
0x2c7: V243 = ADD 0x1 S1
0x2c9: V244 = 0x2af
0x2cc: JUMP 0x2af
---
Entry stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, S2, S1, V234]
Stack pops: 3
Stack additions: [V241, V243, S0]
Exit stack: [V7, S14, S13, S12, S11, S10, S9, S8, S7, V152, V149, V149, V174, V241, V243, V234]

================================

Block 0x2cd
[0x2cd:0x2ce]
---
Predecessors: [0x26]
Successors: [0x24]
---
0x2cd JUMPDEST
0x2ce JUMP
---
0x2cd: JUMPDEST 
0x2ce: JUMP 0x24
---
Entry stack: [V7, 0x24]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x26
Exit block: 0x24
Body: 0x24, 0x26, 0x41, 0x2cd

Function 1:
Public function signature: 0xb5aebc80
Entry block: 0x4e
Exit block: 0x24
Body: 0x24, 0x4e, 0x134, 0x14d, 0x172, 0x227, 0x235, 0x23e, 0x266, 0x26b

Function 2:
Public fallback function
Entry block: 0x24
Exit block: 0x24
Body: 0x24

Function 3:
Private function
Entry block: 0x285
Exit block: 0x299
Body: 0x190, 0x1a6, 0x20f, 0x21b, 0x21b, 0x21b, 0x285, 0x28e, 0x299, 0x29d, 0x2ac, 0x2af, 0x2b8

