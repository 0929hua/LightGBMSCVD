Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x5d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x3d6a32bd
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x5d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x3d6a32bd
0x1a: V12 = EQ V10 0x3d6a32bd
0x1b: V13 = 0x5d
0x1e: JUMPI 0x5d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x98]
---
0x1f DUP1
0x20 PUSH4 0x5de01497
0x25 EQ
0x26 PUSH2 0x98
0x29 JUMPI
---
0x20: V14 = 0x5de01497
0x25: V15 = EQ 0x5de01497 V10
0x26: V16 = 0x98
0x29: JUMPI 0x98 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xbf]
---
0x2a DUP1
0x2b PUSH4 0x63a9c3d7
0x30 EQ
0x31 PUSH2 0xbf
0x34 JUMPI
---
0x2b: V17 = 0x63a9c3d7
0x30: V18 = EQ 0x63a9c3d7 V10
0x31: V19 = 0xbf
0x34: JUMPI 0xbf V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x120]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x120
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x120
0x3f: JUMPI 0x120 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x149]
---
0x40 DUP1
0x41 PUSH4 0xf2fde38b
0x46 EQ
0x47 PUSH2 0x149
0x4a JUMPI
---
0x41: V23 = 0xf2fde38b
0x46: V24 = EQ 0xf2fde38b V10
0x47: V25 = 0x149
0x4a: JUMPI 0x149 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x50]
---
Predecessors: [0x0, 0x40]
Successors: [0x51]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d PUSH2 0x0
0x50 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = CALLVALUE
0x4d: V27 = 0x0
0x50: THROWI V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51
[0x51:0x53]
---
Predecessors: [0x4b]
Successors: [0x54]
---
0x51 PUSH2 0x5b
---
0x51: V28 = 0x5b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b]
Exit stack: [V10, 0x5b]

================================

Block 0x54
[0x54:0x58]
---
Predecessors: [0x51]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH2 0x0
0x58 JUMP
---
0x54: JUMPDEST 
0x55: V29 = 0x0
0x58: THROW 
---
Entry stack: [V10, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x59 JUMPDEST
0x5a JUMP
---
0x59: JUMPDEST 
0x5a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x6ed]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x62]
---
Predecessors: [0xb]
Successors: [0x63]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f PUSH2 0x0
0x62 JUMPI
---
0x5d: JUMPDEST 
0x5e: V30 = CALLVALUE
0x5f: V31 = 0x0
0x62: THROWI V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x7b]
---
Predecessors: [0x5d]
Successors: [0x15b]
---
0x63 PUSH2 0x7c
0x66 PUSH1 0x4
0x68 CALLDATALOAD
0x69 PUSH1 0x24
0x6b CALLDATALOAD
0x6c PUSH1 0x44
0x6e CALLDATALOAD
0x6f PUSH1 0x64
0x71 CALLDATALOAD
0x72 PUSH1 0x84
0x74 CALLDATALOAD
0x75 PUSH1 0xa4
0x77 CALLDATALOAD
0x78 PUSH2 0x15b
0x7b JUMP
---
0x63: V32 = 0x7c
0x66: V33 = 0x4
0x68: V34 = CALLDATALOAD 0x4
0x69: V35 = 0x24
0x6b: V36 = CALLDATALOAD 0x24
0x6c: V37 = 0x44
0x6e: V38 = CALLDATALOAD 0x44
0x6f: V39 = 0x64
0x71: V40 = CALLDATALOAD 0x64
0x72: V41 = 0x84
0x74: V42 = CALLDATALOAD 0x84
0x75: V43 = 0xa4
0x77: V44 = CALLDATALOAD 0xa4
0x78: V45 = 0x15b
0x7b: JUMP 0x15b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c, V34, V36, V38, V40, V42, V44]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44]

================================

Block 0x7c
[0x7c:0x97]
---
Predecessors: [0x2d9, 0x658]
Successors: []
---
0x7c JUMPDEST
0x7d PUSH1 0x40
0x7f DUP1
0x80 MLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a SWAP3
0x8b AND
0x8c DUP3
0x8d MSTORE
0x8e MLOAD
0x8f SWAP1
0x90 DUP2
0x91 SWAP1
0x92 SUB
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP1
0x97 RETURN
---
0x7c: JUMPDEST 
0x7d: V46 = 0x40
0x80: V47 = M[0x40]
0x81: V48 = 0x1
0x83: V49 = 0xa0
0x85: V50 = 0x2
0x87: V51 = EXP 0x2 0xa0
0x88: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V53 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8d: M[V47] = V53
0x8e: V54 = M[0x40]
0x92: V55 = SUB V47 V54
0x93: V56 = 0x20
0x95: V57 = ADD 0x20 V55
0x97: RETURN V54 V57
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x98
[0x98:0x9d]
---
Predecessors: [0x1f]
Successors: [0x9e]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a PUSH2 0x0
0x9d JUMPI
---
0x98: JUMPDEST 
0x99: V58 = CALLVALUE
0x9a: V59 = 0x0
0x9d: THROWI V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9e
[0x9e:0xaa]
---
Predecessors: [0x98]
Successors: [0x2e3]
---
0x9e PUSH2 0xab
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 PUSH1 0x24
0xa6 CALLDATALOAD
0xa7 PUSH2 0x2e3
0xaa JUMP
---
0x9e: V60 = 0xab
0xa1: V61 = 0x4
0xa3: V62 = CALLDATALOAD 0x4
0xa4: V63 = 0x24
0xa6: V64 = CALLDATALOAD 0x24
0xa7: V65 = 0x2e3
0xaa: JUMP 0x2e3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab, V62, V64]
Exit stack: [V10, 0xab, V62, V64]

================================

Block 0xab
[0xab:0xbe]
---
Predecessors: [0x3c3]
Successors: []
---
0xab JUMPDEST
0xac PUSH1 0x40
0xae DUP1
0xaf MLOAD
0xb0 SWAP2
0xb1 ISZERO
0xb2 ISZERO
0xb3 DUP3
0xb4 MSTORE
0xb5 MLOAD
0xb6 SWAP1
0xb7 DUP2
0xb8 SWAP1
0xb9 SUB
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP1
0xbe RETURN
---
0xab: JUMPDEST 
0xac: V66 = 0x40
0xaf: V67 = M[0x40]
0xb1: V68 = ISZERO V312
0xb2: V69 = ISZERO V68
0xb4: M[V67] = V69
0xb5: V70 = M[0x40]
0xb9: V71 = SUB V67 V70
0xba: V72 = 0x20
0xbc: V73 = ADD 0x20 V71
0xbe: RETURN V70 V73
---
Entry stack: [V10, V312]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xbf
[0xbf:0xc4]
---
Predecessors: [0x2a]
Successors: [0xc5]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 PUSH2 0x0
0xc4 JUMPI
---
0xbf: JUMPDEST 
0xc0: V74 = CALLVALUE
0xc1: V75 = 0x0
0xc4: THROWI V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xce]
---
Predecessors: [0xbf]
Successors: [0x3c9]
---
0xc5 PUSH2 0xcf
0xc8 PUSH1 0x4
0xca CALLDATALOAD
0xcb PUSH2 0x3c9
0xce JUMP
---
0xc5: V76 = 0xcf
0xc8: V77 = 0x4
0xca: V78 = CALLDATALOAD 0x4
0xcb: V79 = 0x3c9
0xce: JUMP 0x3c9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcf, V78]
Exit stack: [V10, 0xcf, V78]

================================

Block 0xcf
[0xcf:0x11f]
---
Predecessors: [0x64c]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 DUP1
0xd3 MLOAD
0xd4 SWAP9
0xd5 ISZERO
0xd6 ISZERO
0xd7 DUP10
0xd8 MSTORE
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 SWAP8
0xe2 DUP9
0xe3 AND
0xe4 PUSH1 0x20
0xe6 DUP11
0xe7 ADD
0xe8 MSTORE
0xe9 SWAP6
0xea SWAP1
0xeb SWAP7
0xec AND
0xed DUP8
0xee DUP7
0xef ADD
0xf0 MSTORE
0xf1 PUSH1 0x60
0xf3 DUP8
0xf4 ADD
0xf5 SWAP4
0xf6 SWAP1
0xf7 SWAP4
0xf8 MSTORE
0xf9 PUSH1 0x80
0xfb DUP7
0xfc ADD
0xfd SWAP2
0xfe SWAP1
0xff SWAP2
0x100 MSTORE
0x101 PUSH1 0xa0
0x103 DUP6
0x104 ADD
0x105 MSTORE
0x106 ISZERO
0x107 ISZERO
0x108 PUSH1 0xc0
0x10a DUP5
0x10b ADD
0x10c MSTORE
0x10d SWAP1
0x10e ISZERO
0x10f ISZERO
0x110 PUSH1 0xe0
0x112 DUP4
0x113 ADD
0x114 MSTORE
0x115 MLOAD
0x116 SWAP1
0x117 DUP2
0x118 SWAP1
0x119 SUB
0x11a PUSH2 0x100
0x11d ADD
0x11e SWAP1
0x11f RETURN
---
0xcf: JUMPDEST 
0xd0: V80 = 0x40
0xd3: V81 = M[0x40]
0xd5: V82 = ISZERO V326
0xd6: V83 = ISZERO V82
0xd8: M[V81] = V83
0xd9: V84 = 0x1
0xdb: V85 = 0xa0
0xdd: V86 = 0x2
0xdf: V87 = EXP 0x2 0xa0
0xe0: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xe4: V90 = 0x20
0xe7: V91 = ADD V81 0x20
0xe8: M[V91] = V89
0xec: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xef: V93 = ADD 0x40 V81
0xf0: M[V93] = V92
0xf1: V94 = 0x60
0xf4: V95 = ADD V81 0x60
0xf8: M[V95] = S4
0xf9: V96 = 0x80
0xfc: V97 = ADD V81 0x80
0x100: M[V97] = S3
0x101: V98 = 0xa0
0x104: V99 = ADD V81 0xa0
0x105: M[V99] = S2
0x106: V100 = ISZERO S1
0x107: V101 = ISZERO V100
0x108: V102 = 0xc0
0x10b: V103 = ADD V81 0xc0
0x10c: M[V103] = V101
0x10e: V104 = ISZERO S0
0x10f: V105 = ISZERO V104
0x110: V106 = 0xe0
0x113: V107 = ADD V81 0xe0
0x114: M[V107] = V105
0x115: V108 = M[0x40]
0x119: V109 = SUB V81 V108
0x11a: V110 = 0x100
0x11d: V111 = ADD 0x100 V109
0x11f: RETURN V108 V111
---
Entry stack: [V10, V326, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x125]
---
Predecessors: [0x35]
Successors: [0x126]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 PUSH2 0x0
0x125 JUMPI
---
0x120: JUMPDEST 
0x121: V112 = CALLVALUE
0x122: V113 = 0x0
0x125: THROWI V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x120]
Successors: [0x658]
---
0x126 PUSH2 0x7c
0x129 PUSH2 0x658
0x12c JUMP
---
0x126: V114 = 0x7c
0x129: V115 = 0x658
0x12c: JUMP 0x658
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7c]
Exit stack: [V10, 0x7c]

================================

Block 0x12d
[0x12d:0x148]
---
Predecessors: []
Successors: []
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 DUP1
0x131 MLOAD
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a SWAP1
0x13b SWAP3
0x13c AND
0x13d DUP3
0x13e MSTORE
0x13f MLOAD
0x140 SWAP1
0x141 DUP2
0x142 SWAP1
0x143 SUB
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP1
0x148 RETURN
---
0x12d: JUMPDEST 
0x12e: V116 = 0x40
0x131: V117 = M[0x40]
0x132: V118 = 0x1
0x134: V119 = 0xa0
0x136: V120 = 0x2
0x138: V121 = EXP 0x2 0xa0
0x139: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c: V123 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13e: M[V117] = V123
0x13f: V124 = M[0x40]
0x143: V125 = SUB V117 V124
0x144: V126 = 0x20
0x146: V127 = ADD 0x20 V125
0x148: RETURN V124 V127
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x149
[0x149:0x14e]
---
Predecessors: [0x40]
Successors: [0x14f]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b PUSH2 0x0
0x14e JUMPI
---
0x149: JUMPDEST 
0x14a: V128 = CALLVALUE
0x14b: V129 = 0x0
0x14e: THROWI V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14f
[0x14f:0x158]
---
Predecessors: [0x149]
Successors: [0x667]
---
0x14f PUSH2 0x5b
0x152 PUSH1 0x4
0x154 CALLDATALOAD
0x155 PUSH2 0x667
0x158 JUMP
---
0x14f: V130 = 0x5b
0x152: V131 = 0x4
0x154: V132 = CALLDATALOAD 0x4
0x155: V133 = 0x667
0x158: JUMP 0x667
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b, V132]
Exit stack: [V10, 0x5b, V132]

================================

Block 0x159
[0x159:0x15a]
---
Predecessors: []
Successors: []
---
0x159 JUMPDEST
0x15a STOP
---
0x159: JUMPDEST 
0x15a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15b
[0x15b:0x167]
---
Predecessors: [0x63]
Successors: [0x168, 0x16e]
---
0x15b JUMPDEST
0x15c PUSH1 0x0
0x15e PUSH1 0x0
0x160 DUP7
0x161 GT
0x162 ISZERO
0x163 DUP1
0x164 PUSH2 0x16e
0x167 JUMPI
---
0x15b: JUMPDEST 
0x15c: V134 = 0x0
0x15e: V135 = 0x0
0x161: V136 = GT V36 0x0
0x162: V137 = ISZERO V136
0x164: V138 = 0x16e
0x167: JUMPI 0x16e V137
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, V137]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V137]

================================

Block 0x168
[0x168:0x16d]
---
Predecessors: [0x15b]
Successors: [0x16e]
---
0x168 POP
0x169 PUSH1 0x0
0x16b DUP6
0x16c GT
0x16d ISZERO
---
0x169: V139 = 0x0
0x16c: V140 = GT V38 0x0
0x16d: V141 = ISZERO V140
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V137]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V141]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V141]

================================

Block 0x16e
[0x16e:0x173]
---
Predecessors: [0x15b, 0x168]
Successors: [0x174, 0x178]
---
0x16e JUMPDEST
0x16f ISZERO
0x170 PUSH2 0x178
0x173 JUMPI
---
0x16e: JUMPDEST 
0x16f: V142 = ISZERO S0
0x170: V143 = 0x178
0x173: JUMPI 0x178 V142
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x174
[0x174:0x177]
---
Predecessors: [0x16e]
Successors: []
---
0x174 PUSH2 0x0
0x177 JUMP
---
0x174: V144 = 0x0
0x177: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x178
[0x178:0x17f]
---
Predecessors: [0x16e]
Successors: [0x180, 0x184]
---
0x178 JUMPDEST
0x179 DUP5
0x17a DUP7
0x17b LT
0x17c PUSH2 0x184
0x17f JUMPI
---
0x178: JUMPDEST 
0x17b: V145 = LT V36 V38
0x17c: V146 = 0x184
0x17f: JUMPI 0x184 V145
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x178]
Successors: []
---
0x180 PUSH2 0x0
0x183 JUMP
---
0x180: V147 = 0x0
0x183: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x184
[0x184:0x18c]
---
Predecessors: [0x178]
Successors: [0x18d, 0x191]
---
0x184 JUMPDEST
0x185 PUSH1 0x0
0x187 DUP5
0x188 GT
0x189 PUSH2 0x191
0x18c JUMPI
---
0x184: JUMPDEST 
0x185: V148 = 0x0
0x188: V149 = GT V40 0x0
0x189: V150 = 0x191
0x18c: JUMPI 0x191 V149
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x184]
Successors: []
---
0x18d PUSH2 0x0
0x190 JUMP
---
0x18d: V151 = 0x0
0x190: THROW 
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]

================================

Block 0x191
[0x191:0x1ee]
---
Predecessors: [0x184]
Successors: [0x1ef]
---
0x191 JUMPDEST
0x192 DUP7
0x193 DUP7
0x194 DUP7
0x195 DUP7
0x196 DUP7
0x197 DUP7
0x198 PUSH1 0x40
0x19a MLOAD
0x19b PUSH2 0xb50
0x19e DUP1
0x19f PUSH2 0x6f0
0x1a2 DUP4
0x1a3 CODECOPY
0x1a4 ADD
0x1a5 DUP1
0x1a6 DUP8
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af AND
0x1b0 DUP2
0x1b1 MSTORE
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 DUP7
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb DUP6
0x1bc DUP2
0x1bd MSTORE
0x1be PUSH1 0x20
0x1c0 ADD
0x1c1 DUP5
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 DUP4
0x1c8 ISZERO
0x1c9 ISZERO
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf DUP3
0x1d0 ISZERO
0x1d1 ISZERO
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP7
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db POP
0x1dc POP
0x1dd POP
0x1de POP
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 SWAP2
0x1e4 SUB
0x1e5 SWAP1
0x1e6 PUSH1 0x0
0x1e8 CREATE
0x1e9 DUP1
0x1ea ISZERO
0x1eb PUSH2 0x0
0x1ee JUMPI
---
0x191: JUMPDEST 
0x198: V152 = 0x40
0x19a: V153 = M[0x40]
0x19b: V154 = 0xb50
0x19f: V155 = 0x6f0
0x1a3: CODECOPY V153 0x6f0 0xb50
0x1a4: V156 = ADD 0xb50 V153
0x1a7: V157 = 0x1
0x1a9: V158 = 0xa0
0x1ab: V159 = 0x2
0x1ad: V160 = EXP 0x2 0xa0
0x1ae: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x1b1: M[V156] = V162
0x1b2: V163 = 0x20
0x1b4: V164 = ADD 0x20 V156
0x1b7: M[V164] = V36
0x1b8: V165 = 0x20
0x1ba: V166 = ADD 0x20 V164
0x1bd: M[V166] = V38
0x1be: V167 = 0x20
0x1c0: V168 = ADD 0x20 V166
0x1c3: M[V168] = V40
0x1c4: V169 = 0x20
0x1c6: V170 = ADD 0x20 V168
0x1c8: V171 = ISZERO V42
0x1c9: V172 = ISZERO V171
0x1cb: M[V170] = V172
0x1cc: V173 = 0x20
0x1ce: V174 = ADD 0x20 V170
0x1d0: V175 = ISZERO V44
0x1d1: V176 = ISZERO V175
0x1d3: M[V174] = V176
0x1d4: V177 = 0x20
0x1d6: V178 = ADD 0x20 V174
0x1df: V179 = 0x40
0x1e1: V180 = M[0x40]
0x1e4: V181 = SUB V178 V180
0x1e6: V182 = 0x0
0x1e8: V183 = CREATE 0x0 V180 V181
0x1ea: V184 = ISZERO V183
0x1eb: V185 = 0x0
0x1ee: THROWI V184
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V183]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V183]

================================

Block 0x1ef
[0x1ef:0x266]
---
Predecessors: [0x191]
Successors: [0x267]
---
0x1ef PUSH1 0x1
0x1f1 PUSH1 0xa0
0x1f3 PUSH1 0x2
0x1f5 EXP
0x1f6 SUB
0x1f7 DUP1
0x1f8 DUP3
0x1f9 AND
0x1fa PUSH1 0x0
0x1fc DUP2
0x1fd DUP2
0x1fe MSTORE
0x1ff PUSH1 0x1
0x201 PUSH1 0x20
0x203 DUP2
0x204 SWAP1
0x205 MSTORE
0x206 PUSH1 0x40
0x208 DUP1
0x209 DUP4
0x20a SHA3
0x20b DUP1
0x20c SLOAD
0x20d PUSH1 0xff
0x20f NOT
0x210 AND
0x211 SWAP1
0x212 SWAP3
0x213 OR
0x214 SWAP1
0x215 SWAP2
0x216 SSTORE
0x217 DUP1
0x218 MLOAD
0x219 PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x23a DUP2
0x23b MSTORE
0x23c CALLER
0x23d SWAP1
0x23e SWAP5
0x23f AND
0x240 PUSH1 0x4
0x242 DUP6
0x243 ADD
0x244 MSTORE
0x245 MLOAD
0x246 SWAP4
0x247 SWAP5
0x248 POP
0x249 SWAP1
0x24a SWAP3
0x24b PUSH4 0xf2fde38b
0x250 SWAP3
0x251 PUSH1 0x24
0x253 DUP1
0x254 DUP3
0x255 ADD
0x256 SWAP4
0x257 SWAP3
0x258 SWAP2
0x259 DUP3
0x25a SWAP1
0x25b SUB
0x25c ADD
0x25d DUP2
0x25e DUP4
0x25f DUP8
0x260 DUP1
0x261 EXTCODESIZE
0x262 ISZERO
0x263 PUSH2 0x0
0x266 JUMPI
---
0x1ef: V186 = 0x1
0x1f1: V187 = 0xa0
0x1f3: V188 = 0x2
0x1f5: V189 = EXP 0x2 0xa0
0x1f6: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V191 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V192 = 0x0
0x1fe: M[0x0] = V191
0x1ff: V193 = 0x1
0x201: V194 = 0x20
0x205: M[0x20] = 0x1
0x206: V195 = 0x40
0x20a: V196 = SHA3 0x0 0x40
0x20c: V197 = S[V196]
0x20d: V198 = 0xff
0x20f: V199 = NOT 0xff
0x210: V200 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V197
0x213: V201 = OR 0x1 V200
0x216: S[V196] = V201
0x218: V202 = M[0x40]
0x219: V203 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x23b: M[V202] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x23c: V204 = CALLER
0x23f: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x240: V206 = 0x4
0x243: V207 = ADD V202 0x4
0x244: M[V207] = V205
0x245: V208 = M[0x40]
0x24b: V209 = 0xf2fde38b
0x251: V210 = 0x24
0x255: V211 = ADD V202 0x24
0x25b: V212 = SUB V202 V208
0x25c: V213 = ADD V212 0x24
0x261: V214 = EXTCODESIZE V191
0x262: V215 = ISZERO V214
0x263: V216 = 0x0
0x266: THROWI V215
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, 0x0, V183]
Stack pops: 2
Stack additions: [S0, V191, 0xf2fde38b, V211, 0x0, V208, V213, V208, 0x0, V191]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V183, V191, 0xf2fde38b, V211, 0x0, V208, V213, V208, 0x0, V191]

================================

Block 0x267
[0x267:0x270]
---
Predecessors: [0x1ef]
Successors: [0x271]
---
0x267 PUSH1 0x32
0x269 GAS
0x26a SUB
0x26b CALL
0x26c ISZERO
0x26d PUSH2 0x0
0x270 JUMPI
---
0x267: V217 = 0x32
0x269: V218 = GAS
0x26a: V219 = SUB V218 0x32
0x26b: V220 = CALL V219 V191 0x0 V208 V213 V208 0x0
0x26c: V221 = ISZERO V220
0x26d: V222 = 0x0
0x270: THROWI V221
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V183, V191, 0xf2fde38b, V211, 0x0, V208, V213, V208, 0x0, V191]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V183, V191, 0xf2fde38b, V211]

================================

Block 0x271
[0x271:0x2d8]
---
Predecessors: [0x267]
Successors: [0x2d9]
---
0x271 POP
0x272 POP
0x273 PUSH1 0x40
0x275 DUP1
0x276 MLOAD
0x277 DUP9
0x278 DUP2
0x279 MSTORE
0x27a PUSH1 0x20
0x27c DUP2
0x27d ADD
0x27e DUP9
0x27f SWAP1
0x280 MSTORE
0x281 DUP1
0x282 DUP3
0x283 ADD
0x284 DUP8
0x285 SWAP1
0x286 MSTORE
0x287 DUP6
0x288 ISZERO
0x289 ISZERO
0x28a PUSH1 0x60
0x28c DUP3
0x28d ADD
0x28e MSTORE
0x28f DUP5
0x290 ISZERO
0x291 ISZERO
0x292 PUSH1 0x80
0x294 DUP3
0x295 ADD
0x296 MSTORE
0x297 SWAP1
0x298 MLOAD
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 DUP1
0x2a2 DUP12
0x2a3 AND
0x2a4 SWAP4
0x2a5 POP
0x2a6 DUP5
0x2a7 DUP2
0x2a8 AND
0x2a9 SWAP3
0x2aa CALLER
0x2ab SWAP1
0x2ac SWAP2
0x2ad AND
0x2ae SWAP2
0x2af PUSH32 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d
0x2d0 SWAP2
0x2d1 DUP2
0x2d2 SWAP1
0x2d3 SUB
0x2d4 PUSH1 0xa0
0x2d6 ADD
0x2d7 SWAP1
0x2d8 LOG4
---
0x273: V223 = 0x40
0x276: V224 = M[0x40]
0x279: M[V224] = V36
0x27a: V225 = 0x20
0x27d: V226 = ADD V224 0x20
0x280: M[V226] = V38
0x283: V227 = ADD 0x40 V224
0x286: M[V227] = V40
0x288: V228 = ISZERO V42
0x289: V229 = ISZERO V228
0x28a: V230 = 0x60
0x28d: V231 = ADD V224 0x60
0x28e: M[V231] = V229
0x290: V232 = ISZERO V44
0x291: V233 = ISZERO V232
0x292: V234 = 0x80
0x295: V235 = ADD V224 0x80
0x296: M[V235] = V233
0x298: V236 = M[0x40]
0x299: V237 = 0x1
0x29b: V238 = 0xa0
0x29d: V239 = 0x2
0x29f: V240 = EXP 0x2 0xa0
0x2a0: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V242 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x2aa: V244 = CALLER
0x2ad: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x2af: V246 = 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d
0x2d3: V247 = SUB V224 V236
0x2d4: V248 = 0xa0
0x2d6: V249 = ADD 0xa0 V247
0x2d8: LOG V236 V249 0x65ff0f5aef2091ad3616436792adf51be3068c631b081ac0f30f77e3a0e6502d V245 V243 V242
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V183, V191, 0xf2fde38b, V211]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V183]

================================

Block 0x2d9
[0x2d9:0x2e2]
---
Predecessors: [0x271]
Successors: [0x7c]
---
0x2d9 JUMPDEST
0x2da SWAP7
0x2db SWAP6
0x2dc POP
0x2dd POP
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 JUMP
---
0x2d9: JUMPDEST 
0x2e2: JUMP 0x7c
---
Entry stack: [V10, 0x7c, V34, V36, V38, V40, V42, V44, V183]
Stack pops: 8
Stack additions: [S0]
Exit stack: [V10, V183]

================================

Block 0x2e3
[0x2e3:0x2fa]
---
Predecessors: [0x9e]
Successors: [0x2fb, 0x2ff]
---
0x2e3 JUMPDEST
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 SLOAD
0x2e8 CALLER
0x2e9 PUSH1 0x1
0x2eb PUSH1 0xa0
0x2ed PUSH1 0x2
0x2ef EXP
0x2f0 SUB
0x2f1 SWAP1
0x2f2 DUP2
0x2f3 AND
0x2f4 SWAP2
0x2f5 AND
0x2f6 EQ
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V250 = 0x0
0x2e7: V251 = S[0x0]
0x2e8: V252 = CALLER
0x2e9: V253 = 0x1
0x2eb: V254 = 0xa0
0x2ed: V255 = 0x2
0x2ef: V256 = EXP 0x2 0xa0
0x2f0: V257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x2f5: V259 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V260 = EQ V259 V258
0x2f7: V261 = 0x2ff
0x2fa: JUMPI 0x2ff V260
---
Entry stack: [V10, 0xab, V62, V64]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xab, V62, V64, 0x0]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2e3]
Successors: []
---
0x2fb PUSH2 0x0
0x2fe JUMP
---
0x2fb: V262 = 0x0
0x2fe: THROW 
---
Entry stack: [V10, 0xab, V62, V64, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, 0x0]

================================

Block 0x2ff
[0x2ff:0x3ae]
---
Predecessors: [0x2e3]
Successors: [0x3af]
---
0x2ff JUMPDEST
0x300 PUSH1 0x40
0x302 DUP1
0x303 MLOAD
0x304 DUP4
0x305 DUP2
0x306 MSTORE
0x307 SWAP1
0x308 MLOAD
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 DUP6
0x312 AND
0x313 SWAP2
0x314 PUSH32 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x335 SWAP2
0x336 SWAP1
0x337 DUP2
0x338 SWAP1
0x339 SUB
0x33a PUSH1 0x20
0x33c ADD
0x33d SWAP1
0x33e LOG2
0x33f PUSH1 0x0
0x341 DUP1
0x342 SLOAD
0x343 PUSH1 0x40
0x345 DUP1
0x346 MLOAD
0x347 PUSH1 0x20
0x349 SWAP1
0x34a DUP2
0x34b ADD
0x34c DUP5
0x34d SWAP1
0x34e MSTORE
0x34f DUP2
0x350 MLOAD
0x351 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x372 DUP2
0x373 MSTORE
0x374 PUSH1 0x1
0x376 PUSH1 0xa0
0x378 PUSH1 0x2
0x37a EXP
0x37b SUB
0x37c SWAP4
0x37d DUP5
0x37e AND
0x37f PUSH1 0x4
0x381 DUP3
0x382 ADD
0x383 MSTORE
0x384 PUSH1 0x24
0x386 DUP2
0x387 ADD
0x388 DUP8
0x389 SWAP1
0x38a MSTORE
0x38b SWAP2
0x38c MLOAD
0x38d SWAP3
0x38e DUP8
0x38f AND
0x390 SWAP4
0x391 PUSH4 0xa9059cbb
0x396 SWAP4
0x397 PUSH1 0x44
0x399 DUP1
0x39a DUP6
0x39b ADD
0x39c SWAP5
0x39d SWAP2
0x39e SWAP3
0x39f SWAP2
0x3a0 DUP4
0x3a1 SWAP1
0x3a2 SUB
0x3a3 ADD
0x3a4 SWAP1
0x3a5 DUP3
0x3a6 SWAP1
0x3a7 DUP8
0x3a8 DUP1
0x3a9 EXTCODESIZE
0x3aa ISZERO
0x3ab PUSH2 0x0
0x3ae JUMPI
---
0x2ff: JUMPDEST 
0x300: V263 = 0x40
0x303: V264 = M[0x40]
0x306: M[V264] = V64
0x308: V265 = M[0x40]
0x309: V266 = 0x1
0x30b: V267 = 0xa0
0x30d: V268 = 0x2
0x30f: V269 = EXP 0x2 0xa0
0x310: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x312: V271 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x314: V272 = 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x339: V273 = SUB V264 V265
0x33a: V274 = 0x20
0x33c: V275 = ADD 0x20 V273
0x33e: LOG V265 V275 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba V271
0x33f: V276 = 0x0
0x342: V277 = S[0x0]
0x343: V278 = 0x40
0x346: V279 = M[0x40]
0x347: V280 = 0x20
0x34b: V281 = ADD 0x20 V279
0x34e: M[V281] = 0x0
0x350: V282 = M[0x40]
0x351: V283 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x373: M[V282] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x374: V284 = 0x1
0x376: V285 = 0xa0
0x378: V286 = 0x2
0x37a: V287 = EXP 0x2 0xa0
0x37b: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37e: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x37f: V290 = 0x4
0x382: V291 = ADD V282 0x4
0x383: M[V291] = V289
0x384: V292 = 0x24
0x387: V293 = ADD V282 0x24
0x38a: M[V293] = V64
0x38c: V294 = M[0x40]
0x38f: V295 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x391: V296 = 0xa9059cbb
0x397: V297 = 0x44
0x39b: V298 = ADD V282 0x44
0x3a2: V299 = SUB V282 V294
0x3a3: V300 = ADD V299 0x44
0x3a9: V301 = EXTCODESIZE V295
0x3aa: V302 = ISZERO V301
0x3ab: V303 = 0x0
0x3ae: THROWI V302
---
Entry stack: [V10, 0xab, V62, V64, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V295, 0xa9059cbb, V298, 0x20, V294, V300, V294, 0x0, V295]
Exit stack: [V10, 0xab, V62, V64, 0x0, V295, 0xa9059cbb, V298, 0x20, V294, V300, V294, 0x0, V295]

================================

Block 0x3af
[0x3af:0x3b8]
---
Predecessors: [0x2ff]
Successors: [0x3b9]
---
0x3af PUSH1 0x32
0x3b1 GAS
0x3b2 SUB
0x3b3 CALL
0x3b4 ISZERO
0x3b5 PUSH2 0x0
0x3b8 JUMPI
---
0x3af: V304 = 0x32
0x3b1: V305 = GAS
0x3b2: V306 = SUB V305 0x32
0x3b3: V307 = CALL V306 V295 0x0 V294 V300 V294 0x20
0x3b4: V308 = ISZERO V307
0x3b5: V309 = 0x0
0x3b8: THROWI V308
---
Entry stack: [V10, 0xab, V62, V64, 0x0, V295, 0xa9059cbb, V298, 0x20, V294, V300, V294, 0x0, V295]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, 0x0, V295, 0xa9059cbb, V298]

================================

Block 0x3b9
[0x3b9:0x3c1]
---
Predecessors: [0x3af]
Successors: [0x3c2]
---
0x3b9 POP
0x3ba POP
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be MLOAD
0x3bf SWAP2
0x3c0 POP
0x3c1 POP
---
0x3bb: V310 = 0x40
0x3bd: V311 = M[0x40]
0x3be: V312 = M[V311]
---
Entry stack: [V10, 0xab, V62, V64, 0x0, V295, 0xa9059cbb, V298]
Stack pops: 4
Stack additions: [V312]
Exit stack: [V10, 0xab, V62, V64, V312]

================================

Block 0x3c2
[0x3c2:0x3c2]
---
Predecessors: [0x3b9]
Successors: [0x3c3]
---
0x3c2 JUMPDEST
---
0x3c2: JUMPDEST 
---
Entry stack: [V10, 0xab, V62, V64, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V62, V64, V312]

================================

Block 0x3c3
[0x3c3:0x3c8]
---
Predecessors: [0x3c2]
Successors: [0xab]
---
0x3c3 JUMPDEST
0x3c4 SWAP3
0x3c5 SWAP2
0x3c6 POP
0x3c7 POP
0x3c8 JUMP
---
0x3c3: JUMPDEST 
0x3c8: JUMP 0xab
---
Entry stack: [V10, 0xab, V62, V64, V312]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V312]

================================

Block 0x3c9
[0x3c9:0x3f3]
---
Predecessors: [0xc5]
Successors: [0x3f4, 0x64b]
---
0x3c9 JUMPDEST
0x3ca PUSH1 0x1
0x3cc PUSH1 0xa0
0x3ce PUSH1 0x2
0x3d0 EXP
0x3d1 SUB
0x3d2 DUP2
0x3d3 AND
0x3d4 PUSH1 0x0
0x3d6 SWAP1
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x1
0x3db PUSH1 0x20
0x3dd MSTORE
0x3de PUSH1 0x40
0x3e0 DUP2
0x3e1 SHA3
0x3e2 SLOAD
0x3e3 PUSH1 0xff
0x3e5 AND
0x3e6 SWAP1
0x3e7 DUP1
0x3e8 DUP1
0x3e9 DUP1
0x3ea DUP1
0x3eb DUP1
0x3ec DUP1
0x3ed DUP1
0x3ee DUP9
0x3ef ISZERO
0x3f0 PUSH2 0x64b
0x3f3 JUMPI
---
0x3c9: JUMPDEST 
0x3ca: V313 = 0x1
0x3cc: V314 = 0xa0
0x3ce: V315 = 0x2
0x3d0: V316 = EXP 0x2 0xa0
0x3d1: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V318 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V319 = 0x0
0x3d8: M[0x0] = V318
0x3d9: V320 = 0x1
0x3db: V321 = 0x20
0x3dd: M[0x20] = 0x1
0x3de: V322 = 0x40
0x3e1: V323 = SHA3 0x0 0x40
0x3e2: V324 = S[V323]
0x3e3: V325 = 0xff
0x3e5: V326 = AND 0xff V324
0x3ef: V327 = ISZERO V326
0x3f0: V328 = 0x64b
0x3f3: JUMPI 0x64b V327
---
Entry stack: [V10, 0xcf, V78]
Stack pops: 1
Stack additions: [S0, V326, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0xcf, V78, V326, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x3f4
[0x3f4:0x433]
---
Predecessors: [0x3c9]
Successors: [0x434]
---
0x3f4 DUP10
0x3f5 SWAP1
0x3f6 POP
0x3f7 DUP1
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 AND
0x401 PUSH4 0x8da5cb5b
0x406 PUSH1 0x0
0x408 PUSH1 0x40
0x40a MLOAD
0x40b PUSH1 0x20
0x40d ADD
0x40e MSTORE
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP2
0x413 PUSH1 0xe0
0x415 PUSH1 0x2
0x417 EXP
0x418 MUL
0x419 DUP2
0x41a MSTORE
0x41b PUSH1 0x4
0x41d ADD
0x41e DUP1
0x41f SWAP1
0x420 POP
0x421 PUSH1 0x20
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 DUP4
0x428 SUB
0x429 DUP2
0x42a PUSH1 0x0
0x42c DUP8
0x42d DUP1
0x42e EXTCODESIZE
0x42f ISZERO
0x430 PUSH2 0x0
0x433 JUMPI
---
0x3f8: V329 = 0x1
0x3fa: V330 = 0xa0
0x3fc: V331 = 0x2
0x3fe: V332 = EXP 0x2 0xa0
0x3ff: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x401: V335 = 0x8da5cb5b
0x406: V336 = 0x0
0x408: V337 = 0x40
0x40a: V338 = M[0x40]
0x40b: V339 = 0x20
0x40d: V340 = ADD 0x20 V338
0x40e: M[V340] = 0x0
0x40f: V341 = 0x40
0x411: V342 = M[0x40]
0x413: V343 = 0xe0
0x415: V344 = 0x2
0x417: V345 = EXP 0x2 0xe0
0x418: V346 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x41a: M[V342] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x41b: V347 = 0x4
0x41d: V348 = ADD 0x4 V342
0x421: V349 = 0x20
0x423: V350 = 0x40
0x425: V351 = M[0x40]
0x428: V352 = SUB V348 V351
0x42a: V353 = 0x0
0x42e: V354 = EXTCODESIZE V334
0x42f: V355 = ISZERO V354
0x430: V356 = 0x0
0x433: THROWI V355
---
Entry stack: [V10, 0xcf, V78, V326, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S9, V334, 0x8da5cb5b, V348, 0x20, V351, V352, V351, 0x0, V334]
Exit stack: [V10, 0xcf, V78, V326, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V334, 0x8da5cb5b, V348, 0x20, V351, V352, V351, 0x0, V334]

================================

Block 0x434
[0x434:0x43d]
---
Predecessors: [0x3f4]
Successors: [0x43e]
---
0x434 PUSH1 0x32
0x436 GAS
0x437 SUB
0x438 CALL
0x439 ISZERO
0x43a PUSH2 0x0
0x43d JUMPI
---
0x434: V357 = 0x32
0x436: V358 = GAS
0x437: V359 = SUB V358 0x32
0x438: V360 = CALL V359 V334 0x0 V351 V352 V351 0x20
0x439: V361 = ISZERO V360
0x43a: V362 = 0x0
0x43d: THROWI V361
---
Entry stack: [V10, 0xcf, V78, V326, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V334, 0x8da5cb5b, V348, 0x20, V351, V352, V351, 0x0, V334]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V334, 0x8da5cb5b, V348]

================================

Block 0x43e
[0x43e:0x489]
---
Predecessors: [0x434]
Successors: [0x48a]
---
0x43e POP
0x43f POP
0x440 POP
0x441 PUSH1 0x40
0x443 MLOAD
0x444 DUP1
0x445 MLOAD
0x446 SWAP1
0x447 PUSH1 0x20
0x449 ADD
0x44a POP
0x44b SWAP8
0x44c POP
0x44d DUP1
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 AND
0x457 PUSH4 0x38d52e0f
0x45c PUSH1 0x0
0x45e PUSH1 0x40
0x460 MLOAD
0x461 PUSH1 0x20
0x463 ADD
0x464 MSTORE
0x465 PUSH1 0x40
0x467 MLOAD
0x468 DUP2
0x469 PUSH1 0xe0
0x46b PUSH1 0x2
0x46d EXP
0x46e MUL
0x46f DUP2
0x470 MSTORE
0x471 PUSH1 0x4
0x473 ADD
0x474 DUP1
0x475 SWAP1
0x476 POP
0x477 PUSH1 0x20
0x479 PUSH1 0x40
0x47b MLOAD
0x47c DUP1
0x47d DUP4
0x47e SUB
0x47f DUP2
0x480 PUSH1 0x0
0x482 DUP8
0x483 DUP1
0x484 EXTCODESIZE
0x485 ISZERO
0x486 PUSH2 0x0
0x489 JUMPI
---
0x441: V363 = 0x40
0x443: V364 = M[0x40]
0x445: V365 = M[V364]
0x447: V366 = 0x20
0x449: V367 = ADD 0x20 V364
0x44e: V368 = 0x1
0x450: V369 = 0xa0
0x452: V370 = 0x2
0x454: V371 = EXP 0x2 0xa0
0x455: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x457: V374 = 0x38d52e0f
0x45c: V375 = 0x0
0x45e: V376 = 0x40
0x460: V377 = M[0x40]
0x461: V378 = 0x20
0x463: V379 = ADD 0x20 V377
0x464: M[V379] = 0x0
0x465: V380 = 0x40
0x467: V381 = M[0x40]
0x469: V382 = 0xe0
0x46b: V383 = 0x2
0x46d: V384 = EXP 0x2 0xe0
0x46e: V385 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x470: M[V381] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x471: V386 = 0x4
0x473: V387 = ADD 0x4 V381
0x477: V388 = 0x20
0x479: V389 = 0x40
0x47b: V390 = M[0x40]
0x47e: V391 = SUB V387 V390
0x480: V392 = 0x0
0x484: V393 = EXTCODESIZE V373
0x485: V394 = ISZERO V393
0x486: V395 = 0x0
0x489: THROWI V394
---
Entry stack: [V10, 0xcf, V78, V326, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V334, 0x8da5cb5b, V348]
Stack pops: 11
Stack additions: [V365, S9, S8, S7, S6, S5, S4, S3, V373, 0x38d52e0f, V387, 0x20, V390, V391, V390, 0x0, V373]
Exit stack: [V10, 0xcf, V78, V326, V365, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V373, 0x38d52e0f, V387, 0x20, V390, V391, V390, 0x0, V373]

================================

Block 0x48a
[0x48a:0x493]
---
Predecessors: [0x43e]
Successors: [0x494]
---
0x48a PUSH1 0x32
0x48c GAS
0x48d SUB
0x48e CALL
0x48f ISZERO
0x490 PUSH2 0x0
0x493 JUMPI
---
0x48a: V396 = 0x32
0x48c: V397 = GAS
0x48d: V398 = SUB V397 0x32
0x48e: V399 = CALL V398 V373 0x0 V390 V391 V390 0x20
0x48f: V400 = ISZERO V399
0x490: V401 = 0x0
0x493: THROWI V400
---
Entry stack: [V10, 0xcf, V78, V326, V365, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V373, 0x38d52e0f, V387, 0x20, V390, V391, V390, 0x0, V373]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, V365, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V373, 0x38d52e0f, V387]

================================

Block 0x494
[0x494:0x4df]
---
Predecessors: [0x48a]
Successors: [0x4e0]
---
0x494 POP
0x495 POP
0x496 POP
0x497 PUSH1 0x40
0x499 MLOAD
0x49a DUP1
0x49b MLOAD
0x49c SWAP1
0x49d PUSH1 0x20
0x49f ADD
0x4a0 POP
0x4a1 SWAP7
0x4a2 POP
0x4a3 DUP1
0x4a4 PUSH1 0x1
0x4a6 PUSH1 0xa0
0x4a8 PUSH1 0x2
0x4aa EXP
0x4ab SUB
0x4ac AND
0x4ad PUSH4 0x8620410b
0x4b2 PUSH1 0x0
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 PUSH1 0x20
0x4b9 ADD
0x4ba MSTORE
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be DUP2
0x4bf PUSH1 0xe0
0x4c1 PUSH1 0x2
0x4c3 EXP
0x4c4 MUL
0x4c5 DUP2
0x4c6 MSTORE
0x4c7 PUSH1 0x4
0x4c9 ADD
0x4ca DUP1
0x4cb SWAP1
0x4cc POP
0x4cd PUSH1 0x20
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 DUP1
0x4d3 DUP4
0x4d4 SUB
0x4d5 DUP2
0x4d6 PUSH1 0x0
0x4d8 DUP8
0x4d9 DUP1
0x4da EXTCODESIZE
0x4db ISZERO
0x4dc PUSH2 0x0
0x4df JUMPI
---
0x497: V402 = 0x40
0x499: V403 = M[0x40]
0x49b: V404 = M[V403]
0x49d: V405 = 0x20
0x49f: V406 = ADD 0x20 V403
0x4a4: V407 = 0x1
0x4a6: V408 = 0xa0
0x4a8: V409 = 0x2
0x4aa: V410 = EXP 0x2 0xa0
0x4ab: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ac: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x4ad: V413 = 0x8620410b
0x4b2: V414 = 0x0
0x4b4: V415 = 0x40
0x4b6: V416 = M[0x40]
0x4b7: V417 = 0x20
0x4b9: V418 = ADD 0x20 V416
0x4ba: M[V418] = 0x0
0x4bb: V419 = 0x40
0x4bd: V420 = M[0x40]
0x4bf: V421 = 0xe0
0x4c1: V422 = 0x2
0x4c3: V423 = EXP 0x2 0xe0
0x4c4: V424 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8620410b
0x4c6: M[V420] = 0x8620410b00000000000000000000000000000000000000000000000000000000
0x4c7: V425 = 0x4
0x4c9: V426 = ADD 0x4 V420
0x4cd: V427 = 0x20
0x4cf: V428 = 0x40
0x4d1: V429 = M[0x40]
0x4d4: V430 = SUB V426 V429
0x4d6: V431 = 0x0
0x4da: V432 = EXTCODESIZE V412
0x4db: V433 = ISZERO V432
0x4dc: V434 = 0x0
0x4df: THROWI V433
---
Entry stack: [V10, 0xcf, V78, V326, V365, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V373, 0x38d52e0f, V387]
Stack pops: 10
Stack additions: [V404, S8, S7, S6, S5, S4, S3, V412, 0x8620410b, V426, 0x20, V429, V430, V429, 0x0, V412]
Exit stack: [V10, 0xcf, V78, V326, V365, V404, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V412, 0x8620410b, V426, 0x20, V429, V430, V429, 0x0, V412]

================================

Block 0x4e0
[0x4e0:0x4e9]
---
Predecessors: [0x494]
Successors: [0x4ea]
---
0x4e0 PUSH1 0x32
0x4e2 GAS
0x4e3 SUB
0x4e4 CALL
0x4e5 ISZERO
0x4e6 PUSH2 0x0
0x4e9 JUMPI
---
0x4e0: V435 = 0x32
0x4e2: V436 = GAS
0x4e3: V437 = SUB V436 0x32
0x4e4: V438 = CALL V437 V412 0x0 V429 V430 V429 0x20
0x4e5: V439 = ISZERO V438
0x4e6: V440 = 0x0
0x4e9: THROWI V439
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V412, 0x8620410b, V426, 0x20, V429, V430, V429, 0x0, V412]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, V365, V404, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V412, 0x8620410b, V426]

================================

Block 0x4ea
[0x4ea:0x535]
---
Predecessors: [0x4e0]
Successors: [0x536]
---
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed PUSH1 0x40
0x4ef MLOAD
0x4f0 DUP1
0x4f1 MLOAD
0x4f2 SWAP1
0x4f3 PUSH1 0x20
0x4f5 ADD
0x4f6 POP
0x4f7 SWAP6
0x4f8 POP
0x4f9 DUP1
0x4fa PUSH1 0x1
0x4fc PUSH1 0xa0
0x4fe PUSH1 0x2
0x500 EXP
0x501 SUB
0x502 AND
0x503 PUSH4 0x4b750334
0x508 PUSH1 0x0
0x50a PUSH1 0x40
0x50c MLOAD
0x50d PUSH1 0x20
0x50f ADD
0x510 MSTORE
0x511 PUSH1 0x40
0x513 MLOAD
0x514 DUP2
0x515 PUSH1 0xe0
0x517 PUSH1 0x2
0x519 EXP
0x51a MUL
0x51b DUP2
0x51c MSTORE
0x51d PUSH1 0x4
0x51f ADD
0x520 DUP1
0x521 SWAP1
0x522 POP
0x523 PUSH1 0x20
0x525 PUSH1 0x40
0x527 MLOAD
0x528 DUP1
0x529 DUP4
0x52a SUB
0x52b DUP2
0x52c PUSH1 0x0
0x52e DUP8
0x52f DUP1
0x530 EXTCODESIZE
0x531 ISZERO
0x532 PUSH2 0x0
0x535 JUMPI
---
0x4ed: V441 = 0x40
0x4ef: V442 = M[0x40]
0x4f1: V443 = M[V442]
0x4f3: V444 = 0x20
0x4f5: V445 = ADD 0x20 V442
0x4fa: V446 = 0x1
0x4fc: V447 = 0xa0
0x4fe: V448 = 0x2
0x500: V449 = EXP 0x2 0xa0
0x501: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x502: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x503: V452 = 0x4b750334
0x508: V453 = 0x0
0x50a: V454 = 0x40
0x50c: V455 = M[0x40]
0x50d: V456 = 0x20
0x50f: V457 = ADD 0x20 V455
0x510: M[V457] = 0x0
0x511: V458 = 0x40
0x513: V459 = M[0x40]
0x515: V460 = 0xe0
0x517: V461 = 0x2
0x519: V462 = EXP 0x2 0xe0
0x51a: V463 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4b750334
0x51c: M[V459] = 0x4b75033400000000000000000000000000000000000000000000000000000000
0x51d: V464 = 0x4
0x51f: V465 = ADD 0x4 V459
0x523: V466 = 0x20
0x525: V467 = 0x40
0x527: V468 = M[0x40]
0x52a: V469 = SUB V465 V468
0x52c: V470 = 0x0
0x530: V471 = EXTCODESIZE V451
0x531: V472 = ISZERO V471
0x532: V473 = 0x0
0x535: THROWI V472
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, 0x0, 0x0, 0x0, 0x0, 0x0, V78, V412, 0x8620410b, V426]
Stack pops: 9
Stack additions: [V443, S7, S6, S5, S4, S3, V451, 0x4b750334, V465, 0x20, V468, V469, V468, 0x0, V451]
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, 0x0, 0x0, 0x0, 0x0, V78, V451, 0x4b750334, V465, 0x20, V468, V469, V468, 0x0, V451]

================================

Block 0x536
[0x536:0x53f]
---
Predecessors: [0x4ea]
Successors: [0x540]
---
0x536 PUSH1 0x32
0x538 GAS
0x539 SUB
0x53a CALL
0x53b ISZERO
0x53c PUSH2 0x0
0x53f JUMPI
---
0x536: V474 = 0x32
0x538: V475 = GAS
0x539: V476 = SUB V475 0x32
0x53a: V477 = CALL V476 V451 0x0 V468 V469 V468 0x20
0x53b: V478 = ISZERO V477
0x53c: V479 = 0x0
0x53f: THROWI V478
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, 0x0, 0x0, 0x0, 0x0, V78, V451, 0x4b750334, V465, 0x20, V468, V469, V468, 0x0, V451]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, 0x0, 0x0, 0x0, 0x0, V78, V451, 0x4b750334, V465]

================================

Block 0x540
[0x540:0x58b]
---
Predecessors: [0x536]
Successors: [0x58c]
---
0x540 POP
0x541 POP
0x542 POP
0x543 PUSH1 0x40
0x545 MLOAD
0x546 DUP1
0x547 MLOAD
0x548 SWAP1
0x549 PUSH1 0x20
0x54b ADD
0x54c POP
0x54d SWAP5
0x54e POP
0x54f DUP1
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 AND
0x559 PUSH4 0x976a8435
0x55e PUSH1 0x0
0x560 PUSH1 0x40
0x562 MLOAD
0x563 PUSH1 0x20
0x565 ADD
0x566 MSTORE
0x567 PUSH1 0x40
0x569 MLOAD
0x56a DUP2
0x56b PUSH1 0xe0
0x56d PUSH1 0x2
0x56f EXP
0x570 MUL
0x571 DUP2
0x572 MSTORE
0x573 PUSH1 0x4
0x575 ADD
0x576 DUP1
0x577 SWAP1
0x578 POP
0x579 PUSH1 0x20
0x57b PUSH1 0x40
0x57d MLOAD
0x57e DUP1
0x57f DUP4
0x580 SUB
0x581 DUP2
0x582 PUSH1 0x0
0x584 DUP8
0x585 DUP1
0x586 EXTCODESIZE
0x587 ISZERO
0x588 PUSH2 0x0
0x58b JUMPI
---
0x543: V480 = 0x40
0x545: V481 = M[0x40]
0x547: V482 = M[V481]
0x549: V483 = 0x20
0x54b: V484 = ADD 0x20 V481
0x550: V485 = 0x1
0x552: V486 = 0xa0
0x554: V487 = 0x2
0x556: V488 = EXP 0x2 0xa0
0x557: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x559: V491 = 0x976a8435
0x55e: V492 = 0x0
0x560: V493 = 0x40
0x562: V494 = M[0x40]
0x563: V495 = 0x20
0x565: V496 = ADD 0x20 V494
0x566: M[V496] = 0x0
0x567: V497 = 0x40
0x569: V498 = M[0x40]
0x56b: V499 = 0xe0
0x56d: V500 = 0x2
0x56f: V501 = EXP 0x2 0xe0
0x570: V502 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x976a8435
0x572: M[V498] = 0x976a843500000000000000000000000000000000000000000000000000000000
0x573: V503 = 0x4
0x575: V504 = ADD 0x4 V498
0x579: V505 = 0x20
0x57b: V506 = 0x40
0x57d: V507 = M[0x40]
0x580: V508 = SUB V504 V507
0x582: V509 = 0x0
0x586: V510 = EXTCODESIZE V490
0x587: V511 = ISZERO V510
0x588: V512 = 0x0
0x58b: THROWI V511
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, 0x0, 0x0, 0x0, 0x0, V78, V451, 0x4b750334, V465]
Stack pops: 8
Stack additions: [V482, S6, S5, S4, S3, V490, 0x976a8435, V504, 0x20, V507, V508, V507, 0x0, V490]
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, 0x0, 0x0, 0x0, V78, V490, 0x976a8435, V504, 0x20, V507, V508, V507, 0x0, V490]

================================

Block 0x58c
[0x58c:0x595]
---
Predecessors: [0x540]
Successors: [0x596]
---
0x58c PUSH1 0x32
0x58e GAS
0x58f SUB
0x590 CALL
0x591 ISZERO
0x592 PUSH2 0x0
0x595 JUMPI
---
0x58c: V513 = 0x32
0x58e: V514 = GAS
0x58f: V515 = SUB V514 0x32
0x590: V516 = CALL V515 V490 0x0 V507 V508 V507 0x20
0x591: V517 = ISZERO V516
0x592: V518 = 0x0
0x595: THROWI V517
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, 0x0, 0x0, 0x0, V78, V490, 0x976a8435, V504, 0x20, V507, V508, V507, 0x0, V490]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, 0x0, 0x0, 0x0, V78, V490, 0x976a8435, V504]

================================

Block 0x596
[0x596:0x5e1]
---
Predecessors: [0x58c]
Successors: [0x5e2]
---
0x596 POP
0x597 POP
0x598 POP
0x599 PUSH1 0x40
0x59b MLOAD
0x59c DUP1
0x59d MLOAD
0x59e SWAP1
0x59f PUSH1 0x20
0x5a1 ADD
0x5a2 POP
0x5a3 SWAP4
0x5a4 POP
0x5a5 DUP1
0x5a6 PUSH1 0x1
0x5a8 PUSH1 0xa0
0x5aa PUSH1 0x2
0x5ac EXP
0x5ad SUB
0x5ae AND
0x5af PUSH4 0xb1099347
0x5b4 PUSH1 0x0
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 PUSH1 0x20
0x5bb ADD
0x5bc MSTORE
0x5bd PUSH1 0x40
0x5bf MLOAD
0x5c0 DUP2
0x5c1 PUSH1 0xe0
0x5c3 PUSH1 0x2
0x5c5 EXP
0x5c6 MUL
0x5c7 DUP2
0x5c8 MSTORE
0x5c9 PUSH1 0x4
0x5cb ADD
0x5cc DUP1
0x5cd SWAP1
0x5ce POP
0x5cf PUSH1 0x20
0x5d1 PUSH1 0x40
0x5d3 MLOAD
0x5d4 DUP1
0x5d5 DUP4
0x5d6 SUB
0x5d7 DUP2
0x5d8 PUSH1 0x0
0x5da DUP8
0x5db DUP1
0x5dc EXTCODESIZE
0x5dd ISZERO
0x5de PUSH2 0x0
0x5e1 JUMPI
---
0x599: V519 = 0x40
0x59b: V520 = M[0x40]
0x59d: V521 = M[V520]
0x59f: V522 = 0x20
0x5a1: V523 = ADD 0x20 V520
0x5a6: V524 = 0x1
0x5a8: V525 = 0xa0
0x5aa: V526 = 0x2
0x5ac: V527 = EXP 0x2 0xa0
0x5ad: V528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ae: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x5af: V530 = 0xb1099347
0x5b4: V531 = 0x0
0x5b6: V532 = 0x40
0x5b8: V533 = M[0x40]
0x5b9: V534 = 0x20
0x5bb: V535 = ADD 0x20 V533
0x5bc: M[V535] = 0x0
0x5bd: V536 = 0x40
0x5bf: V537 = M[0x40]
0x5c1: V538 = 0xe0
0x5c3: V539 = 0x2
0x5c5: V540 = EXP 0x2 0xe0
0x5c6: V541 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb1099347
0x5c8: M[V537] = 0xb109934700000000000000000000000000000000000000000000000000000000
0x5c9: V542 = 0x4
0x5cb: V543 = ADD 0x4 V537
0x5cf: V544 = 0x20
0x5d1: V545 = 0x40
0x5d3: V546 = M[0x40]
0x5d6: V547 = SUB V543 V546
0x5d8: V548 = 0x0
0x5dc: V549 = EXTCODESIZE V529
0x5dd: V550 = ISZERO V549
0x5de: V551 = 0x0
0x5e1: THROWI V550
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, 0x0, 0x0, 0x0, V78, V490, 0x976a8435, V504]
Stack pops: 7
Stack additions: [V521, S5, S4, S3, V529, 0xb1099347, V543, 0x20, V546, V547, V546, 0x0, V529]
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, 0x0, 0x0, V78, V529, 0xb1099347, V543, 0x20, V546, V547, V546, 0x0, V529]

================================

Block 0x5e2
[0x5e2:0x5eb]
---
Predecessors: [0x596]
Successors: [0x5ec]
---
0x5e2 PUSH1 0x32
0x5e4 GAS
0x5e5 SUB
0x5e6 CALL
0x5e7 ISZERO
0x5e8 PUSH2 0x0
0x5eb JUMPI
---
0x5e2: V552 = 0x32
0x5e4: V553 = GAS
0x5e5: V554 = SUB V553 0x32
0x5e6: V555 = CALL V554 V529 0x0 V546 V547 V546 0x20
0x5e7: V556 = ISZERO V555
0x5e8: V557 = 0x0
0x5eb: THROWI V556
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, 0x0, 0x0, V78, V529, 0xb1099347, V543, 0x20, V546, V547, V546, 0x0, V529]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, 0x0, 0x0, V78, V529, 0xb1099347, V543]

================================

Block 0x5ec
[0x5ec:0x637]
---
Predecessors: [0x5e2]
Successors: [0x638]
---
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef PUSH1 0x40
0x5f1 MLOAD
0x5f2 DUP1
0x5f3 MLOAD
0x5f4 SWAP1
0x5f5 PUSH1 0x20
0x5f7 ADD
0x5f8 POP
0x5f9 SWAP3
0x5fa POP
0x5fb DUP1
0x5fc PUSH1 0x1
0x5fe PUSH1 0xa0
0x600 PUSH1 0x2
0x602 EXP
0x603 SUB
0x604 AND
0x605 PUSH4 0x4ca50f59
0x60a PUSH1 0x0
0x60c PUSH1 0x40
0x60e MLOAD
0x60f PUSH1 0x20
0x611 ADD
0x612 MSTORE
0x613 PUSH1 0x40
0x615 MLOAD
0x616 DUP2
0x617 PUSH1 0xe0
0x619 PUSH1 0x2
0x61b EXP
0x61c MUL
0x61d DUP2
0x61e MSTORE
0x61f PUSH1 0x4
0x621 ADD
0x622 DUP1
0x623 SWAP1
0x624 POP
0x625 PUSH1 0x20
0x627 PUSH1 0x40
0x629 MLOAD
0x62a DUP1
0x62b DUP4
0x62c SUB
0x62d DUP2
0x62e PUSH1 0x0
0x630 DUP8
0x631 DUP1
0x632 EXTCODESIZE
0x633 ISZERO
0x634 PUSH2 0x0
0x637 JUMPI
---
0x5ef: V558 = 0x40
0x5f1: V559 = M[0x40]
0x5f3: V560 = M[V559]
0x5f5: V561 = 0x20
0x5f7: V562 = ADD 0x20 V559
0x5fc: V563 = 0x1
0x5fe: V564 = 0xa0
0x600: V565 = 0x2
0x602: V566 = EXP 0x2 0xa0
0x603: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x604: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x605: V569 = 0x4ca50f59
0x60a: V570 = 0x0
0x60c: V571 = 0x40
0x60e: V572 = M[0x40]
0x60f: V573 = 0x20
0x611: V574 = ADD 0x20 V572
0x612: M[V574] = 0x0
0x613: V575 = 0x40
0x615: V576 = M[0x40]
0x617: V577 = 0xe0
0x619: V578 = 0x2
0x61b: V579 = EXP 0x2 0xe0
0x61c: V580 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4ca50f59
0x61e: M[V576] = 0x4ca50f5900000000000000000000000000000000000000000000000000000000
0x61f: V581 = 0x4
0x621: V582 = ADD 0x4 V576
0x625: V583 = 0x20
0x627: V584 = 0x40
0x629: V585 = M[0x40]
0x62c: V586 = SUB V582 V585
0x62e: V587 = 0x0
0x632: V588 = EXTCODESIZE V568
0x633: V589 = ISZERO V588
0x634: V590 = 0x0
0x637: THROWI V589
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, 0x0, 0x0, V78, V529, 0xb1099347, V543]
Stack pops: 6
Stack additions: [V560, S4, S3, V568, 0x4ca50f59, V582, 0x20, V585, V586, V585, 0x0, V568]
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, V560, 0x0, V78, V568, 0x4ca50f59, V582, 0x20, V585, V586, V585, 0x0, V568]

================================

Block 0x638
[0x638:0x641]
---
Predecessors: [0x5ec]
Successors: [0x642]
---
0x638 PUSH1 0x32
0x63a GAS
0x63b SUB
0x63c CALL
0x63d ISZERO
0x63e PUSH2 0x0
0x641 JUMPI
---
0x638: V591 = 0x32
0x63a: V592 = GAS
0x63b: V593 = SUB V592 0x32
0x63c: V594 = CALL V593 V568 0x0 V585 V586 V585 0x20
0x63d: V595 = ISZERO V594
0x63e: V596 = 0x0
0x641: THROWI V595
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, V560, 0x0, V78, V568, 0x4ca50f59, V582, 0x20, V585, V586, V585, 0x0, V568]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, V560, 0x0, V78, V568, 0x4ca50f59, V582]

================================

Block 0x642
[0x642:0x64a]
---
Predecessors: [0x638]
Successors: [0x64b]
---
0x642 POP
0x643 POP
0x644 PUSH1 0x40
0x646 MLOAD
0x647 MLOAD
0x648 SWAP3
0x649 POP
0x64a POP
---
0x644: V597 = 0x40
0x646: V598 = M[0x40]
0x647: V599 = M[V598]
---
Entry stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, V560, 0x0, V78, V568, 0x4ca50f59, V582]
Stack pops: 5
Stack additions: [V599, S3]
Exit stack: [V10, 0xcf, V78, V326, V365, V404, V443, V482, V521, V560, V599, V78]

================================

Block 0x64b
[0x64b:0x64b]
---
Predecessors: [0x3c9, 0x642]
Successors: [0x64c]
---
0x64b JUMPDEST
---
0x64b: JUMPDEST 
---
Entry stack: [V10, 0xcf, V78, V326, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcf, V78, V326, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x64c
[0x64c:0x657]
---
Predecessors: [0x64b]
Successors: [0xcf]
---
0x64c JUMPDEST
0x64d POP
0x64e SWAP2
0x64f SWAP4
0x650 SWAP6
0x651 SWAP8
0x652 POP
0x653 SWAP2
0x654 SWAP4
0x655 SWAP6
0x656 SWAP8
0x657 JUMP
---
0x64c: JUMPDEST 
0x657: JUMP 0xcf
---
Entry stack: [V10, 0xcf, V78, V326, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1]
Exit stack: [V10, V326, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x658
[0x658:0x666]
---
Predecessors: [0x126]
Successors: [0x7c]
---
0x658 JUMPDEST
0x659 PUSH1 0x0
0x65b SLOAD
0x65c PUSH1 0x1
0x65e PUSH1 0xa0
0x660 PUSH1 0x2
0x662 EXP
0x663 SUB
0x664 AND
0x665 DUP2
0x666 JUMP
---
0x658: JUMPDEST 
0x659: V600 = 0x0
0x65b: V601 = S[0x0]
0x65c: V602 = 0x1
0x65e: V603 = 0xa0
0x660: V604 = 0x2
0x662: V605 = EXP 0x2 0xa0
0x663: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x664: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0x666: JUMP 0x7c
---
Entry stack: [V10, 0x7c]
Stack pops: 1
Stack additions: [S0, V607]
Exit stack: [V10, 0x7c, V607]

================================

Block 0x667
[0x667:0x67d]
---
Predecessors: [0x14f]
Successors: [0x67e, 0x682]
---
0x667 JUMPDEST
0x668 PUSH1 0x0
0x66a SLOAD
0x66b CALLER
0x66c PUSH1 0x1
0x66e PUSH1 0xa0
0x670 PUSH1 0x2
0x672 EXP
0x673 SUB
0x674 SWAP1
0x675 DUP2
0x676 AND
0x677 SWAP2
0x678 AND
0x679 EQ
0x67a PUSH2 0x682
0x67d JUMPI
---
0x667: JUMPDEST 
0x668: V608 = 0x0
0x66a: V609 = S[0x0]
0x66b: V610 = CALLER
0x66c: V611 = 0x1
0x66e: V612 = 0xa0
0x670: V613 = 0x2
0x672: V614 = EXP 0x2 0xa0
0x673: V615 = SUB 0x10000000000000000000000000000000000000000 0x1
0x676: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x678: V617 = AND V609 0xffffffffffffffffffffffffffffffffffffffff
0x679: V618 = EQ V617 V616
0x67a: V619 = 0x682
0x67d: JUMPI 0x682 V618
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x67e
[0x67e:0x681]
---
Predecessors: [0x667]
Successors: []
---
0x67e PUSH2 0x0
0x681 JUMP
---
0x67e: V620 = 0x0
0x681: THROW 
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x682
[0x682:0x6eb]
---
Predecessors: [0x667]
Successors: [0x6ec]
---
0x682 JUMPDEST
0x683 PUSH1 0x0
0x685 DUP1
0x686 SLOAD
0x687 PUSH1 0x40
0x689 MLOAD
0x68a PUSH1 0x1
0x68c PUSH1 0xa0
0x68e PUSH1 0x2
0x690 EXP
0x691 SUB
0x692 DUP1
0x693 DUP6
0x694 AND
0x695 SWAP4
0x696 SWAP3
0x697 AND
0x698 SWAP2
0x699 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6ba SWAP2
0x6bb LOG3
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf SLOAD
0x6c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d5 NOT
0x6d6 AND
0x6d7 PUSH13 0x1000000000000000000000000
0x6e5 DUP4
0x6e6 DUP2
0x6e7 MUL
0x6e8 DIV
0x6e9 OR
0x6ea SWAP1
0x6eb SSTORE
---
0x682: JUMPDEST 
0x683: V621 = 0x0
0x686: V622 = S[0x0]
0x687: V623 = 0x40
0x689: V624 = M[0x40]
0x68a: V625 = 0x1
0x68c: V626 = 0xa0
0x68e: V627 = 0x2
0x690: V628 = EXP 0x2 0xa0
0x691: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x694: V630 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x697: V631 = AND V622 0xffffffffffffffffffffffffffffffffffffffff
0x699: V632 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6bb: LOG V624 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V631 V630
0x6bc: V633 = 0x0
0x6bf: V634 = S[0x0]
0x6c0: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d5: V636 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6d6: V637 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V634
0x6d7: V638 = 0x1000000000000000000000000
0x6e7: V639 = MUL 0x1000000000000000000000000 V132
0x6e8: V640 = DIV V639 0x1000000000000000000000000
0x6e9: V641 = OR V640 V637
0x6eb: S[0x0] = V641
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5b, V132]

================================

Block 0x6ec
[0x6ec:0x6ec]
---
Predecessors: [0x682]
Successors: [0x6ed]
---
0x6ec JUMPDEST
---
0x6ec: JUMPDEST 
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V132]

================================

Block 0x6ed
[0x6ed:0x6ef]
---
Predecessors: [0x6ec]
Successors: [0x5b]
---
0x6ed JUMPDEST
0x6ee POP
0x6ef JUMP
---
0x6ed: JUMPDEST 
0x6ef: JUMP 0x5b
---
Entry stack: [V10, 0x5b, V132]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x6f0
[0x6f0:0x6f9]
---
Predecessors: []
Successors: [0x6fa]
---
0x6f0 PUSH1 0x60
0x6f2 PUSH1 0x40
0x6f4 MSTORE
0x6f5 CALLVALUE
0x6f6 PUSH2 0x0
0x6f9 JUMPI
---
0x6f0: V642 = 0x60
0x6f2: V643 = 0x40
0x6f4: M[0x40] = 0x60
0x6f5: V644 = CALLVALUE
0x6f6: V645 = 0x0
0x6f9: THROWI V644
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6fa
[0x6fa:0x72d]
---
Predecessors: [0x6f0]
Successors: [0x72e]
---
0x6fa PUSH1 0x40
0x6fc MLOAD
0x6fd PUSH1 0xc0
0x6ff DUP1
0x700 PUSH2 0xb50
0x703 DUP4
0x704 CODECOPY
0x705 DUP2
0x706 ADD
0x707 PUSH1 0x40
0x709 SWAP1
0x70a DUP2
0x70b MSTORE
0x70c DUP2
0x70d MLOAD
0x70e PUSH1 0x20
0x710 DUP4
0x711 ADD
0x712 MLOAD
0x713 SWAP2
0x714 DUP4
0x715 ADD
0x716 MLOAD
0x717 PUSH1 0x60
0x719 DUP5
0x71a ADD
0x71b MLOAD
0x71c PUSH1 0x80
0x71e DUP6
0x71f ADD
0x720 MLOAD
0x721 PUSH1 0xa0
0x723 SWAP1
0x724 SWAP6
0x725 ADD
0x726 MLOAD
0x727 SWAP3
0x728 SWAP5
0x729 SWAP2
0x72a SWAP3
0x72b SWAP1
0x72c SWAP2
0x72d SWAP1
---
0x6fa: V646 = 0x40
0x6fc: V647 = M[0x40]
0x6fd: V648 = 0xc0
0x700: V649 = 0xb50
0x704: CODECOPY V647 0xb50 0xc0
0x706: V650 = ADD V647 0xc0
0x707: V651 = 0x40
0x70b: M[0x40] = V650
0x70d: V652 = M[V647]
0x70e: V653 = 0x20
0x711: V654 = ADD V647 0x20
0x712: V655 = M[V654]
0x715: V656 = ADD V647 0x40
0x716: V657 = M[V656]
0x717: V658 = 0x60
0x71a: V659 = ADD V647 0x60
0x71b: V660 = M[V659]
0x71c: V661 = 0x80
0x71f: V662 = ADD V647 0x80
0x720: V663 = M[V662]
0x721: V664 = 0xa0
0x725: V665 = ADD V647 0xa0
0x726: V666 = M[V665]
---
Entry stack: []
Stack pops: 0
Stack additions: [V652, V655, V657, V660, V663, V666]
Exit stack: [V652, V655, V657, V660, V663, V666]

================================

Block 0x72e
[0x72e:0x72e]
---
Predecessors: [0x6fa]
Successors: [0x72f]
---
0x72e JUMPDEST
---
0x72e: JUMPDEST 
---
Entry stack: [V652, V655, V657, V660, V663, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V652, V655, V657, V660, V663, V666]

================================

Block 0x72f
[0x72f:0x752]
---
Predecessors: [0x72e]
Successors: [0x753]
---
0x72f JUMPDEST
0x730 PUSH1 0x0
0x732 DUP1
0x733 SLOAD
0x734 PUSH1 0x1
0x736 PUSH1 0xa0
0x738 PUSH1 0x2
0x73a EXP
0x73b SUB
0x73c NOT
0x73d AND
0x73e PUSH13 0x1000000000000000000000000
0x74c CALLER
0x74d DUP2
0x74e MUL
0x74f DIV
0x750 OR
0x751 SWAP1
0x752 SSTORE
---
0x72f: JUMPDEST 
0x730: V667 = 0x0
0x733: V668 = S[0x0]
0x734: V669 = 0x1
0x736: V670 = 0xa0
0x738: V671 = 0x2
0x73a: V672 = EXP 0x2 0xa0
0x73b: V673 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73c: V674 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V675 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V668
0x73e: V676 = 0x1000000000000000000000000
0x74c: V677 = CALLER
0x74e: V678 = MUL 0x1000000000000000000000000 V677
0x74f: V679 = DIV V678 0x1000000000000000000000000
0x750: V680 = OR V679 V675
0x752: S[0x0] = V680
---
Entry stack: [V652, V655, V657, V660, V663, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V652, V655, V657, V660, V663, V666]

================================

Block 0x753
[0x753:0x815]
---
Predecessors: [0x72f]
Successors: [0x816]
---
0x753 JUMPDEST
0x754 PUSH1 0x1
0x756 DUP1
0x757 SLOAD
0x758 PUSH1 0x1
0x75a PUSH1 0xa0
0x75c PUSH1 0x2
0x75e EXP
0x75f SUB
0x760 NOT
0x761 AND
0x762 PUSH13 0x1000000000000000000000000
0x770 DUP9
0x771 DUP2
0x772 MUL
0x773 DIV
0x774 OR
0x775 SWAP1
0x776 SSTORE
0x777 PUSH1 0x2
0x779 DUP6
0x77a SWAP1
0x77b SSTORE
0x77c PUSH1 0x3
0x77e DUP5
0x77f SWAP1
0x780 SSTORE
0x781 PUSH1 0x4
0x783 DUP4
0x784 SWAP1
0x785 SSTORE
0x786 PUSH1 0x5
0x788 DUP1
0x789 SLOAD
0x78a PUSH1 0xff
0x78c NOT
0x78d AND
0x78e PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x7af DUP5
0x7b0 DUP2
0x7b1 MUL
0x7b2 DUP2
0x7b3 SWAP1
0x7b4 DIV
0x7b5 SWAP2
0x7b6 SWAP1
0x7b7 SWAP2
0x7b8 OR
0x7b9 PUSH2 0xff00
0x7bc NOT
0x7bd AND
0x7be PUSH2 0x100
0x7c1 DUP5
0x7c2 DUP4
0x7c3 MUL
0x7c4 SWAP3
0x7c5 SWAP1
0x7c6 SWAP3
0x7c7 DIV
0x7c8 DUP3
0x7c9 MUL
0x7ca OR
0x7cb SWAP2
0x7cc DUP3
0x7cd SWAP1
0x7ce SSTORE
0x7cf PUSH1 0x40
0x7d1 DUP1
0x7d2 MLOAD
0x7d3 PUSH1 0xff
0x7d5 DUP1
0x7d6 DUP6
0x7d7 AND
0x7d8 ISZERO
0x7d9 ISZERO
0x7da DUP3
0x7db MSTORE
0x7dc SWAP3
0x7dd SWAP1
0x7de SWAP4
0x7df DIV
0x7e0 SWAP1
0x7e1 SWAP2
0x7e2 AND
0x7e3 ISZERO
0x7e4 ISZERO
0x7e5 PUSH1 0x20
0x7e7 DUP4
0x7e8 ADD
0x7e9 MSTORE
0x7ea DUP1
0x7eb MLOAD
0x7ec PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x80d SWAP3
0x80e DUP2
0x80f SWAP1
0x810 SUB
0x811 SWAP1
0x812 SWAP2
0x813 ADD
0x814 SWAP1
0x815 LOG1
---
0x753: JUMPDEST 
0x754: V681 = 0x1
0x757: V682 = S[0x1]
0x758: V683 = 0x1
0x75a: V684 = 0xa0
0x75c: V685 = 0x2
0x75e: V686 = EXP 0x2 0xa0
0x75f: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x760: V688 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x761: V689 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V682
0x762: V690 = 0x1000000000000000000000000
0x772: V691 = MUL 0x1000000000000000000000000 V652
0x773: V692 = DIV V691 0x1000000000000000000000000
0x774: V693 = OR V692 V689
0x776: S[0x1] = V693
0x777: V694 = 0x2
0x77b: S[0x2] = V655
0x77c: V695 = 0x3
0x780: S[0x3] = V657
0x781: V696 = 0x4
0x785: S[0x4] = V660
0x786: V697 = 0x5
0x789: V698 = S[0x5]
0x78a: V699 = 0xff
0x78c: V700 = NOT 0xff
0x78d: V701 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V698
0x78e: V702 = 0x100000000000000000000000000000000000000000000000000000000000000
0x7b1: V703 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V663
0x7b4: V704 = DIV V703 0x100000000000000000000000000000000000000000000000000000000000000
0x7b8: V705 = OR V704 V701
0x7b9: V706 = 0xff00
0x7bc: V707 = NOT 0xff00
0x7bd: V708 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V705
0x7be: V709 = 0x100
0x7c3: V710 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V666
0x7c7: V711 = DIV V710 0x100000000000000000000000000000000000000000000000000000000000000
0x7c9: V712 = MUL 0x100 V711
0x7ca: V713 = OR V712 V708
0x7ce: S[0x5] = V713
0x7cf: V714 = 0x40
0x7d2: V715 = M[0x40]
0x7d3: V716 = 0xff
0x7d7: V717 = AND V713 0xff
0x7d8: V718 = ISZERO V717
0x7d9: V719 = ISZERO V718
0x7db: M[V715] = V719
0x7df: V720 = DIV V713 0x100
0x7e2: V721 = AND 0xff V720
0x7e3: V722 = ISZERO V721
0x7e4: V723 = ISZERO V722
0x7e5: V724 = 0x20
0x7e8: V725 = ADD V715 0x20
0x7e9: M[V725] = V723
0x7eb: V726 = M[0x40]
0x7ec: V727 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0x810: V728 = SUB V715 V726
0x813: V729 = ADD 0x40 V728
0x815: LOG V726 V729 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: [V652, V655, V657, V660, V663, V666]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V652, V655, V657, V660, V663, V666]

================================

Block 0x816
[0x816:0x81c]
---
Predecessors: [0x753]
Successors: [0x81d]
---
0x816 JUMPDEST
0x817 POP
0x818 POP
0x819 POP
0x81a POP
0x81b POP
0x81c POP
---
0x816: JUMPDEST 
---
Entry stack: [V652, V655, V657, V660, V663, V666]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x81d
[0x81d:0x835]
---
Predecessors: [0x816]
Successors: [0x836]
---
0x81d JUMPDEST
0x81e PUSH2 0xa15
0x821 DUP1
0x822 PUSH2 0x13b
0x825 PUSH1 0x0
0x827 CODECOPY
0x828 PUSH1 0x0
0x82a RETURN
0x82b PUSH1 0x60
0x82d PUSH1 0x40
0x82f MSTORE
0x830 CALLDATASIZE
0x831 ISZERO
0x832 PUSH2 0xb9
0x835 JUMPI
---
0x81d: JUMPDEST 
0x81e: V730 = 0xa15
0x822: V731 = 0x13b
0x825: V732 = 0x0
0x827: CODECOPY 0x0 0x13b 0xa15
0x828: V733 = 0x0
0x82a: RETURN 0x0 0xa15
0x82b: V734 = 0x60
0x82d: V735 = 0x40
0x82f: M[0x40] = 0x60
0x830: V736 = CALLDATASIZE
0x831: V737 = ISZERO V736
0x832: V738 = 0xb9
0x835: THROWI V737
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x836
[0x836:0x849]
---
Predecessors: [0x81d]
Successors: [0x84a]
---
0x836 PUSH1 0xe0
0x838 PUSH1 0x2
0x83a EXP
0x83b PUSH1 0x0
0x83d CALLDATALOAD
0x83e DIV
0x83f PUSH4 0x2170ebf7
0x844 DUP2
0x845 EQ
0x846 PUSH2 0xca
0x849 JUMPI
---
0x836: V739 = 0xe0
0x838: V740 = 0x2
0x83a: V741 = EXP 0x2 0xe0
0x83b: V742 = 0x0
0x83d: V743 = CALLDATALOAD 0x0
0x83e: V744 = DIV V743 0x100000000000000000000000000000000000000000000000000000000
0x83f: V745 = 0x2170ebf7
0x845: V746 = EQ V744 0x2170ebf7
0x846: V747 = 0xca
0x849: THROWI V746
---
Entry stack: []
Stack pops: 0
Stack additions: [V744]
Exit stack: [V744]

================================

Block 0x84a
[0x84a:0x854]
---
Predecessors: [0x836]
Successors: [0x855]
---
0x84a DUP1
0x84b PUSH4 0x38d52e0f
0x850 EQ
0x851 PUSH2 0xee
0x854 JUMPI
---
0x84b: V748 = 0x38d52e0f
0x850: V749 = EQ 0x38d52e0f V744
0x851: V750 = 0xee
0x854: THROWI V749
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x855
[0x855:0x85f]
---
Predecessors: [0x84a]
Successors: [0x860]
---
0x855 DUP1
0x856 PUSH4 0x4b750334
0x85b EQ
0x85c PUSH2 0x117
0x85f JUMPI
---
0x856: V751 = 0x4b750334
0x85b: V752 = EQ 0x4b750334 V744
0x85c: V753 = 0x117
0x85f: THROWI V752
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x860
[0x860:0x86a]
---
Predecessors: [0x855]
Successors: [0x86b]
---
0x860 DUP1
0x861 PUSH4 0x4ca50f59
0x866 EQ
0x867 PUSH2 0x136
0x86a JUMPI
---
0x861: V754 = 0x4ca50f59
0x866: V755 = EQ 0x4ca50f59 V744
0x867: V756 = 0x136
0x86a: THROWI V755
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x86b
[0x86b:0x875]
---
Predecessors: [0x860]
Successors: [0x876]
---
0x86b DUP1
0x86c PUSH4 0x8620410b
0x871 EQ
0x872 PUSH2 0x157
0x875 JUMPI
---
0x86c: V757 = 0x8620410b
0x871: V758 = EQ 0x8620410b V744
0x872: V759 = 0x157
0x875: THROWI V758
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x876
[0x876:0x880]
---
Predecessors: [0x86b]
Successors: [0x881]
---
0x876 DUP1
0x877 PUSH4 0x8da5cb5b
0x87c EQ
0x87d PUSH2 0x176
0x880 JUMPI
---
0x877: V760 = 0x8da5cb5b
0x87c: V761 = EQ 0x8da5cb5b V744
0x87d: V762 = 0x176
0x880: THROWI V761
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x881
[0x881:0x88b]
---
Predecessors: [0x876]
Successors: [0x88c]
---
0x881 DUP1
0x882 PUSH4 0x919f8cfc
0x887 EQ
0x888 PUSH2 0x19f
0x88b JUMPI
---
0x882: V763 = 0x919f8cfc
0x887: V764 = EQ 0x919f8cfc V744
0x888: V765 = 0x19f
0x88b: THROWI V764
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x88c
[0x88c:0x896]
---
Predecessors: [0x881]
Successors: [0x897]
---
0x88c DUP1
0x88d PUSH4 0x976a8435
0x892 EQ
0x893 PUSH2 0x1a9
0x896 JUMPI
---
0x88d: V766 = 0x976a8435
0x892: V767 = EQ 0x976a8435 V744
0x893: V768 = 0x1a9
0x896: THROWI V767
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x897
[0x897:0x8a1]
---
Predecessors: [0x88c]
Successors: [0x8a2]
---
0x897 DUP1
0x898 PUSH4 0xa7abc124
0x89d EQ
0x89e PUSH2 0x1c8
0x8a1 JUMPI
---
0x898: V769 = 0xa7abc124
0x89d: V770 = EQ 0xa7abc124 V744
0x89e: V771 = 0x1c8
0x8a1: THROWI V770
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x8a2
[0x8a2:0x8ac]
---
Predecessors: [0x897]
Successors: [0x8ad]
---
0x8a2 DUP1
0x8a3 PUSH4 0xb1099347
0x8a8 EQ
0x8a9 PUSH2 0x1dd
0x8ac JUMPI
---
0x8a3: V772 = 0xb1099347
0x8a8: V773 = EQ 0xb1099347 V744
0x8a9: V774 = 0x1dd
0x8ac: THROWI V773
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x8ad
[0x8ad:0x8b7]
---
Predecessors: [0x8a2]
Successors: [0x8b8]
---
0x8ad DUP1
0x8ae PUSH4 0xc34764cf
0x8b3 EQ
0x8b4 PUSH2 0x1fe
0x8b7 JUMPI
---
0x8ae: V775 = 0xc34764cf
0x8b3: V776 = EQ 0xc34764cf V744
0x8b4: V777 = 0x1fe
0x8b7: THROWI V776
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x8b8
[0x8b8:0x8c2]
---
Predecessors: [0x8ad]
Successors: [0x8c3]
---
0x8b8 DUP1
0x8b9 PUSH4 0xc60ccb0e
0x8be EQ
0x8bf PUSH2 0x225
0x8c2 JUMPI
---
0x8b9: V778 = 0xc60ccb0e
0x8be: V779 = EQ 0xc60ccb0e V744
0x8bf: V780 = 0x225
0x8c2: THROWI V779
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x8c3
[0x8c3:0x8cd]
---
Predecessors: [0x8b8]
Successors: [0x8ce]
---
0x8c3 DUP1
0x8c4 PUSH4 0xcd53a3b7
0x8c9 EQ
0x8ca PUSH2 0x22f
0x8cd JUMPI
---
0x8c4: V781 = 0xcd53a3b7
0x8c9: V782 = EQ 0xcd53a3b7 V744
0x8ca: V783 = 0x22f
0x8cd: THROWI V782
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x8ce
[0x8ce:0x8d8]
---
Predecessors: [0x8c3]
Successors: [0x8d9]
---
0x8ce DUP1
0x8cf PUSH4 0xeff883bd
0x8d4 EQ
0x8d5 PUSH2 0x253
0x8d8 JUMPI
---
0x8cf: V784 = 0xeff883bd
0x8d4: V785 = EQ 0xeff883bd V744
0x8d5: V786 = 0x253
0x8d8: THROWI V785
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x8d9
[0x8d9:0x8e3]
---
Predecessors: [0x8ce]
Successors: [0x8e4]
---
0x8d9 DUP1
0x8da PUSH4 0xf2fde38b
0x8df EQ
0x8e0 PUSH2 0x265
0x8e3 JUMPI
---
0x8da: V787 = 0xf2fde38b
0x8df: V788 = EQ 0xf2fde38b V744
0x8e0: V789 = 0x265
0x8e3: THROWI V788
---
Entry stack: [V744]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V744]

================================

Block 0x8e4
[0x8e4:0x8e7]
---
Predecessors: [0x8d9]
Successors: [0x8e8]
---
0x8e4 JUMPDEST
0x8e5 PUSH2 0xc8
---
0x8e4: JUMPDEST 
0x8e5: V790 = 0xc8
---
Entry stack: [V744]
Stack pops: 0
Stack additions: [0xc8]
Exit stack: [V744, 0xc8]

================================

Block 0x8e8
[0x8e8:0x8f0]
---
Predecessors: [0x8e4]
Successors: [0x8f1]
---
0x8e8 JUMPDEST
0x8e9 PUSH2 0xc5
0x8ec PUSH2 0x277
0x8ef JUMP
0x8f0 JUMPDEST
---
0x8e8: JUMPDEST 
0x8e9: V791 = 0xc5
0x8ec: V792 = 0x277
0x8ef: THROW 
0x8f0: JUMPDEST 
---
Entry stack: [V744, 0xc8]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: []

================================

Block 0x8f1
[0x8f1:0x8fa]
---
Predecessors: [0x8e8]
Successors: [0x8fb]
---
0x8f1 JUMPDEST
0x8f2 JUMP
0x8f3 JUMPDEST
0x8f4 STOP
0x8f5 JUMPDEST
0x8f6 CALLVALUE
0x8f7 PUSH2 0x0
0x8fa JUMPI
---
0x8f1: JUMPDEST 
0x8f2: JUMP S0
0x8f3: JUMPDEST 
0x8f4: STOP 
0x8f5: JUMPDEST 
0x8f6: V793 = CALLVALUE
0x8f7: V794 = 0x0
0x8fa: THROWI V793
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x8fb
[0x8fb:0x91e]
---
Predecessors: [0x8f1]
Successors: [0x91f]
---
0x8fb PUSH2 0xda
0x8fe PUSH1 0x4
0x900 CALLDATALOAD
0x901 PUSH2 0x4a5
0x904 JUMP
0x905 JUMPDEST
0x906 PUSH1 0x40
0x908 DUP1
0x909 MLOAD
0x90a SWAP2
0x90b ISZERO
0x90c ISZERO
0x90d DUP3
0x90e MSTORE
0x90f MLOAD
0x910 SWAP1
0x911 DUP2
0x912 SWAP1
0x913 SUB
0x914 PUSH1 0x20
0x916 ADD
0x917 SWAP1
0x918 RETURN
0x919 JUMPDEST
0x91a CALLVALUE
0x91b PUSH2 0x0
0x91e JUMPI
---
0x8fb: V795 = 0xda
0x8fe: V796 = 0x4
0x900: V797 = CALLDATALOAD 0x4
0x901: V798 = 0x4a5
0x904: THROW 
0x905: JUMPDEST 
0x906: V799 = 0x40
0x909: V800 = M[0x40]
0x90b: V801 = ISZERO S0
0x90c: V802 = ISZERO V801
0x90e: M[V800] = V802
0x90f: V803 = M[0x40]
0x913: V804 = SUB V800 V803
0x914: V805 = 0x20
0x916: V806 = ADD 0x20 V804
0x918: RETURN V803 V806
0x919: JUMPDEST 
0x91a: V807 = CALLVALUE
0x91b: V808 = 0x0
0x91e: THROWI V807
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V797]
Exit stack: []

================================

Block 0x91f
[0x91f:0x947]
---
Predecessors: [0x8fb]
Successors: [0x948]
---
0x91f PUSH2 0xfb
0x922 PUSH2 0x537
0x925 JUMP
0x926 JUMPDEST
0x927 PUSH1 0x40
0x929 DUP1
0x92a MLOAD
0x92b PUSH1 0x1
0x92d PUSH1 0xa0
0x92f PUSH1 0x2
0x931 EXP
0x932 SUB
0x933 SWAP1
0x934 SWAP3
0x935 AND
0x936 DUP3
0x937 MSTORE
0x938 MLOAD
0x939 SWAP1
0x93a DUP2
0x93b SWAP1
0x93c SUB
0x93d PUSH1 0x20
0x93f ADD
0x940 SWAP1
0x941 RETURN
0x942 JUMPDEST
0x943 CALLVALUE
0x944 PUSH2 0x0
0x947 JUMPI
---
0x91f: V809 = 0xfb
0x922: V810 = 0x537
0x925: THROW 
0x926: JUMPDEST 
0x927: V811 = 0x40
0x92a: V812 = M[0x40]
0x92b: V813 = 0x1
0x92d: V814 = 0xa0
0x92f: V815 = 0x2
0x931: V816 = EXP 0x2 0xa0
0x932: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x935: V818 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x937: M[V812] = V818
0x938: V819 = M[0x40]
0x93c: V820 = SUB V812 V819
0x93d: V821 = 0x20
0x93f: V822 = ADD 0x20 V820
0x941: RETURN V819 V822
0x942: JUMPDEST 
0x943: V823 = CALLVALUE
0x944: V824 = 0x0
0x947: THROWI V823
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfb]
Exit stack: []

================================

Block 0x948
[0x948:0x966]
---
Predecessors: [0x91f]
Successors: [0x967]
---
0x948 PUSH2 0x124
0x94b PUSH2 0x546
0x94e JUMP
0x94f JUMPDEST
0x950 PUSH1 0x40
0x952 DUP1
0x953 MLOAD
0x954 SWAP2
0x955 DUP3
0x956 MSTORE
0x957 MLOAD
0x958 SWAP1
0x959 DUP2
0x95a SWAP1
0x95b SUB
0x95c PUSH1 0x20
0x95e ADD
0x95f SWAP1
0x960 RETURN
0x961 JUMPDEST
0x962 CALLVALUE
0x963 PUSH2 0x0
0x966 JUMPI
---
0x948: V825 = 0x124
0x94b: V826 = 0x546
0x94e: THROW 
0x94f: JUMPDEST 
0x950: V827 = 0x40
0x953: V828 = M[0x40]
0x956: M[V828] = S0
0x957: V829 = M[0x40]
0x95b: V830 = SUB V828 V829
0x95c: V831 = 0x20
0x95e: V832 = ADD 0x20 V830
0x960: RETURN V829 V832
0x961: JUMPDEST 
0x962: V833 = CALLVALUE
0x963: V834 = 0x0
0x966: THROWI V833
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0x967
[0x967:0x987]
---
Predecessors: [0x948]
Successors: [0x988]
---
0x967 PUSH2 0xda
0x96a PUSH2 0x54c
0x96d JUMP
0x96e JUMPDEST
0x96f PUSH1 0x40
0x971 DUP1
0x972 MLOAD
0x973 SWAP2
0x974 ISZERO
0x975 ISZERO
0x976 DUP3
0x977 MSTORE
0x978 MLOAD
0x979 SWAP1
0x97a DUP2
0x97b SWAP1
0x97c SUB
0x97d PUSH1 0x20
0x97f ADD
0x980 SWAP1
0x981 RETURN
0x982 JUMPDEST
0x983 CALLVALUE
0x984 PUSH2 0x0
0x987 JUMPI
---
0x967: V835 = 0xda
0x96a: V836 = 0x54c
0x96d: THROW 
0x96e: JUMPDEST 
0x96f: V837 = 0x40
0x972: V838 = M[0x40]
0x974: V839 = ISZERO S0
0x975: V840 = ISZERO V839
0x977: M[V838] = V840
0x978: V841 = M[0x40]
0x97c: V842 = SUB V838 V841
0x97d: V843 = 0x20
0x97f: V844 = ADD 0x20 V842
0x981: RETURN V841 V844
0x982: JUMPDEST 
0x983: V845 = CALLVALUE
0x984: V846 = 0x0
0x987: THROWI V845
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda]
Exit stack: []

================================

Block 0x988
[0x988:0x9a6]
---
Predecessors: [0x967]
Successors: [0x9a7]
---
0x988 PUSH2 0x124
0x98b PUSH2 0x55a
0x98e JUMP
0x98f JUMPDEST
0x990 PUSH1 0x40
0x992 DUP1
0x993 MLOAD
0x994 SWAP2
0x995 DUP3
0x996 MSTORE
0x997 MLOAD
0x998 SWAP1
0x999 DUP2
0x99a SWAP1
0x99b SUB
0x99c PUSH1 0x20
0x99e ADD
0x99f SWAP1
0x9a0 RETURN
0x9a1 JUMPDEST
0x9a2 CALLVALUE
0x9a3 PUSH2 0x0
0x9a6 JUMPI
---
0x988: V847 = 0x124
0x98b: V848 = 0x55a
0x98e: THROW 
0x98f: JUMPDEST 
0x990: V849 = 0x40
0x993: V850 = M[0x40]
0x996: M[V850] = S0
0x997: V851 = M[0x40]
0x99b: V852 = SUB V850 V851
0x99c: V853 = 0x20
0x99e: V854 = ADD 0x20 V852
0x9a0: RETURN V851 V854
0x9a1: JUMPDEST 
0x9a2: V855 = CALLVALUE
0x9a3: V856 = 0x0
0x9a6: THROWI V855
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0x9a7
[0x9a7:0x9d9]
---
Predecessors: [0x988]
Successors: [0x9da]
---
0x9a7 PUSH2 0xfb
0x9aa PUSH2 0x560
0x9ad JUMP
0x9ae JUMPDEST
0x9af PUSH1 0x40
0x9b1 DUP1
0x9b2 MLOAD
0x9b3 PUSH1 0x1
0x9b5 PUSH1 0xa0
0x9b7 PUSH1 0x2
0x9b9 EXP
0x9ba SUB
0x9bb SWAP1
0x9bc SWAP3
0x9bd AND
0x9be DUP3
0x9bf MSTORE
0x9c0 MLOAD
0x9c1 SWAP1
0x9c2 DUP2
0x9c3 SWAP1
0x9c4 SUB
0x9c5 PUSH1 0x20
0x9c7 ADD
0x9c8 SWAP1
0x9c9 RETURN
0x9ca JUMPDEST
0x9cb PUSH2 0xc8
0x9ce PUSH2 0x56f
0x9d1 JUMP
0x9d2 JUMPDEST
0x9d3 STOP
0x9d4 JUMPDEST
0x9d5 CALLVALUE
0x9d6 PUSH2 0x0
0x9d9 JUMPI
---
0x9a7: V857 = 0xfb
0x9aa: V858 = 0x560
0x9ad: THROW 
0x9ae: JUMPDEST 
0x9af: V859 = 0x40
0x9b2: V860 = M[0x40]
0x9b3: V861 = 0x1
0x9b5: V862 = 0xa0
0x9b7: V863 = 0x2
0x9b9: V864 = EXP 0x2 0xa0
0x9ba: V865 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9bd: V866 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: M[V860] = V866
0x9c0: V867 = M[0x40]
0x9c4: V868 = SUB V860 V867
0x9c5: V869 = 0x20
0x9c7: V870 = ADD 0x20 V868
0x9c9: RETURN V867 V870
0x9ca: JUMPDEST 
0x9cb: V871 = 0xc8
0x9ce: V872 = 0x56f
0x9d1: THROW 
0x9d2: JUMPDEST 
0x9d3: STOP 
0x9d4: JUMPDEST 
0x9d5: V873 = CALLVALUE
0x9d6: V874 = 0x0
0x9d9: THROWI V873
---
Entry stack: []
Stack pops: 0
Stack additions: [0xfb, 0xc8]
Exit stack: []

================================

Block 0x9da
[0x9da:0x9f8]
---
Predecessors: [0x9a7]
Successors: [0x9f9]
---
0x9da PUSH2 0x124
0x9dd PUSH2 0x5c1
0x9e0 JUMP
0x9e1 JUMPDEST
0x9e2 PUSH1 0x40
0x9e4 DUP1
0x9e5 MLOAD
0x9e6 SWAP2
0x9e7 DUP3
0x9e8 MSTORE
0x9e9 MLOAD
0x9ea SWAP1
0x9eb DUP2
0x9ec SWAP1
0x9ed SUB
0x9ee PUSH1 0x20
0x9f0 ADD
0x9f1 SWAP1
0x9f2 RETURN
0x9f3 JUMPDEST
0x9f4 CALLVALUE
0x9f5 PUSH2 0x0
0x9f8 JUMPI
---
0x9da: V875 = 0x124
0x9dd: V876 = 0x5c1
0x9e0: THROW 
0x9e1: JUMPDEST 
0x9e2: V877 = 0x40
0x9e5: V878 = M[0x40]
0x9e8: M[V878] = S0
0x9e9: V879 = M[0x40]
0x9ed: V880 = SUB V878 V879
0x9ee: V881 = 0x20
0x9f0: V882 = ADD 0x20 V880
0x9f2: RETURN V879 V882
0x9f3: JUMPDEST 
0x9f4: V883 = CALLVALUE
0x9f5: V884 = 0x0
0x9f8: THROWI V883
---
Entry stack: []
Stack pops: 0
Stack additions: [0x124]
Exit stack: []

================================

Block 0x9f9
[0x9f9:0xa0d]
---
Predecessors: [0x9da]
Successors: [0xa0e]
---
0x9f9 PUSH2 0xc8
0x9fc PUSH1 0x4
0x9fe CALLDATALOAD
0x9ff PUSH1 0x24
0xa01 CALLDATALOAD
0xa02 PUSH2 0x5c7
0xa05 JUMP
0xa06 JUMPDEST
0xa07 STOP
0xa08 JUMPDEST
0xa09 CALLVALUE
0xa0a PUSH2 0x0
0xa0d JUMPI
---
0x9f9: V885 = 0xc8
0x9fc: V886 = 0x4
0x9fe: V887 = CALLDATALOAD 0x4
0x9ff: V888 = 0x24
0xa01: V889 = CALLDATALOAD 0x24
0xa02: V890 = 0x5c7
0xa05: THROW 
0xa06: JUMPDEST 
0xa07: STOP 
0xa08: JUMPDEST 
0xa09: V891 = CALLVALUE
0xa0a: V892 = 0x0
0xa0d: THROWI V891
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V887, V889]
Exit stack: []

================================

Block 0xa0e
[0xa0e:0xa2e]
---
Predecessors: [0x9f9]
Successors: [0xa2f]
---
0xa0e PUSH2 0xda
0xa11 PUSH2 0x65c
0xa14 JUMP
0xa15 JUMPDEST
0xa16 PUSH1 0x40
0xa18 DUP1
0xa19 MLOAD
0xa1a SWAP2
0xa1b ISZERO
0xa1c ISZERO
0xa1d DUP3
0xa1e MSTORE
0xa1f MLOAD
0xa20 SWAP1
0xa21 DUP2
0xa22 SWAP1
0xa23 SUB
0xa24 PUSH1 0x20
0xa26 ADD
0xa27 SWAP1
0xa28 RETURN
0xa29 JUMPDEST
0xa2a CALLVALUE
0xa2b PUSH2 0x0
0xa2e JUMPI
---
0xa0e: V893 = 0xda
0xa11: V894 = 0x65c
0xa14: THROW 
0xa15: JUMPDEST 
0xa16: V895 = 0x40
0xa19: V896 = M[0x40]
0xa1b: V897 = ISZERO S0
0xa1c: V898 = ISZERO V897
0xa1e: M[V896] = V898
0xa1f: V899 = M[0x40]
0xa23: V900 = SUB V896 V899
0xa24: V901 = 0x20
0xa26: V902 = ADD 0x20 V900
0xa28: RETURN V899 V902
0xa29: JUMPDEST 
0xa2a: V903 = CALLVALUE
0xa2b: V904 = 0x0
0xa2e: THROWI V903
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda]
Exit stack: []

================================

Block 0xa2f
[0xa2f:0xa5f]
---
Predecessors: [0xa0e]
Successors: [0xa60]
---
0xa2f PUSH2 0xda
0xa32 PUSH1 0x4
0xa34 CALLDATALOAD
0xa35 PUSH1 0x24
0xa37 CALLDATALOAD
0xa38 PUSH2 0x665
0xa3b JUMP
0xa3c JUMPDEST
0xa3d PUSH1 0x40
0xa3f DUP1
0xa40 MLOAD
0xa41 SWAP2
0xa42 ISZERO
0xa43 ISZERO
0xa44 DUP3
0xa45 MSTORE
0xa46 MLOAD
0xa47 SWAP1
0xa48 DUP2
0xa49 SWAP1
0xa4a SUB
0xa4b PUSH1 0x20
0xa4d ADD
0xa4e SWAP1
0xa4f RETURN
0xa50 JUMPDEST
0xa51 PUSH2 0xc8
0xa54 PUSH2 0x277
0xa57 JUMP
0xa58 JUMPDEST
0xa59 STOP
0xa5a JUMPDEST
0xa5b CALLVALUE
0xa5c PUSH2 0x0
0xa5f JUMPI
---
0xa2f: V905 = 0xda
0xa32: V906 = 0x4
0xa34: V907 = CALLDATALOAD 0x4
0xa35: V908 = 0x24
0xa37: V909 = CALLDATALOAD 0x24
0xa38: V910 = 0x665
0xa3b: THROW 
0xa3c: JUMPDEST 
0xa3d: V911 = 0x40
0xa40: V912 = M[0x40]
0xa42: V913 = ISZERO S0
0xa43: V914 = ISZERO V913
0xa45: M[V912] = V914
0xa46: V915 = M[0x40]
0xa4a: V916 = SUB V912 V915
0xa4b: V917 = 0x20
0xa4d: V918 = ADD 0x20 V916
0xa4f: RETURN V915 V918
0xa50: JUMPDEST 
0xa51: V919 = 0xc8
0xa54: V920 = 0x277
0xa57: THROW 
0xa58: JUMPDEST 
0xa59: STOP 
0xa5a: JUMPDEST 
0xa5b: V921 = CALLVALUE
0xa5c: V922 = 0x0
0xa5f: THROWI V921
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V907, V909, 0xc8]
Exit stack: []

================================

Block 0xa60
[0xa60:0xa83]
---
Predecessors: [0xa2f]
Successors: [0xa84]
---
0xa60 PUSH2 0xda
0xa63 PUSH1 0x4
0xa65 CALLDATALOAD
0xa66 PUSH2 0x73a
0xa69 JUMP
0xa6a JUMPDEST
0xa6b PUSH1 0x40
0xa6d DUP1
0xa6e MLOAD
0xa6f SWAP2
0xa70 ISZERO
0xa71 ISZERO
0xa72 DUP3
0xa73 MSTORE
0xa74 MLOAD
0xa75 SWAP1
0xa76 DUP2
0xa77 SWAP1
0xa78 SUB
0xa79 PUSH1 0x20
0xa7b ADD
0xa7c SWAP1
0xa7d RETURN
0xa7e JUMPDEST
0xa7f CALLVALUE
0xa80 PUSH2 0x0
0xa83 JUMPI
---
0xa60: V923 = 0xda
0xa63: V924 = 0x4
0xa65: V925 = CALLDATALOAD 0x4
0xa66: V926 = 0x73a
0xa69: THROW 
0xa6a: JUMPDEST 
0xa6b: V927 = 0x40
0xa6e: V928 = M[0x40]
0xa70: V929 = ISZERO S0
0xa71: V930 = ISZERO V929
0xa73: M[V928] = V930
0xa74: V931 = M[0x40]
0xa78: V932 = SUB V928 V931
0xa79: V933 = 0x20
0xa7b: V934 = ADD 0x20 V932
0xa7d: RETURN V931 V934
0xa7e: JUMPDEST 
0xa7f: V935 = CALLVALUE
0xa80: V936 = 0x0
0xa83: THROWI V935
---
Entry stack: []
Stack pops: 0
Stack additions: [0xda, V925]
Exit stack: []

================================

Block 0xa84
[0xa84:0xa95]
---
Predecessors: [0xa60]
Successors: [0xa96]
---
0xa84 PUSH2 0xc8
0xa87 PUSH1 0x4
0xa89 CALLDATALOAD
0xa8a PUSH2 0x800
0xa8d JUMP
0xa8e JUMPDEST
0xa8f STOP
0xa90 JUMPDEST
0xa91 CALLVALUE
0xa92 PUSH2 0x0
0xa95 JUMPI
---
0xa84: V937 = 0xc8
0xa87: V938 = 0x4
0xa89: V939 = CALLDATALOAD 0x4
0xa8a: V940 = 0x800
0xa8d: THROW 
0xa8e: JUMPDEST 
0xa8f: STOP 
0xa90: JUMPDEST 
0xa91: V941 = CALLVALUE
0xa92: V942 = 0x0
0xa95: THROWI V941
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V939]
Exit stack: []

================================

Block 0xa96
[0xa96:0xabd]
---
Predecessors: [0xa84]
Successors: [0xabe]
---
0xa96 PUSH2 0xc8
0xa99 PUSH1 0x4
0xa9b CALLDATALOAD
0xa9c PUSH2 0x98c
0xa9f JUMP
0xaa0 JUMPDEST
0xaa1 STOP
0xaa2 JUMPDEST
0xaa3 PUSH1 0x0
0xaa5 PUSH1 0x0
0xaa7 PUSH1 0x0
0xaa9 PUSH1 0x5
0xaab PUSH1 0x1
0xaad SWAP1
0xaae SLOAD
0xaaf SWAP1
0xab0 PUSH2 0x100
0xab3 EXP
0xab4 SWAP1
0xab5 DIV
0xab6 PUSH1 0xff
0xab8 AND
0xab9 DUP1
0xaba PUSH2 0x2a6
0xabd JUMPI
---
0xa96: V943 = 0xc8
0xa99: V944 = 0x4
0xa9b: V945 = CALLDATALOAD 0x4
0xa9c: V946 = 0x98c
0xa9f: THROW 
0xaa0: JUMPDEST 
0xaa1: STOP 
0xaa2: JUMPDEST 
0xaa3: V947 = 0x0
0xaa5: V948 = 0x0
0xaa7: V949 = 0x0
0xaa9: V950 = 0x5
0xaab: V951 = 0x1
0xaae: V952 = S[0x5]
0xab0: V953 = 0x100
0xab3: V954 = EXP 0x100 0x1
0xab5: V955 = DIV V952 0x100
0xab6: V956 = 0xff
0xab8: V957 = AND 0xff V955
0xaba: V958 = 0x2a6
0xabd: THROWI V957
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc8, V945, V957, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xabe
[0xabe:0xad0]
---
Predecessors: [0xa96]
Successors: [0xad1]
---
0xabe POP
0xabf PUSH1 0x0
0xac1 SLOAD
0xac2 CALLER
0xac3 PUSH1 0x1
0xac5 PUSH1 0xa0
0xac7 PUSH1 0x2
0xac9 EXP
0xaca SUB
0xacb SWAP1
0xacc DUP2
0xacd AND
0xace SWAP2
0xacf AND
0xad0 EQ
---
0xabf: V959 = 0x0
0xac1: V960 = S[0x0]
0xac2: V961 = CALLER
0xac3: V962 = 0x1
0xac5: V963 = 0xa0
0xac7: V964 = 0x2
0xac9: V965 = EXP 0x2 0xa0
0xaca: V966 = SUB 0x10000000000000000000000000000000000000000 0x1
0xacd: V967 = AND 0xffffffffffffffffffffffffffffffffffffffff V961
0xacf: V968 = AND V960 0xffffffffffffffffffffffffffffffffffffffff
0xad0: V969 = EQ V968 V967
---
Entry stack: [0x0, 0x0, 0x0, V957]
Stack pops: 1
Stack additions: [V969]
Exit stack: [0x0, 0x0, 0x0, V969]

================================

Block 0xad1
[0xad1:0xad6]
---
Predecessors: [0xabe]
Successors: [0xad7]
---
0xad1 JUMPDEST
0xad2 ISZERO
0xad3 PUSH2 0x46f
0xad6 JUMPI
---
0xad1: JUMPDEST 
0xad2: V970 = ISZERO V969
0xad3: V971 = 0x46f
0xad6: THROWI V970
---
Entry stack: [0x0, 0x0, 0x0, V969]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0, 0x0]

================================

Block 0xad7
[0xad7:0xae0]
---
Predecessors: [0xad1]
Successors: [0xae1]
---
0xad7 PUSH1 0x3
0xad9 SLOAD
0xada CALLVALUE
0xadb DUP2
0xadc ISZERO
0xadd PUSH2 0x0
0xae0 JUMPI
---
0xad7: V972 = 0x3
0xad9: V973 = S[0x3]
0xada: V974 = CALLVALUE
0xadc: V975 = ISZERO V973
0xadd: V976 = 0x0
0xae0: THROWI V975
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V973, V974]
Exit stack: [0x0, 0x0, 0x0, V973, V974]

================================

Block 0xae1
[0xae1:0xb49]
---
Predecessors: [0xad7]
Successors: [0xb4a]
---
0xae1 DIV
0xae2 SWAP3
0xae3 POP
0xae4 PUSH1 0x4
0xae6 SLOAD
0xae7 PUSH1 0x1
0xae9 PUSH1 0x0
0xaeb SWAP1
0xaec SLOAD
0xaed SWAP1
0xaee PUSH2 0x100
0xaf1 EXP
0xaf2 SWAP1
0xaf3 DIV
0xaf4 PUSH1 0x1
0xaf6 PUSH1 0xa0
0xaf8 PUSH1 0x2
0xafa EXP
0xafb SUB
0xafc AND
0xafd PUSH1 0x1
0xaff PUSH1 0xa0
0xb01 PUSH1 0x2
0xb03 EXP
0xb04 SUB
0xb05 AND
0xb06 PUSH4 0x70a08231
0xb0b ADDRESS
0xb0c PUSH1 0x0
0xb0e PUSH1 0x40
0xb10 MLOAD
0xb11 PUSH1 0x20
0xb13 ADD
0xb14 MSTORE
0xb15 PUSH1 0x40
0xb17 MLOAD
0xb18 DUP3
0xb19 PUSH1 0xe0
0xb1b PUSH1 0x2
0xb1d EXP
0xb1e MUL
0xb1f DUP2
0xb20 MSTORE
0xb21 PUSH1 0x4
0xb23 ADD
0xb24 DUP1
0xb25 DUP3
0xb26 PUSH1 0x1
0xb28 PUSH1 0xa0
0xb2a PUSH1 0x2
0xb2c EXP
0xb2d SUB
0xb2e AND
0xb2f DUP2
0xb30 MSTORE
0xb31 PUSH1 0x20
0xb33 ADD
0xb34 SWAP2
0xb35 POP
0xb36 POP
0xb37 PUSH1 0x20
0xb39 PUSH1 0x40
0xb3b MLOAD
0xb3c DUP1
0xb3d DUP4
0xb3e SUB
0xb3f DUP2
0xb40 PUSH1 0x0
0xb42 DUP8
0xb43 DUP1
0xb44 EXTCODESIZE
0xb45 ISZERO
0xb46 PUSH2 0x0
0xb49 JUMPI
---
0xae1: V977 = DIV V974 V973
0xae4: V978 = 0x4
0xae6: V979 = S[0x4]
0xae7: V980 = 0x1
0xae9: V981 = 0x0
0xaec: V982 = S[0x1]
0xaee: V983 = 0x100
0xaf1: V984 = EXP 0x100 0x0
0xaf3: V985 = DIV V982 0x1
0xaf4: V986 = 0x1
0xaf6: V987 = 0xa0
0xaf8: V988 = 0x2
0xafa: V989 = EXP 0x2 0xa0
0xafb: V990 = SUB 0x10000000000000000000000000000000000000000 0x1
0xafc: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V985
0xafd: V992 = 0x1
0xaff: V993 = 0xa0
0xb01: V994 = 0x2
0xb03: V995 = EXP 0x2 0xa0
0xb04: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb05: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V991
0xb06: V998 = 0x70a08231
0xb0b: V999 = ADDRESS
0xb0c: V1000 = 0x0
0xb0e: V1001 = 0x40
0xb10: V1002 = M[0x40]
0xb11: V1003 = 0x20
0xb13: V1004 = ADD 0x20 V1002
0xb14: M[V1004] = 0x0
0xb15: V1005 = 0x40
0xb17: V1006 = M[0x40]
0xb19: V1007 = 0xe0
0xb1b: V1008 = 0x2
0xb1d: V1009 = EXP 0x2 0xe0
0xb1e: V1010 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xb20: M[V1006] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xb21: V1011 = 0x4
0xb23: V1012 = ADD 0x4 V1006
0xb26: V1013 = 0x1
0xb28: V1014 = 0xa0
0xb2a: V1015 = 0x2
0xb2c: V1016 = EXP 0x2 0xa0
0xb2d: V1017 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2e: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff V999
0xb30: M[V1012] = V1018
0xb31: V1019 = 0x20
0xb33: V1020 = ADD 0x20 V1012
0xb37: V1021 = 0x20
0xb39: V1022 = 0x40
0xb3b: V1023 = M[0x40]
0xb3e: V1024 = SUB V1020 V1023
0xb40: V1025 = 0x0
0xb44: V1026 = EXTCODESIZE V997
0xb45: V1027 = ISZERO V1026
0xb46: V1028 = 0x0
0xb49: THROWI V1027
---
Entry stack: [0x0, 0x0, 0x0, V973, V974]
Stack pops: 5
Stack additions: [V977, S3, S2, V979, V997, 0x70a08231, V1020, 0x20, V1023, V1024, V1023, 0x0, V997]
Exit stack: [V977, 0x0, 0x0, V979, V997, 0x70a08231, V1020, 0x20, V1023, V1024, V1023, 0x0, V997]

================================

Block 0xb4a
[0xb4a:0xb53]
---
Predecessors: [0xae1]
Successors: [0xb54]
---
0xb4a PUSH1 0x32
0xb4c GAS
0xb4d SUB
0xb4e CALL
0xb4f ISZERO
0xb50 PUSH2 0x0
0xb53 JUMPI
---
0xb4a: V1029 = 0x32
0xb4c: V1030 = GAS
0xb4d: V1031 = SUB V1030 0x32
0xb4e: V1032 = CALL V1031 V997 0x0 V1023 V1024 V1023 0x20
0xb4f: V1033 = ISZERO V1032
0xb50: V1034 = 0x0
0xb53: THROWI V1033
---
Entry stack: [V977, 0x0, 0x0, V979, V997, 0x70a08231, V1020, 0x20, V1023, V1024, V1023, 0x0, V997]
Stack pops: 6
Stack additions: []
Exit stack: [V977, 0x0, 0x0, V979, V997, 0x70a08231, V1020]

================================

Block 0xb54
[0xb54:0xb61]
---
Predecessors: [0xb4a]
Successors: [0xb62]
---
0xb54 POP
0xb55 POP
0xb56 PUSH1 0x40
0xb58 MLOAD
0xb59 MLOAD
0xb5a SWAP1
0xb5b POP
0xb5c DUP2
0xb5d ISZERO
0xb5e PUSH2 0x0
0xb61 JUMPI
---
0xb56: V1035 = 0x40
0xb58: V1036 = M[0x40]
0xb59: V1037 = M[V1036]
0xb5d: V1038 = ISZERO V979
0xb5e: V1039 = 0x0
0xb61: THROWI V1038
---
Entry stack: [V977, 0x0, 0x0, V979, V997, 0x70a08231, V1020]
Stack pops: 4
Stack additions: [S3, V1037]
Exit stack: [V977, 0x0, 0x0, V979, V1037]

================================

Block 0xb62
[0xb62:0xb70]
---
Predecessors: [0xb54]
Successors: [0xb71]
---
0xb62 DIV
0xb63 SWAP2
0xb64 POP
0xb65 PUSH1 0x0
0xb67 SWAP1
0xb68 POP
0xb69 DUP2
0xb6a DUP4
0xb6b GT
0xb6c ISZERO
0xb6d PUSH2 0x384
0xb70 JUMPI
---
0xb62: V1040 = DIV V1037 V979
0xb65: V1041 = 0x0
0xb6b: V1042 = GT V977 V1040
0xb6c: V1043 = ISZERO V1042
0xb6d: V1044 = 0x384
0xb70: THROWI V1043
---
Entry stack: [V977, 0x0, 0x0, V979, V1037]
Stack pops: 5
Stack additions: [S4, V1040, 0x0]
Exit stack: [V977, V1040, 0x0]

================================

Block 0xb71
[0xb71:0xbaa]
---
Predecessors: [0xb62]
Successors: [0xbab]
---
0xb71 POP
0xb72 PUSH1 0x3
0xb74 SLOAD
0xb75 PUSH1 0x40
0xb77 MLOAD
0xb78 SWAP2
0xb79 SWAP3
0xb7a POP
0xb7b DUP3
0xb7c SWAP2
0xb7d SWAP1
0xb7e DUP3
0xb7f MUL
0xb80 CALLVALUE
0xb81 SUB
0xb82 SWAP1
0xb83 PUSH1 0x1
0xb85 PUSH1 0xa0
0xb87 PUSH1 0x2
0xb89 EXP
0xb8a SUB
0xb8b CALLER
0xb8c AND
0xb8d SWAP1
0xb8e DUP3
0xb8f ISZERO
0xb90 PUSH2 0x8fc
0xb93 MUL
0xb94 SWAP1
0xb95 DUP4
0xb96 SWAP1
0xb97 PUSH1 0x0
0xb99 DUP2
0xb9a DUP2
0xb9b DUP2
0xb9c DUP6
0xb9d DUP9
0xb9e DUP9
0xb9f CALL
0xba0 SWAP4
0xba1 POP
0xba2 POP
0xba3 POP
0xba4 POP
0xba5 ISZERO
0xba6 ISZERO
0xba7 PUSH2 0x384
0xbaa JUMPI
---
0xb72: V1045 = 0x3
0xb74: V1046 = S[0x3]
0xb75: V1047 = 0x40
0xb77: V1048 = M[0x40]
0xb7f: V1049 = MUL V1040 V1046
0xb80: V1050 = CALLVALUE
0xb81: V1051 = SUB V1050 V1049
0xb83: V1052 = 0x1
0xb85: V1053 = 0xa0
0xb87: V1054 = 0x2
0xb89: V1055 = EXP 0x2 0xa0
0xb8a: V1056 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8b: V1057 = CALLER
0xb8c: V1058 = AND V1057 0xffffffffffffffffffffffffffffffffffffffff
0xb8f: V1059 = ISZERO V1051
0xb90: V1060 = 0x8fc
0xb93: V1061 = MUL 0x8fc V1059
0xb97: V1062 = 0x0
0xb9f: V1063 = CALL V1061 V1058 V1051 V1048 0x0 V1048 0x0
0xba5: V1064 = ISZERO V1063
0xba6: V1065 = ISZERO V1064
0xba7: V1066 = 0x384
0xbaa: THROWI V1065
---
Entry stack: [V977, V1040, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V1051]
Exit stack: [V1040, V1040, V1051]

================================

Block 0xbab
[0xbab:0xbaf]
---
Predecessors: [0xb71]
Successors: [0xbb0]
---
0xbab PUSH2 0x0
0xbae JUMP
0xbaf JUMPDEST
---
0xbab: V1067 = 0x0
0xbae: THROW 
0xbaf: JUMPDEST 
---
Entry stack: [V1040, V1040, V1051]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb0
[0xbb0:0xbb9]
---
Predecessors: [0xbab]
Successors: [0xbba]
---
0xbb0 JUMPDEST
0xbb1 PUSH1 0x0
0xbb3 DUP4
0xbb4 GT
0xbb5 ISZERO
0xbb6 PUSH2 0x41a
0xbb9 JUMPI
---
0xbb0: JUMPDEST 
0xbb1: V1068 = 0x0
0xbb4: V1069 = GT S2 0x0
0xbb5: V1070 = ISZERO V1069
0xbb6: V1071 = 0x41a
0xbb9: THROWI V1070
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0xbba
[0xbba:0xc28]
---
Predecessors: [0xbb0]
Successors: [0xc29]
---
0xbba PUSH1 0x1
0xbbc PUSH1 0x0
0xbbe SWAP1
0xbbf SLOAD
0xbc0 SWAP1
0xbc1 PUSH2 0x100
0xbc4 EXP
0xbc5 SWAP1
0xbc6 DIV
0xbc7 PUSH1 0x1
0xbc9 PUSH1 0xa0
0xbcb PUSH1 0x2
0xbcd EXP
0xbce SUB
0xbcf AND
0xbd0 PUSH1 0x1
0xbd2 PUSH1 0xa0
0xbd4 PUSH1 0x2
0xbd6 EXP
0xbd7 SUB
0xbd8 AND
0xbd9 PUSH4 0xa9059cbb
0xbde CALLER
0xbdf PUSH1 0x4
0xbe1 SLOAD
0xbe2 DUP7
0xbe3 MUL
0xbe4 PUSH1 0x0
0xbe6 PUSH1 0x40
0xbe8 MLOAD
0xbe9 PUSH1 0x20
0xbeb ADD
0xbec MSTORE
0xbed PUSH1 0x40
0xbef MLOAD
0xbf0 DUP4
0xbf1 PUSH1 0xe0
0xbf3 PUSH1 0x2
0xbf5 EXP
0xbf6 MUL
0xbf7 DUP2
0xbf8 MSTORE
0xbf9 PUSH1 0x4
0xbfb ADD
0xbfc DUP1
0xbfd DUP4
0xbfe PUSH1 0x1
0xc00 PUSH1 0xa0
0xc02 PUSH1 0x2
0xc04 EXP
0xc05 SUB
0xc06 AND
0xc07 DUP2
0xc08 MSTORE
0xc09 PUSH1 0x20
0xc0b ADD
0xc0c DUP3
0xc0d DUP2
0xc0e MSTORE
0xc0f PUSH1 0x20
0xc11 ADD
0xc12 SWAP3
0xc13 POP
0xc14 POP
0xc15 POP
0xc16 PUSH1 0x20
0xc18 PUSH1 0x40
0xc1a MLOAD
0xc1b DUP1
0xc1c DUP4
0xc1d SUB
0xc1e DUP2
0xc1f PUSH1 0x0
0xc21 DUP8
0xc22 DUP1
0xc23 EXTCODESIZE
0xc24 ISZERO
0xc25 PUSH2 0x0
0xc28 JUMPI
---
0xbba: V1072 = 0x1
0xbbc: V1073 = 0x0
0xbbf: V1074 = S[0x1]
0xbc1: V1075 = 0x100
0xbc4: V1076 = EXP 0x100 0x0
0xbc6: V1077 = DIV V1074 0x1
0xbc7: V1078 = 0x1
0xbc9: V1079 = 0xa0
0xbcb: V1080 = 0x2
0xbcd: V1081 = EXP 0x2 0xa0
0xbce: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcf: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1077
0xbd0: V1084 = 0x1
0xbd2: V1085 = 0xa0
0xbd4: V1086 = 0x2
0xbd6: V1087 = EXP 0x2 0xa0
0xbd7: V1088 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd8: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0xbd9: V1090 = 0xa9059cbb
0xbde: V1091 = CALLER
0xbdf: V1092 = 0x4
0xbe1: V1093 = S[0x4]
0xbe3: V1094 = MUL S2 V1093
0xbe4: V1095 = 0x0
0xbe6: V1096 = 0x40
0xbe8: V1097 = M[0x40]
0xbe9: V1098 = 0x20
0xbeb: V1099 = ADD 0x20 V1097
0xbec: M[V1099] = 0x0
0xbed: V1100 = 0x40
0xbef: V1101 = M[0x40]
0xbf1: V1102 = 0xe0
0xbf3: V1103 = 0x2
0xbf5: V1104 = EXP 0x2 0xe0
0xbf6: V1105 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xbf8: M[V1101] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbf9: V1106 = 0x4
0xbfb: V1107 = ADD 0x4 V1101
0xbfe: V1108 = 0x1
0xc00: V1109 = 0xa0
0xc02: V1110 = 0x2
0xc04: V1111 = EXP 0x2 0xa0
0xc05: V1112 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc06: V1113 = AND 0xffffffffffffffffffffffffffffffffffffffff V1091
0xc08: M[V1107] = V1113
0xc09: V1114 = 0x20
0xc0b: V1115 = ADD 0x20 V1107
0xc0e: M[V1115] = V1094
0xc0f: V1116 = 0x20
0xc11: V1117 = ADD 0x20 V1115
0xc16: V1118 = 0x20
0xc18: V1119 = 0x40
0xc1a: V1120 = M[0x40]
0xc1d: V1121 = SUB V1117 V1120
0xc1f: V1122 = 0x0
0xc23: V1123 = EXTCODESIZE V1089
0xc24: V1124 = ISZERO V1123
0xc25: V1125 = 0x0
0xc28: THROWI V1124
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1089, 0xa9059cbb, V1117, 0x20, V1120, V1121, V1120, 0x0, V1089]
Exit stack: [S2, S1, S0, V1089, 0xa9059cbb, V1117, 0x20, V1120, V1121, V1120, 0x0, V1089]

================================

Block 0xc29
[0xc29:0xc32]
---
Predecessors: [0xbba]
Successors: [0xc33]
---
0xc29 PUSH1 0x32
0xc2b GAS
0xc2c SUB
0xc2d CALL
0xc2e ISZERO
0xc2f PUSH2 0x0
0xc32 JUMPI
---
0xc29: V1126 = 0x32
0xc2b: V1127 = GAS
0xc2c: V1128 = SUB V1127 0x32
0xc2d: V1129 = CALL V1128 V1089 0x0 V1120 V1121 V1120 0x20
0xc2e: V1130 = ISZERO V1129
0xc2f: V1131 = 0x0
0xc32: THROWI V1130
---
Entry stack: [S11, S10, S9, V1089, 0xa9059cbb, V1117, 0x20, V1120, V1121, V1120, 0x0, V1089]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1089, 0xa9059cbb, V1117]

================================

Block 0xc33
[0xc33:0xc40]
---
Predecessors: [0xc29]
Successors: [0xc41]
---
0xc33 POP
0xc34 POP
0xc35 PUSH1 0x40
0xc37 MLOAD
0xc38 MLOAD
0xc39 ISZERO
0xc3a ISZERO
0xc3b SWAP1
0xc3c POP
0xc3d PUSH2 0x41a
0xc40 JUMPI
---
0xc35: V1132 = 0x40
0xc37: V1133 = M[0x40]
0xc38: V1134 = M[V1133]
0xc39: V1135 = ISZERO V1134
0xc3a: V1136 = ISZERO V1135
0xc3d: V1137 = 0x41a
0xc40: THROWI V1136
---
Entry stack: [S5, S4, S3, V1089, 0xa9059cbb, V1117]
Stack pops: 3
Stack additions: []
Exit stack: [S5, S4, S3]

================================

Block 0xc41
[0xc41:0xc45]
---
Predecessors: [0xc33]
Successors: [0xc46]
---
0xc41 PUSH2 0x0
0xc44 JUMP
0xc45 JUMPDEST
---
0xc41: V1138 = 0x0
0xc44: THROW 
0xc45: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc46
[0xc46:0xcc4]
---
Predecessors: [0xc41]
Successors: [0xcc5]
---
0xc46 JUMPDEST
0xc47 PUSH1 0x4
0xc49 SLOAD
0xc4a PUSH1 0x40
0xc4c DUP1
0xc4d MLOAD
0xc4e CALLVALUE
0xc4f DUP2
0xc50 MSTORE
0xc51 PUSH1 0x20
0xc53 DUP2
0xc54 ADD
0xc55 DUP5
0xc56 SWAP1
0xc57 MSTORE
0xc58 SWAP2
0xc59 DUP6
0xc5a MUL
0xc5b DUP3
0xc5c DUP3
0xc5d ADD
0xc5e MSTORE
0xc5f MLOAD
0xc60 PUSH1 0x1
0xc62 PUSH1 0xa0
0xc64 PUSH1 0x2
0xc66 EXP
0xc67 SUB
0xc68 CALLER
0xc69 AND
0xc6a SWAP2
0xc6b PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xc8c SWAP2
0xc8d SWAP1
0xc8e DUP2
0xc8f SWAP1
0xc90 SUB
0xc91 PUSH1 0x60
0xc93 ADD
0xc94 SWAP1
0xc95 LOG2
0xc96 PUSH2 0x49e
0xc99 JUMP
0xc9a JUMPDEST
0xc9b PUSH1 0x40
0xc9d MLOAD
0xc9e PUSH1 0x1
0xca0 PUSH1 0xa0
0xca2 PUSH1 0x2
0xca4 EXP
0xca5 SUB
0xca6 CALLER
0xca7 AND
0xca8 SWAP1
0xca9 CALLVALUE
0xcaa DUP1
0xcab ISZERO
0xcac PUSH2 0x8fc
0xcaf MUL
0xcb0 SWAP2
0xcb1 PUSH1 0x0
0xcb3 DUP2
0xcb4 DUP2
0xcb5 DUP2
0xcb6 DUP6
0xcb7 DUP9
0xcb8 DUP9
0xcb9 CALL
0xcba SWAP4
0xcbb POP
0xcbc POP
0xcbd POP
0xcbe POP
0xcbf ISZERO
0xcc0 ISZERO
0xcc1 PUSH2 0x49e
0xcc4 JUMPI
---
0xc46: JUMPDEST 
0xc47: V1139 = 0x4
0xc49: V1140 = S[0x4]
0xc4a: V1141 = 0x40
0xc4d: V1142 = M[0x40]
0xc4e: V1143 = CALLVALUE
0xc50: M[V1142] = V1143
0xc51: V1144 = 0x20
0xc54: V1145 = ADD V1142 0x20
0xc57: M[V1145] = S0
0xc5a: V1146 = MUL S2 V1140
0xc5d: V1147 = ADD 0x40 V1142
0xc5e: M[V1147] = V1146
0xc5f: V1148 = M[0x40]
0xc60: V1149 = 0x1
0xc62: V1150 = 0xa0
0xc64: V1151 = 0x2
0xc66: V1152 = EXP 0x2 0xa0
0xc67: V1153 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc68: V1154 = CALLER
0xc69: V1155 = AND V1154 0xffffffffffffffffffffffffffffffffffffffff
0xc6b: V1156 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xc90: V1157 = SUB V1142 V1148
0xc91: V1158 = 0x60
0xc93: V1159 = ADD 0x60 V1157
0xc95: LOG V1148 V1159 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V1155
0xc96: V1160 = 0x49e
0xc99: THROW 
0xc9a: JUMPDEST 
0xc9b: V1161 = 0x40
0xc9d: V1162 = M[0x40]
0xc9e: V1163 = 0x1
0xca0: V1164 = 0xa0
0xca2: V1165 = 0x2
0xca4: V1166 = EXP 0x2 0xa0
0xca5: V1167 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca6: V1168 = CALLER
0xca7: V1169 = AND V1168 0xffffffffffffffffffffffffffffffffffffffff
0xca9: V1170 = CALLVALUE
0xcab: V1171 = ISZERO V1170
0xcac: V1172 = 0x8fc
0xcaf: V1173 = MUL 0x8fc V1171
0xcb1: V1174 = 0x0
0xcb9: V1175 = CALL V1173 V1169 V1170 V1162 0x0 V1162 0x0
0xcbf: V1176 = ISZERO V1175
0xcc0: V1177 = ISZERO V1176
0xcc1: V1178 = 0x49e
0xcc4: THROWI V1177
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xcc5
[0xcc5:0xcc9]
---
Predecessors: [0xc46]
Successors: [0xcca]
---
0xcc5 PUSH2 0x0
0xcc8 JUMP
0xcc9 JUMPDEST
---
0xcc5: V1179 = 0x0
0xcc8: THROW 
0xcc9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcca
[0xcca:0xcca]
---
Predecessors: [0xcc5]
Successors: [0xccb]
---
0xcca JUMPDEST
---
0xcca: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xccb
[0xccb:0xce7]
---
Predecessors: [0xcca]
Successors: [0xce8]
---
0xccb JUMPDEST
0xccc POP
0xccd POP
0xcce POP
0xccf JUMP
0xcd0 JUMPDEST
0xcd1 PUSH1 0x0
0xcd3 DUP1
0xcd4 SLOAD
0xcd5 CALLER
0xcd6 PUSH1 0x1
0xcd8 PUSH1 0xa0
0xcda PUSH1 0x2
0xcdc EXP
0xcdd SUB
0xcde SWAP1
0xcdf DUP2
0xce0 AND
0xce1 SWAP2
0xce2 AND
0xce3 EQ
0xce4 PUSH2 0x4c1
0xce7 JUMPI
---
0xccb: JUMPDEST 
0xccf: JUMP S3
0xcd0: JUMPDEST 
0xcd1: V1180 = 0x0
0xcd4: V1181 = S[0x0]
0xcd5: V1182 = CALLER
0xcd6: V1183 = 0x1
0xcd8: V1184 = 0xa0
0xcda: V1185 = 0x2
0xcdc: V1186 = EXP 0x2 0xa0
0xcdd: V1187 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce0: V1188 = AND 0xffffffffffffffffffffffffffffffffffffffff V1182
0xce2: V1189 = AND V1181 0xffffffffffffffffffffffffffffffffffffffff
0xce3: V1190 = EQ V1189 V1188
0xce4: V1191 = 0x4c1
0xce7: THROWI V1190
---
Entry stack: []
Stack pops: 8
Stack additions: [0x0]
Exit stack: []

================================

Block 0xce8
[0xce8:0xcfe]
---
Predecessors: [0xccb]
Successors: [0xcff]
---
0xce8 PUSH2 0x0
0xceb JUMP
0xcec JUMPDEST
0xced PUSH1 0x1
0xcef PUSH1 0xa0
0xcf1 PUSH1 0x2
0xcf3 EXP
0xcf4 SUB
0xcf5 ADDRESS
0xcf6 AND
0xcf7 BALANCE
0xcf8 DUP3
0xcf9 SWAP1
0xcfa LT
0xcfb PUSH2 0x530
0xcfe JUMPI
---
0xce8: V1192 = 0x0
0xceb: THROW 
0xcec: JUMPDEST 
0xced: V1193 = 0x1
0xcef: V1194 = 0xa0
0xcf1: V1195 = 0x2
0xcf3: V1196 = EXP 0x2 0xa0
0xcf4: V1197 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf5: V1198 = ADDRESS
0xcf6: V1199 = AND V1198 0xffffffffffffffffffffffffffffffffffffffff
0xcf7: V1200 = BALANCE V1199
0xcfa: V1201 = LT V1200 S1
0xcfb: V1202 = 0x530
0xcfe: THROWI V1201
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xcff
[0xcff:0xd5a]
---
Predecessors: [0xce8]
Successors: [0xd5b]
---
0xcff PUSH1 0x40
0xd01 DUP1
0xd02 MLOAD
0xd03 DUP4
0xd04 DUP2
0xd05 MSTORE
0xd06 SWAP1
0xd07 MLOAD
0xd08 PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd29 SWAP2
0xd2a DUP2
0xd2b SWAP1
0xd2c SUB
0xd2d PUSH1 0x20
0xd2f ADD
0xd30 SWAP1
0xd31 LOG1
0xd32 PUSH1 0x0
0xd34 DUP1
0xd35 SLOAD
0xd36 PUSH1 0x40
0xd38 MLOAD
0xd39 PUSH1 0x1
0xd3b PUSH1 0xa0
0xd3d PUSH1 0x2
0xd3f EXP
0xd40 SUB
0xd41 SWAP1
0xd42 SWAP2
0xd43 AND
0xd44 SWAP2
0xd45 DUP5
0xd46 ISZERO
0xd47 PUSH2 0x8fc
0xd4a MUL
0xd4b SWAP2
0xd4c DUP6
0xd4d SWAP2
0xd4e DUP2
0xd4f DUP2
0xd50 DUP2
0xd51 DUP6
0xd52 DUP9
0xd53 DUP9
0xd54 CALL
0xd55 SWAP5
0xd56 POP
0xd57 POP
0xd58 POP
0xd59 POP
0xd5a POP
---
0xcff: V1203 = 0x40
0xd02: V1204 = M[0x40]
0xd05: M[V1204] = S1
0xd07: V1205 = M[0x40]
0xd08: V1206 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd2c: V1207 = SUB V1204 V1205
0xd2d: V1208 = 0x20
0xd2f: V1209 = ADD 0x20 V1207
0xd31: LOG V1205 V1209 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xd32: V1210 = 0x0
0xd35: V1211 = S[0x0]
0xd36: V1212 = 0x40
0xd38: V1213 = M[0x40]
0xd39: V1214 = 0x1
0xd3b: V1215 = 0xa0
0xd3d: V1216 = 0x2
0xd3f: V1217 = EXP 0x2 0xa0
0xd40: V1218 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd43: V1219 = AND V1211 0xffffffffffffffffffffffffffffffffffffffff
0xd46: V1220 = ISZERO S1
0xd47: V1221 = 0x8fc
0xd4a: V1222 = MUL 0x8fc V1220
0xd54: V1223 = CALL V1222 V1219 S1 V1213 0x0 V1213 0x0
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, V1223]
Exit stack: [S1, V1223]

================================

Block 0xd5b
[0xd5b:0xd5b]
---
Predecessors: [0xcff]
Successors: [0xd5c]
---
0xd5b JUMPDEST
---
0xd5b: JUMPDEST 
---
Entry stack: [S1, V1223]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1223]

================================

Block 0xd5c
[0xd5c:0xd5c]
---
Predecessors: [0xd5b]
Successors: [0xd5d]
---
0xd5c JUMPDEST
---
0xd5c: JUMPDEST 
---
Entry stack: [S1, V1223]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1223]

================================

Block 0xd5d
[0xd5d:0xdb0]
---
Predecessors: [0xd5c]
Successors: [0xdb1]
---
0xd5d JUMPDEST
0xd5e SWAP2
0xd5f SWAP1
0xd60 POP
0xd61 JUMP
0xd62 JUMPDEST
0xd63 PUSH1 0x1
0xd65 SLOAD
0xd66 PUSH1 0x1
0xd68 PUSH1 0xa0
0xd6a PUSH1 0x2
0xd6c EXP
0xd6d SUB
0xd6e AND
0xd6f DUP2
0xd70 JUMP
0xd71 JUMPDEST
0xd72 PUSH1 0x3
0xd74 SLOAD
0xd75 DUP2
0xd76 JUMP
0xd77 JUMPDEST
0xd78 PUSH1 0x5
0xd7a SLOAD
0xd7b PUSH2 0x100
0xd7e SWAP1
0xd7f DIV
0xd80 PUSH1 0xff
0xd82 AND
0xd83 DUP2
0xd84 JUMP
0xd85 JUMPDEST
0xd86 PUSH1 0x2
0xd88 SLOAD
0xd89 DUP2
0xd8a JUMP
0xd8b JUMPDEST
0xd8c PUSH1 0x0
0xd8e SLOAD
0xd8f PUSH1 0x1
0xd91 PUSH1 0xa0
0xd93 PUSH1 0x2
0xd95 EXP
0xd96 SUB
0xd97 AND
0xd98 DUP2
0xd99 JUMP
0xd9a JUMPDEST
0xd9b PUSH1 0x0
0xd9d SLOAD
0xd9e CALLER
0xd9f PUSH1 0x1
0xda1 PUSH1 0xa0
0xda3 PUSH1 0x2
0xda5 EXP
0xda6 SUB
0xda7 SWAP1
0xda8 DUP2
0xda9 AND
0xdaa SWAP2
0xdab AND
0xdac EQ
0xdad PUSH2 0x58a
0xdb0 JUMPI
---
0xd5d: JUMPDEST 
0xd61: JUMP S2
0xd62: JUMPDEST 
0xd63: V1224 = 0x1
0xd65: V1225 = S[0x1]
0xd66: V1226 = 0x1
0xd68: V1227 = 0xa0
0xd6a: V1228 = 0x2
0xd6c: V1229 = EXP 0x2 0xa0
0xd6d: V1230 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6e: V1231 = AND 0xffffffffffffffffffffffffffffffffffffffff V1225
0xd70: JUMP S0
0xd71: JUMPDEST 
0xd72: V1232 = 0x3
0xd74: V1233 = S[0x3]
0xd76: JUMP S0
0xd77: JUMPDEST 
0xd78: V1234 = 0x5
0xd7a: V1235 = S[0x5]
0xd7b: V1236 = 0x100
0xd7f: V1237 = DIV V1235 0x100
0xd80: V1238 = 0xff
0xd82: V1239 = AND 0xff V1237
0xd84: JUMP S0
0xd85: JUMPDEST 
0xd86: V1240 = 0x2
0xd88: V1241 = S[0x2]
0xd8a: JUMP S0
0xd8b: JUMPDEST 
0xd8c: V1242 = 0x0
0xd8e: V1243 = S[0x0]
0xd8f: V1244 = 0x1
0xd91: V1245 = 0xa0
0xd93: V1246 = 0x2
0xd95: V1247 = EXP 0x2 0xa0
0xd96: V1248 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd97: V1249 = AND 0xffffffffffffffffffffffffffffffffffffffff V1243
0xd99: JUMP S0
0xd9a: JUMPDEST 
0xd9b: V1250 = 0x0
0xd9d: V1251 = S[0x0]
0xd9e: V1252 = CALLER
0xd9f: V1253 = 0x1
0xda1: V1254 = 0xa0
0xda3: V1255 = 0x2
0xda5: V1256 = EXP 0x2 0xa0
0xda6: V1257 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda9: V1258 = AND 0xffffffffffffffffffffffffffffffffffffffff V1252
0xdab: V1259 = AND V1251 0xffffffffffffffffffffffffffffffffffffffff
0xdac: V1260 = EQ V1259 V1258
0xdad: V1261 = 0x58a
0xdb0: THROWI V1260
---
Entry stack: [S1, V1223]
Stack pops: 98
Stack additions: []
Exit stack: []

================================

Block 0xdb1
[0xdb1:0xde8]
---
Predecessors: [0xd5d]
Successors: [0xde9]
---
0xdb1 PUSH2 0x0
0xdb4 JUMP
0xdb5 JUMPDEST
0xdb6 PUSH1 0x40
0xdb8 DUP1
0xdb9 MLOAD
0xdba CALLVALUE
0xdbb DUP2
0xdbc MSTORE
0xdbd SWAP1
0xdbe MLOAD
0xdbf PUSH32 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xde0 SWAP2
0xde1 DUP2
0xde2 SWAP1
0xde3 SUB
0xde4 PUSH1 0x20
0xde6 ADD
0xde7 SWAP1
0xde8 LOG1
---
0xdb1: V1262 = 0x0
0xdb4: THROW 
0xdb5: JUMPDEST 
0xdb6: V1263 = 0x40
0xdb9: V1264 = M[0x40]
0xdba: V1265 = CALLVALUE
0xdbc: M[V1264] = V1265
0xdbe: V1266 = M[0x40]
0xdbf: V1267 = 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
0xde3: V1268 = SUB V1264 V1266
0xde4: V1269 = 0x20
0xde6: V1270 = ADD 0x20 V1268
0xde8: LOG V1266 V1270 0xc745dab9c51cefa79677191ed7af7b0ccbb8360b8b39ed79f257f6895882980f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xde9
[0xde9:0xde9]
---
Predecessors: [0xdb1]
Successors: [0xdea]
---
0xde9 JUMPDEST
---
0xde9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdea
[0xdea:0xe08]
---
Predecessors: [0xde9]
Successors: [0xe09]
---
0xdea JUMPDEST
0xdeb JUMP
0xdec JUMPDEST
0xded PUSH1 0x4
0xdef SLOAD
0xdf0 DUP2
0xdf1 JUMP
0xdf2 JUMPDEST
0xdf3 PUSH1 0x0
0xdf5 SLOAD
0xdf6 CALLER
0xdf7 PUSH1 0x1
0xdf9 PUSH1 0xa0
0xdfb PUSH1 0x2
0xdfd EXP
0xdfe SUB
0xdff SWAP1
0xe00 DUP2
0xe01 AND
0xe02 SWAP2
0xe03 AND
0xe04 EQ
0xe05 PUSH2 0x5e2
0xe08 JUMPI
---
0xdea: JUMPDEST 
0xdeb: JUMP S0
0xdec: JUMPDEST 
0xded: V1271 = 0x4
0xdef: V1272 = S[0x4]
0xdf1: JUMP S0
0xdf2: JUMPDEST 
0xdf3: V1273 = 0x0
0xdf5: V1274 = S[0x0]
0xdf6: V1275 = CALLER
0xdf7: V1276 = 0x1
0xdf9: V1277 = 0xa0
0xdfb: V1278 = 0x2
0xdfd: V1279 = EXP 0x2 0xa0
0xdfe: V1280 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe01: V1281 = AND 0xffffffffffffffffffffffffffffffffffffffff V1275
0xe03: V1282 = AND V1274 0xffffffffffffffffffffffffffffffffffffffff
0xe04: V1283 = EQ V1282 V1281
0xe05: V1284 = 0x5e2
0xe08: THROWI V1283
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xe09
[0xe09:0xe81]
---
Predecessors: [0xdea]
Successors: [0xe82]
---
0xe09 PUSH2 0x0
0xe0c JUMP
0xe0d JUMPDEST
0xe0e PUSH1 0x5
0xe10 DUP1
0xe11 SLOAD
0xe12 PUSH1 0xff
0xe14 NOT
0xe15 AND
0xe16 PUSH1 0xf8
0xe18 PUSH1 0x2
0xe1a EXP
0xe1b DUP5
0xe1c DUP2
0xe1d MUL
0xe1e DUP2
0xe1f SWAP1
0xe20 DIV
0xe21 SWAP2
0xe22 SWAP1
0xe23 SWAP2
0xe24 OR
0xe25 PUSH2 0xff00
0xe28 NOT
0xe29 AND
0xe2a PUSH2 0x100
0xe2d DUP5
0xe2e DUP4
0xe2f MUL
0xe30 SWAP3
0xe31 SWAP1
0xe32 SWAP3
0xe33 DIV
0xe34 DUP3
0xe35 MUL
0xe36 OR
0xe37 SWAP2
0xe38 DUP3
0xe39 SWAP1
0xe3a SSTORE
0xe3b PUSH1 0x40
0xe3d DUP1
0xe3e MLOAD
0xe3f PUSH1 0xff
0xe41 DUP1
0xe42 DUP6
0xe43 AND
0xe44 ISZERO
0xe45 ISZERO
0xe46 DUP3
0xe47 MSTORE
0xe48 SWAP3
0xe49 SWAP1
0xe4a SWAP4
0xe4b DIV
0xe4c SWAP1
0xe4d SWAP2
0xe4e AND
0xe4f ISZERO
0xe50 ISZERO
0xe51 PUSH1 0x20
0xe53 DUP4
0xe54 ADD
0xe55 MSTORE
0xe56 DUP1
0xe57 MLOAD
0xe58 PUSH32 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0xe79 SWAP3
0xe7a DUP2
0xe7b SWAP1
0xe7c SUB
0xe7d SWAP1
0xe7e SWAP2
0xe7f ADD
0xe80 SWAP1
0xe81 LOG1
---
0xe09: V1285 = 0x0
0xe0c: THROW 
0xe0d: JUMPDEST 
0xe0e: V1286 = 0x5
0xe11: V1287 = S[0x5]
0xe12: V1288 = 0xff
0xe14: V1289 = NOT 0xff
0xe15: V1290 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1287
0xe16: V1291 = 0xf8
0xe18: V1292 = 0x2
0xe1a: V1293 = EXP 0x2 0xf8
0xe1d: V1294 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S1
0xe20: V1295 = DIV V1294 0x100000000000000000000000000000000000000000000000000000000000000
0xe24: V1296 = OR V1295 V1290
0xe25: V1297 = 0xff00
0xe28: V1298 = NOT 0xff00
0xe29: V1299 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1296
0xe2a: V1300 = 0x100
0xe2f: V1301 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S0
0xe33: V1302 = DIV V1301 0x100000000000000000000000000000000000000000000000000000000000000
0xe35: V1303 = MUL 0x100 V1302
0xe36: V1304 = OR V1303 V1299
0xe3a: S[0x5] = V1304
0xe3b: V1305 = 0x40
0xe3e: V1306 = M[0x40]
0xe3f: V1307 = 0xff
0xe43: V1308 = AND V1304 0xff
0xe44: V1309 = ISZERO V1308
0xe45: V1310 = ISZERO V1309
0xe47: M[V1306] = V1310
0xe4b: V1311 = DIV V1304 0x100
0xe4e: V1312 = AND 0xff V1311
0xe4f: V1313 = ISZERO V1312
0xe50: V1314 = ISZERO V1313
0xe51: V1315 = 0x20
0xe54: V1316 = ADD V1306 0x20
0xe55: M[V1316] = V1314
0xe57: V1317 = M[0x40]
0xe58: V1318 = 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
0xe7c: V1319 = SUB V1306 V1317
0xe7f: V1320 = ADD 0x40 V1319
0xe81: LOG V1317 V1320 0xfa4f96c42c616d6fbda491095977a6af7c76ebd387177b72299180502cbeaa99
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xe82
[0xe82:0xe82]
---
Predecessors: [0xe09]
Successors: [0xe83]
---
0xe82 JUMPDEST
---
0xe82: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0xe83
[0xe83:0xea7]
---
Predecessors: [0xe82]
Successors: [0xea8]
---
0xe83 JUMPDEST
0xe84 POP
0xe85 POP
0xe86 JUMP
0xe87 JUMPDEST
0xe88 PUSH1 0x5
0xe8a SLOAD
0xe8b PUSH1 0xff
0xe8d AND
0xe8e DUP2
0xe8f JUMP
0xe90 JUMPDEST
0xe91 PUSH1 0x0
0xe93 DUP1
0xe94 SLOAD
0xe95 CALLER
0xe96 PUSH1 0x1
0xe98 PUSH1 0xa0
0xe9a PUSH1 0x2
0xe9c EXP
0xe9d SUB
0xe9e SWAP1
0xe9f DUP2
0xea0 AND
0xea1 SWAP2
0xea2 AND
0xea3 EQ
0xea4 PUSH2 0x681
0xea7 JUMPI
---
0xe83: JUMPDEST 
0xe86: JUMP S2
0xe87: JUMPDEST 
0xe88: V1321 = 0x5
0xe8a: V1322 = S[0x5]
0xe8b: V1323 = 0xff
0xe8d: V1324 = AND 0xff V1322
0xe8f: JUMP S0
0xe90: JUMPDEST 
0xe91: V1325 = 0x0
0xe94: V1326 = S[0x0]
0xe95: V1327 = CALLER
0xe96: V1328 = 0x1
0xe98: V1329 = 0xa0
0xe9a: V1330 = 0x2
0xe9c: V1331 = EXP 0x2 0xa0
0xe9d: V1332 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea0: V1333 = AND 0xffffffffffffffffffffffffffffffffffffffff V1327
0xea2: V1334 = AND V1326 0xffffffffffffffffffffffffffffffffffffffff
0xea3: V1335 = EQ V1334 V1333
0xea4: V1336 = 0x681
0xea7: THROWI V1335
---
Entry stack: [S1, S0]
Stack pops: 10
Stack additions: [0x0]
Exit stack: []

================================

Block 0xea8
[0xea8:0xf4a]
---
Predecessors: [0xe83]
Successors: [0xf4b]
---
0xea8 PUSH2 0x0
0xeab JUMP
0xeac JUMPDEST
0xead PUSH1 0x40
0xeaf DUP1
0xeb0 MLOAD
0xeb1 PUSH1 0x1
0xeb3 PUSH1 0xa0
0xeb5 PUSH1 0x2
0xeb7 EXP
0xeb8 SUB
0xeb9 DUP6
0xeba AND
0xebb DUP2
0xebc MSTORE
0xebd PUSH1 0x20
0xebf DUP2
0xec0 ADD
0xec1 DUP5
0xec2 SWAP1
0xec3 MSTORE
0xec4 DUP2
0xec5 MLOAD
0xec6 PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xee7 SWAP3
0xee8 SWAP2
0xee9 DUP2
0xeea SWAP1
0xeeb SUB
0xeec SWAP1
0xeed SWAP2
0xeee ADD
0xeef SWAP1
0xef0 LOG1
0xef1 PUSH1 0x0
0xef3 DUP1
0xef4 SLOAD
0xef5 PUSH1 0x40
0xef7 DUP1
0xef8 MLOAD
0xef9 PUSH1 0x20
0xefb SWAP1
0xefc DUP2
0xefd ADD
0xefe DUP5
0xeff SWAP1
0xf00 MSTORE
0xf01 DUP2
0xf02 MLOAD
0xf03 PUSH1 0xe0
0xf05 PUSH1 0x2
0xf07 EXP
0xf08 PUSH4 0xa9059cbb
0xf0d MUL
0xf0e DUP2
0xf0f MSTORE
0xf10 PUSH1 0x1
0xf12 PUSH1 0xa0
0xf14 PUSH1 0x2
0xf16 EXP
0xf17 SUB
0xf18 SWAP4
0xf19 DUP5
0xf1a AND
0xf1b PUSH1 0x4
0xf1d DUP3
0xf1e ADD
0xf1f MSTORE
0xf20 PUSH1 0x24
0xf22 DUP2
0xf23 ADD
0xf24 DUP8
0xf25 SWAP1
0xf26 MSTORE
0xf27 SWAP2
0xf28 MLOAD
0xf29 SWAP3
0xf2a DUP8
0xf2b AND
0xf2c SWAP4
0xf2d PUSH4 0xa9059cbb
0xf32 SWAP4
0xf33 PUSH1 0x44
0xf35 DUP1
0xf36 DUP6
0xf37 ADD
0xf38 SWAP5
0xf39 SWAP2
0xf3a SWAP3
0xf3b SWAP2
0xf3c DUP4
0xf3d SWAP1
0xf3e SUB
0xf3f ADD
0xf40 SWAP1
0xf41 DUP3
0xf42 SWAP1
0xf43 DUP8
0xf44 DUP1
0xf45 EXTCODESIZE
0xf46 ISZERO
0xf47 PUSH2 0x0
0xf4a JUMPI
---
0xea8: V1337 = 0x0
0xeab: THROW 
0xeac: JUMPDEST 
0xead: V1338 = 0x40
0xeb0: V1339 = M[0x40]
0xeb1: V1340 = 0x1
0xeb3: V1341 = 0xa0
0xeb5: V1342 = 0x2
0xeb7: V1343 = EXP 0x2 0xa0
0xeb8: V1344 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeba: V1345 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xebc: M[V1339] = V1345
0xebd: V1346 = 0x20
0xec0: V1347 = ADD V1339 0x20
0xec3: M[V1347] = S1
0xec5: V1348 = M[0x40]
0xec6: V1349 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xeeb: V1350 = SUB V1339 V1348
0xeee: V1351 = ADD 0x40 V1350
0xef0: LOG V1348 V1351 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xef1: V1352 = 0x0
0xef4: V1353 = S[0x0]
0xef5: V1354 = 0x40
0xef8: V1355 = M[0x40]
0xef9: V1356 = 0x20
0xefd: V1357 = ADD 0x20 V1355
0xf00: M[V1357] = 0x0
0xf02: V1358 = M[0x40]
0xf03: V1359 = 0xe0
0xf05: V1360 = 0x2
0xf07: V1361 = EXP 0x2 0xe0
0xf08: V1362 = 0xa9059cbb
0xf0d: V1363 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xf0f: M[V1358] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf10: V1364 = 0x1
0xf12: V1365 = 0xa0
0xf14: V1366 = 0x2
0xf16: V1367 = EXP 0x2 0xa0
0xf17: V1368 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf1a: V1369 = AND 0xffffffffffffffffffffffffffffffffffffffff V1353
0xf1b: V1370 = 0x4
0xf1e: V1371 = ADD V1358 0x4
0xf1f: M[V1371] = V1369
0xf20: V1372 = 0x24
0xf23: V1373 = ADD V1358 0x24
0xf26: M[V1373] = S1
0xf28: V1374 = M[0x40]
0xf2b: V1375 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xf2d: V1376 = 0xa9059cbb
0xf33: V1377 = 0x44
0xf37: V1378 = ADD V1358 0x44
0xf3e: V1379 = SUB V1358 V1374
0xf3f: V1380 = ADD V1379 0x44
0xf45: V1381 = EXTCODESIZE V1375
0xf46: V1382 = ISZERO V1381
0xf47: V1383 = 0x0
0xf4a: THROWI V1382
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1375, 0x0, V1374, V1380, V1374, 0x20, V1378, 0xa9059cbb, V1375, S0, S1, S2]
Exit stack: []

================================

Block 0xf4b
[0xf4b:0xf54]
---
Predecessors: [0xea8]
Successors: [0xf55]
---
0xf4b PUSH1 0x32
0xf4d GAS
0xf4e SUB
0xf4f CALL
0xf50 ISZERO
0xf51 PUSH2 0x0
0xf54 JUMPI
---
0xf4b: V1384 = 0x32
0xf4d: V1385 = GAS
0xf4e: V1386 = SUB V1385 0x32
0xf4f: V1387 = CALL V1386 V1375 0x0 V1374 V1380 V1374 0x20
0xf50: V1388 = ISZERO V1387
0xf51: V1389 = 0x0
0xf54: THROWI V1388
---
Entry stack: [S11, S10, S9, V1375, 0xa9059cbb, V1378, 0x20, V1374, V1380, V1374, 0x0, V1375]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1375, 0xa9059cbb, V1378]

================================

Block 0xf55
[0xf55:0xf5d]
---
Predecessors: [0xf4b]
Successors: [0xf5e]
---
0xf55 POP
0xf56 POP
0xf57 PUSH1 0x40
0xf59 MLOAD
0xf5a MLOAD
0xf5b SWAP2
0xf5c POP
0xf5d POP
---
0xf57: V1390 = 0x40
0xf59: V1391 = M[0x40]
0xf5a: V1392 = M[V1391]
---
Entry stack: [S5, S4, S3, V1375, 0xa9059cbb, V1378]
Stack pops: 4
Stack additions: [V1392]
Exit stack: [S5, S4, V1392]

================================

Block 0xf5e
[0xf5e:0xf5e]
---
Predecessors: [0xf55]
Successors: [0xf5f]
---
0xf5e JUMPDEST
---
0xf5e: JUMPDEST 
---
Entry stack: [S2, S1, V1392]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, V1392]

================================

Block 0xf5f
[0xf5f:0xf7c]
---
Predecessors: [0xf5e]
Successors: [0xf7d]
---
0xf5f JUMPDEST
0xf60 SWAP3
0xf61 SWAP2
0xf62 POP
0xf63 POP
0xf64 JUMP
0xf65 JUMPDEST
0xf66 PUSH1 0x0
0xf68 DUP1
0xf69 SLOAD
0xf6a CALLER
0xf6b PUSH1 0x1
0xf6d PUSH1 0xa0
0xf6f PUSH1 0x2
0xf71 EXP
0xf72 SUB
0xf73 SWAP1
0xf74 DUP2
0xf75 AND
0xf76 SWAP2
0xf77 AND
0xf78 EQ
0xf79 PUSH2 0x756
0xf7c JUMPI
---
0xf5f: JUMPDEST 
0xf64: JUMP S3
0xf65: JUMPDEST 
0xf66: V1393 = 0x0
0xf69: V1394 = S[0x0]
0xf6a: V1395 = CALLER
0xf6b: V1396 = 0x1
0xf6d: V1397 = 0xa0
0xf6f: V1398 = 0x2
0xf71: V1399 = EXP 0x2 0xa0
0xf72: V1400 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf75: V1401 = AND 0xffffffffffffffffffffffffffffffffffffffff V1395
0xf77: V1402 = AND V1394 0xffffffffffffffffffffffffffffffffffffffff
0xf78: V1403 = EQ V1402 V1401
0xf79: V1404 = 0x756
0xf7c: THROWI V1403
---
Entry stack: [S2, S1, V1392]
Stack pops: 7
Stack additions: [0x0]
Exit stack: []

================================

Block 0xf7d
[0xf7d:0x1011]
---
Predecessors: [0xf5f]
Successors: [0x1012]
---
0xf7d PUSH2 0x0
0xf80 JUMP
0xf81 JUMPDEST
0xf82 PUSH1 0x40
0xf84 DUP1
0xf85 MLOAD
0xf86 DUP4
0xf87 DUP2
0xf88 MSTORE
0xf89 SWAP1
0xf8a MLOAD
0xf8b PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfac SWAP2
0xfad DUP2
0xfae SWAP1
0xfaf SUB
0xfb0 PUSH1 0x20
0xfb2 ADD
0xfb3 SWAP1
0xfb4 LOG1
0xfb5 PUSH1 0x1
0xfb7 SLOAD
0xfb8 PUSH1 0x0
0xfba DUP1
0xfbb SLOAD
0xfbc PUSH1 0x40
0xfbe DUP1
0xfbf MLOAD
0xfc0 PUSH1 0x20
0xfc2 SWAP1
0xfc3 DUP2
0xfc4 ADD
0xfc5 DUP5
0xfc6 SWAP1
0xfc7 MSTORE
0xfc8 DUP2
0xfc9 MLOAD
0xfca PUSH1 0xe0
0xfcc PUSH1 0x2
0xfce EXP
0xfcf PUSH4 0xa9059cbb
0xfd4 MUL
0xfd5 DUP2
0xfd6 MSTORE
0xfd7 PUSH1 0x1
0xfd9 PUSH1 0xa0
0xfdb PUSH1 0x2
0xfdd EXP
0xfde SUB
0xfdf SWAP4
0xfe0 DUP5
0xfe1 AND
0xfe2 PUSH1 0x4
0xfe4 DUP3
0xfe5 ADD
0xfe6 MSTORE
0xfe7 PUSH1 0x24
0xfe9 DUP2
0xfea ADD
0xfeb DUP9
0xfec SWAP1
0xfed MSTORE
0xfee SWAP2
0xfef MLOAD
0xff0 SWAP3
0xff1 SWAP1
0xff2 SWAP5
0xff3 AND
0xff4 SWAP4
0xff5 PUSH4 0xa9059cbb
0xffa SWAP4
0xffb PUSH1 0x44
0xffd DUP1
0xffe DUP5
0xfff ADD
0x1000 SWAP5
0x1001 SWAP3
0x1002 SWAP4
0x1003 DUP4
0x1004 SWAP1
0x1005 SUB
0x1006 ADD
0x1007 SWAP1
0x1008 DUP3
0x1009 SWAP1
0x100a DUP8
0x100b DUP1
0x100c EXTCODESIZE
0x100d ISZERO
0x100e PUSH2 0x0
0x1011 JUMPI
---
0xf7d: V1405 = 0x0
0xf80: THROW 
0xf81: JUMPDEST 
0xf82: V1406 = 0x40
0xf85: V1407 = M[0x40]
0xf88: M[V1407] = S1
0xf8a: V1408 = M[0x40]
0xf8b: V1409 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfaf: V1410 = SUB V1407 V1408
0xfb0: V1411 = 0x20
0xfb2: V1412 = ADD 0x20 V1410
0xfb4: LOG V1408 V1412 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xfb5: V1413 = 0x1
0xfb7: V1414 = S[0x1]
0xfb8: V1415 = 0x0
0xfbb: V1416 = S[0x0]
0xfbc: V1417 = 0x40
0xfbf: V1418 = M[0x40]
0xfc0: V1419 = 0x20
0xfc4: V1420 = ADD 0x20 V1418
0xfc7: M[V1420] = 0x0
0xfc9: V1421 = M[0x40]
0xfca: V1422 = 0xe0
0xfcc: V1423 = 0x2
0xfce: V1424 = EXP 0x2 0xe0
0xfcf: V1425 = 0xa9059cbb
0xfd4: V1426 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xfd6: M[V1421] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xfd7: V1427 = 0x1
0xfd9: V1428 = 0xa0
0xfdb: V1429 = 0x2
0xfdd: V1430 = EXP 0x2 0xa0
0xfde: V1431 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe1: V1432 = AND 0xffffffffffffffffffffffffffffffffffffffff V1416
0xfe2: V1433 = 0x4
0xfe5: V1434 = ADD V1421 0x4
0xfe6: M[V1434] = V1432
0xfe7: V1435 = 0x24
0xfea: V1436 = ADD V1421 0x24
0xfed: M[V1436] = S1
0xfef: V1437 = M[0x40]
0xff3: V1438 = AND V1414 0xffffffffffffffffffffffffffffffffffffffff
0xff5: V1439 = 0xa9059cbb
0xffb: V1440 = 0x44
0xfff: V1441 = ADD V1421 0x44
0x1005: V1442 = SUB V1421 V1437
0x1006: V1443 = ADD V1442 0x44
0x100c: V1444 = EXTCODESIZE V1438
0x100d: V1445 = ISZERO V1444
0x100e: V1446 = 0x0
0x1011: THROWI V1445
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1438, 0x0, V1437, V1443, V1437, 0x20, V1441, 0xa9059cbb, V1438, S0, S1]
Exit stack: []

================================

Block 0x1012
[0x1012:0x101b]
---
Predecessors: [0xf7d]
Successors: [0x101c]
---
0x1012 PUSH1 0x32
0x1014 GAS
0x1015 SUB
0x1016 CALL
0x1017 ISZERO
0x1018 PUSH2 0x0
0x101b JUMPI
---
0x1012: V1447 = 0x32
0x1014: V1448 = GAS
0x1015: V1449 = SUB V1448 0x32
0x1016: V1450 = CALL V1449 V1438 0x0 V1437 V1443 V1437 0x20
0x1017: V1451 = ISZERO V1450
0x1018: V1452 = 0x0
0x101b: THROWI V1451
---
Entry stack: [S10, S9, V1438, 0xa9059cbb, V1441, 0x20, V1437, V1443, V1437, 0x0, V1438]
Stack pops: 6
Stack additions: []
Exit stack: [S10, S9, V1438, 0xa9059cbb, V1441]

================================

Block 0x101c
[0x101c:0x1024]
---
Predecessors: [0x1012]
Successors: [0x1025]
---
0x101c POP
0x101d POP
0x101e PUSH1 0x40
0x1020 MLOAD
0x1021 MLOAD
0x1022 SWAP2
0x1023 POP
0x1024 POP
---
0x101e: V1453 = 0x40
0x1020: V1454 = M[0x40]
0x1021: V1455 = M[V1454]
---
Entry stack: [S4, S3, V1438, 0xa9059cbb, V1441]
Stack pops: 4
Stack additions: [V1455]
Exit stack: [S4, V1455]

================================

Block 0x1025
[0x1025:0x1025]
---
Predecessors: [0x101c]
Successors: [0x1026]
---
0x1025 JUMPDEST
---
0x1025: JUMPDEST 
---
Entry stack: [S1, V1455]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1455]

================================

Block 0x1026
[0x1026:0x103b]
---
Predecessors: [0x1025]
Successors: [0x103c]
---
0x1026 JUMPDEST
0x1027 SWAP2
0x1028 SWAP1
0x1029 POP
0x102a JUMP
0x102b JUMPDEST
0x102c PUSH1 0x5
0x102e SLOAD
0x102f PUSH1 0x0
0x1031 SWAP1
0x1032 DUP2
0x1033 SWAP1
0x1034 PUSH1 0xff
0x1036 AND
0x1037 DUP1
0x1038 PUSH2 0x824
0x103b JUMPI
---
0x1026: JUMPDEST 
0x102a: JUMP S2
0x102b: JUMPDEST 
0x102c: V1456 = 0x5
0x102e: V1457 = S[0x5]
0x102f: V1458 = 0x0
0x1034: V1459 = 0xff
0x1036: V1460 = AND 0xff V1457
0x1038: V1461 = 0x824
0x103b: THROWI V1460
---
Entry stack: [S1, V1455]
Stack pops: 5
Stack additions: [V1460, 0x0, 0x0]
Exit stack: []

================================

Block 0x103c
[0x103c:0x104e]
---
Predecessors: [0x1026]
Successors: [0x104f]
---
0x103c POP
0x103d PUSH1 0x0
0x103f SLOAD
0x1040 CALLER
0x1041 PUSH1 0x1
0x1043 PUSH1 0xa0
0x1045 PUSH1 0x2
0x1047 EXP
0x1048 SUB
0x1049 SWAP1
0x104a DUP2
0x104b AND
0x104c SWAP2
0x104d AND
0x104e EQ
---
0x103d: V1462 = 0x0
0x103f: V1463 = S[0x0]
0x1040: V1464 = CALLER
0x1041: V1465 = 0x1
0x1043: V1466 = 0xa0
0x1045: V1467 = 0x2
0x1047: V1468 = EXP 0x2 0xa0
0x1048: V1469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104b: V1470 = AND 0xffffffffffffffffffffffffffffffffffffffff V1464
0x104d: V1471 = AND V1463 0xffffffffffffffffffffffffffffffffffffffff
0x104e: V1472 = EQ V1471 V1470
---
Entry stack: [0x0, 0x0, V1460]
Stack pops: 1
Stack additions: [V1472]
Exit stack: [0x0, 0x0, V1472]

================================

Block 0x104f
[0x104f:0x1054]
---
Predecessors: [0x103c]
Successors: [0x1055]
---
0x104f JUMPDEST
0x1050 ISZERO
0x1051 PUSH2 0x49e
0x1054 JUMPI
---
0x104f: JUMPDEST 
0x1050: V1473 = ISZERO V1472
0x1051: V1474 = 0x49e
0x1054: THROWI V1473
---
Entry stack: [0x0, 0x0, V1472]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0]

================================

Block 0x1055
[0x1055:0x1068]
---
Predecessors: [0x104f]
Successors: [0x1069]
---
0x1055 PUSH1 0x2
0x1057 SLOAD
0x1058 ADDRESS
0x1059 PUSH1 0x1
0x105b PUSH1 0xa0
0x105d PUSH1 0x2
0x105f EXP
0x1060 SUB
0x1061 AND
0x1062 BALANCE
0x1063 DUP2
0x1064 ISZERO
0x1065 PUSH2 0x0
0x1068 JUMPI
---
0x1055: V1475 = 0x2
0x1057: V1476 = S[0x2]
0x1058: V1477 = ADDRESS
0x1059: V1478 = 0x1
0x105b: V1479 = 0xa0
0x105d: V1480 = 0x2
0x105f: V1481 = EXP 0x2 0xa0
0x1060: V1482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1061: V1483 = AND 0xffffffffffffffffffffffffffffffffffffffff V1477
0x1062: V1484 = BALANCE V1483
0x1064: V1485 = ISZERO V1476
0x1065: V1486 = 0x0
0x1068: THROWI V1485
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V1476, V1484]
Exit stack: [0x0, 0x0, V1476, V1484]

================================

Block 0x1069
[0x1069:0x1075]
---
Predecessors: [0x1055]
Successors: [0x1076]
---
0x1069 DIV
0x106a SWAP2
0x106b POP
0x106c PUSH1 0x4
0x106e SLOAD
0x106f DUP4
0x1070 DUP2
0x1071 ISZERO
0x1072 PUSH2 0x0
0x1075 JUMPI
---
0x1069: V1487 = DIV V1484 V1476
0x106c: V1488 = 0x4
0x106e: V1489 = S[0x4]
0x1071: V1490 = ISZERO V1489
0x1072: V1491 = 0x0
0x1075: THROWI V1490
---
Entry stack: [0x0, 0x0, V1476, V1484]
Stack pops: 5
Stack additions: [S4, V1487, S2, V1489, S4]
Exit stack: [S0, V1487, 0x0, V1489, S0]

================================

Block 0x1076
[0x1076:0x1080]
---
Predecessors: [0x1069]
Successors: [0x1081]
---
0x1076 DIV
0x1077 SWAP1
0x1078 POP
0x1079 DUP2
0x107a DUP2
0x107b GT
0x107c ISZERO
0x107d PUSH2 0x858
0x1080 JUMPI
---
0x1076: V1492 = DIV S0 V1489
0x107b: V1493 = GT V1492 V1487
0x107c: V1494 = ISZERO V1493
0x107d: V1495 = 0x858
0x1080: THROWI V1494
---
Entry stack: [S4, V1487, 0x0, V1489, S0]
Stack pops: 4
Stack additions: [S3, V1492]
Exit stack: [S4, V1487, V1492]

================================

Block 0x1081
[0x1081:0x1082]
---
Predecessors: [0x1076]
Successors: [0x1083]
---
0x1081 POP
0x1082 DUP1
---
0x1081: NOP 
---
Entry stack: [S2, V1487, V1492]
Stack pops: 2
Stack additions: [S1, S1]
Exit stack: [S2, V1487, V1487]

================================

Block 0x1083
[0x1083:0x108c]
---
Predecessors: [0x1081]
Successors: [0x108d]
---
0x1083 JUMPDEST
0x1084 PUSH1 0x0
0x1086 DUP2
0x1087 GT
0x1088 ISZERO
0x1089 PUSH2 0x931
0x108c JUMPI
---
0x1083: JUMPDEST 
0x1084: V1496 = 0x0
0x1087: V1497 = GT V1487 0x0
0x1088: V1498 = ISZERO V1497
0x1089: V1499 = 0x931
0x108c: THROWI V1498
---
Entry stack: [S2, V1487, V1487]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S2, V1487, V1487]

================================

Block 0x108d
[0x108d:0x110c]
---
Predecessors: [0x1083]
Successors: [0x110d]
---
0x108d PUSH1 0x1
0x108f PUSH1 0x0
0x1091 SWAP1
0x1092 SLOAD
0x1093 SWAP1
0x1094 PUSH2 0x100
0x1097 EXP
0x1098 SWAP1
0x1099 DIV
0x109a PUSH1 0x1
0x109c PUSH1 0xa0
0x109e PUSH1 0x2
0x10a0 EXP
0x10a1 SUB
0x10a2 AND
0x10a3 PUSH1 0x1
0x10a5 PUSH1 0xa0
0x10a7 PUSH1 0x2
0x10a9 EXP
0x10aa SUB
0x10ab AND
0x10ac PUSH4 0x23b872dd
0x10b1 CALLER
0x10b2 ADDRESS
0x10b3 PUSH1 0x4
0x10b5 SLOAD
0x10b6 DUP6
0x10b7 MUL
0x10b8 PUSH1 0x0
0x10ba PUSH1 0x40
0x10bc MLOAD
0x10bd PUSH1 0x20
0x10bf ADD
0x10c0 MSTORE
0x10c1 PUSH1 0x40
0x10c3 MLOAD
0x10c4 DUP5
0x10c5 PUSH1 0xe0
0x10c7 PUSH1 0x2
0x10c9 EXP
0x10ca MUL
0x10cb DUP2
0x10cc MSTORE
0x10cd PUSH1 0x4
0x10cf ADD
0x10d0 DUP1
0x10d1 DUP5
0x10d2 PUSH1 0x1
0x10d4 PUSH1 0xa0
0x10d6 PUSH1 0x2
0x10d8 EXP
0x10d9 SUB
0x10da AND
0x10db DUP2
0x10dc MSTORE
0x10dd PUSH1 0x20
0x10df ADD
0x10e0 DUP4
0x10e1 PUSH1 0x1
0x10e3 PUSH1 0xa0
0x10e5 PUSH1 0x2
0x10e7 EXP
0x10e8 SUB
0x10e9 AND
0x10ea DUP2
0x10eb MSTORE
0x10ec PUSH1 0x20
0x10ee ADD
0x10ef DUP3
0x10f0 DUP2
0x10f1 MSTORE
0x10f2 PUSH1 0x20
0x10f4 ADD
0x10f5 SWAP4
0x10f6 POP
0x10f7 POP
0x10f8 POP
0x10f9 POP
0x10fa PUSH1 0x20
0x10fc PUSH1 0x40
0x10fe MLOAD
0x10ff DUP1
0x1100 DUP4
0x1101 SUB
0x1102 DUP2
0x1103 PUSH1 0x0
0x1105 DUP8
0x1106 DUP1
0x1107 EXTCODESIZE
0x1108 ISZERO
0x1109 PUSH2 0x0
0x110c JUMPI
---
0x108d: V1500 = 0x1
0x108f: V1501 = 0x0
0x1092: V1502 = S[0x1]
0x1094: V1503 = 0x100
0x1097: V1504 = EXP 0x100 0x0
0x1099: V1505 = DIV V1502 0x1
0x109a: V1506 = 0x1
0x109c: V1507 = 0xa0
0x109e: V1508 = 0x2
0x10a0: V1509 = EXP 0x2 0xa0
0x10a1: V1510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a2: V1511 = AND 0xffffffffffffffffffffffffffffffffffffffff V1505
0x10a3: V1512 = 0x1
0x10a5: V1513 = 0xa0
0x10a7: V1514 = 0x2
0x10a9: V1515 = EXP 0x2 0xa0
0x10aa: V1516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10ab: V1517 = AND 0xffffffffffffffffffffffffffffffffffffffff V1511
0x10ac: V1518 = 0x23b872dd
0x10b1: V1519 = CALLER
0x10b2: V1520 = ADDRESS
0x10b3: V1521 = 0x4
0x10b5: V1522 = S[0x4]
0x10b7: V1523 = MUL V1487 V1522
0x10b8: V1524 = 0x0
0x10ba: V1525 = 0x40
0x10bc: V1526 = M[0x40]
0x10bd: V1527 = 0x20
0x10bf: V1528 = ADD 0x20 V1526
0x10c0: M[V1528] = 0x0
0x10c1: V1529 = 0x40
0x10c3: V1530 = M[0x40]
0x10c5: V1531 = 0xe0
0x10c7: V1532 = 0x2
0x10c9: V1533 = EXP 0x2 0xe0
0x10ca: V1534 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x10cc: M[V1530] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x10cd: V1535 = 0x4
0x10cf: V1536 = ADD 0x4 V1530
0x10d2: V1537 = 0x1
0x10d4: V1538 = 0xa0
0x10d6: V1539 = 0x2
0x10d8: V1540 = EXP 0x2 0xa0
0x10d9: V1541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10da: V1542 = AND 0xffffffffffffffffffffffffffffffffffffffff V1519
0x10dc: M[V1536] = V1542
0x10dd: V1543 = 0x20
0x10df: V1544 = ADD 0x20 V1536
0x10e1: V1545 = 0x1
0x10e3: V1546 = 0xa0
0x10e5: V1547 = 0x2
0x10e7: V1548 = EXP 0x2 0xa0
0x10e8: V1549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e9: V1550 = AND 0xffffffffffffffffffffffffffffffffffffffff V1520
0x10eb: M[V1544] = V1550
0x10ec: V1551 = 0x20
0x10ee: V1552 = ADD 0x20 V1544
0x10f1: M[V1552] = V1523
0x10f2: V1553 = 0x20
0x10f4: V1554 = ADD 0x20 V1552
0x10fa: V1555 = 0x20
0x10fc: V1556 = 0x40
0x10fe: V1557 = M[0x40]
0x1101: V1558 = SUB V1554 V1557
0x1103: V1559 = 0x0
0x1107: V1560 = EXTCODESIZE V1517
0x1108: V1561 = ISZERO V1560
0x1109: V1562 = 0x0
0x110c: THROWI V1561
---
Entry stack: [S2, V1487, V1487]
Stack pops: 1
Stack additions: [S0, V1517, 0x23b872dd, V1554, 0x20, V1557, V1558, V1557, 0x0, V1517]
Exit stack: [S2, V1487, V1487, V1517, 0x23b872dd, V1554, 0x20, V1557, V1558, V1557, 0x0, V1517]

================================

Block 0x110d
[0x110d:0x1116]
---
Predecessors: [0x108d]
Successors: [0x1117]
---
0x110d PUSH1 0x32
0x110f GAS
0x1110 SUB
0x1111 CALL
0x1112 ISZERO
0x1113 PUSH2 0x0
0x1116 JUMPI
---
0x110d: V1563 = 0x32
0x110f: V1564 = GAS
0x1110: V1565 = SUB V1564 0x32
0x1111: V1566 = CALL V1565 V1517 0x0 V1557 V1558 V1557 0x20
0x1112: V1567 = ISZERO V1566
0x1113: V1568 = 0x0
0x1116: THROWI V1567
---
Entry stack: [S11, V1487, V1487, V1517, 0x23b872dd, V1554, 0x20, V1557, V1558, V1557, 0x0, V1517]
Stack pops: 6
Stack additions: []
Exit stack: [S11, V1487, V1487, V1517, 0x23b872dd, V1554]

================================

Block 0x1117
[0x1117:0x1124]
---
Predecessors: [0x110d]
Successors: [0x1125]
---
0x1117 POP
0x1118 POP
0x1119 PUSH1 0x40
0x111b MLOAD
0x111c MLOAD
0x111d ISZERO
0x111e ISZERO
0x111f SWAP1
0x1120 POP
0x1121 PUSH2 0x8fe
0x1124 JUMPI
---
0x1119: V1569 = 0x40
0x111b: V1570 = M[0x40]
0x111c: V1571 = M[V1570]
0x111d: V1572 = ISZERO V1571
0x111e: V1573 = ISZERO V1572
0x1121: V1574 = 0x8fe
0x1124: THROWI V1573
---
Entry stack: [S5, V1487, V1487, V1517, 0x23b872dd, V1554]
Stack pops: 3
Stack additions: []
Exit stack: [S5, V1487, V1487]

================================

Block 0x1125
[0x1125:0x1157]
---
Predecessors: [0x1117]
Successors: [0x1158]
---
0x1125 PUSH2 0x0
0x1128 JUMP
0x1129 JUMPDEST
0x112a PUSH1 0x2
0x112c SLOAD
0x112d PUSH1 0x40
0x112f MLOAD
0x1130 PUSH1 0x1
0x1132 PUSH1 0xa0
0x1134 PUSH1 0x2
0x1136 EXP
0x1137 SUB
0x1138 CALLER
0x1139 AND
0x113a SWAP2
0x113b DUP4
0x113c MUL
0x113d DUP1
0x113e ISZERO
0x113f PUSH2 0x8fc
0x1142 MUL
0x1143 SWAP2
0x1144 PUSH1 0x0
0x1146 DUP2
0x1147 DUP2
0x1148 DUP2
0x1149 DUP6
0x114a DUP9
0x114b DUP9
0x114c CALL
0x114d SWAP4
0x114e POP
0x114f POP
0x1150 POP
0x1151 POP
0x1152 ISZERO
0x1153 ISZERO
0x1154 PUSH2 0x931
0x1157 JUMPI
---
0x1125: V1575 = 0x0
0x1128: THROW 
0x1129: JUMPDEST 
0x112a: V1576 = 0x2
0x112c: V1577 = S[0x2]
0x112d: V1578 = 0x40
0x112f: V1579 = M[0x40]
0x1130: V1580 = 0x1
0x1132: V1581 = 0xa0
0x1134: V1582 = 0x2
0x1136: V1583 = EXP 0x2 0xa0
0x1137: V1584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1138: V1585 = CALLER
0x1139: V1586 = AND V1585 0xffffffffffffffffffffffffffffffffffffffff
0x113c: V1587 = MUL S0 V1577
0x113e: V1588 = ISZERO V1587
0x113f: V1589 = 0x8fc
0x1142: V1590 = MUL 0x8fc V1588
0x1144: V1591 = 0x0
0x114c: V1592 = CALL V1590 V1586 V1587 V1579 0x0 V1579 0x0
0x1152: V1593 = ISZERO V1592
0x1153: V1594 = ISZERO V1593
0x1154: V1595 = 0x931
0x1157: THROWI V1594
---
Entry stack: [S2, V1487, V1487]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1158
[0x1158:0x115c]
---
Predecessors: [0x1125]
Successors: [0x115d]
---
0x1158 PUSH2 0x0
0x115b JUMP
0x115c JUMPDEST
---
0x1158: V1596 = 0x0
0x115b: THROW 
0x115c: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x115d
[0x115d:0x11b0]
---
Predecessors: [0x1158]
Successors: [0x11b1]
---
0x115d JUMPDEST
0x115e PUSH1 0x4
0x1160 SLOAD
0x1161 PUSH1 0x2
0x1163 SLOAD
0x1164 PUSH1 0x40
0x1166 DUP1
0x1167 MLOAD
0x1168 DUP7
0x1169 DUP2
0x116a MSTORE
0x116b SWAP3
0x116c DUP5
0x116d MUL
0x116e PUSH1 0x20
0x1170 DUP5
0x1171 ADD
0x1172 MSTORE
0x1173 SWAP1
0x1174 DUP4
0x1175 MUL
0x1176 DUP3
0x1177 DUP3
0x1178 ADD
0x1179 MSTORE
0x117a MLOAD
0x117b PUSH1 0x1
0x117d PUSH1 0xa0
0x117f PUSH1 0x2
0x1181 EXP
0x1182 SUB
0x1183 CALLER
0x1184 AND
0x1185 SWAP2
0x1186 PUSH32 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x11a7 SWAP2
0x11a8 SWAP1
0x11a9 DUP2
0x11aa SWAP1
0x11ab SUB
0x11ac PUSH1 0x60
0x11ae ADD
0x11af SWAP1
0x11b0 LOG2
---
0x115d: JUMPDEST 
0x115e: V1597 = 0x4
0x1160: V1598 = S[0x4]
0x1161: V1599 = 0x2
0x1163: V1600 = S[0x2]
0x1164: V1601 = 0x40
0x1167: V1602 = M[0x40]
0x116a: M[V1602] = S2
0x116d: V1603 = MUL S0 V1598
0x116e: V1604 = 0x20
0x1171: V1605 = ADD V1602 0x20
0x1172: M[V1605] = V1603
0x1175: V1606 = MUL S0 V1600
0x1178: V1607 = ADD 0x40 V1602
0x1179: M[V1607] = V1606
0x117a: V1608 = M[0x40]
0x117b: V1609 = 0x1
0x117d: V1610 = 0xa0
0x117f: V1611 = 0x2
0x1181: V1612 = EXP 0x2 0xa0
0x1182: V1613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1183: V1614 = CALLER
0x1184: V1615 = AND V1614 0xffffffffffffffffffffffffffffffffffffffff
0x1186: V1616 = 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683
0x11ab: V1617 = SUB V1602 V1608
0x11ac: V1618 = 0x60
0x11ae: V1619 = ADD 0x60 V1617
0x11b0: LOG V1608 V1619 0xba0a3a12a9b73413f41468a265bf897ff66171a971e352360753a27d5db7683 V1615
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0x11b1
[0x11b1:0x11b1]
---
Predecessors: [0x115d]
Successors: [0x11b2]
---
0x11b1 JUMPDEST
---
0x11b1: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x11b2
[0x11b2:0x11cd]
---
Predecessors: [0x11b1]
Successors: [0x11ce]
---
0x11b2 JUMPDEST
0x11b3 POP
0x11b4 POP
0x11b5 POP
0x11b6 JUMP
0x11b7 JUMPDEST
0x11b8 PUSH1 0x0
0x11ba SLOAD
0x11bb CALLER
0x11bc PUSH1 0x1
0x11be PUSH1 0xa0
0x11c0 PUSH1 0x2
0x11c2 EXP
0x11c3 SUB
0x11c4 SWAP1
0x11c5 DUP2
0x11c6 AND
0x11c7 SWAP2
0x11c8 AND
0x11c9 EQ
0x11ca PUSH2 0x9a7
0x11cd JUMPI
---
0x11b2: JUMPDEST 
0x11b6: JUMP S3
0x11b7: JUMPDEST 
0x11b8: V1620 = 0x0
0x11ba: V1621 = S[0x0]
0x11bb: V1622 = CALLER
0x11bc: V1623 = 0x1
0x11be: V1624 = 0xa0
0x11c0: V1625 = 0x2
0x11c2: V1626 = EXP 0x2 0xa0
0x11c3: V1627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c6: V1628 = AND 0xffffffffffffffffffffffffffffffffffffffff V1622
0x11c8: V1629 = AND V1621 0xffffffffffffffffffffffffffffffffffffffff
0x11c9: V1630 = EQ V1629 V1628
0x11ca: V1631 = 0x9a7
0x11cd: THROWI V1630
---
Entry stack: [S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0x11ce
[0x11ce:0x123b]
---
Predecessors: [0x11b2]
Successors: [0x123c]
---
0x11ce PUSH2 0x0
0x11d1 JUMP
0x11d2 JUMPDEST
0x11d3 PUSH1 0x0
0x11d5 DUP1
0x11d6 SLOAD
0x11d7 PUSH1 0x40
0x11d9 MLOAD
0x11da PUSH1 0x1
0x11dc PUSH1 0xa0
0x11de PUSH1 0x2
0x11e0 EXP
0x11e1 SUB
0x11e2 DUP1
0x11e3 DUP6
0x11e4 AND
0x11e5 SWAP4
0x11e6 SWAP3
0x11e7 AND
0x11e8 SWAP2
0x11e9 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x120a SWAP2
0x120b LOG3
0x120c PUSH1 0x0
0x120e DUP1
0x120f SLOAD
0x1210 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1225 NOT
0x1226 AND
0x1227 PUSH13 0x1000000000000000000000000
0x1235 DUP4
0x1236 DUP2
0x1237 MUL
0x1238 DIV
0x1239 OR
0x123a SWAP1
0x123b SSTORE
---
0x11ce: V1632 = 0x0
0x11d1: THROW 
0x11d2: JUMPDEST 
0x11d3: V1633 = 0x0
0x11d6: V1634 = S[0x0]
0x11d7: V1635 = 0x40
0x11d9: V1636 = M[0x40]
0x11da: V1637 = 0x1
0x11dc: V1638 = 0xa0
0x11de: V1639 = 0x2
0x11e0: V1640 = EXP 0x2 0xa0
0x11e1: V1641 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e4: V1642 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x11e7: V1643 = AND V1634 0xffffffffffffffffffffffffffffffffffffffff
0x11e9: V1644 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x120b: LOG V1636 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1643 V1642
0x120c: V1645 = 0x0
0x120f: V1646 = S[0x0]
0x1210: V1647 = 0xffffffffffffffffffffffffffffffffffffffff
0x1225: V1648 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1226: V1649 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1646
0x1227: V1650 = 0x1000000000000000000000000
0x1237: V1651 = MUL 0x1000000000000000000000000 S0
0x1238: V1652 = DIV V1651 0x1000000000000000000000000
0x1239: V1653 = OR V1652 V1649
0x123b: S[0x0] = V1653
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x123c
[0x123c:0x123c]
---
Predecessors: [0x11ce]
Successors: [0x123d]
---
0x123c JUMPDEST
---
0x123c: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x123d
[0x123d:0x123f]
---
Predecessors: [0x123c]
Successors: []
Has unresolved jump.
---
0x123d JUMPDEST
0x123e POP
0x123f JUMP
---
0x123d: JUMPDEST 
0x123f: JUMP S1
---
Entry stack: [S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x3d6a32bd
Entry block: 0x5d
Exit block: 0x7c
Body: 0x5d, 0x63, 0x7c, 0x15b, 0x168, 0x16e, 0x174, 0x178, 0x180, 0x184, 0x18d, 0x191, 0x1ef, 0x267, 0x271, 0x2d9

Function 1:
Public function signature: 0x5de01497
Entry block: 0x98
Exit block: 0xab
Body: 0x98, 0x9e, 0xab, 0x2e3, 0x2fb, 0x2ff, 0x3af, 0x3b9, 0x3c2, 0x3c3

Function 2:
Public function signature: 0x63a9c3d7
Entry block: 0xbf
Exit block: 0xcf
Body: 0xbf, 0xc5, 0xcf, 0x3c9, 0x3f4, 0x434, 0x43e, 0x48a, 0x494, 0x4e0, 0x4ea, 0x536, 0x540, 0x58c, 0x596, 0x5e2, 0x5ec, 0x638, 0x642, 0x64b, 0x64c

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x120
Exit block: 0x7c
Body: 0x7c, 0x120, 0x126, 0x658

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x149
Exit block: 0x5b
Body: 0x5b, 0x149, 0x14f, 0x667, 0x67e, 0x682, 0x6ec, 0x6ed

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x54
Body: 0x4b, 0x51, 0x54

