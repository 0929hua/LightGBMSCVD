Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8bc4daf7
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8bc4daf7
0x3c: V13 = EQ 0x8bc4daf7 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xc8]
---
0x41 DUP1
0x42 PUSH4 0xa1e564b1
0x47 EQ
0x48 PUSH2 0xc8
0x4b JUMPI
---
0x42: V15 = 0xa1e564b1
0x47: V16 = EQ 0xa1e564b1 V11
0x48: V17 = 0xc8
0x4b: JUMPI 0xc8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0xc5]
---
Predecessors: [0xd]
Successors: [0xd2]
---
0x4e JUMPDEST
0x4f PUSH2 0xc6
0x52 PUSH1 0x4
0x54 DUP1
0x55 DUP1
0x56 CALLDATALOAD
0x57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c AND
0x6d SWAP1
0x6e PUSH1 0x20
0x70 ADD
0x71 SWAP1
0x72 SWAP2
0x73 SWAP1
0x74 DUP1
0x75 CALLDATALOAD
0x76 SWAP1
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP1
0x7b SWAP2
0x7c SWAP1
0x7d DUP1
0x7e CALLDATALOAD
0x7f SWAP1
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP1
0x84 DUP3
0x85 ADD
0x86 DUP1
0x87 CALLDATALOAD
0x88 SWAP1
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP1
0x8d DUP1
0x8e DUP1
0x8f PUSH1 0x1f
0x91 ADD
0x92 PUSH1 0x20
0x94 DUP1
0x95 SWAP2
0x96 DIV
0x97 MUL
0x98 PUSH1 0x20
0x9a ADD
0x9b PUSH1 0x40
0x9d MLOAD
0x9e SWAP1
0x9f DUP2
0xa0 ADD
0xa1 PUSH1 0x40
0xa3 MSTORE
0xa4 DUP1
0xa5 SWAP4
0xa6 SWAP3
0xa7 SWAP2
0xa8 SWAP1
0xa9 DUP2
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf DUP4
0xb0 DUP4
0xb1 DUP1
0xb2 DUP3
0xb3 DUP5
0xb4 CALLDATACOPY
0xb5 DUP3
0xb6 ADD
0xb7 SWAP2
0xb8 POP
0xb9 POP
0xba POP
0xbb POP
0xbc POP
0xbd POP
0xbe SWAP2
0xbf SWAP1
0xc0 POP
0xc1 POP
0xc2 PUSH2 0xd2
0xc5 JUMP
---
0x4e: JUMPDEST 
0x4f: V18 = 0xc6
0x52: V19 = 0x4
0x56: V20 = CALLDATALOAD 0x4
0x57: V21 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x6e: V23 = 0x20
0x70: V24 = ADD 0x20 0x4
0x75: V25 = CALLDATALOAD 0x24
0x77: V26 = 0x20
0x79: V27 = ADD 0x20 0x24
0x7e: V28 = CALLDATALOAD 0x44
0x80: V29 = 0x20
0x82: V30 = ADD 0x20 0x44
0x85: V31 = ADD 0x4 V28
0x87: V32 = CALLDATALOAD V31
0x89: V33 = 0x20
0x8b: V34 = ADD 0x20 V31
0x8f: V35 = 0x1f
0x91: V36 = ADD 0x1f V32
0x92: V37 = 0x20
0x96: V38 = DIV V36 0x20
0x97: V39 = MUL V38 0x20
0x98: V40 = 0x20
0x9a: V41 = ADD 0x20 V39
0x9b: V42 = 0x40
0x9d: V43 = M[0x40]
0xa0: V44 = ADD V43 V41
0xa1: V45 = 0x40
0xa3: M[0x40] = V44
0xab: M[V43] = V32
0xac: V46 = 0x20
0xae: V47 = ADD 0x20 V43
0xb4: CALLDATACOPY V47 V34 V32
0xb6: V48 = ADD V47 V32
0xc2: V49 = 0xd2
0xc5: JUMP 0xd2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc6, V22, V25, V43]
Exit stack: [V11, 0xc6, V22, V25, V43]

================================

Block 0xc6
[0xc6:0xc7]
---
Predecessors: [0x1a0]
Successors: []
---
0xc6 JUMPDEST
0xc7 STOP
---
0xc6: JUMPDEST 
0xc7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc8
[0xc8:0xcf]
---
Predecessors: [0x41]
Successors: [0x1bf]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xd0
0xcc PUSH2 0x1bf
0xcf JUMP
---
0xc8: JUMPDEST 
0xc9: V50 = 0xd0
0xcc: V51 = 0x1bf
0xcf: JUMP 0x1bf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd0]
Exit stack: [V11, 0xd0]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0x271]
Successors: []
---
0xd0 JUMPDEST
0xd1 STOP
---
0xd0: JUMPDEST 
0xd1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0x128]
---
Predecessors: [0x4e]
Successors: [0x129, 0x12d]
---
0xd2 JUMPDEST
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 SWAP1
0xd7 SLOAD
0xd8 SWAP1
0xd9 PUSH2 0x100
0xdc EXP
0xdd SWAP1
0xde DIV
0xdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4 AND
0xf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a AND
0x10b CALLER
0x10c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121 AND
0x122 EQ
0x123 ISZERO
0x124 ISZERO
0x125 PUSH2 0x12d
0x128 JUMPI
---
0xd2: JUMPDEST 
0xd3: V52 = 0x0
0xd7: V53 = S[0x0]
0xd9: V54 = 0x100
0xdc: V55 = EXP 0x100 0x0
0xde: V56 = DIV V53 0x1
0xdf: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf5: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x10b: V61 = CALLER
0x10c: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x121: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x122: V64 = EQ V63 V60
0x123: V65 = ISZERO V64
0x124: V66 = ISZERO V65
0x125: V67 = 0x12d
0x128: JUMPI 0x12d V66
---
Entry stack: [V11, 0xc6, V22, V25, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc6, V22, V25, V43]

================================

Block 0x129
[0x129:0x12c]
---
Predecessors: [0xd2]
Successors: []
---
0x129 PUSH1 0x0
0x12b DUP1
0x12c REVERT
---
0x129: V68 = 0x0
0x12c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc6, V22, V25, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc6, V22, V25, V43]

================================

Block 0x12d
[0x12d:0x157]
---
Predecessors: [0xd2]
Successors: [0x158]
---
0x12d JUMPDEST
0x12e DUP3
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 DUP3
0x146 DUP3
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP1
0x14b DUP3
0x14c DUP1
0x14d MLOAD
0x14e SWAP1
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP1
0x153 DUP1
0x154 DUP4
0x155 DUP4
0x156 PUSH1 0x0
---
0x12d: JUMPDEST 
0x12f: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x147: V71 = 0x40
0x149: V72 = M[0x40]
0x14d: V73 = M[V43]
0x14f: V74 = 0x20
0x151: V75 = ADD 0x20 V43
0x156: V76 = 0x0
---
Entry stack: [V11, 0xc6, V22, V25, V43]
Stack pops: 3
Stack additions: [S2, S1, S0, V70, S1, S0, V72, V72, V75, V73, V73, V72, V75, 0x0]
Exit stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V72, V75, V73, V73, V72, V75, 0x0]

================================

Block 0x158
[0x158:0x160]
---
Predecessors: [0x12d, 0x161]
Successors: [0x161, 0x173]
---
0x158 JUMPDEST
0x159 DUP4
0x15a DUP2
0x15b LT
0x15c ISZERO
0x15d PUSH2 0x173
0x160 JUMPI
---
0x158: JUMPDEST 
0x15b: V77 = LT S0 V73
0x15c: V78 = ISZERO V77
0x15d: V79 = 0x173
0x160: JUMPI 0x173 V78
---
Entry stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V72, V75, V73, V73, V72, V75, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V72, V75, V73, V73, V72, V75, S0]

================================

Block 0x161
[0x161:0x172]
---
Predecessors: [0x158]
Successors: [0x158]
---
0x161 DUP1
0x162 DUP3
0x163 ADD
0x164 MLOAD
0x165 DUP2
0x166 DUP5
0x167 ADD
0x168 MSTORE
0x169 PUSH1 0x20
0x16b DUP2
0x16c ADD
0x16d SWAP1
0x16e POP
0x16f PUSH2 0x158
0x172 JUMP
---
0x163: V80 = ADD V75 S0
0x164: V81 = M[V80]
0x167: V82 = ADD V72 S0
0x168: M[V82] = V81
0x169: V83 = 0x20
0x16c: V84 = ADD S0 0x20
0x16f: V85 = 0x158
0x172: JUMP 0x158
---
Entry stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V72, V75, V73, V73, V72, V75, S0]
Stack pops: 3
Stack additions: [S2, S1, V84]
Exit stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V72, V75, V73, V73, V72, V75, V84]

================================

Block 0x173
[0x173:0x186]
---
Predecessors: [0x158]
Successors: [0x187, 0x1a0]
---
0x173 JUMPDEST
0x174 POP
0x175 POP
0x176 POP
0x177 POP
0x178 SWAP1
0x179 POP
0x17a SWAP1
0x17b DUP2
0x17c ADD
0x17d SWAP1
0x17e PUSH1 0x1f
0x180 AND
0x181 DUP1
0x182 ISZERO
0x183 PUSH2 0x1a0
0x186 JUMPI
---
0x173: JUMPDEST 
0x17c: V86 = ADD V73 V72
0x17e: V87 = 0x1f
0x180: V88 = AND 0x1f V73
0x182: V89 = ISZERO V88
0x183: V90 = 0x1a0
0x186: JUMPI 0x1a0 V89
---
Entry stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V72, V75, V73, V73, V72, V75, S0]
Stack pops: 7
Stack additions: [V86, V88]
Exit stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V86, V88]

================================

Block 0x187
[0x187:0x19f]
---
Predecessors: [0x173]
Successors: [0x1a0]
---
0x187 DUP1
0x188 DUP3
0x189 SUB
0x18a DUP1
0x18b MLOAD
0x18c PUSH1 0x1
0x18e DUP4
0x18f PUSH1 0x20
0x191 SUB
0x192 PUSH2 0x100
0x195 EXP
0x196 SUB
0x197 NOT
0x198 AND
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x20
0x19d ADD
0x19e SWAP2
0x19f POP
---
0x189: V91 = SUB V86 V88
0x18b: V92 = M[V91]
0x18c: V93 = 0x1
0x18f: V94 = 0x20
0x191: V95 = SUB 0x20 V88
0x192: V96 = 0x100
0x195: V97 = EXP 0x100 V95
0x196: V98 = SUB V97 0x1
0x197: V99 = NOT V98
0x198: V100 = AND V99 V92
0x19a: M[V91] = V100
0x19b: V101 = 0x20
0x19d: V102 = ADD 0x20 V91
---
Entry stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V86, V88]
Stack pops: 2
Stack additions: [V102, S0]
Exit stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, V102, V88]

================================

Block 0x1a0
[0x1a0:0x1be]
---
Predecessors: [0x173, 0x187]
Successors: [0xc6]
---
0x1a0 JUMPDEST
0x1a1 POP
0x1a2 SWAP2
0x1a3 POP
0x1a4 POP
0x1a5 PUSH1 0x0
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa DUP1
0x1ab DUP4
0x1ac SUB
0x1ad DUP2
0x1ae DUP6
0x1af DUP8
0x1b0 PUSH2 0x8796
0x1b3 GAS
0x1b4 SUB
0x1b5 CALL
0x1b6 SWAP3
0x1b7 POP
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd POP
0x1be JUMP
---
0x1a0: JUMPDEST 
0x1a5: V103 = 0x0
0x1a7: V104 = 0x40
0x1a9: V105 = M[0x40]
0x1ac: V106 = SUB S1 V105
0x1b0: V107 = 0x8796
0x1b3: V108 = GAS
0x1b4: V109 = SUB V108 0x8796
0x1b5: V110 = CALL V109 V70 V25 V105 V106 V105 0x0
0x1be: JUMP 0xc6
---
Entry stack: [V11, 0xc6, V22, V25, V43, V70, V25, V43, V72, S1, V88]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x215]
---
Predecessors: [0xc8]
Successors: [0x216, 0x21a]
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 SWAP1
0x1c4 SLOAD
0x1c5 SWAP1
0x1c6 PUSH2 0x100
0x1c9 EXP
0x1ca SWAP1
0x1cb DIV
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 CALLER
0x1f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20e AND
0x20f EQ
0x210 ISZERO
0x211 ISZERO
0x212 PUSH2 0x21a
0x215 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V111 = 0x0
0x1c4: V112 = S[0x0]
0x1c6: V113 = 0x100
0x1c9: V114 = EXP 0x100 0x0
0x1cb: V115 = DIV V112 0x1
0x1cc: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1e2: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1f8: V120 = CALLER
0x1f9: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x20f: V123 = EQ V122 V119
0x210: V124 = ISZERO V123
0x211: V125 = ISZERO V124
0x212: V126 = 0x21a
0x215: JUMPI 0x21a V125
---
Entry stack: [V11, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0]

================================

Block 0x216
[0x216:0x219]
---
Predecessors: [0x1bf]
Successors: []
---
0x216 PUSH1 0x0
0x218 DUP1
0x219 REVERT
---
0x216: V127 = 0x0
0x219: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0]

================================

Block 0x21a
[0x21a:0x26c]
---
Predecessors: [0x1bf]
Successors: [0x26d, 0x271]
---
0x21a JUMPDEST
0x21b CALLER
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 PUSH2 0x8fc
0x235 ADDRESS
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c BALANCE
0x24d SWAP1
0x24e DUP2
0x24f ISZERO
0x250 MUL
0x251 SWAP1
0x252 PUSH1 0x40
0x254 MLOAD
0x255 PUSH1 0x0
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b DUP4
0x25c SUB
0x25d DUP2
0x25e DUP6
0x25f DUP9
0x260 DUP9
0x261 CALL
0x262 SWAP4
0x263 POP
0x264 POP
0x265 POP
0x266 POP
0x267 ISZERO
0x268 ISZERO
0x269 PUSH2 0x271
0x26c JUMPI
---
0x21a: JUMPDEST 
0x21b: V128 = CALLER
0x21c: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x232: V131 = 0x8fc
0x235: V132 = ADDRESS
0x236: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x24c: V135 = BALANCE V134
0x24f: V136 = ISZERO V135
0x250: V137 = MUL V136 0x8fc
0x252: V138 = 0x40
0x254: V139 = M[0x40]
0x255: V140 = 0x0
0x257: V141 = 0x40
0x259: V142 = M[0x40]
0x25c: V143 = SUB V139 V142
0x261: V144 = CALL V137 V130 V135 V142 V143 V142 0x0
0x267: V145 = ISZERO V144
0x268: V146 = ISZERO V145
0x269: V147 = 0x271
0x26c: JUMPI 0x271 V146
---
Entry stack: [V11, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0]

================================

Block 0x26d
[0x26d:0x270]
---
Predecessors: [0x21a]
Successors: []
---
0x26d PUSH1 0x0
0x26f DUP1
0x270 REVERT
---
0x26d: V148 = 0x0
0x270: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd0]

================================

Block 0x271
[0x271:0x272]
---
Predecessors: [0x21a]
Successors: [0xd0]
---
0x271 JUMPDEST
0x272 JUMP
---
0x271: JUMPDEST 
0x272: JUMP 0xd0
---
Entry stack: [V11, 0xd0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x273
[0x273:0x285]
---
Predecessors: []
Successors: [0x286]
---
0x273 STOP
0x274 LOG1
0x275 PUSH6 0x627a7a723058
0x27c SHA3
0x27d MISSING 0x2e
0x27e SWAP6
0x27f MISSING 0xdb
0x280 DELEGATECALL
0x281 DUP8
0x282 CREATE
0x283 MISSING 0xd
0x284 MISSING 0x24
0x285 DUP9
---
0x273: STOP 
0x274: LOG S0 S1 S2
0x275: V149 = 0x627a7a723058
0x27c: V150 = SHA3 0x627a7a723058 S3
0x27d: MISSING 0x2e
0x27f: MISSING 0xdb
0x280: V151 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x282: V152 = CREATE S12 V151 S6
0x283: MISSING 0xd
0x284: MISSING 0x24
0x285: NOP 
---
Entry stack: []
Stack pops: 0
Stack additions: [V150, S6, S1, S2, S3, S4, S5, S0, V152, S7, S8, S9, S10, S11, S12, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0x286
[0x286:0x2a7]
---
Predecessors: [0x273]
Successors: []
---
0x286 JUMPDEST
0x287 PC
0x288 STOP
0x289 MISSING 0xfb
0x28a EXTCODECOPY
0x28b DUP4
0x28c DELEGATECALL
0x28d MISSING 0xf6
0x28e EXTCODEHASH
0x28f AND
0x290 SWAP11
0x291 MISSING 0xb2
0x292 PUSH21 0x4ca1ff5ef558f18cf4e60029
---
0x286: JUMPDEST 
0x287: V153 = PC
0x288: STOP 
0x289: MISSING 0xfb
0x28a: EXTCODECOPY S0 S1 S2 S3
0x28c: V154 = DELEGATECALL S7 S4 S5 S6 S7 S8
0x28d: MISSING 0xf6
0x28e: V155 = EXTCODEHASH S0
0x28f: V156 = AND V155 S1
0x291: MISSING 0xb2
0x292: V157 = 0x4ca1ff5ef558f18cf4e60029
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V153, V154, S12, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V156, 0x4ca1ff5ef558f18cf4e60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8bc4daf7
Entry block: 0x4e
Exit block: 0xc6
Body: 0x4e, 0xc6, 0xd2, 0x129, 0x12d, 0x158, 0x161, 0x173, 0x187, 0x1a0

Function 1:
Public function signature: 0xa1e564b1
Entry block: 0xc8
Exit block: 0xd0
Body: 0xc8, 0xd0, 0x1bf, 0x216, 0x21a, 0x26d, 0x271

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

