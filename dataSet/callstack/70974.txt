Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x240]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x59f8b16
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x240
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x59f8b16
0x3b: V13 = EQ V11 0x59f8b16
0x3c: V14 = 0x240
0x3f: JUMPI 0x240 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x267]
---
0x40 DUP1
0x41 PUSH4 0x2d95663b
0x46 EQ
0x47 PUSH2 0x267
0x4a JUMPI
---
0x41: V15 = 0x2d95663b
0x46: V16 = EQ 0x2d95663b V11
0x47: V17 = 0x267
0x4a: JUMPI 0x267 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x27c]
---
0x4b DUP1
0x4c PUSH4 0x94f649dd
0x51 EQ
0x52 PUSH2 0x27c
0x55 JUMPI
---
0x4c: V18 = 0x94f649dd
0x51: V19 = EQ 0x94f649dd V11
0x52: V20 = 0x27c
0x55: JUMPI 0x27c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x37b]
---
0x56 DUP1
0x57 PUSH4 0x9f9fb968
0x5c EQ
0x5d PUSH2 0x37b
0x60 JUMPI
---
0x57: V21 = 0x9f9fb968
0x5c: V22 = EQ 0x9f9fb968 V11
0x5d: V23 = 0x37b
0x60: JUMPI 0x37b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x3bb]
---
0x61 DUP1
0x62 PUSH4 0xb8f77005
0x67 EQ
0x68 PUSH2 0x3bb
0x6b JUMPI
---
0x62: V24 = 0xb8f77005
0x67: V25 = EQ 0xb8f77005 V11
0x68: V26 = 0x3bb
0x6b: JUMPI 0x3bb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x3d0]
---
0x6c DUP1
0x6d PUSH4 0xc533a5a3
0x72 EQ
0x73 PUSH2 0x3d0
0x76 JUMPI
---
0x6d: V27 = 0xc533a5a3
0x72: V28 = EQ 0xc533a5a3 V11
0x73: V29 = 0x3d0
0x76: JUMPI 0x3d0 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x3e5]
---
0x77 DUP1
0x78 PUSH4 0xc67f7df5
0x7d EQ
0x7e PUSH2 0x3e5
0x81 JUMPI
---
0x78: V30 = 0xc67f7df5
0x7d: V31 = EQ 0xc67f7df5 V11
0x7e: V32 = 0x3e5
0x81: JUMPI 0x3e5 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x0, 0x77]
Successors: [0x8d, 0x23d]
---
0x82 JUMPDEST
0x83 PUSH1 0x0
0x85 DUP1
0x86 CALLVALUE
0x87 GT
0x88 ISZERO
0x89 PUSH2 0x23d
0x8c JUMPI
---
0x82: JUMPDEST 
0x83: V33 = 0x0
0x86: V34 = CALLVALUE
0x87: V35 = GT V34 0x0
0x88: V36 = ISZERO V35
0x89: V37 = 0x23d
0x8c: JUMPI 0x23d V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0xfe]
---
0x8d PUSH3 0x35b60
0x91 GAS
0x92 LT
0x93 ISZERO
0x94 PUSH2 0xfe
0x97 JUMPI
---
0x8d: V38 = 0x35b60
0x91: V39 = GAS
0x92: V40 = LT V39 0x35b60
0x93: V41 = ISZERO V40
0x94: V42 = 0xfe
0x97: JUMPI 0xfe V41
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x98
[0x98:0xfd]
---
Predecessors: [0x8d]
Successors: []
---
0x98 PUSH1 0x40
0x9a DUP1
0x9b MLOAD
0x9c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 PUSH1 0x4
0xc3 DUP3
0xc4 ADD
0xc5 MSTORE
0xc6 PUSH1 0x14
0xc8 PUSH1 0x24
0xca DUP3
0xcb ADD
0xcc MSTORE
0xcd PUSH32 0x57652072657175697265206d6f72652067617321000000000000000000000000
0xee PUSH1 0x44
0xf0 DUP3
0xf1 ADD
0xf2 MSTORE
0xf3 SWAP1
0xf4 MLOAD
0xf5 SWAP1
0xf6 DUP2
0xf7 SWAP1
0xf8 SUB
0xf9 PUSH1 0x64
0xfb ADD
0xfc SWAP1
0xfd REVERT
---
0x98: V43 = 0x40
0x9b: V44 = M[0x40]
0x9c: V45 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbe: M[V44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbf: V46 = 0x20
0xc1: V47 = 0x4
0xc4: V48 = ADD V44 0x4
0xc5: M[V48] = 0x20
0xc6: V49 = 0x14
0xc8: V50 = 0x24
0xcb: V51 = ADD V44 0x24
0xcc: M[V51] = 0x14
0xcd: V52 = 0x57652072657175697265206d6f72652067617321000000000000000000000000
0xee: V53 = 0x44
0xf1: V54 = ADD V44 0x44
0xf2: M[V54] = 0x57652072657175697265206d6f72652067617321000000000000000000000000
0xf4: V55 = M[0x40]
0xf8: V56 = SUB V44 V55
0xf9: V57 = 0x64
0xfb: V58 = ADD 0x64 V56
0xfd: REVERT V55 V58
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xfe
[0xfe:0x10e]
---
Predecessors: [0x8d]
Successors: [0x10f, 0x113]
---
0xfe JUMPDEST
0xff PUSH8 0x29a2241af62c0000
0x108 CALLVALUE
0x109 GT
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0xfe: JUMPDEST 
0xff: V59 = 0x29a2241af62c0000
0x108: V60 = CALLVALUE
0x109: V61 = GT V60 0x29a2241af62c0000
0x10a: V62 = ISZERO V61
0x10b: V63 = 0x113
0x10e: JUMPI 0x113 V62
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0xfe]
Successors: []
---
0x10f PUSH1 0x0
0x111 DUP1
0x112 REVERT
---
0x10f: V64 = 0x0
0x112: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x113
[0x113:0x23c]
---
Predecessors: [0xfe]
Successors: [0x406]
---
0x113 JUMPDEST
0x114 POP
0x115 PUSH1 0x40
0x117 DUP1
0x118 MLOAD
0x119 PUSH1 0x60
0x11b DUP2
0x11c ADD
0x11d DUP3
0x11e MSTORE
0x11f CALLER
0x120 DUP2
0x121 MSTORE
0x122 PUSH1 0x1
0x124 PUSH1 0x80
0x126 PUSH1 0x2
0x128 EXP
0x129 SUB
0x12a CALLVALUE
0x12b DUP2
0x12c DUP2
0x12d AND
0x12e PUSH1 0x20
0x130 DUP5
0x131 ADD
0x132 SWAP1
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x64
0x137 PUSH1 0x7d
0x139 DUP4
0x13a MUL
0x13b DUP2
0x13c SWAP1
0x13d DIV
0x13e DUP5
0x13f AND
0x140 DUP6
0x141 DUP8
0x142 ADD
0x143 SWAP1
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x0
0x148 DUP1
0x149 SLOAD
0x14a PUSH1 0x1
0x14c DUP2
0x14d ADD
0x14e DUP3
0x14f SSTORE
0x150 DUP2
0x151 DUP1
0x152 MSTORE
0x153 SWAP7
0x154 MLOAD
0x155 PUSH1 0x2
0x157 SWAP1
0x158 SWAP8
0x159 MUL
0x15a PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0x17b DUP2
0x17c ADD
0x17d DUP1
0x17e SLOAD
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 NOT
0x195 AND
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e SWAP1
0x19f SWAP10
0x1a0 AND
0x1a1 SWAP9
0x1a2 SWAP1
0x1a3 SWAP9
0x1a4 OR
0x1a5 SWAP1
0x1a6 SWAP8
0x1a7 SSTORE
0x1a8 SWAP3
0x1a9 MLOAD
0x1aa PUSH32 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564
0x1cb SWAP1
0x1cc SWAP7
0x1cd ADD
0x1ce DUP1
0x1cf SLOAD
0x1d0 SWAP2
0x1d1 MLOAD
0x1d2 PUSH16 0xffffffffffffffffffffffffffffffff
0x1e3 NOT
0x1e4 SWAP1
0x1e5 SWAP3
0x1e6 AND
0x1e7 SWAP7
0x1e8 DUP7
0x1e9 AND
0x1ea SWAP7
0x1eb SWAP1
0x1ec SWAP7
0x1ed OR
0x1ee DUP6
0x1ef AND
0x1f0 PUSH1 0x80
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SWAP2
0x1f6 SWAP1
0x1f7 SWAP6
0x1f8 AND
0x1f9 MUL
0x1fa SWAP4
0x1fb SWAP1
0x1fc SWAP4
0x1fd OR
0x1fe SWAP1
0x1ff SWAP4
0x200 SSTORE
0x201 SWAP3
0x202 MLOAD
0x203 PUSH1 0x4
0x205 SWAP1
0x206 SWAP4
0x207 MUL
0x208 DIV
0x209 SWAP2
0x20a PUSH20 0x84791a7de6ca0356a906ece6e99894513f2fa502
0x21f SWAP2
0x220 PUSH2 0x8fc
0x223 DUP5
0x224 ISZERO
0x225 MUL
0x226 SWAP2
0x227 DUP5
0x228 SWAP2
0x229 DUP2
0x22a DUP2
0x22b DUP2
0x22c DUP6
0x22d DUP9
0x22e DUP9
0x22f CALL
0x230 SWAP4
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 POP
0x236 PUSH2 0x23d
0x239 PUSH2 0x406
0x23c JUMP
---
0x113: JUMPDEST 
0x115: V65 = 0x40
0x118: V66 = M[0x40]
0x119: V67 = 0x60
0x11c: V68 = ADD V66 0x60
0x11e: M[0x40] = V68
0x11f: V69 = CALLER
0x121: M[V66] = V69
0x122: V70 = 0x1
0x124: V71 = 0x80
0x126: V72 = 0x2
0x128: V73 = EXP 0x2 0x80
0x129: V74 = SUB 0x100000000000000000000000000000000 0x1
0x12a: V75 = CALLVALUE
0x12d: V76 = AND V75 0xffffffffffffffffffffffffffffffff
0x12e: V77 = 0x20
0x131: V78 = ADD V66 0x20
0x134: M[V78] = V76
0x135: V79 = 0x64
0x137: V80 = 0x7d
0x13a: V81 = MUL V75 0x7d
0x13d: V82 = DIV V81 0x64
0x13f: V83 = AND 0xffffffffffffffffffffffffffffffff V82
0x142: V84 = ADD 0x40 V66
0x145: M[V84] = V83
0x146: V85 = 0x0
0x149: V86 = S[0x0]
0x14a: V87 = 0x1
0x14d: V88 = ADD V86 0x1
0x14f: S[0x0] = V88
0x152: M[0x0] = 0x0
0x154: V89 = M[V66]
0x155: V90 = 0x2
0x159: V91 = MUL V86 0x2
0x15a: V92 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0x17c: V93 = ADD V91 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
0x17e: V94 = S[V93]
0x17f: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V96 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x195: V97 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V94
0x196: V98 = 0x1
0x198: V99 = 0xa0
0x19a: V100 = 0x2
0x19c: V101 = EXP 0x2 0xa0
0x19d: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V103 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V104 = OR V103 V97
0x1a7: S[V93] = V104
0x1a9: V105 = M[V78]
0x1aa: V106 = 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564
0x1cd: V107 = ADD V91 0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564
0x1cf: V108 = S[V107]
0x1d1: V109 = M[V84]
0x1d2: V110 = 0xffffffffffffffffffffffffffffffff
0x1e3: V111 = NOT 0xffffffffffffffffffffffffffffffff
0x1e6: V112 = AND V108 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000
0x1e9: V113 = AND 0xffffffffffffffffffffffffffffffff V105
0x1ed: V114 = OR V113 V112
0x1ef: V115 = AND 0xffffffffffffffffffffffffffffffff V114
0x1f0: V116 = 0x80
0x1f2: V117 = 0x2
0x1f4: V118 = EXP 0x2 0x80
0x1f8: V119 = AND 0xffffffffffffffffffffffffffffffff V109
0x1f9: V120 = MUL V119 0x100000000000000000000000000000000
0x1fd: V121 = OR V120 V115
0x200: S[V107] = V121
0x202: V122 = M[0x40]
0x203: V123 = 0x4
0x207: V124 = MUL V75 0x4
0x208: V125 = DIV V124 0x64
0x20a: V126 = 0x84791a7de6ca0356a906ece6e99894513f2fa502
0x220: V127 = 0x8fc
0x224: V128 = ISZERO V125
0x225: V129 = MUL V128 0x8fc
0x22f: V130 = CALL V129 0x84791a7de6ca0356a906ece6e99894513f2fa502 V125 V122 0x0 V122 0x0
0x236: V131 = 0x23d
0x239: V132 = 0x406
0x23c: JUMP 0x406
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V125, 0x23d]
Exit stack: [V11, V125, 0x23d]

================================

Block 0x23d
[0x23d:0x23f]
---
Predecessors: [0x82, 0x56c]
Successors: []
---
0x23d JUMPDEST
0x23e POP
0x23f STOP
---
0x23d: JUMPDEST 
0x23f: STOP 
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x240
[0x240:0x247]
---
Predecessors: [0xd]
Successors: [0x248, 0x24c]
---
0x240 JUMPDEST
0x241 CALLVALUE
0x242 DUP1
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x240: JUMPDEST 
0x241: V133 = CALLVALUE
0x243: V134 = ISZERO V133
0x244: V135 = 0x24c
0x247: JUMPI 0x24c V134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V133]
Exit stack: [V11, V133]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x240]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V136 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V11, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V133]

================================

Block 0x24c
[0x24c:0x254]
---
Predecessors: [0x240]
Successors: [0x57a]
---
0x24c JUMPDEST
0x24d POP
0x24e PUSH2 0x255
0x251 PUSH2 0x57a
0x254 JUMP
---
0x24c: JUMPDEST 
0x24e: V137 = 0x255
0x251: V138 = 0x57a
0x254: JUMP 0x57a
---
Entry stack: [V11, V133]
Stack pops: 1
Stack additions: [0x255]
Exit stack: [V11, 0x255]

================================

Block 0x255
[0x255:0x266]
---
Predecessors: [0x57a, 0x57f, 0x76e, 0x778, 0x7d8]
Successors: []
---
0x255 JUMPDEST
0x256 PUSH1 0x40
0x258 DUP1
0x259 MLOAD
0x25a SWAP2
0x25b DUP3
0x25c MSTORE
0x25d MLOAD
0x25e SWAP1
0x25f DUP2
0x260 SWAP1
0x261 SUB
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP1
0x266 RETURN
---
0x255: JUMPDEST 
0x256: V139 = 0x40
0x259: V140 = M[0x40]
0x25c: M[V140] = S0
0x25d: V141 = M[0x40]
0x261: V142 = SUB V140 V141
0x262: V143 = 0x20
0x264: V144 = ADD 0x20 V142
0x266: RETURN V141 V144
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, S2, S1]

================================

Block 0x267
[0x267:0x26e]
---
Predecessors: [0x40]
Successors: [0x26f, 0x273]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 DUP1
0x26a ISZERO
0x26b PUSH2 0x273
0x26e JUMPI
---
0x267: JUMPDEST 
0x268: V145 = CALLVALUE
0x26a: V146 = ISZERO V145
0x26b: V147 = 0x273
0x26e: JUMPI 0x273 V146
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V145]
Exit stack: [V11, V145]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x267]
Successors: []
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
---
0x26f: V148 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V11, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V145]

================================

Block 0x273
[0x273:0x27b]
---
Predecessors: [0x267]
Successors: [0x57f]
---
0x273 JUMPDEST
0x274 POP
0x275 PUSH2 0x255
0x278 PUSH2 0x57f
0x27b JUMP
---
0x273: JUMPDEST 
0x275: V149 = 0x255
0x278: V150 = 0x57f
0x27b: JUMP 0x57f
---
Entry stack: [V11, V145]
Stack pops: 1
Stack additions: [0x255]
Exit stack: [V11, 0x255]

================================

Block 0x27c
[0x27c:0x283]
---
Predecessors: [0x4b]
Successors: [0x284, 0x288]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e DUP1
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27c: JUMPDEST 
0x27d: V151 = CALLVALUE
0x27f: V152 = ISZERO V151
0x280: V153 = 0x288
0x283: JUMPI 0x288 V152
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V151]
Exit stack: [V11, V151]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27c]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V154 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V11, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V151]

================================

Block 0x288
[0x288:0x29c]
---
Predecessors: [0x27c]
Successors: [0x585]
---
0x288 JUMPDEST
0x289 POP
0x28a PUSH2 0x29d
0x28d PUSH1 0x1
0x28f PUSH1 0xa0
0x291 PUSH1 0x2
0x293 EXP
0x294 SUB
0x295 PUSH1 0x4
0x297 CALLDATALOAD
0x298 AND
0x299 PUSH2 0x585
0x29c JUMP
---
0x288: JUMPDEST 
0x28a: V155 = 0x29d
0x28d: V156 = 0x1
0x28f: V157 = 0xa0
0x291: V158 = 0x2
0x293: V159 = EXP 0x2 0xa0
0x294: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V161 = 0x4
0x297: V162 = CALLDATALOAD 0x4
0x298: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x299: V164 = 0x585
0x29c: JUMP 0x585
---
Entry stack: [V11, V151]
Stack pops: 1
Stack additions: [0x29d, V163]
Exit stack: [V11, 0x29d, V163]

================================

Block 0x29d
[0x29d:0x2cc]
---
Predecessors: [0x70a]
Successors: [0x2cd]
---
0x29d JUMPDEST
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 DUP1
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 DUP1
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa DUP1
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae DUP5
0x2af DUP2
0x2b0 SUB
0x2b1 DUP5
0x2b2 MSTORE
0x2b3 DUP8
0x2b4 DUP2
0x2b5 DUP2
0x2b6 MLOAD
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc SWAP2
0x2bd POP
0x2be DUP1
0x2bf MLOAD
0x2c0 SWAP1
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 SWAP1
0x2c5 PUSH1 0x20
0x2c7 MUL
0x2c8 DUP1
0x2c9 DUP4
0x2ca DUP4
0x2cb PUSH1 0x0
---
0x29d: JUMPDEST 
0x29e: V165 = 0x40
0x2a0: V166 = M[0x40]
0x2a3: V167 = 0x20
0x2a5: V168 = ADD 0x20 V166
0x2a7: V169 = 0x20
0x2a9: V170 = ADD 0x20 V168
0x2ab: V171 = 0x20
0x2ad: V172 = ADD 0x20 V170
0x2b0: V173 = SUB V172 V166
0x2b2: M[V166] = V173
0x2b6: V174 = M[V442]
0x2b8: M[V172] = V174
0x2b9: V175 = 0x20
0x2bb: V176 = ADD 0x20 V172
0x2bf: V177 = M[V442]
0x2c1: V178 = 0x20
0x2c3: V179 = ADD 0x20 V442
0x2c5: V180 = 0x20
0x2c7: V181 = MUL 0x20 V177
0x2cb: V182 = 0x0
---
Entry stack: [V11, V442, V458, V474]
Stack pops: 3
Stack additions: [S2, S1, S0, V166, V166, V168, V170, V176, V179, V181, V181, V176, V179, 0x0]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V176, V179, V181, V181, V176, V179, 0x0]

================================

Block 0x2cd
[0x2cd:0x2d5]
---
Predecessors: [0x29d, 0x2d6]
Successors: [0x2d6, 0x2e5]
---
0x2cd JUMPDEST
0x2ce DUP4
0x2cf DUP2
0x2d0 LT
0x2d1 ISZERO
0x2d2 PUSH2 0x2e5
0x2d5 JUMPI
---
0x2cd: JUMPDEST 
0x2d0: V183 = LT S0 V181
0x2d1: V184 = ISZERO V183
0x2d2: V185 = 0x2e5
0x2d5: JUMPI 0x2e5 V184
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V176, V179, V181, V181, V176, V179, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V176, V179, V181, V181, V176, V179, S0]

================================

Block 0x2d6
[0x2d6:0x2e4]
---
Predecessors: [0x2cd]
Successors: [0x2cd]
---
0x2d6 DUP2
0x2d7 DUP2
0x2d8 ADD
0x2d9 MLOAD
0x2da DUP4
0x2db DUP3
0x2dc ADD
0x2dd MSTORE
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 PUSH2 0x2cd
0x2e4 JUMP
---
0x2d8: V186 = ADD S0 V179
0x2d9: V187 = M[V186]
0x2dc: V188 = ADD S0 V176
0x2dd: M[V188] = V187
0x2de: V189 = 0x20
0x2e0: V190 = ADD 0x20 S0
0x2e1: V191 = 0x2cd
0x2e4: JUMP 0x2cd
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V176, V179, V181, V181, V176, V179, S0]
Stack pops: 3
Stack additions: [S2, S1, V190]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V176, V179, V181, V181, V176, V179, V190]

================================

Block 0x2e5
[0x2e5:0x30b]
---
Predecessors: [0x2cd]
Successors: [0x30c]
---
0x2e5 JUMPDEST
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 POP
0x2ea SWAP1
0x2eb POP
0x2ec ADD
0x2ed DUP5
0x2ee DUP2
0x2ef SUB
0x2f0 DUP4
0x2f1 MSTORE
0x2f2 DUP7
0x2f3 DUP2
0x2f4 DUP2
0x2f5 MLOAD
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP2
0x2fc POP
0x2fd DUP1
0x2fe MLOAD
0x2ff SWAP1
0x300 PUSH1 0x20
0x302 ADD
0x303 SWAP1
0x304 PUSH1 0x20
0x306 MUL
0x307 DUP1
0x308 DUP4
0x309 DUP4
0x30a PUSH1 0x0
---
0x2e5: JUMPDEST 
0x2ec: V192 = ADD V181 V176
0x2ef: V193 = SUB V192 V166
0x2f1: M[V168] = V193
0x2f5: V194 = M[V458]
0x2f7: M[V192] = V194
0x2f8: V195 = 0x20
0x2fa: V196 = ADD 0x20 V192
0x2fe: V197 = M[V458]
0x300: V198 = 0x20
0x302: V199 = ADD 0x20 V458
0x304: V200 = 0x20
0x306: V201 = MUL 0x20 V197
0x30a: V202 = 0x0
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V176, V179, V181, V181, V176, V179, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, V196, V199, V201, V201, V196, V199, 0x0]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V196, V199, V201, V201, V196, V199, 0x0]

================================

Block 0x30c
[0x30c:0x314]
---
Predecessors: [0x2e5, 0x315]
Successors: [0x315, 0x324]
---
0x30c JUMPDEST
0x30d DUP4
0x30e DUP2
0x30f LT
0x310 ISZERO
0x311 PUSH2 0x324
0x314 JUMPI
---
0x30c: JUMPDEST 
0x30f: V203 = LT S0 V201
0x310: V204 = ISZERO V203
0x311: V205 = 0x324
0x314: JUMPI 0x324 V204
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V196, V199, V201, V201, V196, V199, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V196, V199, V201, V201, V196, V199, S0]

================================

Block 0x315
[0x315:0x323]
---
Predecessors: [0x30c]
Successors: [0x30c]
---
0x315 DUP2
0x316 DUP2
0x317 ADD
0x318 MLOAD
0x319 DUP4
0x31a DUP3
0x31b ADD
0x31c MSTORE
0x31d PUSH1 0x20
0x31f ADD
0x320 PUSH2 0x30c
0x323 JUMP
---
0x317: V206 = ADD S0 V199
0x318: V207 = M[V206]
0x31b: V208 = ADD S0 V196
0x31c: M[V208] = V207
0x31d: V209 = 0x20
0x31f: V210 = ADD 0x20 S0
0x320: V211 = 0x30c
0x323: JUMP 0x30c
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V196, V199, V201, V201, V196, V199, S0]
Stack pops: 3
Stack additions: [S2, S1, V210]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V196, V199, V201, V201, V196, V199, V210]

================================

Block 0x324
[0x324:0x34a]
---
Predecessors: [0x30c]
Successors: [0x34b]
---
0x324 JUMPDEST
0x325 POP
0x326 POP
0x327 POP
0x328 POP
0x329 SWAP1
0x32a POP
0x32b ADD
0x32c DUP5
0x32d DUP2
0x32e SUB
0x32f DUP3
0x330 MSTORE
0x331 DUP6
0x332 DUP2
0x333 DUP2
0x334 MLOAD
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x20
0x339 ADD
0x33a SWAP2
0x33b POP
0x33c DUP1
0x33d MLOAD
0x33e SWAP1
0x33f PUSH1 0x20
0x341 ADD
0x342 SWAP1
0x343 PUSH1 0x20
0x345 MUL
0x346 DUP1
0x347 DUP4
0x348 DUP4
0x349 PUSH1 0x0
---
0x324: JUMPDEST 
0x32b: V212 = ADD V201 V196
0x32e: V213 = SUB V212 V166
0x330: M[V170] = V213
0x334: V214 = M[V474]
0x336: M[V212] = V214
0x337: V215 = 0x20
0x339: V216 = ADD 0x20 V212
0x33d: V217 = M[V474]
0x33f: V218 = 0x20
0x341: V219 = ADD 0x20 V474
0x343: V220 = 0x20
0x345: V221 = MUL 0x20 V217
0x349: V222 = 0x0
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V196, V199, V201, V201, V196, V199, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, V216, V219, V221, V221, V216, V219, 0x0]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V216, V219, V221, V221, V216, V219, 0x0]

================================

Block 0x34b
[0x34b:0x353]
---
Predecessors: [0x324, 0x354]
Successors: [0x354, 0x363]
---
0x34b JUMPDEST
0x34c DUP4
0x34d DUP2
0x34e LT
0x34f ISZERO
0x350 PUSH2 0x363
0x353 JUMPI
---
0x34b: JUMPDEST 
0x34e: V223 = LT S0 V221
0x34f: V224 = ISZERO V223
0x350: V225 = 0x363
0x353: JUMPI 0x363 V224
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V216, V219, V221, V221, V216, V219, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V216, V219, V221, V221, V216, V219, S0]

================================

Block 0x354
[0x354:0x362]
---
Predecessors: [0x34b]
Successors: [0x34b]
---
0x354 DUP2
0x355 DUP2
0x356 ADD
0x357 MLOAD
0x358 DUP4
0x359 DUP3
0x35a ADD
0x35b MSTORE
0x35c PUSH1 0x20
0x35e ADD
0x35f PUSH2 0x34b
0x362 JUMP
---
0x356: V226 = ADD S0 V219
0x357: V227 = M[V226]
0x35a: V228 = ADD S0 V216
0x35b: M[V228] = V227
0x35c: V229 = 0x20
0x35e: V230 = ADD 0x20 S0
0x35f: V231 = 0x34b
0x362: JUMP 0x34b
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V216, V219, V221, V221, V216, V219, S0]
Stack pops: 3
Stack additions: [S2, S1, V230]
Exit stack: [V11, V442, V458, V474, V166, V166, V168, V170, V216, V219, V221, V221, V216, V219, V230]

================================

Block 0x363
[0x363:0x37a]
---
Predecessors: [0x34b]
Successors: []
---
0x363 JUMPDEST
0x364 POP
0x365 POP
0x366 POP
0x367 POP
0x368 SWAP1
0x369 POP
0x36a ADD
0x36b SWAP7
0x36c POP
0x36d POP
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 POP
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 SWAP2
0x378 SUB
0x379 SWAP1
0x37a RETURN
---
0x363: JUMPDEST 
0x36a: V232 = ADD V221 V216
0x373: V233 = 0x40
0x375: V234 = M[0x40]
0x378: V235 = SUB V232 V234
0x37a: RETURN V234 V235
---
Entry stack: [V11, V442, V458, V474, V166, V166, V168, V170, V216, V219, V221, V221, V216, V219, S0]
Stack pops: 14
Stack additions: []
Exit stack: [V11]

================================

Block 0x37b
[0x37b:0x382]
---
Predecessors: [0x56]
Successors: [0x383, 0x387]
---
0x37b JUMPDEST
0x37c CALLVALUE
0x37d DUP1
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x37b: JUMPDEST 
0x37c: V236 = CALLVALUE
0x37e: V237 = ISZERO V236
0x37f: V238 = 0x387
0x382: JUMPI 0x387 V237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V236]
Exit stack: [V11, V236]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x37b]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V239 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V11, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V236]

================================

Block 0x387
[0x387:0x392]
---
Predecessors: [0x37b]
Successors: [0x715]
---
0x387 JUMPDEST
0x388 POP
0x389 PUSH2 0x393
0x38c PUSH1 0x4
0x38e CALLDATALOAD
0x38f PUSH2 0x715
0x392 JUMP
---
0x387: JUMPDEST 
0x389: V240 = 0x393
0x38c: V241 = 0x4
0x38e: V242 = CALLDATALOAD 0x4
0x38f: V243 = 0x715
0x392: JUMP 0x715
---
Entry stack: [V11, V236]
Stack pops: 1
Stack additions: [0x393, V242]
Exit stack: [V11, 0x393, V242]

================================

Block 0x393
[0x393:0x3ba]
---
Predecessors: [0x72a]
Successors: []
---
0x393 JUMPDEST
0x394 PUSH1 0x40
0x396 DUP1
0x397 MLOAD
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 SWAP1
0x3a1 SWAP5
0x3a2 AND
0x3a3 DUP5
0x3a4 MSTORE
0x3a5 PUSH1 0x20
0x3a7 DUP5
0x3a8 ADD
0x3a9 SWAP3
0x3aa SWAP1
0x3ab SWAP3
0x3ac MSTORE
0x3ad DUP3
0x3ae DUP3
0x3af ADD
0x3b0 MSTORE
0x3b1 MLOAD
0x3b2 SWAP1
0x3b3 DUP2
0x3b4 SWAP1
0x3b5 SUB
0x3b6 PUSH1 0x60
0x3b8 ADD
0x3b9 SWAP1
0x3ba RETURN
---
0x393: JUMPDEST 
0x394: V244 = 0x40
0x397: V245 = M[0x40]
0x398: V246 = 0x1
0x39a: V247 = 0xa0
0x39c: V248 = 0x2
0x39e: V249 = EXP 0x2 0xa0
0x39f: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V251 = AND V602 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: M[V245] = V251
0x3a5: V252 = 0x20
0x3a8: V253 = ADD V245 0x20
0x3ac: M[V253] = V608
0x3af: V254 = ADD 0x40 V245
0x3b0: M[V254] = V613
0x3b1: V255 = M[0x40]
0x3b5: V256 = SUB V245 V255
0x3b6: V257 = 0x60
0x3b8: V258 = ADD 0x60 V256
0x3ba: RETURN V255 V258
---
Entry stack: [V11, V602, V608, V613]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x3bb
[0x3bb:0x3c2]
---
Predecessors: [0x61]
Successors: [0x3c3, 0x3c7]
---
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd DUP1
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V259 = CALLVALUE
0x3be: V260 = ISZERO V259
0x3bf: V261 = 0x3c7
0x3c2: JUMPI 0x3c7 V260
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V259]
Exit stack: [V11, V259]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V262 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V11, V259]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V259]

================================

Block 0x3c7
[0x3c7:0x3cf]
---
Predecessors: [0x3bb]
Successors: [0x76e]
---
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 PUSH2 0x255
0x3cc PUSH2 0x76e
0x3cf JUMP
---
0x3c7: JUMPDEST 
0x3c9: V263 = 0x255
0x3cc: V264 = 0x76e
0x3cf: JUMP 0x76e
---
Entry stack: [V11, V259]
Stack pops: 1
Stack additions: [0x255]
Exit stack: [V11, 0x255]

================================

Block 0x3d0
[0x3d0:0x3d7]
---
Predecessors: [0x6c]
Successors: [0x3d8, 0x3dc]
---
0x3d0 JUMPDEST
0x3d1 CALLVALUE
0x3d2 DUP1
0x3d3 ISZERO
0x3d4 PUSH2 0x3dc
0x3d7 JUMPI
---
0x3d0: JUMPDEST 
0x3d1: V265 = CALLVALUE
0x3d3: V266 = ISZERO V265
0x3d4: V267 = 0x3dc
0x3d7: JUMPI 0x3dc V266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V265]
Exit stack: [V11, V265]

================================

Block 0x3d8
[0x3d8:0x3db]
---
Predecessors: [0x3d0]
Successors: []
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
---
0x3d8: V268 = 0x0
0x3db: REVERT 0x0 0x0
---
Entry stack: [V11, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V265]

================================

Block 0x3dc
[0x3dc:0x3e4]
---
Predecessors: [0x3d0]
Successors: [0x778]
---
0x3dc JUMPDEST
0x3dd POP
0x3de PUSH2 0x255
0x3e1 PUSH2 0x778
0x3e4 JUMP
---
0x3dc: JUMPDEST 
0x3de: V269 = 0x255
0x3e1: V270 = 0x778
0x3e4: JUMP 0x778
---
Entry stack: [V11, V265]
Stack pops: 1
Stack additions: [0x255]
Exit stack: [V11, 0x255]

================================

Block 0x3e5
[0x3e5:0x3ec]
---
Predecessors: [0x77]
Successors: [0x3ed, 0x3f1]
---
0x3e5 JUMPDEST
0x3e6 CALLVALUE
0x3e7 DUP1
0x3e8 ISZERO
0x3e9 PUSH2 0x3f1
0x3ec JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V271 = CALLVALUE
0x3e8: V272 = ISZERO V271
0x3e9: V273 = 0x3f1
0x3ec: JUMPI 0x3f1 V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V271]
Exit stack: [V11, V271]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3e5]
Successors: []
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
---
0x3ed: V274 = 0x0
0x3f0: REVERT 0x0 0x0
---
Entry stack: [V11, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V271]

================================

Block 0x3f1
[0x3f1:0x405]
---
Predecessors: [0x3e5]
Successors: [0x77d]
---
0x3f1 JUMPDEST
0x3f2 POP
0x3f3 PUSH2 0x255
0x3f6 PUSH1 0x1
0x3f8 PUSH1 0xa0
0x3fa PUSH1 0x2
0x3fc EXP
0x3fd SUB
0x3fe PUSH1 0x4
0x400 CALLDATALOAD
0x401 AND
0x402 PUSH2 0x77d
0x405 JUMP
---
0x3f1: JUMPDEST 
0x3f3: V275 = 0x255
0x3f6: V276 = 0x1
0x3f8: V277 = 0xa0
0x3fa: V278 = 0x2
0x3fc: V279 = EXP 0x2 0xa0
0x3fd: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fe: V281 = 0x4
0x400: V282 = CALLDATALOAD 0x4
0x401: V283 = AND V282 0xffffffffffffffffffffffffffffffffffffffff
0x402: V284 = 0x77d
0x405: JUMP 0x77d
---
Entry stack: [V11, V271]
Stack pops: 1
Stack additions: [0x255, V283]
Exit stack: [V11, 0x255, V283]

================================

Block 0x406
[0x406:0x40c]
---
Predecessors: [0x113]
Successors: [0x40d]
---
0x406 JUMPDEST
0x407 ADDRESS
0x408 BALANCE
0x409 PUSH1 0x0
0x40b DUP1
0x40c DUP1
---
0x406: JUMPDEST 
0x407: V285 = ADDRESS
0x408: V286 = BALANCE V285
0x409: V287 = 0x0
---
Entry stack: [V11, V125, 0x23d]
Stack pops: 0
Stack additions: [V286, 0x0, 0x0, 0x0]
Exit stack: [V11, V125, 0x23d, V286, 0x0, 0x0, 0x0]

================================

Block 0x40d
[0x40d:0x417]
---
Predecessors: [0x406, 0x561]
Successors: [0x418, 0x56c]
---
0x40d JUMPDEST
0x40e PUSH1 0x0
0x410 SLOAD
0x411 DUP4
0x412 LT
0x413 ISZERO
0x414 PUSH2 0x56c
0x417 JUMPI
---
0x40d: JUMPDEST 
0x40e: V288 = 0x0
0x410: V289 = S[0x0]
0x412: V290 = LT S2 V289
0x413: V291 = ISZERO V290
0x414: V292 = 0x56c
0x417: JUMPI 0x56c V291
---
Entry stack: [V11, V125, 0x23d, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, V125, 0x23d, S3, S2, S1, S0]

================================

Block 0x418
[0x418:0x42b]
---
Predecessors: [0x40d]
Successors: [0x42c, 0x42d]
---
0x418 DUP3
0x419 PUSH1 0x1
0x41b SLOAD
0x41c ADD
0x41d SWAP2
0x41e POP
0x41f PUSH1 0x0
0x421 DUP3
0x422 DUP2
0x423 SLOAD
0x424 DUP2
0x425 LT
0x426 ISZERO
0x427 ISZERO
0x428 PUSH2 0x42d
0x42b JUMPI
---
0x419: V293 = 0x1
0x41b: V294 = S[0x1]
0x41c: V295 = ADD V294 S2
0x41f: V296 = 0x0
0x423: V297 = S[0x0]
0x425: V298 = LT V295 V297
0x426: V299 = ISZERO V298
0x427: V300 = ISZERO V299
0x428: V301 = 0x42d
0x42b: JUMPI 0x42d V300
---
Entry stack: [V11, V125, 0x23d, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V295, S0, 0x0, V295]
Exit stack: [V11, V125, 0x23d, S3, S2, V295, S0, 0x0, V295]

================================

Block 0x42c
[0x42c:0x42c]
---
Predecessors: [0x418]
Successors: []
---
0x42c INVALID
---
0x42c: INVALID 
---
Entry stack: [V11, V125, 0x23d, S5, S4, V295, S2, 0x0, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125, 0x23d, S5, S4, V295, S2, 0x0, V295]

================================

Block 0x42d
[0x42d:0x45f]
---
Predecessors: [0x418]
Successors: [0x460, 0x4fa]
---
0x42d JUMPDEST
0x42e PUSH1 0x0
0x430 SWAP2
0x431 DUP3
0x432 MSTORE
0x433 PUSH1 0x20
0x435 SWAP1
0x436 SWAP2
0x437 SHA3
0x438 PUSH1 0x2
0x43a SWAP1
0x43b SWAP2
0x43c MUL
0x43d ADD
0x43e PUSH1 0x1
0x440 DUP2
0x441 ADD
0x442 SLOAD
0x443 SWAP1
0x444 SWAP2
0x445 POP
0x446 PUSH1 0x80
0x448 PUSH1 0x2
0x44a EXP
0x44b SWAP1
0x44c DIV
0x44d PUSH1 0x1
0x44f PUSH1 0x80
0x451 PUSH1 0x2
0x453 EXP
0x454 SUB
0x455 SWAP1
0x456 DUP2
0x457 AND
0x458 SWAP1
0x459 DUP6
0x45a AND
0x45b LT
0x45c PUSH2 0x4fa
0x45f JUMPI
---
0x42d: JUMPDEST 
0x42e: V302 = 0x0
0x432: M[0x0] = 0x0
0x433: V303 = 0x20
0x437: V304 = SHA3 0x0 0x20
0x438: V305 = 0x2
0x43c: V306 = MUL V295 0x2
0x43d: V307 = ADD V306 V304
0x43e: V308 = 0x1
0x441: V309 = ADD V307 0x1
0x442: V310 = S[V309]
0x446: V311 = 0x80
0x448: V312 = 0x2
0x44a: V313 = EXP 0x2 0x80
0x44c: V314 = DIV V310 0x100000000000000000000000000000000
0x44d: V315 = 0x1
0x44f: V316 = 0x80
0x451: V317 = 0x2
0x453: V318 = EXP 0x2 0x80
0x454: V319 = SUB 0x100000000000000000000000000000000 0x1
0x457: V320 = AND 0xffffffffffffffffffffffffffffffff V314
0x45a: V321 = AND S5 0xffffffffffffffffffffffffffffffff
0x45b: V322 = LT V321 V320
0x45c: V323 = 0x4fa
0x45f: JUMPI 0x4fa V322
---
Entry stack: [V11, V125, 0x23d, S5, S4, V295, S2, 0x0, V295]
Stack pops: 6
Stack additions: [S5, S4, S3, V307]
Exit stack: [V11, V125, 0x23d, S5, S4, V295, V307]

================================

Block 0x460
[0x460:0x4c5]
---
Predecessors: [0x42d]
Successors: [0x4c6, 0x4c7]
---
0x460 DUP1
0x461 SLOAD
0x462 PUSH1 0x1
0x464 DUP3
0x465 ADD
0x466 SLOAD
0x467 PUSH1 0x40
0x469 MLOAD
0x46a PUSH1 0x1
0x46c PUSH1 0xa0
0x46e PUSH1 0x2
0x470 EXP
0x471 SUB
0x472 SWAP1
0x473 SWAP3
0x474 AND
0x475 SWAP2
0x476 PUSH1 0x1
0x478 PUSH1 0x80
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e PUSH1 0x80
0x480 PUSH1 0x2
0x482 EXP
0x483 SWAP1
0x484 SWAP3
0x485 DIV
0x486 SWAP2
0x487 SWAP1
0x488 SWAP2
0x489 AND
0x48a DUP1
0x48b ISZERO
0x48c PUSH2 0x8fc
0x48f MUL
0x490 SWAP2
0x491 PUSH1 0x0
0x493 DUP2
0x494 DUP2
0x495 DUP2
0x496 DUP6
0x497 DUP9
0x498 DUP9
0x499 CALL
0x49a POP
0x49b POP
0x49c POP
0x49d POP
0x49e PUSH1 0x1
0x4a0 DUP3
0x4a1 ADD
0x4a2 SLOAD
0x4a3 PUSH1 0x0
0x4a5 DUP1
0x4a6 SLOAD
0x4a7 PUSH1 0x80
0x4a9 PUSH1 0x2
0x4ab EXP
0x4ac SWAP1
0x4ad SWAP3
0x4ae DIV
0x4af PUSH1 0x1
0x4b1 PUSH1 0x80
0x4b3 PUSH1 0x2
0x4b5 EXP
0x4b6 SUB
0x4b7 AND
0x4b8 SWAP1
0x4b9 SWAP7
0x4ba SUB
0x4bb SWAP6
0x4bc SWAP2
0x4bd POP
0x4be DUP4
0x4bf SWAP1
0x4c0 DUP2
0x4c1 LT
0x4c2 PUSH2 0x4c7
0x4c5 JUMPI
---
0x461: V324 = S[V307]
0x462: V325 = 0x1
0x465: V326 = ADD V307 0x1
0x466: V327 = S[V326]
0x467: V328 = 0x40
0x469: V329 = M[0x40]
0x46a: V330 = 0x1
0x46c: V331 = 0xa0
0x46e: V332 = 0x2
0x470: V333 = EXP 0x2 0xa0
0x471: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x474: V335 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x476: V336 = 0x1
0x478: V337 = 0x80
0x47a: V338 = 0x2
0x47c: V339 = EXP 0x2 0x80
0x47d: V340 = SUB 0x100000000000000000000000000000000 0x1
0x47e: V341 = 0x80
0x480: V342 = 0x2
0x482: V343 = EXP 0x2 0x80
0x485: V344 = DIV V327 0x100000000000000000000000000000000
0x489: V345 = AND V344 0xffffffffffffffffffffffffffffffff
0x48b: V346 = ISZERO V345
0x48c: V347 = 0x8fc
0x48f: V348 = MUL 0x8fc V346
0x491: V349 = 0x0
0x499: V350 = CALL V348 V335 V345 V329 0x0 V329 0x0
0x49e: V351 = 0x1
0x4a1: V352 = ADD V307 0x1
0x4a2: V353 = S[V352]
0x4a3: V354 = 0x0
0x4a6: V355 = S[0x0]
0x4a7: V356 = 0x80
0x4a9: V357 = 0x2
0x4ab: V358 = EXP 0x2 0x80
0x4ae: V359 = DIV V353 0x100000000000000000000000000000000
0x4af: V360 = 0x1
0x4b1: V361 = 0x80
0x4b3: V362 = 0x2
0x4b5: V363 = EXP 0x2 0x80
0x4b6: V364 = SUB 0x100000000000000000000000000000000 0x1
0x4b7: V365 = AND 0xffffffffffffffffffffffffffffffff V359
0x4ba: V366 = SUB S3 V365
0x4c1: V367 = LT V295 V355
0x4c2: V368 = 0x4c7
0x4c5: JUMPI 0x4c7 V367
---
Entry stack: [V11, V125, 0x23d, S3, S2, V295, V307]
Stack pops: 4
Stack additions: [V366, S2, S1, S0, 0x0, S1]
Exit stack: [V11, V125, 0x23d, V366, S2, V295, V307, 0x0, V295]

================================

Block 0x4c6
[0x4c6:0x4c6]
---
Predecessors: [0x460]
Successors: []
---
0x4c6 INVALID
---
0x4c6: INVALID 
---
Entry stack: [V11, V125, 0x23d, V366, S4, V295, V307, 0x0, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125, 0x23d, V366, S4, V295, V307, 0x0, V295]

================================

Block 0x4c7
[0x4c7:0x4f9]
---
Predecessors: [0x460]
Successors: [0x553]
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x0
0x4ca SWAP2
0x4cb DUP3
0x4cc MSTORE
0x4cd PUSH1 0x20
0x4cf DUP3
0x4d0 SHA3
0x4d1 PUSH1 0x2
0x4d3 SWAP1
0x4d4 SWAP2
0x4d5 MUL
0x4d6 ADD
0x4d7 DUP1
0x4d8 SLOAD
0x4d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ee NOT
0x4ef AND
0x4f0 DUP2
0x4f1 SSTORE
0x4f2 PUSH1 0x1
0x4f4 ADD
0x4f5 SSTORE
0x4f6 PUSH2 0x553
0x4f9 JUMP
---
0x4c7: JUMPDEST 
0x4c8: V369 = 0x0
0x4cc: M[0x0] = 0x0
0x4cd: V370 = 0x20
0x4d0: V371 = SHA3 0x0 0x20
0x4d1: V372 = 0x2
0x4d5: V373 = MUL V295 0x2
0x4d6: V374 = ADD V373 V371
0x4d8: V375 = S[V374]
0x4d9: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V377 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V378 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V375
0x4f1: S[V374] = V378
0x4f2: V379 = 0x1
0x4f4: V380 = ADD 0x1 V374
0x4f5: S[V380] = 0x0
0x4f6: V381 = 0x553
0x4f9: JUMP 0x553
---
Entry stack: [V11, V125, 0x23d, V366, S4, V295, V307, 0x0, V295]
Stack pops: 2
Stack additions: []
Exit stack: [V11, V125, 0x23d, V366, S4, V295, V307]

================================

Block 0x4fa
[0x4fa:0x552]
---
Predecessors: [0x42d]
Successors: [0x56c]
---
0x4fa JUMPDEST
0x4fb DUP1
0x4fc SLOAD
0x4fd PUSH1 0x40
0x4ff MLOAD
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 SWAP1
0x509 SWAP2
0x50a AND
0x50b SWAP1
0x50c PUSH1 0x1
0x50e PUSH1 0x80
0x510 PUSH1 0x2
0x512 EXP
0x513 SUB
0x514 DUP7
0x515 AND
0x516 DUP1
0x517 ISZERO
0x518 PUSH2 0x8fc
0x51b MUL
0x51c SWAP2
0x51d PUSH1 0x0
0x51f DUP2
0x520 DUP2
0x521 DUP2
0x522 DUP6
0x523 DUP9
0x524 DUP9
0x525 CALL
0x526 POP
0x527 POP
0x528 POP
0x529 PUSH1 0x1
0x52b DUP4
0x52c ADD
0x52d DUP1
0x52e SLOAD
0x52f PUSH1 0x1
0x531 PUSH1 0x80
0x533 PUSH1 0x2
0x535 EXP
0x536 SUB
0x537 PUSH1 0x80
0x539 PUSH1 0x2
0x53b EXP
0x53c DUP1
0x53d DUP4
0x53e DIV
0x53f DUP3
0x540 AND
0x541 DUP11
0x542 SWAP1
0x543 SUB
0x544 DUP3
0x545 AND
0x546 MUL
0x547 SWAP2
0x548 AND
0x549 OR
0x54a SWAP1
0x54b SSTORE
0x54c POP
0x54d PUSH2 0x56c
0x550 SWAP1
0x551 POP
0x552 JUMP
---
0x4fa: JUMPDEST 
0x4fc: V382 = S[V307]
0x4fd: V383 = 0x40
0x4ff: V384 = M[0x40]
0x500: V385 = 0x1
0x502: V386 = 0xa0
0x504: V387 = 0x2
0x506: V388 = EXP 0x2 0xa0
0x507: V389 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50a: V390 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V391 = 0x1
0x50e: V392 = 0x80
0x510: V393 = 0x2
0x512: V394 = EXP 0x2 0x80
0x513: V395 = SUB 0x100000000000000000000000000000000 0x1
0x515: V396 = AND S3 0xffffffffffffffffffffffffffffffff
0x517: V397 = ISZERO V396
0x518: V398 = 0x8fc
0x51b: V399 = MUL 0x8fc V397
0x51d: V400 = 0x0
0x525: V401 = CALL V399 V390 V396 V384 0x0 V384 0x0
0x529: V402 = 0x1
0x52c: V403 = ADD V307 0x1
0x52e: V404 = S[V403]
0x52f: V405 = 0x1
0x531: V406 = 0x80
0x533: V407 = 0x2
0x535: V408 = EXP 0x2 0x80
0x536: V409 = SUB 0x100000000000000000000000000000000 0x1
0x537: V410 = 0x80
0x539: V411 = 0x2
0x53b: V412 = EXP 0x2 0x80
0x53e: V413 = DIV V404 0x100000000000000000000000000000000
0x540: V414 = AND 0xffffffffffffffffffffffffffffffff V413
0x543: V415 = SUB V414 S3
0x545: V416 = AND 0xffffffffffffffffffffffffffffffff V415
0x546: V417 = MUL V416 0x100000000000000000000000000000000
0x548: V418 = AND V404 0xffffffffffffffffffffffffffffffff
0x549: V419 = OR V418 V417
0x54b: S[V403] = V419
0x54d: V420 = 0x56c
0x552: JUMP 0x56c
---
Entry stack: [V11, V125, 0x23d, S3, S2, V295, V307]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V125, 0x23d, S3, S2, V295, V307]

================================

Block 0x553
[0x553:0x55c]
---
Predecessors: [0x4c7]
Successors: [0x55d, 0x561]
---
0x553 JUMPDEST
0x554 PUSH2 0xc350
0x557 GAS
0x558 GT
0x559 PUSH2 0x561
0x55c JUMPI
---
0x553: JUMPDEST 
0x554: V421 = 0xc350
0x557: V422 = GAS
0x558: V423 = GT V422 0xc350
0x559: V424 = 0x561
0x55c: JUMPI 0x561 V423
---
Entry stack: [V11, V125, 0x23d, V366, S2, V295, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125, 0x23d, V366, S2, V295, V307]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x553]
Successors: [0x56c]
---
0x55d PUSH2 0x56c
0x560 JUMP
---
0x55d: V425 = 0x56c
0x560: JUMP 0x56c
---
Entry stack: [V11, V125, 0x23d, V366, S2, V295, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V125, 0x23d, V366, S2, V295, V307]

================================

Block 0x561
[0x561:0x56b]
---
Predecessors: [0x553]
Successors: [0x40d]
---
0x561 JUMPDEST
0x562 PUSH1 0x1
0x564 SWAP1
0x565 SWAP3
0x566 ADD
0x567 SWAP2
0x568 PUSH2 0x40d
0x56b JUMP
---
0x561: JUMPDEST 
0x562: V426 = 0x1
0x566: V427 = ADD S2 0x1
0x568: V428 = 0x40d
0x56b: JUMP 0x40d
---
Entry stack: [V11, V125, 0x23d, V366, S2, V295, V307]
Stack pops: 3
Stack additions: [V427, S1, S0]
Exit stack: [V11, V125, 0x23d, V366, V427, V295, V307]

================================

Block 0x56c
[0x56c:0x579]
---
Predecessors: [0x40d, 0x4fa, 0x55d]
Successors: [0x23d]
---
0x56c JUMPDEST
0x56d POP
0x56e POP
0x56f PUSH1 0x1
0x571 DUP1
0x572 SLOAD
0x573 SWAP1
0x574 SWAP2
0x575 ADD
0x576 SWAP1
0x577 SSTORE
0x578 POP
0x579 JUMP
---
0x56c: JUMPDEST 
0x56f: V429 = 0x1
0x572: V430 = S[0x1]
0x575: V431 = ADD S2 V430
0x577: S[0x1] = V431
0x579: JUMP 0x23d
---
Entry stack: [V11, V125, 0x23d, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, V125]

================================

Block 0x57a
[0x57a:0x57e]
---
Predecessors: [0x24c]
Successors: [0x255]
---
0x57a JUMPDEST
0x57b PUSH1 0x7d
0x57d DUP2
0x57e JUMP
---
0x57a: JUMPDEST 
0x57b: V432 = 0x7d
0x57e: JUMP 0x255
---
Entry stack: [V11, 0x255]
Stack pops: 1
Stack additions: [S0, 0x7d]
Exit stack: [V11, 0x255, 0x7d]

================================

Block 0x57f
[0x57f:0x584]
---
Predecessors: [0x273]
Successors: [0x255]
---
0x57f JUMPDEST
0x580 PUSH1 0x1
0x582 SLOAD
0x583 DUP2
0x584 JUMP
---
0x57f: JUMPDEST 
0x580: V433 = 0x1
0x582: V434 = S[0x1]
0x584: JUMP 0x255
---
Entry stack: [V11, 0x255]
Stack pops: 1
Stack additions: [S0, V434]
Exit stack: [V11, 0x255, V434]

================================

Block 0x585
[0x585:0x598]
---
Predecessors: [0x288]
Successors: [0x77d]
---
0x585 JUMPDEST
0x586 PUSH1 0x60
0x588 DUP1
0x589 PUSH1 0x60
0x58b PUSH1 0x0
0x58d DUP1
0x58e PUSH1 0x0
0x590 DUP1
0x591 PUSH2 0x599
0x594 DUP9
0x595 PUSH2 0x77d
0x598 JUMP
---
0x585: JUMPDEST 
0x586: V435 = 0x60
0x589: V436 = 0x60
0x58b: V437 = 0x0
0x58e: V438 = 0x0
0x591: V439 = 0x599
0x595: V440 = 0x77d
0x598: JUMP 0x77d
---
Entry stack: [V11, 0x29d, V163]
Stack pops: 1
Stack additions: [S0, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, 0x0, 0x599, S0]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, 0x0, 0x599, V163]

================================

Block 0x599
[0x599:0x5b5]
---
Predecessors: [0x7d8]
Successors: [0x5b6, 0x5c5]
---
0x599 JUMPDEST
0x59a SWAP4
0x59b POP
0x59c DUP4
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 SWAP1
0x5a1 DUP1
0x5a2 DUP3
0x5a3 MSTORE
0x5a4 DUP1
0x5a5 PUSH1 0x20
0x5a7 MUL
0x5a8 PUSH1 0x20
0x5aa ADD
0x5ab DUP3
0x5ac ADD
0x5ad PUSH1 0x40
0x5af MSTORE
0x5b0 DUP1
0x5b1 ISZERO
0x5b2 PUSH2 0x5c5
0x5b5 JUMPI
---
0x599: JUMPDEST 
0x59d: V441 = 0x40
0x59f: V442 = M[0x40]
0x5a3: M[V442] = S0
0x5a5: V443 = 0x20
0x5a7: V444 = MUL 0x20 S0
0x5a8: V445 = 0x20
0x5aa: V446 = ADD 0x20 V444
0x5ac: V447 = ADD V442 V446
0x5ad: V448 = 0x40
0x5af: M[0x40] = V447
0x5b1: V449 = ISZERO S0
0x5b2: V450 = 0x5c5
0x5b5: JUMPI 0x5c5 V449
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S1, S0]
Stack pops: 5
Stack additions: [S0, S3, S2, S1, V442, S0]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, S0, 0x0, 0x0, S1, V442, S0]

================================

Block 0x5b6
[0x5b6:0x5c4]
---
Predecessors: [0x599]
Successors: [0x5c5]
---
0x5b6 DUP2
0x5b7 PUSH1 0x20
0x5b9 ADD
0x5ba PUSH1 0x20
0x5bc DUP3
0x5bd MUL
0x5be DUP1
0x5bf CODESIZE
0x5c0 DUP4
0x5c1 CODECOPY
0x5c2 ADD
0x5c3 SWAP1
0x5c4 POP
---
0x5b7: V451 = 0x20
0x5b9: V452 = ADD 0x20 V442
0x5ba: V453 = 0x20
0x5bd: V454 = MUL S0 0x20
0x5bf: V455 = CODESIZE
0x5c1: CODECOPY V452 V455 V454
0x5c2: V456 = ADD V454 V452
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, S5, 0x0, 0x0, S2, V442, S0]
Stack pops: 2
Stack additions: [S1, V456]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, S5, 0x0, 0x0, S2, V442, V456]

================================

Block 0x5c5
[0x5c5:0x5e2]
---
Predecessors: [0x599, 0x5b6]
Successors: [0x5e3, 0x5f2]
---
0x5c5 JUMPDEST
0x5c6 POP
0x5c7 SWAP7
0x5c8 POP
0x5c9 DUP4
0x5ca PUSH1 0x40
0x5cc MLOAD
0x5cd SWAP1
0x5ce DUP1
0x5cf DUP3
0x5d0 MSTORE
0x5d1 DUP1
0x5d2 PUSH1 0x20
0x5d4 MUL
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 DUP3
0x5d9 ADD
0x5da PUSH1 0x40
0x5dc MSTORE
0x5dd DUP1
0x5de ISZERO
0x5df PUSH2 0x5f2
0x5e2 JUMPI
---
0x5c5: JUMPDEST 
0x5ca: V457 = 0x40
0x5cc: V458 = M[0x40]
0x5d0: M[V458] = S5
0x5d2: V459 = 0x20
0x5d4: V460 = MUL 0x20 S5
0x5d5: V461 = 0x20
0x5d7: V462 = ADD 0x20 V460
0x5d9: V463 = ADD V458 V462
0x5da: V464 = 0x40
0x5dc: M[0x40] = V463
0x5de: V465 = ISZERO S5
0x5df: V466 = 0x5f2
0x5e2: JUMPI 0x5f2 V465
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, S5, 0x0, 0x0, S2, V442, S0]
Stack pops: 9
Stack additions: [S1, S7, S6, S5, S4, S3, S2, V458, S5]
Exit stack: [V11, 0x29d, V163, V442, 0x60, 0x60, S5, 0x0, 0x0, S2, V458, S5]

================================

Block 0x5e3
[0x5e3:0x5f1]
---
Predecessors: [0x5c5]
Successors: [0x5f2]
---
0x5e3 DUP2
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 PUSH1 0x20
0x5e9 DUP3
0x5ea MUL
0x5eb DUP1
0x5ec CODESIZE
0x5ed DUP4
0x5ee CODECOPY
0x5ef ADD
0x5f0 SWAP1
0x5f1 POP
---
0x5e4: V467 = 0x20
0x5e6: V468 = ADD 0x20 V458
0x5e7: V469 = 0x20
0x5ea: V470 = MUL S0 0x20
0x5ec: V471 = CODESIZE
0x5ee: CODECOPY V468 V471 V470
0x5ef: V472 = ADD V470 V468
---
Entry stack: [V11, 0x29d, V163, V442, 0x60, 0x60, S5, 0x0, 0x0, S2, V458, S0]
Stack pops: 2
Stack additions: [S1, V472]
Exit stack: [V11, 0x29d, V163, V442, 0x60, 0x60, S5, 0x0, 0x0, S2, V458, V472]

================================

Block 0x5f2
[0x5f2:0x60f]
---
Predecessors: [0x5c5, 0x5e3]
Successors: [0x610, 0x61f]
---
0x5f2 JUMPDEST
0x5f3 POP
0x5f4 SWAP6
0x5f5 POP
0x5f6 DUP4
0x5f7 PUSH1 0x40
0x5f9 MLOAD
0x5fa SWAP1
0x5fb DUP1
0x5fc DUP3
0x5fd MSTORE
0x5fe DUP1
0x5ff PUSH1 0x20
0x601 MUL
0x602 PUSH1 0x20
0x604 ADD
0x605 DUP3
0x606 ADD
0x607 PUSH1 0x40
0x609 MSTORE
0x60a DUP1
0x60b ISZERO
0x60c PUSH2 0x61f
0x60f JUMPI
---
0x5f2: JUMPDEST 
0x5f7: V473 = 0x40
0x5f9: V474 = M[0x40]
0x5fd: M[V474] = S5
0x5ff: V475 = 0x20
0x601: V476 = MUL 0x20 S5
0x602: V477 = 0x20
0x604: V478 = ADD 0x20 V476
0x606: V479 = ADD V474 V478
0x607: V480 = 0x40
0x609: M[0x40] = V479
0x60b: V481 = ISZERO S5
0x60c: V482 = 0x61f
0x60f: JUMPI 0x61f V481
---
Entry stack: [V11, 0x29d, V163, V442, 0x60, 0x60, S5, 0x0, 0x0, S2, V458, S0]
Stack pops: 8
Stack additions: [S1, S6, S5, S4, S3, S2, V474, S5]
Exit stack: [V11, 0x29d, V163, V442, V458, 0x60, S5, 0x0, 0x0, S2, V474, S5]

================================

Block 0x610
[0x610:0x61e]
---
Predecessors: [0x5f2]
Successors: [0x61f]
---
0x610 DUP2
0x611 PUSH1 0x20
0x613 ADD
0x614 PUSH1 0x20
0x616 DUP3
0x617 MUL
0x618 DUP1
0x619 CODESIZE
0x61a DUP4
0x61b CODECOPY
0x61c ADD
0x61d SWAP1
0x61e POP
---
0x611: V483 = 0x20
0x613: V484 = ADD 0x20 V474
0x614: V485 = 0x20
0x617: V486 = MUL S0 0x20
0x619: V487 = CODESIZE
0x61b: CODECOPY V484 V487 V486
0x61c: V488 = ADD V486 V484
---
Entry stack: [V11, 0x29d, V163, V442, V458, 0x60, S5, 0x0, 0x0, S2, V474, S0]
Stack pops: 2
Stack additions: [S1, V488]
Exit stack: [V11, 0x29d, V163, V442, V458, 0x60, S5, 0x0, 0x0, S2, V474, V488]

================================

Block 0x61f
[0x61f:0x62b]
---
Predecessors: [0x5f2, 0x610]
Successors: [0x62c, 0x70a]
---
0x61f JUMPDEST
0x620 POP
0x621 SWAP5
0x622 POP
0x623 PUSH1 0x0
0x625 DUP5
0x626 GT
0x627 ISZERO
0x628 PUSH2 0x70a
0x62b JUMPI
---
0x61f: JUMPDEST 
0x623: V489 = 0x0
0x626: V490 = GT S5 0x0
0x627: V491 = ISZERO V490
0x628: V492 = 0x70a
0x62b: JUMPI 0x70a V491
---
Entry stack: [V11, 0x29d, V163, V442, V458, 0x60, S5, 0x0, 0x0, S2, V474, S0]
Stack pops: 7
Stack additions: [S1, S5, S4, S3, S2]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S5, 0x0, 0x0, S2]

================================

Block 0x62c
[0x62c:0x634]
---
Predecessors: [0x61f]
Successors: [0x635]
---
0x62c PUSH1 0x0
0x62e SWAP3
0x62f POP
0x630 PUSH1 0x1
0x632 SLOAD
0x633 SWAP2
0x634 POP
---
0x62c: V493 = 0x0
0x630: V494 = 0x1
0x632: V495 = S[0x1]
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S3, 0x0, 0x0, S0]
Stack pops: 3
Stack additions: [0x0, V495, S0]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S3, 0x0, V495, S0]

================================

Block 0x635
[0x635:0x63f]
---
Predecessors: [0x62c, 0x6ff]
Successors: [0x640, 0x70a]
---
0x635 JUMPDEST
0x636 PUSH1 0x0
0x638 SLOAD
0x639 DUP3
0x63a LT
0x63b ISZERO
0x63c PUSH2 0x70a
0x63f JUMPI
---
0x635: JUMPDEST 
0x636: V496 = 0x0
0x638: V497 = S[0x0]
0x63a: V498 = LT S1 V497
0x63b: V499 = ISZERO V498
0x63c: V500 = 0x70a
0x63f: JUMPI 0x70a V499
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, S0]

================================

Block 0x640
[0x640:0x64b]
---
Predecessors: [0x635]
Successors: [0x64c, 0x64d]
---
0x640 PUSH1 0x0
0x642 DUP1
0x643 SLOAD
0x644 DUP4
0x645 SWAP1
0x646 DUP2
0x647 LT
0x648 PUSH2 0x64d
0x64b JUMPI
---
0x640: V501 = 0x0
0x643: V502 = S[0x0]
0x647: V503 = LT S1 V502
0x648: V504 = 0x64d
0x64b: JUMPI 0x64d V503
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, S0, 0x0, S1]

================================

Block 0x64c
[0x64c:0x64c]
---
Predecessors: [0x640]
Successors: []
---
0x64c INVALID
---
0x64c: INVALID 
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S5, S4, S3, S2, 0x0, S0]

================================

Block 0x64d
[0x64d:0x675]
---
Predecessors: [0x640]
Successors: [0x676, 0x6ff]
---
0x64d JUMPDEST
0x64e PUSH1 0x0
0x650 SWAP2
0x651 DUP3
0x652 MSTORE
0x653 PUSH1 0x20
0x655 SWAP1
0x656 SWAP2
0x657 SHA3
0x658 PUSH1 0x2
0x65a SWAP1
0x65b SWAP2
0x65c MUL
0x65d ADD
0x65e DUP1
0x65f SLOAD
0x660 SWAP1
0x661 SWAP2
0x662 POP
0x663 PUSH1 0x1
0x665 PUSH1 0xa0
0x667 PUSH1 0x2
0x669 EXP
0x66a SUB
0x66b DUP10
0x66c DUP2
0x66d AND
0x66e SWAP2
0x66f AND
0x670 EQ
0x671 ISZERO
0x672 PUSH2 0x6ff
0x675 JUMPI
---
0x64d: JUMPDEST 
0x64e: V505 = 0x0
0x652: M[0x0] = 0x0
0x653: V506 = 0x20
0x657: V507 = SHA3 0x0 0x20
0x658: V508 = 0x2
0x65c: V509 = MUL S0 0x2
0x65d: V510 = ADD V509 V507
0x65f: V511 = S[V510]
0x663: V512 = 0x1
0x665: V513 = 0xa0
0x667: V514 = 0x2
0x669: V515 = EXP 0x2 0xa0
0x66a: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66d: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x66f: V518 = AND V511 0xffffffffffffffffffffffffffffffffffffffff
0x670: V519 = EQ V518 V517
0x671: V520 = ISZERO V519
0x672: V521 = 0x6ff
0x675: JUMPI 0x6ff V520
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S5, S4, S3, S2, 0x0, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, V510]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S5, S4, S3, V510]

================================

Block 0x676
[0x676:0x682]
---
Predecessors: [0x64d]
Successors: [0x683, 0x684]
---
0x676 DUP2
0x677 DUP8
0x678 DUP5
0x679 DUP2
0x67a MLOAD
0x67b DUP2
0x67c LT
0x67d ISZERO
0x67e ISZERO
0x67f PUSH2 0x684
0x682 JUMPI
---
0x67a: V522 = M[V442]
0x67c: V523 = LT S2 V522
0x67d: V524 = ISZERO V523
0x67e: V525 = ISZERO V524
0x67f: V526 = 0x684
0x682: JUMPI 0x684 V525
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, V510]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S1, S6, S2]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, V510, S1, V442, S2]

================================

Block 0x683
[0x683:0x683]
---
Predecessors: [0x676]
Successors: []
---
0x683 INVALID
---
0x683: INVALID 
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, S2, V442, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, S2, V442, S0]

================================

Block 0x684
[0x684:0x6ab]
---
Predecessors: [0x676]
Successors: [0x6ac, 0x6ad]
---
0x684 JUMPDEST
0x685 PUSH1 0x20
0x687 SWAP1
0x688 DUP2
0x689 MUL
0x68a SWAP1
0x68b SWAP2
0x68c ADD
0x68d ADD
0x68e MSTORE
0x68f PUSH1 0x1
0x691 DUP2
0x692 ADD
0x693 SLOAD
0x694 DUP7
0x695 MLOAD
0x696 PUSH1 0x1
0x698 PUSH1 0x80
0x69a PUSH1 0x2
0x69c EXP
0x69d SUB
0x69e SWAP1
0x69f SWAP2
0x6a0 AND
0x6a1 SWAP1
0x6a2 DUP8
0x6a3 SWAP1
0x6a4 DUP6
0x6a5 SWAP1
0x6a6 DUP2
0x6a7 LT
0x6a8 PUSH2 0x6ad
0x6ab JUMPI
---
0x684: JUMPDEST 
0x685: V527 = 0x20
0x689: V528 = MUL 0x20 S0
0x68c: V529 = ADD V442 V528
0x68d: V530 = ADD V529 0x20
0x68e: M[V530] = S2
0x68f: V531 = 0x1
0x692: V532 = ADD V510 0x1
0x693: V533 = S[V532]
0x695: V534 = M[V458]
0x696: V535 = 0x1
0x698: V536 = 0x80
0x69a: V537 = 0x2
0x69c: V538 = EXP 0x2 0x80
0x69d: V539 = SUB 0x100000000000000000000000000000000 0x1
0x6a0: V540 = AND V533 0xffffffffffffffffffffffffffffffff
0x6a7: V541 = LT S5 V534
0x6a8: V542 = 0x6ad
0x6ab: JUMPI 0x6ad V541
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, S2, V442, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V540, S8, S5]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V540, V458, S5]

================================

Block 0x6ac
[0x6ac:0x6ac]
---
Predecessors: [0x684]
Successors: []
---
0x6ac INVALID
---
0x6ac: INVALID 
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V540, V458, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V540, V458, S0]

================================

Block 0x6ad
[0x6ad:0x6df]
---
Predecessors: [0x684]
Successors: [0x6e0, 0x6e1]
---
0x6ad JUMPDEST
0x6ae PUSH1 0x1
0x6b0 PUSH1 0x80
0x6b2 PUSH1 0x2
0x6b4 EXP
0x6b5 SUB
0x6b6 SWAP3
0x6b7 DUP4
0x6b8 AND
0x6b9 PUSH1 0x20
0x6bb SWAP2
0x6bc DUP3
0x6bd MUL
0x6be SWAP1
0x6bf SWAP3
0x6c0 ADD
0x6c1 ADD
0x6c2 MSTORE
0x6c3 PUSH1 0x1
0x6c5 DUP3
0x6c6 ADD
0x6c7 SLOAD
0x6c8 DUP7
0x6c9 MLOAD
0x6ca PUSH1 0x80
0x6cc PUSH1 0x2
0x6ce EXP
0x6cf SWAP1
0x6d0 SWAP2
0x6d1 DIV
0x6d2 SWAP1
0x6d3 SWAP2
0x6d4 AND
0x6d5 SWAP1
0x6d6 DUP7
0x6d7 SWAP1
0x6d8 DUP6
0x6d9 SWAP1
0x6da DUP2
0x6db LT
0x6dc PUSH2 0x6e1
0x6df JUMPI
---
0x6ad: JUMPDEST 
0x6ae: V543 = 0x1
0x6b0: V544 = 0x80
0x6b2: V545 = 0x2
0x6b4: V546 = EXP 0x2 0x80
0x6b5: V547 = SUB 0x100000000000000000000000000000000 0x1
0x6b8: V548 = AND 0xffffffffffffffffffffffffffffffff V540
0x6b9: V549 = 0x20
0x6bd: V550 = MUL 0x20 S0
0x6c0: V551 = ADD V458 V550
0x6c1: V552 = ADD V551 0x20
0x6c2: M[V552] = V548
0x6c3: V553 = 0x1
0x6c6: V554 = ADD V510 0x1
0x6c7: V555 = S[V554]
0x6c9: V556 = M[V474]
0x6ca: V557 = 0x80
0x6cc: V558 = 0x2
0x6ce: V559 = EXP 0x2 0x80
0x6d1: V560 = DIV V555 0x100000000000000000000000000000000
0x6d4: V561 = AND 0xffffffffffffffffffffffffffffffff V560
0x6db: V562 = LT S5 V556
0x6dc: V563 = 0x6e1
0x6df: JUMPI 0x6e1 V562
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V540, V458, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V561, S7, S5]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V561, V474, S5]

================================

Block 0x6e0
[0x6e0:0x6e0]
---
Predecessors: [0x6ad]
Successors: []
---
0x6e0 INVALID
---
0x6e0: INVALID 
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V561, V474, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V561, V474, S0]

================================

Block 0x6e1
[0x6e1:0x6fe]
---
Predecessors: [0x6ad]
Successors: [0x6ff]
---
0x6e1 JUMPDEST
0x6e2 PUSH1 0x1
0x6e4 PUSH1 0x80
0x6e6 PUSH1 0x2
0x6e8 EXP
0x6e9 SUB
0x6ea SWAP1
0x6eb SWAP3
0x6ec AND
0x6ed PUSH1 0x20
0x6ef SWAP3
0x6f0 DUP4
0x6f1 MUL
0x6f2 SWAP1
0x6f3 SWAP2
0x6f4 ADD
0x6f5 SWAP1
0x6f6 SWAP2
0x6f7 ADD
0x6f8 MSTORE
0x6f9 PUSH1 0x1
0x6fb SWAP1
0x6fc SWAP3
0x6fd ADD
0x6fe SWAP2
---
0x6e1: JUMPDEST 
0x6e2: V564 = 0x1
0x6e4: V565 = 0x80
0x6e6: V566 = 0x2
0x6e8: V567 = EXP 0x2 0x80
0x6e9: V568 = SUB 0x100000000000000000000000000000000 0x1
0x6ec: V569 = AND V561 0xffffffffffffffffffffffffffffffff
0x6ed: V570 = 0x20
0x6f1: V571 = MUL 0x20 S0
0x6f4: V572 = ADD V474 V571
0x6f7: V573 = ADD 0x20 V572
0x6f8: M[V573] = V569
0x6f9: V574 = 0x1
0x6fd: V575 = ADD S5 0x1
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S6, S5, S4, V510, V561, V474, S0]
Stack pops: 6
Stack additions: [V575, S4, S3]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S6, V575, S4, V510]

================================

Block 0x6ff
[0x6ff:0x709]
---
Predecessors: [0x64d, 0x6e1]
Successors: [0x635]
---
0x6ff JUMPDEST
0x700 DUP2
0x701 PUSH1 0x1
0x703 ADD
0x704 SWAP2
0x705 POP
0x706 PUSH2 0x635
0x709 JUMP
---
0x6ff: JUMPDEST 
0x701: V576 = 0x1
0x703: V577 = ADD 0x1 S1
0x706: V578 = 0x635
0x709: JUMP 0x635
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, V510]
Stack pops: 2
Stack additions: [V577, S0]
Exit stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, V577, V510]

================================

Block 0x70a
[0x70a:0x714]
---
Predecessors: [0x61f, 0x635]
Successors: [0x29d]
---
0x70a JUMPDEST
0x70b POP
0x70c POP
0x70d POP
0x70e POP
0x70f SWAP2
0x710 SWAP4
0x711 SWAP1
0x712 SWAP3
0x713 POP
0x714 JUMP
---
0x70a: JUMPDEST 
0x714: JUMP 0x29d
---
Entry stack: [V11, 0x29d, V163, V442, V458, V474, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S6, S5, S4]
Exit stack: [V11, V442, V458, V474]

================================

Block 0x715
[0x715:0x728]
---
Predecessors: [0x387]
Successors: [0x729, 0x72a]
---
0x715 JUMPDEST
0x716 PUSH1 0x0
0x718 DUP1
0x719 PUSH1 0x0
0x71b DUP1
0x71c PUSH1 0x0
0x71e DUP6
0x71f DUP2
0x720 SLOAD
0x721 DUP2
0x722 LT
0x723 ISZERO
0x724 ISZERO
0x725 PUSH2 0x72a
0x728 JUMPI
---
0x715: JUMPDEST 
0x716: V579 = 0x0
0x719: V580 = 0x0
0x71c: V581 = 0x0
0x720: V582 = S[0x0]
0x722: V583 = LT V242 V582
0x723: V584 = ISZERO V583
0x724: V585 = ISZERO V584
0x725: V586 = 0x72a
0x728: JUMPI 0x72a V585
---
Entry stack: [V11, 0x393, V242]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Exit stack: [V11, 0x393, V242, 0x0, 0x0, 0x0, 0x0, 0x0, V242]

================================

Block 0x729
[0x729:0x729]
---
Predecessors: [0x715]
Successors: []
---
0x729 INVALID
---
0x729: INVALID 
---
Entry stack: [V11, 0x393, V242, 0x0, 0x0, 0x0, 0x0, 0x0, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x393, V242, 0x0, 0x0, 0x0, 0x0, 0x0, V242]

================================

Block 0x72a
[0x72a:0x76d]
---
Predecessors: [0x715]
Successors: [0x393]
---
0x72a JUMPDEST
0x72b PUSH1 0x0
0x72d SWAP2
0x72e DUP3
0x72f MSTORE
0x730 PUSH1 0x20
0x732 SWAP1
0x733 SWAP2
0x734 SHA3
0x735 PUSH1 0x2
0x737 SWAP1
0x738 SWAP2
0x739 MUL
0x73a ADD
0x73b DUP1
0x73c SLOAD
0x73d PUSH1 0x1
0x73f SWAP1
0x740 SWAP2
0x741 ADD
0x742 SLOAD
0x743 PUSH1 0x1
0x745 PUSH1 0xa0
0x747 PUSH1 0x2
0x749 EXP
0x74a SUB
0x74b SWAP1
0x74c SWAP2
0x74d AND
0x74e SWAP7
0x74f PUSH1 0x1
0x751 PUSH1 0x80
0x753 PUSH1 0x2
0x755 EXP
0x756 SUB
0x757 DUP1
0x758 DUP4
0x759 AND
0x75a SWAP8
0x75b POP
0x75c PUSH1 0x80
0x75e PUSH1 0x2
0x760 EXP
0x761 SWAP1
0x762 SWAP3
0x763 DIV
0x764 SWAP1
0x765 SWAP2
0x766 AND
0x767 SWAP5
0x768 POP
0x769 SWAP3
0x76a POP
0x76b POP
0x76c POP
0x76d JUMP
---
0x72a: JUMPDEST 
0x72b: V587 = 0x0
0x72f: M[0x0] = 0x0
0x730: V588 = 0x20
0x734: V589 = SHA3 0x0 0x20
0x735: V590 = 0x2
0x739: V591 = MUL V242 0x2
0x73a: V592 = ADD V591 V589
0x73c: V593 = S[V592]
0x73d: V594 = 0x1
0x741: V595 = ADD V592 0x1
0x742: V596 = S[V595]
0x743: V597 = 0x1
0x745: V598 = 0xa0
0x747: V599 = 0x2
0x749: V600 = EXP 0x2 0xa0
0x74a: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74d: V602 = AND V593 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V603 = 0x1
0x751: V604 = 0x80
0x753: V605 = 0x2
0x755: V606 = EXP 0x2 0x80
0x756: V607 = SUB 0x100000000000000000000000000000000 0x1
0x759: V608 = AND V596 0xffffffffffffffffffffffffffffffff
0x75c: V609 = 0x80
0x75e: V610 = 0x2
0x760: V611 = EXP 0x2 0x80
0x763: V612 = DIV V596 0x100000000000000000000000000000000
0x766: V613 = AND 0xffffffffffffffffffffffffffffffff V612
0x76d: JUMP 0x393
---
Entry stack: [V11, 0x393, V242, 0x0, 0x0, 0x0, 0x0, 0x0, V242]
Stack pops: 8
Stack additions: [V602, V608, V613]
Exit stack: [V11, V602, V608, V613]

================================

Block 0x76e
[0x76e:0x777]
---
Predecessors: [0x3c7]
Successors: [0x255]
---
0x76e JUMPDEST
0x76f PUSH1 0x1
0x771 SLOAD
0x772 PUSH1 0x0
0x774 SLOAD
0x775 SUB
0x776 SWAP1
0x777 JUMP
---
0x76e: JUMPDEST 
0x76f: V614 = 0x1
0x771: V615 = S[0x1]
0x772: V616 = 0x0
0x774: V617 = S[0x0]
0x775: V618 = SUB V617 V615
0x777: JUMP 0x255
---
Entry stack: [V11, 0x255]
Stack pops: 1
Stack additions: [V618]
Exit stack: [V11, V618]

================================

Block 0x778
[0x778:0x77c]
---
Predecessors: [0x3dc]
Successors: [0x255]
---
0x778 JUMPDEST
0x779 PUSH1 0x4
0x77b DUP2
0x77c JUMP
---
0x778: JUMPDEST 
0x779: V619 = 0x4
0x77c: JUMP 0x255
---
Entry stack: [V11, 0x255]
Stack pops: 1
Stack additions: [S0, 0x4]
Exit stack: [V11, 0x255, 0x4]

================================

Block 0x77d
[0x77d:0x785]
---
Predecessors: [0x3f1, 0x585]
Successors: [0x786]
---
0x77d JUMPDEST
0x77e PUSH1 0x1
0x780 SLOAD
0x781 PUSH1 0x0
0x783 SWAP1
0x784 DUP2
0x785 SWAP1
---
0x77d: JUMPDEST 
0x77e: V620 = 0x1
0x780: V621 = S[0x1]
0x781: V622 = 0x0
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S2, {0x255, 0x599}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, V621]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S2, {0x255, 0x599}, S0, 0x0, 0x0, V621]

================================

Block 0x786
[0x786:0x790]
---
Predecessors: [0x77d, 0x7d0]
Successors: [0x791, 0x7d8]
---
0x786 JUMPDEST
0x787 PUSH1 0x0
0x789 SLOAD
0x78a DUP2
0x78b LT
0x78c ISZERO
0x78d PUSH2 0x7d8
0x790 JUMPI
---
0x786: JUMPDEST 
0x787: V623 = 0x0
0x789: V624 = S[0x0]
0x78b: V625 = LT S0 V624
0x78c: V626 = ISZERO V625
0x78d: V627 = 0x7d8
0x790: JUMPI 0x7d8 V626
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, S0]

================================

Block 0x791
[0x791:0x7a7]
---
Predecessors: [0x786]
Successors: [0x7a8, 0x7a9]
---
0x791 DUP4
0x792 PUSH1 0x1
0x794 PUSH1 0xa0
0x796 PUSH1 0x2
0x798 EXP
0x799 SUB
0x79a AND
0x79b PUSH1 0x0
0x79d DUP3
0x79e DUP2
0x79f SLOAD
0x7a0 DUP2
0x7a1 LT
0x7a2 ISZERO
0x7a3 ISZERO
0x7a4 PUSH2 0x7a9
0x7a7 JUMPI
---
0x792: V628 = 0x1
0x794: V629 = 0xa0
0x796: V630 = 0x2
0x798: V631 = EXP 0x2 0xa0
0x799: V632 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79a: V633 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x79b: V634 = 0x0
0x79f: V635 = S[0x0]
0x7a1: V636 = LT S0 V635
0x7a2: V637 = ISZERO V636
0x7a3: V638 = ISZERO V637
0x7a4: V639 = 0x7a9
0x7a7: JUMPI 0x7a9 V638
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V633, 0x0, S0]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, S0, V633, 0x0, S0]

================================

Block 0x7a8
[0x7a8:0x7a8]
---
Predecessors: [0x791]
Successors: []
---
0x7a8 INVALID
---
0x7a8: INVALID 
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S8, {0x255, 0x599}, S6, 0x0, S4, S3, V633, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S8, {0x255, 0x599}, S6, 0x0, S4, S3, V633, 0x0, S0]

================================

Block 0x7a9
[0x7a9:0x7c9]
---
Predecessors: [0x791]
Successors: [0x7ca, 0x7d0]
---
0x7a9 JUMPDEST
0x7aa PUSH1 0x0
0x7ac SWAP2
0x7ad DUP3
0x7ae MSTORE
0x7af PUSH1 0x20
0x7b1 SWAP1
0x7b2 SWAP2
0x7b3 SHA3
0x7b4 PUSH1 0x2
0x7b6 SWAP1
0x7b7 SWAP2
0x7b8 MUL
0x7b9 ADD
0x7ba SLOAD
0x7bb PUSH1 0x1
0x7bd PUSH1 0xa0
0x7bf PUSH1 0x2
0x7c1 EXP
0x7c2 SUB
0x7c3 AND
0x7c4 EQ
0x7c5 ISZERO
0x7c6 PUSH2 0x7d0
0x7c9 JUMPI
---
0x7a9: JUMPDEST 
0x7aa: V640 = 0x0
0x7ae: M[0x0] = 0x0
0x7af: V641 = 0x20
0x7b3: V642 = SHA3 0x0 0x20
0x7b4: V643 = 0x2
0x7b8: V644 = MUL S0 0x2
0x7b9: V645 = ADD V644 V642
0x7ba: V646 = S[V645]
0x7bb: V647 = 0x1
0x7bd: V648 = 0xa0
0x7bf: V649 = 0x2
0x7c1: V650 = EXP 0x2 0xa0
0x7c2: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c3: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x7c4: V653 = EQ V652 V633
0x7c5: V654 = ISZERO V653
0x7c6: V655 = 0x7d0
0x7c9: JUMPI 0x7d0 V654
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S8, {0x255, 0x599}, S6, 0x0, S4, S3, V633, 0x0, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S8, {0x255, 0x599}, S6, 0x0, S4, S3]

================================

Block 0x7ca
[0x7ca:0x7cf]
---
Predecessors: [0x7a9]
Successors: [0x7d0]
---
0x7ca PUSH1 0x1
0x7cc SWAP1
0x7cd SWAP2
0x7ce ADD
0x7cf SWAP1
---
0x7ca: V656 = 0x1
0x7ce: V657 = ADD S1 0x1
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, S0]
Stack pops: 2
Stack additions: [V657, S0]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, V657, S0]

================================

Block 0x7d0
[0x7d0:0x7d7]
---
Predecessors: [0x7a9, 0x7ca]
Successors: [0x786]
---
0x7d0 JUMPDEST
0x7d1 PUSH1 0x1
0x7d3 ADD
0x7d4 PUSH2 0x786
0x7d7 JUMP
---
0x7d0: JUMPDEST 
0x7d1: V658 = 0x1
0x7d3: V659 = ADD 0x1 S0
0x7d4: V660 = 0x786
0x7d7: JUMP 0x786
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V659]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, V659]

================================

Block 0x7d8
[0x7d8:0x7de]
---
Predecessors: [0x786]
Successors: [0x255, 0x599]
---
0x7d8 JUMPDEST
0x7d9 POP
0x7da SWAP3
0x7db SWAP2
0x7dc POP
0x7dd POP
0x7de JUMP
---
0x7d8: JUMPDEST 
0x7de: JUMP {0x255, 0x599}
---
Entry stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, {0x255, 0x599}, S3, 0x0, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x29d, V163, 0x60, 0x60, 0x60, 0x0, 0x0, 0x0, S5, S1]

================================

Block 0x7df
[0x7df:0x80a]
---
Predecessors: []
Successors: []
---
0x7df STOP
0x7e0 LOG1
0x7e1 PUSH6 0x627a7a723058
0x7e8 SHA3
0x7e9 MISSING 0x46
0x7ea MISSING 0xc4
0x7eb PUSH26 0xa007cb51e164df416886a8d572f4a0eaf4182440eec26711ffdb
0x806 MISSING 0xe6
0x807 MISSING 0xb0
0x808 MISSING 0xb2
0x809 STOP
0x80a MISSING 0x29
---
0x7df: STOP 
0x7e0: LOG S0 S1 S2
0x7e1: V661 = 0x627a7a723058
0x7e8: V662 = SHA3 0x627a7a723058 S3
0x7e9: MISSING 0x46
0x7ea: MISSING 0xc4
0x7eb: V663 = 0xa007cb51e164df416886a8d572f4a0eaf4182440eec26711ffdb
0x806: MISSING 0xe6
0x807: MISSING 0xb0
0x808: MISSING 0xb2
0x809: STOP 
0x80a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V662, 0xa007cb51e164df416886a8d572f4a0eaf4182440eec26711ffdb]
Exit stack: []

================================

Function 0:
Public function signature: 0x59f8b16
Entry block: 0x240
Exit block: 0x255
Body: 0x240, 0x248, 0x24c, 0x255, 0x57a

Function 1:
Public function signature: 0x2d95663b
Entry block: 0x267
Exit block: 0x255
Body: 0x255, 0x267, 0x26f, 0x273, 0x57f

Function 2:
Public function signature: 0x94f649dd
Entry block: 0x27c
Exit block: 0x363
Body: 0x27c, 0x284, 0x288, 0x29d, 0x2cd, 0x2d6, 0x2e5, 0x30c, 0x315, 0x324, 0x34b, 0x354, 0x363, 0x585, 0x599, 0x5b6, 0x5c5, 0x5e3, 0x5f2, 0x610, 0x61f, 0x62c, 0x635, 0x640, 0x64c, 0x64d, 0x676, 0x683, 0x684, 0x6ac, 0x6ad, 0x6e0, 0x6e1, 0x6ff, 0x70a

Function 3:
Public function signature: 0x9f9fb968
Entry block: 0x37b
Exit block: 0x393
Body: 0x37b, 0x383, 0x387, 0x393, 0x715, 0x729, 0x72a

Function 4:
Public function signature: 0xb8f77005
Entry block: 0x3bb
Exit block: 0x255
Body: 0x255, 0x3bb, 0x3c3, 0x3c7, 0x76e

Function 5:
Public function signature: 0xc533a5a3
Entry block: 0x3d0
Exit block: 0x255
Body: 0x255, 0x3d0, 0x3d8, 0x3dc, 0x778

Function 6:
Public function signature: 0xc67f7df5
Entry block: 0x3e5
Exit block: 0x255
Body: 0x255, 0x3e5, 0x3ed, 0x3f1

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x4c6
Body: 0x82, 0x8d, 0x98, 0xfe, 0x10f, 0x113, 0x23d, 0x406, 0x40d, 0x418, 0x42c, 0x42d, 0x460, 0x4c6, 0x4c7, 0x4fa, 0x553, 0x55d, 0x561, 0x56c

Function 8:
Private function
Entry block: 0x77d
Exit block: 0x7d8
Body: 0x77d, 0x786, 0x791, 0x7a9, 0x7ca, 0x7d0, 0x7d8

