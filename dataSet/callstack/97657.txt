Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x77
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x77
0xa: JUMPI 0x77 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xaa]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x244ded7a
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xaa
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x244ded7a
0x1a: V12 = EQ V10 0x244ded7a
0x1b: V13 = 0xaa
0x1e: JUMPI 0xaa V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xdf]
---
0x1f DUP1
0x20 PUSH4 0x63aea3e0
0x25 EQ
0x26 PUSH2 0xdf
0x29 JUMPI
---
0x20: V14 = 0x63aea3e0
0x25: V15 = EQ 0x63aea3e0 V10
0x26: V16 = 0xdf
0x29: JUMPI 0xdf V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x199]
---
0x2a DUP1
0x2b PUSH4 0x7879e19e
0x30 EQ
0x31 PUSH2 0x199
0x34 JUMPI
---
0x2b: V17 = 0x7879e19e
0x30: V18 = EQ 0x7879e19e V10
0x31: V19 = 0x199
0x34: JUMPI 0x199 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x1c5]
---
0x35 DUP1
0x36 PUSH4 0x7e4620a8
0x3b EQ
0x3c PUSH2 0x1c5
0x3f JUMPI
---
0x36: V20 = 0x7e4620a8
0x3b: V21 = EQ 0x7e4620a8 V10
0x3c: V22 = 0x1c5
0x3f: JUMPI 0x1c5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x2bf]
---
0x40 DUP1
0x41 PUSH4 0x82381c96
0x46 EQ
0x47 PUSH2 0x2bf
0x4a JUMPI
---
0x41: V23 = 0x82381c96
0x46: V24 = EQ 0x82381c96 V10
0x47: V25 = 0x2bf
0x4a: JUMPI 0x2bf V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x311]
---
0x4b DUP1
0x4c PUSH4 0x936e75b2
0x51 EQ
0x52 PUSH2 0x311
0x55 JUMPI
---
0x4c: V26 = 0x936e75b2
0x51: V27 = EQ 0x936e75b2 V10
0x52: V28 = 0x311
0x55: JUMPI 0x311 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x3a1]
---
0x56 DUP1
0x57 PUSH4 0xc8edf65e
0x5c EQ
0x5d PUSH2 0x3a1
0x60 JUMPI
---
0x57: V29 = 0xc8edf65e
0x5c: V30 = EQ 0xc8edf65e V10
0x5d: V31 = 0x3a1
0x60: JUMPI 0x3a1 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x41a]
---
0x61 DUP1
0x62 PUSH4 0xd628e0a6
0x67 EQ
0x68 PUSH2 0x41a
0x6b JUMPI
---
0x62: V32 = 0xd628e0a6
0x67: V33 = EQ 0xd628e0a6 V10
0x68: V34 = 0x41a
0x6b: JUMPI 0x41a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x471]
---
0x6c DUP1
0x6d PUSH4 0xdbb0681e
0x72 EQ
0x73 PUSH2 0x471
0x76 JUMPI
---
0x6d: V35 = 0xdbb0681e
0x72: V36 = EQ 0xdbb0681e V10
0x73: V37 = 0x471
0x76: JUMPI 0x471 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x87]
---
Predecessors: [0x0, 0x6c]
Successors: [0x88, 0x4b1]
---
0x77 JUMPDEST
0x78 PUSH2 0x486
0x7b PUSH2 0xa8
0x7e PUSH1 0x5
0x80 SLOAD
0x81 CALLVALUE
0x82 LT
0x83 ISZERO
0x84 PUSH2 0x4b1
0x87 JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x486
0x7b: V39 = 0xa8
0x7e: V40 = 0x5
0x80: V41 = S[0x5]
0x81: V42 = CALLVALUE
0x82: V43 = LT V42 V41
0x83: V44 = ISZERO V43
0x84: V45 = 0x4b1
0x87: JUMPI 0x4b1 V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x486, 0xa8]
Exit stack: [V10, 0x486, 0xa8]

================================

Block 0x88
[0x88:0xa7]
---
Predecessors: [0x77]
Successors: [0xa8]
---
0x88 PUSH1 0x40
0x8a MLOAD
0x8b PUSH1 0x1
0x8d PUSH1 0xa0
0x8f PUSH1 0x2
0x91 EXP
0x92 SUB
0x93 CALLER
0x94 AND
0x95 SWAP1
0x96 PUSH1 0x0
0x98 SWAP1
0x99 CALLVALUE
0x9a SWAP1
0x9b DUP3
0x9c DUP2
0x9d DUP2
0x9e DUP2
0x9f DUP6
0xa0 DUP9
0xa1 DUP4
0xa2 CALL
0xa3 POP
0xa4 POP
0xa5 POP
0xa6 POP
0xa7 POP
---
0x88: V46 = 0x40
0x8a: V47 = M[0x40]
0x8b: V48 = 0x1
0x8d: V49 = 0xa0
0x8f: V50 = 0x2
0x91: V51 = EXP 0x2 0xa0
0x92: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93: V53 = CALLER
0x94: V54 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0x96: V55 = 0x0
0x99: V56 = CALLVALUE
0xa2: V57 = CALL 0x0 V54 V56 V47 0x0 V47 0x0
---
Entry stack: [V10, 0x486, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x486, 0xa8]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x88, 0xa8, 0x199, 0x652]
Successors: [0xa8, 0x486]
---
0xa8 JUMPDEST
0xa9 JUMP
---
0xa8: JUMPDEST 
0xa9: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xaa
[0xaa:0xc9]
---
Predecessors: [0xb]
Successors: [0xca, 0xdc]
---
0xaa JUMPDEST
0xab PUSH2 0x486
0xae PUSH1 0x4
0xb0 CALLDATALOAD
0xb1 PUSH1 0x7
0xb3 SLOAD
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc SWAP1
0xbd DUP2
0xbe AND
0xbf CALLER
0xc0 SWAP2
0xc1 SWAP1
0xc2 SWAP2
0xc3 AND
0xc4 EQ
0xc5 ISZERO
0xc6 PUSH2 0xdc
0xc9 JUMPI
---
0xaa: JUMPDEST 
0xab: V58 = 0x486
0xae: V59 = 0x4
0xb0: V60 = CALLDATALOAD 0x4
0xb1: V61 = 0x7
0xb3: V62 = S[0x7]
0xb4: V63 = 0x1
0xb6: V64 = 0xa0
0xb8: V65 = 0x2
0xba: V66 = EXP 0x2 0xa0
0xbb: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xbf: V69 = CALLER
0xc3: V70 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V71 = EQ V70 V68
0xc5: V72 = ISZERO V71
0xc6: V73 = 0xdc
0xc9: JUMPI 0xdc V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x486, V60]
Exit stack: [V10, 0x486, V60]

================================

Block 0xca
[0xca:0xdb]
---
Predecessors: [0xaa]
Successors: [0xdc]
---
0xca PUSH1 0x7
0xcc DUP1
0xcd SLOAD
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 NOT
0xd7 AND
0xd8 DUP3
0xd9 OR
0xda SWAP1
0xdb SSTORE
---
0xca: V74 = 0x7
0xcd: V75 = S[0x7]
0xce: V76 = 0x1
0xd0: V77 = 0xa0
0xd2: V78 = 0x2
0xd4: V79 = EXP 0x2 0xa0
0xd5: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6: V81 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V82 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V75
0xd9: V83 = OR V60 V82
0xdb: S[0x7] = V83
---
Entry stack: [V10, 0x486, V60]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x486, V60]

================================

Block 0xdc
[0xdc:0xde]
---
Predecessors: [0xaa, 0xca, 0x3a1]
Successors: [0x486]
---
0xdc JUMPDEST
0xdd POP
0xde JUMP
---
0xdc: JUMPDEST 
0xde: JUMP 0x486
---
Entry stack: [V10, 0x486, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xf5]
---
Predecessors: [0x1f]
Successors: [0xf6, 0x192]
---
0xdf JUMPDEST
0xe0 PUSH2 0x488
0xe3 PUSH1 0x4
0xe5 CALLDATALOAD
0xe6 PUSH1 0x8
0xe8 SLOAD
0xe9 PUSH1 0x0
0xeb SWAP1
0xec DUP2
0xed SWAP1
0xee DUP2
0xef SWAP1
0xf0 DUP5
0xf1 GT
0xf2 PUSH2 0x192
0xf5 JUMPI
---
0xdf: JUMPDEST 
0xe0: V84 = 0x488
0xe3: V85 = 0x4
0xe5: V86 = CALLDATALOAD 0x4
0xe6: V87 = 0x8
0xe8: V88 = S[0x8]
0xe9: V89 = 0x0
0xf1: V90 = GT V86 V88
0xf2: V91 = 0x192
0xf5: JUMPI 0x192 V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x488, V86, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x488, V86, 0x0, 0x0, 0x0]

================================

Block 0xf6
[0xf6:0x102]
---
Predecessors: [0xdf]
Successors: [0x103]
---
0xf6 PUSH1 0x8
0xf8 DUP1
0xf9 SLOAD
0xfa DUP6
0xfb SWAP1
0xfc DUP2
0xfd LT
0xfe ISZERO
0xff PUSH2 0x2
0x102 JUMPI
---
0xf6: V92 = 0x8
0xf9: V93 = S[0x8]
0xfd: V94 = LT V86 V93
0xfe: V95 = ISZERO V94
0xff: V96 = 0x2
0x102: THROWI V95
---
Entry stack: [V10, 0x488, V86, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x8, S3]
Exit stack: [V10, 0x488, V86, 0x0, 0x0, 0x0, 0x8, V86]

================================

Block 0x103
[0x103:0x13b]
---
Predecessors: [0xf6]
Successors: [0x13c]
---
0x103 POP
0x104 DUP1
0x105 SLOAD
0x106 DUP2
0x107 DUP4
0x108 MSTORE
0x109 PUSH1 0x3
0x10b DUP7
0x10c MUL
0x10d PUSH1 0x0
0x10f DUP1
0x110 MLOAD
0x111 PUSH1 0x20
0x113 PUSH2 0x7b6
0x116 DUP4
0x117 CODECOPY
0x118 DUP2
0x119 MLOAD
0x11a SWAP2
0x11b MSTORE
0x11c ADD
0x11d SLOAD
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 AND
0x127 SWAP5
0x128 POP
0x129 PUSH7 0x38d7ea4c68000
0x131 SWAP2
0x132 SWAP1
0x133 DUP7
0x134 SWAP1
0x135 DUP2
0x136 LT
0x137 ISZERO
0x138 PUSH2 0x2
0x13b JUMPI
---
0x105: V97 = S[0x8]
0x108: M[0x0] = 0x8
0x109: V98 = 0x3
0x10c: V99 = MUL V86 0x3
0x10d: V100 = 0x0
0x110: V101 = M[0x0]
0x111: V102 = 0x20
0x113: V103 = 0x7b6
0x117: CODECOPY 0x0 0x7b6 0x20
0x119: V104 = M[0x0]
0x11b: M[0x0] = V101
0x11c: V105 = ADD V104 V99
0x11d: V106 = S[V105]
0x11e: V107 = 0x1
0x120: V108 = 0xa0
0x122: V109 = 0x2
0x124: V110 = EXP 0x2 0xa0
0x125: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x126: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x129: V113 = 0x38d7ea4c68000
0x136: V114 = LT V86 V97
0x137: V115 = ISZERO V114
0x138: V116 = 0x2
0x13b: THROWI V115
---
Entry stack: [V10, 0x488, V86, 0x0, 0x0, 0x0, 0x8, V86]
Stack pops: 6
Stack additions: [S5, V112, S3, S2, 0x38d7ea4c68000, S1, S5]
Exit stack: [V10, 0x488, V86, V112, 0x0, 0x0, 0x38d7ea4c68000, 0x8, V86]

================================

Block 0x13c
[0x13c:0x164]
---
Predecessors: [0x103]
Successors: [0x165]
---
0x13c SWAP1
0x13d PUSH1 0x0
0x13f MSTORE
0x140 PUSH1 0x20
0x142 PUSH1 0x0
0x144 SHA3
0x145 SWAP1
0x146 PUSH1 0x3
0x148 MUL
0x149 ADD
0x14a PUSH1 0x0
0x14c POP
0x14d PUSH1 0x1
0x14f ADD
0x150 SLOAD
0x151 PUSH1 0x8
0x153 DUP1
0x154 SLOAD
0x155 SWAP3
0x156 SWAP1
0x157 SWAP2
0x158 DIV
0x159 SWAP4
0x15a POP
0x15b SWAP1
0x15c DUP6
0x15d SWAP1
0x15e DUP2
0x15f LT
0x160 ISZERO
0x161 PUSH2 0x2
0x164 JUMPI
---
0x13d: V117 = 0x0
0x13f: M[0x0] = 0x8
0x140: V118 = 0x20
0x142: V119 = 0x0
0x144: V120 = SHA3 0x0 0x20
0x146: V121 = 0x3
0x148: V122 = MUL 0x3 V86
0x149: V123 = ADD V122 V120
0x14a: V124 = 0x0
0x14d: V125 = 0x1
0x14f: V126 = ADD 0x1 V123
0x150: V127 = S[V126]
0x151: V128 = 0x8
0x154: V129 = S[0x8]
0x158: V130 = DIV V127 0x38d7ea4c68000
0x15f: V131 = LT V86 V129
0x160: V132 = ISZERO V131
0x161: V133 = 0x2
0x164: THROWI V132
---
Entry stack: [V10, 0x488, V86, V112, 0x0, 0x0, 0x38d7ea4c68000, 0x8, V86]
Stack pops: 7
Stack additions: [S6, S5, V130, S3, 0x8, S6]
Exit stack: [V10, 0x488, V86, V112, V130, 0x0, 0x8, V86]

================================

Block 0x165
[0x165:0x191]
---
Predecessors: [0x13c]
Successors: [0x192]
---
0x165 POP
0x166 POP
0x167 POP
0x168 PUSH1 0x3
0x16a DUP4
0x16b MUL
0x16c PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5
0x18d ADD
0x18e SLOAD
0x18f PUSH1 0xff
0x191 AND
---
0x168: V134 = 0x3
0x16b: V135 = MUL V86 0x3
0x16c: V136 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5
0x18d: V137 = ADD 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5 V135
0x18e: V138 = S[V137]
0x18f: V139 = 0xff
0x191: V140 = AND 0xff V138
---
Entry stack: [V10, 0x488, V86, V112, V130, 0x0, 0x8, V86]
Stack pops: 6
Stack additions: [S5, S4, S3, V140]
Exit stack: [V10, 0x488, V86, V112, V130, V140]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0xdf, 0x165]
Successors: [0x488]
---
0x192 JUMPDEST
0x193 SWAP2
0x194 SWAP4
0x195 SWAP1
0x196 SWAP3
0x197 POP
0x198 JUMP
---
0x192: JUMPDEST 
0x198: JUMP 0x488
---
Entry stack: [V10, 0x488, V86, S2, S1, S0]
Stack pops: 5
Stack additions: [S2, S1, S0]
Exit stack: [V10, S2, S1, S0]

================================

Block 0x199
[0x199:0x1b5]
---
Predecessors: [0x2a]
Successors: [0xa8, 0x1b6]
---
0x199 JUMPDEST
0x19a PUSH2 0x486
0x19d PUSH1 0x7
0x19f SLOAD
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 SWAP1
0x1a9 DUP2
0x1aa AND
0x1ab CALLER
0x1ac SWAP2
0x1ad SWAP1
0x1ae SWAP2
0x1af AND
0x1b0 EQ
0x1b1 ISZERO
0x1b2 PUSH2 0xa8
0x1b5 JUMPI
---
0x199: JUMPDEST 
0x19a: V141 = 0x486
0x19d: V142 = 0x7
0x19f: V143 = S[0x7]
0x1a0: V144 = 0x1
0x1a2: V145 = 0xa0
0x1a4: V146 = 0x2
0x1a6: V147 = EXP 0x2 0xa0
0x1a7: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1aa: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x1ab: V150 = CALLER
0x1af: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V152 = EQ V151 V149
0x1b1: V153 = ISZERO V152
0x1b2: V154 = 0xa8
0x1b5: JUMPI 0xa8 V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x486]
Exit stack: [V10, 0x486]

================================

Block 0x1b6
[0x1b6:0x1c0]
---
Predecessors: [0x199]
Successors: [0x1c1, 0x78b]
---
0x1b6 PUSH1 0x2
0x1b8 SLOAD
0x1b9 PUSH1 0x0
0x1bb EQ
0x1bc ISZERO
0x1bd PUSH2 0x78b
0x1c0 JUMPI
---
0x1b6: V155 = 0x2
0x1b8: V156 = S[0x2]
0x1b9: V157 = 0x0
0x1bb: V158 = EQ 0x0 V156
0x1bc: V159 = ISZERO V158
0x1bd: V160 = 0x78b
0x1c0: JUMPI 0x78b V159
---
Entry stack: [V10, 0x486]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x486]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x1b6]
Successors: []
---
0x1c1 PUSH2 0x2
0x1c4 JUMP
---
0x1c1: V161 = 0x2
0x1c4: THROW 
---
Entry stack: [V10, 0x486]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x486]

================================

Block 0x1c5
[0x1c5:0x249]
---
Predecessors: [0x35]
Successors: [0x24a]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x40
0x1c8 DUP1
0x1c9 MLOAD
0x1ca PUSH1 0x20
0x1cc DUP1
0x1cd DUP3
0x1ce ADD
0x1cf DUP4
0x1d0 MSTORE
0x1d1 PUSH1 0x0
0x1d3 SWAP1
0x1d4 SWAP2
0x1d5 MSTORE
0x1d6 PUSH1 0x8
0x1d8 SLOAD
0x1d9 DUP3
0x1da MLOAD
0x1db PUSH1 0x80
0x1dd DUP2
0x1de ADD
0x1df DUP5
0x1e0 MSTORE
0x1e1 PUSH1 0x49
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH32 0x4e756d626572206f662070617274696369706174696f6e732073696e63652074
0x206 SWAP3
0x207 DUP2
0x208 ADD
0x209 SWAP3
0x20a SWAP1
0x20b SWAP3
0x20c MSTORE
0x20d PUSH32 0x686520626567696e6e696e67206f66207468697320776f6e64657266756c2062
0x22e SWAP3
0x22f DUP3
0x230 ADD
0x231 SWAP3
0x232 SWAP1
0x233 SWAP3
0x234 MSTORE
0x235 PUSH1 0xb9
0x237 PUSH1 0x2
0x239 EXP
0x23a PUSH9 0x3637b1b5b1b430b4b7
0x244 MUL
0x245 PUSH1 0x60
0x247 DUP3
0x248 ADD
0x249 MSTORE
---
0x1c5: JUMPDEST 
0x1c6: V162 = 0x40
0x1c9: V163 = M[0x40]
0x1ca: V164 = 0x20
0x1ce: V165 = ADD V163 0x20
0x1d0: M[0x40] = V165
0x1d1: V166 = 0x0
0x1d5: M[V163] = 0x0
0x1d6: V167 = 0x8
0x1d8: V168 = S[0x8]
0x1da: V169 = M[0x40]
0x1db: V170 = 0x80
0x1de: V171 = ADD V169 0x80
0x1e0: M[0x40] = V171
0x1e1: V172 = 0x49
0x1e4: M[V169] = 0x49
0x1e5: V173 = 0x4e756d626572206f662070617274696369706174696f6e732073696e63652074
0x208: V174 = ADD V169 0x20
0x20c: M[V174] = 0x4e756d626572206f662070617274696369706174696f6e732073696e63652074
0x20d: V175 = 0x686520626567696e6e696e67206f66207468697320776f6e64657266756c2062
0x230: V176 = ADD V169 0x40
0x234: M[V176] = 0x686520626567696e6e696e67206f66207468697320776f6e64657266756c2062
0x235: V177 = 0xb9
0x237: V178 = 0x2
0x239: V179 = EXP 0x2 0xb9
0x23a: V180 = 0x3637b1b5b1b430b4b7
0x244: V181 = MUL 0x3637b1b5b1b430b4b7 0x20000000000000000000000000000000000000000000000
0x245: V182 = 0x60
0x248: V183 = ADD V169 0x60
0x249: M[V183] = 0x6c6f636b636861696e0000000000000000000000000000000000000000000000
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V168, V169]
Exit stack: [V10, V168, V169]

================================

Block 0x24a
[0x24a:0x296]
---
Predecessors: [0x1c5, 0x2bf, 0x311, 0x41a]
Successors: [0x297, 0x2b0]
---
0x24a JUMPDEST
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f DUP4
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 DUP1
0x256 PUSH1 0x20
0x258 ADD
0x259 DUP3
0x25a DUP2
0x25b SUB
0x25c DUP3
0x25d MSTORE
0x25e DUP4
0x25f DUP2
0x260 DUP2
0x261 MLOAD
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP2
0x268 POP
0x269 DUP1
0x26a MLOAD
0x26b SWAP1
0x26c PUSH1 0x20
0x26e ADD
0x26f SWAP1
0x270 DUP1
0x271 DUP4
0x272 DUP4
0x273 DUP3
0x274 SWAP1
0x275 PUSH1 0x0
0x277 PUSH1 0x4
0x279 PUSH1 0x20
0x27b DUP5
0x27c PUSH1 0x1f
0x27e ADD
0x27f DIV
0x280 PUSH1 0xf
0x282 MUL
0x283 PUSH1 0x3
0x285 ADD
0x286 CALL
0x287 POP
0x288 SWAP1
0x289 POP
0x28a SWAP1
0x28b DUP2
0x28c ADD
0x28d SWAP1
0x28e PUSH1 0x1f
0x290 AND
0x291 DUP1
0x292 ISZERO
0x293 PUSH2 0x2b0
0x296 JUMPI
---
0x24a: JUMPDEST 
0x24b: V184 = 0x40
0x24d: V185 = M[0x40]
0x251: M[V185] = S1
0x252: V186 = 0x20
0x254: V187 = ADD 0x20 V185
0x256: V188 = 0x20
0x258: V189 = ADD 0x20 V187
0x25b: V190 = SUB V189 V185
0x25d: M[V187] = V190
0x261: V191 = M[S0]
0x263: M[V189] = V191
0x264: V192 = 0x20
0x266: V193 = ADD 0x20 V189
0x26a: V194 = M[S0]
0x26c: V195 = 0x20
0x26e: V196 = ADD 0x20 S0
0x275: V197 = 0x0
0x277: V198 = 0x4
0x279: V199 = 0x20
0x27c: V200 = 0x1f
0x27e: V201 = ADD 0x1f V194
0x27f: V202 = DIV V201 0x20
0x280: V203 = 0xf
0x282: V204 = MUL 0xf V202
0x283: V205 = 0x3
0x285: V206 = ADD 0x3 V204
0x286: V207 = CALL V206 0x4 0x0 V196 V194 V193 V194
0x28c: V208 = ADD V194 V193
0x28e: V209 = 0x1f
0x290: V210 = AND 0x1f V194
0x292: V211 = ISZERO V210
0x293: V212 = 0x2b0
0x296: JUMPI 0x2b0 V211
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V185, V187, V208, V210]
Exit stack: [V10, S1, S0, V185, V187, V208, V210]

================================

Block 0x297
[0x297:0x2af]
---
Predecessors: [0x24a]
Successors: [0x2b0]
---
0x297 DUP1
0x298 DUP3
0x299 SUB
0x29a DUP1
0x29b MLOAD
0x29c PUSH1 0x1
0x29e DUP4
0x29f PUSH1 0x20
0x2a1 SUB
0x2a2 PUSH2 0x100
0x2a5 EXP
0x2a6 SUB
0x2a7 NOT
0x2a8 AND
0x2a9 DUP2
0x2aa MSTORE
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae SWAP2
0x2af POP
---
0x299: V213 = SUB V208 V210
0x29b: V214 = M[V213]
0x29c: V215 = 0x1
0x29f: V216 = 0x20
0x2a1: V217 = SUB 0x20 V210
0x2a2: V218 = 0x100
0x2a5: V219 = EXP 0x100 V217
0x2a6: V220 = SUB V219 0x1
0x2a7: V221 = NOT V220
0x2a8: V222 = AND V221 V214
0x2aa: M[V213] = V222
0x2ab: V223 = 0x20
0x2ad: V224 = ADD 0x20 V213
---
Entry stack: [V10, S5, S4, V185, V187, V208, V210]
Stack pops: 2
Stack additions: [V224, S0]
Exit stack: [V10, S5, S4, V185, V187, V224, V210]

================================

Block 0x2b0
[0x2b0:0x2be]
---
Predecessors: [0x24a, 0x297]
Successors: []
---
0x2b0 JUMPDEST
0x2b1 POP
0x2b2 SWAP4
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb SWAP2
0x2bc SUB
0x2bd SWAP1
0x2be RETURN
---
0x2b0: JUMPDEST 
0x2b7: V225 = 0x40
0x2b9: V226 = M[0x40]
0x2bc: V227 = SUB S1 V226
0x2be: RETURN V226 V227
---
Entry stack: [V10, S5, S4, V185, V187, S1, V210]
Stack pops: 6
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bf
[0x2bf:0x310]
---
Predecessors: [0x40]
Successors: [0x24a]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x40
0x2c2 DUP1
0x2c3 MLOAD
0x2c4 PUSH1 0x20
0x2c6 DUP1
0x2c7 DUP3
0x2c8 ADD
0x2c9 DUP4
0x2ca MSTORE
0x2cb PUSH1 0x0
0x2cd SWAP1
0x2ce SWAP2
0x2cf MSTORE
0x2d0 DUP2
0x2d1 MLOAD
0x2d2 PUSH1 0x3
0x2d4 SLOAD
0x2d5 DUP2
0x2d6 DUP5
0x2d7 ADD
0x2d8 SWAP1
0x2d9 SWAP4
0x2da MSTORE
0x2db PUSH1 0x1d
0x2dd DUP2
0x2de MSTORE
0x2df PUSH32 0x43757272656e74206d756c7469706c69657220696e2070657263656e74000000
0x300 SWAP2
0x301 DUP2
0x302 ADD
0x303 SWAP2
0x304 SWAP1
0x305 SWAP2
0x306 MSTORE
0x307 PUSH1 0xa
0x309 SWAP1
0x30a SWAP2
0x30b DIV
0x30c SWAP1
0x30d PUSH2 0x24a
0x310 JUMP
---
0x2bf: JUMPDEST 
0x2c0: V228 = 0x40
0x2c3: V229 = M[0x40]
0x2c4: V230 = 0x20
0x2c8: V231 = ADD V229 0x20
0x2ca: M[0x40] = V231
0x2cb: V232 = 0x0
0x2cf: M[V229] = 0x0
0x2d1: V233 = M[0x40]
0x2d2: V234 = 0x3
0x2d4: V235 = S[0x3]
0x2d7: V236 = ADD 0x40 V233
0x2da: M[0x40] = V236
0x2db: V237 = 0x1d
0x2de: M[V233] = 0x1d
0x2df: V238 = 0x43757272656e74206d756c7469706c69657220696e2070657263656e74000000
0x302: V239 = ADD V233 0x20
0x306: M[V239] = 0x43757272656e74206d756c7469706c69657220696e2070657263656e74000000
0x307: V240 = 0xa
0x30b: V241 = DIV V235 0xa
0x30d: V242 = 0x24a
0x310: JUMP 0x24a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V241, V233]
Exit stack: [V10, V241, V233]

================================

Block 0x311
[0x311:0x3a0]
---
Predecessors: [0x4b]
Successors: [0x24a]
---
0x311 JUMPDEST
0x312 PUSH1 0x40
0x314 DUP1
0x315 MLOAD
0x316 PUSH1 0x20
0x318 DUP1
0x319 DUP3
0x31a ADD
0x31b DUP4
0x31c MSTORE
0x31d PUSH1 0x0
0x31f SWAP1
0x320 SWAP2
0x321 MSTORE
0x322 PUSH1 0x6
0x324 SLOAD
0x325 PUSH1 0x8
0x327 SLOAD
0x328 DUP4
0x329 MLOAD
0x32a PUSH1 0x80
0x32c DUP2
0x32d ADD
0x32e DUP6
0x32f MSTORE
0x330 PUSH1 0x49
0x332 DUP2
0x333 MSTORE
0x334 PUSH32 0x4e756d626572206f662070617274696369706174696f6e732073696e63652074
0x355 SWAP4
0x356 DUP2
0x357 ADD
0x358 SWAP4
0x359 SWAP1
0x35a SWAP4
0x35b MSTORE
0x35c PUSH32 0x686520626567696e6e696e67206f66207468697320776f6e64657266756c2062
0x37d SWAP4
0x37e DUP4
0x37f ADD
0x380 SWAP4
0x381 SWAP1
0x382 SWAP4
0x383 MSTORE
0x384 PUSH1 0xb9
0x386 PUSH1 0x2
0x388 EXP
0x389 PUSH9 0x3637b1b5b1b430b4b7
0x393 MUL
0x394 PUSH1 0x60
0x396 DUP4
0x397 ADD
0x398 MSTORE
0x399 SWAP1
0x39a SWAP2
0x39b SUB
0x39c SWAP1
0x39d PUSH2 0x24a
0x3a0 JUMP
---
0x311: JUMPDEST 
0x312: V243 = 0x40
0x315: V244 = M[0x40]
0x316: V245 = 0x20
0x31a: V246 = ADD V244 0x20
0x31c: M[0x40] = V246
0x31d: V247 = 0x0
0x321: M[V244] = 0x0
0x322: V248 = 0x6
0x324: V249 = S[0x6]
0x325: V250 = 0x8
0x327: V251 = S[0x8]
0x329: V252 = M[0x40]
0x32a: V253 = 0x80
0x32d: V254 = ADD V252 0x80
0x32f: M[0x40] = V254
0x330: V255 = 0x49
0x333: M[V252] = 0x49
0x334: V256 = 0x4e756d626572206f662070617274696369706174696f6e732073696e63652074
0x357: V257 = ADD V252 0x20
0x35b: M[V257] = 0x4e756d626572206f662070617274696369706174696f6e732073696e63652074
0x35c: V258 = 0x686520626567696e6e696e67206f66207468697320776f6e64657266756c2062
0x37f: V259 = ADD V252 0x40
0x383: M[V259] = 0x686520626567696e6e696e67206f66207468697320776f6e64657266756c2062
0x384: V260 = 0xb9
0x386: V261 = 0x2
0x388: V262 = EXP 0x2 0xb9
0x389: V263 = 0x3637b1b5b1b430b4b7
0x393: V264 = MUL 0x3637b1b5b1b430b4b7 0x20000000000000000000000000000000000000000000000
0x394: V265 = 0x60
0x397: V266 = ADD V252 0x60
0x398: M[V266] = 0x6c6f636b636861696e0000000000000000000000000000000000000000000000
0x39b: V267 = SUB V251 V249
0x39d: V268 = 0x24a
0x3a0: JUMP 0x24a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V267, V252]
Exit stack: [V10, V267, V252]

================================

Block 0x3a1
[0x3a1:0x3c0]
---
Predecessors: [0x56]
Successors: [0xdc, 0x3c1]
---
0x3a1 JUMPDEST
0x3a2 PUSH2 0x486
0x3a5 PUSH1 0x4
0x3a7 CALLDATALOAD
0x3a8 PUSH1 0x7
0x3aa SLOAD
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 SWAP1
0x3b4 DUP2
0x3b5 AND
0x3b6 CALLER
0x3b7 SWAP2
0x3b8 SWAP1
0x3b9 SWAP2
0x3ba AND
0x3bb EQ
0x3bc ISZERO
0x3bd PUSH2 0xdc
0x3c0 JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V269 = 0x486
0x3a5: V270 = 0x4
0x3a7: V271 = CALLDATALOAD 0x4
0x3a8: V272 = 0x7
0x3aa: V273 = S[0x7]
0x3ab: V274 = 0x1
0x3ad: V275 = 0xa0
0x3af: V276 = 0x2
0x3b1: V277 = EXP 0x2 0xa0
0x3b2: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b5: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x3b6: V280 = CALLER
0x3ba: V281 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x3bb: V282 = EQ V281 V279
0x3bc: V283 = ISZERO V282
0x3bd: V284 = 0xdc
0x3c0: JUMPI 0xdc V283
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x486, V271]
Exit stack: [V10, 0x486, V271]

================================

Block 0x3c1
[0x3c1:0x3cb]
---
Predecessors: [0x3a1]
Successors: [0x3cc, 0x3da]
---
0x3c1 PUSH1 0x2
0x3c3 SLOAD
0x3c4 PUSH1 0x0
0x3c6 EQ
0x3c7 ISZERO
0x3c8 PUSH2 0x3da
0x3cb JUMPI
---
0x3c1: V285 = 0x2
0x3c3: V286 = S[0x2]
0x3c4: V287 = 0x0
0x3c6: V288 = EQ 0x0 V286
0x3c7: V289 = ISZERO V288
0x3c8: V290 = 0x3da
0x3cb: JUMPI 0x3da V289
---
Entry stack: [V10, 0x486, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x486, V271]

================================

Block 0x3cc
[0x3cc:0x3d9]
---
Predecessors: [0x3c1]
Successors: [0x3da]
---
0x3cc PUSH1 0x4
0x3ce DUP1
0x3cf SLOAD
0x3d0 PUSH1 0x64
0x3d2 PUSH1 0x32
0x3d4 SWAP1
0x3d5 SWAP2
0x3d6 MUL
0x3d7 DIV
0x3d8 SWAP1
0x3d9 SSTORE
---
0x3cc: V291 = 0x4
0x3cf: V292 = S[0x4]
0x3d0: V293 = 0x64
0x3d2: V294 = 0x32
0x3d6: V295 = MUL V292 0x32
0x3d7: V296 = DIV V295 0x64
0x3d9: S[0x4] = V296
---
Entry stack: [V10, 0x486, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x486, V271]

================================

Block 0x3da
[0x3da:0x419]
---
Predecessors: [0x3c1, 0x3cc]
Successors: [0x486]
---
0x3da JUMPDEST
0x3db PUSH1 0x7
0x3dd SLOAD
0x3de PUSH1 0x2
0x3e0 SLOAD
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec SWAP3
0x3ed SWAP1
0x3ee SWAP3
0x3ef AND
0x3f0 SWAP2
0x3f1 PUSH1 0x0
0x3f3 SWAP2
0x3f4 PUSH2 0x3e8
0x3f7 SWAP1
0x3f8 DIV
0x3f9 DUP5
0x3fa MUL
0x3fb SWAP1
0x3fc DUP3
0x3fd DUP2
0x3fe DUP2
0x3ff DUP2
0x400 DUP6
0x401 DUP9
0x402 DUP4
0x403 CALL
0x404 POP
0x405 POP
0x406 PUSH1 0x2
0x408 DUP1
0x409 SLOAD
0x40a PUSH2 0x3e8
0x40d DUP2
0x40e DIV
0x40f DUP7
0x410 MUL
0x411 SWAP1
0x412 SUB
0x413 SWAP1
0x414 SSTORE
0x415 POP
0x416 POP
0x417 POP
0x418 POP
0x419 JUMP
---
0x3da: JUMPDEST 
0x3db: V297 = 0x7
0x3dd: V298 = S[0x7]
0x3de: V299 = 0x2
0x3e0: V300 = S[0x2]
0x3e1: V301 = 0x40
0x3e3: V302 = M[0x40]
0x3e4: V303 = 0x1
0x3e6: V304 = 0xa0
0x3e8: V305 = 0x2
0x3ea: V306 = EXP 0x2 0xa0
0x3eb: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ef: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x3f1: V309 = 0x0
0x3f4: V310 = 0x3e8
0x3f8: V311 = DIV V300 0x3e8
0x3fa: V312 = MUL V271 V311
0x403: V313 = CALL 0x0 V308 V312 V302 0x0 V302 0x0
0x406: V314 = 0x2
0x409: V315 = S[0x2]
0x40a: V316 = 0x3e8
0x40e: V317 = DIV V315 0x3e8
0x410: V318 = MUL V271 V317
0x412: V319 = SUB V315 V318
0x414: S[0x2] = V319
0x419: JUMP 0x486
---
Entry stack: [V10, 0x486, V271]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x41a
[0x41a:0x470]
---
Predecessors: [0x61]
Successors: [0x24a]
---
0x41a JUMPDEST
0x41b PUSH1 0x40
0x41d DUP1
0x41e MLOAD
0x41f PUSH1 0x20
0x421 DUP1
0x422 DUP3
0x423 ADD
0x424 DUP4
0x425 MSTORE
0x426 PUSH1 0x0
0x428 SWAP2
0x429 DUP3
0x42a SWAP1
0x42b MSTORE
0x42c SWAP1
0x42d SLOAD
0x42e DUP3
0x42f MLOAD
0x430 DUP1
0x431 DUP5
0x432 ADD
0x433 SWAP1
0x434 SWAP4
0x435 MSTORE
0x436 PUSH1 0x11
0x438 DUP4
0x439 MSTORE
0x43a PUSH32 0x42616c616e636520696e2066696e6e6579000000000000000000000000000000
0x45b SWAP2
0x45c DUP4
0x45d ADD
0x45e SWAP2
0x45f SWAP1
0x460 SWAP2
0x461 MSTORE
0x462 PUSH7 0x38d7ea4c68000
0x46a SWAP1
0x46b DIV
0x46c SWAP1
0x46d PUSH2 0x24a
0x470 JUMP
---
0x41a: JUMPDEST 
0x41b: V320 = 0x40
0x41e: V321 = M[0x40]
0x41f: V322 = 0x20
0x423: V323 = ADD V321 0x20
0x425: M[0x40] = V323
0x426: V324 = 0x0
0x42b: M[V321] = 0x0
0x42d: V325 = S[0x0]
0x42f: V326 = M[0x40]
0x432: V327 = ADD 0x40 V326
0x435: M[0x40] = V327
0x436: V328 = 0x11
0x439: M[V326] = 0x11
0x43a: V329 = 0x42616c616e636520696e2066696e6e6579000000000000000000000000000000
0x45d: V330 = ADD V326 0x20
0x461: M[V330] = 0x42616c616e636520696e2066696e6e6579000000000000000000000000000000
0x462: V331 = 0x38d7ea4c68000
0x46b: V332 = DIV V325 0x38d7ea4c68000
0x46d: V333 = 0x24a
0x470: JUMP 0x24a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V332, V326]
Exit stack: [V10, V332, V326]

================================

Block 0x471
[0x471:0x485]
---
Predecessors: [0x6c]
Successors: []
---
0x471 JUMPDEST
0x472 PUSH1 0x2
0x474 SLOAD
0x475 PUSH1 0x40
0x477 DUP1
0x478 MLOAD
0x479 SWAP2
0x47a DUP3
0x47b MSTORE
0x47c MLOAD
0x47d SWAP1
0x47e DUP2
0x47f SWAP1
0x480 SUB
0x481 PUSH1 0x20
0x483 ADD
0x484 SWAP1
0x485 RETURN
---
0x471: JUMPDEST 
0x472: V334 = 0x2
0x474: V335 = S[0x2]
0x475: V336 = 0x40
0x478: V337 = M[0x40]
0x47b: M[V337] = V335
0x47c: V338 = M[0x40]
0x480: V339 = SUB V337 V338
0x481: V340 = 0x20
0x483: V341 = ADD 0x20 V339
0x485: RETURN V338 V341
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x486
[0x486:0x487]
---
Predecessors: [0xa8, 0xdc, 0x3da, 0x78b]
Successors: []
---
0x486 JUMPDEST
0x487 STOP
---
0x486: JUMPDEST 
0x487: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x488
[0x488:0x4b0]
---
Predecessors: [0x192]
Successors: []
---
0x488 JUMPDEST
0x489 PUSH1 0x40
0x48b DUP1
0x48c MLOAD
0x48d PUSH1 0x1
0x48f PUSH1 0xa0
0x491 PUSH1 0x2
0x493 EXP
0x494 SUB
0x495 SWAP5
0x496 SWAP1
0x497 SWAP5
0x498 AND
0x499 DUP5
0x49a MSTORE
0x49b PUSH1 0x20
0x49d DUP5
0x49e ADD
0x49f SWAP3
0x4a0 SWAP1
0x4a1 SWAP3
0x4a2 MSTORE
0x4a3 DUP3
0x4a4 DUP3
0x4a5 ADD
0x4a6 MSTORE
0x4a7 MLOAD
0x4a8 SWAP1
0x4a9 DUP2
0x4aa SWAP1
0x4ab SUB
0x4ac PUSH1 0x60
0x4ae ADD
0x4af SWAP1
0x4b0 RETURN
---
0x488: JUMPDEST 
0x489: V342 = 0x40
0x48c: V343 = M[0x40]
0x48d: V344 = 0x1
0x48f: V345 = 0xa0
0x491: V346 = 0x2
0x493: V347 = EXP 0x2 0xa0
0x494: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x49a: M[V343] = V349
0x49b: V350 = 0x20
0x49e: V351 = ADD V343 0x20
0x4a2: M[V351] = S1
0x4a5: V352 = ADD 0x40 V343
0x4a6: M[V352] = S0
0x4a7: V353 = M[0x40]
0x4ab: V354 = SUB V343 V353
0x4ac: V355 = 0x60
0x4ae: V356 = ADD 0x60 V354
0x4b0: RETURN V353 V356
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b1
[0x4b1:0x4bb]
---
Predecessors: [0x77]
Successors: [0x4bc, 0x4e0]
---
0x4b1 JUMPDEST
0x4b2 PUSH1 0x5
0x4b4 SLOAD
0x4b5 CALLVALUE
0x4b6 GT
0x4b7 ISZERO
0x4b8 PUSH2 0x4e0
0x4bb JUMPI
---
0x4b1: JUMPDEST 
0x4b2: V357 = 0x5
0x4b4: V358 = S[0x5]
0x4b5: V359 = CALLVALUE
0x4b6: V360 = GT V359 V358
0x4b7: V361 = ISZERO V360
0x4b8: V362 = 0x4e0
0x4bb: JUMPI 0x4e0 V361
---
Entry stack: [V10, 0x486, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x486, 0xa8]

================================

Block 0x4bc
[0x4bc:0x4df]
---
Predecessors: [0x4b1]
Successors: [0x4e0]
---
0x4bc PUSH1 0x40
0x4be MLOAD
0x4bf PUSH1 0x5
0x4c1 SLOAD
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0xa0
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 SUB
0x4ca CALLER
0x4cb AND
0x4cc SWAP2
0x4cd PUSH1 0x0
0x4cf SWAP2
0x4d0 CALLVALUE
0x4d1 SUB
0x4d2 SWAP1
0x4d3 DUP3
0x4d4 DUP2
0x4d5 DUP2
0x4d6 DUP2
0x4d7 DUP6
0x4d8 DUP9
0x4d9 DUP4
0x4da CALL
0x4db POP
0x4dc POP
0x4dd POP
0x4de POP
0x4df POP
---
0x4bc: V363 = 0x40
0x4be: V364 = M[0x40]
0x4bf: V365 = 0x5
0x4c1: V366 = S[0x5]
0x4c2: V367 = 0x1
0x4c4: V368 = 0xa0
0x4c6: V369 = 0x2
0x4c8: V370 = EXP 0x2 0xa0
0x4c9: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ca: V372 = CALLER
0x4cb: V373 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V374 = 0x0
0x4d0: V375 = CALLVALUE
0x4d1: V376 = SUB V375 V366
0x4da: V377 = CALL 0x0 V373 V376 V364 0x0 V364 0x0
---
Entry stack: [V10, 0x486, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x486, 0xa8]

================================

Block 0x4e0
[0x4e0:0x51e]
---
Predecessors: [0x4b1, 0x4bc]
Successors: [0x51f, 0x56a]
---
0x4e0 JUMPDEST
0x4e1 PUSH1 0x4
0x4e3 SLOAD
0x4e4 PUSH1 0x5
0x4e6 SLOAD
0x4e7 PUSH1 0x0
0x4e9 DUP1
0x4ea SLOAD
0x4eb PUSH2 0x3e8
0x4ee DUP5
0x4ef DUP2
0x4f0 SUB
0x4f1 DUP5
0x4f2 MUL
0x4f3 DUP2
0x4f4 SWAP1
0x4f5 DIV
0x4f6 SWAP1
0x4f7 SWAP2
0x4f8 ADD
0x4f9 SWAP1
0x4fa SWAP2
0x4fb SSTORE
0x4fc PUSH1 0x2
0x4fe DUP1
0x4ff SLOAD
0x500 SWAP3
0x501 SWAP1
0x502 SWAP4
0x503 MUL
0x504 DIV
0x505 ADD
0x506 SWAP1
0x507 SSTORE
0x508 PUSH1 0x8
0x50a DUP1
0x50b SLOAD
0x50c PUSH1 0x1
0x50e DUP2
0x50f ADD
0x510 DUP1
0x511 DUP4
0x512 SSTORE
0x513 DUP3
0x514 DUP2
0x515 DUP4
0x516 DUP1
0x517 ISZERO
0x518 DUP3
0x519 SWAP1
0x51a GT
0x51b PUSH2 0x56a
0x51e JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V378 = 0x4
0x4e3: V379 = S[0x4]
0x4e4: V380 = 0x5
0x4e6: V381 = S[0x5]
0x4e7: V382 = 0x0
0x4ea: V383 = S[0x0]
0x4eb: V384 = 0x3e8
0x4f0: V385 = SUB 0x3e8 V379
0x4f2: V386 = MUL V381 V385
0x4f5: V387 = DIV V386 0x3e8
0x4f8: V388 = ADD V383 V387
0x4fb: S[0x0] = V388
0x4fc: V389 = 0x2
0x4ff: V390 = S[0x2]
0x503: V391 = MUL V379 V381
0x504: V392 = DIV V391 0x3e8
0x505: V393 = ADD V392 V390
0x507: S[0x2] = V393
0x508: V394 = 0x8
0x50b: V395 = S[0x8]
0x50c: V396 = 0x1
0x50f: V397 = ADD V395 0x1
0x512: S[0x8] = V397
0x517: V398 = ISZERO V395
0x51a: V399 = GT V398 V397
0x51b: V400 = 0x56a
0x51e: JUMPI 0x56a V399
---
Entry stack: [V10, 0x486, 0xa8]
Stack pops: 0
Stack additions: [0x8, V395, V397, 0x8, V397, V395]
Exit stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, V395]

================================

Block 0x51f
[0x51f:0x538]
---
Predecessors: [0x4e0]
Successors: [0x539]
---
0x51f PUSH1 0x3
0x521 MUL
0x522 DUP2
0x523 PUSH1 0x3
0x525 MUL
0x526 DUP4
0x527 PUSH1 0x0
0x529 MSTORE
0x52a PUSH1 0x20
0x52c PUSH1 0x0
0x52e SHA3
0x52f SWAP2
0x530 DUP3
0x531 ADD
0x532 SWAP2
0x533 ADD
0x534 PUSH2 0x56a
0x537 SWAP2
0x538 SWAP1
---
0x51f: V401 = 0x3
0x521: V402 = MUL 0x3 V395
0x523: V403 = 0x3
0x525: V404 = MUL 0x3 V397
0x527: V405 = 0x0
0x529: M[0x0] = 0x8
0x52a: V406 = 0x20
0x52c: V407 = 0x0
0x52e: V408 = SHA3 0x0 0x20
0x531: V409 = ADD V408 V402
0x533: V410 = ADD V408 V404
0x534: V411 = 0x56a
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, V395]
Stack pops: 3
Stack additions: [S2, S1, 0x56a, V409, V410]
Exit stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, 0x56a, V409, V410]

================================

Block 0x539
[0x539:0x541]
---
Predecessors: [0x51f, 0x542]
Successors: [0x542, 0x787]
---
0x539 JUMPDEST
0x53a DUP1
0x53b DUP3
0x53c GT
0x53d ISZERO
0x53e PUSH2 0x787
0x541 JUMPI
---
0x539: JUMPDEST 
0x53c: V412 = GT V409 S0
0x53d: V413 = ISZERO V412
0x53e: V414 = 0x787
0x541: JUMPI 0x787 V413
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, 0x56a, V409, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, 0x56a, V409, S0]

================================

Block 0x542
[0x542:0x569]
---
Predecessors: [0x539]
Successors: [0x539]
---
0x542 DUP1
0x543 SLOAD
0x544 PUSH1 0x1
0x546 PUSH1 0xa0
0x548 PUSH1 0x2
0x54a EXP
0x54b SUB
0x54c NOT
0x54d AND
0x54e DUP2
0x54f SSTORE
0x550 PUSH1 0x0
0x552 PUSH1 0x1
0x554 DUP3
0x555 ADD
0x556 SSTORE
0x557 PUSH1 0x2
0x559 DUP2
0x55a ADD
0x55b DUP1
0x55c SLOAD
0x55d PUSH1 0xff
0x55f NOT
0x560 AND
0x561 SWAP1
0x562 SSTORE
0x563 PUSH1 0x3
0x565 ADD
0x566 PUSH2 0x539
0x569 JUMP
---
0x543: V415 = S[S0]
0x544: V416 = 0x1
0x546: V417 = 0xa0
0x548: V418 = 0x2
0x54a: V419 = EXP 0x2 0xa0
0x54b: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54c: V421 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x54d: V422 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V415
0x54f: S[S0] = V422
0x550: V423 = 0x0
0x552: V424 = 0x1
0x555: V425 = ADD S0 0x1
0x556: S[V425] = 0x0
0x557: V426 = 0x2
0x55a: V427 = ADD S0 0x2
0x55c: V428 = S[V427]
0x55d: V429 = 0xff
0x55f: V430 = NOT 0xff
0x560: V431 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V428
0x562: S[V427] = V431
0x563: V432 = 0x3
0x565: V433 = ADD 0x3 S0
0x566: V434 = 0x539
0x569: JUMP 0x539
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, 0x56a, V409, S0]
Stack pops: 1
Stack additions: [V433]
Exit stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, 0x56a, V409, V433]

================================

Block 0x56a
[0x56a:0x5cb]
---
Predecessors: [0x4e0, 0x787]
Successors: [0x5cc]
---
0x56a JUMPDEST
0x56b POP
0x56c POP
0x56d POP
0x56e SWAP2
0x56f SWAP1
0x570 SWAP1
0x571 PUSH1 0x0
0x573 MSTORE
0x574 PUSH1 0x20
0x576 PUSH1 0x0
0x578 SHA3
0x579 SWAP1
0x57a PUSH1 0x3
0x57c MUL
0x57d ADD
0x57e PUSH1 0x0
0x580 POP
0x581 PUSH1 0x40
0x583 DUP1
0x584 MLOAD
0x585 PUSH1 0x60
0x587 DUP2
0x588 ADD
0x589 DUP3
0x58a MSTORE
0x58b CALLER
0x58c DUP1
0x58d DUP3
0x58e MSTORE
0x58f PUSH1 0x3
0x591 SLOAD
0x592 PUSH1 0x5
0x594 SLOAD
0x595 PUSH2 0x3e8
0x598 SWAP2
0x599 MUL
0x59a DIV
0x59b PUSH1 0x20
0x59d DUP4
0x59e ADD
0x59f DUP2
0x5a0 SWAP1
0x5a1 MSTORE
0x5a2 PUSH1 0x0
0x5a4 SWAP3
0x5a5 SWAP1
0x5a6 SWAP4
0x5a7 ADD
0x5a8 SWAP2
0x5a9 SWAP1
0x5aa SWAP2
0x5ab MSTORE
0x5ac DUP3
0x5ad SLOAD
0x5ae PUSH1 0x1
0x5b0 PUSH1 0xa0
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 SUB
0x5b6 NOT
0x5b7 AND
0x5b8 OR
0x5b9 DUP3
0x5ba SSTORE
0x5bb PUSH1 0x1
0x5bd DUP3
0x5be ADD
0x5bf SSTORE
0x5c0 PUSH1 0x2
0x5c2 ADD
0x5c3 DUP1
0x5c4 SLOAD
0x5c5 PUSH1 0xff
0x5c7 NOT
0x5c8 AND
0x5c9 SWAP1
0x5ca SSTORE
0x5cb POP
---
0x56a: JUMPDEST 
0x571: V435 = 0x0
0x573: M[0x0] = 0x8
0x574: V436 = 0x20
0x576: V437 = 0x0
0x578: V438 = SHA3 0x0 0x20
0x57a: V439 = 0x3
0x57c: V440 = MUL 0x3 V395
0x57d: V441 = ADD V440 V438
0x57e: V442 = 0x0
0x581: V443 = 0x40
0x584: V444 = M[0x40]
0x585: V445 = 0x60
0x588: V446 = ADD V444 0x60
0x58a: M[0x40] = V446
0x58b: V447 = CALLER
0x58e: M[V444] = V447
0x58f: V448 = 0x3
0x591: V449 = S[0x3]
0x592: V450 = 0x5
0x594: V451 = S[0x5]
0x595: V452 = 0x3e8
0x599: V453 = MUL V449 V451
0x59a: V454 = DIV V453 0x3e8
0x59b: V455 = 0x20
0x59e: V456 = ADD V444 0x20
0x5a1: M[V456] = V454
0x5a2: V457 = 0x0
0x5a7: V458 = ADD 0x40 V444
0x5ab: M[V458] = 0x0
0x5ad: V459 = S[V441]
0x5ae: V460 = 0x1
0x5b0: V461 = 0xa0
0x5b2: V462 = 0x2
0x5b4: V463 = EXP 0x2 0xa0
0x5b5: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b6: V465 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V466 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V459
0x5b8: V467 = OR V466 V447
0x5ba: S[V441] = V467
0x5bb: V468 = 0x1
0x5be: V469 = ADD V441 0x1
0x5bf: S[V469] = V454
0x5c0: V470 = 0x2
0x5c2: V471 = ADD 0x2 V441
0x5c4: V472 = S[V471]
0x5c5: V473 = 0xff
0x5c7: V474 = NOT 0xff
0x5c8: V475 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V472
0x5ca: S[V471] = V475
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x486, 0xa8]

================================

Block 0x5cc
[0x5cc:0x5db]
---
Predecessors: [0x56a, 0x752]
Successors: [0x5dc]
---
0x5cc JUMPDEST
0x5cd PUSH1 0x8
0x5cf DUP1
0x5d0 SLOAD
0x5d1 PUSH1 0x6
0x5d3 SLOAD
0x5d4 SWAP1
0x5d5 DUP2
0x5d6 LT
0x5d7 ISZERO
0x5d8 PUSH2 0x2
0x5db JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V476 = 0x8
0x5d0: V477 = S[0x8]
0x5d1: V478 = 0x6
0x5d3: V479 = S[0x6]
0x5d6: V480 = LT V479 V477
0x5d7: V481 = ISZERO V480
0x5d8: V482 = 0x2
0x5db: THROWI V481
---
Entry stack: [V10, 0x486, 0xa8]
Stack pops: 0
Stack additions: [0x8, V479]
Exit stack: [V10, 0x486, 0xa8, 0x8, V479]

================================

Block 0x5dc
[0x5dc:0x613]
---
Predecessors: [0x5cc]
Successors: [0x614, 0x652]
---
0x5dc PUSH1 0x0
0x5de SWAP2
0x5df DUP3
0x5e0 MSTORE
0x5e1 SWAP1
0x5e2 SLOAD
0x5e3 PUSH1 0x3
0x5e5 SWAP1
0x5e6 SWAP2
0x5e7 MUL
0x5e8 PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x609 ADD
0x60a SLOAD
0x60b SWAP1
0x60c LT
0x60d DUP1
0x60e ISZERO
0x60f SWAP1
0x610 PUSH2 0x652
0x613 JUMPI
---
0x5dc: V483 = 0x0
0x5e0: M[0x0] = 0x8
0x5e2: V484 = S[0x0]
0x5e3: V485 = 0x3
0x5e7: V486 = MUL V479 0x3
0x5e8: V487 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x609: V488 = ADD 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4 V486
0x60a: V489 = S[V488]
0x60c: V490 = LT V484 V489
0x60e: V491 = ISZERO V490
0x610: V492 = 0x652
0x613: JUMPI 0x652 V490
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V479]
Stack pops: 2
Stack additions: [V491]
Exit stack: [V10, 0x486, 0xa8, V491]

================================

Block 0x614
[0x614:0x625]
---
Predecessors: [0x5dc]
Successors: [0x626]
---
0x614 POP
0x615 PUSH1 0x6
0x617 SLOAD
0x618 PUSH1 0x8
0x61a DUP1
0x61b SLOAD
0x61c SWAP1
0x61d SWAP2
0x61e SWAP1
0x61f DUP2
0x620 LT
0x621 ISZERO
0x622 PUSH2 0x2
0x625 JUMPI
---
0x615: V493 = 0x6
0x617: V494 = S[0x6]
0x618: V495 = 0x8
0x61b: V496 = S[0x8]
0x620: V497 = LT V494 V496
0x621: V498 = ISZERO V497
0x622: V499 = 0x2
0x625: THROWI V498
---
Entry stack: [V10, 0x486, 0xa8, V491]
Stack pops: 1
Stack additions: [0x8, V494]
Exit stack: [V10, 0x486, 0xa8, 0x8, V494]

================================

Block 0x626
[0x626:0x651]
---
Predecessors: [0x614]
Successors: [0x652]
---
0x626 PUSH1 0x3
0x628 MUL
0x629 PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x64a ADD
0x64b SLOAD
0x64c PUSH1 0x0
0x64e EQ
0x64f ISZERO
0x650 SWAP1
0x651 POP
---
0x626: V500 = 0x3
0x628: V501 = MUL 0x3 V494
0x629: V502 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x64a: V503 = ADD 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4 V501
0x64b: V504 = S[V503]
0x64c: V505 = 0x0
0x64e: V506 = EQ 0x0 V504
0x64f: V507 = ISZERO V506
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V494]
Stack pops: 2
Stack additions: [V507]
Exit stack: [V10, 0x486, 0xa8, V507]

================================

Block 0x652
[0x652:0x657]
---
Predecessors: [0x5dc, 0x626]
Successors: [0xa8, 0x658]
---
0x652 JUMPDEST
0x653 ISZERO
0x654 PUSH2 0xa8
0x657 JUMPI
---
0x652: JUMPDEST 
0x653: V508 = ISZERO S0
0x654: V509 = 0xa8
0x657: JUMPI 0xa8 V508
---
Entry stack: [V10, 0x486, 0xa8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x486, 0xa8]

================================

Block 0x658
[0x658:0x668]
---
Predecessors: [0x652]
Successors: [0x669]
---
0x658 PUSH1 0x6
0x65a SLOAD
0x65b PUSH1 0x8
0x65d DUP1
0x65e SLOAD
0x65f SWAP1
0x660 SWAP2
0x661 SWAP1
0x662 DUP2
0x663 LT
0x664 ISZERO
0x665 PUSH2 0x2
0x668 JUMPI
---
0x658: V510 = 0x6
0x65a: V511 = S[0x6]
0x65b: V512 = 0x8
0x65e: V513 = S[0x8]
0x663: V514 = LT V511 V513
0x664: V515 = ISZERO V514
0x665: V516 = 0x2
0x668: THROWI V515
---
Entry stack: [V10, 0x486, 0xa8]
Stack pops: 0
Stack additions: [0x8, V511]
Exit stack: [V10, 0x486, 0xa8, 0x8, V511]

================================

Block 0x669
[0x669:0x699]
---
Predecessors: [0x658]
Successors: [0x69a]
---
0x669 DUP2
0x66a SLOAD
0x66b PUSH1 0x0
0x66d DUP4
0x66e DUP2
0x66f MSTORE
0x670 PUSH1 0x0
0x672 DUP1
0x673 MLOAD
0x674 PUSH1 0x20
0x676 PUSH2 0x7b6
0x679 DUP4
0x67a CODECOPY
0x67b DUP2
0x67c MLOAD
0x67d SWAP2
0x67e MSTORE
0x67f PUSH1 0x3
0x681 DUP5
0x682 MUL
0x683 ADD
0x684 SLOAD
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d AND
0x68e SWAP4
0x68f SWAP1
0x690 SWAP3
0x691 SWAP1
0x692 SWAP2
0x693 DUP2
0x694 LT
0x695 ISZERO
0x696 PUSH2 0x2
0x699 JUMPI
---
0x66a: V517 = S[0x8]
0x66b: V518 = 0x0
0x66f: M[0x0] = 0x8
0x670: V519 = 0x0
0x673: V520 = M[0x0]
0x674: V521 = 0x20
0x676: V522 = 0x7b6
0x67a: CODECOPY 0x0 0x7b6 0x20
0x67c: V523 = M[0x0]
0x67e: M[0x0] = V520
0x67f: V524 = 0x3
0x682: V525 = MUL V511 0x3
0x683: V526 = ADD V525 V523
0x684: V527 = S[V526]
0x685: V528 = 0x1
0x687: V529 = 0xa0
0x689: V530 = 0x2
0x68b: V531 = EXP 0x2 0xa0
0x68c: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68d: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x694: V534 = LT V511 V517
0x695: V535 = ISZERO V534
0x696: V536 = 0x2
0x699: THROWI V535
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V511]
Stack pops: 2
Stack additions: [V533, 0x0, S1, S0]
Exit stack: [V10, 0x486, 0xa8, V533, 0x0, 0x8, V511]

================================

Block 0x69a
[0x69a:0x6de]
---
Predecessors: [0x669]
Successors: [0x6df]
---
0x69a SWAP1
0x69b DUP3
0x69c MSTORE
0x69d PUSH1 0x3
0x69f MUL
0x6a0 PUSH1 0x0
0x6a2 DUP1
0x6a3 MLOAD
0x6a4 PUSH1 0x20
0x6a6 PUSH2 0x7b6
0x6a9 DUP4
0x6aa CODECOPY
0x6ab DUP2
0x6ac MLOAD
0x6ad SWAP2
0x6ae MSTORE
0x6af ADD
0x6b0 DUP2
0x6b1 POP
0x6b2 PUSH1 0x40
0x6b4 MLOAD
0x6b5 PUSH1 0x1
0x6b7 SWAP1
0x6b8 SWAP2
0x6b9 ADD
0x6ba SLOAD
0x6bb SWAP1
0x6bc PUSH1 0x0
0x6be DUP2
0x6bf DUP2
0x6c0 DUP2
0x6c1 DUP6
0x6c2 DUP9
0x6c3 DUP9
0x6c4 CALL
0x6c5 SWAP4
0x6c6 POP
0x6c7 POP
0x6c8 POP
0x6c9 POP
0x6ca POP
0x6cb PUSH1 0x8
0x6cd PUSH1 0x0
0x6cf POP
0x6d0 PUSH1 0x6
0x6d2 PUSH1 0x0
0x6d4 POP
0x6d5 SLOAD
0x6d6 DUP2
0x6d7 SLOAD
0x6d8 DUP2
0x6d9 LT
0x6da ISZERO
0x6db PUSH2 0x2
0x6de JUMPI
---
0x69c: M[0x0] = 0x8
0x69d: V537 = 0x3
0x69f: V538 = MUL 0x3 V511
0x6a0: V539 = 0x0
0x6a3: V540 = M[0x0]
0x6a4: V541 = 0x20
0x6a6: V542 = 0x7b6
0x6aa: CODECOPY 0x0 0x7b6 0x20
0x6ac: V543 = M[0x0]
0x6ae: M[0x0] = V540
0x6af: V544 = ADD V543 V538
0x6b2: V545 = 0x40
0x6b4: V546 = M[0x40]
0x6b5: V547 = 0x1
0x6b9: V548 = ADD V544 0x1
0x6ba: V549 = S[V548]
0x6bc: V550 = 0x0
0x6c4: V551 = CALL 0x0 V533 V549 V546 0x0 V546 0x0
0x6cb: V552 = 0x8
0x6cd: V553 = 0x0
0x6d0: V554 = 0x6
0x6d2: V555 = 0x0
0x6d5: V556 = S[0x6]
0x6d7: V557 = S[0x8]
0x6d9: V558 = LT V556 V557
0x6da: V559 = ISZERO V558
0x6db: V560 = 0x2
0x6de: THROWI V559
---
Entry stack: [V10, 0x486, 0xa8, V533, 0x0, 0x8, V511]
Stack pops: 4
Stack additions: [0x8, V556]
Exit stack: [V10, 0x486, 0xa8, 0x8, V556]

================================

Block 0x6df
[0x6df:0x719]
---
Predecessors: [0x69a]
Successors: [0x71a]
---
0x6df DUP2
0x6e0 SLOAD
0x6e1 PUSH1 0x0
0x6e3 DUP4
0x6e4 DUP2
0x6e5 MSTORE
0x6e6 DUP1
0x6e7 SLOAD
0x6e8 PUSH1 0x3
0x6ea DUP5
0x6eb MUL
0x6ec PUSH32 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x70d ADD
0x70e SLOAD
0x70f SWAP1
0x710 SUB
0x711 SWAP1
0x712 SSTORE
0x713 DUP2
0x714 LT
0x715 ISZERO
0x716 PUSH2 0x2
0x719 JUMPI
---
0x6e0: V561 = S[0x8]
0x6e1: V562 = 0x0
0x6e5: M[0x0] = 0x8
0x6e7: V563 = S[0x0]
0x6e8: V564 = 0x3
0x6eb: V565 = MUL V556 0x3
0x6ec: V566 = 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4
0x70d: V567 = ADD 0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4 V565
0x70e: V568 = S[V567]
0x710: V569 = SUB V563 V568
0x712: S[0x0] = V569
0x714: V570 = LT V556 V561
0x715: V571 = ISZERO V570
0x716: V572 = 0x2
0x719: THROWI V571
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V556]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x486, 0xa8, 0x8, V556]

================================

Block 0x71a
[0x71a:0x751]
---
Predecessors: [0x6df]
Successors: [0x752]
---
0x71a PUSH1 0x0
0x71c SWAP2
0x71d DUP3
0x71e MSTORE
0x71f PUSH1 0x3
0x721 MUL
0x722 PUSH1 0x0
0x724 DUP1
0x725 MLOAD
0x726 PUSH1 0x20
0x728 PUSH2 0x7b6
0x72b DUP4
0x72c CODECOPY
0x72d DUP2
0x72e MLOAD
0x72f SWAP2
0x730 MSTORE
0x731 ADD
0x732 SWAP1
0x733 POP
0x734 PUSH1 0x1
0x736 DUP1
0x737 SLOAD
0x738 SWAP2
0x739 DUP2
0x73a ADD
0x73b SLOAD
0x73c SWAP1
0x73d SWAP2
0x73e ADD
0x73f DUP2
0x740 SSTORE
0x741 PUSH1 0x6
0x743 SLOAD
0x744 PUSH1 0x8
0x746 DUP1
0x747 SLOAD
0x748 SWAP1
0x749 SWAP2
0x74a SWAP1
0x74b DUP2
0x74c LT
0x74d ISZERO
0x74e PUSH2 0x2
0x751 JUMPI
---
0x71a: V573 = 0x0
0x71e: M[0x0] = 0x8
0x71f: V574 = 0x3
0x721: V575 = MUL 0x3 V556
0x722: V576 = 0x0
0x725: V577 = M[0x0]
0x726: V578 = 0x20
0x728: V579 = 0x7b6
0x72c: CODECOPY 0x0 0x7b6 0x20
0x72e: V580 = M[0x0]
0x730: M[0x0] = V577
0x731: V581 = ADD V580 V575
0x734: V582 = 0x1
0x737: V583 = S[0x1]
0x73a: V584 = ADD 0x1 V581
0x73b: V585 = S[V584]
0x73e: V586 = ADD V583 V585
0x740: S[0x1] = V586
0x741: V587 = 0x6
0x743: V588 = S[0x6]
0x744: V589 = 0x8
0x747: V590 = S[0x8]
0x74c: V591 = LT V588 V590
0x74d: V592 = ISZERO V591
0x74e: V593 = 0x2
0x751: THROWI V592
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V556]
Stack pops: 2
Stack additions: [0x1, 0x8, V588]
Exit stack: [V10, 0x486, 0xa8, 0x1, 0x8, V588]

================================

Block 0x752
[0x752:0x786]
---
Predecessors: [0x71a]
Successors: [0x5cc]
---
0x752 PUSH1 0x0
0x754 SWAP2
0x755 DUP3
0x756 MSTORE
0x757 PUSH1 0x3
0x759 MUL
0x75a PUSH1 0x0
0x75c DUP1
0x75d MLOAD
0x75e PUSH1 0x20
0x760 PUSH2 0x7b6
0x763 DUP4
0x764 CODECOPY
0x765 DUP2
0x766 MLOAD
0x767 SWAP2
0x768 MSTORE
0x769 ADD
0x76a SWAP1
0x76b POP
0x76c PUSH1 0x2
0x76e ADD
0x76f DUP1
0x770 SLOAD
0x771 PUSH1 0xff
0x773 NOT
0x774 AND
0x775 SWAP1
0x776 SWAP2
0x777 OR
0x778 SWAP1
0x779 SSTORE
0x77a PUSH1 0x6
0x77c DUP1
0x77d SLOAD
0x77e PUSH1 0x1
0x780 ADD
0x781 SWAP1
0x782 SSTORE
0x783 PUSH2 0x5cc
0x786 JUMP
---
0x752: V594 = 0x0
0x756: M[0x0] = 0x8
0x757: V595 = 0x3
0x759: V596 = MUL 0x3 V588
0x75a: V597 = 0x0
0x75d: V598 = M[0x0]
0x75e: V599 = 0x20
0x760: V600 = 0x7b6
0x764: CODECOPY 0x0 0x7b6 0x20
0x766: V601 = M[0x0]
0x768: M[0x0] = V598
0x769: V602 = ADD V601 V596
0x76c: V603 = 0x2
0x76e: V604 = ADD 0x2 V602
0x770: V605 = S[V604]
0x771: V606 = 0xff
0x773: V607 = NOT 0xff
0x774: V608 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V605
0x777: V609 = OR 0x1 V608
0x779: S[V604] = V609
0x77a: V610 = 0x6
0x77d: V611 = S[0x6]
0x77e: V612 = 0x1
0x780: V613 = ADD 0x1 V611
0x782: S[0x6] = V613
0x783: V614 = 0x5cc
0x786: JUMP 0x5cc
---
Entry stack: [V10, 0x486, 0xa8, 0x1, 0x8, V588]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x486, 0xa8]

================================

Block 0x787
[0x787:0x78a]
---
Predecessors: [0x539]
Successors: [0x56a]
---
0x787 JUMPDEST
0x788 POP
0x789 SWAP1
0x78a JUMP
---
0x787: JUMPDEST 
0x78a: JUMP 0x56a
---
Entry stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, 0x56a, V409, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x486, 0xa8, 0x8, V395, V397, 0x8, V397, V409]

================================

Block 0x78b
[0x78b:0x7b5]
---
Predecessors: [0x1b6]
Successors: [0x486]
---
0x78b JUMPDEST
0x78c PUSH1 0x7
0x78e SLOAD
0x78f PUSH1 0x2
0x791 SLOAD
0x792 PUSH1 0x40
0x794 MLOAD
0x795 PUSH1 0x1
0x797 PUSH1 0xa0
0x799 PUSH1 0x2
0x79b EXP
0x79c SUB
0x79d SWAP3
0x79e SWAP1
0x79f SWAP3
0x7a0 AND
0x7a1 SWAP2
0x7a2 PUSH1 0x0
0x7a4 SWAP2
0x7a5 SWAP1
0x7a6 DUP3
0x7a7 DUP2
0x7a8 DUP2
0x7a9 DUP2
0x7aa DUP6
0x7ab DUP9
0x7ac DUP4
0x7ad CALL
0x7ae POP
0x7af POP
0x7b0 POP
0x7b1 PUSH1 0x2
0x7b3 SSTORE
0x7b4 POP
0x7b5 JUMP
---
0x78b: JUMPDEST 
0x78c: V615 = 0x7
0x78e: V616 = S[0x7]
0x78f: V617 = 0x2
0x791: V618 = S[0x2]
0x792: V619 = 0x40
0x794: V620 = M[0x40]
0x795: V621 = 0x1
0x797: V622 = 0xa0
0x799: V623 = 0x2
0x79b: V624 = EXP 0x2 0xa0
0x79c: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a0: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x7a2: V627 = 0x0
0x7ad: V628 = CALL 0x0 V626 V618 V620 0x0 V620 0x0
0x7b1: V629 = 0x2
0x7b3: S[0x2] = 0x0
0x7b5: JUMP 0x486
---
Entry stack: [V10, 0x486]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7b6
[0x7b6:0x7d7]
---
Predecessors: []
Successors: []
---
0x7b6 RETURN
0x7b7 MISSING 0xf7
0x7b8 MISSING 0xa9
0x7b9 INVALID
0x7ba CALLDATASIZE
0x7bb MISSING 0x4f
0x7bc MISSING 0xaa
0x7bd MISSING 0xb9
0x7be EXTCODESIZE
0x7bf MISSING 0x21
0x7c0 PUSH14 0xa50a3214154f22a0a2b415b23a84
0x7cf MISSING 0xc8
0x7d0 AND
0x7d1 SWAP15
0x7d2 DUP12
0x7d3 PUSH4 0x6ee3
---
0x7b6: RETURN S0 S1
0x7b7: MISSING 0xf7
0x7b8: MISSING 0xa9
0x7b9: INVALID 
0x7ba: V630 = CALLDATASIZE
0x7bb: MISSING 0x4f
0x7bc: MISSING 0xaa
0x7bd: MISSING 0xb9
0x7be: V631 = EXTCODESIZE S0
0x7bf: MISSING 0x21
0x7c0: V632 = 0xa50a3214154f22a0a2b415b23a84
0x7cf: MISSING 0xc8
0x7d0: V633 = AND S0 S1
0x7d3: V634 = 0x6ee3
---
Entry stack: []
Stack pops: 1005
Stack additions: [0x6ee3, S12, S16, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V633]
Exit stack: []

================================

Function 0:
Public function signature: 0x244ded7a
Entry block: 0xaa
Exit block: 0x486
Body: 0xaa, 0x486

Function 1:
Public function signature: 0x63aea3e0
Entry block: 0xdf
Exit block: 0x488
Body: 0xdf, 0xf6, 0x103, 0x13c, 0x165, 0x192, 0x488

Function 2:
Public function signature: 0x7879e19e
Entry block: 0x199
Exit block: 0x486
Body: 0xa8, 0x199, 0x1b6, 0x1c1, 0x486, 0x78b

Function 3:
Public function signature: 0x7e4620a8
Entry block: 0x1c5
Exit block: 0x2b0
Body: 0x1c5, 0x24a, 0x297, 0x2b0

Function 4:
Public function signature: 0x82381c96
Entry block: 0x2bf
Exit block: 0x2b0
Body: 0x24a, 0x297, 0x2b0, 0x2bf

Function 5:
Public function signature: 0x936e75b2
Entry block: 0x311
Exit block: 0x2b0
Body: 0x24a, 0x297, 0x2b0, 0x311

Function 6:
Public function signature: 0xc8edf65e
Entry block: 0x3a1
Exit block: 0x486
Body: 0x3a1, 0x486

Function 7:
Public function signature: 0xd628e0a6
Entry block: 0x41a
Exit block: 0x2b0
Body: 0x24a, 0x297, 0x2b0, 0x41a

Function 8:
Public function signature: 0xdbb0681e
Entry block: 0x471
Exit block: 0x471
Body: 0x471

Function 9:
Public fallback function
Entry block: 0x77
Exit block: 0x486
Body: 0x77, 0x88, 0xa8, 0x486, 0x4b1, 0x4bc, 0x4e0, 0x51f, 0x539, 0x542, 0x56a, 0x5cc, 0x5dc, 0x614, 0x626, 0x652, 0x658, 0x669, 0x69a, 0x6df, 0x71a, 0x752, 0x787

