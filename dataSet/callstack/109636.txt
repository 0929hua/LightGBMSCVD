Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x121f88bf
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x121f88bf
0x3c: V13 = EQ 0x121f88bf V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb2]
---
0x4c DUP1
0x4d PUSH4 0x5bd74afe
0x52 EQ
0x53 PUSH2 0xb2
0x56 JUMPI
---
0x4d: V18 = 0x5bd74afe
0x52: V19 = EQ 0x5bd74afe V11
0x53: V20 = 0xb2
0x56: JUMPI 0xb2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x12c]
---
0x57 DUP1
0x58 PUSH4 0xa2b2cad2
0x5d EQ
0x5e PUSH2 0x12c
0x61 JUMPI
---
0x58: V21 = 0xa2b2cad2
0x5d: V22 = EQ 0xa2b2cad2 V11
0x5e: V23 = 0x12c
0x61: JUMPI 0x12c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x15a]
---
0x62 DUP1
0x63 PUSH4 0xb4a99a4e
0x68 EQ
0x69 PUSH2 0x15a
0x6c JUMPI
---
0x63: V24 = 0xb4a99a4e
0x68: V25 = EQ 0xb4a99a4e V11
0x69: V26 = 0x15a
0x6c: JUMPI 0x15a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x71: V28 = ISZERO V27
0x72: V29 = 0x7a
0x75: JUMPI 0x7a V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6f]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V30 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0xa5]
---
Predecessors: [0x6f]
Successors: [0x1af]
---
0x7a JUMPDEST
0x7b PUSH2 0xa6
0x7e PUSH1 0x4
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e SWAP2
0x9f SWAP1
0xa0 POP
0xa1 POP
0xa2 PUSH2 0x1af
0xa5 JUMP
---
0x7a: JUMPDEST 
0x7b: V31 = 0xa6
0x7e: V32 = 0x4
0x82: V33 = CALLDATALOAD 0x4
0x83: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x9a: V36 = 0x20
0x9c: V37 = ADD 0x20 0x4
0xa2: V38 = 0x1af
0xa5: JUMP 0x1af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa6, V35]
Exit stack: [V11, 0xa6, V35]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: [0x1af]
Successors: []
---
0xa6 JUMPDEST
0xa7 STOP
---
0xa6: JUMPDEST 
0xa7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x41]
Successors: [0x31a]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xb0
0xac PUSH2 0x31a
0xaf JUMP
---
0xa8: JUMPDEST 
0xa9: V39 = 0xb0
0xac: V40 = 0x31a
0xaf: JUMP 0x31a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V11, 0xb0]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x392]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0x129]
---
Predecessors: [0x4c]
Successors: [0x394]
---
0xb2 JUMPDEST
0xb3 PUSH2 0x12a
0xb6 PUSH1 0x4
0xb8 DUP1
0xb9 DUP1
0xba CALLDATALOAD
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 AND
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf DUP3
0xe0 ADD
0xe1 DUP1
0xe2 CALLDATALOAD
0xe3 SWAP1
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP1
0xe8 DUP1
0xe9 DUP1
0xea PUSH1 0x1f
0xec ADD
0xed PUSH1 0x20
0xef DUP1
0xf0 SWAP2
0xf1 DIV
0xf2 MUL
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 PUSH1 0x40
0xf8 MLOAD
0xf9 SWAP1
0xfa DUP2
0xfb ADD
0xfc PUSH1 0x40
0xfe MSTORE
0xff DUP1
0x100 SWAP4
0x101 SWAP3
0x102 SWAP2
0x103 SWAP1
0x104 DUP2
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a DUP4
0x10b DUP4
0x10c DUP1
0x10d DUP3
0x10e DUP5
0x10f CALLDATACOPY
0x110 DUP3
0x111 ADD
0x112 SWAP2
0x113 POP
0x114 POP
0x115 POP
0x116 POP
0x117 POP
0x118 POP
0x119 SWAP2
0x11a SWAP1
0x11b DUP1
0x11c CALLDATALOAD
0x11d SWAP1
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP1
0x122 SWAP2
0x123 SWAP1
0x124 POP
0x125 POP
0x126 PUSH2 0x394
0x129 JUMP
---
0xb2: JUMPDEST 
0xb3: V41 = 0x12a
0xb6: V42 = 0x4
0xba: V43 = CALLDATALOAD 0x4
0xbb: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xd2: V46 = 0x20
0xd4: V47 = ADD 0x20 0x4
0xd9: V48 = CALLDATALOAD 0x24
0xdb: V49 = 0x20
0xdd: V50 = ADD 0x20 0x24
0xe0: V51 = ADD 0x4 V48
0xe2: V52 = CALLDATALOAD V51
0xe4: V53 = 0x20
0xe6: V54 = ADD 0x20 V51
0xea: V55 = 0x1f
0xec: V56 = ADD 0x1f V52
0xed: V57 = 0x20
0xf1: V58 = DIV V56 0x20
0xf2: V59 = MUL V58 0x20
0xf3: V60 = 0x20
0xf5: V61 = ADD 0x20 V59
0xf6: V62 = 0x40
0xf8: V63 = M[0x40]
0xfb: V64 = ADD V63 V61
0xfc: V65 = 0x40
0xfe: M[0x40] = V64
0x106: M[V63] = V52
0x107: V66 = 0x20
0x109: V67 = ADD 0x20 V63
0x10f: CALLDATACOPY V67 V54 V52
0x111: V68 = ADD V67 V52
0x11c: V69 = CALLDATALOAD 0x44
0x11e: V70 = 0x20
0x120: V71 = ADD 0x20 0x44
0x126: V72 = 0x394
0x129: JUMP 0x394
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12a, V45, V63, V69]
Exit stack: [V11, 0x12a, V45, V63, V69]

================================

Block 0x12a
[0x12a:0x12b]
---
Predecessors: [0x462]
Successors: []
---
0x12a JUMPDEST
0x12b STOP
---
0x12a: JUMPDEST 
0x12b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12c
[0x12c:0x157]
---
Predecessors: [0x57]
Successors: [0x481]
---
0x12c JUMPDEST
0x12d PUSH2 0x158
0x130 PUSH1 0x4
0x132 DUP1
0x133 DUP1
0x134 CALLDATALOAD
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b SWAP1
0x14c PUSH1 0x20
0x14e ADD
0x14f SWAP1
0x150 SWAP2
0x151 SWAP1
0x152 POP
0x153 POP
0x154 PUSH2 0x481
0x157 JUMP
---
0x12c: JUMPDEST 
0x12d: V73 = 0x158
0x130: V74 = 0x4
0x134: V75 = CALLDATALOAD 0x4
0x135: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x14c: V78 = 0x20
0x14e: V79 = ADD 0x20 0x4
0x154: V80 = 0x481
0x157: JUMP 0x481
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x158, V77]
Exit stack: [V11, 0x158, V77]

================================

Block 0x158
[0x158:0x159]
---
Predecessors: [0x8ef]
Successors: []
---
0x158 JUMPDEST
0x159 STOP
---
0x158: JUMPDEST 
0x159: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15a
[0x15a:0x160]
---
Predecessors: [0x62]
Successors: [0x161, 0x165]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x15a: JUMPDEST 
0x15b: V81 = CALLVALUE
0x15c: V82 = ISZERO V81
0x15d: V83 = 0x165
0x160: JUMPI 0x165 V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x15a]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V84 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x165
[0x165:0x16c]
---
Predecessors: [0x15a]
Successors: [0x8f6]
---
0x165 JUMPDEST
0x166 PUSH2 0x16d
0x169 PUSH2 0x8f6
0x16c JUMP
---
0x165: JUMPDEST 
0x166: V85 = 0x16d
0x169: V86 = 0x8f6
0x16c: JUMP 0x8f6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16d]
Exit stack: [V11, 0x16d]

================================

Block 0x16d
[0x16d:0x1ae]
---
Predecessors: [0x8f6]
Successors: []
---
0x16d JUMPDEST
0x16e PUSH1 0x40
0x170 MLOAD
0x171 DUP1
0x172 DUP3
0x173 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x188 AND
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 SWAP2
0x1a5 POP
0x1a6 POP
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa DUP1
0x1ab SWAP2
0x1ac SUB
0x1ad SWAP1
0x1ae RETURN
---
0x16d: JUMPDEST 
0x16e: V87 = 0x40
0x170: V88 = M[0x40]
0x173: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x188: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x189: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1a0: M[V88] = V92
0x1a1: V93 = 0x20
0x1a3: V94 = ADD 0x20 V88
0x1a7: V95 = 0x40
0x1a9: V96 = M[0x40]
0x1ac: V97 = SUB V94 V96
0x1ae: RETURN V96 V97
---
Entry stack: [V11, 0x16d, V464]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x16d]

================================

Block 0x1af
[0x1af:0x319]
---
Predecessors: [0x7a]
Successors: [0xa6]
---
0x1af JUMPDEST
0x1b0 DUP1
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 CALLVALUE
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc DUP1
0x1cd PUSH32 0x696e697428290000000000000000000000000000000000000000000000000000
0x1ee DUP2
0x1ef MSTORE
0x1f0 POP
0x1f1 PUSH1 0x6
0x1f3 ADD
0x1f4 SWAP1
0x1f5 POP
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 DUP1
0x1fa SWAP2
0x1fb SUB
0x1fc SWAP1
0x1fd SHA3
0x1fe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x21c SWAP1
0x21d DIV
0x21e SWAP1
0x21f PUSH1 0x40
0x221 MLOAD
0x222 DUP3
0x223 PUSH4 0xffffffff
0x228 AND
0x229 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x247 MUL
0x248 DUP2
0x249 MSTORE
0x24a PUSH1 0x4
0x24c ADD
0x24d PUSH1 0x0
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 DUP4
0x254 SUB
0x255 DUP2
0x256 DUP6
0x257 DUP9
0x258 PUSH2 0x8796
0x25b GAS
0x25c SUB
0x25d CALL
0x25e SWAP4
0x25f POP
0x260 POP
0x261 POP
0x262 POP
0x263 POP
0x264 DUP1
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b CALLVALUE
0x27c PUSH1 0x40
0x27e MLOAD
0x27f DUP1
0x280 DUP1
0x281 PUSH32 0x6c6f636b28290000000000000000000000000000000000000000000000000000
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 POP
0x2a5 PUSH1 0x6
0x2a7 ADD
0x2a8 SWAP1
0x2a9 POP
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 SHA3
0x2b2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d0 SWAP1
0x2d1 DIV
0x2d2 SWAP1
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP3
0x2d7 PUSH4 0xffffffff
0x2dc AND
0x2dd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2fb MUL
0x2fc DUP2
0x2fd MSTORE
0x2fe PUSH1 0x4
0x300 ADD
0x301 PUSH1 0x0
0x303 PUSH1 0x40
0x305 MLOAD
0x306 DUP1
0x307 DUP4
0x308 SUB
0x309 DUP2
0x30a DUP6
0x30b DUP9
0x30c PUSH2 0x8796
0x30f GAS
0x310 SUB
0x311 CALL
0x312 SWAP4
0x313 POP
0x314 POP
0x315 POP
0x316 POP
0x317 POP
0x318 POP
0x319 JUMP
---
0x1af: JUMPDEST 
0x1b1: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x1c7: V100 = CALLVALUE
0x1c8: V101 = 0x40
0x1ca: V102 = M[0x40]
0x1cd: V103 = 0x696e697428290000000000000000000000000000000000000000000000000000
0x1ef: M[V102] = 0x696e697428290000000000000000000000000000000000000000000000000000
0x1f1: V104 = 0x6
0x1f3: V105 = ADD 0x6 V102
0x1f6: V106 = 0x40
0x1f8: V107 = M[0x40]
0x1fb: V108 = SUB V105 V107
0x1fd: V109 = SHA3 V107 V108
0x1fe: V110 = 0x100000000000000000000000000000000000000000000000000000000
0x21d: V111 = DIV V109 0x100000000000000000000000000000000000000000000000000000000
0x21f: V112 = 0x40
0x221: V113 = M[0x40]
0x223: V114 = 0xffffffff
0x228: V115 = AND 0xffffffff V111
0x229: V116 = 0x100000000000000000000000000000000000000000000000000000000
0x247: V117 = MUL 0x100000000000000000000000000000000000000000000000000000000 V115
0x249: M[V113] = V117
0x24a: V118 = 0x4
0x24c: V119 = ADD 0x4 V113
0x24d: V120 = 0x0
0x24f: V121 = 0x40
0x251: V122 = M[0x40]
0x254: V123 = SUB V119 V122
0x258: V124 = 0x8796
0x25b: V125 = GAS
0x25c: V126 = SUB V125 0x8796
0x25d: V127 = CALL V126 V99 V100 V122 V123 V122 0x0
0x265: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x27b: V130 = CALLVALUE
0x27c: V131 = 0x40
0x27e: V132 = M[0x40]
0x281: V133 = 0x6c6f636b28290000000000000000000000000000000000000000000000000000
0x2a3: M[V132] = 0x6c6f636b28290000000000000000000000000000000000000000000000000000
0x2a5: V134 = 0x6
0x2a7: V135 = ADD 0x6 V132
0x2aa: V136 = 0x40
0x2ac: V137 = M[0x40]
0x2af: V138 = SUB V135 V137
0x2b1: V139 = SHA3 V137 V138
0x2b2: V140 = 0x100000000000000000000000000000000000000000000000000000000
0x2d1: V141 = DIV V139 0x100000000000000000000000000000000000000000000000000000000
0x2d3: V142 = 0x40
0x2d5: V143 = M[0x40]
0x2d7: V144 = 0xffffffff
0x2dc: V145 = AND 0xffffffff V141
0x2dd: V146 = 0x100000000000000000000000000000000000000000000000000000000
0x2fb: V147 = MUL 0x100000000000000000000000000000000000000000000000000000000 V145
0x2fd: M[V143] = V147
0x2fe: V148 = 0x4
0x300: V149 = ADD 0x4 V143
0x301: V150 = 0x0
0x303: V151 = 0x40
0x305: V152 = M[0x40]
0x308: V153 = SUB V149 V152
0x30c: V154 = 0x8796
0x30f: V155 = GAS
0x310: V156 = SUB V155 0x8796
0x311: V157 = CALL V156 V129 V130 V152 V153 V152 0x0
0x319: JUMP 0xa6
---
Entry stack: [V11, 0xa6, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x31a
[0x31a:0x38d]
---
Predecessors: [0xa8]
Successors: [0x38e, 0x392]
---
0x31a JUMPDEST
0x31b PUSH1 0x0
0x31d DUP1
0x31e SWAP1
0x31f SLOAD
0x320 SWAP1
0x321 PUSH2 0x100
0x324 EXP
0x325 SWAP1
0x326 DIV
0x327 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33c AND
0x33d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x352 AND
0x353 PUSH2 0x8fc
0x356 ADDRESS
0x357 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36c AND
0x36d BALANCE
0x36e SWAP1
0x36f DUP2
0x370 ISZERO
0x371 MUL
0x372 SWAP1
0x373 PUSH1 0x40
0x375 MLOAD
0x376 PUSH1 0x0
0x378 PUSH1 0x40
0x37a MLOAD
0x37b DUP1
0x37c DUP4
0x37d SUB
0x37e DUP2
0x37f DUP6
0x380 DUP9
0x381 DUP9
0x382 CALL
0x383 SWAP4
0x384 POP
0x385 POP
0x386 POP
0x387 POP
0x388 ISZERO
0x389 ISZERO
0x38a PUSH2 0x392
0x38d JUMPI
---
0x31a: JUMPDEST 
0x31b: V158 = 0x0
0x31f: V159 = S[0x0]
0x321: V160 = 0x100
0x324: V161 = EXP 0x100 0x0
0x326: V162 = DIV V159 0x1
0x327: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x33d: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x352: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x353: V167 = 0x8fc
0x356: V168 = ADDRESS
0x357: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x36c: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x36d: V171 = BALANCE V170
0x370: V172 = ISZERO V171
0x371: V173 = MUL V172 0x8fc
0x373: V174 = 0x40
0x375: V175 = M[0x40]
0x376: V176 = 0x0
0x378: V177 = 0x40
0x37a: V178 = M[0x40]
0x37d: V179 = SUB V175 V178
0x382: V180 = CALL V173 V166 V171 V178 V179 V178 0x0
0x388: V181 = ISZERO V180
0x389: V182 = ISZERO V181
0x38a: V183 = 0x392
0x38d: JUMPI 0x392 V182
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x38e
[0x38e:0x391]
---
Predecessors: [0x31a]
Successors: []
---
0x38e PUSH1 0x0
0x390 DUP1
0x391 REVERT
---
0x38e: V184 = 0x0
0x391: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x392
[0x392:0x393]
---
Predecessors: [0x31a]
Successors: [0xb0]
---
0x392 JUMPDEST
0x393 JUMP
---
0x392: JUMPDEST 
0x393: JUMP 0xb0
---
Entry stack: [V11, 0xb0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x394
[0x394:0x3ea]
---
Predecessors: [0xb2]
Successors: [0x3eb, 0x3ef]
---
0x394 JUMPDEST
0x395 CALLER
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af SWAP1
0x3b0 SLOAD
0x3b1 SWAP1
0x3b2 PUSH2 0x100
0x3b5 EXP
0x3b6 SWAP1
0x3b7 DIV
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 AND
0x3e4 EQ
0x3e5 ISZERO
0x3e6 ISZERO
0x3e7 PUSH2 0x3ef
0x3ea JUMPI
---
0x394: JUMPDEST 
0x395: V185 = CALLER
0x396: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x3ac: V188 = 0x0
0x3b0: V189 = S[0x0]
0x3b2: V190 = 0x100
0x3b5: V191 = EXP 0x100 0x0
0x3b7: V192 = DIV V189 0x1
0x3b8: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x3ce: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x3e4: V197 = EQ V196 V187
0x3e5: V198 = ISZERO V197
0x3e6: V199 = ISZERO V198
0x3e7: V200 = 0x3ef
0x3ea: JUMPI 0x3ef V199
---
Entry stack: [V11, 0x12a, V45, V63, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12a, V45, V63, V69]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0x394]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee REVERT
---
0x3eb: V201 = 0x0
0x3ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12a, V45, V63, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12a, V45, V63, V69]

================================

Block 0x3ef
[0x3ef:0x419]
---
Predecessors: [0x394]
Successors: [0x41a]
---
0x3ef JUMPDEST
0x3f0 DUP3
0x3f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x406 AND
0x407 DUP2
0x408 DUP4
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d DUP3
0x40e DUP1
0x40f MLOAD
0x410 SWAP1
0x411 PUSH1 0x20
0x413 ADD
0x414 SWAP1
0x415 DUP1
0x416 DUP4
0x417 DUP4
0x418 PUSH1 0x0
---
0x3ef: JUMPDEST 
0x3f1: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x406: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x409: V204 = 0x40
0x40b: V205 = M[0x40]
0x40f: V206 = M[V63]
0x411: V207 = 0x20
0x413: V208 = ADD 0x20 V63
0x418: V209 = 0x0
---
Entry stack: [V11, 0x12a, V45, V63, V69]
Stack pops: 3
Stack additions: [S2, S1, S0, V203, S0, S1, V205, V205, V208, V206, V206, V205, V208, 0x0]
Exit stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V205, V208, V206, V206, V205, V208, 0x0]

================================

Block 0x41a
[0x41a:0x422]
---
Predecessors: [0x3ef, 0x423]
Successors: [0x423, 0x435]
---
0x41a JUMPDEST
0x41b DUP4
0x41c DUP2
0x41d LT
0x41e ISZERO
0x41f PUSH2 0x435
0x422 JUMPI
---
0x41a: JUMPDEST 
0x41d: V210 = LT S0 V206
0x41e: V211 = ISZERO V210
0x41f: V212 = 0x435
0x422: JUMPI 0x435 V211
---
Entry stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V205, V208, V206, V206, V205, V208, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V205, V208, V206, V206, V205, V208, S0]

================================

Block 0x423
[0x423:0x434]
---
Predecessors: [0x41a]
Successors: [0x41a]
---
0x423 DUP1
0x424 DUP3
0x425 ADD
0x426 MLOAD
0x427 DUP2
0x428 DUP5
0x429 ADD
0x42a MSTORE
0x42b PUSH1 0x20
0x42d DUP2
0x42e ADD
0x42f SWAP1
0x430 POP
0x431 PUSH2 0x41a
0x434 JUMP
---
0x425: V213 = ADD V208 S0
0x426: V214 = M[V213]
0x429: V215 = ADD V205 S0
0x42a: M[V215] = V214
0x42b: V216 = 0x20
0x42e: V217 = ADD S0 0x20
0x431: V218 = 0x41a
0x434: JUMP 0x41a
---
Entry stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V205, V208, V206, V206, V205, V208, S0]
Stack pops: 3
Stack additions: [S2, S1, V217]
Exit stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V205, V208, V206, V206, V205, V208, V217]

================================

Block 0x435
[0x435:0x448]
---
Predecessors: [0x41a]
Successors: [0x449, 0x462]
---
0x435 JUMPDEST
0x436 POP
0x437 POP
0x438 POP
0x439 POP
0x43a SWAP1
0x43b POP
0x43c SWAP1
0x43d DUP2
0x43e ADD
0x43f SWAP1
0x440 PUSH1 0x1f
0x442 AND
0x443 DUP1
0x444 ISZERO
0x445 PUSH2 0x462
0x448 JUMPI
---
0x435: JUMPDEST 
0x43e: V219 = ADD V206 V205
0x440: V220 = 0x1f
0x442: V221 = AND 0x1f V206
0x444: V222 = ISZERO V221
0x445: V223 = 0x462
0x448: JUMPI 0x462 V222
---
Entry stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V205, V208, V206, V206, V205, V208, S0]
Stack pops: 7
Stack additions: [V219, V221]
Exit stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V219, V221]

================================

Block 0x449
[0x449:0x461]
---
Predecessors: [0x435]
Successors: [0x462]
---
0x449 DUP1
0x44a DUP3
0x44b SUB
0x44c DUP1
0x44d MLOAD
0x44e PUSH1 0x1
0x450 DUP4
0x451 PUSH1 0x20
0x453 SUB
0x454 PUSH2 0x100
0x457 EXP
0x458 SUB
0x459 NOT
0x45a AND
0x45b DUP2
0x45c MSTORE
0x45d PUSH1 0x20
0x45f ADD
0x460 SWAP2
0x461 POP
---
0x44b: V224 = SUB V219 V221
0x44d: V225 = M[V224]
0x44e: V226 = 0x1
0x451: V227 = 0x20
0x453: V228 = SUB 0x20 V221
0x454: V229 = 0x100
0x457: V230 = EXP 0x100 V228
0x458: V231 = SUB V230 0x1
0x459: V232 = NOT V231
0x45a: V233 = AND V232 V225
0x45c: M[V224] = V233
0x45d: V234 = 0x20
0x45f: V235 = ADD 0x20 V224
---
Entry stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V219, V221]
Stack pops: 2
Stack additions: [V235, S0]
Exit stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, V235, V221]

================================

Block 0x462
[0x462:0x480]
---
Predecessors: [0x435, 0x449]
Successors: [0x12a]
---
0x462 JUMPDEST
0x463 POP
0x464 SWAP2
0x465 POP
0x466 POP
0x467 PUSH1 0x0
0x469 PUSH1 0x40
0x46b MLOAD
0x46c DUP1
0x46d DUP4
0x46e SUB
0x46f DUP2
0x470 DUP6
0x471 DUP8
0x472 PUSH2 0x8796
0x475 GAS
0x476 SUB
0x477 CALL
0x478 SWAP3
0x479 POP
0x47a POP
0x47b POP
0x47c POP
0x47d POP
0x47e POP
0x47f POP
0x480 JUMP
---
0x462: JUMPDEST 
0x467: V236 = 0x0
0x469: V237 = 0x40
0x46b: V238 = M[0x40]
0x46e: V239 = SUB S1 V238
0x472: V240 = 0x8796
0x475: V241 = GAS
0x476: V242 = SUB V241 0x8796
0x477: V243 = CALL V242 V203 V69 V238 V239 V238 0x0
0x480: JUMP 0x12a
---
Entry stack: [V11, 0x12a, V45, V63, V69, V203, V69, V63, V205, S1, V221]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x481
[0x481:0x4dd]
---
Predecessors: [0x12c]
Successors: [0x4de, 0x4e2]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 DUP1
0x485 PUSH1 0x0
0x487 DUP1
0x488 CALLER
0x489 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49e AND
0x49f PUSH1 0x0
0x4a1 DUP1
0x4a2 SWAP1
0x4a3 SLOAD
0x4a4 SWAP1
0x4a5 PUSH2 0x100
0x4a8 EXP
0x4a9 SWAP1
0x4aa DIV
0x4ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c0 AND
0x4c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d6 AND
0x4d7 EQ
0x4d8 ISZERO
0x4d9 ISZERO
0x4da PUSH2 0x4e2
0x4dd JUMPI
---
0x481: JUMPDEST 
0x482: V244 = 0x0
0x485: V245 = 0x0
0x488: V246 = CALLER
0x489: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x49f: V249 = 0x0
0x4a3: V250 = S[0x0]
0x4a5: V251 = 0x100
0x4a8: V252 = EXP 0x100 0x0
0x4aa: V253 = DIV V250 0x1
0x4ab: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x4c1: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x4d7: V258 = EQ V257 V248
0x4d8: V259 = ISZERO V258
0x4d9: V260 = ISZERO V259
0x4da: V261 = 0x4e2
0x4dd: JUMPI 0x4e2 V260
---
Entry stack: [V11, 0x158, V77]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x158, V77, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4de
[0x4de:0x4e1]
---
Predecessors: [0x481]
Successors: []
---
0x4de PUSH1 0x0
0x4e0 DUP1
0x4e1 REVERT
---
0x4de: V262 = 0x0
0x4e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x158, V77, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x158, V77, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x4e2
[0x4e2:0x691]
---
Predecessors: [0x481]
Successors: [0x692, 0x693]
---
0x4e2 JUMPDEST
0x4e3 ADDRESS
0x4e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f9 AND
0x4fa BALANCE
0x4fb SWAP4
0x4fc POP
0x4fd DUP5
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 CALLVALUE
0x515 PUSH1 0x40
0x517 MLOAD
0x518 DUP1
0x519 DUP1
0x51a PUSH32 0x696e697428290000000000000000000000000000000000000000000000000000
0x53b DUP2
0x53c MSTORE
0x53d POP
0x53e PUSH1 0x6
0x540 ADD
0x541 SWAP1
0x542 POP
0x543 PUSH1 0x40
0x545 MLOAD
0x546 DUP1
0x547 SWAP2
0x548 SUB
0x549 SWAP1
0x54a SHA3
0x54b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x569 SWAP1
0x56a DIV
0x56b SWAP1
0x56c PUSH1 0x40
0x56e MLOAD
0x56f DUP3
0x570 PUSH4 0xffffffff
0x575 AND
0x576 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x594 MUL
0x595 DUP2
0x596 MSTORE
0x597 PUSH1 0x4
0x599 ADD
0x59a PUSH1 0x0
0x59c PUSH1 0x40
0x59e MLOAD
0x59f DUP1
0x5a0 DUP4
0x5a1 SUB
0x5a2 DUP2
0x5a3 DUP6
0x5a4 DUP9
0x5a5 PUSH2 0x8796
0x5a8 GAS
0x5a9 SUB
0x5aa CALL
0x5ab SWAP4
0x5ac POP
0x5ad POP
0x5ae POP
0x5af POP
0x5b0 POP
0x5b1 DUP5
0x5b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c7 AND
0x5c8 PUSH1 0x40
0x5ca MLOAD
0x5cb DUP1
0x5cc DUP1
0x5cd PUSH32 0x73657452656c656173652875696e743235362900000000000000000000000000
0x5ee DUP2
0x5ef MSTORE
0x5f0 POP
0x5f1 PUSH1 0x13
0x5f3 ADD
0x5f4 SWAP1
0x5f5 POP
0x5f6 PUSH1 0x40
0x5f8 MLOAD
0x5f9 DUP1
0x5fa SWAP2
0x5fb SUB
0x5fc SWAP1
0x5fd SHA3
0x5fe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x61c SWAP1
0x61d DIV
0x61e PUSH1 0x1
0x620 PUSH1 0x40
0x622 MLOAD
0x623 DUP3
0x624 PUSH4 0xffffffff
0x629 AND
0x62a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x648 MUL
0x649 DUP2
0x64a MSTORE
0x64b PUSH1 0x4
0x64d ADD
0x64e DUP1
0x64f DUP3
0x650 PUSH1 0xff
0x652 AND
0x653 DUP2
0x654 MSTORE
0x655 PUSH1 0x20
0x657 ADD
0x658 SWAP2
0x659 POP
0x65a POP
0x65b PUSH1 0x0
0x65d PUSH1 0x40
0x65f MLOAD
0x660 DUP1
0x661 DUP4
0x662 SUB
0x663 DUP2
0x664 PUSH1 0x0
0x666 DUP8
0x667 PUSH2 0x646e
0x66a GAS
0x66b SUB
0x66c CALL
0x66d SWAP3
0x66e POP
0x66f POP
0x670 POP
0x671 POP
0x672 CALLVALUE
0x673 DUP6
0x674 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x689 AND
0x68a BALANCE
0x68b DUP2
0x68c ISZERO
0x68d ISZERO
0x68e PUSH2 0x693
0x691 JUMPI
---
0x4e2: JUMPDEST 
0x4e3: V263 = ADDRESS
0x4e4: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x4fa: V266 = BALANCE V265
0x4fe: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x514: V269 = CALLVALUE
0x515: V270 = 0x40
0x517: V271 = M[0x40]
0x51a: V272 = 0x696e697428290000000000000000000000000000000000000000000000000000
0x53c: M[V271] = 0x696e697428290000000000000000000000000000000000000000000000000000
0x53e: V273 = 0x6
0x540: V274 = ADD 0x6 V271
0x543: V275 = 0x40
0x545: V276 = M[0x40]
0x548: V277 = SUB V274 V276
0x54a: V278 = SHA3 V276 V277
0x54b: V279 = 0x100000000000000000000000000000000000000000000000000000000
0x56a: V280 = DIV V278 0x100000000000000000000000000000000000000000000000000000000
0x56c: V281 = 0x40
0x56e: V282 = M[0x40]
0x570: V283 = 0xffffffff
0x575: V284 = AND 0xffffffff V280
0x576: V285 = 0x100000000000000000000000000000000000000000000000000000000
0x594: V286 = MUL 0x100000000000000000000000000000000000000000000000000000000 V284
0x596: M[V282] = V286
0x597: V287 = 0x4
0x599: V288 = ADD 0x4 V282
0x59a: V289 = 0x0
0x59c: V290 = 0x40
0x59e: V291 = M[0x40]
0x5a1: V292 = SUB V288 V291
0x5a5: V293 = 0x8796
0x5a8: V294 = GAS
0x5a9: V295 = SUB V294 0x8796
0x5aa: V296 = CALL V295 V268 V269 V291 V292 V291 0x0
0x5b2: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x5c8: V299 = 0x40
0x5ca: V300 = M[0x40]
0x5cd: V301 = 0x73657452656c656173652875696e743235362900000000000000000000000000
0x5ef: M[V300] = 0x73657452656c656173652875696e743235362900000000000000000000000000
0x5f1: V302 = 0x13
0x5f3: V303 = ADD 0x13 V300
0x5f6: V304 = 0x40
0x5f8: V305 = M[0x40]
0x5fb: V306 = SUB V303 V305
0x5fd: V307 = SHA3 V305 V306
0x5fe: V308 = 0x100000000000000000000000000000000000000000000000000000000
0x61d: V309 = DIV V307 0x100000000000000000000000000000000000000000000000000000000
0x61e: V310 = 0x1
0x620: V311 = 0x40
0x622: V312 = M[0x40]
0x624: V313 = 0xffffffff
0x629: V314 = AND 0xffffffff V309
0x62a: V315 = 0x100000000000000000000000000000000000000000000000000000000
0x648: V316 = MUL 0x100000000000000000000000000000000000000000000000000000000 V314
0x64a: M[V312] = V316
0x64b: V317 = 0x4
0x64d: V318 = ADD 0x4 V312
0x650: V319 = 0xff
0x652: V320 = AND 0xff 0x1
0x654: M[V318] = 0x1
0x655: V321 = 0x20
0x657: V322 = ADD 0x20 V318
0x65b: V323 = 0x0
0x65d: V324 = 0x40
0x65f: V325 = M[0x40]
0x662: V326 = SUB V322 V325
0x664: V327 = 0x0
0x667: V328 = 0x646e
0x66a: V329 = GAS
0x66b: V330 = SUB V329 0x646e
0x66c: V331 = CALL V330 V298 0x0 V325 V326 V325 0x0
0x672: V332 = CALLVALUE
0x674: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x689: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x68a: V335 = BALANCE V334
0x68c: V336 = ISZERO V332
0x68d: V337 = ISZERO V336
0x68e: V338 = 0x693
0x691: JUMPI 0x693 V337
---
Entry stack: [V11, 0x158, V77, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, V266, S2, S1, S0, V332, V335]
Exit stack: [V11, 0x158, V77, V266, 0x0, 0x0, 0x0, V332, V335]

================================

Block 0x692
[0x692:0x692]
---
Predecessors: [0x4e2]
Successors: []
---
0x692 INVALID
---
0x692: INVALID 
---
Entry stack: [V11, 0x158, V77, V266, 0x0, 0x0, 0x0, V332, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x158, V77, V266, 0x0, 0x0, 0x0, V332, V335]

================================

Block 0x693
[0x693:0x6b8]
---
Predecessors: [0x4e2]
Successors: [0x6b9]
---
0x693 JUMPDEST
0x694 DIV
0x695 SWAP3
0x696 POP
0x697 DUP3
0x698 CALLVALUE
0x699 MUL
0x69a DUP6
0x69b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b0 AND
0x6b1 BALANCE
0x6b2 SUB
0x6b3 SWAP2
0x6b4 POP
0x6b5 PUSH1 0x0
0x6b7 SWAP1
0x6b8 POP
---
0x693: JUMPDEST 
0x694: V339 = DIV V335 V332
0x698: V340 = CALLVALUE
0x699: V341 = MUL V340 V339
0x69b: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b0: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x6b1: V344 = BALANCE V343
0x6b2: V345 = SUB V344 V341
0x6b5: V346 = 0x0
---
Entry stack: [V11, 0x158, V77, V266, 0x0, 0x0, 0x0, V332, V335]
Stack pops: 7
Stack additions: [S6, S5, V339, V345, 0x0]
Exit stack: [V11, 0x158, V77, V266, V339, V345, 0x0]

================================

Block 0x6b9
[0x6b9:0x6c1]
---
Predecessors: [0x693, 0x788]
Successors: [0x6c2, 0x795]
---
0x6b9 JUMPDEST
0x6ba DUP3
0x6bb DUP2
0x6bc LT
0x6bd ISZERO
0x6be PUSH2 0x795
0x6c1 JUMPI
---
0x6b9: JUMPDEST 
0x6bc: V347 = LT S0 V339
0x6bd: V348 = ISZERO V347
0x6be: V349 = 0x795
0x6c1: JUMPI 0x795 V348
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x158, V77, V266, V339, V345, S0]

================================

Block 0x6c2
[0x6c2:0x783]
---
Predecessors: [0x6b9]
Successors: [0x784, 0x788]
---
0x6c2 DUP5
0x6c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d8 AND
0x6d9 PUSH1 0x40
0x6db MLOAD
0x6dc DUP1
0x6dd DUP1
0x6de PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x6ff DUP2
0x700 MSTORE
0x701 POP
0x702 PUSH1 0x11
0x704 ADD
0x705 SWAP1
0x706 POP
0x707 PUSH1 0x40
0x709 MLOAD
0x70a DUP1
0x70b SWAP2
0x70c SUB
0x70d SWAP1
0x70e SHA3
0x70f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x72d SWAP1
0x72e DIV
0x72f CALLVALUE
0x730 PUSH1 0x40
0x732 MLOAD
0x733 DUP3
0x734 PUSH4 0xffffffff
0x739 AND
0x73a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x758 MUL
0x759 DUP2
0x75a MSTORE
0x75b PUSH1 0x4
0x75d ADD
0x75e DUP1
0x75f DUP3
0x760 DUP2
0x761 MSTORE
0x762 PUSH1 0x20
0x764 ADD
0x765 SWAP2
0x766 POP
0x767 POP
0x768 PUSH1 0x0
0x76a PUSH1 0x40
0x76c MLOAD
0x76d DUP1
0x76e DUP4
0x76f SUB
0x770 DUP2
0x771 PUSH1 0x0
0x773 DUP8
0x774 PUSH2 0x646e
0x777 GAS
0x778 SUB
0x779 CALL
0x77a SWAP3
0x77b POP
0x77c POP
0x77d POP
0x77e ISZERO
0x77f ISZERO
0x780 PUSH2 0x788
0x783 JUMPI
---
0x6c3: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d8: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x6d9: V352 = 0x40
0x6db: V353 = M[0x40]
0x6de: V354 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x700: M[V353] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x702: V355 = 0x11
0x704: V356 = ADD 0x11 V353
0x707: V357 = 0x40
0x709: V358 = M[0x40]
0x70c: V359 = SUB V356 V358
0x70e: V360 = SHA3 V358 V359
0x70f: V361 = 0x100000000000000000000000000000000000000000000000000000000
0x72e: V362 = DIV V360 0x100000000000000000000000000000000000000000000000000000000
0x72f: V363 = CALLVALUE
0x730: V364 = 0x40
0x732: V365 = M[0x40]
0x734: V366 = 0xffffffff
0x739: V367 = AND 0xffffffff V362
0x73a: V368 = 0x100000000000000000000000000000000000000000000000000000000
0x758: V369 = MUL 0x100000000000000000000000000000000000000000000000000000000 V367
0x75a: M[V365] = V369
0x75b: V370 = 0x4
0x75d: V371 = ADD 0x4 V365
0x761: M[V371] = V363
0x762: V372 = 0x20
0x764: V373 = ADD 0x20 V371
0x768: V374 = 0x0
0x76a: V375 = 0x40
0x76c: V376 = M[0x40]
0x76f: V377 = SUB V373 V376
0x771: V378 = 0x0
0x774: V379 = 0x646e
0x777: V380 = GAS
0x778: V381 = SUB V380 0x646e
0x779: V382 = CALL V381 V351 0x0 V376 V377 V376 0x0
0x77e: V383 = ISZERO V382
0x77f: V384 = ISZERO V383
0x780: V385 = 0x788
0x783: JUMPI 0x788 V384
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x158, V77, V266, V339, V345, S0]

================================

Block 0x784
[0x784:0x787]
---
Predecessors: [0x6c2]
Successors: []
---
0x784 PUSH1 0x0
0x786 DUP1
0x787 REVERT
---
0x784: V386 = 0x0
0x787: REVERT 0x0 0x0
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x158, V77, V266, V339, V345, S0]

================================

Block 0x788
[0x788:0x794]
---
Predecessors: [0x6c2]
Successors: [0x6b9]
---
0x788 JUMPDEST
0x789 DUP1
0x78a DUP1
0x78b PUSH1 0x1
0x78d ADD
0x78e SWAP2
0x78f POP
0x790 POP
0x791 PUSH2 0x6b9
0x794 JUMP
---
0x788: JUMPDEST 
0x78b: V387 = 0x1
0x78d: V388 = ADD 0x1 S0
0x791: V389 = 0x6b9
0x794: JUMP 0x6b9
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 1
Stack additions: [V388]
Exit stack: [V11, 0x158, V77, V266, V339, V345, V388]

================================

Block 0x795
[0x795:0x872]
---
Predecessors: [0x6b9]
Successors: [0x873, 0x877]
---
0x795 JUMPDEST
0x796 DUP5
0x797 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ac AND
0x7ad PUSH1 0x40
0x7af MLOAD
0x7b0 DUP1
0x7b1 DUP1
0x7b2 PUSH32 0x77697468647261772875696e7432353629000000000000000000000000000000
0x7d3 DUP2
0x7d4 MSTORE
0x7d5 POP
0x7d6 PUSH1 0x11
0x7d8 ADD
0x7d9 SWAP1
0x7da POP
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de DUP1
0x7df SWAP2
0x7e0 SUB
0x7e1 SWAP1
0x7e2 SHA3
0x7e3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x801 SWAP1
0x802 DIV
0x803 DUP4
0x804 PUSH1 0x40
0x806 MLOAD
0x807 DUP3
0x808 PUSH4 0xffffffff
0x80d AND
0x80e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x82c MUL
0x82d DUP2
0x82e MSTORE
0x82f PUSH1 0x4
0x831 ADD
0x832 DUP1
0x833 DUP3
0x834 DUP2
0x835 MSTORE
0x836 PUSH1 0x20
0x838 ADD
0x839 SWAP2
0x83a POP
0x83b POP
0x83c PUSH1 0x0
0x83e PUSH1 0x40
0x840 MLOAD
0x841 DUP1
0x842 DUP4
0x843 SUB
0x844 DUP2
0x845 PUSH1 0x0
0x847 DUP8
0x848 PUSH2 0x646e
0x84b GAS
0x84c SUB
0x84d CALL
0x84e SWAP3
0x84f POP
0x850 POP
0x851 POP
0x852 POP
0x853 DUP4
0x854 ADDRESS
0x855 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86a AND
0x86b BALANCE
0x86c GT
0x86d ISZERO
0x86e ISZERO
0x86f PUSH2 0x877
0x872 JUMPI
---
0x795: JUMPDEST 
0x797: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ac: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x7ad: V392 = 0x40
0x7af: V393 = M[0x40]
0x7b2: V394 = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x7d4: M[V393] = 0x77697468647261772875696e7432353629000000000000000000000000000000
0x7d6: V395 = 0x11
0x7d8: V396 = ADD 0x11 V393
0x7db: V397 = 0x40
0x7dd: V398 = M[0x40]
0x7e0: V399 = SUB V396 V398
0x7e2: V400 = SHA3 V398 V399
0x7e3: V401 = 0x100000000000000000000000000000000000000000000000000000000
0x802: V402 = DIV V400 0x100000000000000000000000000000000000000000000000000000000
0x804: V403 = 0x40
0x806: V404 = M[0x40]
0x808: V405 = 0xffffffff
0x80d: V406 = AND 0xffffffff V402
0x80e: V407 = 0x100000000000000000000000000000000000000000000000000000000
0x82c: V408 = MUL 0x100000000000000000000000000000000000000000000000000000000 V406
0x82e: M[V404] = V408
0x82f: V409 = 0x4
0x831: V410 = ADD 0x4 V404
0x835: M[V410] = V345
0x836: V411 = 0x20
0x838: V412 = ADD 0x20 V410
0x83c: V413 = 0x0
0x83e: V414 = 0x40
0x840: V415 = M[0x40]
0x843: V416 = SUB V412 V415
0x845: V417 = 0x0
0x848: V418 = 0x646e
0x84b: V419 = GAS
0x84c: V420 = SUB V419 0x646e
0x84d: V421 = CALL V420 V391 0x0 V415 V416 V415 0x0
0x854: V422 = ADDRESS
0x855: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x86a: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x86b: V425 = BALANCE V424
0x86c: V426 = GT V425 V266
0x86d: V427 = ISZERO V426
0x86e: V428 = ISZERO V427
0x86f: V429 = 0x877
0x872: JUMPI 0x877 V428
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x158, V77, V266, V339, V345, S0]

================================

Block 0x873
[0x873:0x876]
---
Predecessors: [0x795]
Successors: []
---
0x873 PUSH1 0x0
0x875 DUP1
0x876 REVERT
---
0x873: V430 = 0x0
0x876: REVERT 0x0 0x0
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x158, V77, V266, V339, V345, S0]

================================

Block 0x877
[0x877:0x8ea]
---
Predecessors: [0x795]
Successors: [0x8eb, 0x8ef]
---
0x877 JUMPDEST
0x878 PUSH1 0x0
0x87a DUP1
0x87b SWAP1
0x87c SLOAD
0x87d SWAP1
0x87e PUSH2 0x100
0x881 EXP
0x882 SWAP1
0x883 DIV
0x884 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x899 AND
0x89a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8af AND
0x8b0 PUSH2 0x8fc
0x8b3 ADDRESS
0x8b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c9 AND
0x8ca BALANCE
0x8cb SWAP1
0x8cc DUP2
0x8cd ISZERO
0x8ce MUL
0x8cf SWAP1
0x8d0 PUSH1 0x40
0x8d2 MLOAD
0x8d3 PUSH1 0x0
0x8d5 PUSH1 0x40
0x8d7 MLOAD
0x8d8 DUP1
0x8d9 DUP4
0x8da SUB
0x8db DUP2
0x8dc DUP6
0x8dd DUP9
0x8de DUP9
0x8df CALL
0x8e0 SWAP4
0x8e1 POP
0x8e2 POP
0x8e3 POP
0x8e4 POP
0x8e5 ISZERO
0x8e6 ISZERO
0x8e7 PUSH2 0x8ef
0x8ea JUMPI
---
0x877: JUMPDEST 
0x878: V431 = 0x0
0x87c: V432 = S[0x0]
0x87e: V433 = 0x100
0x881: V434 = EXP 0x100 0x0
0x883: V435 = DIV V432 0x1
0x884: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x899: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x89a: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x8af: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x8b0: V440 = 0x8fc
0x8b3: V441 = ADDRESS
0x8b4: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c9: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x8ca: V444 = BALANCE V443
0x8cd: V445 = ISZERO V444
0x8ce: V446 = MUL V445 0x8fc
0x8d0: V447 = 0x40
0x8d2: V448 = M[0x40]
0x8d3: V449 = 0x0
0x8d5: V450 = 0x40
0x8d7: V451 = M[0x40]
0x8da: V452 = SUB V448 V451
0x8df: V453 = CALL V446 V439 V444 V451 V452 V451 0x0
0x8e5: V454 = ISZERO V453
0x8e6: V455 = ISZERO V454
0x8e7: V456 = 0x8ef
0x8ea: JUMPI 0x8ef V455
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x158, V77, V266, V339, V345, S0]

================================

Block 0x8eb
[0x8eb:0x8ee]
---
Predecessors: [0x877]
Successors: []
---
0x8eb PUSH1 0x0
0x8ed DUP1
0x8ee REVERT
---
0x8eb: V457 = 0x0
0x8ee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x158, V77, V266, V339, V345, S0]

================================

Block 0x8ef
[0x8ef:0x8f5]
---
Predecessors: [0x877]
Successors: [0x158]
---
0x8ef JUMPDEST
0x8f0 POP
0x8f1 POP
0x8f2 POP
0x8f3 POP
0x8f4 POP
0x8f5 JUMP
---
0x8ef: JUMPDEST 
0x8f5: JUMP 0x158
---
Entry stack: [V11, 0x158, V77, V266, V339, V345, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f6
[0x8f6:0x91a]
---
Predecessors: [0x165]
Successors: [0x16d]
---
0x8f6 JUMPDEST
0x8f7 PUSH1 0x0
0x8f9 DUP1
0x8fa SWAP1
0x8fb SLOAD
0x8fc SWAP1
0x8fd PUSH2 0x100
0x900 EXP
0x901 SWAP1
0x902 DIV
0x903 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x918 AND
0x919 DUP2
0x91a JUMP
---
0x8f6: JUMPDEST 
0x8f7: V458 = 0x0
0x8fb: V459 = S[0x0]
0x8fd: V460 = 0x100
0x900: V461 = EXP 0x100 0x0
0x902: V462 = DIV V459 0x1
0x903: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x918: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x91a: JUMP 0x16d
---
Entry stack: [V11, 0x16d]
Stack pops: 1
Stack additions: [S0, V464]
Exit stack: [V11, 0x16d, V464]

================================

Block 0x91b
[0x91b:0x927]
---
Predecessors: []
Successors: [0x928]
Has unresolved jump.
---
0x91b STOP
0x91c LOG1
0x91d PUSH6 0x627a7a723058
0x924 SHA3
0x925 MISSING 0xe5
0x926 GAS
0x927 JUMPI
---
0x91b: STOP 
0x91c: LOG S0 S1 S2
0x91d: V465 = 0x627a7a723058
0x924: V466 = SHA3 0x627a7a723058 S3
0x925: MISSING 0xe5
0x926: V467 = GAS
0x927: JUMPI V467 S0
---
Entry stack: []
Stack pops: 0
Stack additions: [V466]
Exit stack: []

================================

Block 0x928
[0x928:0x946]
---
Predecessors: [0x91b]
Successors: []
---
0x928 SWAP2
0x929 MISSING 0xa9
0x92a MULMOD
0x92b DUP1
0x92c MISSING 0x2a
0x92d LOG3
0x92e MISSING 0xb4
0x92f MISSING 0x2a
0x930 GAS
0x931 PUSH4 0x4a92084e
0x936 LOG3
0x937 MISSING 0x2c
0x938 PUSH11 0x5fe2364f5c84e02805ea9
0x944 DUP7
0x945 STOP
0x946 MISSING 0x29
---
0x929: MISSING 0xa9
0x92a: V468 = MULMOD S0 S1 S2
0x92c: MISSING 0x2a
0x92d: LOG S0 S1 S2 S3 S4
0x92e: MISSING 0xb4
0x92f: MISSING 0x2a
0x930: V469 = GAS
0x931: V470 = 0x4a92084e
0x936: LOG 0x4a92084e V469 S0 S1 S2
0x937: MISSING 0x2c
0x938: V471 = 0x5fe2364f5c84e02805ea9
0x945: STOP 
0x946: MISSING 0x29
---
Entry stack: []
Stack pops: 56
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x121f88bf
Entry block: 0x6f
Exit block: 0xa6
Body: 0x6f, 0x76, 0x7a, 0xa6, 0x1af

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xa8
Exit block: 0xb0
Body: 0xa8, 0xb0, 0x31a, 0x38e, 0x392

Function 2:
Public function signature: 0x5bd74afe
Entry block: 0xb2
Exit block: 0x12a
Body: 0xb2, 0x12a, 0x394, 0x3eb, 0x3ef, 0x41a, 0x423, 0x435, 0x449, 0x462

Function 3:
Public function signature: 0xa2b2cad2
Entry block: 0x12c
Exit block: 0x158
Body: 0x12c, 0x158, 0x481, 0x4de, 0x4e2, 0x692, 0x693, 0x6b9, 0x6c2, 0x784, 0x788, 0x795, 0x873, 0x877, 0x8eb, 0x8ef

Function 4:
Public function signature: 0xb4a99a4e
Entry block: 0x15a
Exit block: 0x16d
Body: 0x15a, 0x161, 0x165, 0x16d, 0x8f6

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

