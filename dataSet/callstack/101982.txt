Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb3]
---
0x41 DUP1
0x42 PUSH4 0xaafafbf3
0x47 EQ
0x48 PUSH2 0xb3
0x4b JUMPI
---
0x42: V15 = 0xaafafbf3
0x47: V16 = EQ 0xaafafbf3 V11
0x48: V17 = 0xb3
0x4b: JUMPI 0xb3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x10c]
---
0x4c DUP1
0x4d PUSH4 0xcf7a8965
0x52 EQ
0x53 PUSH2 0x10c
0x56 JUMPI
---
0x4d: V18 = 0xcf7a8965
0x52: V19 = EQ 0xcf7a8965 V11
0x53: V20 = 0x10c
0x56: JUMPI 0x10c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x123]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x123
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x123
0x70: JUMP 0x123
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0xb2]
---
Predecessors: [0x123]
Successors: []
---
0x71 JUMPDEST
0x72 PUSH1 0x40
0x74 MLOAD
0x75 DUP1
0x76 DUP3
0x77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c AND
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 DUP2
0xa4 MSTORE
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP2
0xa9 POP
0xaa POP
0xab PUSH1 0x40
0xad MLOAD
0xae DUP1
0xaf SWAP2
0xb0 SUB
0xb1 SWAP1
0xb2 RETURN
---
0x71: JUMPDEST 
0x72: V28 = 0x40
0x74: V29 = M[0x40]
0x77: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x8d: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa4: M[V29] = V33
0xa5: V34 = 0x20
0xa7: V35 = ADD 0x20 V29
0xab: V36 = 0x40
0xad: V37 = M[0x40]
0xb0: V38 = SUB V35 V37
0xb2: RETURN V37 V38
---
Entry stack: [V11, 0x71, V77]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0xb3
[0xb3:0x109]
---
Predecessors: [0x41]
Successors: [0x148]
---
0xb3 JUMPDEST
0xb4 PUSH2 0x10a
0xb7 PUSH1 0x4
0xb9 DUP1
0xba CALLDATASIZE
0xbb SUB
0xbc DUP2
0xbd ADD
0xbe SWAP1
0xbf DUP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 SWAP1
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP1
0xc7 DUP3
0xc8 ADD
0xc9 DUP1
0xca CALLDATALOAD
0xcb SWAP1
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP1
0xd0 DUP1
0xd1 DUP1
0xd2 PUSH1 0x20
0xd4 MUL
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 PUSH1 0x40
0xda MLOAD
0xdb SWAP1
0xdc DUP2
0xdd ADD
0xde PUSH1 0x40
0xe0 MSTORE
0xe1 DUP1
0xe2 SWAP4
0xe3 SWAP3
0xe4 SWAP2
0xe5 SWAP1
0xe6 DUP2
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec DUP4
0xed DUP4
0xee PUSH1 0x20
0xf0 MUL
0xf1 DUP1
0xf2 DUP3
0xf3 DUP5
0xf4 CALLDATACOPY
0xf5 DUP3
0xf6 ADD
0xf7 SWAP2
0xf8 POP
0xf9 POP
0xfa POP
0xfb POP
0xfc POP
0xfd POP
0xfe SWAP2
0xff SWAP3
0x100 SWAP2
0x101 SWAP3
0x102 SWAP1
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH2 0x148
0x109 JUMP
---
0xb3: JUMPDEST 
0xb4: V39 = 0x10a
0xb7: V40 = 0x4
0xba: V41 = CALLDATASIZE
0xbb: V42 = SUB V41 0x4
0xbd: V43 = ADD 0x4 V42
0xc1: V44 = CALLDATALOAD 0x4
0xc3: V45 = 0x20
0xc5: V46 = ADD 0x20 0x4
0xc8: V47 = ADD 0x4 V44
0xca: V48 = CALLDATALOAD V47
0xcc: V49 = 0x20
0xce: V50 = ADD 0x20 V47
0xd2: V51 = 0x20
0xd4: V52 = MUL 0x20 V48
0xd5: V53 = 0x20
0xd7: V54 = ADD 0x20 V52
0xd8: V55 = 0x40
0xda: V56 = M[0x40]
0xdd: V57 = ADD V56 V54
0xde: V58 = 0x40
0xe0: M[0x40] = V57
0xe8: M[V56] = V48
0xe9: V59 = 0x20
0xeb: V60 = ADD 0x20 V56
0xee: V61 = 0x20
0xf0: V62 = MUL 0x20 V48
0xf4: CALLDATACOPY V60 V50 V62
0xf6: V63 = ADD V60 V62
0x106: V64 = 0x148
0x109: JUMP 0x148
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10a, V56]
Exit stack: [V11, 0x10a, V56]

================================

Block 0x10a
[0x10a:0x10b]
---
Predecessors: [0x256]
Successors: []
---
0x10a JUMPDEST
0x10b STOP
---
0x10a: JUMPDEST 
0x10b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x4c]
Successors: [0x114, 0x118]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e DUP1
0x10f ISZERO
0x110 PUSH2 0x118
0x113 JUMPI
---
0x10c: JUMPDEST 
0x10d: V65 = CALLVALUE
0x10f: V66 = ISZERO V65
0x110: V67 = 0x118
0x113: JUMPI 0x118 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V65]
Exit stack: [V11, V65]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0x10c]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V68 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V11, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65]

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0x10c]
Successors: [0x25a]
---
0x118 JUMPDEST
0x119 POP
0x11a PUSH2 0x121
0x11d PUSH2 0x25a
0x120 JUMP
---
0x118: JUMPDEST 
0x11a: V69 = 0x121
0x11d: V70 = 0x25a
0x120: JUMP 0x25a
---
Entry stack: [V11, V65]
Stack pops: 1
Stack additions: [0x121]
Exit stack: [V11, 0x121]

================================

Block 0x121
[0x121:0x122]
---
Predecessors: [0x25a]
Successors: []
---
0x121 JUMPDEST
0x122 STOP
---
0x121: JUMPDEST 
0x122: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x123
[0x123:0x147]
---
Predecessors: [0x68]
Successors: [0x71]
---
0x123 JUMPDEST
0x124 PUSH1 0x0
0x126 DUP1
0x127 SWAP1
0x128 SLOAD
0x129 SWAP1
0x12a PUSH2 0x100
0x12d EXP
0x12e SWAP1
0x12f DIV
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 DUP2
0x147 JUMP
---
0x123: JUMPDEST 
0x124: V71 = 0x0
0x128: V72 = S[0x0]
0x12a: V73 = 0x100
0x12d: V74 = EXP 0x100 0x0
0x12f: V75 = DIV V72 0x1
0x130: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x147: JUMP 0x71
---
Entry stack: [V11, 0x71]
Stack pops: 1
Stack additions: [S0, V77]
Exit stack: [V11, 0x71, V77]

================================

Block 0x148
[0x148:0x156]
---
Predecessors: [0xb3]
Successors: [0x157, 0x256]
---
0x148 JUMPDEST
0x149 PUSH1 0x0
0x14b DUP1
0x14c SWAP1
0x14d POP
0x14e DUP2
0x14f MLOAD
0x150 DUP2
0x151 LT
0x152 ISZERO
0x153 PUSH2 0x256
0x156 JUMPI
---
0x148: JUMPDEST 
0x149: V78 = 0x0
0x14f: V79 = M[V56]
0x151: V80 = LT 0x0 V79
0x152: V81 = ISZERO V80
0x153: V82 = 0x256
0x156: JUMPI 0x256 V81
---
Entry stack: [V11, 0x10a, V56]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x10a, V56, 0x0]

================================

Block 0x157
[0x157:0x232]
---
Predecessors: [0x148]
Successors: [0x233, 0x234]
---
0x157 PUSH1 0x1
0x159 PUSH1 0x0
0x15b SWAP1
0x15c SLOAD
0x15d SWAP1
0x15e PUSH2 0x100
0x161 EXP
0x162 SWAP1
0x163 DIV
0x164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x179 AND
0x17a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f AND
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 DUP1
0x195 PUSH32 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 POP
0x1b9 PUSH1 0xb
0x1bb ADD
0x1bc SWAP1
0x1bd POP
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 SHA3
0x1c6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1e4 SWAP1
0x1e5 DIV
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP2
0x1ea PUSH4 0xffffffff
0x1ef AND
0x1f0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x20e MUL
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x4
0x213 ADD
0x214 PUSH1 0x0
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a DUP4
0x21b SUB
0x21c DUP2
0x21d PUSH1 0x0
0x21f DUP8
0x220 GAS
0x221 CALL
0x222 SWAP3
0x223 POP
0x224 POP
0x225 POP
0x226 POP
0x227 DUP2
0x228 DUP2
0x229 DUP2
0x22a MLOAD
0x22b DUP2
0x22c LT
0x22d ISZERO
0x22e ISZERO
0x22f PUSH2 0x234
0x232 JUMPI
---
0x157: V83 = 0x1
0x159: V84 = 0x0
0x15c: V85 = S[0x1]
0x15e: V86 = 0x100
0x161: V87 = EXP 0x100 0x0
0x163: V88 = DIV V85 0x1
0x164: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x179: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x17a: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x190: V93 = 0x40
0x192: V94 = M[0x40]
0x195: V95 = 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x1b7: M[V94] = 0x676574546f6b656e732829000000000000000000000000000000000000000000
0x1b9: V96 = 0xb
0x1bb: V97 = ADD 0xb V94
0x1be: V98 = 0x40
0x1c0: V99 = M[0x40]
0x1c3: V100 = SUB V97 V99
0x1c5: V101 = SHA3 V99 V100
0x1c6: V102 = 0x100000000000000000000000000000000000000000000000000000000
0x1e5: V103 = DIV V101 0x100000000000000000000000000000000000000000000000000000000
0x1e6: V104 = 0x40
0x1e8: V105 = M[0x40]
0x1ea: V106 = 0xffffffff
0x1ef: V107 = AND 0xffffffff V103
0x1f0: V108 = 0x100000000000000000000000000000000000000000000000000000000
0x20e: V109 = MUL 0x100000000000000000000000000000000000000000000000000000000 V107
0x210: M[V105] = V109
0x211: V110 = 0x4
0x213: V111 = ADD 0x4 V105
0x214: V112 = 0x0
0x216: V113 = 0x40
0x218: V114 = M[0x40]
0x21b: V115 = SUB V111 V114
0x21d: V116 = 0x0
0x220: V117 = GAS
0x221: V118 = CALL V117 V92 0x0 V114 V115 V114 0x0
0x22a: V119 = M[V56]
0x22c: V120 = LT 0x0 V119
0x22d: V121 = ISZERO V120
0x22e: V122 = ISZERO V121
0x22f: V123 = 0x234
0x232: JUMPI 0x234 V122
---
Entry stack: [V11, 0x10a, V56, 0x0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V11, 0x10a, V56, 0x0, V56, 0x0]

================================

Block 0x233
[0x233:0x233]
---
Predecessors: [0x157]
Successors: []
---
0x233 INVALID
---
0x233: INVALID 
---
Entry stack: [V11, 0x10a, V56, 0x0, V56, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, V56, 0x0, V56, 0x0]

================================

Block 0x234
[0x234:0x255]
---
Predecessors: [0x157]
Successors: []
---
0x234 JUMPDEST
0x235 SWAP1
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP1
0x23a PUSH1 0x20
0x23c MUL
0x23d ADD
0x23e MLOAD
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 SELFDESTRUCT
---
0x234: JUMPDEST 
0x236: V124 = 0x20
0x238: V125 = ADD 0x20 V56
0x23a: V126 = 0x20
0x23c: V127 = MUL 0x20 0x0
0x23d: V128 = ADD 0x0 V125
0x23e: V129 = M[V128]
0x23f: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x255: SELFDESTRUCT V131
---
Entry stack: [V11, 0x10a, V56, 0x0, V56, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x10a, V56, 0x0]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x148]
Successors: [0x10a]
---
0x256 JUMPDEST
0x257 POP
0x258 POP
0x259 JUMP
---
0x256: JUMPDEST 
0x259: JUMP 0x10a
---
Entry stack: [V11, 0x10a, V56, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x25a
[0x25a:0x2af]
---
Predecessors: [0x118]
Successors: [0x121]
---
0x25a JUMPDEST
0x25b PUSH20 0x63001660d8681842822fb3d0fb6dacfbcd5d03f8
0x270 PUSH1 0x0
0x272 DUP1
0x273 PUSH2 0x100
0x276 EXP
0x277 DUP2
0x278 SLOAD
0x279 DUP2
0x27a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28f MUL
0x290 NOT
0x291 AND
0x292 SWAP1
0x293 DUP4
0x294 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a9 AND
0x2aa MUL
0x2ab OR
0x2ac SWAP1
0x2ad SSTORE
0x2ae POP
0x2af JUMP
---
0x25a: JUMPDEST 
0x25b: V132 = 0x63001660d8681842822fb3d0fb6dacfbcd5d03f8
0x270: V133 = 0x0
0x273: V134 = 0x100
0x276: V135 = EXP 0x100 0x0
0x278: V136 = S[0x0]
0x27a: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V138 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x290: V139 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x291: V140 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V136
0x294: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x63001660d8681842822fb3d0fb6dacfbcd5d03f8
0x2aa: V143 = MUL 0x63001660d8681842822fb3d0fb6dacfbcd5d03f8 0x1
0x2ab: V144 = OR 0x63001660d8681842822fb3d0fb6dacfbcd5d03f8 V140
0x2ad: S[0x0] = V144
0x2af: JUMP 0x121
---
Entry stack: [V11, 0x121]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b0
[0x2b0:0x2e1]
---
Predecessors: []
Successors: []
---
0x2b0 STOP
0x2b1 LOG1
0x2b2 PUSH6 0x627a7a723058
0x2b9 SHA3
0x2ba MISSING 0xb2
0x2bb DUP9
0x2bc DIFFICULTY
0x2bd MISSING 0xb2
0x2be MISSING 0x2e
0x2bf MISSING 0xc
0x2c0 MISSING 0x1f
0x2c1 GAS
0x2c2 SWAP3
0x2c3 SWAP13
0x2c4 SWAP6
0x2c5 MISSING 0x4b
0x2c6 CALL
0x2c7 MISSING 0x28
0x2c8 SWAP13
0x2c9 MISSING 0xa8
0x2ca MISSING 0x26
0x2cb EXTCODESIZE
0x2cc MISSING 0xd9
0x2cd MISSING 0xba
0x2ce MISSING 0xb9
0x2cf RETURN
0x2d0 DUP6
0x2d1 MISSING 0xc6
0x2d2 MISSING 0xfc
0x2d3 MISSING 0x28
0x2d4 MISSING 0x4a
0x2d5 MISSING 0xf9
0x2d6 PUSH11 0xf9820d0029
---
0x2b0: STOP 
0x2b1: LOG S0 S1 S2
0x2b2: V145 = 0x627a7a723058
0x2b9: V146 = SHA3 0x627a7a723058 S3
0x2ba: MISSING 0xb2
0x2bc: V147 = DIFFICULTY
0x2bd: MISSING 0xb2
0x2be: MISSING 0x2e
0x2bf: MISSING 0xc
0x2c0: MISSING 0x1f
0x2c1: V148 = GAS
0x2c5: MISSING 0x4b
0x2c6: V149 = CALL S0 S1 S2 S3 S4 S5 S6
0x2c7: MISSING 0x28
0x2c9: MISSING 0xa8
0x2ca: MISSING 0x26
0x2cb: V150 = EXTCODESIZE S0
0x2cc: MISSING 0xd9
0x2cd: MISSING 0xba
0x2ce: MISSING 0xb9
0x2cf: RETURN S0 S1
0x2d1: MISSING 0xc6
0x2d2: MISSING 0xfc
0x2d3: MISSING 0x28
0x2d4: MISSING 0x4a
0x2d5: MISSING 0xf9
0x2d6: V151 = 0xf9820d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V146, V147, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, S5, S0, S1, V148, S3, S4, S12, S6, S7, S8, S9, S10, S11, S2, V149, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V150, S5, S0, S1, S2, S3, S4, S5, 0xf9820d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x123

Function 1:
Public function signature: 0xaafafbf3
Entry block: 0xb3
Exit block: 0x10a
Body: 0xb3, 0x10a, 0x148, 0x157, 0x233, 0x234, 0x256

Function 2:
Public function signature: 0xcf7a8965
Entry block: 0x10c
Exit block: 0x121
Body: 0x10c, 0x114, 0x118, 0x121, 0x25a

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

