Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xd997ccb3
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xd997ccb3
0x3c: V13 = EQ 0xd997ccb3 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x58]
---
0x41 DUP1
0x42 PUSH4 0xebc0b4dd
0x47 EQ
0x48 PUSH2 0x58
0x4b JUMPI
---
0x42: V15 = 0xebc0b4dd
0x47: V16 = EQ 0xebc0b4dd V11
0x48: V17 = 0x58
0x4b: JUMPI 0x58 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x55]
---
Predecessors: [0xd]
Successors: [0x86]
---
0x4e JUMPDEST
0x4f PUSH2 0x56
0x52 PUSH2 0x86
0x55 JUMP
---
0x4e: JUMPDEST 
0x4f: V18 = 0x56
0x52: V19 = 0x86
0x55: JUMP 0x86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0xff]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0x41]
Successors: [0x5f, 0x63]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a ISZERO
0x5b PUSH2 0x63
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V20 = CALLVALUE
0x5a: V21 = ISZERO V20
0x5b: V22 = 0x63
0x5e: JUMPI 0x63 V21
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x58]
Successors: []
---
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5f: V23 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x83]
---
Predecessors: [0x58]
Successors: [0x101]
---
0x63 JUMPDEST
0x64 PUSH2 0x84
0x67 PUSH1 0x4
0x69 DUP1
0x6a DUP1
0x6b CALLDATALOAD
0x6c SWAP1
0x6d PUSH1 0x20
0x6f ADD
0x70 SWAP1
0x71 DUP3
0x72 ADD
0x73 DUP1
0x74 CALLDATALOAD
0x75 SWAP1
0x76 PUSH1 0x20
0x78 ADD
0x79 SWAP2
0x7a SWAP1
0x7b SWAP2
0x7c SWAP3
0x7d SWAP1
0x7e POP
0x7f POP
0x80 PUSH2 0x101
0x83 JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x84
0x67: V25 = 0x4
0x6b: V26 = CALLDATALOAD 0x4
0x6d: V27 = 0x20
0x6f: V28 = ADD 0x20 0x4
0x72: V29 = ADD 0x4 V26
0x74: V30 = CALLDATALOAD V29
0x76: V31 = 0x20
0x78: V32 = ADD 0x20 V29
0x80: V33 = 0x101
0x83: JUMP 0x101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x84, V32, V30]
Exit stack: [V11, 0x84, V32, V30]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x26e]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0xfa]
---
Predecessors: [0x4e]
Successors: [0xfb, 0xff]
---
0x86 JUMPDEST
0x87 PUSH1 0x1
0x89 PUSH1 0x0
0x8b SWAP1
0x8c SLOAD
0x8d SWAP1
0x8e PUSH2 0x100
0x91 EXP
0x92 SWAP1
0x93 DIV
0x94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9 AND
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf AND
0xc0 PUSH2 0x8fc
0xc3 ADDRESS
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda BALANCE
0xdb SWAP1
0xdc DUP2
0xdd ISZERO
0xde MUL
0xdf SWAP1
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 PUSH1 0x0
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP4
0xea SUB
0xeb DUP2
0xec DUP6
0xed DUP9
0xee DUP9
0xef CALL
0xf0 SWAP4
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 ISZERO
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0x86: JUMPDEST 
0x87: V34 = 0x1
0x89: V35 = 0x0
0x8c: V36 = S[0x1]
0x8e: V37 = 0x100
0x91: V38 = EXP 0x100 0x0
0x93: V39 = DIV V36 0x1
0x94: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xaa: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xc0: V44 = 0x8fc
0xc3: V45 = ADDRESS
0xc4: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xda: V48 = BALANCE V47
0xdd: V49 = ISZERO V48
0xde: V50 = MUL V49 0x8fc
0xe0: V51 = 0x40
0xe2: V52 = M[0x40]
0xe3: V53 = 0x0
0xe5: V54 = 0x40
0xe7: V55 = M[0x40]
0xea: V56 = SUB V52 V55
0xef: V57 = CALL V50 V43 V48 V55 V56 V55 0x0
0xf5: V58 = ISZERO V57
0xf6: V59 = ISZERO V58
0xf7: V60 = 0xff
0xfa: JUMPI 0xff V59
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0x86]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V61 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0x86]
Successors: [0x56]
---
0xff JUMPDEST
0x100 JUMP
---
0xff: JUMPDEST 
0x100: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0x63]
Successors: [0x109]
---
0x101 JUMPDEST
0x102 PUSH1 0x0
0x104 DUP1
0x105 PUSH1 0x0
0x107 SWAP2
0x108 POP
---
0x101: JUMPDEST 
0x102: V62 = 0x0
0x105: V63 = 0x0
---
Entry stack: [V11, 0x84, V32, V30]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x84, V32, V30, 0x0, 0x0]

================================

Block 0x109
[0x109:0x114]
---
Predecessors: [0x101, 0x122]
Successors: [0x115, 0x217]
---
0x109 JUMPDEST
0x10a DUP4
0x10b DUP4
0x10c SWAP1
0x10d POP
0x10e DUP3
0x10f LT
0x110 ISZERO
0x111 PUSH2 0x217
0x114 JUMPI
---
0x109: JUMPDEST 
0x10f: V64 = LT S1 V30
0x110: V65 = ISZERO V64
0x111: V66 = 0x217
0x114: JUMPI 0x217 V65
---
Entry stack: [V11, 0x84, V32, V30, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x84, V32, V30, S1, S0]

================================

Block 0x115
[0x115:0x120]
---
Predecessors: [0x109]
Successors: [0x121, 0x122]
---
0x115 DUP4
0x116 DUP4
0x117 DUP4
0x118 DUP2
0x119 DUP2
0x11a LT
0x11b ISZERO
0x11c ISZERO
0x11d PUSH2 0x122
0x120 JUMPI
---
0x11a: V67 = LT S1 V30
0x11b: V68 = ISZERO V67
0x11c: V69 = ISZERO V68
0x11d: V70 = 0x122
0x120: JUMPI 0x122 V69
---
Entry stack: [V11, 0x84, V32, V30, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S2, S1]
Exit stack: [V11, 0x84, V32, V30, S1, S0, V32, V30, S1]

================================

Block 0x121
[0x121:0x121]
---
Predecessors: [0x115]
Successors: []
---
0x121 INVALID
---
0x121: INVALID 
---
Entry stack: [V11, 0x84, V32, V30, S4, S3, V32, V30, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V32, V30, S4, S3, V32, V30, S0]

================================

Block 0x122
[0x122:0x216]
---
Predecessors: [0x115]
Successors: [0x109]
---
0x122 JUMPDEST
0x123 SWAP1
0x124 POP
0x125 PUSH1 0x20
0x127 MUL
0x128 ADD
0x129 CALLDATALOAD
0x12a SWAP1
0x12b POP
0x12c PUSH1 0x5
0x12e PUSH1 0x0
0x130 SWAP1
0x131 SLOAD
0x132 SWAP1
0x133 PUSH2 0x100
0x136 EXP
0x137 SWAP1
0x138 DIV
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164 AND
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 DUP1
0x16a PUSH32 0x6769766542697274682875696e74323536290000000000000000000000000000
0x18b DUP2
0x18c MSTORE
0x18d POP
0x18e PUSH1 0x12
0x190 ADD
0x191 SWAP1
0x192 POP
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 SWAP2
0x198 SUB
0x199 SWAP1
0x19a SHA3
0x19b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1b9 SWAP1
0x1ba DIV
0x1bb DUP3
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP3
0x1c0 PUSH4 0xffffffff
0x1c5 AND
0x1c6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1e4 MUL
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x4
0x1e9 ADD
0x1ea DUP1
0x1eb DUP3
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP2
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x0
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 DUP1
0x1fa DUP4
0x1fb SUB
0x1fc DUP2
0x1fd PUSH1 0x0
0x1ff DUP8
0x200 PUSH2 0x646e
0x203 GAS
0x204 SUB
0x205 CALL
0x206 SWAP3
0x207 POP
0x208 POP
0x209 POP
0x20a POP
0x20b DUP2
0x20c DUP1
0x20d PUSH1 0x1
0x20f ADD
0x210 SWAP3
0x211 POP
0x212 POP
0x213 PUSH2 0x109
0x216 JUMP
---
0x122: JUMPDEST 
0x125: V71 = 0x20
0x127: V72 = MUL 0x20 S0
0x128: V73 = ADD V72 V32
0x129: V74 = CALLDATALOAD V73
0x12c: V75 = 0x5
0x12e: V76 = 0x0
0x131: V77 = S[0x5]
0x133: V78 = 0x100
0x136: V79 = EXP 0x100 0x0
0x138: V80 = DIV V77 0x1
0x139: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x14f: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x164: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x165: V85 = 0x40
0x167: V86 = M[0x40]
0x16a: V87 = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x18c: M[V86] = 0x6769766542697274682875696e74323536290000000000000000000000000000
0x18e: V88 = 0x12
0x190: V89 = ADD 0x12 V86
0x193: V90 = 0x40
0x195: V91 = M[0x40]
0x198: V92 = SUB V89 V91
0x19a: V93 = SHA3 V91 V92
0x19b: V94 = 0x100000000000000000000000000000000000000000000000000000000
0x1ba: V95 = DIV V93 0x100000000000000000000000000000000000000000000000000000000
0x1bc: V96 = 0x40
0x1be: V97 = M[0x40]
0x1c0: V98 = 0xffffffff
0x1c5: V99 = AND 0xffffffff V95
0x1c6: V100 = 0x100000000000000000000000000000000000000000000000000000000
0x1e4: V101 = MUL 0x100000000000000000000000000000000000000000000000000000000 V99
0x1e6: M[V97] = V101
0x1e7: V102 = 0x4
0x1e9: V103 = ADD 0x4 V97
0x1ed: M[V103] = V74
0x1ee: V104 = 0x20
0x1f0: V105 = ADD 0x20 V103
0x1f4: V106 = 0x0
0x1f6: V107 = 0x40
0x1f8: V108 = M[0x40]
0x1fb: V109 = SUB V105 V108
0x1fd: V110 = 0x0
0x200: V111 = 0x646e
0x203: V112 = GAS
0x204: V113 = SUB V112 0x646e
0x205: V114 = CALL V113 V84 0x0 V108 V109 V108 0x0
0x20d: V115 = 0x1
0x20f: V116 = ADD 0x1 S4
0x213: V117 = 0x109
0x216: JUMP 0x109
---
Entry stack: [V11, 0x84, V32, V30, S4, S3, V32, V30, S0]
Stack pops: 5
Stack additions: [V116, V74]
Exit stack: [V11, 0x84, V32, V30, V116, V74]

================================

Block 0x217
[0x217:0x269]
---
Predecessors: [0x109]
Successors: [0x26a, 0x26e]
---
0x217 JUMPDEST
0x218 CALLER
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f PUSH2 0x8fc
0x232 ADDRESS
0x233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x248 AND
0x249 BALANCE
0x24a SWAP1
0x24b DUP2
0x24c ISZERO
0x24d MUL
0x24e SWAP1
0x24f PUSH1 0x40
0x251 MLOAD
0x252 PUSH1 0x0
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP1
0x258 DUP4
0x259 SUB
0x25a DUP2
0x25b DUP6
0x25c DUP9
0x25d DUP9
0x25e CALL
0x25f SWAP4
0x260 POP
0x261 POP
0x262 POP
0x263 POP
0x264 ISZERO
0x265 ISZERO
0x266 PUSH2 0x26e
0x269 JUMPI
---
0x217: JUMPDEST 
0x218: V118 = CALLER
0x219: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x22f: V121 = 0x8fc
0x232: V122 = ADDRESS
0x233: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x248: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x249: V125 = BALANCE V124
0x24c: V126 = ISZERO V125
0x24d: V127 = MUL V126 0x8fc
0x24f: V128 = 0x40
0x251: V129 = M[0x40]
0x252: V130 = 0x0
0x254: V131 = 0x40
0x256: V132 = M[0x40]
0x259: V133 = SUB V129 V132
0x25e: V134 = CALL V127 V120 V125 V132 V133 V132 0x0
0x264: V135 = ISZERO V134
0x265: V136 = ISZERO V135
0x266: V137 = 0x26e
0x269: JUMPI 0x26e V136
---
Entry stack: [V11, 0x84, V32, V30, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V32, V30, S1, S0]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x217]
Successors: []
---
0x26a PUSH1 0x0
0x26c DUP1
0x26d REVERT
---
0x26a: V138 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x84, V32, V30, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V32, V30, S1, S0]

================================

Block 0x26e
[0x26e:0x273]
---
Predecessors: [0x217]
Successors: [0x84]
---
0x26e JUMPDEST
0x26f POP
0x270 POP
0x271 POP
0x272 POP
0x273 JUMP
---
0x26e: JUMPDEST 
0x273: JUMP 0x84
---
Entry stack: [V11, 0x84, V32, V30, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x274
[0x274:0x27f]
---
Predecessors: []
Successors: [0x280]
Has unresolved jump.
---
0x274 STOP
0x275 LOG1
0x276 PUSH6 0x627a7a723058
0x27d SHA3
0x27e MISSING 0xd7
0x27f JUMPI
---
0x274: STOP 
0x275: LOG S0 S1 S2
0x276: V139 = 0x627a7a723058
0x27d: V140 = SHA3 0x627a7a723058 S3
0x27e: MISSING 0xd7
0x27f: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V140]
Exit stack: []

================================

Block 0x280
[0x280:0x29f]
---
Predecessors: [0x274]
Successors: []
---
0x280 SHR
0x281 MISSING 0xd7
0x282 MISSING 0x5e
0x283 MISSING 0xf7
0x284 MISSING 0xaf
0x285 BALANCE
0x286 SHL
0x287 MISSING 0x25
0x288 MISSING 0xb9
0x289 SLOAD
0x28a AND
0x28b OR
0x28c STATICCALL
0x28d MISSING 0xb6
0x28e MISSING 0x4d
0x28f MISSING 0xec
0x290 MISSING 0xab
0x291 MISSING 0xb7
0x292 MISSING 0xb3
0x293 LT
0x294 MISSING 0xc9
0x295 MISSING 0xe2
0x296 SWAP13
0x297 MISSING 0xe2
0x298 MISSING 0xf7
0x299 BLOCKHASH
0x29a GASPRICE
0x29b REVERT
0x29c MISSING 0xf6
0x29d SWAP10
0x29e STOP
0x29f MISSING 0x29
---
0x280: V141 = SHR S0 S1
0x281: MISSING 0xd7
0x282: MISSING 0x5e
0x283: MISSING 0xf7
0x284: MISSING 0xaf
0x285: V142 = BALANCE S0
0x286: V143 = SHL V142 S1
0x287: MISSING 0x25
0x288: MISSING 0xb9
0x289: V144 = S[S0]
0x28a: V145 = AND V144 S1
0x28b: V146 = OR V145 S2
0x28c: V147 = STATICCALL V146 S3 S4 S5 S6 S7
0x28d: MISSING 0xb6
0x28e: MISSING 0x4d
0x28f: MISSING 0xec
0x290: MISSING 0xab
0x291: MISSING 0xb7
0x292: MISSING 0xb3
0x293: V148 = LT S0 S1
0x294: MISSING 0xc9
0x295: MISSING 0xe2
0x297: MISSING 0xe2
0x298: MISSING 0xf7
0x299: V149 = BLOCKHASH S0
0x29a: V150 = GASPRICE
0x29b: REVERT V150 V149
0x29c: MISSING 0xf6
0x29e: STOP 
0x29f: MISSING 0x29
---
Entry stack: []
Stack pops: 765653
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xd997ccb3
Entry block: 0x4e
Exit block: 0x56
Body: 0x4e, 0x56, 0x86, 0xfb, 0xff

Function 1:
Public function signature: 0xebc0b4dd
Entry block: 0x58
Exit block: 0x84
Body: 0x58, 0x5f, 0x63, 0x84, 0x101, 0x109, 0x115, 0x121, 0x122, 0x217, 0x26a, 0x26e

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

