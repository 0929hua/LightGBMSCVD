Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x80]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x80
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x80
0xa: JUMPI 0x80 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x89]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x4592cd1d
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x89
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x4592cd1d
0x39: V12 = EQ V10 0x4592cd1d
0x3a: V13 = 0x89
0x3d: JUMPI 0x89 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xad]
---
0x3e DUP1
0x3f PUSH4 0x557f4bc9
0x44 EQ
0x45 PUSH2 0xad
0x48 JUMPI
---
0x3f: V14 = 0x557f4bc9
0x44: V15 = EQ 0x557f4bc9 V10
0x45: V16 = 0xad
0x48: JUMPI 0xad V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xea]
---
0x49 DUP1
0x4a PUSH4 0x5aa77d3c
0x4f EQ
0x50 PUSH2 0xea
0x53 JUMPI
---
0x4a: V17 = 0x5aa77d3c
0x4f: V18 = EQ 0x5aa77d3c V10
0x50: V19 = 0xea
0x53: JUMPI 0xea V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x123]
---
0x54 DUP1
0x55 PUSH4 0xce606ee0
0x5a EQ
0x5b PUSH2 0x123
0x5e JUMPI
---
0x55: V20 = 0xce606ee0
0x5a: V21 = EQ 0xce606ee0 V10
0x5b: V22 = 0x123
0x5e: JUMPI 0x123 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x15c]
---
0x5f DUP1
0x60 PUSH4 0xd613be0a
0x65 EQ
0x66 PUSH2 0x15c
0x69 JUMPI
---
0x60: V23 = 0xd613be0a
0x65: V24 = EQ 0xd613be0a V10
0x66: V25 = 0x15c
0x69: JUMPI 0x15c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x199]
---
0x6a DUP1
0x6b PUSH4 0xe04f31e9
0x70 EQ
0x71 PUSH2 0x199
0x74 JUMPI
---
0x6b: V26 = 0xe04f31e9
0x70: V27 = EQ 0xe04f31e9 V10
0x71: V28 = 0x199
0x74: JUMPI 0x199 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x21f]
---
0x75 DUP1
0x76 PUSH4 0xf8a6c595
0x7b EQ
0x7c PUSH2 0x21f
0x7f JUMPI
---
0x76: V29 = 0xf8a6c595
0x7b: V30 = EQ 0xf8a6c595 V10
0x7c: V31 = 0x21f
0x7f: JUMPI 0x21f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x0, 0x75]
Successors: [0x84]
---
0x80 JUMPDEST
0x81 PUSH2 0x87
---
0x80: JUMPDEST 
0x81: V32 = 0x87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V10, 0x87]

================================

Block 0x84
[0x84:0x84]
---
Predecessors: [0x80]
Successors: [0x85]
---
0x84 JUMPDEST
---
0x84: JUMPDEST 
---
Entry stack: [V10, 0x87]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x87]

================================

Block 0x85
[0x85:0x86]
---
Predecessors: [0x84]
Successors: [0x87]
---
0x85 JUMPDEST
0x86 JUMP
---
0x85: JUMPDEST 
0x86: JUMP 0x87
---
Entry stack: [V10, 0x87]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x87
[0x87:0x88]
---
Predecessors: [0x85, 0x4a6]
Successors: []
---
0x87 JUMPDEST
0x88 STOP
---
0x87: JUMPDEST 
0x88: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x89
[0x89:0x8f]
---
Predecessors: [0xb]
Successors: [0x90, 0x91]
---
0x89 JUMPDEST
0x8a CALLVALUE
0x8b ISZERO
0x8c PUSH2 0x91
0x8f JUMPI
---
0x89: JUMPDEST 
0x8a: V33 = CALLVALUE
0x8b: V34 = ISZERO V33
0x8c: V35 = 0x91
0x8f: JUMPI 0x91 V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x90
[0x90:0x90]
---
Predecessors: [0x89]
Successors: []
---
0x90 INVALID
---
0x90: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x91
[0x91:0x98]
---
Predecessors: [0x89]
Successors: [0x24a]
---
0x91 JUMPDEST
0x92 PUSH2 0x99
0x95 PUSH2 0x24a
0x98 JUMP
---
0x91: JUMPDEST 
0x92: V36 = 0x99
0x95: V37 = 0x24a
0x98: JUMP 0x24a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x99]
Exit stack: [V10, 0x99]

================================

Block 0x99
[0x99:0xac]
---
Predecessors: [0x2c4, 0x330, 0x3d8]
Successors: []
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c DUP1
0x9d MLOAD
0x9e SWAP2
0x9f ISZERO
0xa0 ISZERO
0xa1 DUP3
0xa2 MSTORE
0xa3 MLOAD
0xa4 SWAP1
0xa5 DUP2
0xa6 SWAP1
0xa7 SUB
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac RETURN
---
0x99: JUMPDEST 
0x9a: V38 = 0x40
0x9d: V39 = M[0x40]
0x9f: V40 = ISZERO {0x0, 0x1}
0xa0: V41 = ISZERO V40
0xa2: M[V39] = V41
0xa3: V42 = M[0x40]
0xa7: V43 = SUB V39 V42
0xa8: V44 = 0x20
0xaa: V45 = ADD 0x20 V43
0xac: RETURN V42 V45
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0x3e]
Successors: [0xb4, 0xb5]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb5
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V46 = CALLVALUE
0xaf: V47 = ISZERO V46
0xb0: V48 = 0xb5
0xb3: JUMPI 0xb5 V47
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0xad]
Successors: []
---
0xb4 INVALID
---
0xb4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb5
[0xb5:0xd5]
---
Predecessors: [0xad]
Successors: [0x2c7]
---
0xb5 JUMPDEST
0xb6 PUSH2 0x99
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce PUSH1 0x4
0xd0 CALLDATALOAD
0xd1 AND
0xd2 PUSH2 0x2c7
0xd5 JUMP
---
0xb5: JUMPDEST 
0xb6: V49 = 0x99
0xb9: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V51 = 0x4
0xd0: V52 = CALLDATALOAD 0x4
0xd1: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V54 = 0x2c7
0xd5: JUMP 0x2c7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x99, V53]
Exit stack: [V10, 0x99, V53]

================================

Block 0xd6
[0xd6:0xe9]
---
Predecessors: []
Successors: []
---
0xd6 JUMPDEST
0xd7 PUSH1 0x40
0xd9 DUP1
0xda MLOAD
0xdb SWAP2
0xdc ISZERO
0xdd ISZERO
0xde DUP3
0xdf MSTORE
0xe0 MLOAD
0xe1 SWAP1
0xe2 DUP2
0xe3 SWAP1
0xe4 SUB
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 RETURN
---
0xd6: JUMPDEST 
0xd7: V55 = 0x40
0xda: V56 = M[0x40]
0xdc: V57 = ISZERO S0
0xdd: V58 = ISZERO V57
0xdf: M[V56] = V58
0xe0: V59 = M[0x40]
0xe4: V60 = SUB V56 V59
0xe5: V61 = 0x20
0xe7: V62 = ADD 0x20 V60
0xe9: RETURN V59 V62
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xea
[0xea:0xf0]
---
Predecessors: [0x49]
Successors: [0xf1, 0xf2]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec ISZERO
0xed PUSH2 0xf2
0xf0 JUMPI
---
0xea: JUMPDEST 
0xeb: V63 = CALLVALUE
0xec: V64 = ISZERO V63
0xed: V65 = 0xf2
0xf0: JUMPI 0xf2 V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf1
[0xf1:0xf1]
---
Predecessors: [0xea]
Successors: []
---
0xf1 INVALID
---
0xf1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xea]
Successors: [0x335]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x335
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V66 = 0xfa
0xf6: V67 = 0x335
0xf9: JUMP 0x335
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0xfa
[0xfa:0x122]
---
Predecessors: [0x335, 0x351]
Successors: []
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd DUP1
0xfe MLOAD
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 SWAP1
0x115 SWAP3
0x116 AND
0x117 DUP3
0x118 MSTORE
0x119 MLOAD
0x11a SWAP1
0x11b DUP2
0x11c SWAP1
0x11d SUB
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP1
0x122 RETURN
---
0xfa: JUMPDEST 
0xfb: V68 = 0x40
0xfe: V69 = M[0x40]
0xff: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V71 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x118: M[V69] = V71
0x119: V72 = M[0x40]
0x11d: V73 = SUB V69 V72
0x11e: V74 = 0x20
0x120: V75 = ADD 0x20 V73
0x122: RETURN V72 V75
---
Entry stack: [V10, 0xfa, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xfa]

================================

Block 0x123
[0x123:0x129]
---
Predecessors: [0x54]
Successors: [0x12a, 0x12b]
---
0x123 JUMPDEST
0x124 CALLVALUE
0x125 ISZERO
0x126 PUSH2 0x12b
0x129 JUMPI
---
0x123: JUMPDEST 
0x124: V76 = CALLVALUE
0x125: V77 = ISZERO V76
0x126: V78 = 0x12b
0x129: JUMPI 0x12b V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12a
[0x12a:0x12a]
---
Predecessors: [0x123]
Successors: []
---
0x12a INVALID
---
0x12a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x132]
---
Predecessors: [0x123]
Successors: [0x351]
---
0x12b JUMPDEST
0x12c PUSH2 0xfa
0x12f PUSH2 0x351
0x132 JUMP
---
0x12b: JUMPDEST 
0x12c: V79 = 0xfa
0x12f: V80 = 0x351
0x132: JUMP 0x351
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V10, 0xfa]

================================

Block 0x133
[0x133:0x15b]
---
Predecessors: []
Successors: []
---
0x133 JUMPDEST
0x134 PUSH1 0x40
0x136 DUP1
0x137 MLOAD
0x138 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d SWAP1
0x14e SWAP3
0x14f AND
0x150 DUP3
0x151 MSTORE
0x152 MLOAD
0x153 SWAP1
0x154 DUP2
0x155 SWAP1
0x156 SUB
0x157 PUSH1 0x20
0x159 ADD
0x15a SWAP1
0x15b RETURN
---
0x133: JUMPDEST 
0x134: V81 = 0x40
0x137: V82 = M[0x40]
0x138: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V84 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x151: M[V82] = V84
0x152: V85 = M[0x40]
0x156: V86 = SUB V82 V85
0x157: V87 = 0x20
0x159: V88 = ADD 0x20 V86
0x15b: RETURN V85 V88
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x5f]
Successors: [0x163, 0x164]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x164
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V89 = CALLVALUE
0x15e: V90 = ISZERO V89
0x15f: V91 = 0x164
0x162: JUMPI 0x164 V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x163
[0x163:0x163]
---
Predecessors: [0x15c]
Successors: []
---
0x163 INVALID
---
0x163: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x164
[0x164:0x184]
---
Predecessors: [0x15c]
Successors: [0x36d]
---
0x164 JUMPDEST
0x165 PUSH2 0x99
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d PUSH1 0x4
0x17f CALLDATALOAD
0x180 AND
0x181 PUSH2 0x36d
0x184 JUMP
---
0x164: JUMPDEST 
0x165: V92 = 0x99
0x168: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V94 = 0x4
0x17f: V95 = CALLDATALOAD 0x4
0x180: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x181: V97 = 0x36d
0x184: JUMP 0x36d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x99, V96]
Exit stack: [V10, 0x99, V96]

================================

Block 0x185
[0x185:0x198]
---
Predecessors: []
Successors: []
---
0x185 JUMPDEST
0x186 PUSH1 0x40
0x188 DUP1
0x189 MLOAD
0x18a SWAP2
0x18b ISZERO
0x18c ISZERO
0x18d DUP3
0x18e MSTORE
0x18f MLOAD
0x190 SWAP1
0x191 DUP2
0x192 SWAP1
0x193 SUB
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP1
0x198 RETURN
---
0x185: JUMPDEST 
0x186: V98 = 0x40
0x189: V99 = M[0x40]
0x18b: V100 = ISZERO S0
0x18c: V101 = ISZERO V100
0x18e: M[V99] = V101
0x18f: V102 = M[0x40]
0x193: V103 = SUB V99 V102
0x194: V104 = 0x20
0x196: V105 = ADD 0x20 V103
0x198: RETURN V102 V105
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x199
[0x199:0x19f]
---
Predecessors: [0x6a]
Successors: [0x1a0, 0x1a1]
---
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x1a1
0x19f JUMPI
---
0x199: JUMPDEST 
0x19a: V106 = CALLVALUE
0x19b: V107 = ISZERO V106
0x19c: V108 = 0x1a1
0x19f: JUMPI 0x1a1 V107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a0
[0x1a0:0x1a0]
---
Predecessors: [0x199]
Successors: []
---
0x1a0 INVALID
---
0x1a0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a1
[0x1a1:0x20c]
---
Predecessors: [0x199]
Successors: [0x3dd]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 MLOAD
0x1a6 PUSH1 0x20
0x1a8 PUSH1 0x4
0x1aa PUSH1 0x44
0x1ac CALLDATALOAD
0x1ad DUP2
0x1ae DUP2
0x1af ADD
0x1b0 CALLDATALOAD
0x1b1 PUSH1 0x1f
0x1b3 DUP2
0x1b4 ADD
0x1b5 DUP5
0x1b6 SWAP1
0x1b7 DIV
0x1b8 DUP5
0x1b9 MUL
0x1ba DUP6
0x1bb ADD
0x1bc DUP5
0x1bd ADD
0x1be SWAP1
0x1bf SWAP6
0x1c0 MSTORE
0x1c1 DUP5
0x1c2 DUP5
0x1c3 MSTORE
0x1c4 PUSH2 0x20d
0x1c7 SWAP5
0x1c8 DUP3
0x1c9 CALLDATALOAD
0x1ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1df AND
0x1e0 SWAP5
0x1e1 PUSH1 0x24
0x1e3 DUP1
0x1e4 CALLDATALOAD
0x1e5 SWAP6
0x1e6 PUSH1 0x64
0x1e8 SWAP5
0x1e9 SWAP3
0x1ea SWAP4
0x1eb SWAP2
0x1ec SWAP1
0x1ed SWAP3
0x1ee ADD
0x1ef SWAP2
0x1f0 DUP2
0x1f1 SWAP1
0x1f2 DUP5
0x1f3 ADD
0x1f4 DUP4
0x1f5 DUP3
0x1f6 DUP1
0x1f7 DUP3
0x1f8 DUP5
0x1f9 CALLDATACOPY
0x1fa POP
0x1fb SWAP5
0x1fc SWAP7
0x1fd POP
0x1fe POP
0x1ff POP
0x200 POP
0x201 SWAP2
0x202 CALLDATALOAD
0x203 ISZERO
0x204 ISZERO
0x205 SWAP2
0x206 POP
0x207 PUSH2 0x3dd
0x20a SWAP1
0x20b POP
0x20c JUMP
---
0x1a1: JUMPDEST 
0x1a2: V109 = 0x40
0x1a5: V110 = M[0x40]
0x1a6: V111 = 0x20
0x1a8: V112 = 0x4
0x1aa: V113 = 0x44
0x1ac: V114 = CALLDATALOAD 0x44
0x1af: V115 = ADD V114 0x4
0x1b0: V116 = CALLDATALOAD V115
0x1b1: V117 = 0x1f
0x1b4: V118 = ADD V116 0x1f
0x1b7: V119 = DIV V118 0x20
0x1b9: V120 = MUL 0x20 V119
0x1bb: V121 = ADD V110 V120
0x1bd: V122 = ADD 0x20 V121
0x1c0: M[0x40] = V122
0x1c3: M[V110] = V116
0x1c4: V123 = 0x20d
0x1c9: V124 = CALLDATALOAD 0x4
0x1ca: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1e1: V127 = 0x24
0x1e4: V128 = CALLDATALOAD 0x24
0x1e6: V129 = 0x64
0x1ee: V130 = ADD V114 0x24
0x1f3: V131 = ADD V110 0x20
0x1f9: CALLDATACOPY V131 V130 V116
0x202: V132 = CALLDATALOAD 0x64
0x203: V133 = ISZERO V132
0x204: V134 = ISZERO V133
0x207: V135 = 0x3dd
0x20c: JUMP 0x3dd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20d, V126, V128, V110, V134]
Exit stack: [V10, 0x20d, V126, V128, V110, V134]

================================

Block 0x20d
[0x20d:0x21e]
---
Predecessors: [0x438]
Successors: []
---
0x20d JUMPDEST
0x20e PUSH1 0x40
0x210 DUP1
0x211 MLOAD
0x212 SWAP2
0x213 DUP3
0x214 MSTORE
0x215 MLOAD
0x216 SWAP1
0x217 DUP2
0x218 SWAP1
0x219 SUB
0x21a PUSH1 0x20
0x21c ADD
0x21d SWAP1
0x21e RETURN
---
0x20d: JUMPDEST 
0x20e: V136 = 0x40
0x211: V137 = M[0x40]
0x214: M[V137] = S0
0x215: V138 = M[0x40]
0x219: V139 = SUB V137 V138
0x21a: V140 = 0x20
0x21c: V141 = ADD 0x20 V139
0x21e: RETURN V138 V141
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x21f
[0x21f:0x225]
---
Predecessors: [0x75]
Successors: [0x226, 0x227]
---
0x21f JUMPDEST
0x220 CALLVALUE
0x221 ISZERO
0x222 PUSH2 0x227
0x225 JUMPI
---
0x21f: JUMPDEST 
0x220: V142 = CALLVALUE
0x221: V143 = ISZERO V142
0x222: V144 = 0x227
0x225: JUMPI 0x227 V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x226
[0x226:0x226]
---
Predecessors: [0x21f]
Successors: []
---
0x226 INVALID
---
0x226: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x227
[0x227:0x247]
---
Predecessors: [0x21f]
Successors: [0x441]
---
0x227 JUMPDEST
0x228 PUSH2 0x87
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 PUSH1 0x4
0x242 CALLDATALOAD
0x243 AND
0x244 PUSH2 0x441
0x247 JUMP
---
0x227: JUMPDEST 
0x228: V145 = 0x87
0x22b: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V147 = 0x4
0x242: V148 = CALLDATALOAD 0x4
0x243: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x244: V150 = 0x441
0x247: JUMP 0x441
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x87, V149]
Exit stack: [V10, 0x87, V149]

================================

Block 0x248
[0x248:0x249]
---
Predecessors: []
Successors: []
---
0x248 JUMPDEST
0x249 STOP
---
0x248: JUMPDEST 
0x249: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24a
[0x24a:0x270]
---
Predecessors: [0x91]
Successors: [0x271, 0x278]
---
0x24a JUMPDEST
0x24b PUSH1 0x1
0x24d SLOAD
0x24e PUSH1 0x0
0x250 SWAP1
0x251 CALLER
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 SWAP1
0x268 DUP2
0x269 AND
0x26a SWAP2
0x26b AND
0x26c EQ
0x26d PUSH2 0x278
0x270 JUMPI
---
0x24a: JUMPDEST 
0x24b: V151 = 0x1
0x24d: V152 = S[0x1]
0x24e: V153 = 0x0
0x251: V154 = CALLER
0x252: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x26b: V157 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V158 = EQ V157 V156
0x26d: V159 = 0x278
0x270: JUMPI 0x278 V158
---
Entry stack: [V10, 0x99]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x99, 0x0]

================================

Block 0x271
[0x271:0x277]
---
Predecessors: [0x24a]
Successors: [0x2c4]
---
0x271 POP
0x272 PUSH1 0x0
0x274 PUSH2 0x2c4
0x277 JUMP
---
0x272: V160 = 0x0
0x274: V161 = 0x2c4
0x277: JUMP 0x2c4
---
Entry stack: [V10, 0x99, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x99, 0x0]

================================

Block 0x278
[0x278:0x2c3]
---
Predecessors: [0x24a]
Successors: [0x2c4]
---
0x278 JUMPDEST
0x279 POP
0x27a PUSH1 0x1
0x27c DUP1
0x27d SLOAD
0x27e PUSH1 0x0
0x280 DUP1
0x281 SLOAD
0x282 PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 AND
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb DUP5
0x2bc AND
0x2bd OR
0x2be SWAP1
0x2bf SWAP2
0x2c0 SSTORE
0x2c1 AND
0x2c2 DUP2
0x2c3 SSTORE
---
0x278: JUMPDEST 
0x27a: V162 = 0x1
0x27d: V163 = S[0x1]
0x27e: V164 = 0x0
0x281: V165 = S[0x0]
0x282: V166 = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x2a5: V167 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V165
0x2a6: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bc: V169 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V170 = OR V169 V167
0x2c0: S[0x0] = V170
0x2c1: V171 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V163
0x2c3: S[0x1] = V171
---
Entry stack: [V10, 0x99, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x99, 0x1]

================================

Block 0x2c4
[0x2c4:0x2c6]
---
Predecessors: [0x271, 0x278]
Successors: [0x99]
---
0x2c4 JUMPDEST
0x2c5 SWAP1
0x2c6 JUMP
---
0x2c4: JUMPDEST 
0x2c6: JUMP 0x99
---
Entry stack: [V10, 0x99, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x2c7
[0x2c7:0x2ec]
---
Predecessors: [0xb5]
Successors: [0x2ed, 0x32e]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb SLOAD
0x2cc CALLER
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 SWAP1
0x2e3 DUP2
0x2e4 AND
0x2e5 SWAP2
0x2e6 AND
0x2e7 EQ
0x2e8 ISZERO
0x2e9 PUSH2 0x32e
0x2ec JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V172 = 0x0
0x2cb: V173 = S[0x0]
0x2cc: V174 = CALLER
0x2cd: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x2e6: V177 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V178 = EQ V177 V176
0x2e8: V179 = ISZERO V178
0x2e9: V180 = 0x32e
0x2ec: JUMPI 0x32e V179
---
Entry stack: [V10, 0x99, V53]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x99, V53, 0x0]

================================

Block 0x2ed
[0x2ed:0x32d]
---
Predecessors: [0x2c7]
Successors: [0x32e]
---
0x2ed POP
0x2ee PUSH1 0x1
0x2f0 DUP1
0x2f1 SLOAD
0x2f2 PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x313 AND
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 DUP4
0x32a AND
0x32b OR
0x32c DUP2
0x32d SSTORE
---
0x2ee: V181 = 0x1
0x2f1: V182 = S[0x1]
0x2f2: V183 = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x313: V184 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V182
0x314: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V186 = AND V53 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V187 = OR V186 V184
0x32d: S[0x1] = V187
---
Entry stack: [V10, 0x99, V53, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x99, V53, 0x1]

================================

Block 0x32e
[0x32e:0x32e]
---
Predecessors: [0x2c7, 0x2ed, 0x36d]
Successors: [0x32f]
---
0x32e JUMPDEST
---
0x32e: JUMPDEST 
---
Entry stack: [V10, 0x99, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x99, S1, {0x0, 0x1}]

================================

Block 0x32f
[0x32f:0x32f]
---
Predecessors: [0x32e]
Successors: [0x330]
---
0x32f JUMPDEST
---
0x32f: JUMPDEST 
---
Entry stack: [V10, 0x99, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x99, S1, {0x0, 0x1}]

================================

Block 0x330
[0x330:0x334]
---
Predecessors: [0x32f]
Successors: [0x99]
---
0x330 JUMPDEST
0x331 SWAP2
0x332 SWAP1
0x333 POP
0x334 JUMP
---
0x330: JUMPDEST 
0x334: JUMP 0x99
---
Entry stack: [V10, 0x99, S1, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x335
[0x335:0x350]
---
Predecessors: [0xf2]
Successors: [0xfa]
---
0x335 JUMPDEST
0x336 PUSH1 0x1
0x338 SLOAD
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f DUP2
0x350 JUMP
---
0x335: JUMPDEST 
0x336: V188 = 0x1
0x338: V189 = S[0x1]
0x339: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x350: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: [S0, V191]
Exit stack: [V10, 0xfa, V191]

================================

Block 0x351
[0x351:0x36c]
---
Predecessors: [0x12b]
Successors: [0xfa]
---
0x351 JUMPDEST
0x352 PUSH1 0x0
0x354 SLOAD
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b DUP2
0x36c JUMP
---
0x351: JUMPDEST 
0x352: V192 = 0x0
0x354: V193 = S[0x0]
0x355: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x36c: JUMP 0xfa
---
Entry stack: [V10, 0xfa]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V10, 0xfa, V195]

================================

Block 0x36d
[0x36d:0x392]
---
Predecessors: [0x164]
Successors: [0x32e, 0x393]
---
0x36d JUMPDEST
0x36e PUSH1 0x0
0x370 DUP1
0x371 SLOAD
0x372 CALLER
0x373 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x388 SWAP1
0x389 DUP2
0x38a AND
0x38b SWAP2
0x38c AND
0x38d EQ
0x38e ISZERO
0x38f PUSH2 0x32e
0x392 JUMPI
---
0x36d: JUMPDEST 
0x36e: V196 = 0x0
0x371: V197 = S[0x0]
0x372: V198 = CALLER
0x373: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x38c: V201 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V202 = EQ V201 V200
0x38e: V203 = ISZERO V202
0x38f: V204 = 0x32e
0x392: JUMPI 0x32e V203
---
Entry stack: [V10, 0x99, V96]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x99, V96, 0x0]

================================

Block 0x393
[0x393:0x3d5]
---
Predecessors: [0x36d]
Successors: [0x3d6]
---
0x393 POP
0x394 PUSH1 0x0
0x396 DUP1
0x397 SLOAD
0x398 PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x3b9 AND
0x3ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cf DUP4
0x3d0 AND
0x3d1 OR
0x3d2 SWAP1
0x3d3 SSTORE
0x3d4 PUSH1 0x1
---
0x394: V205 = 0x0
0x397: V206 = S[0x0]
0x398: V207 = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x3b9: V208 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V206
0x3ba: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V210 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x3d1: V211 = OR V210 V208
0x3d3: S[0x0] = V211
0x3d4: V212 = 0x1
---
Entry stack: [V10, 0x99, V96, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x99, V96, 0x1]

================================

Block 0x3d6
[0x3d6:0x3d6]
---
Predecessors: [0x393]
Successors: [0x3d7]
---
0x3d6 JUMPDEST
---
0x3d6: JUMPDEST 
---
Entry stack: [V10, 0x99, V96, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x99, V96, 0x1]

================================

Block 0x3d7
[0x3d7:0x3d7]
---
Predecessors: [0x3d6]
Successors: [0x3d8]
---
0x3d7 JUMPDEST
---
0x3d7: JUMPDEST 
---
Entry stack: [V10, 0x99, V96, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x99, V96, 0x1]

================================

Block 0x3d8
[0x3d8:0x3dc]
---
Predecessors: [0x3d7]
Successors: [0x99]
---
0x3d8 JUMPDEST
0x3d9 SWAP2
0x3da SWAP1
0x3db POP
0x3dc JUMP
---
0x3d8: JUMPDEST 
0x3dc: JUMP 0x99
---
Entry stack: [V10, 0x99, V96, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x3dd
[0x3dd:0x404]
---
Predecessors: [0x1a1]
Successors: [0x405, 0x435]
---
0x3dd JUMPDEST
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 SLOAD
0x3e2 DUP2
0x3e3 SWAP1
0x3e4 CALLER
0x3e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fa SWAP1
0x3fb DUP2
0x3fc AND
0x3fd SWAP2
0x3fe AND
0x3ff EQ
0x400 ISZERO
0x401 PUSH2 0x435
0x404 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V213 = 0x0
0x3e1: V214 = S[0x0]
0x3e4: V215 = CALLER
0x3e5: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3fe: V218 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V219 = EQ V218 V217
0x400: V220 = ISZERO V219
0x401: V221 = 0x435
0x404: JUMPI 0x435 V220
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x20d, V126, V128, V110, V134, 0x0, 0x0]

================================

Block 0x405
[0x405:0x427]
---
Predecessors: [0x3dd]
Successors: [0x428, 0x42a]
---
0x405 PUSH1 0x20
0x407 PUSH1 0x0
0x409 DUP6
0x40a MLOAD
0x40b PUSH1 0x20
0x40d DUP8
0x40e ADD
0x40f DUP9
0x410 DUP11
0x411 PUSH1 0x40
0x413 PUSH1 0x3f
0x415 GAS
0x416 MUL
0x417 DIV
0x418 CALL
0x419 SWAP1
0x41a POP
0x41b PUSH1 0x0
0x41d MLOAD
0x41e SWAP2
0x41f POP
0x420 DUP1
0x421 ISZERO
0x422 DUP1
0x423 ISZERO
0x424 PUSH2 0x42a
0x427 JUMPI
---
0x405: V222 = 0x20
0x407: V223 = 0x0
0x40a: V224 = M[V110]
0x40b: V225 = 0x20
0x40e: V226 = ADD V110 0x20
0x411: V227 = 0x40
0x413: V228 = 0x3f
0x415: V229 = GAS
0x416: V230 = MUL V229 0x3f
0x417: V231 = DIV V230 0x40
0x418: V232 = CALL V231 V126 V128 V226 V224 0x0 0x20
0x41b: V233 = 0x0
0x41d: V234 = M[0x0]
0x421: V235 = ISZERO V232
0x423: V236 = ISZERO V235
0x424: V237 = 0x42a
0x427: JUMPI 0x42a V236
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V234, V232, V235]
Exit stack: [V10, 0x20d, V126, V128, V110, V134, V234, V232, V235]

================================

Block 0x428
[0x428:0x429]
---
Predecessors: [0x405]
Successors: [0x42a]
---
0x428 POP
0x429 DUP3
---
0x428: NOP 
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, V234, V232, V235]
Stack pops: 4
Stack additions: [S3, S2, S1, S3]
Exit stack: [V10, 0x20d, V126, V128, V110, V134, V234, V232, V134]

================================

Block 0x42a
[0x42a:0x42f]
---
Predecessors: [0x405, 0x428]
Successors: [0x430, 0x435]
---
0x42a JUMPDEST
0x42b ISZERO
0x42c PUSH2 0x435
0x42f JUMPI
---
0x42a: JUMPDEST 
0x42b: V238 = ISZERO S0
0x42c: V239 = 0x435
0x42f: JUMPI 0x435 V238
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, V234, V232, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x20d, V126, V128, V110, V134, V234, V232]

================================

Block 0x430
[0x430:0x434]
---
Predecessors: [0x42a]
Successors: []
---
0x430 PUSH1 0x0
0x432 PUSH1 0x0
0x434 REVERT
---
0x430: V240 = 0x0
0x432: V241 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, V234, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x20d, V126, V128, V110, V134, V234, V232]

================================

Block 0x435
[0x435:0x435]
---
Predecessors: [0x3dd, 0x42a]
Successors: [0x436]
---
0x435 JUMPDEST
---
0x435: JUMPDEST 
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x20d, V126, V128, V110, V134, S1, S0]

================================

Block 0x436
[0x436:0x436]
---
Predecessors: [0x435]
Successors: [0x437]
---
0x436 JUMPDEST
---
0x436: JUMPDEST 
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x20d, V126, V128, V110, V134, S1, S0]

================================

Block 0x437
[0x437:0x437]
---
Predecessors: [0x436]
Successors: [0x438]
---
0x437 JUMPDEST
---
0x437: JUMPDEST 
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x20d, V126, V128, V110, V134, S1, S0]

================================

Block 0x438
[0x438:0x440]
---
Predecessors: [0x437]
Successors: [0x20d]
---
0x438 JUMPDEST
0x439 POP
0x43a SWAP5
0x43b SWAP4
0x43c POP
0x43d POP
0x43e POP
0x43f POP
0x440 JUMP
---
0x438: JUMPDEST 
0x440: JUMP 0x20d
---
Entry stack: [V10, 0x20d, V126, V128, V110, V134, S1, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V10, S1]

================================

Block 0x441
[0x441:0x45f]
---
Predecessors: [0x227]
Successors: [0x460, 0x465]
---
0x441 JUMPDEST
0x442 PUSH1 0x0
0x444 SLOAD
0x445 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45a AND
0x45b ISZERO
0x45c PUSH2 0x465
0x45f JUMPI
---
0x441: JUMPDEST 
0x442: V242 = 0x0
0x444: V243 = S[0x0]
0x445: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x45a: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x45b: V246 = ISZERO V245
0x45c: V247 = 0x465
0x45f: JUMPI 0x465 V246
---
Entry stack: [V10, 0x87, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x87, V149]

================================

Block 0x460
[0x460:0x464]
---
Predecessors: [0x441]
Successors: []
---
0x460 PUSH1 0x0
0x462 PUSH1 0x0
0x464 REVERT
---
0x460: V248 = 0x0
0x462: V249 = 0x0
0x464: REVERT 0x0 0x0
---
Entry stack: [V10, 0x87, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x87, V149]

================================

Block 0x465
[0x465:0x4a5]
---
Predecessors: [0x441]
Successors: [0x4a6]
---
0x465 JUMPDEST
0x466 PUSH1 0x0
0x468 DUP1
0x469 SLOAD
0x46a PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x48b AND
0x48c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a1 DUP4
0x4a2 AND
0x4a3 OR
0x4a4 SWAP1
0x4a5 SSTORE
---
0x465: JUMPDEST 
0x466: V250 = 0x0
0x469: V251 = S[0x0]
0x46a: V252 = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x48b: V253 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V251
0x48c: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V255 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V256 = OR V255 V253
0x4a5: S[0x0] = V256
---
Entry stack: [V10, 0x87, V149]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x87, V149]

================================

Block 0x4a6
[0x4a6:0x4a8]
---
Predecessors: [0x465]
Successors: [0x87]
---
0x4a6 JUMPDEST
0x4a7 POP
0x4a8 JUMP
---
0x4a6: JUMPDEST 
0x4a8: JUMP 0x87
---
Entry stack: [V10, 0x87, V149]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a9
[0x4a9:0x4d9]
---
Predecessors: []
Successors: []
---
0x4a9 STOP
0x4aa LOG1
0x4ab PUSH6 0x627a7a723058
0x4b2 SHA3
0x4b3 GASPRICE
0x4b4 MISSING 0xe4
0x4b5 MISSING 0x25
0x4b6 MISSING 0xdf
0x4b7 MISSING 0xf8
0x4b8 MISSING 0xad
0x4b9 MISSING 0x4e
0x4ba MISSING 0xd8
0x4bb PUSH30 0x6f308fdaf288249e3d7868f064ab8e06a094328dde68ff0029
---
0x4a9: STOP 
0x4aa: LOG S0 S1 S2
0x4ab: V257 = 0x627a7a723058
0x4b2: V258 = SHA3 0x627a7a723058 S3
0x4b3: V259 = GASPRICE
0x4b4: MISSING 0xe4
0x4b5: MISSING 0x25
0x4b6: MISSING 0xdf
0x4b7: MISSING 0xf8
0x4b8: MISSING 0xad
0x4b9: MISSING 0x4e
0x4ba: MISSING 0xd8
0x4bb: V260 = 0x6f308fdaf288249e3d7868f064ab8e06a094328dde68ff0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V259, V258, 0x6f308fdaf288249e3d7868f064ab8e06a094328dde68ff0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x4592cd1d
Entry block: 0x89
Exit block: 0x99
Body: 0x89, 0x90, 0x91, 0x99, 0x24a, 0x271, 0x278, 0x2c4

Function 1:
Public function signature: 0x557f4bc9
Entry block: 0xad
Exit block: 0x99
Body: 0x99, 0xad, 0xb4, 0xb5, 0x2c7, 0x2ed, 0x32e, 0x32f, 0x330

Function 2:
Public function signature: 0x5aa77d3c
Entry block: 0xea
Exit block: 0xfa
Body: 0xea, 0xf1, 0xf2, 0xfa, 0x335

Function 3:
Public function signature: 0xce606ee0
Entry block: 0x123
Exit block: 0xfa
Body: 0xfa, 0x123, 0x12a, 0x12b, 0x351

Function 4:
Public function signature: 0xd613be0a
Entry block: 0x15c
Exit block: 0x99
Body: 0x99, 0x15c, 0x163, 0x164, 0x32e, 0x32f, 0x330, 0x36d, 0x393, 0x3d6, 0x3d7, 0x3d8

Function 5:
Public function signature: 0xe04f31e9
Entry block: 0x199
Exit block: 0x20d
Body: 0x199, 0x1a0, 0x1a1, 0x20d, 0x3dd, 0x405, 0x428, 0x42a, 0x430, 0x435, 0x436, 0x437, 0x438

Function 6:
Public function signature: 0xf8a6c595
Entry block: 0x21f
Exit block: 0x87
Body: 0x87, 0x21f, 0x226, 0x227, 0x441, 0x460, 0x465, 0x4a6

Function 7:
Public fallback function
Entry block: 0x80
Exit block: 0x87
Body: 0x80, 0x84, 0x85, 0x87

