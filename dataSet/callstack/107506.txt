Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x66]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x66
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x66
0xc: JUMPI 0x66 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x39]
---
Predecessors: [0x0]
Successors: [0x3a, 0xac]
---
0xd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b PUSH1 0x0
0x2d CALLDATALOAD
0x2e DIV
0x2f PUSH4 0x25313a2
0x34 DUP2
0x35 EQ
0x36 PUSH2 0xac
0x39 JUMPI
---
0xd: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2b: V7 = 0x0
0x2d: V8 = CALLDATALOAD 0x0
0x2e: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0x25313a2
0x35: V11 = EQ V9 0x25313a2
0x36: V12 = 0xac
0x39: JUMPI 0xac V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0xd]
Successors: [0x45, 0xdd]
---
0x3a DUP1
0x3b PUSH4 0x3659cfe6
0x40 EQ
0x41 PUSH2 0xdd
0x44 JUMPI
---
0x3b: V13 = 0x3659cfe6
0x40: V14 = EQ 0x3659cfe6 V9
0x41: V15 = 0xdd
0x44: JUMPI 0xdd V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0x112]
---
0x45 DUP1
0x46 PUSH4 0x4f1ef286
0x4b EQ
0x4c PUSH2 0x112
0x4f JUMPI
---
0x46: V16 = 0x4f1ef286
0x4b: V17 = EQ 0x4f1ef286 V9
0x4c: V18 = 0x112
0x4f: JUMPI 0x112 V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0x1c8]
---
0x50 DUP1
0x51 PUSH4 0x5c60da1b
0x56 EQ
0x57 PUSH2 0x1c8
0x5a JUMPI
---
0x51: V19 = 0x5c60da1b
0x56: V20 = EQ 0x5c60da1b V9
0x57: V21 = 0x1c8
0x5a: JUMPI 0x1c8 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5b
[0x5b:0x65]
---
Predecessors: [0x50]
Successors: [0x66, 0x1dd]
---
0x5b DUP1
0x5c PUSH4 0xf1739cae
0x61 EQ
0x62 PUSH2 0x1dd
0x65 JUMPI
---
0x5c: V22 = 0xf1739cae
0x61: V23 = EQ 0xf1739cae V9
0x62: V24 = 0x1dd
0x65: JUMPI 0x1dd V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x66
[0x66:0x6f]
---
Predecessors: [0x0, 0x5b]
Successors: [0x210]
---
0x66 JUMPDEST
0x67 PUSH1 0x0
0x69 PUSH2 0x70
0x6c PUSH2 0x210
0x6f JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x0
0x69: V26 = 0x70
0x6c: V27 = 0x210
0x6f: JUMP 0x210
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x0, 0x70]
Exit stack: [V9, 0x0, 0x70]

================================

Block 0x70
[0x70:0x82]
---
Predecessors: [0x210]
Successors: [0x83, 0x87]
---
0x70 JUMPDEST
0x71 SWAP1
0x72 POP
0x73 PUSH1 0x1
0x75 PUSH1 0xa0
0x77 PUSH1 0x2
0x79 EXP
0x7a SUB
0x7b DUP2
0x7c AND
0x7d ISZERO
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x70: JUMPDEST 
0x73: V28 = 0x1
0x75: V29 = 0xa0
0x77: V30 = 0x2
0x79: V31 = EXP 0x2 0xa0
0x7a: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c: V33 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V34 = ISZERO V33
0x7e: V35 = ISZERO V34
0x7f: V36 = 0x87
0x82: JUMPI 0x87 V35
---
Entry stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x28e, S2, S1, V190]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x28e, S2, V190]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x70]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V37 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [S18, V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, V190]
Stack pops: 0
Stack additions: []
Exit stack: [S18, V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, V190]

================================

Block 0x87
[0x87:0xa4]
---
Predecessors: [0x70]
Successors: [0xa5, 0xa8]
---
0x87 JUMPDEST
0x88 PUSH1 0x40
0x8a MLOAD
0x8b CALLDATASIZE
0x8c PUSH1 0x0
0x8e DUP3
0x8f CALLDATACOPY
0x90 PUSH1 0x0
0x92 DUP1
0x93 CALLDATASIZE
0x94 DUP4
0x95 DUP6
0x96 GAS
0x97 DELEGATECALL
0x98 RETURNDATASIZE
0x99 DUP1
0x9a PUSH1 0x0
0x9c DUP5
0x9d RETURNDATACOPY
0x9e DUP2
0x9f DUP1
0xa0 ISZERO
0xa1 PUSH2 0xa8
0xa4 JUMPI
---
0x87: JUMPDEST 
0x88: V38 = 0x40
0x8a: V39 = M[0x40]
0x8b: V40 = CALLDATASIZE
0x8c: V41 = 0x0
0x8f: CALLDATACOPY V39 0x0 V40
0x90: V42 = 0x0
0x93: V43 = CALLDATASIZE
0x96: V44 = GAS
0x97: V45 = DELEGATECALL V44 V190 V39 V43 0x0 0x0
0x98: V46 = RETURNDATASIZE
0x9a: V47 = 0x0
0x9d: RETURNDATACOPY V39 0x0 V46
0xa0: V48 = ISZERO V45
0xa1: V49 = 0xa8
0xa4: JUMPI 0xa8 V48
---
Entry stack: [S18, V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, V190]
Stack pops: 1
Stack additions: [S0, V39, V45, V46, V45]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, S0, V39, V45, V46, V45]

================================

Block 0xa5
[0xa5:0xa7]
---
Predecessors: [0x87]
Successors: []
---
0xa5 DUP2
0xa6 DUP5
0xa7 RETURN
---
0xa7: RETURN V39 V46
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x28e, S5, S4, V39, V45, V46, V45]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x28e, S5, S4, V39, V45, V46, V45]

================================

Block 0xa8
[0xa8:0xab]
---
Predecessors: [0x87]
Successors: []
---
0xa8 JUMPDEST
0xa9 DUP2
0xaa DUP5
0xab REVERT
---
0xa8: JUMPDEST 
0xab: REVERT V39 V46
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x28e, S5, S4, V39, V45, V46, V45]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x28e, S5, S4, V39, V45, V46, V45]

================================

Block 0xac
[0xac:0xb3]
---
Predecessors: [0xd]
Successors: [0xb4, 0xb8]
---
0xac JUMPDEST
0xad CALLVALUE
0xae DUP1
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xac: JUMPDEST 
0xad: V50 = CALLVALUE
0xaf: V51 = ISZERO V50
0xb0: V52 = 0xb8
0xb3: JUMPI 0xb8 V51
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V9, V50]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xac]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V53 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V9, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V50]

================================

Block 0xb8
[0xb8:0xc0]
---
Predecessors: [0xac]
Successors: [0x233]
---
0xb8 JUMPDEST
0xb9 POP
0xba PUSH2 0xc1
0xbd PUSH2 0x233
0xc0 JUMP
---
0xb8: JUMPDEST 
0xba: V54 = 0xc1
0xbd: V55 = 0x233
0xc0: JUMP 0x233
---
Entry stack: [V9, V50]
Stack pops: 1
Stack additions: [0xc1]
Exit stack: [V9, 0xc1]

================================

Block 0xc1
[0xc1:0xdc]
---
Predecessors: [0x210, 0x233]
Successors: []
---
0xc1 JUMPDEST
0xc2 PUSH1 0x40
0xc4 DUP1
0xc5 MLOAD
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce SWAP1
0xcf SWAP3
0xd0 AND
0xd1 DUP3
0xd2 MSTORE
0xd3 MLOAD
0xd4 SWAP1
0xd5 DUP2
0xd6 SWAP1
0xd7 SUB
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP1
0xdc RETURN
---
0xc1: JUMPDEST 
0xc2: V56 = 0x40
0xc5: V57 = M[0x40]
0xc6: V58 = 0x1
0xc8: V59 = 0xa0
0xca: V60 = 0x2
0xcc: V61 = EXP 0x2 0xa0
0xcd: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0: V63 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd2: M[V57] = V63
0xd3: V64 = M[0x40]
0xd7: V65 = SUB V57 V64
0xd8: V66 = 0x20
0xda: V67 = ADD 0x20 V65
0xdc: RETURN V64 V67
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0x3a]
Successors: [0xe5, 0xe9]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf DUP1
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xdd: JUMPDEST 
0xde: V68 = CALLVALUE
0xe0: V69 = ISZERO V68
0xe1: V70 = 0xe9
0xe4: JUMPI 0xe9 V69
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V9, V68]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xdd]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V71 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V9, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V68]

================================

Block 0xe9
[0xe9:0xfb]
---
Predecessors: [0xdd]
Successors: [0xfc, 0x100]
---
0xe9 JUMPDEST
0xea POP
0xeb PUSH2 0x110
0xee PUSH1 0x4
0xf0 DUP1
0xf1 CALLDATASIZE
0xf2 SUB
0xf3 PUSH1 0x20
0xf5 DUP2
0xf6 LT
0xf7 ISZERO
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xe9: JUMPDEST 
0xeb: V72 = 0x110
0xee: V73 = 0x4
0xf1: V74 = CALLDATASIZE
0xf2: V75 = SUB V74 0x4
0xf3: V76 = 0x20
0xf6: V77 = LT V75 0x20
0xf7: V78 = ISZERO V77
0xf8: V79 = 0x100
0xfb: JUMPI 0x100 V78
---
Entry stack: [V9, V68]
Stack pops: 1
Stack additions: [0x110, 0x4, V75]
Exit stack: [V9, 0x110, 0x4, V75]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xe9]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V80 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V9, 0x110, 0x4, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x110, 0x4, V75]

================================

Block 0x100
[0x100:0x10f]
---
Predecessors: [0xe9]
Successors: [0x269]
---
0x100 JUMPDEST
0x101 POP
0x102 CALLDATALOAD
0x103 PUSH1 0x1
0x105 PUSH1 0xa0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b AND
0x10c PUSH2 0x269
0x10f JUMP
---
0x100: JUMPDEST 
0x102: V81 = CALLDATALOAD 0x4
0x103: V82 = 0x1
0x105: V83 = 0xa0
0x107: V84 = 0x2
0x109: V85 = EXP 0x2 0xa0
0x10a: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x10c: V88 = 0x269
0x10f: JUMP 0x269
---
Entry stack: [V9, 0x110, 0x4, V75]
Stack pops: 2
Stack additions: [V87]
Exit stack: [V9, 0x110, V87]

================================

Block 0x110
[0x110:0x111]
---
Predecessors: [0x28e, 0x36a]
Successors: []
---
0x110 JUMPDEST
0x111 STOP
---
0x110: JUMPDEST 
0x111: STOP 
---
Entry stack: [S30, V9, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S30, V9, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x112
[0x112:0x123]
---
Predecessors: [0x45]
Successors: [0x124, 0x128]
---
0x112 JUMPDEST
0x113 PUSH2 0x110
0x116 PUSH1 0x4
0x118 DUP1
0x119 CALLDATASIZE
0x11a SUB
0x11b PUSH1 0x40
0x11d DUP2
0x11e LT
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x112: JUMPDEST 
0x113: V89 = 0x110
0x116: V90 = 0x4
0x119: V91 = CALLDATASIZE
0x11a: V92 = SUB V91 0x4
0x11b: V93 = 0x40
0x11e: V94 = LT V92 0x40
0x11f: V95 = ISZERO V94
0x120: V96 = 0x128
0x123: JUMPI 0x128 V95
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x110, 0x4, V92]
Exit stack: [V9, 0x110, 0x4, V92]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x112]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V97 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V9, 0x110, 0x4, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x110, 0x4, V92]

================================

Block 0x128
[0x128:0x14e]
---
Predecessors: [0x112]
Successors: [0x14f, 0x153]
---
0x128 JUMPDEST
0x129 PUSH1 0x1
0x12b PUSH1 0xa0
0x12d PUSH1 0x2
0x12f EXP
0x130 SUB
0x131 DUP3
0x132 CALLDATALOAD
0x133 AND
0x134 SWAP2
0x135 SWAP1
0x136 DUP2
0x137 ADD
0x138 SWAP1
0x139 PUSH1 0x40
0x13b DUP2
0x13c ADD
0x13d PUSH1 0x20
0x13f DUP3
0x140 ADD
0x141 CALLDATALOAD
0x142 PUSH5 0x100000000
0x148 DUP2
0x149 GT
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0x128: JUMPDEST 
0x129: V98 = 0x1
0x12b: V99 = 0xa0
0x12d: V100 = 0x2
0x12f: V101 = EXP 0x2 0xa0
0x130: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V103 = CALLDATALOAD 0x4
0x133: V104 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x137: V105 = ADD 0x4 V92
0x139: V106 = 0x40
0x13c: V107 = ADD 0x4 0x40
0x13d: V108 = 0x20
0x140: V109 = ADD 0x4 0x20
0x141: V110 = CALLDATALOAD 0x24
0x142: V111 = 0x100000000
0x149: V112 = GT V110 0x100000000
0x14a: V113 = ISZERO V112
0x14b: V114 = 0x153
0x14e: JUMPI 0x153 V113
---
Entry stack: [V9, 0x110, 0x4, V92]
Stack pops: 2
Stack additions: [V104, V105, S1, 0x44, V110]
Exit stack: [V9, 0x110, V104, V105, 0x4, 0x44, V110]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x128]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V115 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V9, 0x110, V104, V105, 0x4, 0x44, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x110, V104, V105, 0x4, 0x44, V110]

================================

Block 0x153
[0x153:0x160]
---
Predecessors: [0x128]
Successors: [0x161, 0x165]
---
0x153 JUMPDEST
0x154 DUP3
0x155 ADD
0x156 DUP4
0x157 PUSH1 0x20
0x159 DUP3
0x15a ADD
0x15b GT
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x153: JUMPDEST 
0x155: V116 = ADD 0x4 V110
0x157: V117 = 0x20
0x15a: V118 = ADD V116 0x20
0x15b: V119 = GT V118 V105
0x15c: V120 = ISZERO V119
0x15d: V121 = 0x165
0x160: JUMPI 0x165 V120
---
Entry stack: [V9, 0x110, V104, V105, 0x4, 0x44, V110]
Stack pops: 4
Stack additions: [S3, S2, S1, V116]
Exit stack: [V9, 0x110, V104, V105, 0x4, 0x44, V116]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x153]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V122 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V9, 0x110, V104, V105, 0x4, 0x44, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x110, V104, V105, 0x4, 0x44, V116]

================================

Block 0x165
[0x165:0x182]
---
Predecessors: [0x153]
Successors: [0x183, 0x187]
---
0x165 JUMPDEST
0x166 DUP1
0x167 CALLDATALOAD
0x168 SWAP1
0x169 PUSH1 0x20
0x16b ADD
0x16c SWAP2
0x16d DUP5
0x16e PUSH1 0x1
0x170 DUP4
0x171 MUL
0x172 DUP5
0x173 ADD
0x174 GT
0x175 PUSH5 0x100000000
0x17b DUP4
0x17c GT
0x17d OR
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x165: JUMPDEST 
0x167: V123 = CALLDATALOAD V116
0x169: V124 = 0x20
0x16b: V125 = ADD 0x20 V116
0x16e: V126 = 0x1
0x171: V127 = MUL V123 0x1
0x173: V128 = ADD V125 V127
0x174: V129 = GT V128 V105
0x175: V130 = 0x100000000
0x17c: V131 = GT V123 0x100000000
0x17d: V132 = OR V131 V129
0x17e: V133 = ISZERO V132
0x17f: V134 = 0x187
0x182: JUMPI 0x187 V133
---
Entry stack: [V9, 0x110, V104, V105, 0x4, 0x44, V116]
Stack pops: 4
Stack additions: [S3, S2, V125, V123, S1]
Exit stack: [V9, 0x110, V104, V105, 0x4, V125, V123, 0x44]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x165]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V135 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V9, 0x110, V104, V105, 0x4, V125, V123, 0x44]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x110, V104, V105, 0x4, V125, V123, 0x44]

================================

Block 0x187
[0x187:0x1c7]
---
Predecessors: [0x165]
Successors: [0x291]
---
0x187 JUMPDEST
0x188 SWAP2
0x189 SWAP1
0x18a DUP1
0x18b DUP1
0x18c PUSH1 0x1f
0x18e ADD
0x18f PUSH1 0x20
0x191 DUP1
0x192 SWAP2
0x193 DIV
0x194 MUL
0x195 PUSH1 0x20
0x197 ADD
0x198 PUSH1 0x40
0x19a MLOAD
0x19b SWAP1
0x19c DUP2
0x19d ADD
0x19e PUSH1 0x40
0x1a0 MSTORE
0x1a1 DUP1
0x1a2 SWAP4
0x1a3 SWAP3
0x1a4 SWAP2
0x1a5 SWAP1
0x1a6 DUP2
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac DUP4
0x1ad DUP4
0x1ae DUP1
0x1af DUP3
0x1b0 DUP5
0x1b1 CALLDATACOPY
0x1b2 PUSH1 0x0
0x1b4 SWAP3
0x1b5 ADD
0x1b6 SWAP2
0x1b7 SWAP1
0x1b8 SWAP2
0x1b9 MSTORE
0x1ba POP
0x1bb SWAP3
0x1bc SWAP6
0x1bd POP
0x1be PUSH2 0x291
0x1c1 SWAP5
0x1c2 POP
0x1c3 POP
0x1c4 POP
0x1c5 POP
0x1c6 POP
0x1c7 JUMP
---
0x187: JUMPDEST 
0x18c: V136 = 0x1f
0x18e: V137 = ADD 0x1f V123
0x18f: V138 = 0x20
0x193: V139 = DIV V137 0x20
0x194: V140 = MUL V139 0x20
0x195: V141 = 0x20
0x197: V142 = ADD 0x20 V140
0x198: V143 = 0x40
0x19a: V144 = M[0x40]
0x19d: V145 = ADD V144 V142
0x19e: V146 = 0x40
0x1a0: M[0x40] = V145
0x1a8: M[V144] = V123
0x1a9: V147 = 0x20
0x1ab: V148 = ADD 0x20 V144
0x1b1: CALLDATACOPY V148 V125 V123
0x1b2: V149 = 0x0
0x1b5: V150 = ADD V148 V123
0x1b9: M[V150] = 0x0
0x1be: V151 = 0x291
0x1c7: JUMP 0x291
---
Entry stack: [V9, 0x110, V104, V105, 0x4, V125, V123, 0x44]
Stack pops: 5
Stack additions: [V144]
Exit stack: [V9, 0x110, V104, V144]

================================

Block 0x1c8
[0x1c8:0x1cf]
---
Predecessors: [0x50]
Successors: [0x1d0, 0x1d4]
---
0x1c8 JUMPDEST
0x1c9 CALLVALUE
0x1ca DUP1
0x1cb ISZERO
0x1cc PUSH2 0x1d4
0x1cf JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V152 = CALLVALUE
0x1cb: V153 = ISZERO V152
0x1cc: V154 = 0x1d4
0x1cf: JUMPI 0x1d4 V153
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V152]
Exit stack: [V9, V152]

================================

Block 0x1d0
[0x1d0:0x1d3]
---
Predecessors: [0x1c8]
Successors: []
---
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 REVERT
---
0x1d0: V155 = 0x0
0x1d3: REVERT 0x0 0x0
---
Entry stack: [V9, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V152]

================================

Block 0x1d4
[0x1d4:0x1dc]
---
Predecessors: [0x1c8]
Successors: [0x210]
---
0x1d4 JUMPDEST
0x1d5 POP
0x1d6 PUSH2 0xc1
0x1d9 PUSH2 0x210
0x1dc JUMP
---
0x1d4: JUMPDEST 
0x1d6: V156 = 0xc1
0x1d9: V157 = 0x210
0x1dc: JUMP 0x210
---
Entry stack: [V9, V152]
Stack pops: 1
Stack additions: [0xc1]
Exit stack: [V9, 0xc1]

================================

Block 0x1dd
[0x1dd:0x1e4]
---
Predecessors: [0x5b]
Successors: [0x1e5, 0x1e9]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df DUP1
0x1e0 ISZERO
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V158 = CALLVALUE
0x1e0: V159 = ISZERO V158
0x1e1: V160 = 0x1e9
0x1e4: JUMPI 0x1e9 V159
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V9, V158]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V161 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V9, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V158]

================================

Block 0x1e9
[0x1e9:0x1fb]
---
Predecessors: [0x1dd]
Successors: [0x1fc, 0x200]
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb PUSH2 0x110
0x1ee PUSH1 0x4
0x1f0 DUP1
0x1f1 CALLDATASIZE
0x1f2 SUB
0x1f3 PUSH1 0x20
0x1f5 DUP2
0x1f6 LT
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1e9: JUMPDEST 
0x1eb: V162 = 0x110
0x1ee: V163 = 0x4
0x1f1: V164 = CALLDATASIZE
0x1f2: V165 = SUB V164 0x4
0x1f3: V166 = 0x20
0x1f6: V167 = LT V165 0x20
0x1f7: V168 = ISZERO V167
0x1f8: V169 = 0x200
0x1fb: JUMPI 0x200 V168
---
Entry stack: [V9, V158]
Stack pops: 1
Stack additions: [0x110, 0x4, V165]
Exit stack: [V9, 0x110, 0x4, V165]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1e9]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V170 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V9, 0x110, 0x4, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x110, 0x4, V165]

================================

Block 0x200
[0x200:0x20f]
---
Predecessors: [0x1e9]
Successors: [0x36f]
---
0x200 JUMPDEST
0x201 POP
0x202 CALLDATALOAD
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b AND
0x20c PUSH2 0x36f
0x20f JUMP
---
0x200: JUMPDEST 
0x202: V171 = CALLDATALOAD 0x4
0x203: V172 = 0x1
0x205: V173 = 0xa0
0x207: V174 = 0x2
0x209: V175 = EXP 0x2 0xa0
0x20a: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x20c: V178 = 0x36f
0x20f: JUMP 0x36f
---
Entry stack: [V9, 0x110, 0x4, V165]
Stack pops: 2
Stack additions: [V177]
Exit stack: [V9, 0x110, V177]

================================

Block 0x210
[0x210:0x232]
---
Predecessors: [0x66, 0x1d4, 0x3f4]
Successors: [0x70, 0xc1, 0x3fe]
---
0x210 JUMPDEST
0x211 PUSH1 0x0
0x213 DUP1
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 DUP1
0x219 PUSH2 0x4b2
0x21c PUSH1 0x21
0x21e SWAP2
0x21f CODECOPY
0x220 PUSH1 0x40
0x222 MLOAD
0x223 SWAP1
0x224 DUP2
0x225 SWAP1
0x226 SUB
0x227 PUSH1 0x21
0x229 ADD
0x22a SWAP1
0x22b SHA3
0x22c SLOAD
0x22d SWAP4
0x22e SWAP3
0x22f POP
0x230 POP
0x231 POP
0x232 JUMP
---
0x210: JUMPDEST 
0x211: V179 = 0x0
0x214: V180 = 0x40
0x216: V181 = M[0x40]
0x219: V182 = 0x4b2
0x21c: V183 = 0x21
0x21f: CODECOPY V181 0x4b2 0x21
0x220: V184 = 0x40
0x222: V185 = M[0x40]
0x226: V186 = SUB V181 V185
0x227: V187 = 0x21
0x229: V188 = ADD 0x21 V186
0x22b: V189 = SHA3 V185 V188
0x22c: V190 = S[V189]
0x232: JUMP {0x70, 0xc1, 0x3fe}
---
Entry stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x28e, S2, S1, {0x70, 0xc1, 0x3fe}]
Stack pops: 1
Stack additions: [V190]
Exit stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x28e, S2, S1, V190]

================================

Block 0x233
[0x233:0x268]
---
Predecessors: [0xb8, 0x269, 0x291, 0x36f, 0x3a0]
Successors: [0xc1, 0x271, 0x299, 0x377, 0x3c9]
---
0x233 JUMPDEST
0x234 PUSH1 0x40
0x236 DUP1
0x237 MLOAD
0x238 PUSH32 0x636f6d2e64336c65646765722e70726f78792e6f776e65720000000000000000
0x259 DUP2
0x25a MSTORE
0x25b SWAP1
0x25c MLOAD
0x25d SWAP1
0x25e DUP2
0x25f SWAP1
0x260 SUB
0x261 PUSH1 0x18
0x263 ADD
0x264 SWAP1
0x265 SHA3
0x266 SLOAD
0x267 SWAP1
0x268 JUMP
---
0x233: JUMPDEST 
0x234: V191 = 0x40
0x237: V192 = M[0x40]
0x238: V193 = 0x636f6d2e64336c65646765722e70726f78792e6f776e65720000000000000000
0x25a: M[V192] = 0x636f6d2e64336c65646765722e70726f78792e6f776e65720000000000000000
0x25c: V194 = M[0x40]
0x260: V195 = SUB V192 V194
0x261: V196 = 0x18
0x263: V197 = ADD 0x18 V195
0x265: V198 = SHA3 V194 V197
0x266: V199 = S[V198]
0x268: JUMP {0xc1, 0x271, 0x299, 0x377, 0x3c9}
---
Entry stack: [S36, V9, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0xc1, 0x271, 0x299, 0x377, 0x3c9}]
Stack pops: 1
Stack additions: [V199]
Exit stack: [S36, V9, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V199]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x100, 0x2ad]
Successors: [0x233]
---
0x269 JUMPDEST
0x26a PUSH2 0x271
0x26d PUSH2 0x233
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V200 = 0x271
0x26d: V201 = 0x233
0x270: JUMP 0x233
---
Entry stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x110, 0x2b6}, S0]
Stack pops: 0
Stack additions: [0x271]
Exit stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x110, 0x2b6}, S0, 0x271]

================================

Block 0x271
[0x271:0x280]
---
Predecessors: [0x233]
Successors: [0x281, 0x285]
---
0x271 JUMPDEST
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a AND
0x27b CALLER
0x27c EQ
0x27d PUSH2 0x285
0x280 JUMPI
---
0x271: JUMPDEST 
0x272: V202 = 0x1
0x274: V203 = 0xa0
0x276: V204 = 0x2
0x278: V205 = EXP 0x2 0xa0
0x279: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x27b: V208 = CALLER
0x27c: V209 = EQ V208 V207
0x27d: V210 = 0x285
0x280: JUMPI 0x285 V209
---
Entry stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V199]
Stack pops: 1
Stack additions: []
Exit stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x281
[0x281:0x284]
---
Predecessors: [0x271]
Successors: []
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
---
0x281: V211 = 0x0
0x284: REVERT 0x0 0x0
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x285
[0x285:0x28d]
---
Predecessors: [0x271]
Successors: [0x3f4]
---
0x285 JUMPDEST
0x286 PUSH2 0x28e
0x289 DUP2
0x28a PUSH2 0x3f4
0x28d JUMP
---
0x285: JUMPDEST 
0x286: V212 = 0x28e
0x28a: V213 = 0x3f4
0x28d: JUMP 0x3f4
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x28e, S0]
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x28e, S0]

================================

Block 0x28e
[0x28e:0x290]
---
Predecessors: [0x422, 0x45a]
Successors: [0x110, 0x2b6]
---
0x28e JUMPDEST
0x28f POP
0x290 JUMP
---
0x28e: JUMPDEST 
0x290: JUMP S1
---
Entry stack: [S33, V9, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S33, V9, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x291
[0x291:0x298]
---
Predecessors: [0x187]
Successors: [0x233]
---
0x291 JUMPDEST
0x292 PUSH2 0x299
0x295 PUSH2 0x233
0x298 JUMP
---
0x291: JUMPDEST 
0x292: V214 = 0x299
0x295: V215 = 0x233
0x298: JUMP 0x233
---
Entry stack: [V9, 0x110, V104, V144]
Stack pops: 0
Stack additions: [0x299]
Exit stack: [V9, 0x110, V104, V144, 0x299]

================================

Block 0x299
[0x299:0x2a8]
---
Predecessors: [0x233]
Successors: [0x2a9, 0x2ad]
---
0x299 JUMPDEST
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 AND
0x2a3 CALLER
0x2a4 EQ
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x299: JUMPDEST 
0x29a: V216 = 0x1
0x29c: V217 = 0xa0
0x29e: V218 = 0x2
0x2a0: V219 = EXP 0x2 0xa0
0x2a1: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a2: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x2a3: V222 = CALLER
0x2a4: V223 = EQ V222 V221
0x2a5: V224 = 0x2ad
0x2a8: JUMPI 0x2ad V223
---
Entry stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V199]
Stack pops: 1
Stack additions: []
Exit stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x299]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V225 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2ad
[0x2ad:0x2b5]
---
Predecessors: [0x299]
Successors: [0x269]
---
0x2ad JUMPDEST
0x2ae PUSH2 0x2b6
0x2b1 DUP3
0x2b2 PUSH2 0x269
0x2b5 JUMP
---
0x2ad: JUMPDEST 
0x2ae: V226 = 0x2b6
0x2b2: V227 = 0x269
0x2b5: JUMP 0x269
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x2b6, S1]
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x2b6, S1]

================================

Block 0x2b6
[0x2b6:0x2d3]
---
Predecessors: [0x28e, 0x36a]
Successors: [0x2d4]
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x0
0x2b9 ADDRESS
0x2ba PUSH1 0x1
0x2bc PUSH1 0xa0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 SUB
0x2c2 AND
0x2c3 CALLVALUE
0x2c4 DUP4
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 DUP3
0x2ca DUP1
0x2cb MLOAD
0x2cc SWAP1
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 SWAP1
0x2d1 DUP1
0x2d2 DUP4
0x2d3 DUP4
---
0x2b6: JUMPDEST 
0x2b7: V228 = 0x0
0x2b9: V229 = ADDRESS
0x2ba: V230 = 0x1
0x2bc: V231 = 0xa0
0x2be: V232 = 0x2
0x2c0: V233 = EXP 0x2 0xa0
0x2c1: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c2: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x2c3: V236 = CALLVALUE
0x2c5: V237 = 0x40
0x2c7: V238 = M[0x40]
0x2cb: V239 = M[S0]
0x2cd: V240 = 0x20
0x2cf: V241 = ADD 0x20 S0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V235, V236, S0, V238, V238, V241, V239, V239, V238, V241]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V235, V236, S0, V238, V238, V241, V239, V239, V238, V241]

================================

Block 0x2d4
[0x2d4:0x2dc]
---
Predecessors: [0x2b6, 0x2dd]
Successors: [0x2dd, 0x2f3]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x20
0x2d7 DUP4
0x2d8 LT
0x2d9 PUSH2 0x2f3
0x2dc JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V242 = 0x20
0x2d8: V243 = LT S2 0x20
0x2d9: V244 = 0x2f3
0x2dc: JUMPI 0x2f3 V243
---
Entry stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, 0x0, V235, V236, S7, V238, V238, V241, V239, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, 0x0, V235, V236, S7, V238, V238, V241, V239, S2, S1, S0]

================================

Block 0x2dd
[0x2dd:0x2f2]
---
Predecessors: [0x2d4]
Successors: [0x2d4]
---
0x2dd DUP1
0x2de MLOAD
0x2df DUP3
0x2e0 MSTORE
0x2e1 PUSH1 0x1f
0x2e3 NOT
0x2e4 SWAP1
0x2e5 SWAP3
0x2e6 ADD
0x2e7 SWAP2
0x2e8 PUSH1 0x20
0x2ea SWAP2
0x2eb DUP3
0x2ec ADD
0x2ed SWAP2
0x2ee ADD
0x2ef PUSH2 0x2d4
0x2f2 JUMP
---
0x2de: V245 = M[S0]
0x2e0: M[S1] = V245
0x2e1: V246 = 0x1f
0x2e3: V247 = NOT 0x1f
0x2e6: V248 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2e8: V249 = 0x20
0x2ec: V250 = ADD 0x20 S1
0x2ee: V251 = ADD 0x20 S0
0x2ef: V252 = 0x2d4
0x2f2: JUMP 0x2d4
---
Entry stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, 0x0, V235, V236, S7, V238, V238, V241, V239, S2, S1, S0]
Stack pops: 3
Stack additions: [V248, V250, V251]
Exit stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, 0x0, V235, V236, S7, V238, V238, V241, V239, V248, V250, V251]

================================

Block 0x2f3
[0x2f3:0x333]
---
Predecessors: [0x2d4]
Successors: [0x334, 0x355]
---
0x2f3 JUMPDEST
0x2f4 PUSH1 0x1
0x2f6 DUP4
0x2f7 PUSH1 0x20
0x2f9 SUB
0x2fa PUSH2 0x100
0x2fd EXP
0x2fe SUB
0x2ff DUP1
0x300 NOT
0x301 DUP3
0x302 MLOAD
0x303 AND
0x304 DUP2
0x305 DUP5
0x306 MLOAD
0x307 AND
0x308 DUP1
0x309 DUP3
0x30a OR
0x30b DUP6
0x30c MSTORE
0x30d POP
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 POP
0x313 SWAP1
0x314 POP
0x315 ADD
0x316 SWAP2
0x317 POP
0x318 POP
0x319 PUSH1 0x0
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f DUP4
0x320 SUB
0x321 DUP2
0x322 DUP6
0x323 DUP8
0x324 GAS
0x325 CALL
0x326 SWAP3
0x327 POP
0x328 POP
0x329 POP
0x32a RETURNDATASIZE
0x32b DUP1
0x32c PUSH1 0x0
0x32e DUP2
0x32f EQ
0x330 PUSH2 0x355
0x333 JUMPI
---
0x2f3: JUMPDEST 
0x2f4: V253 = 0x1
0x2f7: V254 = 0x20
0x2f9: V255 = SUB 0x20 S2
0x2fa: V256 = 0x100
0x2fd: V257 = EXP 0x100 V255
0x2fe: V258 = SUB V257 0x1
0x300: V259 = NOT V258
0x302: V260 = M[S0]
0x303: V261 = AND V260 V259
0x306: V262 = M[S1]
0x307: V263 = AND V262 V258
0x30a: V264 = OR V261 V263
0x30c: M[S1] = V264
0x315: V265 = ADD V239 V238
0x319: V266 = 0x0
0x31b: V267 = 0x40
0x31d: V268 = M[0x40]
0x320: V269 = SUB V265 V268
0x324: V270 = GAS
0x325: V271 = CALL V270 V235 V236 V268 V269 V268 0x0
0x32a: V272 = RETURNDATASIZE
0x32c: V273 = 0x0
0x32f: V274 = EQ V272 0x0
0x330: V275 = 0x355
0x333: JUMPI 0x355 V274
---
Entry stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, 0x0, V235, V236, S7, V238, V238, V241, V239, S2, S1, S0]
Stack pops: 10
Stack additions: [V271, V272, V272]
Exit stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, 0x0, V271, V272, V272]

================================

Block 0x334
[0x334:0x354]
---
Predecessors: [0x2f3]
Successors: [0x35a]
---
0x334 PUSH1 0x40
0x336 MLOAD
0x337 SWAP2
0x338 POP
0x339 PUSH1 0x1f
0x33b NOT
0x33c PUSH1 0x3f
0x33e RETURNDATASIZE
0x33f ADD
0x340 AND
0x341 DUP3
0x342 ADD
0x343 PUSH1 0x40
0x345 MSTORE
0x346 RETURNDATASIZE
0x347 DUP3
0x348 MSTORE
0x349 RETURNDATASIZE
0x34a PUSH1 0x0
0x34c PUSH1 0x20
0x34e DUP5
0x34f ADD
0x350 RETURNDATACOPY
0x351 PUSH2 0x35a
0x354 JUMP
---
0x334: V276 = 0x40
0x336: V277 = M[0x40]
0x339: V278 = 0x1f
0x33b: V279 = NOT 0x1f
0x33c: V280 = 0x3f
0x33e: V281 = RETURNDATASIZE
0x33f: V282 = ADD V281 0x3f
0x340: V283 = AND V282 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x342: V284 = ADD V277 V283
0x343: V285 = 0x40
0x345: M[0x40] = V284
0x346: V286 = RETURNDATASIZE
0x348: M[V277] = V286
0x349: V287 = RETURNDATASIZE
0x34a: V288 = 0x0
0x34c: V289 = 0x20
0x34f: V290 = ADD V277 0x20
0x350: RETURNDATACOPY V290 0x0 V287
0x351: V291 = 0x35a
0x354: JUMP 0x35a
---
Entry stack: [S12, V9, S10, S9, S8, S7, S6, S5, S4, 0x0, V271, V272, V272]
Stack pops: 2
Stack additions: [V277, S0]
Exit stack: [S12, V9, S10, S9, S8, S7, S6, S5, S4, 0x0, V271, V277, V272]

================================

Block 0x355
[0x355:0x359]
---
Predecessors: [0x2f3]
Successors: [0x35a]
---
0x355 JUMPDEST
0x356 PUSH1 0x60
0x358 SWAP2
0x359 POP
---
0x355: JUMPDEST 
0x356: V292 = 0x60
---
Entry stack: [S12, V9, S10, S9, S8, S7, S6, S5, S4, 0x0, V271, V272, V272]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [S12, V9, S10, S9, S8, S7, S6, S5, S4, 0x0, V271, 0x60, V272]

================================

Block 0x35a
[0x35a:0x365]
---
Predecessors: [0x334, 0x355]
Successors: [0x366, 0x36a]
---
0x35a JUMPDEST
0x35b POP
0x35c POP
0x35d SWAP1
0x35e POP
0x35f DUP1
0x360 ISZERO
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x35a: JUMPDEST 
0x360: V293 = ISZERO V271
0x361: V294 = ISZERO V293
0x362: V295 = 0x36a
0x365: JUMPI 0x36a V294
---
Entry stack: [S12, V9, S10, S9, S8, S7, S6, S5, S4, 0x0, V271, S1, V272]
Stack pops: 4
Stack additions: [S2]
Exit stack: [S12, V9, S10, S9, S8, S7, S6, S5, S4, V271]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x35a]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V296 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [S9, V9, S7, S6, S5, S4, S3, S2, S1, V271]
Stack pops: 0
Stack additions: []
Exit stack: [S9, V9, S7, S6, S5, S4, S3, S2, S1, V271]

================================

Block 0x36a
[0x36a:0x36e]
---
Predecessors: [0x35a]
Successors: [0x110, 0x2b6]
---
0x36a JUMPDEST
0x36b POP
0x36c POP
0x36d POP
0x36e JUMP
---
0x36a: JUMPDEST 
0x36e: JUMP S3
---
Entry stack: [S9, V9, S7, S6, S5, S4, S3, S2, S1, V271]
Stack pops: 4
Stack additions: []
Exit stack: [S9, V9, S7, S6, S5, S4]

================================

Block 0x36f
[0x36f:0x376]
---
Predecessors: [0x200]
Successors: [0x233]
---
0x36f JUMPDEST
0x370 PUSH2 0x377
0x373 PUSH2 0x233
0x376 JUMP
---
0x36f: JUMPDEST 
0x370: V297 = 0x377
0x373: V298 = 0x233
0x376: JUMP 0x233
---
Entry stack: [V9, 0x110, V177]
Stack pops: 0
Stack additions: [0x377]
Exit stack: [V9, 0x110, V177, 0x377]

================================

Block 0x377
[0x377:0x386]
---
Predecessors: [0x233]
Successors: [0x387, 0x38b]
---
0x377 JUMPDEST
0x378 PUSH1 0x1
0x37a PUSH1 0xa0
0x37c PUSH1 0x2
0x37e EXP
0x37f SUB
0x380 AND
0x381 CALLER
0x382 EQ
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x377: JUMPDEST 
0x378: V299 = 0x1
0x37a: V300 = 0xa0
0x37c: V301 = 0x2
0x37e: V302 = EXP 0x2 0xa0
0x37f: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x381: V305 = CALLER
0x382: V306 = EQ V305 V304
0x383: V307 = 0x38b
0x386: JUMPI 0x38b V306
---
Entry stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V199]
Stack pops: 1
Stack additions: []
Exit stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x377]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V308 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x38b
[0x38b:0x39b]
---
Predecessors: [0x377]
Successors: [0x39c, 0x3a0]
---
0x38b JUMPDEST
0x38c PUSH1 0x1
0x38e PUSH1 0xa0
0x390 PUSH1 0x2
0x392 EXP
0x393 SUB
0x394 DUP2
0x395 AND
0x396 ISZERO
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x38b: JUMPDEST 
0x38c: V309 = 0x1
0x38e: V310 = 0xa0
0x390: V311 = 0x2
0x392: V312 = EXP 0x2 0xa0
0x393: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V314 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x396: V315 = ISZERO V314
0x397: V316 = ISZERO V315
0x398: V317 = 0x3a0
0x39b: JUMPI 0x3a0 V316
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x38b]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V318 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3a0
[0x3a0:0x3c8]
---
Predecessors: [0x38b]
Successors: [0x233]
---
0x3a0 JUMPDEST
0x3a1 PUSH32 0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9
0x3c2 PUSH2 0x3c9
0x3c5 PUSH2 0x233
0x3c8 JUMP
---
0x3a0: JUMPDEST 
0x3a1: V319 = 0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9
0x3c2: V320 = 0x3c9
0x3c5: V321 = 0x233
0x3c8: JUMP 0x233
---
Entry stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9, 0x3c9]
Exit stack: [S34, V9, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9, 0x3c9]

================================

Block 0x3c9
[0x3c9:0x3f3]
---
Predecessors: [0x233]
Successors: [0x45a]
---
0x3c9 JUMPDEST
0x3ca PUSH1 0x40
0x3cc DUP1
0x3cd MLOAD
0x3ce PUSH1 0x1
0x3d0 PUSH1 0xa0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 SUB
0x3d6 SWAP3
0x3d7 DUP4
0x3d8 AND
0x3d9 DUP2
0x3da MSTORE
0x3db SWAP2
0x3dc DUP5
0x3dd AND
0x3de PUSH1 0x20
0x3e0 DUP4
0x3e1 ADD
0x3e2 MSTORE
0x3e3 DUP1
0x3e4 MLOAD
0x3e5 SWAP2
0x3e6 DUP3
0x3e7 SWAP1
0x3e8 SUB
0x3e9 ADD
0x3ea SWAP1
0x3eb LOG1
0x3ec PUSH2 0x28e
0x3ef DUP2
0x3f0 PUSH2 0x45a
0x3f3 JUMP
---
0x3c9: JUMPDEST 
0x3ca: V322 = 0x40
0x3cd: V323 = M[0x40]
0x3ce: V324 = 0x1
0x3d0: V325 = 0xa0
0x3d2: V326 = 0x2
0x3d4: V327 = EXP 0x2 0xa0
0x3d5: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x3da: M[V323] = V329
0x3dd: V330 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V331 = 0x20
0x3e1: V332 = ADD V323 0x20
0x3e2: M[V332] = V330
0x3e4: V333 = M[0x40]
0x3e8: V334 = SUB V323 V333
0x3e9: V335 = ADD V334 0x40
0x3eb: LOG V333 V335 S1
0x3ec: V336 = 0x28e
0x3f0: V337 = 0x45a
0x3f3: JUMP 0x45a
---
Entry stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V199]
Stack pops: 3
Stack additions: [S2, 0x28e, S2]
Exit stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x28e, S2]

================================

Block 0x3f4
[0x3f4:0x3fd]
---
Predecessors: [0x285]
Successors: [0x210]
---
0x3f4 JUMPDEST
0x3f5 PUSH1 0x0
0x3f7 PUSH2 0x3fe
0x3fa PUSH2 0x210
0x3fd JUMP
---
0x3f4: JUMPDEST 
0x3f5: V338 = 0x0
0x3f7: V339 = 0x3fe
0x3fa: V340 = 0x210
0x3fd: JUMP 0x210
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x28e, S0]
Stack pops: 0
Stack additions: [0x0, 0x3fe]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x28e, S0, 0x0, 0x3fe]

================================

Block 0x3fe
[0x3fe:0x414]
---
Predecessors: [0x210]
Successors: [0x415, 0x419]
---
0x3fe JUMPDEST
0x3ff SWAP1
0x400 POP
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 DUP1
0x40a DUP3
0x40b AND
0x40c SWAP1
0x40d DUP4
0x40e AND
0x40f EQ
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x3fe: JUMPDEST 
0x401: V341 = 0x1
0x403: V342 = 0xa0
0x405: V343 = 0x2
0x407: V344 = EXP 0x2 0xa0
0x408: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40b: V346 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V347 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V348 = EQ V347 V346
0x410: V349 = ISZERO V348
0x411: V350 = 0x419
0x414: JUMPI 0x419 V349
---
Entry stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x28e, S2, S1, V190]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [S19, V9, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x28e, S2, V190]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x3fe]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V351 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [S18, V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, V190]
Stack pops: 0
Stack additions: []
Exit stack: [S18, V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, V190]

================================

Block 0x419
[0x419:0x421]
---
Predecessors: [0x3fe]
Successors: [0x48f]
---
0x419 JUMPDEST
0x41a PUSH2 0x422
0x41d DUP3
0x41e PUSH2 0x48f
0x421 JUMP
---
0x419: JUMPDEST 
0x41a: V352 = 0x422
0x41e: V353 = 0x48f
0x421: JUMP 0x48f
---
Entry stack: [S18, V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, V190]
Stack pops: 2
Stack additions: [S1, S0, 0x422, S1]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, S0, 0x422, S1]

================================

Block 0x422
[0x422:0x459]
---
Predecessors: [0x48f]
Successors: [0x28e]
---
0x422 JUMPDEST
0x423 PUSH1 0x40
0x425 MLOAD
0x426 PUSH1 0x1
0x428 PUSH1 0xa0
0x42a PUSH1 0x2
0x42c EXP
0x42d SUB
0x42e DUP4
0x42f AND
0x430 SWAP1
0x431 PUSH32 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b
0x452 SWAP1
0x453 PUSH1 0x0
0x455 SWAP1
0x456 LOG2
0x457 POP
0x458 POP
0x459 JUMP
---
0x422: JUMPDEST 
0x423: V354 = 0x40
0x425: V355 = M[0x40]
0x426: V356 = 0x1
0x428: V357 = 0xa0
0x42a: V358 = 0x2
0x42c: V359 = EXP 0x2 0xa0
0x42d: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42f: V361 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x431: V362 = 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b
0x453: V363 = 0x0
0x456: LOG V355 0x0 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b V361
0x459: JUMP 0x28e
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x28e, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V9, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x45a
[0x45a:0x48e]
---
Predecessors: [0x3c9]
Successors: [0x28e]
---
0x45a JUMPDEST
0x45b PUSH1 0x40
0x45d DUP1
0x45e MLOAD
0x45f PUSH32 0x636f6d2e64336c65646765722e70726f78792e6f776e65720000000000000000
0x480 DUP2
0x481 MSTORE
0x482 SWAP1
0x483 MLOAD
0x484 SWAP1
0x485 DUP2
0x486 SWAP1
0x487 SUB
0x488 PUSH1 0x18
0x48a ADD
0x48b SWAP1
0x48c SHA3
0x48d SSTORE
0x48e JUMP
---
0x45a: JUMPDEST 
0x45b: V364 = 0x40
0x45e: V365 = M[0x40]
0x45f: V366 = 0x636f6d2e64336c65646765722e70726f78792e6f776e65720000000000000000
0x481: M[V365] = 0x636f6d2e64336c65646765722e70726f78792e6f776e65720000000000000000
0x483: V367 = M[0x40]
0x487: V368 = SUB V365 V367
0x488: V369 = 0x18
0x48a: V370 = ADD 0x18 V368
0x48c: V371 = SHA3 V367 V370
0x48d: S[V371] = S0
0x48e: JUMP 0x28e
---
Entry stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x28e, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S35, V9, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x48f
[0x48f:0x4b0]
---
Predecessors: [0x419]
Successors: [0x422]
---
0x48f JUMPDEST
0x490 PUSH1 0x0
0x492 PUSH1 0x40
0x494 MLOAD
0x495 DUP1
0x496 DUP1
0x497 PUSH2 0x4b2
0x49a PUSH1 0x21
0x49c SWAP2
0x49d CODECOPY
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 SWAP1
0x4a2 DUP2
0x4a3 SWAP1
0x4a4 SUB
0x4a5 PUSH1 0x21
0x4a7 ADD
0x4a8 SWAP1
0x4a9 SHA3
0x4aa SWAP3
0x4ab SWAP1
0x4ac SWAP3
0x4ad SSTORE
0x4ae POP
0x4af POP
0x4b0 JUMP
---
0x48f: JUMPDEST 
0x490: V372 = 0x0
0x492: V373 = 0x40
0x494: V374 = M[0x40]
0x497: V375 = 0x4b2
0x49a: V376 = 0x21
0x49d: CODECOPY V374 0x4b2 0x21
0x49e: V377 = 0x40
0x4a0: V378 = M[0x40]
0x4a4: V379 = SUB V374 V378
0x4a5: V380 = 0x21
0x4a7: V381 = ADD 0x21 V379
0x4a9: V382 = SHA3 V378 V381
0x4ad: S[V382] = S0
0x4b0: JUMP 0x422
---
Entry stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x28e, S3, S2, 0x422, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V9, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x28e, S3, S2]

================================

Block 0x4b1
[0x4b1:0x4fe]
---
Predecessors: []
Successors: []
---
0x4b1 INVALID
0x4b2 PUSH4 0x6f6d2e64
0x4b7 CALLER
0x4b8 PUSH13 0x65646765722e70726f78792e69
0x4c6 PUSH14 0x706c656d656e746174696f6ea165
0x4d5 PUSH3 0x7a7a72
0x4d9 ADDRESS
0x4da PC
0x4db SHA3
0x4dc MISSING 0xc9
0x4dd SWAP7
0x4de CODESIZE
0x4df MSTORE
0x4e0 MISSING 0xc0
0x4e1 CALLDATACOPY
0x4e2 MISSING 0x2a
0x4e3 MISSING 0x4f
0x4e4 MISSING 0xdb
0x4e5 SWAP11
0x4e6 MISSING 0x2c
0x4e7 DUP16
0x4e8 PUSH22 0xfb78a6ce482b121e677c5f426b2322079bd1b70029
---
0x4b1: INVALID 
0x4b2: V383 = 0x6f6d2e64
0x4b7: V384 = CALLER
0x4b8: V385 = 0x65646765722e70726f78792e69
0x4c6: V386 = 0x706c656d656e746174696f6ea165
0x4d5: V387 = 0x7a7a72
0x4d9: V388 = ADDRESS
0x4da: V389 = PC
0x4db: V390 = SHA3 V389 V388
0x4dc: MISSING 0xc9
0x4de: V391 = CODESIZE
0x4df: M[V391] = S7
0x4e0: MISSING 0xc0
0x4e1: CALLDATACOPY S0 S1 S2
0x4e2: MISSING 0x2a
0x4e3: MISSING 0x4f
0x4e4: MISSING 0xdb
0x4e6: MISSING 0x2c
0x4e8: V392 = 0xfb78a6ce482b121e677c5f426b2322079bd1b70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V390, 0x7a7a72, 0x706c656d656e746174696f6ea165, 0x65646765722e70726f78792e69, V384, 0x6f6d2e64, S1, S2, S3, S4, S5, S6, S0, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0xfb78a6ce482b121e677c5f426b2322079bd1b70029, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15]
Exit stack: []

================================

Function 0:
Public function signature: 0x25313a2
Entry block: 0xac
Exit block: 0xc1
Body: 0xac, 0xb4, 0xb8, 0xc1

Function 1:
Public function signature: 0x3659cfe6
Entry block: 0xdd
Exit block: 0x110
Body: 0xdd, 0xe5, 0xe9, 0xfc, 0x100, 0x110, 0x269, 0x271, 0x281, 0x285, 0x28e, 0x2b6, 0x2d4, 0x2dd, 0x2f3, 0x334, 0x355, 0x35a, 0x366, 0x36a, 0x3f4, 0x3fe, 0x415, 0x419, 0x422, 0x48f

Function 2:
Public function signature: 0x4f1ef286
Entry block: 0x112
Exit block: 0x110
Body: 0x110, 0x112, 0x124, 0x128, 0x14f, 0x153, 0x161, 0x165, 0x183, 0x187, 0x269, 0x271, 0x281, 0x285, 0x28e, 0x291, 0x299, 0x2a9, 0x2ad, 0x2b6, 0x2d4, 0x2dd, 0x2f3, 0x334, 0x355, 0x35a, 0x366, 0x36a, 0x3f4, 0x3fe, 0x415, 0x419, 0x422, 0x48f

Function 3:
Public function signature: 0x5c60da1b
Entry block: 0x1c8
Exit block: 0x1d0
Body: 0xc1, 0x1c8, 0x1d0, 0x1d4

Function 4:
Public function signature: 0xf1739cae
Entry block: 0x1dd
Exit block: 0x110
Body: 0x110, 0x1dd, 0x1e5, 0x1e9, 0x1fc, 0x200, 0x28e, 0x2b6, 0x2d4, 0x2dd, 0x2f3, 0x334, 0x355, 0x35a, 0x366, 0x36a, 0x36f, 0x377, 0x387, 0x38b, 0x39c, 0x3a0, 0x3c9, 0x45a

Function 5:
Public fallback function
Entry block: 0x66
Exit block: 0xa8
Body: 0x66, 0x70, 0x83, 0x87, 0xa5, 0xa8

