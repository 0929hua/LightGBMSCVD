Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8a
0xa: JUMPI 0x8a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x8c]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x2530c905
0x34 EQ
0x35 PUSH2 0x8c
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x2530c905
0x34: V10 = EQ 0x2530c905 V8
0x35: V11 = 0x8c
0x38: JUMPI 0x8c V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xb8]
---
0x39 DUP1
0x3a PUSH4 0x35815b95
0x3f EQ
0x40 PUSH2 0xb8
0x43 JUMPI
---
0x3a: V12 = 0x35815b95
0x3f: V13 = EQ 0x35815b95 V8
0x40: V14 = 0xb8
0x43: JUMPI 0xb8 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xdb]
---
0x44 DUP1
0x45 PUSH4 0x41c0e1b5
0x4a EQ
0x4b PUSH2 0xdb
0x4e JUMPI
---
0x45: V15 = 0x41c0e1b5
0x4a: V16 = EQ 0x41c0e1b5 V8
0x4b: V17 = 0xdb
0x4e: JUMPI 0xdb V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xea]
---
0x4f DUP1
0x50 PUSH4 0x473ca96c
0x55 EQ
0x56 PUSH2 0xea
0x59 JUMPI
---
0x50: V18 = 0x473ca96c
0x55: V19 = EQ 0x473ca96c V8
0x56: V20 = 0xea
0x59: JUMPI 0xea V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x10d]
---
0x5a DUP1
0x5b PUSH4 0x713658f3
0x60 EQ
0x61 PUSH2 0x10d
0x64 JUMPI
---
0x5b: V21 = 0x713658f3
0x60: V22 = EQ 0x713658f3 V8
0x61: V23 = 0x10d
0x64: JUMPI 0x10d V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x130]
---
0x65 DUP1
0x66 PUSH4 0x8da5cb5b
0x6b EQ
0x6c PUSH2 0x130
0x6f JUMPI
---
0x66: V24 = 0x8da5cb5b
0x6b: V25 = EQ 0x8da5cb5b V8
0x6c: V26 = 0x130
0x6f: JUMPI 0x130 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x169]
---
0x70 DUP1
0x71 PUSH4 0xaa8c217c
0x76 EQ
0x77 PUSH2 0x169
0x7a JUMPI
---
0x71: V27 = 0xaa8c217c
0x76: V28 = EQ 0xaa8c217c V8
0x77: V29 = 0x169
0x7a: JUMPI 0x169 V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x18c]
---
0x7b DUP1
0x7c PUSH4 0xd8f64b22
0x81 EQ
0x82 PUSH2 0x18c
0x85 JUMPI
---
0x7c: V30 = 0xd8f64b22
0x81: V31 = EQ 0xd8f64b22 V8
0x82: V32 = 0x18c
0x85: JUMPI 0x18c V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7b]
Successors: [0x8a]
---
0x86 PUSH2 0x8a
0x89 JUMP
---
0x86: V33 = 0x8a
0x89: JUMP 0x8a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x0, 0x86]
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x8c
[0x8c:0xa1]
---
Predecessors: [0xb]
Successors: [0x2aa]
---
0x8c JUMPDEST
0x8d PUSH2 0xa2
0x90 PUSH1 0x4
0x92 DUP1
0x93 DUP1
0x94 CALLDATALOAD
0x95 SWAP1
0x96 PUSH1 0x20
0x98 ADD
0x99 SWAP1
0x9a SWAP2
0x9b SWAP1
0x9c POP
0x9d POP
0x9e PUSH2 0x2aa
0xa1 JUMP
---
0x8c: JUMPDEST 
0x8d: V34 = 0xa2
0x90: V35 = 0x4
0x94: V36 = CALLDATALOAD 0x4
0x96: V37 = 0x20
0x98: V38 = ADD 0x20 0x4
0x9e: V39 = 0x2aa
0xa1: JUMP 0x2aa
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xa2, V36]
Exit stack: [V8, 0xa2, V36]

================================

Block 0xa2
[0xa2:0xb7]
---
Predecessors: [0x3f1]
Successors: []
---
0xa2 JUMPDEST
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 DUP1
0xa7 DUP3
0xa8 DUP2
0xa9 MSTORE
0xaa PUSH1 0x20
0xac ADD
0xad SWAP2
0xae POP
0xaf POP
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 SWAP2
0xb5 SUB
0xb6 SWAP1
0xb7 RETURN
---
0xa2: JUMPDEST 
0xa3: V40 = 0x40
0xa5: V41 = M[0x40]
0xa9: M[V41] = V304
0xaa: V42 = 0x20
0xac: V43 = ADD 0x20 V41
0xb0: V44 = 0x40
0xb2: V45 = M[0x40]
0xb5: V46 = SUB V43 V45
0xb7: RETURN V45 V46
---
Entry stack: [V8, V304]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xb8
[0xb8:0xc4]
---
Predecessors: [0x39]
Successors: [0x2a1]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xc5
0xbc PUSH1 0x4
0xbe DUP1
0xbf POP
0xc0 POP
0xc1 PUSH2 0x2a1
0xc4 JUMP
---
0xb8: JUMPDEST 
0xb9: V47 = 0xc5
0xbc: V48 = 0x4
0xc1: V49 = 0x2a1
0xc4: JUMP 0x2a1
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V8, 0xc5]

================================

Block 0xc5
[0xc5:0xda]
---
Predecessors: [0x2a1]
Successors: []
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca DUP3
0xcb DUP2
0xcc MSTORE
0xcd PUSH1 0x20
0xcf ADD
0xd0 SWAP2
0xd1 POP
0xd2 POP
0xd3 PUSH1 0x40
0xd5 MLOAD
0xd6 DUP1
0xd7 SWAP2
0xd8 SUB
0xd9 SWAP1
0xda RETURN
---
0xc5: JUMPDEST 
0xc6: V50 = 0x40
0xc8: V51 = M[0x40]
0xcc: M[V51] = V170
0xcd: V52 = 0x20
0xcf: V53 = ADD 0x20 V51
0xd3: V54 = 0x40
0xd5: V55 = M[0x40]
0xd8: V56 = SUB V53 V55
0xda: RETURN V55 V56
---
Entry stack: [V8, 0xc5, V170]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xc5]

================================

Block 0xdb
[0xdb:0xe7]
---
Predecessors: [0x44]
Successors: [0x20d]
---
0xdb JUMPDEST
0xdc PUSH2 0xe8
0xdf PUSH1 0x4
0xe1 DUP1
0xe2 POP
0xe3 POP
0xe4 PUSH2 0x20d
0xe7 JUMP
---
0xdb: JUMPDEST 
0xdc: V57 = 0xe8
0xdf: V58 = 0x4
0xe4: V59 = 0x20d
0xe7: JUMP 0x20d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V8, 0xe8]

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: [0x29f]
Successors: []
---
0xe8 JUMPDEST
0xe9 STOP
---
0xe8: JUMPDEST 
0xe9: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xea
[0xea:0xf6]
---
Predecessors: [0x4f]
Successors: [0x1fa]
---
0xea JUMPDEST
0xeb PUSH2 0xf7
0xee PUSH1 0x4
0xf0 DUP1
0xf1 POP
0xf2 POP
0xf3 PUSH2 0x1fa
0xf6 JUMP
---
0xea: JUMPDEST 
0xeb: V60 = 0xf7
0xee: V61 = 0x4
0xf3: V62 = 0x1fa
0xf6: JUMP 0x1fa
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V8, 0xf7]

================================

Block 0xf7
[0xf7:0x10c]
---
Predecessors: [0x1fa]
Successors: []
---
0xf7 JUMPDEST
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc DUP3
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP2
0x103 POP
0x104 POP
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 SWAP2
0x10a SUB
0x10b SWAP1
0x10c RETURN
---
0xf7: JUMPDEST 
0xf8: V63 = 0x40
0xfa: V64 = M[0x40]
0xfe: M[V64] = V141
0xff: V65 = 0x20
0x101: V66 = ADD 0x20 V64
0x105: V67 = 0x40
0x107: V68 = M[0x40]
0x10a: V69 = SUB V66 V68
0x10c: RETURN V68 V69
---
Entry stack: [V8, 0xf7, V141]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xf7]

================================

Block 0x10d
[0x10d:0x119]
---
Predecessors: [0x5a]
Successors: [0x1e7]
---
0x10d JUMPDEST
0x10e PUSH2 0x11a
0x111 PUSH1 0x4
0x113 DUP1
0x114 POP
0x115 POP
0x116 PUSH2 0x1e7
0x119 JUMP
---
0x10d: JUMPDEST 
0x10e: V70 = 0x11a
0x111: V71 = 0x4
0x116: V72 = 0x1e7
0x119: JUMP 0x1e7
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V8, 0x11a]

================================

Block 0x11a
[0x11a:0x12f]
---
Predecessors: [0x1e7]
Successors: []
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f DUP3
0x120 DUP2
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 SWAP2
0x126 POP
0x127 POP
0x128 PUSH1 0x40
0x12a MLOAD
0x12b DUP1
0x12c SWAP2
0x12d SUB
0x12e SWAP1
0x12f RETURN
---
0x11a: JUMPDEST 
0x11b: V73 = 0x40
0x11d: V74 = M[0x40]
0x121: M[V74] = V133
0x122: V75 = 0x20
0x124: V76 = ADD 0x20 V74
0x128: V77 = 0x40
0x12a: V78 = M[0x40]
0x12d: V79 = SUB V76 V78
0x12f: RETURN V78 V79
---
Entry stack: [V8, 0x11a, V133]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x11a]

================================

Block 0x130
[0x130:0x13c]
---
Predecessors: [0x65]
Successors: [0x1af]
---
0x130 JUMPDEST
0x131 PUSH2 0x13d
0x134 PUSH1 0x4
0x136 DUP1
0x137 POP
0x138 POP
0x139 PUSH2 0x1af
0x13c JUMP
---
0x130: JUMPDEST 
0x131: V80 = 0x13d
0x134: V81 = 0x4
0x139: V82 = 0x1af
0x13c: JUMP 0x1af
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x13d]
Exit stack: [V8, 0x13d]

================================

Block 0x13d
[0x13d:0x168]
---
Predecessors: [0x1af]
Successors: []
---
0x13d JUMPDEST
0x13e PUSH1 0x40
0x140 MLOAD
0x141 DUP1
0x142 DUP3
0x143 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x158 AND
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP2
0x15f POP
0x160 POP
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 SWAP2
0x166 SUB
0x167 SWAP1
0x168 RETURN
---
0x13d: JUMPDEST 
0x13e: V83 = 0x40
0x140: V84 = M[0x40]
0x143: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x158: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x15a: M[V84] = V86
0x15b: V87 = 0x20
0x15d: V88 = ADD 0x20 V84
0x161: V89 = 0x40
0x163: V90 = M[0x40]
0x166: V91 = SUB V88 V90
0x168: RETURN V90 V91
---
Entry stack: [V8, 0x13d, V119]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x13d]

================================

Block 0x169
[0x169:0x175]
---
Predecessors: [0x70]
Successors: [0x1d5]
---
0x169 JUMPDEST
0x16a PUSH2 0x176
0x16d PUSH1 0x4
0x16f DUP1
0x170 POP
0x171 POP
0x172 PUSH2 0x1d5
0x175 JUMP
---
0x169: JUMPDEST 
0x16a: V92 = 0x176
0x16d: V93 = 0x4
0x172: V94 = 0x1d5
0x175: JUMP 0x1d5
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x176]
Exit stack: [V8, 0x176]

================================

Block 0x176
[0x176:0x18b]
---
Predecessors: [0x1d5]
Successors: []
---
0x176 JUMPDEST
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b DUP3
0x17c DUP2
0x17d MSTORE
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP2
0x182 POP
0x183 POP
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b RETURN
---
0x176: JUMPDEST 
0x177: V95 = 0x40
0x179: V96 = M[0x40]
0x17d: M[V96] = V122
0x17e: V97 = 0x20
0x180: V98 = ADD 0x20 V96
0x184: V99 = 0x40
0x186: V100 = M[0x40]
0x189: V101 = SUB V98 V100
0x18b: RETURN V100 V101
---
Entry stack: [V8, 0x176, V122]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x176]

================================

Block 0x18c
[0x18c:0x198]
---
Predecessors: [0x7b]
Successors: [0x1de]
---
0x18c JUMPDEST
0x18d PUSH2 0x199
0x190 PUSH1 0x4
0x192 DUP1
0x193 POP
0x194 POP
0x195 PUSH2 0x1de
0x198 JUMP
---
0x18c: JUMPDEST 
0x18d: V102 = 0x199
0x190: V103 = 0x4
0x195: V104 = 0x1de
0x198: JUMP 0x1de
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x199]
Exit stack: [V8, 0x199]

================================

Block 0x199
[0x199:0x1ae]
---
Predecessors: [0x1de]
Successors: []
---
0x199 JUMPDEST
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e DUP3
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 SWAP2
0x1a5 POP
0x1a6 POP
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa DUP1
0x1ab SWAP2
0x1ac SUB
0x1ad SWAP1
0x1ae RETURN
---
0x199: JUMPDEST 
0x19a: V105 = 0x40
0x19c: V106 = M[0x40]
0x1a0: M[V106] = V125
0x1a1: V107 = 0x20
0x1a3: V108 = ADD 0x20 V106
0x1a7: V109 = 0x40
0x1a9: V110 = M[0x40]
0x1ac: V111 = SUB V108 V110
0x1ae: RETURN V110 V111
---
Entry stack: [V8, 0x199, V125]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x199]

================================

Block 0x1af
[0x1af:0x1d4]
---
Predecessors: [0x130]
Successors: [0x13d]
---
0x1af JUMPDEST
0x1b0 PUSH1 0x0
0x1b2 PUSH1 0x0
0x1b4 SWAP1
0x1b5 SLOAD
0x1b6 SWAP1
0x1b7 PUSH2 0x100
0x1ba EXP
0x1bb SWAP1
0x1bc DIV
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 DUP2
0x1d4 JUMP
---
0x1af: JUMPDEST 
0x1b0: V112 = 0x0
0x1b2: V113 = 0x0
0x1b5: V114 = S[0x0]
0x1b7: V115 = 0x100
0x1ba: V116 = EXP 0x100 0x0
0x1bc: V117 = DIV V114 0x1
0x1bd: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1d4: JUMP 0x13d
---
Entry stack: [V8, 0x13d]
Stack pops: 1
Stack additions: [S0, V119]
Exit stack: [V8, 0x13d, V119]

================================

Block 0x1d5
[0x1d5:0x1dd]
---
Predecessors: [0x169]
Successors: [0x176]
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0x0
0x1da POP
0x1db SLOAD
0x1dc DUP2
0x1dd JUMP
---
0x1d5: JUMPDEST 
0x1d6: V120 = 0x1
0x1d8: V121 = 0x0
0x1db: V122 = S[0x1]
0x1dd: JUMP 0x176
---
Entry stack: [V8, 0x176]
Stack pops: 1
Stack additions: [S0, V122]
Exit stack: [V8, 0x176, V122]

================================

Block 0x1de
[0x1de:0x1e6]
---
Predecessors: [0x18c]
Successors: [0x199]
---
0x1de JUMPDEST
0x1df PUSH1 0x2
0x1e1 PUSH1 0x0
0x1e3 POP
0x1e4 SLOAD
0x1e5 DUP2
0x1e6 JUMP
---
0x1de: JUMPDEST 
0x1df: V123 = 0x2
0x1e1: V124 = 0x0
0x1e4: V125 = S[0x2]
0x1e6: JUMP 0x199
---
Entry stack: [V8, 0x199]
Stack pops: 1
Stack additions: [S0, V125]
Exit stack: [V8, 0x199, V125]

================================

Block 0x1e7
[0x1e7:0x1f9]
---
Predecessors: [0x10d]
Successors: [0x11a]
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x3
0x1ea PUSH1 0x0
0x1ec SWAP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef PUSH2 0x100
0x1f2 EXP
0x1f3 SWAP1
0x1f4 DIV
0x1f5 PUSH1 0xff
0x1f7 AND
0x1f8 DUP2
0x1f9 JUMP
---
0x1e7: JUMPDEST 
0x1e8: V126 = 0x3
0x1ea: V127 = 0x0
0x1ed: V128 = S[0x3]
0x1ef: V129 = 0x100
0x1f2: V130 = EXP 0x100 0x0
0x1f4: V131 = DIV V128 0x1
0x1f5: V132 = 0xff
0x1f7: V133 = AND 0xff V131
0x1f9: JUMP 0x11a
---
Entry stack: [V8, 0x11a]
Stack pops: 1
Stack additions: [S0, V133]
Exit stack: [V8, 0x11a, V133]

================================

Block 0x1fa
[0x1fa:0x20c]
---
Predecessors: [0xea]
Successors: [0xf7]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x3
0x1fd PUSH1 0x1
0x1ff SWAP1
0x200 SLOAD
0x201 SWAP1
0x202 PUSH2 0x100
0x205 EXP
0x206 SWAP1
0x207 DIV
0x208 PUSH1 0xff
0x20a AND
0x20b DUP2
0x20c JUMP
---
0x1fa: JUMPDEST 
0x1fb: V134 = 0x3
0x1fd: V135 = 0x1
0x200: V136 = S[0x3]
0x202: V137 = 0x100
0x205: V138 = EXP 0x100 0x1
0x207: V139 = DIV V136 0x100
0x208: V140 = 0xff
0x20a: V141 = AND 0xff V139
0x20c: JUMP 0xf7
---
Entry stack: [V8, 0xf7]
Stack pops: 1
Stack additions: [S0, V141]
Exit stack: [V8, 0xf7, V141]

================================

Block 0x20d
[0x20d:0x263]
---
Predecessors: [0xdb]
Successors: [0x264, 0x29e]
---
0x20d JUMPDEST
0x20e PUSH1 0x0
0x210 PUSH1 0x0
0x212 SWAP1
0x213 SLOAD
0x214 SWAP1
0x215 PUSH2 0x100
0x218 EXP
0x219 SWAP1
0x21a DIV
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 CALLER
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e EQ
0x25f ISZERO
0x260 PUSH2 0x29e
0x263 JUMPI
---
0x20d: JUMPDEST 
0x20e: V142 = 0x0
0x210: V143 = 0x0
0x213: V144 = S[0x0]
0x215: V145 = 0x100
0x218: V146 = EXP 0x100 0x0
0x21a: V147 = DIV V144 0x1
0x21b: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x231: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x247: V152 = CALLER
0x248: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x25e: V155 = EQ V154 V151
0x25f: V156 = ISZERO V155
0x260: V157 = 0x29e
0x263: JUMPI 0x29e V156
---
Entry stack: [V8, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe8]

================================

Block 0x264
[0x264:0x29d]
---
Predecessors: [0x20d]
Successors: []
---
0x264 PUSH1 0x0
0x266 PUSH1 0x0
0x268 SWAP1
0x269 SLOAD
0x26a SWAP1
0x26b PUSH2 0x100
0x26e EXP
0x26f SWAP1
0x270 DIV
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29c AND
0x29d SELFDESTRUCT
---
0x264: V158 = 0x0
0x266: V159 = 0x0
0x269: V160 = S[0x0]
0x26b: V161 = 0x100
0x26e: V162 = EXP 0x100 0x0
0x270: V163 = DIV V160 0x1
0x271: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x287: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x29c: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x29d: SELFDESTRUCT V167
---
Entry stack: [V8, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe8]

================================

Block 0x29e
[0x29e:0x29e]
---
Predecessors: [0x20d]
Successors: [0x29f]
---
0x29e JUMPDEST
---
0x29e: JUMPDEST 
---
Entry stack: [V8, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe8]

================================

Block 0x29f
[0x29f:0x2a0]
---
Predecessors: [0x29e]
Successors: [0xe8]
---
0x29f JUMPDEST
0x2a0 JUMP
---
0x29f: JUMPDEST 
0x2a0: JUMP 0xe8
---
Entry stack: [V8, 0xe8]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x2a1
[0x2a1:0x2a9]
---
Predecessors: [0xb8]
Successors: [0xc5]
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x4
0x2a4 PUSH1 0x0
0x2a6 POP
0x2a7 SLOAD
0x2a8 DUP2
0x2a9 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V168 = 0x4
0x2a4: V169 = 0x0
0x2a7: V170 = S[0x4]
0x2a9: JUMP 0xc5
---
Entry stack: [V8, 0xc5]
Stack pops: 1
Stack additions: [S0, V170]
Exit stack: [V8, 0xc5, V170]

================================

Block 0x2aa
[0x2aa:0x2e0]
---
Predecessors: [0x8c]
Successors: [0x2e1, 0x2fa]
---
0x2aa JUMPDEST
0x2ab PUSH1 0x0
0x2ad PUSH1 0x0
0x2af PUSH1 0x0
0x2b1 PUSH1 0x1
0x2b3 NUMBER
0x2b4 SUB
0x2b5 SWAP2
0x2b6 POP
0x2b7 DUP2
0x2b8 BLOCKHASH
0x2b9 PUSH1 0x1
0x2bb SWAP1
0x2bc DIV
0x2bd SWAP1
0x2be POP
0x2bf PUSH1 0x1
0x2c1 PUSH1 0x4
0x2c3 PUSH1 0x0
0x2c5 POP
0x2c6 SLOAD
0x2c7 DUP3
0x2c8 DIV
0x2c9 ADD
0x2ca PUSH1 0x2
0x2cc PUSH1 0x0
0x2ce POP
0x2cf DUP2
0x2d0 SWAP1
0x2d1 SSTORE
0x2d2 POP
0x2d3 PUSH1 0x31
0x2d5 PUSH1 0x2
0x2d7 PUSH1 0x0
0x2d9 POP
0x2da SLOAD
0x2db GT
0x2dc ISZERO
0x2dd PUSH2 0x2fa
0x2e0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V171 = 0x0
0x2ad: V172 = 0x0
0x2af: V173 = 0x0
0x2b1: V174 = 0x1
0x2b3: V175 = NUMBER
0x2b4: V176 = SUB V175 0x1
0x2b8: V177 = BLOCKHASH V176
0x2b9: V178 = 0x1
0x2bc: V179 = DIV V177 0x1
0x2bf: V180 = 0x1
0x2c1: V181 = 0x4
0x2c3: V182 = 0x0
0x2c6: V183 = S[0x4]
0x2c8: V184 = DIV V179 V183
0x2c9: V185 = ADD V184 0x1
0x2ca: V186 = 0x2
0x2cc: V187 = 0x0
0x2d1: S[0x2] = V185
0x2d3: V188 = 0x31
0x2d5: V189 = 0x2
0x2d7: V190 = 0x0
0x2da: V191 = S[0x2]
0x2db: V192 = GT V191 0x31
0x2dc: V193 = ISZERO V192
0x2dd: V194 = 0x2fa
0x2e0: JUMPI 0x2fa V193
---
Entry stack: [V8, 0xa2, V36]
Stack pops: 0
Stack additions: [0x0, V176, V179]
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x2e1
[0x2e1:0x2f9]
---
Predecessors: [0x2aa]
Successors: [0x2fa]
---
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0x3
0x2e5 PUSH1 0x0
0x2e7 PUSH2 0x100
0x2ea EXP
0x2eb DUP2
0x2ec SLOAD
0x2ed DUP2
0x2ee PUSH1 0xff
0x2f0 MUL
0x2f1 NOT
0x2f2 AND
0x2f3 SWAP1
0x2f4 DUP4
0x2f5 MUL
0x2f6 OR
0x2f7 SWAP1
0x2f8 SSTORE
0x2f9 POP
---
0x2e1: V195 = 0x1
0x2e3: V196 = 0x3
0x2e5: V197 = 0x0
0x2e7: V198 = 0x100
0x2ea: V199 = EXP 0x100 0x0
0x2ec: V200 = S[0x3]
0x2ee: V201 = 0xff
0x2f0: V202 = MUL 0xff 0x1
0x2f1: V203 = NOT 0xff
0x2f2: V204 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V200
0x2f5: V205 = MUL 0x1 0x1
0x2f6: V206 = OR 0x1 V204
0x2f8: S[0x3] = V206
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x2fa
[0x2fa:0x308]
---
Predecessors: [0x2aa, 0x2e1]
Successors: [0x309, 0x322]
---
0x2fa JUMPDEST
0x2fb PUSH1 0x32
0x2fd PUSH1 0x2
0x2ff PUSH1 0x0
0x301 POP
0x302 SLOAD
0x303 LT
0x304 ISZERO
0x305 PUSH2 0x322
0x308 JUMPI
---
0x2fa: JUMPDEST 
0x2fb: V207 = 0x32
0x2fd: V208 = 0x2
0x2ff: V209 = 0x0
0x302: V210 = S[0x2]
0x303: V211 = LT V210 0x32
0x304: V212 = ISZERO V211
0x305: V213 = 0x322
0x308: JUMPI 0x322 V212
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x309
[0x309:0x321]
---
Predecessors: [0x2fa]
Successors: [0x322]
---
0x309 PUSH1 0x0
0x30b PUSH1 0x3
0x30d PUSH1 0x0
0x30f PUSH2 0x100
0x312 EXP
0x313 DUP2
0x314 SLOAD
0x315 DUP2
0x316 PUSH1 0xff
0x318 MUL
0x319 NOT
0x31a AND
0x31b SWAP1
0x31c DUP4
0x31d MUL
0x31e OR
0x31f SWAP1
0x320 SSTORE
0x321 POP
---
0x309: V214 = 0x0
0x30b: V215 = 0x3
0x30d: V216 = 0x0
0x30f: V217 = 0x100
0x312: V218 = EXP 0x100 0x0
0x314: V219 = S[0x3]
0x316: V220 = 0xff
0x318: V221 = MUL 0xff 0x1
0x319: V222 = NOT 0xff
0x31a: V223 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V219
0x31d: V224 = MUL 0x0 0x1
0x31e: V225 = OR 0x0 V223
0x320: S[0x3] = V225
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x322
[0x322:0x33b]
---
Predecessors: [0x2fa, 0x309]
Successors: [0x33c, 0x341]
---
0x322 JUMPDEST
0x323 PUSH1 0x1
0x325 PUSH1 0x3
0x327 PUSH1 0x0
0x329 SWAP1
0x32a SLOAD
0x32b SWAP1
0x32c PUSH2 0x100
0x32f EXP
0x330 SWAP1
0x331 DIV
0x332 PUSH1 0xff
0x334 AND
0x335 EQ
0x336 DUP1
0x337 ISZERO
0x338 PUSH2 0x341
0x33b JUMPI
---
0x322: JUMPDEST 
0x323: V226 = 0x1
0x325: V227 = 0x3
0x327: V228 = 0x0
0x32a: V229 = S[0x3]
0x32c: V230 = 0x100
0x32f: V231 = EXP 0x100 0x0
0x331: V232 = DIV V229 0x1
0x332: V233 = 0xff
0x334: V234 = AND 0xff V232
0x335: V235 = EQ V234 0x1
0x337: V236 = ISZERO V235
0x338: V237 = 0x341
0x33b: JUMPI 0x341 V236
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 0
Stack additions: [V235]
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179, V235]

================================

Block 0x33c
[0x33c:0x340]
---
Predecessors: [0x322]
Successors: [0x341]
---
0x33c POP
0x33d PUSH1 0x31
0x33f DUP5
0x340 GT
---
0x33d: V238 = 0x31
0x340: V239 = GT V36 0x31
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179, V235]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V239]
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179, V239]

================================

Block 0x341
[0x341:0x346]
---
Predecessors: [0x322, 0x33c]
Successors: [0x347, 0x360]
---
0x341 JUMPDEST
0x342 ISZERO
0x343 PUSH2 0x360
0x346 JUMPI
---
0x341: JUMPDEST 
0x342: V240 = ISZERO S0
0x343: V241 = 0x360
0x346: JUMPI 0x360 V240
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x347
[0x347:0x35f]
---
Predecessors: [0x341]
Successors: [0x360]
---
0x347 PUSH1 0x1
0x349 PUSH1 0x3
0x34b PUSH1 0x1
0x34d PUSH2 0x100
0x350 EXP
0x351 DUP2
0x352 SLOAD
0x353 DUP2
0x354 PUSH1 0xff
0x356 MUL
0x357 NOT
0x358 AND
0x359 SWAP1
0x35a DUP4
0x35b MUL
0x35c OR
0x35d SWAP1
0x35e SSTORE
0x35f POP
---
0x347: V242 = 0x1
0x349: V243 = 0x3
0x34b: V244 = 0x1
0x34d: V245 = 0x100
0x350: V246 = EXP 0x100 0x1
0x352: V247 = S[0x3]
0x354: V248 = 0xff
0x356: V249 = MUL 0xff 0x100
0x357: V250 = NOT 0xff00
0x358: V251 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V247
0x35b: V252 = MUL 0x1 0x100
0x35c: V253 = OR 0x100 V251
0x35e: S[0x3] = V253
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x360
[0x360:0x379]
---
Predecessors: [0x341, 0x347]
Successors: [0x37a, 0x37f]
---
0x360 JUMPDEST
0x361 PUSH1 0x0
0x363 PUSH1 0x3
0x365 PUSH1 0x0
0x367 SWAP1
0x368 SLOAD
0x369 SWAP1
0x36a PUSH2 0x100
0x36d EXP
0x36e SWAP1
0x36f DIV
0x370 PUSH1 0xff
0x372 AND
0x373 EQ
0x374 DUP1
0x375 ISZERO
0x376 PUSH2 0x37f
0x379 JUMPI
---
0x360: JUMPDEST 
0x361: V254 = 0x0
0x363: V255 = 0x3
0x365: V256 = 0x0
0x368: V257 = S[0x3]
0x36a: V258 = 0x100
0x36d: V259 = EXP 0x100 0x0
0x36f: V260 = DIV V257 0x1
0x370: V261 = 0xff
0x372: V262 = AND 0xff V260
0x373: V263 = EQ V262 0x0
0x375: V264 = ISZERO V263
0x376: V265 = 0x37f
0x379: JUMPI 0x37f V264
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 0
Stack additions: [V263]
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179, V263]

================================

Block 0x37a
[0x37a:0x37e]
---
Predecessors: [0x360]
Successors: [0x37f]
---
0x37a POP
0x37b PUSH1 0x32
0x37d DUP5
0x37e LT
---
0x37b: V266 = 0x32
0x37e: V267 = LT V36 0x32
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179, V263]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V267]
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179, V267]

================================

Block 0x37f
[0x37f:0x384]
---
Predecessors: [0x360, 0x37a]
Successors: [0x385, 0x3d6]
---
0x37f JUMPDEST
0x380 ISZERO
0x381 PUSH2 0x3d6
0x384 JUMPI
---
0x37f: JUMPDEST 
0x380: V268 = ISZERO S0
0x381: V269 = 0x3d6
0x384: JUMPI 0x3d6 V268
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x385
[0x385:0x3d5]
---
Predecessors: [0x37f]
Successors: [0x3d6]
---
0x385 PUSH1 0x1
0x387 PUSH1 0x3
0x389 PUSH1 0x1
0x38b PUSH2 0x100
0x38e EXP
0x38f DUP2
0x390 SLOAD
0x391 DUP2
0x392 PUSH1 0xff
0x394 MUL
0x395 NOT
0x396 AND
0x397 SWAP1
0x398 DUP4
0x399 MUL
0x39a OR
0x39b SWAP1
0x39c SSTORE
0x39d POP
0x39e CALLER
0x39f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b4 AND
0x3b5 PUSH1 0x0
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0x0
0x3bb POP
0x3bc SLOAD
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP1
0x3c1 SWAP1
0x3c2 POP
0x3c3 PUSH1 0x0
0x3c5 PUSH1 0x40
0x3c7 MLOAD
0x3c8 DUP1
0x3c9 DUP4
0x3ca SUB
0x3cb DUP2
0x3cc DUP6
0x3cd DUP9
0x3ce DUP9
0x3cf CALL
0x3d0 SWAP4
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 POP
---
0x385: V270 = 0x1
0x387: V271 = 0x3
0x389: V272 = 0x1
0x38b: V273 = 0x100
0x38e: V274 = EXP 0x100 0x1
0x390: V275 = S[0x3]
0x392: V276 = 0xff
0x394: V277 = MUL 0xff 0x100
0x395: V278 = NOT 0xff00
0x396: V279 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V275
0x399: V280 = MUL 0x1 0x100
0x39a: V281 = OR 0x100 V279
0x39c: S[0x3] = V281
0x39e: V282 = CALLER
0x39f: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x3b5: V285 = 0x0
0x3b7: V286 = 0x1
0x3b9: V287 = 0x0
0x3bc: V288 = S[0x1]
0x3bd: V289 = 0x40
0x3bf: V290 = M[0x40]
0x3c3: V291 = 0x0
0x3c5: V292 = 0x40
0x3c7: V293 = M[0x40]
0x3ca: V294 = SUB V290 V293
0x3cf: V295 = CALL 0x0 V284 V288 V293 V294 V293 0x0
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x3d6
[0x3d6:0x3e3]
---
Predecessors: [0x37f, 0x385]
Successors: [0x3e4]
---
0x3d6 JUMPDEST
0x3d7 DUP4
0x3d8 PUSH1 0x2
0x3da PUSH1 0x0
0x3dc POP
0x3dd SLOAD
0x3de EQ
0x3df ISZERO
0x3e0 PUSH2 0x3e4
0x3e3 JUMPI
---
0x3d6: JUMPDEST 
0x3d8: V296 = 0x2
0x3da: V297 = 0x0
0x3dd: V298 = S[0x2]
0x3de: V299 = EQ V298 V36
0x3df: V300 = ISZERO V299
0x3e0: V301 = 0x3e4
0x3e3: JUMPI 0x3e4 V300
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V8, 0xa2, V36, 0x0, V176, V179]

================================

Block 0x3e4
[0x3e4:0x3f0]
---
Predecessors: [0x3d6]
Successors: [0x3f1]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x2
0x3e7 PUSH1 0x0
0x3e9 POP
0x3ea SLOAD
0x3eb SWAP3
0x3ec POP
0x3ed PUSH2 0x3f1
0x3f0 JUMP
---
0x3e4: JUMPDEST 
0x3e5: V302 = 0x2
0x3e7: V303 = 0x0
0x3ea: V304 = S[0x2]
0x3ed: V305 = 0x3f1
0x3f0: JUMP 0x3f1
---
Entry stack: [V8, 0xa2, V36, 0x0, V176, V179]
Stack pops: 3
Stack additions: [V304, S1, S0]
Exit stack: [V8, 0xa2, V36, V304, V176, V179]

================================

Block 0x3f1
[0x3f1:0x3f7]
---
Predecessors: [0x3e4]
Successors: [0xa2]
---
0x3f1 JUMPDEST
0x3f2 POP
0x3f3 POP
0x3f4 SWAP2
0x3f5 SWAP1
0x3f6 POP
0x3f7 JUMP
---
0x3f1: JUMPDEST 
0x3f7: JUMP 0xa2
---
Entry stack: [V8, 0xa2, V36, V304, V176, V179]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V8, V304]

================================

Function 0:
Public function signature: 0x2530c905
Entry block: 0x8c
Exit block: 0xa2
Body: 0x8c, 0xa2, 0x2aa, 0x2e1, 0x2fa, 0x309, 0x322, 0x33c, 0x341, 0x347, 0x360, 0x37a, 0x37f, 0x385, 0x3d6, 0x3e4, 0x3f1

Function 1:
Public function signature: 0x35815b95
Entry block: 0xb8
Exit block: 0xc5
Body: 0xb8, 0xc5, 0x2a1

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xdb
Exit block: 0xe8
Body: 0xdb, 0xe8, 0x20d, 0x264, 0x29e, 0x29f

Function 3:
Public function signature: 0x473ca96c
Entry block: 0xea
Exit block: 0xf7
Body: 0xea, 0xf7, 0x1fa

Function 4:
Public function signature: 0x713658f3
Entry block: 0x10d
Exit block: 0x11a
Body: 0x10d, 0x11a, 0x1e7

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x130
Exit block: 0x13d
Body: 0x130, 0x13d, 0x1af

Function 6:
Public function signature: 0xaa8c217c
Entry block: 0x169
Exit block: 0x176
Body: 0x169, 0x176, 0x1d5

Function 7:
Public function signature: 0xd8f64b22
Entry block: 0x18c
Exit block: 0x199
Body: 0x18c, 0x199, 0x1de

Function 8:
Public fallback function
Entry block: 0x86
Exit block: 0x8a
Body: 0x86, 0x8a

