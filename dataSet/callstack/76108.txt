Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x35]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x35
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x35
0xa: JUMPI 0x35 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x3d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x3a5fccee
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x3d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x3a5fccee
0x1a: V12 = EQ V10 0x3a5fccee
0x1b: V13 = 0x3d
0x1e: JUMPI 0x3d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x5e]
---
0x1f DUP1
0x20 PUSH4 0x7157337c
0x25 EQ
0x26 PUSH2 0x5e
0x29 JUMPI
---
0x20: V14 = 0x7157337c
0x25: V15 = EQ 0x7157337c V10
0x26: V16 = 0x5e
0x29: JUMPI 0x5e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x235]
---
0x2a DUP1
0x2b PUSH4 0xdf06f906
0x30 EQ
0x31 PUSH2 0x235
0x34 JUMPI
---
0x2b: V17 = 0xdf06f906
0x30: V18 = EQ 0xdf06f906 V10
0x31: V19 = 0x235
0x34: JUMPI 0x235 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3c]
---
Predecessors: [0x0, 0x2a]
Successors: []
---
0x35 JUMPDEST
0x36 PUSH2 0x0
0x39 PUSH2 0x2
0x3c JUMP
---
0x35: JUMPDEST 
0x36: V20 = 0x0
0x39: V21 = 0x2
0x3c: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x3d
[0x3d:0x5d]
---
Predecessors: [0xb]
Successors: [0x23e]
---
0x3d JUMPDEST
0x3e PUSH2 0x23e
0x41 PUSH1 0x4
0x43 CALLDATALOAD
0x44 PUSH1 0x2
0x46 PUSH1 0x20
0x48 MSTORE
0x49 PUSH1 0x0
0x4b SWAP1
0x4c DUP2
0x4d MSTORE
0x4e PUSH1 0x40
0x50 SWAP1
0x51 SHA3
0x52 SLOAD
0x53 PUSH1 0x1
0x55 PUSH1 0xa0
0x57 PUSH1 0x2
0x59 EXP
0x5a SUB
0x5b AND
0x5c DUP2
0x5d JUMP
---
0x3d: JUMPDEST 
0x3e: V22 = 0x23e
0x41: V23 = 0x4
0x43: V24 = CALLDATALOAD 0x4
0x44: V25 = 0x2
0x46: V26 = 0x20
0x48: M[0x20] = 0x2
0x49: V27 = 0x0
0x4d: M[0x0] = V24
0x4e: V28 = 0x40
0x51: V29 = SHA3 0x0 0x40
0x52: V30 = S[V29]
0x53: V31 = 0x1
0x55: V32 = 0xa0
0x57: V33 = 0x2
0x59: V34 = EXP 0x2 0xa0
0x5a: V35 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x5d: JUMP 0x23e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23e, V36]
Exit stack: [V10, 0x23e, V36]

================================

Block 0x5e
[0x5e:0x11b]
---
Predecessors: [0x1f]
Successors: [0x11c, 0x135]
---
0x5e JUMPDEST
0x5f PUSH1 0x80
0x61 PUSH1 0x20
0x63 PUSH1 0x4
0x65 PUSH1 0x44
0x67 CALLDATALOAD
0x68 DUP2
0x69 DUP2
0x6a ADD
0x6b CALLDATALOAD
0x6c PUSH1 0x1f
0x6e DUP2
0x6f ADD
0x70 DUP5
0x71 SWAP1
0x72 DIV
0x73 SWAP1
0x74 SWAP4
0x75 MUL
0x76 DUP5
0x77 ADD
0x78 PUSH1 0x40
0x7a MSTORE
0x7b PUSH1 0x60
0x7d DUP4
0x7e DUP2
0x7f MSTORE
0x80 PUSH2 0x23e
0x83 SWAP5
0x84 DUP4
0x85 CALLDATALOAD
0x86 SWAP5
0x87 PUSH1 0x24
0x89 DUP1
0x8a CALLDATALOAD
0x8b SWAP6
0x8c SWAP5
0x8d PUSH1 0x64
0x8f SWAP5
0x90 SWAP4
0x91 SWAP2
0x92 ADD
0x93 SWAP2
0x94 SWAP1
0x95 DUP2
0x96 SWAP1
0x97 DUP4
0x98 DUP3
0x99 DUP1
0x9a DUP3
0x9b DUP5
0x9c CALLDATACOPY
0x9d POP
0x9e SWAP5
0x9f SWAP7
0xa0 POP
0xa1 POP
0xa2 SWAP4
0xa3 CALLDATALOAD
0xa4 SWAP4
0xa5 POP
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 PUSH1 0x0
0xab PUSH1 0x0
0xad DUP6
0xae DUP6
0xaf DUP6
0xb0 DUP6
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 PUSH2 0x8aa
0xb7 DUP1
0xb8 PUSH2 0x265
0xbb DUP4
0xbc CODECOPY
0xbd ADD
0xbe DUP1
0xbf DUP6
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 DUP5
0xc6 DUP2
0xc7 MSTORE
0xc8 PUSH1 0x20
0xca ADD
0xcb DUP1
0xcc PUSH1 0x20
0xce ADD
0xcf DUP4
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 AND
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x20
0xdd ADD
0xde DUP3
0xdf DUP2
0xe0 SUB
0xe1 DUP3
0xe2 MSTORE
0xe3 DUP5
0xe4 DUP2
0xe5 DUP2
0xe6 MLOAD
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP2
0xed POP
0xee DUP1
0xef MLOAD
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 DUP1
0xf6 DUP4
0xf7 DUP4
0xf8 DUP3
0xf9 SWAP1
0xfa PUSH1 0x0
0xfc PUSH1 0x4
0xfe PUSH1 0x20
0x100 DUP5
0x101 PUSH1 0x1f
0x103 ADD
0x104 DIV
0x105 PUSH1 0xf
0x107 MUL
0x108 PUSH1 0x3
0x10a ADD
0x10b CALL
0x10c POP
0x10d SWAP1
0x10e POP
0x10f SWAP1
0x110 DUP2
0x111 ADD
0x112 SWAP1
0x113 PUSH1 0x1f
0x115 AND
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x135
0x11b JUMPI
---
0x5e: JUMPDEST 
0x5f: V37 = 0x80
0x61: V38 = 0x20
0x63: V39 = 0x4
0x65: V40 = 0x44
0x67: V41 = CALLDATALOAD 0x44
0x6a: V42 = ADD V41 0x4
0x6b: V43 = CALLDATALOAD V42
0x6c: V44 = 0x1f
0x6f: V45 = ADD V43 0x1f
0x72: V46 = DIV V45 0x20
0x75: V47 = MUL 0x20 V46
0x77: V48 = ADD 0x80 V47
0x78: V49 = 0x40
0x7a: M[0x40] = V48
0x7b: V50 = 0x60
0x7f: M[0x60] = V43
0x80: V51 = 0x23e
0x85: V52 = CALLDATALOAD 0x4
0x87: V53 = 0x24
0x8a: V54 = CALLDATALOAD 0x24
0x8d: V55 = 0x64
0x92: V56 = ADD 0x24 V41
0x9c: CALLDATACOPY 0x80 V56 V43
0xa3: V57 = CALLDATALOAD 0x64
0xa9: V58 = 0x0
0xab: V59 = 0x0
0xb1: V60 = 0x40
0xb3: V61 = M[0x40]
0xb4: V62 = 0x8aa
0xb8: V63 = 0x265
0xbc: CODECOPY V61 0x265 0x8aa
0xbd: V64 = ADD 0x8aa V61
0xc1: M[V64] = V52
0xc2: V65 = 0x20
0xc4: V66 = ADD 0x20 V64
0xc7: M[V66] = V54
0xc8: V67 = 0x20
0xca: V68 = ADD 0x20 V66
0xcc: V69 = 0x20
0xce: V70 = ADD 0x20 V68
0xd0: V71 = 0x1
0xd2: V72 = 0xa0
0xd4: V73 = 0x2
0xd6: V74 = EXP 0x2 0xa0
0xd7: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xda: M[V70] = V76
0xdb: V77 = 0x20
0xdd: V78 = ADD 0x20 V70
0xe0: V79 = SUB V78 V64
0xe2: M[V68] = V79
0xe6: V80 = M[0x60]
0xe8: M[V78] = V80
0xe9: V81 = 0x20
0xeb: V82 = ADD 0x20 V78
0xef: V83 = M[0x60]
0xf1: V84 = 0x20
0xf3: V85 = ADD 0x20 0x60
0xfa: V86 = 0x0
0xfc: V87 = 0x4
0xfe: V88 = 0x20
0x101: V89 = 0x1f
0x103: V90 = ADD 0x1f V83
0x104: V91 = DIV V90 0x20
0x105: V92 = 0xf
0x107: V93 = MUL 0xf V91
0x108: V94 = 0x3
0x10a: V95 = ADD 0x3 V93
0x10b: V96 = CALL V95 0x4 0x0 0x80 V83 V82 V83
0x111: V97 = ADD V83 V82
0x113: V98 = 0x1f
0x115: V99 = AND 0x1f V83
0x117: V100 = ISZERO V99
0x118: V101 = 0x135
0x11b: JUMPI 0x135 V100
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23e, V52, V54, 0x60, V57, 0x0, 0x0, V52, V54, 0x60, V57, V64, V68, V97, V99]
Exit stack: [V10, 0x23e, V52, V54, 0x60, V57, 0x0, 0x0, V52, V54, 0x60, V57, V64, V68, V97, V99]

================================

Block 0x11c
[0x11c:0x134]
---
Predecessors: [0x5e]
Successors: [0x135]
---
0x11c DUP1
0x11d DUP3
0x11e SUB
0x11f DUP1
0x120 MLOAD
0x121 PUSH1 0x1
0x123 DUP4
0x124 PUSH1 0x20
0x126 SUB
0x127 PUSH2 0x100
0x12a EXP
0x12b SUB
0x12c NOT
0x12d AND
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP2
0x134 POP
---
0x11e: V102 = SUB V97 V99
0x120: V103 = M[V102]
0x121: V104 = 0x1
0x124: V105 = 0x20
0x126: V106 = SUB 0x20 V99
0x127: V107 = 0x100
0x12a: V108 = EXP 0x100 V106
0x12b: V109 = SUB V108 0x1
0x12c: V110 = NOT V109
0x12d: V111 = AND V110 V103
0x12f: M[V102] = V111
0x130: V112 = 0x20
0x132: V113 = ADD 0x20 V102
---
Entry stack: [V10, 0x23e, V52, V54, 0x60, V57, 0x0, 0x0, V52, V54, 0x60, V57, V64, V68, V97, V99]
Stack pops: 2
Stack additions: [V113, S0]
Exit stack: [V10, 0x23e, V52, V54, 0x60, V57, 0x0, 0x0, V52, V54, 0x60, V57, V64, V68, V113, V99]

================================

Block 0x135
[0x135:0x192]
---
Predecessors: [0x5e, 0x11c]
Successors: [0x193]
---
0x135 JUMPDEST
0x136 POP
0x137 SWAP6
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e PUSH1 0x40
0x140 MLOAD
0x141 DUP1
0x142 SWAP2
0x143 SUB
0x144 SWAP1
0x145 PUSH1 0x0
0x147 CREATE
0x148 SWAP1
0x149 POP
0x14a DUP1
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 AND
0x154 PUSH4 0x6e1286fc
0x159 CALLVALUE
0x15a CALLER
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP4
0x15f PUSH1 0xe0
0x161 PUSH1 0x2
0x163 EXP
0x164 MUL
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x4
0x169 ADD
0x16a DUP1
0x16b DUP3
0x16c PUSH1 0x1
0x16e PUSH1 0xa0
0x170 PUSH1 0x2
0x172 EXP
0x173 SUB
0x174 AND
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b POP
0x17c POP
0x17d PUSH1 0x0
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 DUP4
0x184 SUB
0x185 DUP2
0x186 DUP6
0x187 DUP9
0x188 PUSH2 0x8502
0x18b GAS
0x18c SUB
0x18d CALL
0x18e ISZERO
0x18f PUSH2 0x2
0x192 JUMPI
---
0x135: JUMPDEST 
0x13e: V114 = 0x40
0x140: V115 = M[0x40]
0x143: V116 = SUB S1 V115
0x145: V117 = 0x0
0x147: V118 = CREATE 0x0 V115 V116
0x14b: V119 = 0x1
0x14d: V120 = 0xa0
0x14f: V121 = 0x2
0x151: V122 = EXP 0x2 0xa0
0x152: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x153: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x154: V125 = 0x6e1286fc
0x159: V126 = CALLVALUE
0x15a: V127 = CALLER
0x15b: V128 = 0x40
0x15d: V129 = M[0x40]
0x15f: V130 = 0xe0
0x161: V131 = 0x2
0x163: V132 = EXP 0x2 0xe0
0x164: V133 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6e1286fc
0x166: M[V129] = 0x6e1286fc00000000000000000000000000000000000000000000000000000000
0x167: V134 = 0x4
0x169: V135 = ADD 0x4 V129
0x16c: V136 = 0x1
0x16e: V137 = 0xa0
0x170: V138 = 0x2
0x172: V139 = EXP 0x2 0xa0
0x173: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x174: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x176: M[V135] = V141
0x177: V142 = 0x20
0x179: V143 = ADD 0x20 V135
0x17d: V144 = 0x0
0x17f: V145 = 0x40
0x181: V146 = M[0x40]
0x184: V147 = SUB V143 V146
0x188: V148 = 0x8502
0x18b: V149 = GAS
0x18c: V150 = SUB V149 0x8502
0x18d: V151 = CALL V150 V124 V126 V146 V147 V146 0x0
0x18e: V152 = ISZERO V151
0x18f: V153 = 0x2
0x192: THROWI V152
---
Entry stack: [V10, 0x23e, V52, V54, 0x60, V57, 0x0, 0x0, V52, V54, 0x60, V57, V64, V68, S1, V99]
Stack pops: 9
Stack additions: [V118, V124, 0x6e1286fc, V126, V143]
Exit stack: [V10, 0x23e, V52, V54, 0x60, V57, 0x0, V118, V124, 0x6e1286fc, V126, V143]

================================

Block 0x193
[0x193:0x234]
---
Predecessors: [0x135]
Successors: [0x23e]
---
0x193 POP
0x194 POP
0x195 PUSH1 0x3
0x197 DUP1
0x198 SLOAD
0x199 DUP6
0x19a MSTORE
0x19b PUSH1 0x2
0x19d PUSH1 0x20
0x19f SWAP1
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x40
0x1a4 DUP1
0x1a5 DUP8
0x1a6 SHA3
0x1a7 DUP1
0x1a8 SLOAD
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be NOT
0x1bf AND
0x1c0 DUP8
0x1c1 OR
0x1c2 SWAP1
0x1c3 SSTORE
0x1c4 DUP3
0x1c5 SLOAD
0x1c6 PUSH1 0x1
0x1c8 ADD
0x1c9 SWAP1
0x1ca SWAP3
0x1cb SSTORE
0x1cc DUP2
0x1cd MLOAD
0x1ce DUP2
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0xb
0x1d3 SWAP2
0x1d4 DUP2
0x1d5 ADD
0x1d6 SWAP2
0x1d7 SWAP1
0x1d8 SWAP2
0x1d9 MSTORE
0x1da PUSH32 0x4265742043726561746564000000000000000000000000000000000000000000
0x1fb DUP2
0x1fc DUP4
0x1fd ADD
0x1fe MSTORE
0x1ff SWAP1
0x200 MLOAD
0x201 PUSH32 0x538b0c6b3ac4261dc7711d034c6e70dd57e4d5ced5e6288c3802fff856f83960
0x222 SWAP4
0x223 POP
0x224 SWAP1
0x225 DUP2
0x226 SWAP1
0x227 SUB
0x228 DUP8
0x229 ADD
0x22a SWAP2
0x22b POP
0x22c LOG1
0x22d POP
0x22e SWAP5
0x22f SWAP4
0x230 POP
0x231 POP
0x232 POP
0x233 POP
0x234 JUMP
---
0x195: V154 = 0x3
0x198: V155 = S[0x3]
0x19a: M[0x0] = V155
0x19b: V156 = 0x2
0x19d: V157 = 0x20
0x1a1: M[0x20] = 0x2
0x1a2: V158 = 0x40
0x1a6: V159 = SHA3 0x0 0x40
0x1a8: V160 = S[V159]
0x1a9: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V162 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V163 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V160
0x1c1: V164 = OR V118 V163
0x1c3: S[V159] = V164
0x1c5: V165 = S[0x3]
0x1c6: V166 = 0x1
0x1c8: V167 = ADD 0x1 V165
0x1cb: S[0x3] = V167
0x1cd: V168 = M[0x40]
0x1d0: M[V168] = 0x20
0x1d1: V169 = 0xb
0x1d5: V170 = ADD V168 0x20
0x1d9: M[V170] = 0xb
0x1da: V171 = 0x4265742043726561746564000000000000000000000000000000000000000000
0x1fd: V172 = ADD 0x40 V168
0x1fe: M[V172] = 0x4265742043726561746564000000000000000000000000000000000000000000
0x200: V173 = M[0x40]
0x201: V174 = 0x538b0c6b3ac4261dc7711d034c6e70dd57e4d5ced5e6288c3802fff856f83960
0x227: V175 = SUB V168 V173
0x229: V176 = ADD 0x60 V175
0x22c: LOG V173 V176 0x538b0c6b3ac4261dc7711d034c6e70dd57e4d5ced5e6288c3802fff856f83960
0x234: JUMP 0x23e
---
Entry stack: [V10, 0x23e, V52, V54, 0x60, V57, 0x0, V118, V124, 0x6e1286fc, V126, V143]
Stack pops: 11
Stack additions: [S5]
Exit stack: [V10, 0x0]

================================

Block 0x235
[0x235:0x23d]
---
Predecessors: [0x2a]
Successors: [0x25b]
---
0x235 JUMPDEST
0x236 PUSH2 0x25b
0x239 PUSH1 0x3
0x23b SLOAD
0x23c DUP2
0x23d JUMP
---
0x235: JUMPDEST 
0x236: V177 = 0x25b
0x239: V178 = 0x3
0x23b: V179 = S[0x3]
0x23d: JUMP 0x25b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25b, V179]
Exit stack: [V10, 0x25b, V179]

================================

Block 0x23e
[0x23e:0x25a]
---
Predecessors: [0x3d, 0x193]
Successors: []
---
0x23e JUMPDEST
0x23f PUSH1 0x40
0x241 DUP1
0x242 MLOAD
0x243 PUSH1 0x1
0x245 PUSH1 0xa0
0x247 PUSH1 0x2
0x249 EXP
0x24a SUB
0x24b SWAP3
0x24c SWAP1
0x24d SWAP3
0x24e AND
0x24f DUP3
0x250 MSTORE
0x251 MLOAD
0x252 SWAP1
0x253 DUP2
0x254 SWAP1
0x255 SUB
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP1
0x25a RETURN
---
0x23e: JUMPDEST 
0x23f: V180 = 0x40
0x242: V181 = M[0x40]
0x243: V182 = 0x1
0x245: V183 = 0xa0
0x247: V184 = 0x2
0x249: V185 = EXP 0x2 0xa0
0x24a: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24e: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x250: M[V181] = V187
0x251: V188 = M[0x40]
0x255: V189 = SUB V181 V188
0x256: V190 = 0x20
0x258: V191 = ADD 0x20 V189
0x25a: RETURN V188 V191
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x25b
[0x25b:0x264]
---
Predecessors: [0x235]
Successors: []
---
0x25b JUMPDEST
0x25c PUSH1 0x60
0x25e SWAP1
0x25f DUP2
0x260 MSTORE
0x261 PUSH1 0x20
0x263 SWAP1
0x264 RETURN
---
0x25b: JUMPDEST 
0x25c: V192 = 0x60
0x260: M[0x60] = V179
0x261: V193 = 0x20
0x264: RETURN 0x60 0x20
---
Entry stack: [V10, 0x25b, V179]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25b]

================================

Block 0x265
[0x265:0x317]
---
Predecessors: []
Successors: [0x318]
---
0x265 PUSH1 0x60
0x267 PUSH1 0x40
0x269 MSTORE
0x26a PUSH1 0x40
0x26c MLOAD
0x26d PUSH2 0x8aa
0x270 CODESIZE
0x271 SUB
0x272 DUP1
0x273 PUSH2 0x8aa
0x276 DUP4
0x277 CODECOPY
0x278 DUP2
0x279 ADD
0x27a PUSH1 0x40
0x27c MSTORE
0x27d DUP1
0x27e MLOAD
0x27f PUSH1 0x80
0x281 MLOAD
0x282 PUSH1 0xa0
0x284 MLOAD
0x285 PUSH1 0xc0
0x287 MLOAD
0x288 SWAP3
0x289 SWAP4
0x28a SWAP2
0x28b SWAP3
0x28c SWAP2
0x28d ADD
0x28e SWAP1
0x28f PUSH1 0xa0
0x291 MLOAD
0x292 PUSH1 0x0
0x294 DUP1
0x295 SLOAD
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e NOT
0x29f AND
0x2a0 CALLER
0x2a1 OR
0x2a2 DUP2
0x2a3 SSTORE
0x2a4 PUSH1 0x3
0x2a6 DUP2
0x2a7 SWAP1
0x2a8 SSTORE
0x2a9 PUSH1 0x2
0x2ab DUP2
0x2ac DUP2
0x2ad SSTORE
0x2ae PUSH1 0x5
0x2b0 DUP8
0x2b1 SWAP1
0x2b2 SSTORE
0x2b3 PUSH1 0x6
0x2b5 DUP7
0x2b6 SWAP1
0x2b7 SSTORE
0x2b8 DUP5
0x2b9 MLOAD
0x2ba PUSH1 0x7
0x2bc DUP1
0x2bd SLOAD
0x2be SWAP4
0x2bf DUP2
0x2c0 SWAP1
0x2c1 MSTORE
0x2c2 SWAP4
0x2c3 PUSH1 0x20
0x2c5 PUSH1 0x1f
0x2c7 PUSH1 0x1
0x2c9 DUP7
0x2ca AND
0x2cb ISZERO
0x2cc PUSH2 0x100
0x2cf MUL
0x2d0 PUSH1 0x0
0x2d2 NOT
0x2d3 ADD
0x2d4 SWAP1
0x2d5 SWAP6
0x2d6 AND
0x2d7 SWAP4
0x2d8 SWAP1
0x2d9 SWAP4
0x2da DIV
0x2db DUP5
0x2dc ADD
0x2dd SWAP3
0x2de SWAP1
0x2df SWAP3
0x2e0 DIV
0x2e1 PUSH32 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
0x302 SWAP1
0x303 DUP2
0x304 ADD
0x305 SWAP4
0x306 SWAP2
0x307 SWAP3
0x308 SWAP1
0x309 SWAP2
0x30a PUSH1 0x80
0x30c SWAP2
0x30d SWAP1
0x30e SWAP2
0x30f ADD
0x310 SWAP1
0x311 DUP4
0x312 SWAP1
0x313 LT
0x314 PUSH2 0x13f
0x317 JUMPI
---
0x265: V194 = 0x60
0x267: V195 = 0x40
0x269: M[0x40] = 0x60
0x26a: V196 = 0x40
0x26c: V197 = M[0x40]
0x26d: V198 = 0x8aa
0x270: V199 = CODESIZE
0x271: V200 = SUB V199 0x8aa
0x273: V201 = 0x8aa
0x277: CODECOPY V197 0x8aa V200
0x279: V202 = ADD V197 V200
0x27a: V203 = 0x40
0x27c: M[0x40] = V202
0x27e: V204 = M[V197]
0x27f: V205 = 0x80
0x281: V206 = M[0x80]
0x282: V207 = 0xa0
0x284: V208 = M[0xa0]
0x285: V209 = 0xc0
0x287: V210 = M[0xc0]
0x28d: V211 = ADD V197 V208
0x28f: V212 = 0xa0
0x291: V213 = M[0xa0]
0x292: V214 = 0x0
0x295: V215 = S[0x0]
0x296: V216 = 0x1
0x298: V217 = 0xa0
0x29a: V218 = 0x2
0x29c: V219 = EXP 0x2 0xa0
0x29d: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V221 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V222 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V215
0x2a0: V223 = CALLER
0x2a1: V224 = OR V223 V222
0x2a3: S[0x0] = V224
0x2a4: V225 = 0x3
0x2a8: S[0x3] = 0x0
0x2a9: V226 = 0x2
0x2ad: S[0x2] = 0x0
0x2ae: V227 = 0x5
0x2b2: S[0x5] = V204
0x2b3: V228 = 0x6
0x2b7: S[0x6] = V206
0x2b9: V229 = M[V211]
0x2ba: V230 = 0x7
0x2bd: V231 = S[0x7]
0x2c1: M[0x0] = 0x7
0x2c3: V232 = 0x20
0x2c5: V233 = 0x1f
0x2c7: V234 = 0x1
0x2ca: V235 = AND V231 0x1
0x2cb: V236 = ISZERO V235
0x2cc: V237 = 0x100
0x2cf: V238 = MUL 0x100 V236
0x2d0: V239 = 0x0
0x2d2: V240 = NOT 0x0
0x2d3: V241 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V238
0x2d6: V242 = AND V231 V241
0x2da: V243 = DIV V242 0x2
0x2dc: V244 = ADD 0x1f V243
0x2e0: V245 = DIV V244 0x20
0x2e1: V246 = 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
0x304: V247 = ADD 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688 V245
0x30a: V248 = 0x80
0x30f: V249 = ADD 0x80 V213
0x313: V250 = LT 0x1f V229
0x314: V251 = 0x13f
0x317: THROWI V250
---
Entry stack: []
Stack pops: 0
Stack additions: [V204, V206, V211, V210, 0x7, V247, V229, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688, V249]
Exit stack: [V204, V206, V211, V210, 0x7, V247, V229, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688, V249]

================================

Block 0x318
[0x318:0x323]
---
Predecessors: [0x265]
Successors: [0x324]
---
0x318 DUP1
0x319 MLOAD
0x31a PUSH1 0xff
0x31c NOT
0x31d AND
0x31e DUP4
0x31f DUP1
0x320 ADD
0x321 OR
0x322 DUP6
0x323 SSTORE
---
0x319: V252 = M[V249]
0x31a: V253 = 0xff
0x31c: V254 = NOT 0xff
0x31d: V255 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V252
0x320: V256 = ADD V229 V229
0x321: V257 = OR V256 V255
0x323: S[0x7] = V257
---
Entry stack: [V204, V206, V211, V210, 0x7, V247, V229, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688, V249]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V204, V206, V211, V210, 0x7, V247, V229, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688, V249]

================================

Block 0x324
[0x324:0x32b]
---
Predecessors: [0x318]
Successors: [0x32c]
---
0x324 JUMPDEST
0x325 POP
0x326 PUSH2 0xdb
0x329 SWAP3
0x32a SWAP2
0x32b POP
---
0x324: JUMPDEST 
0x326: V258 = 0xdb
---
Entry stack: [V204, V206, V211, V210, 0x7, V247, V229, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688, V249]
Stack pops: 4
Stack additions: [0xdb, S3, S1]
Exit stack: [V204, V206, V211, V210, 0x7, 0xdb, V247, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688]

================================

Block 0x32c
[0x32c:0x334]
---
Predecessors: [0x324]
Successors: [0x335]
---
0x32c JUMPDEST
0x32d DUP1
0x32e DUP3
0x32f GT
0x330 ISZERO
0x331 PUSH2 0x16f
0x334 JUMPI
---
0x32c: JUMPDEST 
0x32f: V259 = GT V247 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
0x330: V260 = ISZERO V259
0x331: V261 = 0x16f
0x334: THROWI V260
---
Entry stack: [V204, V206, V211, V210, 0x7, 0xdb, V247, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V204, V206, V211, V210, 0x7, 0xdb, V247, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688]

================================

Block 0x335
[0x335:0x3b2]
---
Predecessors: [0x32c]
Successors: [0x3b3]
---
0x335 PUSH1 0x0
0x337 DUP2
0x338 SSTORE
0x339 PUSH1 0x1
0x33b ADD
0x33c PUSH2 0xc7
0x33f JUMP
0x340 JUMPDEST
0x341 POP
0x342 POP
0x343 PUSH1 0x0
0x345 PUSH1 0x8
0x347 PUSH1 0x0
0x349 PUSH2 0x100
0x34c EXP
0x34d DUP2
0x34e SLOAD
0x34f DUP2
0x350 PUSH1 0xff
0x352 MUL
0x353 NOT
0x354 AND
0x355 SWAP1
0x356 DUP4
0x357 MUL
0x358 OR
0x359 SWAP1
0x35a SSTORE
0x35b POP
0x35c PUSH1 0x0
0x35e PUSH1 0x8
0x360 PUSH1 0x1
0x362 PUSH2 0x100
0x365 EXP
0x366 DUP2
0x367 SLOAD
0x368 DUP2
0x369 PUSH1 0xff
0x36b MUL
0x36c NOT
0x36d AND
0x36e SWAP1
0x36f DUP4
0x370 MUL
0x371 OR
0x372 SWAP1
0x373 SSTORE
0x374 POP
0x375 DUP1
0x376 PUSH1 0x8
0x378 PUSH1 0x2
0x37a PUSH2 0x100
0x37d EXP
0x37e DUP2
0x37f SLOAD
0x380 DUP2
0x381 PUSH1 0x1
0x383 PUSH1 0xa0
0x385 PUSH1 0x2
0x387 EXP
0x388 SUB
0x389 MUL
0x38a NOT
0x38b AND
0x38c SWAP1
0x38d DUP4
0x38e MUL
0x38f OR
0x390 SWAP1
0x391 SSTORE
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 POP
0x397 PUSH2 0x737
0x39a DUP1
0x39b PUSH2 0x173
0x39e PUSH1 0x0
0x3a0 CODECOPY
0x3a1 PUSH1 0x0
0x3a3 RETURN
0x3a4 JUMPDEST
0x3a5 DUP3
0x3a6 DUP1
0x3a7 ADD
0x3a8 PUSH1 0x1
0x3aa ADD
0x3ab DUP6
0x3ac SSTORE
0x3ad DUP3
0x3ae ISZERO
0x3af PUSH2 0xbf
0x3b2 JUMPI
---
0x335: V262 = 0x0
0x338: S[0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688] = 0x0
0x339: V263 = 0x1
0x33b: V264 = ADD 0x1 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
0x33c: V265 = 0xc7
0x33f: THROW 
0x340: JUMPDEST 
0x343: V266 = 0x0
0x345: V267 = 0x8
0x347: V268 = 0x0
0x349: V269 = 0x100
0x34c: V270 = EXP 0x100 0x0
0x34e: V271 = S[0x8]
0x350: V272 = 0xff
0x352: V273 = MUL 0xff 0x1
0x353: V274 = NOT 0xff
0x354: V275 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V271
0x357: V276 = MUL 0x0 0x1
0x358: V277 = OR 0x0 V275
0x35a: S[0x8] = V277
0x35c: V278 = 0x0
0x35e: V279 = 0x8
0x360: V280 = 0x1
0x362: V281 = 0x100
0x365: V282 = EXP 0x100 0x1
0x367: V283 = S[0x8]
0x369: V284 = 0xff
0x36b: V285 = MUL 0xff 0x100
0x36c: V286 = NOT 0xff00
0x36d: V287 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V283
0x370: V288 = MUL 0x0 0x100
0x371: V289 = OR 0x0 V287
0x373: S[0x8] = V289
0x376: V290 = 0x8
0x378: V291 = 0x2
0x37a: V292 = 0x100
0x37d: V293 = EXP 0x100 0x2
0x37f: V294 = S[0x8]
0x381: V295 = 0x1
0x383: V296 = 0xa0
0x385: V297 = 0x2
0x387: V298 = EXP 0x2 0xa0
0x388: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V300 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x38a: V301 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x38b: V302 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V294
0x38e: V303 = MUL S2 0x10000
0x38f: V304 = OR V303 V302
0x391: S[0x8] = V304
0x397: V305 = 0x737
0x39b: V306 = 0x173
0x39e: V307 = 0x0
0x3a0: CODECOPY 0x0 0x173 0x737
0x3a1: V308 = 0x0
0x3a3: RETURN 0x0 0x737
0x3a4: JUMPDEST 
0x3a7: V309 = ADD S2 S2
0x3a8: V310 = 0x1
0x3aa: V311 = ADD 0x1 V309
0x3ac: S[S4] = V311
0x3ae: V312 = ISZERO S2
0x3af: V313 = 0xbf
0x3b2: THROWI V312
---
Entry stack: [V204, V206, V211, V210, 0x7, 0xdb, V247, 0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688]
Stack pops: 2
Stack additions: [S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x3b3
[0x3b3:0x3b5]
---
Predecessors: [0x335]
Successors: [0x3b6]
---
0x3b3 SWAP2
0x3b4 DUP3
0x3b5 ADD
---
0x3b5: V314 = ADD S0 S2
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V314]
Exit stack: [S4, S3, S0, S1, V314]

================================

Block 0x3b6
[0x3b6:0x3be]
---
Predecessors: [0x3b3]
Successors: [0x3bf]
---
0x3b6 JUMPDEST
0x3b7 DUP3
0x3b8 DUP2
0x3b9 GT
0x3ba ISZERO
0x3bb PUSH2 0xbf
0x3be JUMPI
---
0x3b6: JUMPDEST 
0x3b9: V315 = GT V314 S2
0x3ba: V316 = ISZERO V315
0x3bb: V317 = 0xbf
0x3be: THROWI V316
---
Entry stack: [S4, S3, S2, S1, V314]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S4, S3, S2, S1, V314]

================================

Block 0x3bf
[0x3bf:0x3e2]
---
Predecessors: [0x3b6]
Successors: [0x3e3]
---
0x3bf DUP3
0x3c0 MLOAD
0x3c1 DUP3
0x3c2 PUSH1 0x0
0x3c4 POP
0x3c5 SSTORE
0x3c6 SWAP2
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP2
0x3cb SWAP1
0x3cc PUSH1 0x1
0x3ce ADD
0x3cf SWAP1
0x3d0 PUSH2 0x151
0x3d3 JUMP
0x3d4 JUMPDEST
0x3d5 POP
0x3d6 SWAP1
0x3d7 JUMP
0x3d8 PUSH1 0x60
0x3da PUSH1 0x40
0x3dc MSTORE
0x3dd CALLDATASIZE
0x3de ISZERO
0x3df PUSH2 0x8d
0x3e2 JUMPI
---
0x3c0: V318 = M[S2]
0x3c2: V319 = 0x0
0x3c5: S[S1] = V318
0x3c7: V320 = 0x20
0x3c9: V321 = ADD 0x20 S2
0x3cc: V322 = 0x1
0x3ce: V323 = ADD 0x1 S1
0x3d0: V324 = 0x151
0x3d3: THROW 
0x3d4: JUMPDEST 
0x3d7: JUMP S2
0x3d8: V325 = 0x60
0x3da: V326 = 0x40
0x3dc: M[0x40] = 0x60
0x3dd: V327 = CALLDATASIZE
0x3de: V328 = ISZERO V327
0x3df: V329 = 0x8d
0x3e2: THROWI V328
---
Entry stack: [S4, S3, S2, S1, V314]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x3e3
[0x3e3:0x3f6]
---
Predecessors: [0x3bf]
Successors: [0x3f7]
---
0x3e3 PUSH1 0xe0
0x3e5 PUSH1 0x2
0x3e7 EXP
0x3e8 PUSH1 0x0
0x3ea CALLDATALOAD
0x3eb DIV
0x3ec PUSH4 0x16bac7e5
0x3f1 DUP2
0x3f2 EQ
0x3f3 PUSH2 0xe8
0x3f6 JUMPI
---
0x3e3: V330 = 0xe0
0x3e5: V331 = 0x2
0x3e7: V332 = EXP 0x2 0xe0
0x3e8: V333 = 0x0
0x3ea: V334 = CALLDATALOAD 0x0
0x3eb: V335 = DIV V334 0x100000000000000000000000000000000000000000000000000000000
0x3ec: V336 = 0x16bac7e5
0x3f2: V337 = EQ V335 0x16bac7e5
0x3f3: V338 = 0xe8
0x3f6: THROWI V337
---
Entry stack: []
Stack pops: 0
Stack additions: [V335]
Exit stack: [V335]

================================

Block 0x3f7
[0x3f7:0x401]
---
Predecessors: [0x3e3]
Successors: [0x402]
---
0x3f7 DUP1
0x3f8 PUSH4 0x16fd381a
0x3fd EQ
0x3fe PUSH2 0x131
0x401 JUMPI
---
0x3f8: V339 = 0x16fd381a
0x3fd: V340 = EQ 0x16fd381a V335
0x3fe: V341 = 0x131
0x401: THROWI V340
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x402
[0x402:0x40c]
---
Predecessors: [0x3f7]
Successors: [0x40d]
---
0x402 DUP1
0x403 PUSH4 0x425e9412
0x408 EQ
0x409 PUSH2 0x19e
0x40c JUMPI
---
0x403: V342 = 0x425e9412
0x408: V343 = EQ 0x425e9412 V335
0x409: V344 = 0x19e
0x40c: THROWI V343
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x40d
[0x40d:0x417]
---
Predecessors: [0x402]
Successors: [0x418]
---
0x40d DUP1
0x40e PUSH4 0x57e36c64
0x413 EQ
0x414 PUSH2 0x1a7
0x417 JUMPI
---
0x40e: V345 = 0x57e36c64
0x413: V346 = EQ 0x57e36c64 V335
0x414: V347 = 0x1a7
0x417: THROWI V346
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x418
[0x418:0x422]
---
Predecessors: [0x40d]
Successors: [0x423]
---
0x418 DUP1
0x419 PUSH4 0x6e1286fc
0x41e EQ
0x41f PUSH2 0x1b0
0x422 JUMPI
---
0x419: V348 = 0x6e1286fc
0x41e: V349 = EQ 0x6e1286fc V335
0x41f: V350 = 0x1b0
0x422: THROWI V349
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x423
[0x423:0x42d]
---
Predecessors: [0x418]
Successors: [0x42e]
---
0x423 DUP1
0x424 PUSH4 0x73974447
0x429 EQ
0x42a PUSH2 0x214
0x42d JUMPI
---
0x424: V351 = 0x73974447
0x429: V352 = EQ 0x73974447 V335
0x42a: V353 = 0x214
0x42d: THROWI V352
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x42e
[0x42e:0x438]
---
Predecessors: [0x423]
Successors: [0x439]
---
0x42e DUP1
0x42f PUSH4 0x8f775839
0x434 EQ
0x435 PUSH2 0x21d
0x438 JUMPI
---
0x42f: V354 = 0x8f775839
0x434: V355 = EQ 0x8f775839 V335
0x435: V356 = 0x21d
0x438: THROWI V355
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x439
[0x439:0x443]
---
Predecessors: [0x42e]
Successors: [0x444]
---
0x439 DUP1
0x43a PUSH4 0xbefa1e2f
0x43f EQ
0x440 PUSH2 0x229
0x443 JUMPI
---
0x43a: V357 = 0xbefa1e2f
0x43f: V358 = EQ 0xbefa1e2f V335
0x440: V359 = 0x229
0x443: THROWI V358
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x444
[0x444:0x44e]
---
Predecessors: [0x439]
Successors: [0x44f]
---
0x444 DUP1
0x445 PUSH4 0xcf309012
0x44a EQ
0x44b PUSH2 0x232
0x44e JUMPI
---
0x445: V360 = 0xcf309012
0x44a: V361 = EQ 0xcf309012 V335
0x44b: V362 = 0x232
0x44e: THROWI V361
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x44f
[0x44f:0x459]
---
Predecessors: [0x444]
Successors: [0x45a]
---
0x44f DUP1
0x450 PUSH4 0xd7c81b55
0x455 EQ
0x456 PUSH2 0x244
0x459 JUMPI
---
0x450: V363 = 0xd7c81b55
0x455: V364 = EQ 0xd7c81b55 V335
0x456: V365 = 0x244
0x459: THROWI V364
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x45a
[0x45a:0x464]
---
Predecessors: [0x44f]
Successors: [0x465]
---
0x45a DUP1
0x45b PUSH4 0xff15b45f
0x460 EQ
0x461 PUSH2 0x2a0
0x464 JUMPI
---
0x45b: V366 = 0xff15b45f
0x460: V367 = EQ 0xff15b45f V335
0x461: V368 = 0x2a0
0x464: THROWI V367
---
Entry stack: [V335]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V335]

================================

Block 0x465
[0x465:0x479]
---
Predecessors: [0x45a]
Successors: [0x47a]
---
0x465 JUMPDEST
0x466 PUSH2 0x2a9
0x469 PUSH1 0x8
0x46b SLOAD
0x46c PUSH1 0xff
0x46e PUSH2 0x100
0x471 SWAP1
0x472 SWAP2
0x473 DIV
0x474 AND
0x475 ISZERO
0x476 PUSH2 0x2ff
0x479 JUMPI
---
0x465: JUMPDEST 
0x466: V369 = 0x2a9
0x469: V370 = 0x8
0x46b: V371 = S[0x8]
0x46c: V372 = 0xff
0x46e: V373 = 0x100
0x473: V374 = DIV V371 0x100
0x474: V375 = AND V374 0xff
0x475: V376 = ISZERO V375
0x476: V377 = 0x2ff
0x479: THROWI V376
---
Entry stack: [V335]
Stack pops: 0
Stack additions: [0x2a9]
Exit stack: [V335, 0x2a9]

================================

Block 0x47a
[0x47a:0x52f]
---
Predecessors: [0x465]
Successors: [0x530]
---
0x47a PUSH1 0x20
0x47c PUSH1 0x60
0x47e SWAP1
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0xd
0x483 PUSH1 0x80
0x485 MSTORE
0x486 PUSH32 0x426574206973206c6f636b656400000000000000000000000000000000000000
0x4a7 PUSH1 0xa0
0x4a9 MSTORE
0x4aa PUSH1 0x0
0x4ac DUP1
0x4ad MLOAD
0x4ae PUSH1 0x20
0x4b0 PUSH2 0x717
0x4b3 DUP4
0x4b4 CODECOPY
0x4b5 DUP2
0x4b6 MLOAD
0x4b7 SWAP2
0x4b8 MSTORE
0x4b9 SWAP1
0x4ba DUP1
0x4bb LOG1
0x4bc PUSH2 0x2
0x4bf JUMP
0x4c0 JUMPDEST
0x4c1 PUSH2 0x2a9
0x4c4 PUSH1 0x8
0x4c6 DUP1
0x4c7 SLOAD
0x4c8 PUSH2 0xff00
0x4cb NOT
0x4cc AND
0x4cd PUSH2 0x100
0x4d0 OR
0x4d1 SWAP1
0x4d2 SSTORE
0x4d3 PUSH1 0x1
0x4d5 SLOAD
0x4d6 PUSH1 0x6
0x4d8 SLOAD
0x4d9 PUSH1 0x5
0x4db SLOAD
0x4dc PUSH1 0x4
0x4de SLOAD
0x4df PUSH1 0x2
0x4e1 SLOAD
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea SWAP5
0x4eb SWAP1
0x4ec SWAP5
0x4ed AND
0x4ee SWAP4
0x4ef PUSH1 0x0
0x4f1 SWAP4
0x4f2 SWAP2
0x4f3 SWAP1
0x4f4 SWAP3
0x4f5 MUL
0x4f6 DIV
0x4f7 SWAP1
0x4f8 SUB
0x4f9 PUSH1 0x60
0x4fb DUP3
0x4fc DUP2
0x4fd DUP2
0x4fe DUP2
0x4ff DUP6
0x500 DUP9
0x501 DUP4
0x502 CALL
0x503 POP
0x504 POP
0x505 POP
0x506 POP
0x507 POP
0x508 JUMP
0x509 JUMPDEST
0x50a PUSH2 0x2a9
0x50d PUSH1 0x4
0x50f CALLDATALOAD
0x510 PUSH1 0x8
0x512 SLOAD
0x513 PUSH1 0x0
0x515 SWAP1
0x516 PUSH3 0x10000
0x51a SWAP1
0x51b DIV
0x51c PUSH1 0x1
0x51e PUSH1 0xa0
0x520 PUSH1 0x2
0x522 EXP
0x523 SUB
0x524 SWAP1
0x525 DUP2
0x526 AND
0x527 CALLER
0x528 SWAP1
0x529 SWAP2
0x52a AND
0x52b EQ
0x52c PUSH2 0x526
0x52f JUMPI
---
0x47a: V378 = 0x20
0x47c: V379 = 0x60
0x480: M[0x60] = 0x20
0x481: V380 = 0xd
0x483: V381 = 0x80
0x485: M[0x80] = 0xd
0x486: V382 = 0x426574206973206c6f636b656400000000000000000000000000000000000000
0x4a7: V383 = 0xa0
0x4a9: M[0xa0] = 0x426574206973206c6f636b656400000000000000000000000000000000000000
0x4aa: V384 = 0x0
0x4ad: V385 = M[0x0]
0x4ae: V386 = 0x20
0x4b0: V387 = 0x717
0x4b4: CODECOPY 0x0 0x717 0x20
0x4b6: V388 = M[0x0]
0x4b8: M[0x0] = V385
0x4bb: LOG 0x60 0x60 V388
0x4bc: V389 = 0x2
0x4bf: THROW 
0x4c0: JUMPDEST 
0x4c1: V390 = 0x2a9
0x4c4: V391 = 0x8
0x4c7: V392 = S[0x8]
0x4c8: V393 = 0xff00
0x4cb: V394 = NOT 0xff00
0x4cc: V395 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V392
0x4cd: V396 = 0x100
0x4d0: V397 = OR 0x100 V395
0x4d2: S[0x8] = V397
0x4d3: V398 = 0x1
0x4d5: V399 = S[0x1]
0x4d6: V400 = 0x6
0x4d8: V401 = S[0x6]
0x4d9: V402 = 0x5
0x4db: V403 = S[0x5]
0x4dc: V404 = 0x4
0x4de: V405 = S[0x4]
0x4df: V406 = 0x2
0x4e1: V407 = S[0x2]
0x4e2: V408 = 0x1
0x4e4: V409 = 0xa0
0x4e6: V410 = 0x2
0x4e8: V411 = EXP 0x2 0xa0
0x4e9: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ed: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x4ef: V414 = 0x0
0x4f5: V415 = MUL V403 V405
0x4f6: V416 = DIV V415 V401
0x4f8: V417 = SUB V407 V416
0x4f9: V418 = 0x60
0x502: V419 = CALL 0x0 V413 V417 0x60 0x0 0x60 0x0
0x508: THROW 
0x509: JUMPDEST 
0x50a: V420 = 0x2a9
0x50d: V421 = 0x4
0x50f: V422 = CALLDATALOAD 0x4
0x510: V423 = 0x8
0x512: V424 = S[0x8]
0x513: V425 = 0x0
0x516: V426 = 0x10000
0x51b: V427 = DIV V424 0x10000
0x51c: V428 = 0x1
0x51e: V429 = 0xa0
0x520: V430 = 0x2
0x522: V431 = EXP 0x2 0xa0
0x523: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x526: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x527: V434 = CALLER
0x52a: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff V434
0x52b: V436 = EQ V435 V433
0x52c: V437 = 0x526
0x52f: THROWI V436
---
Entry stack: [V335, 0x2a9]
Stack pops: 0
Stack additions: [0x0, V422, 0x2a9]
Exit stack: []

================================

Block 0x530
[0x530:0x5a5]
---
Predecessors: [0x47a]
Successors: [0x5a6]
---
0x530 PUSH1 0x20
0x532 PUSH1 0x60
0x534 SWAP1
0x535 DUP2
0x536 MSTORE
0x537 PUSH1 0x16
0x539 PUSH1 0x80
0x53b MSTORE
0x53c PUSH32 0x4f6e6c79206f7261636c652063616e20736574746c6500000000000000000000
0x55d PUSH1 0xa0
0x55f MSTORE
0x560 PUSH1 0x0
0x562 DUP1
0x563 MLOAD
0x564 PUSH1 0x20
0x566 PUSH2 0x717
0x569 DUP4
0x56a CODECOPY
0x56b DUP2
0x56c MLOAD
0x56d SWAP2
0x56e MSTORE
0x56f SWAP1
0x570 DUP1
0x571 LOG1
0x572 PUSH2 0x2
0x575 JUMP
0x576 JUMPDEST
0x577 PUSH2 0x46a
0x57a PUSH1 0x4
0x57c SLOAD
0x57d DUP2
0x57e JUMP
0x57f JUMPDEST
0x580 PUSH2 0x46a
0x583 PUSH1 0x5
0x585 SLOAD
0x586 DUP2
0x587 JUMP
0x588 JUMPDEST
0x589 PUSH2 0x2a9
0x58c PUSH1 0x4
0x58e CALLDATALOAD
0x58f PUSH1 0x0
0x591 SLOAD
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a SWAP1
0x59b DUP2
0x59c AND
0x59d CALLER
0x59e SWAP1
0x59f SWAP2
0x5a0 AND
0x5a1 EQ
0x5a2 PUSH2 0x691
0x5a5 JUMPI
---
0x530: V438 = 0x20
0x532: V439 = 0x60
0x536: M[0x60] = 0x20
0x537: V440 = 0x16
0x539: V441 = 0x80
0x53b: M[0x80] = 0x16
0x53c: V442 = 0x4f6e6c79206f7261636c652063616e20736574746c6500000000000000000000
0x55d: V443 = 0xa0
0x55f: M[0xa0] = 0x4f6e6c79206f7261636c652063616e20736574746c6500000000000000000000
0x560: V444 = 0x0
0x563: V445 = M[0x0]
0x564: V446 = 0x20
0x566: V447 = 0x717
0x56a: CODECOPY 0x0 0x717 0x20
0x56c: V448 = M[0x0]
0x56e: M[0x0] = V445
0x571: LOG 0x60 0x60 V448
0x572: V449 = 0x2
0x575: THROW 
0x576: JUMPDEST 
0x577: V450 = 0x46a
0x57a: V451 = 0x4
0x57c: V452 = S[0x4]
0x57e: THROW 
0x57f: JUMPDEST 
0x580: V453 = 0x46a
0x583: V454 = 0x5
0x585: V455 = S[0x5]
0x587: THROW 
0x588: JUMPDEST 
0x589: V456 = 0x2a9
0x58c: V457 = 0x4
0x58e: V458 = CALLDATALOAD 0x4
0x58f: V459 = 0x0
0x591: V460 = S[0x0]
0x592: V461 = 0x1
0x594: V462 = 0xa0
0x596: V463 = 0x2
0x598: V464 = EXP 0x2 0xa0
0x599: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59c: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x59d: V467 = CALLER
0x5a0: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x5a1: V469 = EQ V468 V466
0x5a2: V470 = 0x691
0x5a5: THROWI V469
---
Entry stack: [0x2a9, V422, 0x0]
Stack pops: 0
Stack additions: [V452, 0x46a, V455, 0x46a, V458, 0x2a9]
Exit stack: []

================================

Block 0x5a6
[0x5a6:0x65c]
---
Predecessors: [0x530]
Successors: [0x65d]
---
0x5a6 PUSH1 0x20
0x5a8 PUSH1 0x60
0x5aa SWAP1
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x13
0x5af PUSH1 0x80
0x5b1 MSTORE
0x5b2 PUSH32 0x42616420496e697469616c204465706f73697400000000000000000000000000
0x5d3 PUSH1 0xa0
0x5d5 MSTORE
0x5d6 PUSH1 0x0
0x5d8 DUP1
0x5d9 MLOAD
0x5da PUSH1 0x20
0x5dc PUSH2 0x717
0x5df DUP4
0x5e0 CODECOPY
0x5e1 DUP2
0x5e2 MLOAD
0x5e3 SWAP2
0x5e4 MSTORE
0x5e5 SWAP1
0x5e6 DUP1
0x5e7 LOG1
0x5e8 PUSH2 0x2
0x5eb JUMP
0x5ec JUMPDEST
0x5ed PUSH2 0x46a
0x5f0 PUSH1 0x2
0x5f2 SLOAD
0x5f3 DUP2
0x5f4 JUMP
0x5f5 JUMPDEST
0x5f6 PUSH2 0x474
0x5f9 PUSH1 0x8
0x5fb SLOAD
0x5fc PUSH1 0xff
0x5fe AND
0x5ff DUP2
0x600 JUMP
0x601 JUMPDEST
0x602 PUSH2 0x46a
0x605 PUSH1 0x3
0x607 SLOAD
0x608 DUP2
0x609 JUMP
0x60a JUMPDEST
0x60b PUSH2 0x474
0x60e PUSH1 0x8
0x610 SLOAD
0x611 PUSH1 0xff
0x613 PUSH2 0x100
0x616 SWAP1
0x617 SWAP2
0x618 DIV
0x619 AND
0x61a DUP2
0x61b JUMP
0x61c JUMPDEST
0x61d PUSH2 0x480
0x620 PUSH1 0x7
0x622 DUP1
0x623 SLOAD
0x624 PUSH1 0x20
0x626 PUSH1 0x1f
0x628 PUSH1 0x2
0x62a PUSH1 0x0
0x62c NOT
0x62d PUSH1 0x1
0x62f DUP6
0x630 AND
0x631 ISZERO
0x632 PUSH2 0x100
0x635 MUL
0x636 ADD
0x637 SWAP1
0x638 SWAP4
0x639 AND
0x63a SWAP3
0x63b SWAP1
0x63c SWAP3
0x63d DIV
0x63e SWAP2
0x63f DUP3
0x640 ADD
0x641 DUP2
0x642 SWAP1
0x643 DIV
0x644 MUL
0x645 PUSH1 0x80
0x647 SWAP1
0x648 DUP2
0x649 ADD
0x64a PUSH1 0x40
0x64c MSTORE
0x64d PUSH1 0x60
0x64f DUP3
0x650 DUP2
0x651 MSTORE
0x652 SWAP3
0x653 SWAP2
0x654 SWAP1
0x655 DUP3
0x656 DUP3
0x657 DUP1
0x658 ISZERO
0x659 PUSH2 0x70f
0x65c JUMPI
---
0x5a6: V471 = 0x20
0x5a8: V472 = 0x60
0x5ac: M[0x60] = 0x20
0x5ad: V473 = 0x13
0x5af: V474 = 0x80
0x5b1: M[0x80] = 0x13
0x5b2: V475 = 0x42616420496e697469616c204465706f73697400000000000000000000000000
0x5d3: V476 = 0xa0
0x5d5: M[0xa0] = 0x42616420496e697469616c204465706f73697400000000000000000000000000
0x5d6: V477 = 0x0
0x5d9: V478 = M[0x0]
0x5da: V479 = 0x20
0x5dc: V480 = 0x717
0x5e0: CODECOPY 0x0 0x717 0x20
0x5e2: V481 = M[0x0]
0x5e4: M[0x0] = V478
0x5e7: LOG 0x60 0x60 V481
0x5e8: V482 = 0x2
0x5eb: THROW 
0x5ec: JUMPDEST 
0x5ed: V483 = 0x46a
0x5f0: V484 = 0x2
0x5f2: V485 = S[0x2]
0x5f4: THROW 
0x5f5: JUMPDEST 
0x5f6: V486 = 0x474
0x5f9: V487 = 0x8
0x5fb: V488 = S[0x8]
0x5fc: V489 = 0xff
0x5fe: V490 = AND 0xff V488
0x600: THROW 
0x601: JUMPDEST 
0x602: V491 = 0x46a
0x605: V492 = 0x3
0x607: V493 = S[0x3]
0x609: THROW 
0x60a: JUMPDEST 
0x60b: V494 = 0x474
0x60e: V495 = 0x8
0x610: V496 = S[0x8]
0x611: V497 = 0xff
0x613: V498 = 0x100
0x618: V499 = DIV V496 0x100
0x619: V500 = AND V499 0xff
0x61b: THROW 
0x61c: JUMPDEST 
0x61d: V501 = 0x480
0x620: V502 = 0x7
0x623: V503 = S[0x7]
0x624: V504 = 0x20
0x626: V505 = 0x1f
0x628: V506 = 0x2
0x62a: V507 = 0x0
0x62c: V508 = NOT 0x0
0x62d: V509 = 0x1
0x630: V510 = AND V503 0x1
0x631: V511 = ISZERO V510
0x632: V512 = 0x100
0x635: V513 = MUL 0x100 V511
0x636: V514 = ADD V513 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x639: V515 = AND V503 V514
0x63d: V516 = DIV V515 0x2
0x640: V517 = ADD V516 0x1f
0x643: V518 = DIV V517 0x20
0x644: V519 = MUL V518 0x20
0x645: V520 = 0x80
0x649: V521 = ADD 0x80 V519
0x64a: V522 = 0x40
0x64c: M[0x40] = V521
0x64d: V523 = 0x60
0x651: M[0x60] = V516
0x658: V524 = ISZERO V516
0x659: V525 = 0x70f
0x65c: THROWI V524
---
Entry stack: [0x2a9, V458]
Stack pops: 0
Stack additions: [V485, 0x46a, V490, 0x474, V493, 0x46a, V500, 0x474, V516, 0x7, 0x80, V516, 0x7, 0x60, 0x480]
Exit stack: []

================================

Block 0x65d
[0x65d:0x664]
---
Predecessors: [0x5a6]
Successors: [0x665]
---
0x65d DUP1
0x65e PUSH1 0x1f
0x660 LT
0x661 PUSH2 0x6e4
0x664 JUMPI
---
0x65e: V526 = 0x1f
0x660: V527 = LT 0x1f V516
0x661: V528 = 0x6e4
0x664: THROWI V527
---
Entry stack: [0x480, 0x60, 0x7, V516, 0x80, 0x7, V516]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x480, 0x60, 0x7, V516, 0x80, 0x7, V516]

================================

Block 0x665
[0x665:0x6ee]
---
Predecessors: [0x65d]
Successors: [0x6ef]
---
0x665 PUSH2 0x100
0x668 DUP1
0x669 DUP4
0x66a SLOAD
0x66b DIV
0x66c MUL
0x66d DUP4
0x66e MSTORE
0x66f SWAP2
0x670 PUSH1 0x20
0x672 ADD
0x673 SWAP2
0x674 PUSH2 0x70f
0x677 JUMP
0x678 JUMPDEST
0x679 PUSH2 0x46a
0x67c PUSH1 0x6
0x67e SLOAD
0x67f DUP2
0x680 JUMP
0x681 JUMPDEST
0x682 STOP
0x683 JUMPDEST
0x684 PUSH1 0x3
0x686 DUP1
0x687 SLOAD
0x688 PUSH1 0x0
0x68a SWAP1
0x68b DUP2
0x68c MSTORE
0x68d PUSH1 0x9
0x68f PUSH1 0x20
0x691 SWAP1
0x692 DUP2
0x693 MSTORE
0x694 PUSH1 0x40
0x696 DUP1
0x697 DUP4
0x698 SHA3
0x699 DUP1
0x69a SLOAD
0x69b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b0 NOT
0x6b1 AND
0x6b2 CALLER
0x6b3 OR
0x6b4 SWAP1
0x6b5 SSTORE
0x6b6 DUP4
0x6b7 SLOAD
0x6b8 DUP4
0x6b9 MSTORE
0x6ba PUSH1 0xa
0x6bc SWAP1
0x6bd SWAP2
0x6be MSTORE
0x6bf SWAP1
0x6c0 SHA3
0x6c1 CALLVALUE
0x6c2 SWAP1
0x6c3 DUP2
0x6c4 SWAP1
0x6c5 SSTORE
0x6c6 PUSH1 0x4
0x6c8 DUP1
0x6c9 SLOAD
0x6ca SWAP1
0x6cb SWAP2
0x6cc ADD
0x6cd SWAP1
0x6ce SSTORE
0x6cf DUP1
0x6d0 SLOAD
0x6d1 PUSH1 0x1
0x6d3 ADD
0x6d4 SWAP1
0x6d5 SSTORE
0x6d6 JUMP
0x6d7 JUMPDEST
0x6d8 PUSH1 0x1
0x6da SLOAD
0x6db CALLER
0x6dc PUSH1 0x1
0x6de PUSH1 0xa0
0x6e0 PUSH1 0x2
0x6e2 EXP
0x6e3 SUB
0x6e4 SWAP1
0x6e5 DUP2
0x6e6 AND
0x6e7 SWAP2
0x6e8 AND
0x6e9 EQ
0x6ea ISZERO
0x6eb PUSH2 0x35d
0x6ee JUMPI
---
0x665: V529 = 0x100
0x66a: V530 = S[0x7]
0x66b: V531 = DIV V530 0x100
0x66c: V532 = MUL V531 0x100
0x66e: M[0x80] = V532
0x670: V533 = 0x20
0x672: V534 = ADD 0x20 0x80
0x674: V535 = 0x70f
0x677: THROW 
0x678: JUMPDEST 
0x679: V536 = 0x46a
0x67c: V537 = 0x6
0x67e: V538 = S[0x6]
0x680: THROW 
0x681: JUMPDEST 
0x682: STOP 
0x683: JUMPDEST 
0x684: V539 = 0x3
0x687: V540 = S[0x3]
0x688: V541 = 0x0
0x68c: M[0x0] = V540
0x68d: V542 = 0x9
0x68f: V543 = 0x20
0x693: M[0x20] = 0x9
0x694: V544 = 0x40
0x698: V545 = SHA3 0x0 0x40
0x69a: V546 = S[V545]
0x69b: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b0: V548 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V549 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V546
0x6b2: V550 = CALLER
0x6b3: V551 = OR V550 V549
0x6b5: S[V545] = V551
0x6b7: V552 = S[0x3]
0x6b9: M[0x0] = V552
0x6ba: V553 = 0xa
0x6be: M[0x20] = 0xa
0x6c0: V554 = SHA3 0x0 0x40
0x6c1: V555 = CALLVALUE
0x6c5: S[V554] = V555
0x6c6: V556 = 0x4
0x6c9: V557 = S[0x4]
0x6cc: V558 = ADD V555 V557
0x6ce: S[0x4] = V558
0x6d0: V559 = S[0x3]
0x6d1: V560 = 0x1
0x6d3: V561 = ADD 0x1 V559
0x6d5: S[0x3] = V561
0x6d6: JUMP S0
0x6d7: JUMPDEST 
0x6d8: V562 = 0x1
0x6da: V563 = S[0x1]
0x6db: V564 = CALLER
0x6dc: V565 = 0x1
0x6de: V566 = 0xa0
0x6e0: V567 = 0x2
0x6e2: V568 = EXP 0x2 0xa0
0x6e3: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e6: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x6e8: V571 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: V572 = EQ V571 V570
0x6ea: V573 = ISZERO V572
0x6eb: V574 = 0x35d
0x6ee: THROWI V573
---
Entry stack: [0x480, 0x60, 0x7, V516, 0x80, 0x7, V516]
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0x6ef
[0x6ef:0x740]
---
Predecessors: [0x665]
Successors: [0x741]
---
0x6ef PUSH1 0x20
0x6f1 PUSH1 0x60
0x6f3 SWAP1
0x6f4 DUP2
0x6f5 MSTORE
0x6f6 PUSH1 0x15
0x6f8 PUSH1 0x80
0x6fa MSTORE
0x6fb PUSH32 0x43616e742062657420616761696e73742073656c660000000000000000000000
0x71c PUSH1 0xa0
0x71e MSTORE
0x71f PUSH1 0x0
0x721 DUP1
0x722 MLOAD
0x723 PUSH1 0x20
0x725 PUSH2 0x717
0x728 DUP4
0x729 CODECOPY
0x72a DUP2
0x72b MLOAD
0x72c SWAP2
0x72d MSTORE
0x72e SWAP1
0x72f DUP1
0x730 LOG1
0x731 PUSH2 0x2
0x734 JUMP
0x735 JUMPDEST
0x736 PUSH1 0x8
0x738 SLOAD
0x739 PUSH1 0xff
0x73b AND
0x73c ISZERO
0x73d PUSH2 0x3af
0x740 JUMPI
---
0x6ef: V575 = 0x20
0x6f1: V576 = 0x60
0x6f5: M[0x60] = 0x20
0x6f6: V577 = 0x15
0x6f8: V578 = 0x80
0x6fa: M[0x80] = 0x15
0x6fb: V579 = 0x43616e742062657420616761696e73742073656c660000000000000000000000
0x71c: V580 = 0xa0
0x71e: M[0xa0] = 0x43616e742062657420616761696e73742073656c660000000000000000000000
0x71f: V581 = 0x0
0x722: V582 = M[0x0]
0x723: V583 = 0x20
0x725: V584 = 0x717
0x729: CODECOPY 0x0 0x717 0x20
0x72b: V585 = M[0x0]
0x72d: M[0x0] = V582
0x730: LOG 0x60 0x60 V585
0x731: V586 = 0x2
0x734: THROW 
0x735: JUMPDEST 
0x736: V587 = 0x8
0x738: V588 = S[0x8]
0x739: V589 = 0xff
0x73b: V590 = AND 0xff V588
0x73c: V591 = ISZERO V590
0x73d: V592 = 0x3af
0x740: THROWI V591
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x741
[0x741:0x792]
---
Predecessors: [0x6ef]
Successors: [0x793]
---
0x741 PUSH1 0x20
0x743 PUSH1 0x60
0x745 SWAP1
0x746 DUP2
0x747 MSTORE
0x748 PUSH1 0x13
0x74a PUSH1 0x80
0x74c MSTORE
0x74d PUSH32 0x42657420616c726561647920736574746c656400000000000000000000000000
0x76e PUSH1 0xa0
0x770 MSTORE
0x771 PUSH1 0x0
0x773 DUP1
0x774 MLOAD
0x775 PUSH1 0x20
0x777 PUSH2 0x717
0x77a DUP4
0x77b CODECOPY
0x77c DUP2
0x77d MLOAD
0x77e SWAP2
0x77f MSTORE
0x780 SWAP1
0x781 DUP1
0x782 LOG1
0x783 PUSH2 0x2
0x786 JUMP
0x787 JUMPDEST
0x788 PUSH1 0x2
0x78a SLOAD
0x78b PUSH1 0x0
0x78d EQ
0x78e ISZERO
0x78f PUSH2 0x401
0x792 JUMPI
---
0x741: V593 = 0x20
0x743: V594 = 0x60
0x747: M[0x60] = 0x20
0x748: V595 = 0x13
0x74a: V596 = 0x80
0x74c: M[0x80] = 0x13
0x74d: V597 = 0x42657420616c726561647920736574746c656400000000000000000000000000
0x76e: V598 = 0xa0
0x770: M[0xa0] = 0x42657420616c726561647920736574746c656400000000000000000000000000
0x771: V599 = 0x0
0x774: V600 = M[0x0]
0x775: V601 = 0x20
0x777: V602 = 0x717
0x77b: CODECOPY 0x0 0x717 0x20
0x77d: V603 = M[0x0]
0x77f: M[0x0] = V600
0x782: LOG 0x60 0x60 V603
0x783: V604 = 0x2
0x786: THROW 
0x787: JUMPDEST 
0x788: V605 = 0x2
0x78a: V606 = S[0x2]
0x78b: V607 = 0x0
0x78d: V608 = EQ 0x0 V606
0x78e: V609 = ISZERO V608
0x78f: V610 = 0x401
0x792: THROWI V609
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x793
[0x793:0x7fb]
---
Predecessors: [0x741]
Successors: [0x7fc]
---
0x793 PUSH1 0x20
0x795 PUSH1 0x60
0x797 SWAP1
0x798 DUP2
0x799 MSTORE
0x79a PUSH1 0x17
0x79c PUSH1 0x80
0x79e MSTORE
0x79f PUSH32 0x496e697469616c2062616c616e6365206e6f7420736574000000000000000000
0x7c0 PUSH1 0xa0
0x7c2 MSTORE
0x7c3 PUSH1 0x0
0x7c5 DUP1
0x7c6 MLOAD
0x7c7 PUSH1 0x20
0x7c9 PUSH2 0x717
0x7cc DUP4
0x7cd CODECOPY
0x7ce DUP2
0x7cf MLOAD
0x7d0 SWAP2
0x7d1 MSTORE
0x7d2 SWAP1
0x7d3 DUP1
0x7d4 LOG1
0x7d5 PUSH2 0x2
0x7d8 JUMP
0x7d9 JUMPDEST
0x7da PUSH1 0x6
0x7dc PUSH1 0x0
0x7de POP
0x7df SLOAD
0x7e0 PUSH1 0x2
0x7e2 PUSH1 0x0
0x7e4 POP
0x7e5 SLOAD
0x7e6 MUL
0x7e7 PUSH1 0x5
0x7e9 PUSH1 0x0
0x7eb POP
0x7ec SLOAD
0x7ed CALLVALUE
0x7ee PUSH1 0x4
0x7f0 PUSH1 0x0
0x7f2 POP
0x7f3 SLOAD
0x7f4 ADD
0x7f5 MUL
0x7f6 GT
0x7f7 ISZERO
0x7f8 PUSH2 0x2ab
0x7fb JUMPI
---
0x793: V611 = 0x20
0x795: V612 = 0x60
0x799: M[0x60] = 0x20
0x79a: V613 = 0x17
0x79c: V614 = 0x80
0x79e: M[0x80] = 0x17
0x79f: V615 = 0x496e697469616c2062616c616e6365206e6f7420736574000000000000000000
0x7c0: V616 = 0xa0
0x7c2: M[0xa0] = 0x496e697469616c2062616c616e6365206e6f7420736574000000000000000000
0x7c3: V617 = 0x0
0x7c6: V618 = M[0x0]
0x7c7: V619 = 0x20
0x7c9: V620 = 0x717
0x7cd: CODECOPY 0x0 0x717 0x20
0x7cf: V621 = M[0x0]
0x7d1: M[0x0] = V618
0x7d4: LOG 0x60 0x60 V621
0x7d5: V622 = 0x2
0x7d8: THROW 
0x7d9: JUMPDEST 
0x7da: V623 = 0x6
0x7dc: V624 = 0x0
0x7df: V625 = S[0x6]
0x7e0: V626 = 0x2
0x7e2: V627 = 0x0
0x7e5: V628 = S[0x2]
0x7e6: V629 = MUL V628 V625
0x7e7: V630 = 0x5
0x7e9: V631 = 0x0
0x7ec: V632 = S[0x5]
0x7ed: V633 = CALLVALUE
0x7ee: V634 = 0x4
0x7f0: V635 = 0x0
0x7f3: V636 = S[0x4]
0x7f4: V637 = ADD V636 V633
0x7f5: V638 = MUL V637 V632
0x7f6: V639 = GT V638 V629
0x7f7: V640 = ISZERO V639
0x7f8: V641 = 0x2ab
0x7fb: THROWI V640
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7fc
[0x7fc:0x89e]
---
Predecessors: [0x793]
Successors: [0x89f]
---
0x7fc PUSH1 0x20
0x7fe PUSH1 0x60
0x800 SWAP1
0x801 DUP2
0x802 MSTORE
0x803 PUSH1 0x1a
0x805 PUSH1 0x80
0x807 MSTORE
0x808 PUSH32 0x45786365737320636f6c6c61746572616c206578636565646564000000000000
0x829 PUSH1 0xa0
0x82b MSTORE
0x82c PUSH1 0x0
0x82e DUP1
0x82f MLOAD
0x830 PUSH1 0x20
0x832 PUSH2 0x717
0x835 DUP4
0x836 CODECOPY
0x837 DUP2
0x838 MLOAD
0x839 SWAP2
0x83a MSTORE
0x83b SWAP1
0x83c DUP1
0x83d LOG1
0x83e PUSH2 0x2
0x841 JUMP
0x842 JUMPDEST
0x843 PUSH1 0x60
0x845 SWAP1
0x846 DUP2
0x847 MSTORE
0x848 PUSH1 0x20
0x84a SWAP1
0x84b RETURN
0x84c JUMPDEST
0x84d ISZERO
0x84e ISZERO
0x84f PUSH1 0x60
0x851 SWAP1
0x852 DUP2
0x853 MSTORE
0x854 PUSH1 0x20
0x856 SWAP1
0x857 RETURN
0x858 JUMPDEST
0x859 PUSH1 0x40
0x85b MLOAD
0x85c DUP1
0x85d DUP1
0x85e PUSH1 0x20
0x860 ADD
0x861 DUP3
0x862 DUP2
0x863 SUB
0x864 DUP3
0x865 MSTORE
0x866 DUP4
0x867 DUP2
0x868 DUP2
0x869 MLOAD
0x86a DUP2
0x86b MSTORE
0x86c PUSH1 0x20
0x86e ADD
0x86f SWAP2
0x870 POP
0x871 DUP1
0x872 MLOAD
0x873 SWAP1
0x874 PUSH1 0x20
0x876 ADD
0x877 SWAP1
0x878 DUP1
0x879 DUP4
0x87a DUP4
0x87b DUP3
0x87c SWAP1
0x87d PUSH1 0x0
0x87f PUSH1 0x4
0x881 PUSH1 0x20
0x883 DUP5
0x884 PUSH1 0x1f
0x886 ADD
0x887 DIV
0x888 PUSH1 0xf
0x88a MUL
0x88b PUSH1 0x3
0x88d ADD
0x88e CALL
0x88f POP
0x890 SWAP1
0x891 POP
0x892 SWAP1
0x893 DUP2
0x894 ADD
0x895 SWAP1
0x896 PUSH1 0x1f
0x898 AND
0x899 DUP1
0x89a ISZERO
0x89b PUSH2 0x4e0
0x89e JUMPI
---
0x7fc: V642 = 0x20
0x7fe: V643 = 0x60
0x802: M[0x60] = 0x20
0x803: V644 = 0x1a
0x805: V645 = 0x80
0x807: M[0x80] = 0x1a
0x808: V646 = 0x45786365737320636f6c6c61746572616c206578636565646564000000000000
0x829: V647 = 0xa0
0x82b: M[0xa0] = 0x45786365737320636f6c6c61746572616c206578636565646564000000000000
0x82c: V648 = 0x0
0x82f: V649 = M[0x0]
0x830: V650 = 0x20
0x832: V651 = 0x717
0x836: CODECOPY 0x0 0x717 0x20
0x838: V652 = M[0x0]
0x83a: M[0x0] = V649
0x83d: LOG 0x60 0x60 V652
0x83e: V653 = 0x2
0x841: THROW 
0x842: JUMPDEST 
0x843: V654 = 0x60
0x847: M[0x60] = S0
0x848: V655 = 0x20
0x84b: RETURN 0x60 0x20
0x84c: JUMPDEST 
0x84d: V656 = ISZERO S0
0x84e: V657 = ISZERO V656
0x84f: V658 = 0x60
0x853: M[0x60] = V657
0x854: V659 = 0x20
0x857: RETURN 0x60 0x20
0x858: JUMPDEST 
0x859: V660 = 0x40
0x85b: V661 = M[0x40]
0x85e: V662 = 0x20
0x860: V663 = ADD 0x20 V661
0x863: V664 = SUB V663 V661
0x865: M[V661] = V664
0x869: V665 = M[S0]
0x86b: M[V663] = V665
0x86c: V666 = 0x20
0x86e: V667 = ADD 0x20 V663
0x872: V668 = M[S0]
0x874: V669 = 0x20
0x876: V670 = ADD 0x20 S0
0x87d: V671 = 0x0
0x87f: V672 = 0x4
0x881: V673 = 0x20
0x884: V674 = 0x1f
0x886: V675 = ADD 0x1f V668
0x887: V676 = DIV V675 0x20
0x888: V677 = 0xf
0x88a: V678 = MUL 0xf V676
0x88b: V679 = 0x3
0x88d: V680 = ADD 0x3 V678
0x88e: V681 = CALL V680 0x4 0x0 V670 V668 V667 V668
0x894: V682 = ADD V668 V667
0x896: V683 = 0x1f
0x898: V684 = AND 0x1f V668
0x89a: V685 = ISZERO V684
0x89b: V686 = 0x4e0
0x89e: THROWI V685
---
Entry stack: []
Stack pops: 0
Stack additions: [V684, V682, V661, V661, S0]
Exit stack: []

================================

Block 0x89f
[0x89f:0x8b7]
---
Predecessors: [0x7fc]
Successors: [0x8b8]
---
0x89f DUP1
0x8a0 DUP3
0x8a1 SUB
0x8a2 DUP1
0x8a3 MLOAD
0x8a4 PUSH1 0x1
0x8a6 DUP4
0x8a7 PUSH1 0x20
0x8a9 SUB
0x8aa PUSH2 0x100
0x8ad EXP
0x8ae SUB
0x8af NOT
0x8b0 AND
0x8b1 DUP2
0x8b2 MSTORE
0x8b3 PUSH1 0x20
0x8b5 ADD
0x8b6 SWAP2
0x8b7 POP
---
0x8a1: V687 = SUB V682 V684
0x8a3: V688 = M[V687]
0x8a4: V689 = 0x1
0x8a7: V690 = 0x20
0x8a9: V691 = SUB 0x20 V684
0x8aa: V692 = 0x100
0x8ad: V693 = EXP 0x100 V691
0x8ae: V694 = SUB V693 0x1
0x8af: V695 = NOT V694
0x8b0: V696 = AND V695 V688
0x8b2: M[V687] = V696
0x8b3: V697 = 0x20
0x8b5: V698 = ADD 0x20 V687
---
Entry stack: [S4, V661, V661, V682, V684]
Stack pops: 2
Stack additions: [V698, S0]
Exit stack: [S4, V661, V661, V698, V684]

================================

Block 0x8b8
[0x8b8:0x8ec]
---
Predecessors: [0x89f]
Successors: [0x8ed]
---
0x8b8 JUMPDEST
0x8b9 POP
0x8ba SWAP3
0x8bb POP
0x8bc POP
0x8bd POP
0x8be PUSH1 0x40
0x8c0 MLOAD
0x8c1 DUP1
0x8c2 SWAP2
0x8c3 SUB
0x8c4 SWAP1
0x8c5 RETURN
0x8c6 JUMPDEST
0x8c7 PUSH1 0x40
0x8c9 MLOAD
0x8ca PUSH1 0x1
0x8cc SLOAD
0x8cd PUSH1 0x1
0x8cf PUSH1 0xa0
0x8d1 PUSH1 0x2
0x8d3 EXP
0x8d4 SUB
0x8d5 SWAP1
0x8d6 DUP2
0x8d7 AND
0x8d8 SWAP2
0x8d9 PUSH1 0x0
0x8db SWAP2
0x8dc ADDRESS
0x8dd AND
0x8de BALANCE
0x8df SWAP1
0x8e0 DUP3
0x8e1 DUP2
0x8e2 DUP2
0x8e3 DUP2
0x8e4 DUP6
0x8e5 DUP9
0x8e6 DUP4
0x8e7 CALL
0x8e8 POP
0x8e9 POP
0x8ea POP
0x8eb POP
0x8ec POP
---
0x8b8: JUMPDEST 
0x8be: V699 = 0x40
0x8c0: V700 = M[0x40]
0x8c3: V701 = SUB V698 V700
0x8c5: RETURN V700 V701
0x8c6: JUMPDEST 
0x8c7: V702 = 0x40
0x8c9: V703 = M[0x40]
0x8ca: V704 = 0x1
0x8cc: V705 = S[0x1]
0x8cd: V706 = 0x1
0x8cf: V707 = 0xa0
0x8d1: V708 = 0x2
0x8d3: V709 = EXP 0x2 0xa0
0x8d4: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d7: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0x8d9: V712 = 0x0
0x8dc: V713 = ADDRESS
0x8dd: V714 = AND V713 0xffffffffffffffffffffffffffffffffffffffff
0x8de: V715 = BALANCE V714
0x8e7: V716 = CALL 0x0 V711 V715 V703 0x0 V703 0x0
---
Entry stack: [S4, V661, V661, V698, V684]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x8ed
[0x8ed:0x909]
---
Predecessors: [0x8b8]
Successors: [0x90a]
---
0x8ed JUMPDEST
0x8ee PUSH1 0x8
0x8f0 DUP1
0x8f1 SLOAD
0x8f2 PUSH1 0xff
0x8f4 NOT
0x8f5 AND
0x8f6 PUSH1 0x1
0x8f8 OR
0x8f9 SWAP1
0x8fa SSTORE
0x8fb POP
0x8fc POP
0x8fd JUMP
0x8fe JUMPDEST
0x8ff PUSH1 0x8
0x901 SLOAD
0x902 PUSH1 0xff
0x904 AND
0x905 ISZERO
0x906 PUSH2 0x578
0x909 JUMPI
---
0x8ed: JUMPDEST 
0x8ee: V717 = 0x8
0x8f1: V718 = S[0x8]
0x8f2: V719 = 0xff
0x8f4: V720 = NOT 0xff
0x8f5: V721 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V718
0x8f6: V722 = 0x1
0x8f8: V723 = OR 0x1 V721
0x8fa: S[0x8] = V723
0x8fd: JUMP S2
0x8fe: JUMPDEST 
0x8ff: V724 = 0x8
0x901: V725 = S[0x8]
0x902: V726 = 0xff
0x904: V727 = AND 0xff V725
0x905: V728 = ISZERO V727
0x906: V729 = 0x578
0x909: THROWI V728
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x90a
[0x90a:0x959]
---
Predecessors: [0x8ed]
Successors: [0x95a]
---
0x90a PUSH1 0x20
0x90c PUSH1 0x60
0x90e SWAP1
0x90f DUP2
0x910 MSTORE
0x911 PUSH1 0x13
0x913 PUSH1 0x80
0x915 MSTORE
0x916 PUSH32 0x42657420616c726561647920736574746c656400000000000000000000000000
0x937 PUSH1 0xa0
0x939 MSTORE
0x93a PUSH1 0x0
0x93c DUP1
0x93d MLOAD
0x93e PUSH1 0x20
0x940 PUSH2 0x717
0x943 DUP4
0x944 CODECOPY
0x945 DUP2
0x946 MLOAD
0x947 SWAP2
0x948 MSTORE
0x949 SWAP1
0x94a DUP1
0x94b LOG1
0x94c PUSH2 0x2
0x94f JUMP
0x950 JUMPDEST
0x951 DUP2
0x952 PUSH1 0x0
0x954 EQ
0x955 ISZERO
0x956 PUSH2 0x5aa
0x959 JUMPI
---
0x90a: V730 = 0x20
0x90c: V731 = 0x60
0x910: M[0x60] = 0x20
0x911: V732 = 0x13
0x913: V733 = 0x80
0x915: M[0x80] = 0x13
0x916: V734 = 0x42657420616c726561647920736574746c656400000000000000000000000000
0x937: V735 = 0xa0
0x939: M[0xa0] = 0x42657420616c726561647920736574746c656400000000000000000000000000
0x93a: V736 = 0x0
0x93d: V737 = M[0x0]
0x93e: V738 = 0x20
0x940: V739 = 0x717
0x944: CODECOPY 0x0 0x717 0x20
0x946: V740 = M[0x0]
0x948: M[0x0] = V737
0x94b: LOG 0x60 0x60 V740
0x94c: V741 = 0x2
0x94f: THROW 
0x950: JUMPDEST 
0x952: V742 = 0x0
0x954: V743 = EQ 0x0 S1
0x955: V744 = ISZERO V743
0x956: V745 = 0x5aa
0x959: THROWI V744
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x95a
[0x95a:0x982]
---
Predecessors: [0x90a]
Successors: [0x983]
---
0x95a PUSH1 0x1
0x95c SLOAD
0x95d PUSH1 0x1
0x95f PUSH1 0xa0
0x961 PUSH1 0x2
0x963 EXP
0x964 SUB
0x965 SWAP1
0x966 DUP2
0x967 AND
0x968 SWAP1
0x969 DUP3
0x96a SWAP1
0x96b ADDRESS
0x96c AND
0x96d BALANCE
0x96e PUSH1 0x60
0x970 DUP3
0x971 DUP2
0x972 DUP2
0x973 DUP2
0x974 DUP6
0x975 DUP9
0x976 DUP4
0x977 CALL
0x978 SWAP4
0x979 POP
0x97a POP
0x97b POP
0x97c POP
0x97d POP
0x97e PUSH2 0x515
0x981 JUMP
0x982 JUMPDEST
---
0x95a: V746 = 0x1
0x95c: V747 = S[0x1]
0x95d: V748 = 0x1
0x95f: V749 = 0xa0
0x961: V750 = 0x2
0x963: V751 = EXP 0x2 0xa0
0x964: V752 = SUB 0x10000000000000000000000000000000000000000 0x1
0x967: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V747
0x96b: V754 = ADDRESS
0x96c: V755 = AND V754 0xffffffffffffffffffffffffffffffffffffffff
0x96d: V756 = BALANCE V755
0x96e: V757 = 0x60
0x977: V758 = CALL S0 V753 V756 0x60 S0 0x60 S0
0x97e: V759 = 0x515
0x981: THROW 
0x982: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x983
[0x983:0x98d]
---
Predecessors: [0x95a]
Successors: [0x98e]
---
0x983 JUMPDEST
0x984 PUSH1 0x3
0x986 SLOAD
0x987 DUP2
0x988 LT
0x989 ISZERO
0x98a PUSH2 0x4ee
0x98d JUMPI
---
0x983: JUMPDEST 
0x984: V760 = 0x3
0x986: V761 = S[0x3]
0x988: V762 = LT S0 V761
0x989: V763 = ISZERO V762
0x98a: V764 = 0x4ee
0x98d: THROWI V763
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x98e
[0x98e:0xa75]
---
Predecessors: [0x983]
Successors: [0xa76]
---
0x98e PUSH1 0x0
0x990 DUP2
0x991 DUP2
0x992 MSTORE
0x993 PUSH1 0x9
0x995 PUSH1 0x20
0x997 SWAP1
0x998 DUP2
0x999 MSTORE
0x99a PUSH1 0x40
0x99c DUP1
0x99d DUP4
0x99e SHA3
0x99f SLOAD
0x9a0 PUSH1 0xa
0x9a2 SWAP1
0x9a3 SWAP3
0x9a4 MSTORE
0x9a5 DUP1
0x9a6 DUP4
0x9a7 SHA3
0x9a8 SLOAD
0x9a9 SWAP1
0x9aa MLOAD
0x9ab PUSH1 0x1
0x9ad PUSH1 0xa0
0x9af PUSH1 0x2
0x9b1 EXP
0x9b2 SUB
0x9b3 SWAP3
0x9b4 SWAP1
0x9b5 SWAP3
0x9b6 AND
0x9b7 SWAP3
0x9b8 SWAP2
0x9b9 DUP3
0x9ba DUP2
0x9bb DUP2
0x9bc DUP2
0x9bd DUP6
0x9be DUP9
0x9bf DUP4
0x9c0 CALL
0x9c1 SWAP4
0x9c2 POP
0x9c3 POP
0x9c4 POP
0x9c5 POP
0x9c6 POP
0x9c7 PUSH1 0x9
0x9c9 PUSH1 0x0
0x9cb POP
0x9cc PUSH1 0x0
0x9ce DUP3
0x9cf DUP2
0x9d0 MSTORE
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 SWAP1
0x9d5 DUP2
0x9d6 MSTORE
0x9d7 PUSH1 0x20
0x9d9 ADD
0x9da PUSH1 0x0
0x9dc SHA3
0x9dd PUSH1 0x0
0x9df SWAP1
0x9e0 SLOAD
0x9e1 SWAP1
0x9e2 PUSH2 0x100
0x9e5 EXP
0x9e6 SWAP1
0x9e7 DIV
0x9e8 PUSH1 0x1
0x9ea PUSH1 0xa0
0x9ec PUSH1 0x2
0x9ee EXP
0x9ef SUB
0x9f0 AND
0x9f1 PUSH1 0x1
0x9f3 PUSH1 0xa0
0x9f5 PUSH1 0x2
0x9f7 EXP
0x9f8 SUB
0x9f9 AND
0x9fa PUSH1 0x0
0x9fc PUSH1 0x6
0x9fe PUSH1 0x0
0xa00 POP
0xa01 SLOAD
0xa02 PUSH1 0x5
0xa04 PUSH1 0x0
0xa06 POP
0xa07 SLOAD
0xa08 PUSH1 0xa
0xa0a PUSH1 0x0
0xa0c POP
0xa0d PUSH1 0x0
0xa0f DUP7
0xa10 DUP2
0xa11 MSTORE
0xa12 PUSH1 0x20
0xa14 ADD
0xa15 SWAP1
0xa16 DUP2
0xa17 MSTORE
0xa18 PUSH1 0x20
0xa1a ADD
0xa1b PUSH1 0x0
0xa1d SHA3
0xa1e PUSH1 0x0
0xa20 POP
0xa21 SLOAD
0xa22 MUL
0xa23 DIV
0xa24 PUSH1 0x40
0xa26 MLOAD
0xa27 DUP1
0xa28 SWAP1
0xa29 POP
0xa2a PUSH1 0x0
0xa2c PUSH1 0x40
0xa2e MLOAD
0xa2f DUP1
0xa30 DUP4
0xa31 SUB
0xa32 DUP2
0xa33 DUP6
0xa34 DUP9
0xa35 DUP9
0xa36 CALL
0xa37 POP
0xa38 POP
0xa39 POP
0xa3a POP
0xa3b POP
0xa3c PUSH1 0x1
0xa3e ADD
0xa3f PUSH2 0x5ab
0xa42 JUMP
0xa43 JUMPDEST
0xa44 CALLVALUE
0xa45 PUSH1 0x2
0xa47 SSTORE
0xa48 PUSH1 0x1
0xa4a DUP1
0xa4b SLOAD
0xa4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa61 NOT
0xa62 AND
0xa63 DUP3
0xa64 OR
0xa65 SWAP1
0xa66 SSTORE
0xa67 POP
0xa68 JUMP
0xa69 JUMPDEST
0xa6a PUSH1 0x2
0xa6c SLOAD
0xa6d PUSH1 0x0
0xa6f SWAP1
0xa70 GT
0xa71 ISZERO
0xa72 PUSH2 0x66b
0xa75 JUMPI
---
0x98e: V765 = 0x0
0x992: M[0x0] = S0
0x993: V766 = 0x9
0x995: V767 = 0x20
0x999: M[0x20] = 0x9
0x99a: V768 = 0x40
0x99e: V769 = SHA3 0x0 0x40
0x99f: V770 = S[V769]
0x9a0: V771 = 0xa
0x9a4: M[0x20] = 0xa
0x9a7: V772 = SHA3 0x0 0x40
0x9a8: V773 = S[V772]
0x9aa: V774 = M[0x40]
0x9ab: V775 = 0x1
0x9ad: V776 = 0xa0
0x9af: V777 = 0x2
0x9b1: V778 = EXP 0x2 0xa0
0x9b2: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b6: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0x9c0: V781 = CALL 0x0 V780 V773 V774 0x0 V774 0x0
0x9c7: V782 = 0x9
0x9c9: V783 = 0x0
0x9cc: V784 = 0x0
0x9d0: M[0x0] = S0
0x9d1: V785 = 0x20
0x9d3: V786 = ADD 0x20 0x0
0x9d6: M[0x20] = 0x9
0x9d7: V787 = 0x20
0x9d9: V788 = ADD 0x20 0x20
0x9da: V789 = 0x0
0x9dc: V790 = SHA3 0x0 0x40
0x9dd: V791 = 0x0
0x9e0: V792 = S[V790]
0x9e2: V793 = 0x100
0x9e5: V794 = EXP 0x100 0x0
0x9e7: V795 = DIV V792 0x1
0x9e8: V796 = 0x1
0x9ea: V797 = 0xa0
0x9ec: V798 = 0x2
0x9ee: V799 = EXP 0x2 0xa0
0x9ef: V800 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f0: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff V795
0x9f1: V802 = 0x1
0x9f3: V803 = 0xa0
0x9f5: V804 = 0x2
0x9f7: V805 = EXP 0x2 0xa0
0x9f8: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f9: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0x9fa: V808 = 0x0
0x9fc: V809 = 0x6
0x9fe: V810 = 0x0
0xa01: V811 = S[0x6]
0xa02: V812 = 0x5
0xa04: V813 = 0x0
0xa07: V814 = S[0x5]
0xa08: V815 = 0xa
0xa0a: V816 = 0x0
0xa0d: V817 = 0x0
0xa11: M[0x0] = S0
0xa12: V818 = 0x20
0xa14: V819 = ADD 0x20 0x0
0xa17: M[0x20] = 0xa
0xa18: V820 = 0x20
0xa1a: V821 = ADD 0x20 0x20
0xa1b: V822 = 0x0
0xa1d: V823 = SHA3 0x0 0x40
0xa1e: V824 = 0x0
0xa21: V825 = S[V823]
0xa22: V826 = MUL V825 V814
0xa23: V827 = DIV V826 V811
0xa24: V828 = 0x40
0xa26: V829 = M[0x40]
0xa2a: V830 = 0x0
0xa2c: V831 = 0x40
0xa2e: V832 = M[0x40]
0xa31: V833 = SUB V829 V832
0xa36: V834 = CALL 0x0 V807 V827 V832 V833 V832 0x0
0xa3c: V835 = 0x1
0xa3e: V836 = ADD 0x1 S0
0xa3f: V837 = 0x5ab
0xa42: THROW 
0xa43: JUMPDEST 
0xa44: V838 = CALLVALUE
0xa45: V839 = 0x2
0xa47: S[0x2] = V838
0xa48: V840 = 0x1
0xa4b: V841 = S[0x1]
0xa4c: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xa61: V843 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa62: V844 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V841
0xa64: V845 = OR S0 V844
0xa66: S[0x1] = V845
0xa68: JUMP S1
0xa69: JUMPDEST 
0xa6a: V846 = 0x2
0xa6c: V847 = S[0x2]
0xa6d: V848 = 0x0
0xa70: V849 = GT V847 0x0
0xa71: V850 = ISZERO V849
0xa72: V851 = 0x66b
0xa75: THROWI V850
---
Entry stack: [S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xa76
[0xa76:0xac9]
---
Predecessors: [0x98e]
Successors: [0xaca]
---
0xa76 PUSH1 0x20
0xa78 PUSH1 0x60
0xa7a SWAP1
0xa7b DUP2
0xa7c MSTORE
0xa7d PUSH1 0x1b
0xa7f PUSH1 0x80
0xa81 MSTORE
0xa82 PUSH32 0x496e697469616c2062616c616e636520616c7265616479207365740000000000
0xaa3 PUSH1 0xa0
0xaa5 MSTORE
0xaa6 PUSH1 0x0
0xaa8 DUP1
0xaa9 MLOAD
0xaaa PUSH1 0x20
0xaac PUSH2 0x717
0xaaf DUP4
0xab0 CODECOPY
0xab1 DUP2
0xab2 MLOAD
0xab3 SWAP2
0xab4 MSTORE
0xab5 SWAP1
0xab6 DUP1
0xab7 LOG1
0xab8 PUSH2 0x2
0xabb JUMP
0xabc JUMPDEST
0xabd DUP3
0xabe ADD
0xabf SWAP2
0xac0 SWAP1
0xac1 PUSH1 0x0
0xac3 MSTORE
0xac4 PUSH1 0x20
0xac6 PUSH1 0x0
0xac8 SHA3
0xac9 SWAP1
---
0xa76: V852 = 0x20
0xa78: V853 = 0x60
0xa7c: M[0x60] = 0x20
0xa7d: V854 = 0x1b
0xa7f: V855 = 0x80
0xa81: M[0x80] = 0x1b
0xa82: V856 = 0x496e697469616c2062616c616e636520616c7265616479207365740000000000
0xaa3: V857 = 0xa0
0xaa5: M[0xa0] = 0x496e697469616c2062616c616e636520616c7265616479207365740000000000
0xaa6: V858 = 0x0
0xaa9: V859 = M[0x0]
0xaaa: V860 = 0x20
0xaac: V861 = 0x717
0xab0: CODECOPY 0x0 0x717 0x20
0xab2: V862 = M[0x0]
0xab4: M[0x0] = V859
0xab7: LOG 0x60 0x60 V862
0xab8: V863 = 0x2
0xabb: THROW 
0xabc: JUMPDEST 
0xabe: V864 = ADD S2 S0
0xac1: V865 = 0x0
0xac3: M[0x0] = S1
0xac4: V866 = 0x20
0xac6: V867 = 0x0
0xac8: V868 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 0
Stack additions: [S2, V868, V864]
Exit stack: []

================================

Block 0xaca
[0xaca:0xadd]
---
Predecessors: [0xa76]
Successors: [0xade]
---
0xaca JUMPDEST
0xacb DUP2
0xacc SLOAD
0xacd DUP2
0xace MSTORE
0xacf SWAP1
0xad0 PUSH1 0x1
0xad2 ADD
0xad3 SWAP1
0xad4 PUSH1 0x20
0xad6 ADD
0xad7 DUP1
0xad8 DUP4
0xad9 GT
0xada PUSH2 0x6f2
0xadd JUMPI
---
0xaca: JUMPDEST 
0xacc: V869 = S[V868]
0xace: M[S0] = V869
0xad0: V870 = 0x1
0xad2: V871 = ADD 0x1 V868
0xad4: V872 = 0x20
0xad6: V873 = ADD 0x20 S0
0xad9: V874 = GT V864 V873
0xada: V875 = 0x6f2
0xadd: THROWI V874
---
Entry stack: [V864, V868, S0]
Stack pops: 3
Stack additions: [S2, V871, V873]
Exit stack: [V864, V871, V873]

================================

Block 0xade
[0xade:0xae6]
---
Predecessors: [0xaca]
Successors: [0xae7]
---
0xade DUP3
0xadf SWAP1
0xae0 SUB
0xae1 PUSH1 0x1f
0xae3 AND
0xae4 DUP3
0xae5 ADD
0xae6 SWAP2
---
0xae0: V876 = SUB V873 V864
0xae1: V877 = 0x1f
0xae3: V878 = AND 0x1f V876
0xae5: V879 = ADD V864 V878
---
Entry stack: [V864, V871, V873]
Stack pops: 3
Stack additions: [V879, S1, S2]
Exit stack: [V879, V871, V864]

================================

Block 0xae7
[0xae7:0xb13]
---
Predecessors: [0xade]
Successors: []
---
0xae7 JUMPDEST
0xae8 POP
0xae9 POP
0xaea POP
0xaeb POP
0xaec POP
0xaed DUP2
0xaee JUMP
0xaef MISSING 0x24
0xaf0 MISSING 0xd8
0xaf1 PUSH8 0x41e4157e618e1de9
0xafa BYTE
0xafb SGT
0xafc MISSING 0xe2
0xafd MISSING 0xd9
0xafe MISSING 0x49
0xaff SWAP1
0xb00 EXTCODEHASH
0xb01 MISSING 0xf9
0xb02 PUSH17 0x61be88e505319ee3d7829bf8
---
0xae7: JUMPDEST 
0xaee: JUMP S6
0xaef: MISSING 0x24
0xaf0: MISSING 0xd8
0xaf1: V880 = 0x41e4157e618e1de9
0xafa: V881 = BYTE 0x41e4157e618e1de9 S0
0xafb: V882 = SGT V881 S1
0xafc: MISSING 0xe2
0xafd: MISSING 0xd9
0xafe: MISSING 0x49
0xb00: V883 = EXTCODEHASH S1
0xb01: MISSING 0xf9
0xb02: V884 = 0x61be88e505319ee3d7829bf8
---
Entry stack: [V879, V871, V864]
Stack pops: 758
Stack additions: [0x61be88e505319ee3d7829bf8]
Exit stack: []

================================

Function 0:
Public function signature: 0x3a5fccee
Entry block: 0x3d
Exit block: 0x23e
Body: 0x3d, 0x23e

Function 1:
Public function signature: 0x7157337c
Entry block: 0x5e
Exit block: 0x23e
Body: 0x5e, 0x11c, 0x135, 0x193, 0x23e

Function 2:
Public function signature: 0xdf06f906
Entry block: 0x235
Exit block: 0x25b
Body: 0x235, 0x25b

Function 3:
Public fallback function
Entry block: 0x35
Exit block: 0x35
Body: 0x35

