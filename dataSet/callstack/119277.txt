Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xa5]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x4592cd1d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xa5
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x4592cd1d
0x20: V14 = EQ V12 0x4592cd1d
0x21: V15 = 0xa5
0x24: JUMPI 0xa5 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xc6]
---
0x25 DUP1
0x26 PUSH4 0x557f4bc9
0x2b EQ
0x2c PUSH2 0xc6
0x2f JUMPI
---
0x26: V16 = 0x557f4bc9
0x2b: V17 = EQ 0x557f4bc9 V12
0x2c: V18 = 0xc6
0x2f: JUMPI 0xc6 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xf3]
---
0x30 DUP1
0x31 PUSH4 0x5aa77d3c
0x36 EQ
0x37 PUSH2 0xf3
0x3a JUMPI
---
0x31: V19 = 0x5aa77d3c
0x36: V20 = EQ 0x5aa77d3c V12
0x37: V21 = 0xf3
0x3a: JUMPI 0xf3 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x11c]
---
0x3b DUP1
0x3c PUSH4 0xce606ee0
0x41 EQ
0x42 PUSH2 0x11c
0x45 JUMPI
---
0x3c: V22 = 0xce606ee0
0x41: V23 = EQ 0xce606ee0 V12
0x42: V24 = 0x11c
0x45: JUMPI 0x11c V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x145]
---
0x46 DUP1
0x47 PUSH4 0xd613be0a
0x4c EQ
0x4d PUSH2 0x145
0x50 JUMPI
---
0x47: V25 = 0xd613be0a
0x4c: V26 = EQ 0xd613be0a V12
0x4d: V27 = 0x145
0x50: JUMPI 0x145 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x172]
---
0x51 DUP1
0x52 PUSH4 0xe04f31e9
0x57 EQ
0x58 PUSH2 0x172
0x5b JUMPI
---
0x52: V28 = 0xe04f31e9
0x57: V29 = EQ 0xe04f31e9 V12
0x58: V30 = 0x172
0x5b: JUMPI 0x172 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1e8]
---
0x5c DUP1
0x5d PUSH4 0xf8a6c595
0x62 EQ
0x63 PUSH2 0x1e8
0x66 JUMPI
---
0x5d: V31 = 0xf8a6c595
0x62: V32 = EQ 0xf8a6c595 V12
0x63: V33 = 0x1e8
0x66: JUMPI 0x1e8 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x0, 0x5c]
Successors: [0x6b]
---
0x67 JUMPDEST
0x68 PUSH2 0xa3
---
0x67: JUMPDEST 
0x68: V34 = 0xa3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa3]
Exit stack: [V12, 0xa3]

================================

Block 0x6b
[0x6b:0x72]
---
Predecessors: [0x67]
Successors: [0x73, 0x77]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d ISZERO
0x6e ISZERO
0x6f PUSH2 0x77
0x72 JUMPI
---
0x6b: JUMPDEST 
0x6c: V35 = CALLVALUE
0x6d: V36 = ISZERO V35
0x6e: V37 = ISZERO V36
0x6f: V38 = 0x77
0x72: JUMPI 0x77 V37
---
Entry stack: [V12, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3]

================================

Block 0x73
[0x73:0x76]
---
Predecessors: [0x6b]
Successors: [0xa1]
---
0x73 PUSH2 0xa1
0x76 JUMP
---
0x73: V39 = 0xa1
0x76: JUMP 0xa1
---
Entry stack: [V12, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3]

================================

Block 0x77
[0x77:0xa0]
---
Predecessors: [0x6b]
Successors: [0xa1]
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a MLOAD
0x7b PUSH32 0x544c765b33ca411cce832250371569244f765a17fcd217832be093f0fd5fa45b
0x9c SWAP1
0x9d PUSH1 0x0
0x9f SWAP1
0xa0 LOG1
---
0x77: JUMPDEST 
0x78: V40 = 0x40
0x7a: V41 = M[0x40]
0x7b: V42 = 0x544c765b33ca411cce832250371569244f765a17fcd217832be093f0fd5fa45b
0x9d: V43 = 0x0
0xa0: LOG V41 0x0 0x544c765b33ca411cce832250371569244f765a17fcd217832be093f0fd5fa45b
---
Entry stack: [V12, 0xa3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3]

================================

Block 0xa1
[0xa1:0xa2]
---
Predecessors: [0x73, 0x77]
Successors: [0xa3]
---
0xa1 JUMPDEST
0xa2 JUMP
---
0xa1: JUMPDEST 
0xa2: JUMP 0xa3
---
Entry stack: [V12, 0xa3]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0xa1, 0x36e]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa5
[0xa5:0xaa]
---
Predecessors: [0xb]
Successors: [0xab]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 PUSH2 0x0
0xaa JUMPI
---
0xa5: JUMPDEST 
0xa6: V44 = CALLVALUE
0xa7: V45 = 0x0
0xaa: THROWI V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xab
[0xab:0xb1]
---
Predecessors: [0xa5]
Successors: [0x203]
---
0xab PUSH2 0xb2
0xae PUSH2 0x203
0xb1 JUMP
---
0xab: V46 = 0xb2
0xae: V47 = 0x203
0xb1: JUMP 0x203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb2]
Exit stack: [V12, 0xb2]

================================

Block 0xb2
[0xb2:0xc5]
---
Predecessors: [0x24b, 0x285, 0x2e1]
Successors: []
---
0xb2 JUMPDEST
0xb3 PUSH1 0x40
0xb5 DUP1
0xb6 MLOAD
0xb7 SWAP2
0xb8 ISZERO
0xb9 ISZERO
0xba DUP3
0xbb MSTORE
0xbc MLOAD
0xbd SWAP1
0xbe DUP2
0xbf SWAP1
0xc0 SUB
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 SWAP1
0xc5 RETURN
---
0xb2: JUMPDEST 
0xb3: V48 = 0x40
0xb6: V49 = M[0x40]
0xb8: V50 = ISZERO {0x0, 0x1}
0xb9: V51 = ISZERO V50
0xbb: M[V49] = V51
0xbc: V52 = M[0x40]
0xc0: V53 = SUB V49 V52
0xc1: V54 = 0x20
0xc3: V55 = ADD 0x20 V53
0xc5: RETURN V52 V55
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc6
[0xc6:0xcb]
---
Predecessors: [0x25]
Successors: [0xcc]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 PUSH2 0x0
0xcb JUMPI
---
0xc6: JUMPDEST 
0xc7: V56 = CALLVALUE
0xc8: V57 = 0x0
0xcb: THROWI V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcc
[0xcc:0xde]
---
Predecessors: [0xc6]
Successors: [0x24e]
---
0xcc PUSH2 0xb2
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 PUSH1 0x4
0xd9 CALLDATALOAD
0xda AND
0xdb PUSH2 0x24e
0xde JUMP
---
0xcc: V58 = 0xb2
0xcf: V59 = 0x1
0xd1: V60 = 0xa0
0xd3: V61 = 0x2
0xd5: V62 = EXP 0x2 0xa0
0xd6: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V64 = 0x4
0xd9: V65 = CALLDATALOAD 0x4
0xda: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V67 = 0x24e
0xde: JUMP 0x24e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb2, V66]
Exit stack: [V12, 0xb2, V66]

================================

Block 0xdf
[0xdf:0xf2]
---
Predecessors: []
Successors: []
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 DUP1
0xe3 MLOAD
0xe4 SWAP2
0xe5 ISZERO
0xe6 ISZERO
0xe7 DUP3
0xe8 MSTORE
0xe9 MLOAD
0xea SWAP1
0xeb DUP2
0xec SWAP1
0xed SUB
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 RETURN
---
0xdf: JUMPDEST 
0xe0: V68 = 0x40
0xe3: V69 = M[0x40]
0xe5: V70 = ISZERO S0
0xe6: V71 = ISZERO V70
0xe8: M[V69] = V71
0xe9: V72 = M[0x40]
0xed: V73 = SUB V69 V72
0xee: V74 = 0x20
0xf0: V75 = ADD 0x20 V73
0xf2: RETURN V72 V75
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xf3
[0xf3:0xf8]
---
Predecessors: [0x30]
Successors: [0xf9]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 PUSH2 0x0
0xf8 JUMPI
---
0xf3: JUMPDEST 
0xf4: V76 = CALLVALUE
0xf5: V77 = 0x0
0xf8: THROWI V76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf9
[0xf9:0xff]
---
Predecessors: [0xf3]
Successors: [0x28a]
---
0xf9 PUSH2 0x100
0xfc PUSH2 0x28a
0xff JUMP
---
0xf9: V78 = 0x100
0xfc: V79 = 0x28a
0xff: JUMP 0x28a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V12, 0x100]

================================

Block 0x100
[0x100:0x11b]
---
Predecessors: [0x28a, 0x299]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x40
0x103 DUP1
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP3
0x10f AND
0x110 DUP3
0x111 MSTORE
0x112 MLOAD
0x113 SWAP1
0x114 DUP2
0x115 SWAP1
0x116 SUB
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b RETURN
---
0x100: JUMPDEST 
0x101: V80 = 0x40
0x104: V81 = M[0x40]
0x105: V82 = 0x1
0x107: V83 = 0xa0
0x109: V84 = 0x2
0x10b: V85 = EXP 0x2 0xa0
0x10c: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V87 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x111: M[V81] = V87
0x112: V88 = M[0x40]
0x116: V89 = SUB V81 V88
0x117: V90 = 0x20
0x119: V91 = ADD 0x20 V89
0x11b: RETURN V88 V91
---
Entry stack: [V12, 0x100, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x100]

================================

Block 0x11c
[0x11c:0x121]
---
Predecessors: [0x3b]
Successors: [0x122]
---
0x11c JUMPDEST
0x11d CALLVALUE
0x11e PUSH2 0x0
0x121 JUMPI
---
0x11c: JUMPDEST 
0x11d: V92 = CALLVALUE
0x11e: V93 = 0x0
0x121: THROWI V92
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x128]
---
Predecessors: [0x11c]
Successors: [0x299]
---
0x122 PUSH2 0x100
0x125 PUSH2 0x299
0x128 JUMP
---
0x122: V94 = 0x100
0x125: V95 = 0x299
0x128: JUMP 0x299
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x100]
Exit stack: [V12, 0x100]

================================

Block 0x129
[0x129:0x144]
---
Predecessors: []
Successors: []
---
0x129 JUMPDEST
0x12a PUSH1 0x40
0x12c DUP1
0x12d MLOAD
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 SWAP1
0x137 SWAP3
0x138 AND
0x139 DUP3
0x13a MSTORE
0x13b MLOAD
0x13c SWAP1
0x13d DUP2
0x13e SWAP1
0x13f SUB
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP1
0x144 RETURN
---
0x129: JUMPDEST 
0x12a: V96 = 0x40
0x12d: V97 = M[0x40]
0x12e: V98 = 0x1
0x130: V99 = 0xa0
0x132: V100 = 0x2
0x134: V101 = EXP 0x2 0xa0
0x135: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138: V103 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x13a: M[V97] = V103
0x13b: V104 = M[0x40]
0x13f: V105 = SUB V97 V104
0x140: V106 = 0x20
0x142: V107 = ADD 0x20 V105
0x144: RETURN V104 V107
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x145
[0x145:0x14a]
---
Predecessors: [0x46]
Successors: [0x14b]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 PUSH2 0x0
0x14a JUMPI
---
0x145: JUMPDEST 
0x146: V108 = CALLVALUE
0x147: V109 = 0x0
0x14a: THROWI V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14b
[0x14b:0x15d]
---
Predecessors: [0x145]
Successors: [0x2a8]
---
0x14b PUSH2 0xb2
0x14e PUSH1 0x1
0x150 PUSH1 0xa0
0x152 PUSH1 0x2
0x154 EXP
0x155 SUB
0x156 PUSH1 0x4
0x158 CALLDATALOAD
0x159 AND
0x15a PUSH2 0x2a8
0x15d JUMP
---
0x14b: V110 = 0xb2
0x14e: V111 = 0x1
0x150: V112 = 0xa0
0x152: V113 = 0x2
0x154: V114 = EXP 0x2 0xa0
0x155: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x156: V116 = 0x4
0x158: V117 = CALLDATALOAD 0x4
0x159: V118 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V119 = 0x2a8
0x15d: JUMP 0x2a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb2, V118]
Exit stack: [V12, 0xb2, V118]

================================

Block 0x15e
[0x15e:0x171]
---
Predecessors: []
Successors: []
---
0x15e JUMPDEST
0x15f PUSH1 0x40
0x161 DUP1
0x162 MLOAD
0x163 SWAP2
0x164 ISZERO
0x165 ISZERO
0x166 DUP3
0x167 MSTORE
0x168 MLOAD
0x169 SWAP1
0x16a DUP2
0x16b SWAP1
0x16c SUB
0x16d PUSH1 0x20
0x16f ADD
0x170 SWAP1
0x171 RETURN
---
0x15e: JUMPDEST 
0x15f: V120 = 0x40
0x162: V121 = M[0x40]
0x164: V122 = ISZERO S0
0x165: V123 = ISZERO V122
0x167: M[V121] = V123
0x168: V124 = M[0x40]
0x16c: V125 = SUB V121 V124
0x16d: V126 = 0x20
0x16f: V127 = ADD 0x20 V125
0x171: RETURN V124 V127
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x172
[0x172:0x177]
---
Predecessors: [0x51]
Successors: [0x178]
---
0x172 JUMPDEST
0x173 CALLVALUE
0x174 PUSH2 0x0
0x177 JUMPI
---
0x172: JUMPDEST 
0x173: V128 = CALLVALUE
0x174: V129 = 0x0
0x177: THROWI V128
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x178
[0x178:0x1d5]
---
Predecessors: [0x172]
Successors: [0x2e6]
---
0x178 PUSH1 0x40
0x17a DUP1
0x17b MLOAD
0x17c PUSH1 0x20
0x17e PUSH1 0x4
0x180 PUSH1 0x44
0x182 CALLDATALOAD
0x183 DUP2
0x184 DUP2
0x185 ADD
0x186 CALLDATALOAD
0x187 PUSH1 0x1f
0x189 DUP2
0x18a ADD
0x18b DUP5
0x18c SWAP1
0x18d DIV
0x18e DUP5
0x18f MUL
0x190 DUP6
0x191 ADD
0x192 DUP5
0x193 ADD
0x194 SWAP1
0x195 SWAP6
0x196 MSTORE
0x197 DUP5
0x198 DUP5
0x199 MSTORE
0x19a PUSH2 0x1d6
0x19d SWAP5
0x19e DUP3
0x19f CALLDATALOAD
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 AND
0x1a9 SWAP5
0x1aa PUSH1 0x24
0x1ac DUP1
0x1ad CALLDATALOAD
0x1ae SWAP6
0x1af PUSH1 0x64
0x1b1 SWAP5
0x1b2 SWAP3
0x1b3 SWAP4
0x1b4 SWAP2
0x1b5 SWAP1
0x1b6 SWAP3
0x1b7 ADD
0x1b8 SWAP2
0x1b9 DUP2
0x1ba SWAP1
0x1bb DUP5
0x1bc ADD
0x1bd DUP4
0x1be DUP3
0x1bf DUP1
0x1c0 DUP3
0x1c1 DUP5
0x1c2 CALLDATACOPY
0x1c3 POP
0x1c4 SWAP5
0x1c5 SWAP7
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca SWAP2
0x1cb CALLDATALOAD
0x1cc ISZERO
0x1cd ISZERO
0x1ce SWAP2
0x1cf POP
0x1d0 PUSH2 0x2e6
0x1d3 SWAP1
0x1d4 POP
0x1d5 JUMP
---
0x178: V130 = 0x40
0x17b: V131 = M[0x40]
0x17c: V132 = 0x20
0x17e: V133 = 0x4
0x180: V134 = 0x44
0x182: V135 = CALLDATALOAD 0x44
0x185: V136 = ADD V135 0x4
0x186: V137 = CALLDATALOAD V136
0x187: V138 = 0x1f
0x18a: V139 = ADD V137 0x1f
0x18d: V140 = DIV V139 0x20
0x18f: V141 = MUL 0x20 V140
0x191: V142 = ADD V131 V141
0x193: V143 = ADD 0x20 V142
0x196: M[0x40] = V143
0x199: M[V131] = V137
0x19a: V144 = 0x1d6
0x19f: V145 = CALLDATALOAD 0x4
0x1a0: V146 = 0x1
0x1a2: V147 = 0xa0
0x1a4: V148 = 0x2
0x1a6: V149 = EXP 0x2 0xa0
0x1a7: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1aa: V152 = 0x24
0x1ad: V153 = CALLDATALOAD 0x24
0x1af: V154 = 0x64
0x1b7: V155 = ADD V135 0x24
0x1bc: V156 = ADD V131 0x20
0x1c2: CALLDATACOPY V156 V155 V137
0x1cb: V157 = CALLDATALOAD 0x64
0x1cc: V158 = ISZERO V157
0x1cd: V159 = ISZERO V158
0x1d0: V160 = 0x2e6
0x1d5: JUMP 0x2e6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1d6, V151, V153, V131, V159]
Exit stack: [V12, 0x1d6, V151, V153, V131, V159]

================================

Block 0x1d6
[0x1d6:0x1e7]
---
Predecessors: [0x333]
Successors: []
---
0x1d6 JUMPDEST
0x1d7 PUSH1 0x40
0x1d9 DUP1
0x1da MLOAD
0x1db SWAP2
0x1dc DUP3
0x1dd MSTORE
0x1de MLOAD
0x1df SWAP1
0x1e0 DUP2
0x1e1 SWAP1
0x1e2 SUB
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP1
0x1e7 RETURN
---
0x1d6: JUMPDEST 
0x1d7: V161 = 0x40
0x1da: V162 = M[0x40]
0x1dd: M[V162] = S0
0x1de: V163 = M[0x40]
0x1e2: V164 = SUB V162 V163
0x1e3: V165 = 0x20
0x1e5: V166 = ADD 0x20 V164
0x1e7: RETURN V163 V166
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e8
[0x1e8:0x1ed]
---
Predecessors: [0x5c]
Successors: [0x1ee]
---
0x1e8 JUMPDEST
0x1e9 CALLVALUE
0x1ea PUSH2 0x0
0x1ed JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V167 = CALLVALUE
0x1ea: V168 = 0x0
0x1ed: THROWI V167
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ee
[0x1ee:0x200]
---
Predecessors: [0x1e8]
Successors: [0x33c]
---
0x1ee PUSH2 0xa3
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 PUSH1 0x4
0x1fb CALLDATALOAD
0x1fc AND
0x1fd PUSH2 0x33c
0x200 JUMP
---
0x1ee: V169 = 0xa3
0x1f1: V170 = 0x1
0x1f3: V171 = 0xa0
0x1f5: V172 = 0x2
0x1f7: V173 = EXP 0x2 0xa0
0x1f8: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V175 = 0x4
0x1fb: V176 = CALLDATALOAD 0x4
0x1fc: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V178 = 0x33c
0x200: JUMP 0x33c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa3, V177]
Exit stack: [V12, 0xa3, V177]

================================

Block 0x201
[0x201:0x202]
---
Predecessors: []
Successors: []
---
0x201 JUMPDEST
0x202 STOP
---
0x201: JUMPDEST 
0x202: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x203
[0x203:0x21c]
---
Predecessors: [0xab]
Successors: [0x21d, 0x224]
---
0x203 JUMPDEST
0x204 PUSH1 0x1
0x206 SLOAD
0x207 PUSH1 0x0
0x209 SWAP1
0x20a CALLER
0x20b PUSH1 0x1
0x20d PUSH1 0xa0
0x20f PUSH1 0x2
0x211 EXP
0x212 SUB
0x213 SWAP1
0x214 DUP2
0x215 AND
0x216 SWAP2
0x217 AND
0x218 EQ
0x219 PUSH2 0x224
0x21c JUMPI
---
0x203: JUMPDEST 
0x204: V179 = 0x1
0x206: V180 = S[0x1]
0x207: V181 = 0x0
0x20a: V182 = CALLER
0x20b: V183 = 0x1
0x20d: V184 = 0xa0
0x20f: V185 = 0x2
0x211: V186 = EXP 0x2 0xa0
0x212: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x217: V189 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x218: V190 = EQ V189 V188
0x219: V191 = 0x224
0x21c: JUMPI 0x224 V190
---
Entry stack: [V12, 0xb2]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xb2, 0x0]

================================

Block 0x21d
[0x21d:0x223]
---
Predecessors: [0x203]
Successors: [0x24b]
---
0x21d POP
0x21e PUSH1 0x0
0x220 PUSH2 0x24b
0x223 JUMP
---
0x21e: V192 = 0x0
0x220: V193 = 0x24b
0x223: JUMP 0x24b
---
Entry stack: [V12, 0xb2, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0xb2, 0x0]

================================

Block 0x224
[0x224:0x24a]
---
Predecessors: [0x203]
Successors: [0x24b]
---
0x224 JUMPDEST
0x225 POP
0x226 PUSH1 0x1
0x228 DUP1
0x229 SLOAD
0x22a PUSH1 0x0
0x22c DUP1
0x22d SLOAD
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 NOT
0x237 SWAP1
0x238 DUP2
0x239 AND
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 DUP5
0x243 AND
0x244 OR
0x245 SWAP1
0x246 SWAP2
0x247 SSTORE
0x248 AND
0x249 DUP2
0x24a SSTORE
---
0x224: JUMPDEST 
0x226: V194 = 0x1
0x229: V195 = S[0x1]
0x22a: V196 = 0x0
0x22d: V197 = S[0x0]
0x22e: V198 = 0x1
0x230: V199 = 0xa0
0x232: V200 = 0x2
0x234: V201 = EXP 0x2 0xa0
0x235: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V203 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x239: V204 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V197
0x23a: V205 = 0x1
0x23c: V206 = 0xa0
0x23e: V207 = 0x2
0x240: V208 = EXP 0x2 0xa0
0x241: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V210 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x244: V211 = OR V210 V204
0x247: S[0x0] = V211
0x248: V212 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V195
0x24a: S[0x1] = V212
---
Entry stack: [V12, 0xb2, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xb2, 0x1]

================================

Block 0x24b
[0x24b:0x24d]
---
Predecessors: [0x21d, 0x224]
Successors: [0xb2]
---
0x24b JUMPDEST
0x24c SWAP1
0x24d JUMP
---
0x24b: JUMPDEST 
0x24d: JUMP 0xb2
---
Entry stack: [V12, 0xb2, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x24e
[0x24e:0x266]
---
Predecessors: [0xcc]
Successors: [0x267, 0x283]
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 DUP1
0x252 SLOAD
0x253 CALLER
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c SWAP1
0x25d DUP2
0x25e AND
0x25f SWAP2
0x260 AND
0x261 EQ
0x262 ISZERO
0x263 PUSH2 0x283
0x266 JUMPI
---
0x24e: JUMPDEST 
0x24f: V213 = 0x0
0x252: V214 = S[0x0]
0x253: V215 = CALLER
0x254: V216 = 0x1
0x256: V217 = 0xa0
0x258: V218 = 0x2
0x25a: V219 = EXP 0x2 0xa0
0x25b: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x260: V222 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x261: V223 = EQ V222 V221
0x262: V224 = ISZERO V223
0x263: V225 = 0x283
0x266: JUMPI 0x283 V224
---
Entry stack: [V12, 0xb2, V66]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xb2, V66, 0x0]

================================

Block 0x267
[0x267:0x282]
---
Predecessors: [0x24e]
Successors: [0x283]
---
0x267 POP
0x268 PUSH1 0x1
0x26a DUP1
0x26b SLOAD
0x26c PUSH1 0x1
0x26e PUSH1 0xa0
0x270 PUSH1 0x2
0x272 EXP
0x273 SUB
0x274 NOT
0x275 AND
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e DUP4
0x27f AND
0x280 OR
0x281 DUP2
0x282 SSTORE
---
0x268: V226 = 0x1
0x26b: V227 = S[0x1]
0x26c: V228 = 0x1
0x26e: V229 = 0xa0
0x270: V230 = 0x2
0x272: V231 = EXP 0x2 0xa0
0x273: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V233 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x275: V234 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V227
0x276: V235 = 0x1
0x278: V236 = 0xa0
0x27a: V237 = 0x2
0x27c: V238 = EXP 0x2 0xa0
0x27d: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V240 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x280: V241 = OR V240 V234
0x282: S[0x1] = V241
---
Entry stack: [V12, 0xb2, V66, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0xb2, V66, 0x1]

================================

Block 0x283
[0x283:0x283]
---
Predecessors: [0x24e, 0x267, 0x2a8]
Successors: [0x284]
---
0x283 JUMPDEST
---
0x283: JUMPDEST 
---
Entry stack: [V12, 0xb2, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb2, S1, {0x0, 0x1}]

================================

Block 0x284
[0x284:0x284]
---
Predecessors: [0x283]
Successors: [0x285]
---
0x284 JUMPDEST
---
0x284: JUMPDEST 
---
Entry stack: [V12, 0xb2, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb2, S1, {0x0, 0x1}]

================================

Block 0x285
[0x285:0x289]
---
Predecessors: [0x284]
Successors: [0xb2]
---
0x285 JUMPDEST
0x286 SWAP2
0x287 SWAP1
0x288 POP
0x289 JUMP
---
0x285: JUMPDEST 
0x289: JUMP 0xb2
---
Entry stack: [V12, 0xb2, S1, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x28a
[0x28a:0x298]
---
Predecessors: [0xf9]
Successors: [0x100]
---
0x28a JUMPDEST
0x28b PUSH1 0x1
0x28d SLOAD
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 AND
0x297 DUP2
0x298 JUMP
---
0x28a: JUMPDEST 
0x28b: V242 = 0x1
0x28d: V243 = S[0x1]
0x28e: V244 = 0x1
0x290: V245 = 0xa0
0x292: V246 = 0x2
0x294: V247 = EXP 0x2 0xa0
0x295: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x296: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x298: JUMP 0x100
---
Entry stack: [V12, 0x100]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V12, 0x100, V249]

================================

Block 0x299
[0x299:0x2a7]
---
Predecessors: [0x122]
Successors: [0x100]
---
0x299 JUMPDEST
0x29a PUSH1 0x0
0x29c SLOAD
0x29d PUSH1 0x1
0x29f PUSH1 0xa0
0x2a1 PUSH1 0x2
0x2a3 EXP
0x2a4 SUB
0x2a5 AND
0x2a6 DUP2
0x2a7 JUMP
---
0x299: JUMPDEST 
0x29a: V250 = 0x0
0x29c: V251 = S[0x0]
0x29d: V252 = 0x1
0x29f: V253 = 0xa0
0x2a1: V254 = 0x2
0x2a3: V255 = EXP 0x2 0xa0
0x2a4: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a5: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x2a7: JUMP 0x100
---
Entry stack: [V12, 0x100]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V12, 0x100, V257]

================================

Block 0x2a8
[0x2a8:0x2c0]
---
Predecessors: [0x14b]
Successors: [0x283, 0x2c1]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac SLOAD
0x2ad CALLER
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 AND
0x2b9 SWAP2
0x2ba AND
0x2bb EQ
0x2bc ISZERO
0x2bd PUSH2 0x283
0x2c0 JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V258 = 0x0
0x2ac: V259 = S[0x0]
0x2ad: V260 = CALLER
0x2ae: V261 = 0x1
0x2b0: V262 = 0xa0
0x2b2: V263 = 0x2
0x2b4: V264 = EXP 0x2 0xa0
0x2b5: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b8: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2ba: V267 = AND V259 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V268 = EQ V267 V266
0x2bc: V269 = ISZERO V268
0x2bd: V270 = 0x283
0x2c0: JUMPI 0x283 V269
---
Entry stack: [V12, 0xb2, V118]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xb2, V118, 0x0]

================================

Block 0x2c1
[0x2c1:0x2de]
---
Predecessors: [0x2a8]
Successors: [0x2df]
---
0x2c1 POP
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 SLOAD
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce NOT
0x2cf AND
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 DUP4
0x2d9 AND
0x2da OR
0x2db SWAP1
0x2dc SSTORE
0x2dd PUSH1 0x1
---
0x2c2: V271 = 0x0
0x2c5: V272 = S[0x0]
0x2c6: V273 = 0x1
0x2c8: V274 = 0xa0
0x2ca: V275 = 0x2
0x2cc: V276 = EXP 0x2 0xa0
0x2cd: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V278 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V279 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V272
0x2d0: V280 = 0x1
0x2d2: V281 = 0xa0
0x2d4: V282 = 0x2
0x2d6: V283 = EXP 0x2 0xa0
0x2d7: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d9: V285 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V286 = OR V285 V279
0x2dc: S[0x0] = V286
0x2dd: V287 = 0x1
---
Entry stack: [V12, 0xb2, V118, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V12, 0xb2, V118, 0x1]

================================

Block 0x2df
[0x2df:0x2df]
---
Predecessors: [0x2c1]
Successors: [0x2e0]
---
0x2df JUMPDEST
---
0x2df: JUMPDEST 
---
Entry stack: [V12, 0xb2, V118, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb2, V118, 0x1]

================================

Block 0x2e0
[0x2e0:0x2e0]
---
Predecessors: [0x2df]
Successors: [0x2e1]
---
0x2e0 JUMPDEST
---
0x2e0: JUMPDEST 
---
Entry stack: [V12, 0xb2, V118, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb2, V118, 0x1]

================================

Block 0x2e1
[0x2e1:0x2e5]
---
Predecessors: [0x2e0]
Successors: [0xb2]
---
0x2e1 JUMPDEST
0x2e2 SWAP2
0x2e3 SWAP1
0x2e4 POP
0x2e5 JUMP
---
0x2e1: JUMPDEST 
0x2e5: JUMP 0xb2
---
Entry stack: [V12, 0xb2, V118, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x2e6
[0x2e6:0x300]
---
Predecessors: [0x178]
Successors: [0x301, 0x330]
---
0x2e6 JUMPDEST
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea SLOAD
0x2eb DUP2
0x2ec SWAP1
0x2ed CALLER
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 SWAP1
0x2f7 DUP2
0x2f8 AND
0x2f9 SWAP2
0x2fa AND
0x2fb EQ
0x2fc ISZERO
0x2fd PUSH2 0x330
0x300 JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V288 = 0x0
0x2ea: V289 = S[0x0]
0x2ed: V290 = CALLER
0x2ee: V291 = 0x1
0x2f0: V292 = 0xa0
0x2f2: V293 = 0x2
0x2f4: V294 = EXP 0x2 0xa0
0x2f5: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x2fa: V297 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V298 = EQ V297 V296
0x2fc: V299 = ISZERO V298
0x2fd: V300 = 0x330
0x300: JUMPI 0x330 V299
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, 0x0, 0x0]

================================

Block 0x301
[0x301:0x323]
---
Predecessors: [0x2e6]
Successors: [0x324, 0x326]
---
0x301 PUSH1 0x20
0x303 PUSH1 0x0
0x305 DUP6
0x306 MLOAD
0x307 PUSH1 0x20
0x309 DUP8
0x30a ADD
0x30b DUP9
0x30c DUP11
0x30d PUSH1 0x40
0x30f PUSH1 0x3f
0x311 GAS
0x312 MUL
0x313 DIV
0x314 CALL
0x315 SWAP1
0x316 POP
0x317 PUSH1 0x0
0x319 MLOAD
0x31a SWAP2
0x31b POP
0x31c DUP1
0x31d ISZERO
0x31e DUP1
0x31f ISZERO
0x320 PUSH2 0x326
0x323 JUMPI
---
0x301: V301 = 0x20
0x303: V302 = 0x0
0x306: V303 = M[V131]
0x307: V304 = 0x20
0x30a: V305 = ADD V131 0x20
0x30d: V306 = 0x40
0x30f: V307 = 0x3f
0x311: V308 = GAS
0x312: V309 = MUL V308 0x3f
0x313: V310 = DIV V309 0x40
0x314: V311 = CALL V310 V151 V153 V305 V303 0x0 0x20
0x317: V312 = 0x0
0x319: V313 = M[0x0]
0x31d: V314 = ISZERO V311
0x31f: V315 = ISZERO V314
0x320: V316 = 0x326
0x323: JUMPI 0x326 V315
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V313, V311, V314]
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, V313, V311, V314]

================================

Block 0x324
[0x324:0x325]
---
Predecessors: [0x301]
Successors: [0x326]
---
0x324 POP
0x325 DUP3
---
0x324: NOP 
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, V313, V311, V314]
Stack pops: 4
Stack additions: [S3, S2, S1, S3]
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, V313, V311, V159]

================================

Block 0x326
[0x326:0x32b]
---
Predecessors: [0x301, 0x324]
Successors: [0x32c, 0x330]
---
0x326 JUMPDEST
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x326: JUMPDEST 
0x327: V317 = ISZERO S0
0x328: V318 = 0x330
0x32b: JUMPI 0x330 V317
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, V313, V311, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, V313, V311]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x326]
Successors: []
---
0x32c PUSH2 0x0
0x32f JUMP
---
0x32c: V319 = 0x0
0x32f: THROW 
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, V313, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, V313, V311]

================================

Block 0x330
[0x330:0x330]
---
Predecessors: [0x2e6, 0x326]
Successors: [0x331]
---
0x330 JUMPDEST
---
0x330: JUMPDEST 
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, S1, S0]

================================

Block 0x331
[0x331:0x331]
---
Predecessors: [0x330]
Successors: [0x332]
---
0x331 JUMPDEST
---
0x331: JUMPDEST 
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, S1, S0]

================================

Block 0x332
[0x332:0x332]
---
Predecessors: [0x331]
Successors: [0x333]
---
0x332 JUMPDEST
---
0x332: JUMPDEST 
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1d6, V151, V153, V131, V159, S1, S0]

================================

Block 0x333
[0x333:0x33b]
---
Predecessors: [0x332]
Successors: [0x1d6]
---
0x333 JUMPDEST
0x334 POP
0x335 SWAP5
0x336 SWAP4
0x337 POP
0x338 POP
0x339 POP
0x33a POP
0x33b JUMP
---
0x333: JUMPDEST 
0x33b: JUMP 0x1d6
---
Entry stack: [V12, 0x1d6, V151, V153, V131, V159, S1, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V12, S1]

================================

Block 0x33c
[0x33c:0x34d]
---
Predecessors: [0x1ee]
Successors: [0x34e, 0x352]
---
0x33c JUMPDEST
0x33d PUSH1 0x0
0x33f SLOAD
0x340 PUSH1 0x1
0x342 PUSH1 0xa0
0x344 PUSH1 0x2
0x346 EXP
0x347 SUB
0x348 AND
0x349 ISZERO
0x34a PUSH2 0x352
0x34d JUMPI
---
0x33c: JUMPDEST 
0x33d: V320 = 0x0
0x33f: V321 = S[0x0]
0x340: V322 = 0x1
0x342: V323 = 0xa0
0x344: V324 = 0x2
0x346: V325 = EXP 0x2 0xa0
0x347: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x348: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x349: V328 = ISZERO V327
0x34a: V329 = 0x352
0x34d: JUMPI 0x352 V328
---
Entry stack: [V12, 0xa3, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3, V177]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x33c]
Successors: []
---
0x34e PUSH2 0x0
0x351 JUMP
---
0x34e: V330 = 0x0
0x351: THROW 
---
Entry stack: [V12, 0xa3, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xa3, V177]

================================

Block 0x352
[0x352:0x36d]
---
Predecessors: [0x33c]
Successors: [0x36e]
---
0x352 JUMPDEST
0x353 PUSH1 0x0
0x355 DUP1
0x356 SLOAD
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f NOT
0x360 AND
0x361 PUSH1 0x1
0x363 PUSH1 0xa0
0x365 PUSH1 0x2
0x367 EXP
0x368 SUB
0x369 DUP4
0x36a AND
0x36b OR
0x36c SWAP1
0x36d SSTORE
---
0x352: JUMPDEST 
0x353: V331 = 0x0
0x356: V332 = S[0x0]
0x357: V333 = 0x1
0x359: V334 = 0xa0
0x35b: V335 = 0x2
0x35d: V336 = EXP 0x2 0xa0
0x35e: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V338 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x360: V339 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V332
0x361: V340 = 0x1
0x363: V341 = 0xa0
0x365: V342 = 0x2
0x367: V343 = EXP 0x2 0xa0
0x368: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36a: V345 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V346 = OR V345 V339
0x36d: S[0x0] = V346
---
Entry stack: [V12, 0xa3, V177]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xa3, V177]

================================

Block 0x36e
[0x36e:0x370]
---
Predecessors: [0x352]
Successors: [0xa3]
---
0x36e JUMPDEST
0x36f POP
0x370 JUMP
---
0x36e: JUMPDEST 
0x370: JUMP 0xa3
---
Entry stack: [V12, 0xa3, V177]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x3b0]
---
Predecessors: []
Successors: []
---
0x371 STOP
0x372 LOG1
0x373 PUSH6 0x627a7a723058
0x37a SHA3
0x37b MISSING 0xd5
0x37c ISZERO
0x37d MISSING 0xc6
0x37e GASLIMIT
0x37f PUSH25 0xa768c6909140f6850b479780830e6beb15646979f93cf69e21
0x399 BLOCKHASH
0x39a PUSH22 0x29
---
0x371: STOP 
0x372: LOG S0 S1 S2
0x373: V347 = 0x627a7a723058
0x37a: V348 = SHA3 0x627a7a723058 S3
0x37b: MISSING 0xd5
0x37c: V349 = ISZERO S0
0x37d: MISSING 0xc6
0x37e: V350 = GASLIMIT
0x37f: V351 = 0xa768c6909140f6850b479780830e6beb15646979f93cf69e21
0x399: V352 = BLOCKHASH 0xa768c6909140f6850b479780830e6beb15646979f93cf69e21
0x39a: V353 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V348, V349, 0x29, V352, V350]
Exit stack: []

================================

Function 0:
Public function signature: 0x4592cd1d
Entry block: 0xa5
Exit block: 0xb2
Body: 0xa5, 0xab, 0xb2, 0x203, 0x21d, 0x224, 0x24b

Function 1:
Public function signature: 0x557f4bc9
Entry block: 0xc6
Exit block: 0xb2
Body: 0xb2, 0xc6, 0xcc, 0x24e, 0x267, 0x283, 0x284, 0x285

Function 2:
Public function signature: 0x5aa77d3c
Entry block: 0xf3
Exit block: 0x100
Body: 0xf3, 0xf9, 0x100, 0x28a

Function 3:
Public function signature: 0xce606ee0
Entry block: 0x11c
Exit block: 0x100
Body: 0x100, 0x11c, 0x122, 0x299

Function 4:
Public function signature: 0xd613be0a
Entry block: 0x145
Exit block: 0xb2
Body: 0xb2, 0x145, 0x14b, 0x283, 0x284, 0x285, 0x2a8, 0x2c1, 0x2df, 0x2e0, 0x2e1

Function 5:
Public function signature: 0xe04f31e9
Entry block: 0x172
Exit block: 0x1d6
Body: 0x172, 0x178, 0x1d6, 0x2e6, 0x301, 0x324, 0x326, 0x32c, 0x330, 0x331, 0x332, 0x333

Function 6:
Public function signature: 0xf8a6c595
Entry block: 0x1e8
Exit block: 0xa3
Body: 0xa3, 0x1e8, 0x1ee, 0x33c, 0x34e, 0x352, 0x36e

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0xa3
Body: 0x67, 0x6b, 0x73, 0x77, 0xa1, 0xa3

