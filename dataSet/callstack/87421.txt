Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x69]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x69
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x69
0xa: JUMPI 0x69 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xaf]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x41c0e1b5
0x34 EQ
0x35 PUSH2 0xaf
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x41c0e1b5
0x34: V10 = EQ 0x41c0e1b5 V8
0x35: V11 = 0xaf
0x38: JUMPI 0xaf V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xbe]
---
0x39 DUP1
0x3a PUSH4 0x8da5cb5b
0x3f EQ
0x40 PUSH2 0xbe
0x43 JUMPI
---
0x3a: V12 = 0x8da5cb5b
0x3f: V13 = EQ 0x8da5cb5b V8
0x40: V14 = 0xbe
0x43: JUMPI 0xbe V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xf7]
---
0x44 DUP1
0x45 PUSH4 0xd8f64b22
0x4a EQ
0x4b PUSH2 0xf7
0x4e JUMPI
---
0x45: V15 = 0xd8f64b22
0x4a: V16 = EQ 0xd8f64b22 V8
0x4b: V17 = 0xf7
0x4e: JUMPI 0xf7 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x11a]
---
0x4f DUP1
0x50 PUSH4 0xdc9d2907
0x55 EQ
0x56 PUSH2 0x11a
0x59 JUMPI
---
0x50: V18 = 0xdc9d2907
0x55: V19 = EQ 0xdc9d2907 V8
0x56: V20 = 0x11a
0x59: JUMPI 0x11a V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x184]
---
0x5a DUP1
0x5b PUSH4 0xf1eae25c
0x60 EQ
0x61 PUSH2 0x184
0x64 JUMPI
---
0x5b: V21 = 0xf1eae25c
0x60: V22 = EQ 0xf1eae25c V8
0x61: V23 = 0x184
0x64: JUMPI 0x184 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x5a]
Successors: [0x69]
---
0x65 PUSH2 0x69
0x68 JUMP
---
0x65: V24 = 0x69
0x68: JUMP 0x69
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x69
[0x69:0x6c]
---
Predecessors: [0x0, 0x65]
Successors: [0x6d]
---
0x69 JUMPDEST
0x6a PUSH2 0xad
---
0x69: JUMPDEST 
0x6a: V25 = 0xad
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xad]
Exit stack: [V8, 0xad]

================================

Block 0x6d
[0x6d:0xa8]
---
Predecessors: [0x69]
Successors: [0x284]
---
0x6d JUMPDEST
0x6e PUSH2 0xa9
0x71 PUSH1 0x0
0x73 CALLDATASIZE
0x74 DUP1
0x75 DUP1
0x76 PUSH1 0x1f
0x78 ADD
0x79 PUSH1 0x20
0x7b DUP1
0x7c SWAP2
0x7d DIV
0x7e MUL
0x7f PUSH1 0x20
0x81 ADD
0x82 PUSH1 0x40
0x84 MLOAD
0x85 SWAP1
0x86 DUP2
0x87 ADD
0x88 PUSH1 0x40
0x8a MSTORE
0x8b DUP1
0x8c SWAP4
0x8d SWAP3
0x8e SWAP2
0x8f SWAP1
0x90 DUP2
0x91 DUP2
0x92 MSTORE
0x93 PUSH1 0x20
0x95 ADD
0x96 DUP4
0x97 DUP4
0x98 DUP1
0x99 DUP3
0x9a DUP5
0x9b CALLDATACOPY
0x9c DUP3
0x9d ADD
0x9e SWAP2
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 PUSH2 0x284
0xa8 JUMP
---
0x6d: JUMPDEST 
0x6e: V26 = 0xa9
0x71: V27 = 0x0
0x73: V28 = CALLDATASIZE
0x76: V29 = 0x1f
0x78: V30 = ADD 0x1f V28
0x79: V31 = 0x20
0x7d: V32 = DIV V30 0x20
0x7e: V33 = MUL V32 0x20
0x7f: V34 = 0x20
0x81: V35 = ADD 0x20 V33
0x82: V36 = 0x40
0x84: V37 = M[0x40]
0x87: V38 = ADD V37 V35
0x88: V39 = 0x40
0x8a: M[0x40] = V38
0x92: M[V37] = V28
0x93: V40 = 0x20
0x95: V41 = ADD 0x20 V37
0x9b: CALLDATACOPY V41 0x0 V28
0x9d: V42 = ADD V41 V28
0xa5: V43 = 0x284
0xa8: JUMP 0x284
---
Entry stack: [V8, 0xad]
Stack pops: 0
Stack additions: [0xa9, V37]
Exit stack: [V8, 0xad, 0xa9, V37]

================================

Block 0xa9
[0xa9:0xaa]
---
Predecessors: [0x350]
Successors: [0xab]
---
0xa9 JUMPDEST
0xaa POP
---
0xa9: JUMPDEST 
---
Entry stack: [V8, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, S1]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0xa9]
Successors: [0xad]
---
0xab JUMPDEST
0xac JUMP
---
0xab: JUMPDEST 
0xac: JUMP S0
---
Entry stack: [V8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0xab]
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xaf
[0xaf:0xbb]
---
Predecessors: [0xb]
Successors: [0x1f0]
---
0xaf JUMPDEST
0xb0 PUSH2 0xbc
0xb3 PUSH1 0x4
0xb5 DUP1
0xb6 POP
0xb7 POP
0xb8 PUSH2 0x1f0
0xbb JUMP
---
0xaf: JUMPDEST 
0xb0: V44 = 0xbc
0xb3: V45 = 0x4
0xb8: V46 = 0x1f0
0xbb: JUMP 0x1f0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xbc]
Exit stack: [V8, 0xbc]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x282]
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xbe
[0xbe:0xca]
---
Predecessors: [0x39]
Successors: [0x193]
---
0xbe JUMPDEST
0xbf PUSH2 0xcb
0xc2 PUSH1 0x4
0xc4 DUP1
0xc5 POP
0xc6 POP
0xc7 PUSH2 0x193
0xca JUMP
---
0xbe: JUMPDEST 
0xbf: V47 = 0xcb
0xc2: V48 = 0x4
0xc7: V49 = 0x193
0xca: JUMP 0x193
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xcb]
Exit stack: [V8, 0xcb]

================================

Block 0xcb
[0xcb:0xf6]
---
Predecessors: [0x193]
Successors: []
---
0xcb JUMPDEST
0xcc PUSH1 0x40
0xce MLOAD
0xcf DUP1
0xd0 DUP3
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP2
0xed POP
0xee POP
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 SWAP2
0xf4 SUB
0xf5 SWAP1
0xf6 RETURN
---
0xcb: JUMPDEST 
0xcc: V50 = 0x40
0xce: V51 = M[0x40]
0xd1: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0xe8: M[V51] = V53
0xe9: V54 = 0x20
0xeb: V55 = ADD 0x20 V51
0xef: V56 = 0x40
0xf1: V57 = M[0x40]
0xf4: V58 = SUB V55 V57
0xf6: RETURN V57 V58
---
Entry stack: [V8, 0xcb, V110]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xcb]

================================

Block 0xf7
[0xf7:0x103]
---
Predecessors: [0x44]
Successors: [0x1b9]
---
0xf7 JUMPDEST
0xf8 PUSH2 0x104
0xfb PUSH1 0x4
0xfd DUP1
0xfe POP
0xff POP
0x100 PUSH2 0x1b9
0x103 JUMP
---
0xf7: JUMPDEST 
0xf8: V59 = 0x104
0xfb: V60 = 0x4
0x100: V61 = 0x1b9
0x103: JUMP 0x1b9
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V8, 0x104]

================================

Block 0x104
[0x104:0x119]
---
Predecessors: [0x1b9]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 DUP3
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f SWAP2
0x110 POP
0x111 POP
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 SWAP2
0x117 SUB
0x118 SWAP1
0x119 RETURN
---
0x104: JUMPDEST 
0x105: V62 = 0x40
0x107: V63 = M[0x40]
0x10b: M[V63] = V113
0x10c: V64 = 0x20
0x10e: V65 = ADD 0x20 V63
0x112: V66 = 0x40
0x114: V67 = M[0x40]
0x117: V68 = SUB V65 V67
0x119: RETURN V67 V68
---
Entry stack: [V8, 0x104, V113]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x104]

================================

Block 0x11a
[0x11a:0x16d]
---
Predecessors: [0x4f]
Successors: [0x284]
---
0x11a JUMPDEST
0x11b PUSH2 0x16e
0x11e PUSH1 0x4
0x120 DUP1
0x121 DUP1
0x122 CALLDATALOAD
0x123 SWAP1
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 DUP3
0x129 ADD
0x12a DUP1
0x12b CALLDATALOAD
0x12c SWAP1
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP2
0x131 SWAP2
0x132 SWAP1
0x133 DUP1
0x134 DUP1
0x135 PUSH1 0x1f
0x137 ADD
0x138 PUSH1 0x20
0x13a DUP1
0x13b SWAP2
0x13c DIV
0x13d MUL
0x13e PUSH1 0x20
0x140 ADD
0x141 PUSH1 0x40
0x143 MLOAD
0x144 SWAP1
0x145 DUP2
0x146 ADD
0x147 PUSH1 0x40
0x149 MSTORE
0x14a DUP1
0x14b SWAP4
0x14c SWAP3
0x14d SWAP2
0x14e SWAP1
0x14f DUP2
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 DUP4
0x156 DUP4
0x157 DUP1
0x158 DUP3
0x159 DUP5
0x15a CALLDATACOPY
0x15b DUP3
0x15c ADD
0x15d SWAP2
0x15e POP
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 SWAP1
0x165 SWAP1
0x166 SWAP2
0x167 SWAP1
0x168 POP
0x169 POP
0x16a PUSH2 0x284
0x16d JUMP
---
0x11a: JUMPDEST 
0x11b: V69 = 0x16e
0x11e: V70 = 0x4
0x122: V71 = CALLDATALOAD 0x4
0x124: V72 = 0x20
0x126: V73 = ADD 0x20 0x4
0x129: V74 = ADD 0x4 V71
0x12b: V75 = CALLDATALOAD V74
0x12d: V76 = 0x20
0x12f: V77 = ADD 0x20 V74
0x135: V78 = 0x1f
0x137: V79 = ADD 0x1f V75
0x138: V80 = 0x20
0x13c: V81 = DIV V79 0x20
0x13d: V82 = MUL V81 0x20
0x13e: V83 = 0x20
0x140: V84 = ADD 0x20 V82
0x141: V85 = 0x40
0x143: V86 = M[0x40]
0x146: V87 = ADD V86 V84
0x147: V88 = 0x40
0x149: M[0x40] = V87
0x151: M[V86] = V75
0x152: V89 = 0x20
0x154: V90 = ADD 0x20 V86
0x15a: CALLDATACOPY V90 V77 V75
0x15c: V91 = ADD V90 V75
0x16a: V92 = 0x284
0x16d: JUMP 0x284
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x16e, V86]
Exit stack: [V8, 0x16e, V86]

================================

Block 0x16e
[0x16e:0x183]
---
Predecessors: [0x350]
Successors: []
---
0x16e JUMPDEST
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 DUP3
0x174 DUP2
0x175 MSTORE
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP2
0x17a POP
0x17b POP
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 SWAP2
0x181 SUB
0x182 SWAP1
0x183 RETURN
---
0x16e: JUMPDEST 
0x16f: V93 = 0x40
0x171: V94 = M[0x40]
0x175: M[V94] = S0
0x176: V95 = 0x20
0x178: V96 = ADD 0x20 V94
0x17c: V97 = 0x40
0x17e: V98 = M[0x40]
0x181: V99 = SUB V96 V98
0x183: RETURN V98 V99
---
Entry stack: [V8, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, S1]

================================

Block 0x184
[0x184:0x190]
---
Predecessors: [0x5a]
Successors: [0x1c2]
---
0x184 JUMPDEST
0x185 PUSH2 0x191
0x188 PUSH1 0x4
0x18a DUP1
0x18b POP
0x18c POP
0x18d PUSH2 0x1c2
0x190 JUMP
---
0x184: JUMPDEST 
0x185: V100 = 0x191
0x188: V101 = 0x4
0x18d: V102 = 0x1c2
0x190: JUMP 0x1c2
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x191]
Exit stack: [V8, 0x191]

================================

Block 0x191
[0x191:0x192]
---
Predecessors: [0x1ee]
Successors: []
---
0x191 JUMPDEST
0x192 STOP
---
0x191: JUMPDEST 
0x192: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x193
[0x193:0x1b8]
---
Predecessors: [0xbe]
Successors: [0xcb]
---
0x193 JUMPDEST
0x194 PUSH1 0x0
0x196 PUSH1 0x0
0x198 SWAP1
0x199 SLOAD
0x19a SWAP1
0x19b PUSH2 0x100
0x19e EXP
0x19f SWAP1
0x1a0 DIV
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 DUP2
0x1b8 JUMP
---
0x193: JUMPDEST 
0x194: V103 = 0x0
0x196: V104 = 0x0
0x199: V105 = S[0x0]
0x19b: V106 = 0x100
0x19e: V107 = EXP 0x100 0x0
0x1a0: V108 = DIV V105 0x1
0x1a1: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1b8: JUMP 0xcb
---
Entry stack: [V8, 0xcb]
Stack pops: 1
Stack additions: [S0, V110]
Exit stack: [V8, 0xcb, V110]

================================

Block 0x1b9
[0x1b9:0x1c1]
---
Predecessors: [0xf7]
Successors: [0x104]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x1
0x1bc PUSH1 0x0
0x1be POP
0x1bf SLOAD
0x1c0 DUP2
0x1c1 JUMP
---
0x1b9: JUMPDEST 
0x1ba: V111 = 0x1
0x1bc: V112 = 0x0
0x1bf: V113 = S[0x1]
0x1c1: JUMP 0x104
---
Entry stack: [V8, 0x104]
Stack pops: 1
Stack additions: [S0, V113]
Exit stack: [V8, 0x104, V113]

================================

Block 0x1c2
[0x1c2:0x1ed]
---
Predecessors: [0x184]
Successors: [0x1ee]
---
0x1c2 JUMPDEST
0x1c3 CALLER
0x1c4 PUSH1 0x0
0x1c6 PUSH1 0x0
0x1c8 PUSH2 0x100
0x1cb EXP
0x1cc DUP2
0x1cd SLOAD
0x1ce DUP2
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 MUL
0x1e5 NOT
0x1e6 AND
0x1e7 SWAP1
0x1e8 DUP4
0x1e9 MUL
0x1ea OR
0x1eb SWAP1
0x1ec SSTORE
0x1ed POP
---
0x1c2: JUMPDEST 
0x1c3: V114 = CALLER
0x1c4: V115 = 0x0
0x1c6: V116 = 0x0
0x1c8: V117 = 0x100
0x1cb: V118 = EXP 0x100 0x0
0x1cd: V119 = S[0x0]
0x1cf: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V121 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1e5: V122 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V123 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V119
0x1e9: V124 = MUL V114 0x1
0x1ea: V125 = OR V124 V123
0x1ec: S[0x0] = V125
---
Entry stack: [V8, 0x191]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x191]

================================

Block 0x1ee
[0x1ee:0x1ef]
---
Predecessors: [0x1c2]
Successors: [0x191]
---
0x1ee JUMPDEST
0x1ef JUMP
---
0x1ee: JUMPDEST 
0x1ef: JUMP 0x191
---
Entry stack: [V8, 0x191]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x1f0
[0x1f0:0x246]
---
Predecessors: [0xaf]
Successors: [0x247, 0x281]
---
0x1f0 JUMPDEST
0x1f1 PUSH1 0x0
0x1f3 PUSH1 0x0
0x1f5 SWAP1
0x1f6 SLOAD
0x1f7 SWAP1
0x1f8 PUSH2 0x100
0x1fb EXP
0x1fc SWAP1
0x1fd DIV
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a CALLER
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 EQ
0x242 ISZERO
0x243 PUSH2 0x281
0x246 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V126 = 0x0
0x1f3: V127 = 0x0
0x1f6: V128 = S[0x0]
0x1f8: V129 = 0x100
0x1fb: V130 = EXP 0x100 0x0
0x1fd: V131 = DIV V128 0x1
0x1fe: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x214: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x22a: V136 = CALLER
0x22b: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x241: V139 = EQ V138 V135
0x242: V140 = ISZERO V139
0x243: V141 = 0x281
0x246: JUMPI 0x281 V140
---
Entry stack: [V8, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xbc]

================================

Block 0x247
[0x247:0x280]
---
Predecessors: [0x1f0]
Successors: []
---
0x247 PUSH1 0x0
0x249 PUSH1 0x0
0x24b SWAP1
0x24c SLOAD
0x24d SWAP1
0x24e PUSH2 0x100
0x251 EXP
0x252 SWAP1
0x253 DIV
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 SELFDESTRUCT
---
0x247: V142 = 0x0
0x249: V143 = 0x0
0x24c: V144 = S[0x0]
0x24e: V145 = 0x100
0x251: V146 = EXP 0x100 0x0
0x253: V147 = DIV V144 0x1
0x254: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x26a: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x280: SELFDESTRUCT V151
---
Entry stack: [V8, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xbc]

================================

Block 0x281
[0x281:0x281]
---
Predecessors: [0x1f0]
Successors: [0x282]
---
0x281 JUMPDEST
---
0x281: JUMPDEST 
---
Entry stack: [V8, 0xbc]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xbc]

================================

Block 0x282
[0x282:0x283]
---
Predecessors: [0x281]
Successors: [0xbc]
---
0x282 JUMPDEST
0x283 JUMP
---
0x282: JUMPDEST 
0x283: JUMP 0xbc
---
Entry stack: [V8, 0xbc]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x284
[0x284:0x30a]
---
Predecessors: [0x6d, 0x11a]
Successors: [0x30b, 0x343]
---
0x284 JUMPDEST
0x285 PUSH1 0x0
0x287 PUSH1 0x0
0x289 PUSH1 0x0
0x28b PUSH1 0x0
0x28d PUSH1 0x0
0x28f PUSH1 0x1
0x291 NUMBER
0x292 SUB
0x293 SWAP4
0x294 POP
0x295 DUP4
0x296 BLOCKHASH
0x297 PUSH1 0x1
0x299 SWAP1
0x29a DIV
0x29b SWAP3
0x29c POP
0x29d PUSH1 0x1
0x29f PUSH1 0x2
0x2a1 PUSH1 0x0
0x2a3 POP
0x2a4 SLOAD
0x2a5 DUP5
0x2a6 DIV
0x2a7 ADD
0x2a8 PUSH1 0x1
0x2aa PUSH1 0x0
0x2ac POP
0x2ad DUP2
0x2ae SWAP1
0x2af SSTORE
0x2b0 POP
0x2b1 DUP6
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 DUP1
0x2b6 DUP3
0x2b7 DUP1
0x2b8 MLOAD
0x2b9 SWAP1
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd SWAP1
0x2be DUP1
0x2bf DUP4
0x2c0 DUP4
0x2c1 DUP3
0x2c2 SWAP1
0x2c3 PUSH1 0x0
0x2c5 PUSH1 0x4
0x2c7 PUSH1 0x20
0x2c9 DUP5
0x2ca PUSH1 0x1f
0x2cc ADD
0x2cd DIV
0x2ce PUSH1 0xf
0x2d0 MUL
0x2d1 PUSH1 0x3
0x2d3 ADD
0x2d4 CALL
0x2d5 POP
0x2d6 SWAP1
0x2d7 POP
0x2d8 ADD
0x2d9 SWAP2
0x2da POP
0x2db POP
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 SWAP2
0x2e1 SUB
0x2e2 SWAP1
0x2e3 SHA3
0x2e4 SWAP2
0x2e5 POP
0x2e6 PUSH1 0x1
0x2e8 PUSH1 0x0
0x2ea POP
0x2eb SLOAD
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP1
0x2f0 DUP3
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x20
0x2f5 ADD
0x2f6 SWAP2
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd SWAP2
0x2fe SUB
0x2ff SWAP1
0x300 SHA3
0x301 SWAP1
0x302 POP
0x303 DUP1
0x304 DUP3
0x305 EQ
0x306 ISZERO
0x307 PUSH2 0x343
0x30a JUMPI
---
0x284: JUMPDEST 
0x285: V152 = 0x0
0x287: V153 = 0x0
0x289: V154 = 0x0
0x28b: V155 = 0x0
0x28d: V156 = 0x0
0x28f: V157 = 0x1
0x291: V158 = NUMBER
0x292: V159 = SUB V158 0x1
0x296: V160 = BLOCKHASH V159
0x297: V161 = 0x1
0x29a: V162 = DIV V160 0x1
0x29d: V163 = 0x1
0x29f: V164 = 0x2
0x2a1: V165 = 0x0
0x2a4: V166 = S[0x2]
0x2a6: V167 = DIV V162 V166
0x2a7: V168 = ADD V167 0x1
0x2a8: V169 = 0x1
0x2aa: V170 = 0x0
0x2af: S[0x1] = V168
0x2b2: V171 = 0x40
0x2b4: V172 = M[0x40]
0x2b8: V173 = M[S0]
0x2ba: V174 = 0x20
0x2bc: V175 = ADD 0x20 S0
0x2c3: V176 = 0x0
0x2c5: V177 = 0x4
0x2c7: V178 = 0x20
0x2ca: V179 = 0x1f
0x2cc: V180 = ADD 0x1f V173
0x2cd: V181 = DIV V180 0x20
0x2ce: V182 = 0xf
0x2d0: V183 = MUL 0xf V181
0x2d1: V184 = 0x3
0x2d3: V185 = ADD 0x3 V183
0x2d4: V186 = CALL V185 0x4 0x0 V175 V173 V172 V173
0x2d8: V187 = ADD V173 V172
0x2dc: V188 = 0x40
0x2de: V189 = M[0x40]
0x2e1: V190 = SUB V187 V189
0x2e3: V191 = SHA3 V189 V190
0x2e6: V192 = 0x1
0x2e8: V193 = 0x0
0x2eb: V194 = S[0x1]
0x2ec: V195 = 0x40
0x2ee: V196 = M[0x40]
0x2f2: M[V196] = V194
0x2f3: V197 = 0x20
0x2f5: V198 = ADD 0x20 V196
0x2f9: V199 = 0x40
0x2fb: V200 = M[0x40]
0x2fe: V201 = SUB V198 V200
0x300: V202 = SHA3 V200 V201
0x305: V203 = EQ V191 V202
0x306: V204 = ISZERO V203
0x307: V205 = 0x343
0x30a: JUMPI 0x343 V204
---
Entry stack: [V8, S2, {0xa9, 0x16e}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V159, V162, V191, V202]
Exit stack: [V8, S2, {0xa9, 0x16e}, S0, 0x0, V159, V162, V191, V202]

================================

Block 0x30b
[0x30b:0x342]
---
Predecessors: [0x284]
Successors: [0x343]
---
0x30b CALLER
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 PUSH1 0x0
0x324 PUSH1 0x3
0x326 PUSH1 0x0
0x328 POP
0x329 SLOAD
0x32a PUSH1 0x40
0x32c MLOAD
0x32d DUP1
0x32e SWAP1
0x32f POP
0x330 PUSH1 0x0
0x332 PUSH1 0x40
0x334 MLOAD
0x335 DUP1
0x336 DUP4
0x337 SUB
0x338 DUP2
0x339 DUP6
0x33a DUP9
0x33b DUP9
0x33c CALL
0x33d SWAP4
0x33e POP
0x33f POP
0x340 POP
0x341 POP
0x342 POP
---
0x30b: V206 = CALLER
0x30c: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x322: V209 = 0x0
0x324: V210 = 0x3
0x326: V211 = 0x0
0x329: V212 = S[0x3]
0x32a: V213 = 0x40
0x32c: V214 = M[0x40]
0x330: V215 = 0x0
0x332: V216 = 0x40
0x334: V217 = M[0x40]
0x337: V218 = SUB V214 V217
0x33c: V219 = CALL 0x0 V208 V212 V217 V218 V217 0x0
---
Entry stack: [V8, S7, {0xa9, 0x16e}, S5, 0x0, V159, V162, V191, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S7, {0xa9, 0x16e}, S5, 0x0, V159, V162, V191, V202]

================================

Block 0x343
[0x343:0x34f]
---
Predecessors: [0x284, 0x30b]
Successors: [0x350]
---
0x343 JUMPDEST
0x344 PUSH1 0x1
0x346 PUSH1 0x0
0x348 POP
0x349 SLOAD
0x34a SWAP5
0x34b POP
0x34c PUSH2 0x350
0x34f JUMP
---
0x343: JUMPDEST 
0x344: V220 = 0x1
0x346: V221 = 0x0
0x349: V222 = S[0x1]
0x34c: V223 = 0x350
0x34f: JUMP 0x350
---
Entry stack: [V8, S7, {0xa9, 0x16e}, S5, 0x0, V159, V162, V191, V202]
Stack pops: 5
Stack additions: [V222, S3, S2, S1, S0]
Exit stack: [V8, S7, {0xa9, 0x16e}, S5, V222, V159, V162, V191, V202]

================================

Block 0x350
[0x350:0x358]
---
Predecessors: [0x343]
Successors: [0xa9, 0x16e]
---
0x350 JUMPDEST
0x351 POP
0x352 POP
0x353 POP
0x354 POP
0x355 SWAP2
0x356 SWAP1
0x357 POP
0x358 JUMP
---
0x350: JUMPDEST 
0x358: JUMP {0xa9, 0x16e}
---
Entry stack: [V8, S7, {0xa9, 0x16e}, S5, V222, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S4]
Exit stack: [V8, S7, V222]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0xaf
Exit block: 0xbc
Body: 0xaf, 0xbc, 0x1f0, 0x247, 0x281, 0x282

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xbe
Exit block: 0xcb
Body: 0xbe, 0xcb, 0x193

Function 2:
Public function signature: 0xd8f64b22
Entry block: 0xf7
Exit block: 0x104
Body: 0xf7, 0x104, 0x1b9

Function 3:
Public function signature: 0xdc9d2907
Entry block: 0x11a
Exit block: 0x16e
Body: 0x11a, 0x16e

Function 4:
Public function signature: 0xf1eae25c
Entry block: 0x184
Exit block: 0x191
Body: 0x184, 0x191, 0x1c2, 0x1ee

Function 5:
Public fallback function
Entry block: 0x65
Exit block: 0xad
Body: 0x65, 0x69, 0x6d, 0xa9, 0xab, 0xad

Function 6:
Private function
Entry block: 0x284
Exit block: 0x350
Body: 0x284, 0x30b, 0x343, 0x350

