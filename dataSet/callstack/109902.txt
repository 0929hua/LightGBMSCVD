Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x73]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3327d22f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x73
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3327d22f
0x3b: V13 = EQ V11 0x3327d22f
0x3c: V14 = 0x73
0x3f: JUMPI 0x73 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xae]
---
0x40 DUP1
0x41 PUSH4 0xaf713566
0x46 EQ
0x47 PUSH2 0xae
0x4a JUMPI
---
0x41: V15 = 0xaf713566
0x46: V16 = EQ 0xaf713566 V11
0x47: V17 = 0xae
0x4a: JUMPI 0xae V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xd5]
---
0x4b DUP1
0x4c PUSH4 0xf2020275
0x51 EQ
0x52 PUSH2 0xd5
0x55 JUMPI
---
0x4c: V18 = 0xf2020275
0x51: V19 = EQ 0xf2020275 V11
0x52: V20 = 0xd5
0x55: JUMPI 0xd5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x64]
---
Predecessors: [0x0, 0x4b]
Successors: [0x65, 0x69]
---
0x56 JUMPDEST
0x57 PUSH6 0x5af3107a4000
0x5e CALLVALUE
0x5f LT
0x60 ISZERO
0x61 PUSH2 0x69
0x64 JUMPI
---
0x56: JUMPDEST 
0x57: V21 = 0x5af3107a4000
0x5e: V22 = CALLVALUE
0x5f: V23 = LT V22 0x5af3107a4000
0x60: V24 = ISZERO V23
0x61: V25 = 0x69
0x64: JUMPI 0x69 V24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x56]
Successors: []
---
0x65 PUSH1 0x0
0x67 DUP1
0x68 REVERT
---
0x65: V26 = 0x0
0x68: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x69
[0x69:0x70]
---
Predecessors: [0x56]
Successors: [0xea]
---
0x69 JUMPDEST
0x6a PUSH2 0x71
0x6d PUSH2 0xea
0x70 JUMP
---
0x69: JUMPDEST 
0x6a: V27 = 0x71
0x6d: V28 = 0xea
0x70: JUMP 0xea
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: [0x239]
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0xd]
Successors: [0x7b, 0x7f]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x73: JUMPDEST 
0x74: V29 = CALLVALUE
0x76: V30 = ISZERO V29
0x77: V31 = 0x7f
0x7a: JUMPI 0x7f V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V29]
Exit stack: [V11, V29]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x73]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V32 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V11, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V29]

================================

Block 0x7f
[0x7f:0x8a]
---
Predecessors: [0x73]
Successors: [0x23f]
---
0x7f JUMPDEST
0x80 POP
0x81 PUSH2 0x8b
0x84 PUSH1 0x4
0x86 CALLDATALOAD
0x87 PUSH2 0x23f
0x8a JUMP
---
0x7f: JUMPDEST 
0x81: V33 = 0x8b
0x84: V34 = 0x4
0x86: V35 = CALLDATALOAD 0x4
0x87: V36 = 0x23f
0x8a: JUMP 0x23f
---
Entry stack: [V11, V29]
Stack pops: 1
Stack additions: [0x8b, V35]
Exit stack: [V11, 0x8b, V35]

================================

Block 0x8b
[0x8b:0xad]
---
Predecessors: [0x24d]
Successors: []
---
0x8b JUMPDEST
0x8c PUSH1 0x40
0x8e DUP1
0x8f MLOAD
0x90 PUSH1 0x1
0x92 PUSH1 0xa0
0x94 PUSH1 0x2
0x96 EXP
0x97 SUB
0x98 SWAP1
0x99 SWAP4
0x9a AND
0x9b DUP4
0x9c MSTORE
0x9d PUSH1 0x20
0x9f DUP4
0xa0 ADD
0xa1 SWAP2
0xa2 SWAP1
0xa3 SWAP2
0xa4 MSTORE
0xa5 DUP1
0xa6 MLOAD
0xa7 SWAP2
0xa8 DUP3
0xa9 SWAP1
0xaa SUB
0xab ADD
0xac SWAP1
0xad RETURN
---
0x8b: JUMPDEST 
0x8c: V37 = 0x40
0x8f: V38 = M[0x40]
0x90: V39 = 0x1
0x92: V40 = 0xa0
0x94: V41 = 0x2
0x96: V42 = EXP 0x2 0xa0
0x97: V43 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a: V44 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x9c: M[V38] = V44
0x9d: V45 = 0x20
0xa0: V46 = ADD V38 0x20
0xa4: M[V46] = V198
0xa6: V47 = M[0x40]
0xaa: V48 = SUB V38 V47
0xab: V49 = ADD V48 0x40
0xad: RETURN V47 V49
---
Entry stack: [V11, 0x8b, V204, V198]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x8b]

================================

Block 0xae
[0xae:0xb5]
---
Predecessors: [0x40]
Successors: [0xb6, 0xba]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 DUP1
0xb1 ISZERO
0xb2 PUSH2 0xba
0xb5 JUMPI
---
0xae: JUMPDEST 
0xaf: V50 = CALLVALUE
0xb1: V51 = ISZERO V50
0xb2: V52 = 0xba
0xb5: JUMPI 0xba V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V50]
Exit stack: [V11, V50]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xae]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 REVERT
---
0xb6: V53 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V11, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V50]

================================

Block 0xba
[0xba:0xc2]
---
Predecessors: [0xae]
Successors: [0x275]
---
0xba JUMPDEST
0xbb POP
0xbc PUSH2 0xc3
0xbf PUSH2 0x275
0xc2 JUMP
---
0xba: JUMPDEST 
0xbc: V54 = 0xc3
0xbf: V55 = 0x275
0xc2: JUMP 0x275
---
Entry stack: [V11, V50]
Stack pops: 1
Stack additions: [0xc3]
Exit stack: [V11, 0xc3]

================================

Block 0xc3
[0xc3:0xd4]
---
Predecessors: [0x275, 0x27b]
Successors: []
---
0xc3 JUMPDEST
0xc4 PUSH1 0x40
0xc6 DUP1
0xc7 MLOAD
0xc8 SWAP2
0xc9 DUP3
0xca MSTORE
0xcb MLOAD
0xcc SWAP1
0xcd DUP2
0xce SWAP1
0xcf SUB
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 RETURN
---
0xc3: JUMPDEST 
0xc4: V56 = 0x40
0xc7: V57 = M[0x40]
0xca: M[V57] = S0
0xcb: V58 = M[0x40]
0xcf: V59 = SUB V57 V58
0xd0: V60 = 0x20
0xd2: V61 = ADD 0x20 V59
0xd4: RETURN V58 V61
---
Entry stack: [V11, 0xc3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc3]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0x4b]
Successors: [0xdd, 0xe1]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 DUP1
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd5: JUMPDEST 
0xd6: V62 = CALLVALUE
0xd8: V63 = ISZERO V62
0xd9: V64 = 0xe1
0xdc: JUMPI 0xe1 V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V11, V62]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd5]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V65 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62]

================================

Block 0xe1
[0xe1:0xe9]
---
Predecessors: [0xd5]
Successors: [0x27b]
---
0xe1 JUMPDEST
0xe2 POP
0xe3 PUSH2 0xc3
0xe6 PUSH2 0x27b
0xe9 JUMP
---
0xe1: JUMPDEST 
0xe3: V66 = 0xc3
0xe6: V67 = 0x27b
0xe9: JUMP 0x27b
---
Entry stack: [V11, V62]
Stack pops: 1
Stack additions: [0xc3]
Exit stack: [V11, 0xc3]

================================

Block 0xea
[0xea:0x137]
---
Predecessors: [0x69]
Successors: [0x397]
---
0xea JUMPDEST
0xeb PUSH1 0x3
0xed SLOAD
0xee PUSH1 0x40
0xf0 MLOAD
0xf1 PUSH1 0x5
0xf3 CALLVALUE
0xf4 DIV
0xf5 SWAP2
0xf6 PUSH1 0x0
0xf8 SWAP2
0xf9 DUP3
0xfa SWAP2
0xfb DUP3
0xfc SWAP2
0xfd PUSH1 0x1
0xff PUSH1 0xa0
0x101 PUSH1 0x2
0x103 EXP
0x104 SUB
0x105 SWAP1
0x106 SWAP2
0x107 AND
0x108 SWAP1
0x109 PUSH2 0x8fc
0x10c DUP7
0x10d ISZERO
0x10e MUL
0x10f SWAP1
0x110 DUP7
0x111 SWAP1
0x112 DUP5
0x113 DUP2
0x114 DUP2
0x115 DUP2
0x116 DUP6
0x117 DUP9
0x118 DUP9
0x119 CALL
0x11a POP
0x11b POP
0x11c PUSH1 0x0
0x11e DUP1
0x11f SLOAD
0x120 SWAP1
0x121 SWAP8
0x122 POP
0x123 SWAP6
0x124 POP
0x125 DUP6
0x126 SWAP3
0x127 POP
0x128 PUSH2 0x138
0x12b SWAP2
0x12c POP
0x12d DUP7
0x12e SWAP1
0x12f POP
0x130 PUSH1 0x1
0x132 DUP4
0x133 ADD
0x134 PUSH2 0x397
0x137 JUMP
---
0xea: JUMPDEST 
0xeb: V68 = 0x3
0xed: V69 = S[0x3]
0xee: V70 = 0x40
0xf0: V71 = M[0x40]
0xf1: V72 = 0x5
0xf3: V73 = CALLVALUE
0xf4: V74 = DIV V73 0x5
0xf6: V75 = 0x0
0xfd: V76 = 0x1
0xff: V77 = 0xa0
0x101: V78 = 0x2
0x103: V79 = EXP 0x2 0xa0
0x104: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107: V81 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x109: V82 = 0x8fc
0x10d: V83 = ISZERO V74
0x10e: V84 = MUL V83 0x8fc
0x119: V85 = CALL V84 V81 V74 V71 0x0 V71 0x0
0x11c: V86 = 0x0
0x11f: V87 = S[0x0]
0x128: V88 = 0x138
0x130: V89 = 0x1
0x133: V90 = ADD V87 0x1
0x134: V91 = 0x397
0x137: JUMP 0x397
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: [0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90]
Exit stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90]

================================

Block 0x138
[0x138:0x147]
---
Predecessors: [0x392]
Successors: [0x148, 0x149]
---
0x138 JUMPDEST
0x139 POP
0x13a CALLER
0x13b PUSH1 0x0
0x13d DUP5
0x13e DUP2
0x13f SLOAD
0x140 DUP2
0x141 LT
0x142 ISZERO
0x143 ISZERO
0x144 PUSH2 0x149
0x147 JUMPI
---
0x138: JUMPDEST 
0x13a: V92 = CALLER
0x13b: V93 = 0x0
0x13f: V94 = S[0x0]
0x141: V95 = LT S3 V94
0x142: V96 = ISZERO V95
0x143: V97 = ISZERO V96
0x144: V98 = 0x149
0x147: JUMPI 0x149 V97
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V92, 0x0, S3]
Exit stack: [V11, S5, S4, S3, S2, S1, V92, 0x0, S3]

================================

Block 0x148
[0x148:0x148]
---
Predecessors: [0x138]
Successors: []
---
0x148 INVALID
---
0x148: INVALID 
---
Entry stack: [V11, S7, S6, S5, S4, S3, V92, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, V92, 0x0, S0]

================================

Block 0x149
[0x149:0x192]
---
Predecessors: [0x138]
Successors: [0x193, 0x194]
---
0x149 JUMPDEST
0x14a PUSH1 0x0
0x14c SWAP2
0x14d DUP3
0x14e MSTORE
0x14f PUSH1 0x20
0x151 DUP3
0x152 SHA3
0x153 PUSH1 0x2
0x155 SWAP2
0x156 SWAP1
0x157 SWAP2
0x158 MUL
0x159 ADD
0x15a DUP1
0x15b SLOAD
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 NOT
0x172 AND
0x173 PUSH1 0x1
0x175 PUSH1 0xa0
0x177 PUSH1 0x2
0x179 EXP
0x17a SUB
0x17b SWAP4
0x17c SWAP1
0x17d SWAP4
0x17e AND
0x17f SWAP3
0x180 SWAP1
0x181 SWAP3
0x182 OR
0x183 SWAP1
0x184 SWAP2
0x185 SSTORE
0x186 DUP1
0x187 SLOAD
0x188 CALLVALUE
0x189 SWAP2
0x18a SWAP1
0x18b DUP6
0x18c SWAP1
0x18d DUP2
0x18e LT
0x18f PUSH2 0x194
0x192 JUMPI
---
0x149: JUMPDEST 
0x14a: V99 = 0x0
0x14e: M[0x0] = 0x0
0x14f: V100 = 0x20
0x152: V101 = SHA3 0x0 0x20
0x153: V102 = 0x2
0x158: V103 = MUL 0x2 S0
0x159: V104 = ADD V103 V101
0x15b: V105 = S[V104]
0x15c: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V107 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x172: V108 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V105
0x173: V109 = 0x1
0x175: V110 = 0xa0
0x177: V111 = 0x2
0x179: V112 = EXP 0x2 0xa0
0x17a: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17e: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x182: V115 = OR V114 V108
0x185: S[V104] = V115
0x187: V116 = S[0x0]
0x188: V117 = CALLVALUE
0x18e: V118 = LT S5 V116
0x18f: V119 = 0x194
0x192: JUMPI 0x194 V118
---
Entry stack: [V11, S7, S6, S5, S4, S3, V92, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V117, 0x0, S5]
Exit stack: [V11, S7, S6, S5, S4, S3, V117, 0x0, S5]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x149]
Successors: []
---
0x193 INVALID
---
0x193: INVALID 
---
Entry stack: [V11, S7, S6, S5, S4, S3, V117, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, V117, 0x0, S0]

================================

Block 0x194
[0x194:0x1c3]
---
Predecessors: [0x149]
Successors: [0x1c4, 0x239]
---
0x194 JUMPDEST
0x195 PUSH1 0x0
0x197 SWAP2
0x198 DUP3
0x199 MSTORE
0x19a PUSH1 0x20
0x19c DUP3
0x19d SHA3
0x19e PUSH1 0x1
0x1a0 PUSH1 0x2
0x1a2 SWAP1
0x1a3 SWAP3
0x1a4 MUL
0x1a5 ADD
0x1a6 DUP2
0x1a7 ADD
0x1a8 SWAP3
0x1a9 SWAP1
0x1aa SWAP3
0x1ab SSTORE
0x1ac SLOAD
0x1ad SWAP1
0x1ae SSTORE
0x1af PUSH1 0x3
0x1b1 SLOAD
0x1b2 CALLER
0x1b3 PUSH1 0x1
0x1b5 PUSH1 0xa0
0x1b7 PUSH1 0x2
0x1b9 EXP
0x1ba SUB
0x1bb SWAP1
0x1bc SWAP2
0x1bd AND
0x1be EQ
0x1bf ISZERO
0x1c0 PUSH2 0x239
0x1c3 JUMPI
---
0x194: JUMPDEST 
0x195: V120 = 0x0
0x199: M[0x0] = 0x0
0x19a: V121 = 0x20
0x19d: V122 = SHA3 0x0 0x20
0x19e: V123 = 0x1
0x1a0: V124 = 0x2
0x1a4: V125 = MUL S0 0x2
0x1a5: V126 = ADD V125 V122
0x1a7: V127 = ADD 0x1 V126
0x1ab: S[V127] = V117
0x1ac: V128 = S[0x0]
0x1ae: S[0x1] = V128
0x1af: V129 = 0x3
0x1b1: V130 = S[0x3]
0x1b2: V131 = CALLER
0x1b3: V132 = 0x1
0x1b5: V133 = 0xa0
0x1b7: V134 = 0x2
0x1b9: V135 = EXP 0x2 0xa0
0x1ba: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V137 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V138 = EQ V137 V131
0x1bf: V139 = ISZERO V138
0x1c0: V140 = 0x239
0x1c3: JUMPI 0x239 V139
---
Entry stack: [V11, S7, S6, S5, S4, S3, V117, 0x0, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3]

================================

Block 0x1c4
[0x1c4:0x1cc]
---
Predecessors: [0x194]
Successors: [0x1cd, 0x1fd]
---
0x1c4 PUSH1 0x2
0x1c6 SLOAD
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 PUSH2 0x1fd
0x1cc JUMPI
---
0x1c4: V141 = 0x2
0x1c6: V142 = S[0x2]
0x1c7: V143 = ISZERO V142
0x1c8: V144 = ISZERO V143
0x1c9: V145 = 0x1fd
0x1cc: JUMPI 0x1fd V144
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, S1, S0]

================================

Block 0x1cd
[0x1cd:0x1d9]
---
Predecessors: [0x1c4]
Successors: [0x1da, 0x1e6]
---
0x1cd PUSH1 0x0
0x1cf SLOAD
0x1d0 SWAP2
0x1d1 POP
0x1d2 PUSH1 0xfa
0x1d4 DUP3
0x1d5 GT
0x1d6 PUSH2 0x1e6
0x1d9 JUMPI
---
0x1cd: V146 = 0x0
0x1cf: V147 = S[0x0]
0x1d2: V148 = 0xfa
0x1d5: V149 = GT V147 0xfa
0x1d6: V150 = 0x1e6
0x1d9: JUMPI 0x1e6 V149
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V147, S0]
Exit stack: [V11, S4, S3, S2, V147, S0]

================================

Block 0x1da
[0x1da:0x1e5]
---
Predecessors: [0x1cd]
Successors: [0x1f8]
---
0x1da POP
0x1db PUSH1 0x0
0x1dd PUSH1 0x2
0x1df DUP2
0x1e0 SWAP1
0x1e1 SSTORE
0x1e2 PUSH2 0x1f8
0x1e5 JUMP
---
0x1db: V151 = 0x0
0x1dd: V152 = 0x2
0x1e1: S[0x2] = 0x0
0x1e2: V153 = 0x1f8
0x1e5: JUMP 0x1f8
---
Entry stack: [V11, S4, S3, S2, V147, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, S4, S3, S2, V147, 0x0]

================================

Block 0x1e6
[0x1e6:0x1f7]
---
Predecessors: [0x1cd]
Successors: [0x1f8]
---
0x1e6 JUMPDEST
0x1e7 POP
0x1e8 PUSH1 0x2
0x1ea DUP1
0x1eb SLOAD
0x1ec PUSH1 0x1
0x1ee ADD
0x1ef SWAP1
0x1f0 SSTORE
0x1f1 PUSH1 0x0
0x1f3 SLOAD
0x1f4 PUSH1 0xf9
0x1f6 NOT
0x1f7 ADD
---
0x1e6: JUMPDEST 
0x1e8: V154 = 0x2
0x1eb: V155 = S[0x2]
0x1ec: V156 = 0x1
0x1ee: V157 = ADD 0x1 V155
0x1f0: S[0x2] = V157
0x1f1: V158 = 0x0
0x1f3: V159 = S[0x0]
0x1f4: V160 = 0xf9
0x1f6: V161 = NOT 0xf9
0x1f7: V162 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff06 V159
---
Entry stack: [V11, S4, S3, S2, V147, S0]
Stack pops: 1
Stack additions: [V162]
Exit stack: [V11, S4, S3, S2, V147, V162]

================================

Block 0x1f8
[0x1f8:0x1fc]
---
Predecessors: [0x1da, 0x1e6]
Successors: [0x22f]
---
0x1f8 JUMPDEST
0x1f9 PUSH2 0x22f
0x1fc JUMP
---
0x1f8: JUMPDEST 
0x1f9: V163 = 0x22f
0x1fc: JUMP 0x22f
---
Entry stack: [V11, S4, S3, S2, V147, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S4, S3, S2, V147, S0]

================================

Block 0x1fd
[0x1fd:0x212]
---
Predecessors: [0x1c4]
Successors: [0x213, 0x21f]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x2
0x200 SLOAD
0x201 PUSH1 0x0
0x203 SLOAD
0x204 PUSH1 0xfa
0x206 SWAP2
0x207 DUP3
0x208 MUL
0x209 SWAP1
0x20a SUB
0x20b SWAP3
0x20c POP
0x20d DUP3
0x20e GT
0x20f PUSH2 0x21f
0x212 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V164 = 0x2
0x200: V165 = S[0x2]
0x201: V166 = 0x0
0x203: V167 = S[0x0]
0x204: V168 = 0xfa
0x208: V169 = MUL 0xfa V165
0x20a: V170 = SUB V167 V169
0x20e: V171 = GT V170 0xfa
0x20f: V172 = 0x21f
0x212: JUMPI 0x21f V171
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V170, S0]
Exit stack: [V11, S4, S3, S2, V170, S0]

================================

Block 0x213
[0x213:0x21e]
---
Predecessors: [0x1fd]
Successors: [0x22f]
---
0x213 POP
0x214 PUSH1 0x0
0x216 PUSH1 0x2
0x218 DUP2
0x219 SWAP1
0x21a SSTORE
0x21b PUSH2 0x22f
0x21e JUMP
---
0x214: V173 = 0x0
0x216: V174 = 0x2
0x21a: S[0x2] = 0x0
0x21b: V175 = 0x22f
0x21e: JUMP 0x22f
---
Entry stack: [V11, S4, S3, S2, V170, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, S4, S3, S2, V170, 0x0]

================================

Block 0x21f
[0x21f:0x22e]
---
Predecessors: [0x1fd]
Successors: [0x22f]
---
0x21f JUMPDEST
0x220 POP
0x221 PUSH1 0x2
0x223 DUP1
0x224 SLOAD
0x225 PUSH1 0x1
0x227 ADD
0x228 SWAP1
0x229 SSTORE
0x22a PUSH1 0xf9
0x22c NOT
0x22d DUP2
0x22e ADD
---
0x21f: JUMPDEST 
0x221: V176 = 0x2
0x224: V177 = S[0x2]
0x225: V178 = 0x1
0x227: V179 = ADD 0x1 V177
0x229: S[0x2] = V179
0x22a: V180 = 0xf9
0x22c: V181 = NOT 0xf9
0x22e: V182 = ADD V170 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff06
---
Entry stack: [V11, S4, S3, S2, V170, S0]
Stack pops: 2
Stack additions: [S1, V182]
Exit stack: [V11, S4, S3, S2, V170, V182]

================================

Block 0x22f
[0x22f:0x238]
---
Predecessors: [0x1f8, 0x213, 0x21f]
Successors: [0x281]
---
0x22f JUMPDEST
0x230 PUSH2 0x239
0x233 DUP3
0x234 DUP3
0x235 PUSH2 0x281
0x238 JUMP
---
0x22f: JUMPDEST 
0x230: V183 = 0x239
0x235: V184 = 0x281
0x238: JUMP 0x281
---
Entry stack: [V11, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x239, S1, S0]
Exit stack: [V11, S4, S3, S2, S1, S0, 0x239, S1, S0]

================================

Block 0x239
[0x239:0x23e]
---
Predecessors: [0x194, 0x392]
Successors: [0x71]
---
0x239 JUMPDEST
0x23a POP
0x23b POP
0x23c POP
0x23d POP
0x23e JUMP
---
0x239: JUMPDEST 
0x23e: JUMP S4
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11, S5]

================================

Block 0x23f
[0x23f:0x24b]
---
Predecessors: [0x7f]
Successors: [0x24c, 0x24d]
---
0x23f JUMPDEST
0x240 PUSH1 0x0
0x242 DUP1
0x243 SLOAD
0x244 DUP3
0x245 SWAP1
0x246 DUP2
0x247 LT
0x248 PUSH2 0x24d
0x24b JUMPI
---
0x23f: JUMPDEST 
0x240: V185 = 0x0
0x243: V186 = S[0x0]
0x247: V187 = LT V35 V186
0x248: V188 = 0x24d
0x24b: JUMPI 0x24d V187
---
Entry stack: [V11, 0x8b, V35]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0x8b, V35, 0x0, V35]

================================

Block 0x24c
[0x24c:0x24c]
---
Predecessors: [0x23f]
Successors: []
---
0x24c INVALID
---
0x24c: INVALID 
---
Entry stack: [V11, 0x8b, V35, 0x0, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8b, V35, 0x0, V35]

================================

Block 0x24d
[0x24d:0x274]
---
Predecessors: [0x23f]
Successors: [0x8b]
---
0x24d JUMPDEST
0x24e PUSH1 0x0
0x250 SWAP2
0x251 DUP3
0x252 MSTORE
0x253 PUSH1 0x20
0x255 SWAP1
0x256 SWAP2
0x257 SHA3
0x258 PUSH1 0x2
0x25a SWAP1
0x25b SWAP2
0x25c MUL
0x25d ADD
0x25e DUP1
0x25f SLOAD
0x260 PUSH1 0x1
0x262 SWAP1
0x263 SWAP2
0x264 ADD
0x265 SLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e SWAP1
0x26f SWAP2
0x270 AND
0x271 SWAP2
0x272 POP
0x273 DUP3
0x274 JUMP
---
0x24d: JUMPDEST 
0x24e: V189 = 0x0
0x252: M[0x0] = 0x0
0x253: V190 = 0x20
0x257: V191 = SHA3 0x0 0x20
0x258: V192 = 0x2
0x25c: V193 = MUL V35 0x2
0x25d: V194 = ADD V193 V191
0x25f: V195 = S[V194]
0x260: V196 = 0x1
0x264: V197 = ADD V194 0x1
0x265: V198 = S[V197]
0x266: V199 = 0x1
0x268: V200 = 0xa0
0x26a: V201 = 0x2
0x26c: V202 = EXP 0x2 0xa0
0x26d: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x270: V204 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x274: JUMP 0x8b
---
Entry stack: [V11, 0x8b, V35, 0x0, V35]
Stack pops: 4
Stack additions: [S3, V204, V198]
Exit stack: [V11, 0x8b, V204, V198]

================================

Block 0x275
[0x275:0x27a]
---
Predecessors: [0xba]
Successors: [0xc3]
---
0x275 JUMPDEST
0x276 PUSH1 0x2
0x278 SLOAD
0x279 DUP2
0x27a JUMP
---
0x275: JUMPDEST 
0x276: V205 = 0x2
0x278: V206 = S[0x2]
0x27a: JUMP 0xc3
---
Entry stack: [V11, 0xc3]
Stack pops: 1
Stack additions: [S0, V206]
Exit stack: [V11, 0xc3, V206]

================================

Block 0x27b
[0x27b:0x280]
---
Predecessors: [0xe1]
Successors: [0xc3]
---
0x27b JUMPDEST
0x27c PUSH1 0x1
0x27e SLOAD
0x27f DUP2
0x280 JUMP
---
0x27b: JUMPDEST 
0x27c: V207 = 0x1
0x27e: V208 = S[0x1]
0x280: JUMP 0xc3
---
Entry stack: [V11, 0xc3]
Stack pops: 1
Stack additions: [S0, V208]
Exit stack: [V11, 0xc3, V208]

================================

Block 0x281
[0x281:0x296]
---
Predecessors: [0x22f]
Successors: [0x297, 0x29b]
---
0x281 JUMPDEST
0x282 PUSH1 0x3
0x284 SLOAD
0x285 PUSH1 0x0
0x287 SWAP1
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 AND
0x291 CALLER
0x292 EQ
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x281: JUMPDEST 
0x282: V209 = 0x3
0x284: V210 = S[0x3]
0x285: V211 = 0x0
0x288: V212 = 0x1
0x28a: V213 = 0xa0
0x28c: V214 = 0x2
0x28e: V215 = EXP 0x2 0xa0
0x28f: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x291: V218 = CALLER
0x292: V219 = EQ V218 V217
0x293: V220 = 0x29b
0x296: JUMPI 0x29b V219
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x239, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, S7, S6, S5, S4, S3, 0x239, S1, S0, 0x0]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x281]
Successors: []
---
0x297 PUSH1 0x0
0x299 DUP1
0x29a REVERT
---
0x297: V221 = 0x0
0x29a: REVERT 0x0 0x0
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x239, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, S4, 0x239, S2, S1, 0x0]

================================

Block 0x29b
[0x29b:0x2a3]
---
Predecessors: [0x281, 0x370]
Successors: [0x2a4, 0x392]
---
0x29b JUMPDEST
0x29c DUP2
0x29d DUP4
0x29e GT
0x29f ISZERO
0x2a0 PUSH2 0x392
0x2a3 JUMPI
---
0x29b: JUMPDEST 
0x29e: V222 = GT S2 S1
0x29f: V223 = ISZERO V222
0x2a0: V224 = 0x392
0x2a3: JUMPI 0x392 V223
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x239, S2, S1, {0x0, 0x4, 0x6}]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x239, S2, S1, {0x0, 0x4, 0x6}]

================================

Block 0x2a4
[0x2a4:0x2bf]
---
Predecessors: [0x29b]
Successors: [0x2c0, 0x2c1]
---
0x2a4 PUSH1 0x1
0x2a6 DUP4
0x2a7 SUB
0x2a8 SWAP3
0x2a9 POP
0x2aa PUSH8 0xde0b6b3a7640000
0x2b3 PUSH1 0x0
0x2b5 DUP5
0x2b6 DUP2
0x2b7 SLOAD
0x2b8 DUP2
0x2b9 LT
0x2ba ISZERO
0x2bb ISZERO
0x2bc PUSH2 0x2c1
0x2bf JUMPI
---
0x2a4: V225 = 0x1
0x2a7: V226 = SUB S2 0x1
0x2aa: V227 = 0xde0b6b3a7640000
0x2b3: V228 = 0x0
0x2b7: V229 = S[0x0]
0x2b9: V230 = LT V226 V229
0x2ba: V231 = ISZERO V230
0x2bb: V232 = ISZERO V231
0x2bc: V233 = 0x2c1
0x2bf: JUMPI 0x2c1 V232
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x239, S2, S1, {0x0, 0x4, 0x6}]
Stack pops: 3
Stack additions: [V226, S1, S0, 0xde0b6b3a7640000, 0x0, V226]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]

================================

Block 0x2c0
[0x2c0:0x2c0]
---
Predecessors: [0x2a4]
Successors: []
---
0x2c0 INVALID
---
0x2c0: INVALID 
---
Entry stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]

================================

Block 0x2c1
[0x2c1:0x2d9]
---
Predecessors: [0x2a4]
Successors: [0x2da, 0x2e1]
---
0x2c1 JUMPDEST
0x2c2 SWAP1
0x2c3 PUSH1 0x0
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 PUSH1 0x0
0x2ca SHA3
0x2cb SWAP1
0x2cc PUSH1 0x2
0x2ce MUL
0x2cf ADD
0x2d0 PUSH1 0x1
0x2d2 ADD
0x2d3 SLOAD
0x2d4 LT
0x2d5 ISZERO
0x2d6 PUSH2 0x2e1
0x2d9 JUMPI
---
0x2c1: JUMPDEST 
0x2c3: V234 = 0x0
0x2c5: M[0x0] = 0x0
0x2c6: V235 = 0x20
0x2c8: V236 = 0x0
0x2ca: V237 = SHA3 0x0 0x20
0x2cc: V238 = 0x2
0x2ce: V239 = MUL 0x2 V226
0x2cf: V240 = ADD V239 V237
0x2d0: V241 = 0x1
0x2d2: V242 = ADD 0x1 V240
0x2d3: V243 = S[V242]
0x2d4: V244 = LT V243 0xde0b6b3a7640000
0x2d5: V245 = ISZERO V244
0x2d6: V246 = 0x2e1
0x2d9: JUMPI 0x2e1 V245
---
Entry stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}]

================================

Block 0x2da
[0x2da:0x2e0]
---
Predecessors: [0x2c1]
Successors: [0x316]
---
0x2da POP
0x2db PUSH1 0x4
0x2dd PUSH2 0x316
0x2e0 JUMP
---
0x2db: V247 = 0x4
0x2dd: V248 = 0x316
0x2e0: JUMP 0x316
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, {0x0, 0x4, 0x6}]
Stack pops: 1
Stack additions: [0x4]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, 0x4]

================================

Block 0x2e1
[0x2e1:0x2f7]
---
Predecessors: [0x2c1]
Successors: [0x2f8, 0x2f9]
---
0x2e1 JUMPDEST
0x2e2 PUSH8 0xde0b6b3a7640000
0x2eb PUSH1 0x0
0x2ed DUP5
0x2ee DUP2
0x2ef SLOAD
0x2f0 DUP2
0x2f1 LT
0x2f2 ISZERO
0x2f3 ISZERO
0x2f4 PUSH2 0x2f9
0x2f7 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V249 = 0xde0b6b3a7640000
0x2eb: V250 = 0x0
0x2ef: V251 = S[0x0]
0x2f1: V252 = LT V226 V251
0x2f2: V253 = ISZERO V252
0x2f3: V254 = ISZERO V253
0x2f4: V255 = 0x2f9
0x2f7: JUMPI 0x2f9 V254
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, {0x0, 0x4, 0x6}]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xde0b6b3a7640000, 0x0, S2]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]

================================

Block 0x2f8
[0x2f8:0x2f8]
---
Predecessors: [0x2e1]
Successors: []
---
0x2f8 INVALID
---
0x2f8: INVALID 
---
Entry stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]

================================

Block 0x2f9
[0x2f9:0x312]
---
Predecessors: [0x2e1]
Successors: [0x313, 0x316]
---
0x2f9 JUMPDEST
0x2fa SWAP1
0x2fb PUSH1 0x0
0x2fd MSTORE
0x2fe PUSH1 0x20
0x300 PUSH1 0x0
0x302 SHA3
0x303 SWAP1
0x304 PUSH1 0x2
0x306 MUL
0x307 ADD
0x308 PUSH1 0x1
0x30a ADD
0x30b SLOAD
0x30c LT
0x30d ISZERO
0x30e ISZERO
0x30f PUSH2 0x316
0x312 JUMPI
---
0x2f9: JUMPDEST 
0x2fb: V256 = 0x0
0x2fd: M[0x0] = 0x0
0x2fe: V257 = 0x20
0x300: V258 = 0x0
0x302: V259 = SHA3 0x0 0x20
0x304: V260 = 0x2
0x306: V261 = MUL 0x2 V226
0x307: V262 = ADD V261 V259
0x308: V263 = 0x1
0x30a: V264 = ADD 0x1 V262
0x30b: V265 = S[V264]
0x30c: V266 = LT V265 0xde0b6b3a7640000
0x30d: V267 = ISZERO V266
0x30e: V268 = ISZERO V267
0x30f: V269 = 0x316
0x312: JUMPI 0x316 V268
---
Entry stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}, 0xde0b6b3a7640000, 0x0, V226]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S11, S10, S9, S8, S7, 0x239, V226, S4, {0x0, 0x4, 0x6}]

================================

Block 0x313
[0x313:0x315]
---
Predecessors: [0x2f9]
Successors: [0x316]
---
0x313 POP
0x314 PUSH1 0x6
---
0x314: V270 = 0x6
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, {0x0, 0x4, 0x6}]
Stack pops: 1
Stack additions: [0x6]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, 0x6]

================================

Block 0x316
[0x316:0x322]
---
Predecessors: [0x2da, 0x2f9, 0x313]
Successors: [0x323, 0x324]
---
0x316 JUMPDEST
0x317 PUSH1 0x0
0x319 DUP1
0x31a SLOAD
0x31b DUP5
0x31c SWAP1
0x31d DUP2
0x31e LT
0x31f PUSH2 0x324
0x322 JUMPI
---
0x316: JUMPDEST 
0x317: V271 = 0x0
0x31a: V272 = S[0x0]
0x31e: V273 = LT V226 V272
0x31f: V274 = 0x324
0x322: JUMPI 0x324 V273
---
Entry stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, {0x0, 0x4, 0x6}]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S2]
Exit stack: [V11, S8, S7, S6, S5, S4, 0x239, V226, S1, {0x0, 0x4, 0x6}, 0x0, V226]

================================

Block 0x323
[0x323:0x323]
---
Predecessors: [0x316]
Successors: []
---
0x323 INVALID
---
0x323: INVALID 
---
Entry stack: [V11, S10, S9, S8, S7, S6, 0x239, V226, S3, {0x0, 0x4, 0x6}, 0x0, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, 0x239, V226, S3, {0x0, 0x4, 0x6}, 0x0, V226]

================================

Block 0x324
[0x324:0x353]
---
Predecessors: [0x316]
Successors: [0x354, 0x355]
---
0x324 JUMPDEST
0x325 PUSH1 0x0
0x327 SWAP2
0x328 DUP3
0x329 MSTORE
0x32a PUSH1 0x20
0x32c DUP3
0x32d SHA3
0x32e PUSH1 0x2
0x330 SWAP1
0x331 SWAP2
0x332 MUL
0x333 ADD
0x334 SLOAD
0x335 DUP2
0x336 SLOAD
0x337 PUSH1 0x1
0x339 PUSH1 0xa0
0x33b PUSH1 0x2
0x33d EXP
0x33e SUB
0x33f SWAP1
0x340 SWAP2
0x341 AND
0x342 SWAP2
0x343 PUSH2 0x8fc
0x346 SWAP2
0x347 DUP5
0x348 SWAP2
0x349 PUSH1 0x64
0x34b SWAP2
0x34c DUP9
0x34d SWAP1
0x34e DUP2
0x34f LT
0x350 PUSH2 0x355
0x353 JUMPI
---
0x324: JUMPDEST 
0x325: V275 = 0x0
0x329: M[0x0] = 0x0
0x32a: V276 = 0x20
0x32d: V277 = SHA3 0x0 0x20
0x32e: V278 = 0x2
0x332: V279 = MUL V226 0x2
0x333: V280 = ADD V279 V277
0x334: V281 = S[V280]
0x336: V282 = S[0x0]
0x337: V283 = 0x1
0x339: V284 = 0xa0
0x33b: V285 = 0x2
0x33d: V286 = EXP 0x2 0xa0
0x33e: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V288 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x343: V289 = 0x8fc
0x349: V290 = 0x64
0x34f: V291 = LT V226 V282
0x350: V292 = 0x355
0x353: JUMPI 0x355 V291
---
Entry stack: [V11, S10, S9, S8, S7, S6, 0x239, V226, S3, {0x0, 0x4, 0x6}, 0x0, V226]
Stack pops: 5
Stack additions: [S4, S3, S2, V288, 0x8fc, S2, 0x64, 0x0, S4]
Exit stack: [V11, S10, S9, S8, S7, S6, 0x239, V226, S3, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, 0x0, V226]

================================

Block 0x354
[0x354:0x354]
---
Predecessors: [0x324]
Successors: []
---
0x354 INVALID
---
0x354: INVALID 
---
Entry stack: [V11, S14, S13, S12, S11, S10, 0x239, V226, S7, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, 0x0, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S14, S13, S12, S11, S10, 0x239, V226, S7, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, 0x0, V226]

================================

Block 0x355
[0x355:0x36e]
---
Predecessors: [0x324]
Successors: [0x36f, 0x370]
---
0x355 JUMPDEST
0x356 SWAP1
0x357 PUSH1 0x0
0x359 MSTORE
0x35a PUSH1 0x20
0x35c PUSH1 0x0
0x35e SHA3
0x35f SWAP1
0x360 PUSH1 0x2
0x362 MUL
0x363 ADD
0x364 PUSH1 0x1
0x366 ADD
0x367 SLOAD
0x368 DUP2
0x369 ISZERO
0x36a ISZERO
0x36b PUSH2 0x370
0x36e JUMPI
---
0x355: JUMPDEST 
0x357: V293 = 0x0
0x359: M[0x0] = 0x0
0x35a: V294 = 0x20
0x35c: V295 = 0x0
0x35e: V296 = SHA3 0x0 0x20
0x360: V297 = 0x2
0x362: V298 = MUL 0x2 V226
0x363: V299 = ADD V298 V296
0x364: V300 = 0x1
0x366: V301 = ADD 0x1 V299
0x367: V302 = S[V301]
0x369: V303 = ISZERO 0x64
0x36a: V304 = ISZERO 0x0
0x36b: V305 = 0x370
0x36e: JUMPI 0x370 0x1
---
Entry stack: [V11, S14, S13, S12, S11, S10, 0x239, V226, S7, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, 0x0, V226]
Stack pops: 3
Stack additions: [S2, V302]
Exit stack: [V11, S14, S13, S12, S11, S10, 0x239, V226, S7, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, V302]

================================

Block 0x36f
[0x36f:0x36f]
---
Predecessors: [0x355]
Successors: []
---
0x36f INVALID
---
0x36f: INVALID 
---
Entry stack: [V11, S13, S12, S11, S10, S9, 0x239, V226, S6, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, V302]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, 0x239, V226, S6, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, V302]

================================

Block 0x370
[0x370:0x391]
---
Predecessors: [0x355]
Successors: [0x29b]
---
0x370 JUMPDEST
0x371 DIV
0x372 MUL
0x373 SWAP1
0x374 DUP2
0x375 ISZERO
0x376 MUL
0x377 SWAP1
0x378 PUSH1 0x40
0x37a MLOAD
0x37b PUSH1 0x0
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 DUP4
0x382 SUB
0x383 DUP2
0x384 DUP6
0x385 DUP9
0x386 DUP9
0x387 CALL
0x388 SWAP4
0x389 POP
0x38a POP
0x38b POP
0x38c POP
0x38d POP
0x38e PUSH2 0x29b
0x391 JUMP
---
0x370: JUMPDEST 
0x371: V306 = DIV V302 0x64
0x372: V307 = MUL V306 {0x0, 0x4, 0x6}
0x375: V308 = ISZERO V307
0x376: V309 = MUL V308 0x8fc
0x378: V310 = 0x40
0x37a: V311 = M[0x40]
0x37b: V312 = 0x0
0x37d: V313 = 0x40
0x37f: V314 = M[0x40]
0x382: V315 = SUB V311 V314
0x387: V316 = CALL V309 V288 V307 V314 V315 V314 0x0
0x38e: V317 = 0x29b
0x391: JUMP 0x29b
---
Entry stack: [V11, S13, S12, S11, S10, S9, 0x239, V226, S6, {0x0, 0x4, 0x6}, V288, 0x8fc, {0x0, 0x4, 0x6}, 0x64, V302]
Stack pops: 5
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, S9, 0x239, V226, S6, {0x0, 0x4, 0x6}]

================================

Block 0x392
[0x392:0x396]
---
Predecessors: [0x29b, 0x397, 0x3f7]
Successors: [0x138, 0x239]
---
0x392 JUMPDEST
0x393 POP
0x394 POP
0x395 POP
0x396 JUMP
---
0x392: JUMPDEST 
0x396: JUMP {0x138, 0x239}
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, {0x138, 0x239}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, S5, S4]

================================

Block 0x397
[0x397:0x3a4]
---
Predecessors: [0xea]
Successors: [0x392, 0x3a5]
---
0x397 JUMPDEST
0x398 DUP2
0x399 SLOAD
0x39a DUP2
0x39b DUP4
0x39c SSTORE
0x39d DUP2
0x39e DUP2
0x39f GT
0x3a0 ISZERO
0x3a1 PUSH2 0x392
0x3a4 JUMPI
---
0x397: JUMPDEST 
0x399: V318 = S[0x0]
0x39c: S[0x0] = V90
0x39f: V319 = GT V318 V90
0x3a0: V320 = ISZERO V319
0x3a1: V321 = 0x392
0x3a4: JUMPI 0x392 V320
---
Entry stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90]
Stack pops: 2
Stack additions: [S1, S0, V318]
Exit stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, V318]

================================

Block 0x3a5
[0x3a5:0x3c0]
---
Predecessors: [0x397]
Successors: [0x3c1]
---
0x3a5 PUSH1 0x0
0x3a7 DUP4
0x3a8 DUP2
0x3a9 MSTORE
0x3aa PUSH1 0x20
0x3ac SWAP1
0x3ad SHA3
0x3ae PUSH2 0x392
0x3b1 SWAP2
0x3b2 PUSH2 0x3f7
0x3b5 SWAP2
0x3b6 PUSH1 0x2
0x3b8 SWAP2
0x3b9 DUP3
0x3ba MUL
0x3bb DUP2
0x3bc ADD
0x3bd SWAP2
0x3be DUP6
0x3bf MUL
0x3c0 ADD
---
0x3a5: V322 = 0x0
0x3a9: M[0x0] = 0x0
0x3aa: V323 = 0x20
0x3ad: V324 = SHA3 0x0 0x20
0x3ae: V325 = 0x392
0x3b2: V326 = 0x3f7
0x3b6: V327 = 0x2
0x3ba: V328 = MUL 0x2 V318
0x3bc: V329 = ADD V324 V328
0x3bf: V330 = MUL V90 0x2
0x3c0: V331 = ADD V330 V324
---
Entry stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, V318]
Stack pops: 3
Stack additions: [S2, S1, 0x392, 0x3f7, V329, V331]
Exit stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, 0x3f7, V329, V331]

================================

Block 0x3c1
[0x3c1:0x3c9]
---
Predecessors: [0x3a5, 0x3ca]
Successors: [0x3ca, 0x3f3]
---
0x3c1 JUMPDEST
0x3c2 DUP1
0x3c3 DUP3
0x3c4 GT
0x3c5 ISZERO
0x3c6 PUSH2 0x3f3
0x3c9 JUMPI
---
0x3c1: JUMPDEST 
0x3c4: V332 = GT V329 S0
0x3c5: V333 = ISZERO V332
0x3c6: V334 = 0x3f3
0x3c9: JUMPI 0x3f3 V333
---
Entry stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, 0x3f7, V329, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, 0x3f7, V329, S0]

================================

Block 0x3ca
[0x3ca:0x3f2]
---
Predecessors: [0x3c1]
Successors: [0x3c1]
---
0x3ca DUP1
0x3cb SLOAD
0x3cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e1 NOT
0x3e2 AND
0x3e3 DUP2
0x3e4 SSTORE
0x3e5 PUSH1 0x0
0x3e7 PUSH1 0x1
0x3e9 DUP3
0x3ea ADD
0x3eb SSTORE
0x3ec PUSH1 0x2
0x3ee ADD
0x3ef PUSH2 0x3c1
0x3f2 JUMP
---
0x3cb: V335 = S[S0]
0x3cc: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V337 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V338 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V335
0x3e4: S[S0] = V338
0x3e5: V339 = 0x0
0x3e7: V340 = 0x1
0x3ea: V341 = ADD S0 0x1
0x3eb: S[V341] = 0x0
0x3ec: V342 = 0x2
0x3ee: V343 = ADD 0x2 S0
0x3ef: V344 = 0x3c1
0x3f2: JUMP 0x3c1
---
Entry stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, 0x3f7, V329, S0]
Stack pops: 1
Stack additions: [V343]
Exit stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, 0x3f7, V329, V343]

================================

Block 0x3f3
[0x3f3:0x3f6]
---
Predecessors: [0x3c1]
Successors: [0x3f7]
---
0x3f3 JUMPDEST
0x3f4 POP
0x3f5 SWAP1
0x3f6 JUMP
---
0x3f3: JUMPDEST 
0x3f6: JUMP 0x3f7
---
Entry stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, 0x3f7, V329, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, V329]

================================

Block 0x3f7
[0x3f7:0x3f9]
---
Predecessors: [0x3f3]
Successors: [0x392]
---
0x3f7 JUMPDEST
0x3f8 SWAP1
0x3f9 JUMP
---
0x3f7: JUMPDEST 
0x3f9: JUMP 0x392
---
Entry stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, 0x392, V329]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x71, 0x0, V87, 0x0, 0x0, V87, 0x138, 0x0, V90, V329]

================================

Block 0x3fa
[0x3fa:0x435]
---
Predecessors: []
Successors: []
---
0x3fa STOP
0x3fb LOG1
0x3fc PUSH6 0x627a7a723058
0x403 SHA3
0x404 PUSH2 0x5302
0x407 RETURNDATACOPY
0x408 SWAP14
0x409 PUSH20 0x56542af87fabb25cfb45cec3ba8688d9cf7aeed6
0x41e PUSH23 0x44d2eb60330029
---
0x3fa: STOP 
0x3fb: LOG S0 S1 S2
0x3fc: V345 = 0x627a7a723058
0x403: V346 = SHA3 0x627a7a723058 S3
0x404: V347 = 0x5302
0x407: RETURNDATACOPY 0x5302 V346 S4
0x409: V348 = 0x56542af87fabb25cfb45cec3ba8688d9cf7aeed6
0x41e: V349 = 0x44d2eb60330029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x44d2eb60330029, 0x56542af87fabb25cfb45cec3ba8688d9cf7aeed6, S19, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x3327d22f
Entry block: 0x73
Exit block: 0x8b
Body: 0x73, 0x7b, 0x7f, 0x8b, 0x23f, 0x24c, 0x24d

Function 1:
Public function signature: 0xaf713566
Entry block: 0xae
Exit block: 0xc3
Body: 0xae, 0xb6, 0xba, 0xc3, 0x275

Function 2:
Public function signature: 0xf2020275
Entry block: 0xd5
Exit block: 0xc3
Body: 0xc3, 0xd5, 0xdd, 0xe1, 0x27b

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x36f
Body: 0x56, 0x65, 0x69, 0x71, 0xea, 0x138, 0x148, 0x149, 0x193, 0x194, 0x1c4, 0x1cd, 0x1da, 0x1e6, 0x1f8, 0x1fd, 0x213, 0x21f, 0x22f, 0x239, 0x281, 0x297, 0x29b, 0x2a4, 0x2c0, 0x2c1, 0x2da, 0x2e1, 0x2f8, 0x2f9, 0x313, 0x316, 0x323, 0x324, 0x354, 0x355, 0x36f, 0x370, 0x392, 0x397, 0x3a5, 0x3c1, 0x3ca, 0x3f3, 0x3f7

