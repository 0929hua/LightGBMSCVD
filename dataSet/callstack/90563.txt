Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3d
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3d
0xa: JUMPI 0x3d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x1b0]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xbb4c4974
0x34 EQ
0x35 PUSH2 0x1b0
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xbb4c4974
0x34: V10 = EQ 0xbb4c4974 V8
0x35: V11 = 0x1b0
0x38: JUMPI 0x1b0 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x3c]
---
Predecessors: [0xb]
Successors: [0x3d]
---
0x39 PUSH2 0x3d
0x3c JUMP
---
0x39: V12 = 0x3d
0x3c: JUMP 0x3d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x3d
[0x3d:0x40]
---
Predecessors: [0x0, 0x39]
Successors: [0x41]
---
0x3d JUMPDEST
0x3e PUSH2 0x1ae
---
0x3d: JUMPDEST 
0x3e: V13 = 0x1ae
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1ae]
Exit stack: [V8, 0x1ae]

================================

Block 0x41
[0x41:0x72]
---
Predecessors: [0x3d]
Successors: [0x73, 0x78]
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 PUSH1 0x0
0x46 PUSH1 0x0
0x48 PUSH1 0x0
0x4a PUSH1 0x0
0x4c POP
0x4d SLOAD
0x4e NUMBER
0x4f SUB
0x50 SWAP3
0x51 POP
0x52 PUSH1 0x0
0x54 ADDRESS
0x55 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a AND
0x6b BALANCE
0x6c GT
0x6d DUP1
0x6e ISZERO
0x6f PUSH2 0x78
0x72 JUMPI
---
0x41: JUMPDEST 
0x42: V14 = 0x0
0x44: V15 = 0x0
0x46: V16 = 0x0
0x48: V17 = 0x0
0x4a: V18 = 0x0
0x4d: V19 = S[0x0]
0x4e: V20 = NUMBER
0x4f: V21 = SUB V20 V19
0x52: V22 = 0x0
0x54: V23 = ADDRESS
0x55: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x6b: V26 = BALANCE V25
0x6c: V27 = GT V26 0x0
0x6e: V28 = ISZERO V27
0x6f: V29 = 0x78
0x72: JUMPI 0x78 V28
---
Entry stack: [V8, 0x1ae]
Stack pops: 0
Stack additions: [V21, 0x0, 0x0, V27]
Exit stack: [V8, 0x1ae, V21, 0x0, 0x0, V27]

================================

Block 0x73
[0x73:0x77]
---
Predecessors: [0x41]
Successors: [0x78]
---
0x73 POP
0x74 PUSH1 0xc8
0x76 DUP4
0x77 GT
---
0x74: V30 = 0xc8
0x77: V31 = GT V21 0xc8
---
Entry stack: [V8, 0x1ae, V21, 0x0, 0x0, V27]
Stack pops: 4
Stack additions: [S3, S2, S1, V31]
Exit stack: [V8, 0x1ae, V21, 0x0, 0x0, V31]

================================

Block 0x78
[0x78:0x7d]
---
Predecessors: [0x41, 0x73]
Successors: [0x7e, 0x161]
---
0x78 JUMPDEST
0x79 ISZERO
0x7a PUSH2 0x161
0x7d JUMPI
---
0x78: JUMPDEST 
0x79: V32 = ISZERO S0
0x7a: V33 = 0x161
0x7d: JUMPI 0x161 V32
---
Entry stack: [V8, 0x1ae, V21, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x1ae, V21, 0x0, 0x0]

================================

Block 0x7e
[0x7e:0x160]
---
Predecessors: [0x78]
Successors: [0x161]
---
0x7e PUSH1 0x64
0x80 ADDRESS
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 BALANCE
0x98 DIV
0x99 SWAP2
0x9a POP
0x9b DUP2
0x9c ADDRESS
0x9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2 AND
0xb3 BALANCE
0xb4 SUB
0xb5 SWAP1
0xb6 POP
0xb7 PUSH1 0x2
0xb9 PUSH1 0x0
0xbb SWAP1
0xbc SLOAD
0xbd SWAP1
0xbe PUSH2 0x100
0xc1 EXP
0xc2 SWAP1
0xc3 DIV
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 PUSH1 0x0
0xf2 DUP4
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP1
0xf7 SWAP1
0xf8 POP
0xf9 PUSH1 0x0
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff DUP4
0x100 SUB
0x101 DUP2
0x102 DUP6
0x103 DUP9
0x104 DUP9
0x105 CALL
0x106 SWAP4
0x107 POP
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c PUSH1 0x1
0x10e PUSH1 0x0
0x110 SWAP1
0x111 SLOAD
0x112 SWAP1
0x113 PUSH2 0x100
0x116 EXP
0x117 SWAP1
0x118 DIV
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 PUSH1 0x0
0x147 DUP3
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c SWAP1
0x14d POP
0x14e PUSH1 0x0
0x150 PUSH1 0x40
0x152 MLOAD
0x153 DUP1
0x154 DUP4
0x155 SUB
0x156 DUP2
0x157 DUP6
0x158 DUP9
0x159 DUP9
0x15a CALL
0x15b SWAP4
0x15c POP
0x15d POP
0x15e POP
0x15f POP
0x160 POP
---
0x7e: V34 = 0x64
0x80: V35 = ADDRESS
0x81: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x97: V38 = BALANCE V37
0x98: V39 = DIV V38 0x64
0x9c: V40 = ADDRESS
0x9d: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xb3: V43 = BALANCE V42
0xb4: V44 = SUB V43 V39
0xb7: V45 = 0x2
0xb9: V46 = 0x0
0xbc: V47 = S[0x2]
0xbe: V48 = 0x100
0xc1: V49 = EXP 0x100 0x0
0xc3: V50 = DIV V47 0x1
0xc4: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xda: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xf0: V55 = 0x0
0xf3: V56 = 0x40
0xf5: V57 = M[0x40]
0xf9: V58 = 0x0
0xfb: V59 = 0x40
0xfd: V60 = M[0x40]
0x100: V61 = SUB V57 V60
0x105: V62 = CALL 0x0 V54 V39 V60 V61 V60 0x0
0x10c: V63 = 0x1
0x10e: V64 = 0x0
0x111: V65 = S[0x1]
0x113: V66 = 0x100
0x116: V67 = EXP 0x100 0x0
0x118: V68 = DIV V65 0x1
0x119: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x12f: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x145: V73 = 0x0
0x148: V74 = 0x40
0x14a: V75 = M[0x40]
0x14e: V76 = 0x0
0x150: V77 = 0x40
0x152: V78 = M[0x40]
0x155: V79 = SUB V75 V78
0x15a: V80 = CALL 0x0 V72 V44 V78 V79 V78 0x0
---
Entry stack: [V8, 0x1ae, V21, 0x0, 0x0]
Stack pops: 2
Stack additions: [V39, V44]
Exit stack: [V8, 0x1ae, V21, V39, V44]

================================

Block 0x161
[0x161:0x172]
---
Predecessors: [0x78, 0x7e]
Successors: [0x173, 0x1a8]
---
0x161 JUMPDEST
0x162 PUSH8 0x16345785d8a0000
0x16b CALLVALUE
0x16c LT
0x16d ISZERO
0x16e ISZERO
0x16f PUSH2 0x1a8
0x172 JUMPI
---
0x161: JUMPDEST 
0x162: V81 = 0x16345785d8a0000
0x16b: V82 = CALLVALUE
0x16c: V83 = LT V82 0x16345785d8a0000
0x16d: V84 = ISZERO V83
0x16e: V85 = ISZERO V84
0x16f: V86 = 0x1a8
0x172: JUMPI 0x1a8 V85
---
Entry stack: [V8, 0x1ae, V21, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1ae, V21, S1, S0]

================================

Block 0x173
[0x173:0x1a7]
---
Predecessors: [0x161]
Successors: [0x1a8]
---
0x173 CALLER
0x174 PUSH1 0x1
0x176 PUSH1 0x0
0x178 PUSH2 0x100
0x17b EXP
0x17c DUP2
0x17d SLOAD
0x17e DUP2
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 MUL
0x195 NOT
0x196 AND
0x197 SWAP1
0x198 DUP4
0x199 MUL
0x19a OR
0x19b SWAP1
0x19c SSTORE
0x19d POP
0x19e NUMBER
0x19f PUSH1 0x0
0x1a1 PUSH1 0x0
0x1a3 POP
0x1a4 DUP2
0x1a5 SWAP1
0x1a6 SSTORE
0x1a7 POP
---
0x173: V87 = CALLER
0x174: V88 = 0x1
0x176: V89 = 0x0
0x178: V90 = 0x100
0x17b: V91 = EXP 0x100 0x0
0x17d: V92 = S[0x1]
0x17f: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V94 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x195: V95 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x196: V96 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V92
0x199: V97 = MUL V87 0x1
0x19a: V98 = OR V97 V96
0x19c: S[0x1] = V98
0x19e: V99 = NUMBER
0x19f: V100 = 0x0
0x1a1: V101 = 0x0
0x1a6: S[0x0] = V99
---
Entry stack: [V8, 0x1ae, V21, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1ae, V21, S1, S0]

================================

Block 0x1a8
[0x1a8:0x1a8]
---
Predecessors: [0x161, 0x173]
Successors: [0x1a9]
---
0x1a8 JUMPDEST
---
0x1a8: JUMPDEST 
---
Entry stack: [V8, 0x1ae, V21, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1ae, V21, S1, S0]

================================

Block 0x1a9
[0x1a9:0x1ad]
---
Predecessors: [0x1a8]
Successors: [0x1ae]
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad JUMP
---
0x1a9: JUMPDEST 
0x1ad: JUMP 0x1ae
---
Entry stack: [V8, 0x1ae, V21, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V8]

================================

Block 0x1ae
[0x1ae:0x1af]
---
Predecessors: [0x1a9]
Successors: []
---
0x1ae JUMPDEST
0x1af STOP
---
0x1ae: JUMPDEST 
0x1af: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1b0
[0x1b0:0x1ba]
---
Predecessors: [0xb]
Successors: [0x1bd]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x1bb
0x1b4 PUSH1 0x4
0x1b6 POP
0x1b7 PUSH2 0x1bd
0x1ba JUMP
---
0x1b0: JUMPDEST 
0x1b1: V102 = 0x1bb
0x1b4: V103 = 0x4
0x1b7: V104 = 0x1bd
0x1ba: JUMP 0x1bd
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1bb]
Exit stack: [V8, 0x1bb]

================================

Block 0x1bb
[0x1bb:0x1bc]
---
Predecessors: [0x21e]
Successors: []
---
0x1bb JUMPDEST
0x1bc STOP
---
0x1bb: JUMPDEST 
0x1bc: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1bd
[0x1bd:0x21d]
---
Predecessors: [0x1b0]
Successors: [0x21e]
---
0x1bd JUMPDEST
0x1be CALLER
0x1bf PUSH1 0x2
0x1c1 PUSH1 0x0
0x1c3 PUSH2 0x100
0x1c6 EXP
0x1c7 DUP2
0x1c8 SLOAD
0x1c9 DUP2
0x1ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1df MUL
0x1e0 NOT
0x1e1 AND
0x1e2 SWAP1
0x1e3 DUP4
0x1e4 MUL
0x1e5 OR
0x1e6 SWAP1
0x1e7 SSTORE
0x1e8 POP
0x1e9 CALLER
0x1ea PUSH1 0x1
0x1ec PUSH1 0x0
0x1ee PUSH2 0x100
0x1f1 EXP
0x1f2 DUP2
0x1f3 SLOAD
0x1f4 DUP2
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a MUL
0x20b NOT
0x20c AND
0x20d SWAP1
0x20e DUP4
0x20f MUL
0x210 OR
0x211 SWAP1
0x212 SSTORE
0x213 POP
0x214 NUMBER
0x215 PUSH1 0x0
0x217 PUSH1 0x0
0x219 POP
0x21a DUP2
0x21b SWAP1
0x21c SSTORE
0x21d POP
---
0x1bd: JUMPDEST 
0x1be: V105 = CALLER
0x1bf: V106 = 0x2
0x1c1: V107 = 0x0
0x1c3: V108 = 0x100
0x1c6: V109 = EXP 0x100 0x0
0x1c8: V110 = S[0x2]
0x1ca: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V112 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1e0: V113 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V114 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V110
0x1e4: V115 = MUL V105 0x1
0x1e5: V116 = OR V115 V114
0x1e7: S[0x2] = V116
0x1e9: V117 = CALLER
0x1ea: V118 = 0x1
0x1ec: V119 = 0x0
0x1ee: V120 = 0x100
0x1f1: V121 = EXP 0x100 0x0
0x1f3: V122 = S[0x1]
0x1f5: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V124 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x20b: V125 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V126 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V122
0x20f: V127 = MUL V117 0x1
0x210: V128 = OR V127 V126
0x212: S[0x1] = V128
0x214: V129 = NUMBER
0x215: V130 = 0x0
0x217: V131 = 0x0
0x21c: S[0x0] = V129
---
Entry stack: [V8, 0x1bb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1bb]

================================

Block 0x21e
[0x21e:0x21f]
---
Predecessors: [0x1bd]
Successors: [0x1bb]
---
0x21e JUMPDEST
0x21f JUMP
---
0x21e: JUMPDEST 
0x21f: JUMP 0x1bb
---
Entry stack: [V8, 0x1bb]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0xbb4c4974
Entry block: 0x1b0
Exit block: 0x1bb
Body: 0x1b0, 0x1bb, 0x1bd, 0x21e

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x1ae
Body: 0x39, 0x3d, 0x41, 0x73, 0x78, 0x7e, 0x161, 0x173, 0x1a8, 0x1a9, 0x1ae

