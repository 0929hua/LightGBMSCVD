Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x55]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x55
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x55
0xa: JUMPI 0x55 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x168]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x38af3eed
0x3a EQ
0x3b PUSH2 0x168
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x38af3eed
0x3a: V12 = EQ 0x38af3eed V10
0x3b: V13 = 0x168
0x3e: JUMPI 0x168 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x1bd]
---
0x3f DUP1
0x40 PUSH4 0x6d4ce63c
0x45 EQ
0x46 PUSH2 0x1bd
0x49 JUMPI
---
0x40: V14 = 0x6d4ce63c
0x45: V15 = EQ 0x6d4ce63c V10
0x46: V16 = 0x1bd
0x49: JUMPI 0x1bd V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1d2]
---
0x4a DUP1
0x4b PUSH4 0x7b3e5e7b
0x50 EQ
0x51 PUSH2 0x1d2
0x54 JUMPI
---
0x4b: V17 = 0x7b3e5e7b
0x50: V18 = EQ 0x7b3e5e7b V10
0x51: V19 = 0x1d2
0x54: JUMPI 0x1d2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5b]
---
Predecessors: [0x0, 0x4a]
Successors: [0x5c, 0x60]
---
0x55 JUMPDEST
0x56 CALLVALUE
0x57 ISZERO
0x58 PUSH2 0x60
0x5b JUMPI
---
0x55: JUMPDEST 
0x56: V20 = CALLVALUE
0x57: V21 = ISZERO V20
0x58: V22 = 0x60
0x5b: JUMPI 0x60 V21
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: [0x55]
Successors: []
---
0x5c PUSH1 0x0
0x5e DUP1
0x5f REVERT
---
0x5c: V23 = 0x0
0x5f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x55]
Successors: [0x64]
---
0x60 JUMPDEST
0x61 PUSH2 0x166
---
0x60: JUMPDEST 
0x61: V24 = 0x166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V10, 0x166]

================================

Block 0x64
[0x64:0x141]
---
Predecessors: [0x60]
Successors: [0x142, 0x146]
---
0x64 JUMPDEST
0x65 PUSH1 0x0
0x67 CALLVALUE
0x68 SWAP1
0x69 POP
0x6a DUP1
0x6b PUSH1 0x1
0x6d PUSH1 0x0
0x6f DUP3
0x70 DUP3
0x71 SLOAD
0x72 ADD
0x73 SWAP3
0x74 POP
0x75 POP
0x76 DUP2
0x77 SWAP1
0x78 SSTORE
0x79 POP
0x7a PUSH1 0x2
0x7c PUSH1 0x0
0x7e SWAP1
0x7f SLOAD
0x80 SWAP1
0x81 PUSH2 0x100
0x84 EXP
0x85 SWAP1
0x86 DIV
0x87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c AND
0x9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2 AND
0xb3 PUSH4 0xa9059cbb
0xb8 CALLER
0xb9 DUP4
0xba PUSH1 0x0
0xbc PUSH1 0x40
0xbe MLOAD
0xbf PUSH1 0x20
0xc1 ADD
0xc2 MSTORE
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 DUP4
0xc7 PUSH4 0xffffffff
0xcc AND
0xcd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xeb MUL
0xec DUP2
0xed MSTORE
0xee PUSH1 0x4
0xf0 ADD
0xf1 DUP1
0xf2 DUP4
0xf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108 AND
0x109 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e AND
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 DUP3
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP3
0x12b POP
0x12c POP
0x12d POP
0x12e PUSH1 0x20
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 DUP4
0x135 SUB
0x136 DUP2
0x137 PUSH1 0x0
0x139 DUP8
0x13a DUP1
0x13b EXTCODESIZE
0x13c ISZERO
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x64: JUMPDEST 
0x65: V25 = 0x0
0x67: V26 = CALLVALUE
0x6b: V27 = 0x1
0x6d: V28 = 0x0
0x71: V29 = S[0x1]
0x72: V30 = ADD V29 V26
0x78: S[0x1] = V30
0x7a: V31 = 0x2
0x7c: V32 = 0x0
0x7f: V33 = S[0x2]
0x81: V34 = 0x100
0x84: V35 = EXP 0x100 0x0
0x86: V36 = DIV V33 0x1
0x87: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x9d: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xb3: V41 = 0xa9059cbb
0xb8: V42 = CALLER
0xba: V43 = 0x0
0xbc: V44 = 0x40
0xbe: V45 = M[0x40]
0xbf: V46 = 0x20
0xc1: V47 = ADD 0x20 V45
0xc2: M[V47] = 0x0
0xc3: V48 = 0x40
0xc5: V49 = M[0x40]
0xc7: V50 = 0xffffffff
0xcc: V51 = AND 0xffffffff 0xa9059cbb
0xcd: V52 = 0x100000000000000000000000000000000000000000000000000000000
0xeb: V53 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xed: M[V49] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xee: V54 = 0x4
0xf0: V55 = ADD 0x4 V49
0xf3: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x108: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x109: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x120: M[V55] = V59
0x121: V60 = 0x20
0x123: V61 = ADD 0x20 V55
0x126: M[V61] = V26
0x127: V62 = 0x20
0x129: V63 = ADD 0x20 V61
0x12e: V64 = 0x20
0x130: V65 = 0x40
0x132: V66 = M[0x40]
0x135: V67 = SUB V63 V66
0x137: V68 = 0x0
0x13b: V69 = EXTCODESIZE V40
0x13c: V70 = ISZERO V69
0x13d: V71 = ISZERO V70
0x13e: V72 = 0x146
0x141: JUMPI 0x146 V71
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: [V26, V40, 0xa9059cbb, V63, 0x20, V66, V67, V66, 0x0, V40]
Exit stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63, 0x20, V66, V67, V66, 0x0, V40]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x64]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V73 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63, 0x20, V66, V67, V66, 0x0, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63, 0x20, V66, V67, V66, 0x0, V40]

================================

Block 0x146
[0x146:0x152]
---
Predecessors: [0x64]
Successors: [0x153, 0x157]
---
0x146 JUMPDEST
0x147 PUSH2 0x2c6
0x14a GAS
0x14b SUB
0x14c CALL
0x14d ISZERO
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x146: JUMPDEST 
0x147: V74 = 0x2c6
0x14a: V75 = GAS
0x14b: V76 = SUB V75 0x2c6
0x14c: V77 = CALL V76 V40 0x0 V66 V67 V66 0x20
0x14d: V78 = ISZERO V77
0x14e: V79 = ISZERO V78
0x14f: V80 = 0x157
0x152: JUMPI 0x157 V79
---
Entry stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63, 0x20, V66, V67, V66, 0x0, V40]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x146]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V81 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63]

================================

Block 0x157
[0x157:0x162]
---
Predecessors: [0x146]
Successors: [0x163]
---
0x157 JUMPDEST
0x158 POP
0x159 POP
0x15a POP
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f MLOAD
0x160 SWAP1
0x161 POP
0x162 POP
---
0x157: JUMPDEST 
0x15b: V82 = 0x40
0x15d: V83 = M[0x40]
0x15f: V84 = M[V83]
---
Entry stack: [V10, 0x166, V26, V40, 0xa9059cbb, V63]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x166, V26]

================================

Block 0x163
[0x163:0x165]
---
Predecessors: [0x157]
Successors: [0x166]
---
0x163 JUMPDEST
0x164 POP
0x165 JUMP
---
0x163: JUMPDEST 
0x165: JUMP 0x166
---
Entry stack: [V10, 0x166, V26]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x166
[0x166:0x167]
---
Predecessors: [0x163]
Successors: []
---
0x166 JUMPDEST
0x167 STOP
---
0x166: JUMPDEST 
0x167: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0xb]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V85 = CALLVALUE
0x16a: V86 = ISZERO V85
0x16b: V87 = 0x173
0x16e: JUMPI 0x173 V86
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V88 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x168]
Successors: [0x1fb]
---
0x173 JUMPDEST
0x174 PUSH2 0x17b
0x177 PUSH2 0x1fb
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V89 = 0x17b
0x177: V90 = 0x1fb
0x17a: JUMP 0x1fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17b]
Exit stack: [V10, 0x17b]

================================

Block 0x17b
[0x17b:0x1bc]
---
Predecessors: [0x1fb]
Successors: []
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP3
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
0x1b4 POP
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 SWAP2
0x1ba SUB
0x1bb SWAP1
0x1bc RETURN
---
0x17b: JUMPDEST 
0x17c: V91 = 0x40
0x17e: V92 = M[0x40]
0x181: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x197: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1ae: M[V92] = V96
0x1af: V97 = 0x20
0x1b1: V98 = ADD 0x20 V92
0x1b5: V99 = 0x40
0x1b7: V100 = M[0x40]
0x1ba: V101 = SUB V98 V100
0x1bc: RETURN V100 V101
---
Entry stack: [V10, 0x17b, V127]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17b]

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x3f]
Successors: [0x1c4, 0x1c8]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V102 = CALLVALUE
0x1bf: V103 = ISZERO V102
0x1c0: V104 = 0x1c8
0x1c3: JUMPI 0x1c8 V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V105 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c8
[0x1c8:0x1cf]
---
Predecessors: [0x1bd]
Successors: [0x220]
---
0x1c8 JUMPDEST
0x1c9 PUSH2 0x1d0
0x1cc PUSH2 0x220
0x1cf JUMP
---
0x1c8: JUMPDEST 
0x1c9: V106 = 0x1d0
0x1cc: V107 = 0x220
0x1cf: JUMP 0x220
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d0]
Exit stack: [V10, 0x1d0]

================================

Block 0x1d0
[0x1d0:0x1d1]
---
Predecessors: [0x297]
Successors: []
---
0x1d0 JUMPDEST
0x1d1 STOP
---
0x1d0: JUMPDEST 
0x1d1: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d2
[0x1d2:0x1d8]
---
Predecessors: [0x4a]
Successors: [0x1d9, 0x1dd]
---
0x1d2 JUMPDEST
0x1d3 CALLVALUE
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V108 = CALLVALUE
0x1d4: V109 = ISZERO V108
0x1d5: V110 = 0x1dd
0x1d8: JUMPI 0x1dd V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1d2]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V111 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dd
[0x1dd:0x1e4]
---
Predecessors: [0x1d2]
Successors: [0x299]
---
0x1dd JUMPDEST
0x1de PUSH2 0x1e5
0x1e1 PUSH2 0x299
0x1e4 JUMP
---
0x1dd: JUMPDEST 
0x1de: V112 = 0x1e5
0x1e1: V113 = 0x299
0x1e4: JUMP 0x299
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e5]
Exit stack: [V10, 0x1e5]

================================

Block 0x1e5
[0x1e5:0x1fa]
---
Predecessors: [0x299]
Successors: []
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 DUP1
0x1ea DUP3
0x1eb DUP2
0x1ec MSTORE
0x1ed PUSH1 0x20
0x1ef ADD
0x1f0 SWAP2
0x1f1 POP
0x1f2 POP
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 DUP1
0x1f7 SWAP2
0x1f8 SUB
0x1f9 SWAP1
0x1fa RETURN
---
0x1e5: JUMPDEST 
0x1e6: V114 = 0x40
0x1e8: V115 = M[0x40]
0x1ec: M[V115] = V160
0x1ed: V116 = 0x20
0x1ef: V117 = ADD 0x20 V115
0x1f3: V118 = 0x40
0x1f5: V119 = M[0x40]
0x1f8: V120 = SUB V117 V119
0x1fa: RETURN V119 V120
---
Entry stack: [V10, 0x1e5, V160]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e5]

================================

Block 0x1fb
[0x1fb:0x21f]
---
Predecessors: [0x173]
Successors: [0x17b]
---
0x1fb JUMPDEST
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff SWAP1
0x200 SLOAD
0x201 SWAP1
0x202 PUSH2 0x100
0x205 EXP
0x206 SWAP1
0x207 DIV
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e DUP2
0x21f JUMP
---
0x1fb: JUMPDEST 
0x1fc: V121 = 0x0
0x200: V122 = S[0x0]
0x202: V123 = 0x100
0x205: V124 = EXP 0x100 0x0
0x207: V125 = DIV V122 0x1
0x208: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x21f: JUMP 0x17b
---
Entry stack: [V10, 0x17b]
Stack pops: 1
Stack additions: [S0, V127]
Exit stack: [V10, 0x17b, V127]

================================

Block 0x220
[0x220:0x22b]
---
Predecessors: [0x1c8]
Successors: [0x22c, 0x291]
---
0x220 JUMPDEST
0x221 PUSH1 0x0
0x223 PUSH1 0x1
0x225 SLOAD
0x226 GT
0x227 ISZERO
0x228 PUSH2 0x291
0x22b JUMPI
---
0x220: JUMPDEST 
0x221: V128 = 0x0
0x223: V129 = 0x1
0x225: V130 = S[0x1]
0x226: V131 = GT V130 0x0
0x227: V132 = ISZERO V131
0x228: V133 = 0x291
0x22b: JUMPI 0x291 V132
---
Entry stack: [V10, 0x1d0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d0]

================================

Block 0x22c
[0x22c:0x290]
---
Predecessors: [0x220]
Successors: [0x296]
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f SWAP1
0x230 SLOAD
0x231 SWAP1
0x232 PUSH2 0x100
0x235 EXP
0x236 SWAP1
0x237 DIV
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x263 AND
0x264 PUSH2 0x8fc
0x267 PUSH1 0x1
0x269 SLOAD
0x26a SWAP1
0x26b DUP2
0x26c ISZERO
0x26d MUL
0x26e SWAP1
0x26f PUSH1 0x40
0x271 MLOAD
0x272 PUSH1 0x0
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 DUP4
0x279 SUB
0x27a DUP2
0x27b DUP6
0x27c DUP9
0x27d DUP9
0x27e CALL
0x27f SWAP4
0x280 POP
0x281 POP
0x282 POP
0x283 POP
0x284 POP
0x285 PUSH1 0x0
0x287 PUSH1 0x1
0x289 DUP2
0x28a SWAP1
0x28b SSTORE
0x28c POP
0x28d PUSH2 0x296
0x290 JUMP
---
0x22c: V134 = 0x0
0x230: V135 = S[0x0]
0x232: V136 = 0x100
0x235: V137 = EXP 0x100 0x0
0x237: V138 = DIV V135 0x1
0x238: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x24e: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x263: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x264: V143 = 0x8fc
0x267: V144 = 0x1
0x269: V145 = S[0x1]
0x26c: V146 = ISZERO V145
0x26d: V147 = MUL V146 0x8fc
0x26f: V148 = 0x40
0x271: V149 = M[0x40]
0x272: V150 = 0x0
0x274: V151 = 0x40
0x276: V152 = M[0x40]
0x279: V153 = SUB V149 V152
0x27e: V154 = CALL V147 V142 V145 V152 V153 V152 0x0
0x285: V155 = 0x0
0x287: V156 = 0x1
0x28b: S[0x1] = 0x0
0x28d: V157 = 0x296
0x290: JUMP 0x296
---
Entry stack: [V10, 0x1d0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d0]

================================

Block 0x291
[0x291:0x295]
---
Predecessors: [0x220]
Successors: []
---
0x291 JUMPDEST
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x291: JUMPDEST 
0x292: V158 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1d0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d0]

================================

Block 0x296
[0x296:0x296]
---
Predecessors: [0x22c]
Successors: [0x297]
---
0x296 JUMPDEST
---
0x296: JUMPDEST 
---
Entry stack: [V10, 0x1d0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d0]

================================

Block 0x297
[0x297:0x298]
---
Predecessors: [0x296]
Successors: [0x1d0]
---
0x297 JUMPDEST
0x298 JUMP
---
0x297: JUMPDEST 
0x298: JUMP 0x1d0
---
Entry stack: [V10, 0x1d0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x299
[0x299:0x29e]
---
Predecessors: [0x1dd]
Successors: [0x1e5]
---
0x299 JUMPDEST
0x29a PUSH1 0x1
0x29c SLOAD
0x29d DUP2
0x29e JUMP
---
0x299: JUMPDEST 
0x29a: V159 = 0x1
0x29c: V160 = S[0x1]
0x29e: JUMP 0x1e5
---
Entry stack: [V10, 0x1e5]
Stack pops: 1
Stack additions: [S0, V160]
Exit stack: [V10, 0x1e5, V160]

================================

Block 0x29f
[0x29f:0x2ca]
---
Predecessors: []
Successors: []
---
0x29f STOP
0x2a0 LOG1
0x2a1 PUSH6 0x627a7a723058
0x2a8 SHA3
0x2a9 NUMBER
0x2aa SWAP16
0x2ab MISSING 0xe7
0x2ac MSTORE
0x2ad PUSH8 0x53fd5aca9e3bc0aa
0x2b6 PUSH19 0x39aac8f26fe658e19e02c81501789551f40700
0x2ca MISSING 0x29
---
0x29f: STOP 
0x2a0: LOG S0 S1 S2
0x2a1: V161 = 0x627a7a723058
0x2a8: V162 = SHA3 0x627a7a723058 S3
0x2a9: V163 = NUMBER
0x2ab: MISSING 0xe7
0x2ac: M[S0] = S1
0x2ad: V164 = 0x53fd5aca9e3bc0aa
0x2b6: V165 = 0x39aac8f26fe658e19e02c81501789551f40700
0x2ca: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, V162, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V163, 0x39aac8f26fe658e19e02c81501789551f40700, 0x53fd5aca9e3bc0aa]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0x168
Exit block: 0x17b
Body: 0x168, 0x16f, 0x173, 0x17b, 0x1fb

Function 1:
Public function signature: 0x6d4ce63c
Entry block: 0x1bd
Exit block: 0x1d0
Body: 0x1bd, 0x1c4, 0x1c8, 0x1d0, 0x220, 0x22c, 0x291, 0x296, 0x297

Function 2:
Public function signature: 0x7b3e5e7b
Entry block: 0x1d2
Exit block: 0x1e5
Body: 0x1d2, 0x1d9, 0x1dd, 0x1e5, 0x299

Function 3:
Public fallback function
Entry block: 0x55
Exit block: 0x166
Body: 0x55, 0x5c, 0x60, 0x64, 0x142, 0x146, 0x153, 0x157, 0x163, 0x166

