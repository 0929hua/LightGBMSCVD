Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x9a]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x2654e624
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x9a
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x2654e624
0x3b: V13 = EQ V11 0x2654e624
0x3c: V14 = 0x9a
0x3f: JUMPI 0x9a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xad]
---
0x40 DUP1
0x41 PUSH4 0x37db12c4
0x46 EQ
0x47 PUSH2 0xad
0x4a JUMPI
---
0x41: V15 = 0x37db12c4
0x46: V16 = EQ 0x37db12c4 V11
0x47: V17 = 0xad
0x4a: JUMPI 0xad V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xc0]
---
0x4b DUP1
0x4c PUSH4 0x5c975abb
0x51 EQ
0x52 PUSH2 0xc0
0x55 JUMPI
---
0x4c: V18 = 0x5c975abb
0x51: V19 = EQ 0x5c975abb V11
0x52: V20 = 0xc0
0x55: JUMPI 0xc0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xe7]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xe7
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xe7
0x60: JUMPI 0xe7 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x116]
---
0x61 DUP1
0x62 PUSH4 0xacf372ef
0x67 EQ
0x68 PUSH2 0x116
0x6b JUMPI
---
0x62: V24 = 0xacf372ef
0x67: V25 = EQ 0xacf372ef V11
0x68: V26 = 0x116
0x6b: JUMPI 0x116 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x135]
---
0x6c DUP1
0x6d PUSH4 0xcde596b2
0x72 EQ
0x73 PUSH2 0x135
0x76 JUMPI
---
0x6d: V27 = 0xcde596b2
0x72: V28 = EQ 0xcde596b2 V11
0x73: V29 = 0x135
0x76: JUMPI 0x135 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x149]
---
0x77 DUP1
0x78 PUSH4 0xf2fde38b
0x7d EQ
0x7e PUSH2 0x149
0x81 JUMPI
---
0x78: V30 = 0xf2fde38b
0x7d: V31 = EQ 0xf2fde38b V11
0x7e: V32 = 0x149
0x81: JUMPI 0x149 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x168]
---
0x82 DUP1
0x83 PUSH4 0xfc0d0117
0x88 EQ
0x89 PUSH2 0x168
0x8c JUMPI
---
0x83: V33 = 0xfc0d0117
0x88: V34 = EQ 0xfc0d0117 V11
0x89: V35 = 0x168
0x8c: JUMPI 0x168 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0x0, 0x82]
Successors: [0x94, 0x98]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8e: V36 = CALLVALUE
0x8f: V37 = ISZERO V36
0x90: V38 = 0x98
0x93: JUMPI 0x98 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8d]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V39 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: [0x8d, 0x196, 0x1d1, 0x253, 0x33d, 0x3cd]
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0xd]
Successors: [0xa1, 0xa5]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V40 = CALLVALUE
0x9c: V41 = ISZERO V40
0x9d: V42 = 0xa5
0xa0: JUMPI 0xa5 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V43 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0x9a]
Successors: [0x17b]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x98
0xa9 PUSH2 0x17b
0xac JUMP
---
0xa5: JUMPDEST 
0xa6: V44 = 0x98
0xa9: V45 = 0x17b
0xac: JUMP 0x17b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V11, 0x98]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0x40]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V46 = CALLVALUE
0xaf: V47 = ISZERO V46
0xb0: V48 = 0xb8
0xb3: JUMPI 0xb8 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V49 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbf]
---
Predecessors: [0xad]
Successors: [0x1b6]
---
0xb8 JUMPDEST
0xb9 PUSH2 0x98
0xbc PUSH2 0x1b6
0xbf JUMP
---
0xb8: JUMPDEST 
0xb9: V50 = 0x98
0xbc: V51 = 0x1b6
0xbf: JUMP 0x1b6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V11, 0x98]

================================

Block 0xc0
[0xc0:0xc6]
---
Predecessors: [0x4b]
Successors: [0xc7, 0xcb]
---
0xc0 JUMPDEST
0xc1 CALLVALUE
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xc0: JUMPDEST 
0xc1: V52 = CALLVALUE
0xc2: V53 = ISZERO V52
0xc3: V54 = 0xcb
0xc6: JUMPI 0xcb V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xc0]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V55 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0xc0]
Successors: [0x208]
---
0xcb JUMPDEST
0xcc PUSH2 0xd3
0xcf PUSH2 0x208
0xd2 JUMP
---
0xcb: JUMPDEST 
0xcc: V56 = 0xd3
0xcf: V57 = 0x208
0xd2: JUMP 0x208
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V11, 0xd3]

================================

Block 0xd3
[0xd3:0xe6]
---
Predecessors: [0x208]
Successors: []
---
0xd3 JUMPDEST
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 SWAP1
0xd8 ISZERO
0xd9 ISZERO
0xda DUP2
0xdb MSTORE
0xdc PUSH1 0x20
0xde ADD
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 DUP1
0xe3 SWAP2
0xe4 SUB
0xe5 SWAP1
0xe6 RETURN
---
0xd3: JUMPDEST 
0xd4: V58 = 0x40
0xd6: V59 = M[0x40]
0xd8: V60 = ISZERO V173
0xd9: V61 = ISZERO V60
0xdb: M[V59] = V61
0xdc: V62 = 0x20
0xde: V63 = ADD 0x20 V59
0xdf: V64 = 0x40
0xe1: V65 = M[0x40]
0xe4: V66 = SUB V63 V65
0xe6: RETURN V65 V66
---
Entry stack: [V11, 0xd3, V173]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd3]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x56]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V67 = CALLVALUE
0xe9: V68 = ISZERO V67
0xea: V69 = 0xf2
0xed: JUMPI 0xf2 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V70 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xe7]
Successors: [0x229]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x229
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V71 = 0xfa
0xf6: V72 = 0x229
0xf9: JUMP 0x229
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V11, 0xfa]

================================

Block 0xfa
[0xfa:0x115]
---
Predecessors: [0x229, 0x438]
Successors: []
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd MLOAD
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 SWAP2
0x108 AND
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 SWAP2
0x113 SUB
0x114 SWAP1
0x115 RETURN
---
0xfa: JUMPDEST 
0xfb: V73 = 0x40
0xfd: V74 = M[0x40]
0xfe: V75 = 0x1
0x100: V76 = 0xa0
0x102: V77 = 0x2
0x104: V78 = EXP 0x2 0xa0
0x105: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V80 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10a: M[V74] = V80
0x10b: V81 = 0x20
0x10d: V82 = ADD 0x20 V74
0x10e: V83 = 0x40
0x110: V84 = M[0x40]
0x113: V85 = SUB V82 V84
0x115: RETURN V84 V85
---
Entry stack: [V11, 0xfa, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfa]

================================

Block 0x116
[0x116:0x11c]
---
Predecessors: [0x61]
Successors: [0x11d, 0x121]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 ISZERO
0x119 PUSH2 0x121
0x11c JUMPI
---
0x116: JUMPDEST 
0x117: V86 = CALLVALUE
0x118: V87 = ISZERO V86
0x119: V88 = 0x121
0x11c: JUMPI 0x121 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11d
[0x11d:0x120]
---
Predecessors: [0x116]
Successors: []
---
0x11d PUSH1 0x0
0x11f DUP1
0x120 REVERT
---
0x11d: V89 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x121
[0x121:0x134]
---
Predecessors: [0x116]
Successors: [0x238]
---
0x121 JUMPDEST
0x122 PUSH2 0x98
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d PUSH1 0x4
0x12f CALLDATALOAD
0x130 AND
0x131 PUSH2 0x238
0x134 JUMP
---
0x121: JUMPDEST 
0x122: V90 = 0x98
0x125: V91 = 0x1
0x127: V92 = 0xa0
0x129: V93 = 0x2
0x12b: V94 = EXP 0x2 0xa0
0x12c: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d: V96 = 0x4
0x12f: V97 = CALLDATALOAD 0x4
0x130: V98 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x131: V99 = 0x238
0x134: JUMP 0x238
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98, V98]
Exit stack: [V11, 0x98, V98]

================================

Block 0x135
[0x135:0x148]
---
Predecessors: [0x6c]
Successors: [0x282]
---
0x135 JUMPDEST
0x136 PUSH2 0x98
0x139 PUSH1 0x1
0x13b PUSH1 0xa0
0x13d PUSH1 0x2
0x13f EXP
0x140 SUB
0x141 PUSH1 0x4
0x143 CALLDATALOAD
0x144 AND
0x145 PUSH2 0x282
0x148 JUMP
---
0x135: JUMPDEST 
0x136: V100 = 0x98
0x139: V101 = 0x1
0x13b: V102 = 0xa0
0x13d: V103 = 0x2
0x13f: V104 = EXP 0x2 0xa0
0x140: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x141: V106 = 0x4
0x143: V107 = CALLDATALOAD 0x4
0x144: V108 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x145: V109 = 0x282
0x148: JUMP 0x282
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98, V108]
Exit stack: [V11, 0x98, V108]

================================

Block 0x149
[0x149:0x14f]
---
Predecessors: [0x77]
Successors: [0x150, 0x154]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x149: JUMPDEST 
0x14a: V110 = CALLVALUE
0x14b: V111 = ISZERO V110
0x14c: V112 = 0x154
0x14f: JUMPI 0x154 V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x149]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V113 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x149]
Successors: [0x39d]
---
0x154 JUMPDEST
0x155 PUSH2 0x98
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 PUSH1 0x4
0x162 CALLDATALOAD
0x163 AND
0x164 PUSH2 0x39d
0x167 JUMP
---
0x154: JUMPDEST 
0x155: V114 = 0x98
0x158: V115 = 0x1
0x15a: V116 = 0xa0
0x15c: V117 = 0x2
0x15e: V118 = EXP 0x2 0xa0
0x15f: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V120 = 0x4
0x162: V121 = CALLDATALOAD 0x4
0x163: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x164: V123 = 0x39d
0x167: JUMP 0x39d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98, V122]
Exit stack: [V11, 0x98, V122]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x82]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V124 = CALLVALUE
0x16a: V125 = ISZERO V124
0x16b: V126 = 0x173
0x16e: JUMPI 0x173 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V127 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x168]
Successors: [0x438]
---
0x173 JUMPDEST
0x174 PUSH2 0xfa
0x177 PUSH2 0x438
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V128 = 0xfa
0x177: V129 = 0x438
0x17a: JUMP 0x438
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V11, 0xfa]

================================

Block 0x17b
[0x17b:0x191]
---
Predecessors: [0xa5]
Successors: [0x192, 0x196]
---
0x17b JUMPDEST
0x17c PUSH1 0x0
0x17e SLOAD
0x17f CALLER
0x180 PUSH1 0x1
0x182 PUSH1 0xa0
0x184 PUSH1 0x2
0x186 EXP
0x187 SUB
0x188 SWAP1
0x189 DUP2
0x18a AND
0x18b SWAP2
0x18c AND
0x18d EQ
0x18e PUSH2 0x196
0x191 JUMPI
---
0x17b: JUMPDEST 
0x17c: V130 = 0x0
0x17e: V131 = S[0x0]
0x17f: V132 = CALLER
0x180: V133 = 0x1
0x182: V134 = 0xa0
0x184: V135 = 0x2
0x186: V136 = EXP 0x2 0xa0
0x187: V137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x18c: V139 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V140 = EQ V139 V138
0x18e: V141 = 0x196
0x191: JUMPI 0x196 V140
---
Entry stack: [V11, 0x98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x17b]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V142 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98]

================================

Block 0x196
[0x196:0x1b5]
---
Predecessors: [0x17b]
Successors: [0x98]
---
0x196 JUMPDEST
0x197 PUSH1 0x1
0x199 DUP1
0x19a SLOAD
0x19b PUSH21 0xff0000000000000000000000000000000000000000
0x1b1 NOT
0x1b2 AND
0x1b3 SWAP1
0x1b4 SSTORE
0x1b5 JUMP
---
0x196: JUMPDEST 
0x197: V143 = 0x1
0x19a: V144 = S[0x1]
0x19b: V145 = 0xff0000000000000000000000000000000000000000
0x1b1: V146 = NOT 0xff0000000000000000000000000000000000000000
0x1b2: V147 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V144
0x1b4: S[0x1] = V147
0x1b5: JUMP 0x98
---
Entry stack: [V11, 0x98]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b6
[0x1b6:0x1cc]
---
Predecessors: [0xb8]
Successors: [0x1cd, 0x1d1]
---
0x1b6 JUMPDEST
0x1b7 PUSH1 0x0
0x1b9 SLOAD
0x1ba CALLER
0x1bb PUSH1 0x1
0x1bd PUSH1 0xa0
0x1bf PUSH1 0x2
0x1c1 EXP
0x1c2 SUB
0x1c3 SWAP1
0x1c4 DUP2
0x1c5 AND
0x1c6 SWAP2
0x1c7 AND
0x1c8 EQ
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V148 = 0x0
0x1b9: V149 = S[0x0]
0x1ba: V150 = CALLER
0x1bb: V151 = 0x1
0x1bd: V152 = 0xa0
0x1bf: V153 = 0x2
0x1c1: V154 = EXP 0x2 0xa0
0x1c2: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x1c7: V157 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V158 = EQ V157 V156
0x1c9: V159 = 0x1d1
0x1cc: JUMPI 0x1d1 V158
---
Entry stack: [V11, 0x98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1b6]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V160 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98]

================================

Block 0x1d1
[0x1d1:0x207]
---
Predecessors: [0x1b6]
Successors: [0x98]
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x1
0x1d4 DUP1
0x1d5 SLOAD
0x1d6 PUSH21 0xff0000000000000000000000000000000000000000
0x1ec NOT
0x1ed AND
0x1ee PUSH21 0x10000000000000000000000000000000000000000
0x204 OR
0x205 SWAP1
0x206 SSTORE
0x207 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V161 = 0x1
0x1d5: V162 = S[0x1]
0x1d6: V163 = 0xff0000000000000000000000000000000000000000
0x1ec: V164 = NOT 0xff0000000000000000000000000000000000000000
0x1ed: V165 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V162
0x1ee: V166 = 0x10000000000000000000000000000000000000000
0x204: V167 = OR 0x10000000000000000000000000000000000000000 V165
0x206: S[0x1] = V167
0x207: JUMP 0x98
---
Entry stack: [V11, 0x98]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x208
[0x208:0x228]
---
Predecessors: [0xcb]
Successors: [0xd3]
---
0x208 JUMPDEST
0x209 PUSH1 0x1
0x20b SLOAD
0x20c PUSH21 0x10000000000000000000000000000000000000000
0x222 SWAP1
0x223 DIV
0x224 PUSH1 0xff
0x226 AND
0x227 DUP2
0x228 JUMP
---
0x208: JUMPDEST 
0x209: V168 = 0x1
0x20b: V169 = S[0x1]
0x20c: V170 = 0x10000000000000000000000000000000000000000
0x223: V171 = DIV V169 0x10000000000000000000000000000000000000000
0x224: V172 = 0xff
0x226: V173 = AND 0xff V171
0x228: JUMP 0xd3
---
Entry stack: [V11, 0xd3]
Stack pops: 1
Stack additions: [S0, V173]
Exit stack: [V11, 0xd3, V173]

================================

Block 0x229
[0x229:0x237]
---
Predecessors: [0xf2]
Successors: [0xfa]
---
0x229 JUMPDEST
0x22a PUSH1 0x0
0x22c SLOAD
0x22d PUSH1 0x1
0x22f PUSH1 0xa0
0x231 PUSH1 0x2
0x233 EXP
0x234 SUB
0x235 AND
0x236 DUP2
0x237 JUMP
---
0x229: JUMPDEST 
0x22a: V174 = 0x0
0x22c: V175 = S[0x0]
0x22d: V176 = 0x1
0x22f: V177 = 0xa0
0x231: V178 = 0x2
0x233: V179 = EXP 0x2 0xa0
0x234: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x237: JUMP 0xfa
---
Entry stack: [V11, 0xfa]
Stack pops: 1
Stack additions: [S0, V181]
Exit stack: [V11, 0xfa, V181]

================================

Block 0x238
[0x238:0x24e]
---
Predecessors: [0x121]
Successors: [0x24f, 0x253]
---
0x238 JUMPDEST
0x239 PUSH1 0x0
0x23b SLOAD
0x23c CALLER
0x23d PUSH1 0x1
0x23f PUSH1 0xa0
0x241 PUSH1 0x2
0x243 EXP
0x244 SUB
0x245 SWAP1
0x246 DUP2
0x247 AND
0x248 SWAP2
0x249 AND
0x24a EQ
0x24b PUSH2 0x253
0x24e JUMPI
---
0x238: JUMPDEST 
0x239: V182 = 0x0
0x23b: V183 = S[0x0]
0x23c: V184 = CALLER
0x23d: V185 = 0x1
0x23f: V186 = 0xa0
0x241: V187 = 0x2
0x243: V188 = EXP 0x2 0xa0
0x244: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x247: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x249: V191 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V192 = EQ V191 V190
0x24b: V193 = 0x253
0x24e: JUMPI 0x253 V192
---
Entry stack: [V11, 0x98, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V98]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x238]
Successors: []
---
0x24f PUSH1 0x0
0x251 DUP1
0x252 REVERT
---
0x24f: V194 = 0x0
0x252: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V98]

================================

Block 0x253
[0x253:0x281]
---
Predecessors: [0x238]
Successors: [0x98]
---
0x253 JUMPDEST
0x254 PUSH1 0x1
0x256 DUP1
0x257 SLOAD
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d NOT
0x26e AND
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 SWAP3
0x278 SWAP1
0x279 SWAP3
0x27a AND
0x27b SWAP2
0x27c SWAP1
0x27d SWAP2
0x27e OR
0x27f SWAP1
0x280 SSTORE
0x281 JUMP
---
0x253: JUMPDEST 
0x254: V195 = 0x1
0x257: V196 = S[0x1]
0x258: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V198 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V199 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V196
0x26f: V200 = 0x1
0x271: V201 = 0xa0
0x273: V202 = 0x2
0x275: V203 = EXP 0x2 0xa0
0x276: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27a: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x27e: V206 = OR V205 V199
0x280: S[0x1] = V206
0x281: JUMP 0x98
---
Entry stack: [V11, 0x98, V98]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x282
[0x282:0x292]
---
Predecessors: [0x135]
Successors: [0x293, 0x297]
---
0x282 JUMPDEST
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b DUP2
0x28c AND
0x28d ISZERO
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x282: JUMPDEST 
0x283: V207 = 0x1
0x285: V208 = 0xa0
0x287: V209 = 0x2
0x289: V210 = EXP 0x2 0xa0
0x28a: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V212 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V213 = ISZERO V212
0x28e: V214 = ISZERO V213
0x28f: V215 = 0x297
0x292: JUMPI 0x297 V214
---
Entry stack: [V11, 0x98, V108]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x98, V108]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x282]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V216 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V108]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x282]
Successors: [0x2a0, 0x2a4]
---
0x297 JUMPDEST
0x298 PUSH1 0x0
0x29a CALLVALUE
0x29b GT
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x297: JUMPDEST 
0x298: V217 = 0x0
0x29a: V218 = CALLVALUE
0x29b: V219 = GT V218 0x0
0x29c: V220 = 0x2a4
0x29f: JUMPI 0x2a4 V219
---
Entry stack: [V11, 0x98, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V108]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x297]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V221 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V108]

================================

Block 0x2a4
[0x2a4:0x2c7]
---
Predecessors: [0x297]
Successors: [0x2c8, 0x2cc]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x1
0x2a7 SLOAD
0x2a8 PUSH21 0x10000000000000000000000000000000000000000
0x2be SWAP1
0x2bf DIV
0x2c0 PUSH1 0xff
0x2c2 AND
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V222 = 0x1
0x2a7: V223 = S[0x1]
0x2a8: V224 = 0x10000000000000000000000000000000000000000
0x2bf: V225 = DIV V223 0x10000000000000000000000000000000000000000
0x2c0: V226 = 0xff
0x2c2: V227 = AND 0xff V225
0x2c3: V228 = ISZERO V227
0x2c4: V229 = 0x2cc
0x2c7: JUMPI 0x2cc V228
---
Entry stack: [V11, 0x98, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V108]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2a4]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V230 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V108]

================================

Block 0x2cc
[0x2cc:0x2eb]
---
Predecessors: [0x2a4]
Successors: [0x447]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x1
0x2cf SLOAD
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 AND
0x2d9 PUSH2 0x8fc
0x2dc PUSH2 0x2ec
0x2df CALLVALUE
0x2e0 PUSH1 0x9
0x2e2 PUSH4 0xffffffff
0x2e7 PUSH2 0x447
0x2ea AND
0x2eb JUMP
---
0x2cc: JUMPDEST 
0x2cd: V231 = 0x1
0x2cf: V232 = S[0x1]
0x2d0: V233 = 0x1
0x2d2: V234 = 0xa0
0x2d4: V235 = 0x2
0x2d6: V236 = EXP 0x2 0xa0
0x2d7: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d8: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2d9: V239 = 0x8fc
0x2dc: V240 = 0x2ec
0x2df: V241 = CALLVALUE
0x2e0: V242 = 0x9
0x2e2: V243 = 0xffffffff
0x2e7: V244 = 0x447
0x2ea: V245 = AND 0x447 0xffffffff
0x2eb: JUMP 0x447
---
Entry stack: [V11, 0x98, V108]
Stack pops: 0
Stack additions: [V238, 0x8fc, 0x2ec, V241, 0x9]
Exit stack: [V11, 0x98, V108, V238, 0x8fc, 0x2ec, V241, 0x9]

================================

Block 0x2ec
[0x2ec:0x30c]
---
Predecessors: [0x45c]
Successors: [0x30d, 0x311]
---
0x2ec JUMPDEST
0x2ed SWAP1
0x2ee DUP2
0x2ef ISZERO
0x2f0 MUL
0x2f1 SWAP1
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 PUSH1 0x0
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb DUP4
0x2fc SUB
0x2fd DUP2
0x2fe DUP6
0x2ff DUP9
0x300 DUP9
0x301 CALL
0x302 SWAP4
0x303 POP
0x304 POP
0x305 POP
0x306 POP
0x307 ISZERO
0x308 ISZERO
0x309 PUSH2 0x311
0x30c JUMPI
---
0x2ec: JUMPDEST 
0x2ef: V246 = ISZERO S0
0x2f0: V247 = MUL V246 S1
0x2f2: V248 = 0x40
0x2f4: V249 = M[0x40]
0x2f5: V250 = 0x0
0x2f7: V251 = 0x40
0x2f9: V252 = M[0x40]
0x2fc: V253 = SUB V249 V252
0x301: V254 = CALL V247 S2 S0 V252 V253 V252 0x0
0x307: V255 = ISZERO V254
0x308: V256 = ISZERO V255
0x309: V257 = 0x311
0x30c: JUMPI 0x311 V256
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S5, S4, S3]

================================

Block 0x30d
[0x30d:0x310]
---
Predecessors: [0x2ec]
Successors: []
---
0x30d PUSH1 0x0
0x30f DUP1
0x310 REVERT
---
0x30d: V258 = 0x0
0x310: REVERT 0x0 0x0
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, S0]

================================

Block 0x311
[0x311:0x330]
---
Predecessors: [0x2ec]
Successors: [0x447]
---
0x311 JUMPDEST
0x312 PUSH1 0x1
0x314 PUSH1 0xa0
0x316 PUSH1 0x2
0x318 EXP
0x319 SUB
0x31a DUP2
0x31b AND
0x31c PUSH2 0x33d
0x31f PUSH1 0x8
0x321 PUSH2 0x331
0x324 CALLVALUE
0x325 PUSH1 0x9
0x327 PUSH4 0xffffffff
0x32c PUSH2 0x447
0x32f AND
0x330 JUMP
---
0x311: JUMPDEST 
0x312: V259 = 0x1
0x314: V260 = 0xa0
0x316: V261 = 0x2
0x318: V262 = EXP 0x2 0xa0
0x319: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31b: V264 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V265 = 0x33d
0x31f: V266 = 0x8
0x321: V267 = 0x331
0x324: V268 = CALLVALUE
0x325: V269 = 0x9
0x327: V270 = 0xffffffff
0x32c: V271 = 0x447
0x32f: V272 = AND 0x447 0xffffffff
0x330: JUMP 0x447
---
Entry stack: [V11, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V264, 0x33d, 0x8, 0x331, V268, 0x9]
Exit stack: [V11, S2, S1, S0, V264, 0x33d, 0x8, 0x331, V268, 0x9]

================================

Block 0x331
[0x331:0x33c]
---
Predecessors: [0x45c]
Successors: [0x463]
---
0x331 JUMPDEST
0x332 SWAP1
0x333 PUSH4 0xffffffff
0x338 PUSH2 0x463
0x33b AND
0x33c JUMP
---
0x331: JUMPDEST 
0x333: V273 = 0xffffffff
0x338: V274 = 0x463
0x33b: V275 = AND 0x463 0xffffffff
0x33c: JUMP 0x463
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, S5, S4, S3, S2, S0, S1]

================================

Block 0x33d
[0x33d:0x39c]
---
Predecessors: [0x45c, 0x48e]
Successors: [0x98]
---
0x33d JUMPDEST
0x33e PUSH1 0x40
0x340 MLOAD
0x341 PUSH1 0x0
0x343 PUSH1 0x40
0x345 MLOAD
0x346 DUP1
0x347 DUP4
0x348 SUB
0x349 DUP2
0x34a DUP6
0x34b DUP8
0x34c PUSH2 0x8796
0x34f GAS
0x350 SUB
0x351 CALL
0x352 SWAP3
0x353 POP
0x354 POP
0x355 POP
0x356 POP
0x357 PUSH32 0xd1388e1983c607c5f7b3b94c4b111a505a9a3265decadba2f8f4540e6120b1f8
0x378 DUP2
0x379 CALLVALUE
0x37a PUSH1 0x40
0x37c MLOAD
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 SWAP1
0x386 SWAP3
0x387 AND
0x388 DUP3
0x389 MSTORE
0x38a PUSH1 0x20
0x38c DUP3
0x38d ADD
0x38e MSTORE
0x38f PUSH1 0x40
0x391 SWAP1
0x392 DUP2
0x393 ADD
0x394 SWAP1
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a LOG1
0x39b POP
0x39c JUMP
---
0x33d: JUMPDEST 
0x33e: V276 = 0x40
0x340: V277 = M[0x40]
0x341: V278 = 0x0
0x343: V279 = 0x40
0x345: V280 = M[0x40]
0x348: V281 = SUB V277 V280
0x34c: V282 = 0x8796
0x34f: V283 = GAS
0x350: V284 = SUB V283 0x8796
0x351: V285 = CALL V284 S1 S0 V280 V281 V280 0x0
0x357: V286 = 0xd1388e1983c607c5f7b3b94c4b111a505a9a3265decadba2f8f4540e6120b1f8
0x379: V287 = CALLVALUE
0x37a: V288 = 0x40
0x37c: V289 = M[0x40]
0x37d: V290 = 0x1
0x37f: V291 = 0xa0
0x381: V292 = 0x2
0x383: V293 = EXP 0x2 0xa0
0x384: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x387: V295 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x389: M[V289] = V295
0x38a: V296 = 0x20
0x38d: V297 = ADD V289 0x20
0x38e: M[V297] = V287
0x38f: V298 = 0x40
0x393: V299 = ADD 0x40 V289
0x395: V300 = M[0x40]
0x398: V301 = SUB V299 V300
0x39a: LOG V300 V301 0xd1388e1983c607c5f7b3b94c4b111a505a9a3265decadba2f8f4540e6120b1f8
0x39c: JUMP S3
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S5, S4]

================================

Block 0x39d
[0x39d:0x3b3]
---
Predecessors: [0x154]
Successors: [0x3b4, 0x3b8]
---
0x39d JUMPDEST
0x39e PUSH1 0x0
0x3a0 SLOAD
0x3a1 CALLER
0x3a2 PUSH1 0x1
0x3a4 PUSH1 0xa0
0x3a6 PUSH1 0x2
0x3a8 EXP
0x3a9 SUB
0x3aa SWAP1
0x3ab DUP2
0x3ac AND
0x3ad SWAP2
0x3ae AND
0x3af EQ
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x39d: JUMPDEST 
0x39e: V302 = 0x0
0x3a0: V303 = S[0x0]
0x3a1: V304 = CALLER
0x3a2: V305 = 0x1
0x3a4: V306 = 0xa0
0x3a6: V307 = 0x2
0x3a8: V308 = EXP 0x2 0xa0
0x3a9: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ac: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x3ae: V311 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V312 = EQ V311 V310
0x3b0: V313 = 0x3b8
0x3b3: JUMPI 0x3b8 V312
---
Entry stack: [V11, 0x98, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V122]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x39d]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V314 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V122]

================================

Block 0x3b8
[0x3b8:0x3c8]
---
Predecessors: [0x39d]
Successors: [0x3c9, 0x3cd]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x1
0x3bb PUSH1 0xa0
0x3bd PUSH1 0x2
0x3bf EXP
0x3c0 SUB
0x3c1 DUP2
0x3c2 AND
0x3c3 ISZERO
0x3c4 ISZERO
0x3c5 PUSH2 0x3cd
0x3c8 JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V315 = 0x1
0x3bb: V316 = 0xa0
0x3bd: V317 = 0x2
0x3bf: V318 = EXP 0x2 0xa0
0x3c0: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V320 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V321 = ISZERO V320
0x3c4: V322 = ISZERO V321
0x3c5: V323 = 0x3cd
0x3c8: JUMPI 0x3cd V322
---
Entry stack: [V11, 0x98, V122]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x98, V122]

================================

Block 0x3c9
[0x3c9:0x3cc]
---
Predecessors: [0x3b8]
Successors: []
---
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc REVERT
---
0x3c9: V324 = 0x0
0x3cc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V122]

================================

Block 0x3cd
[0x3cd:0x437]
---
Predecessors: [0x3b8]
Successors: [0x98]
---
0x3cd JUMPDEST
0x3ce PUSH1 0x0
0x3d0 SLOAD
0x3d1 PUSH1 0x1
0x3d3 PUSH1 0xa0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 SUB
0x3d9 DUP1
0x3da DUP4
0x3db AND
0x3dc SWAP2
0x3dd AND
0x3de PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3ff PUSH1 0x40
0x401 MLOAD
0x402 PUSH1 0x40
0x404 MLOAD
0x405 DUP1
0x406 SWAP2
0x407 SUB
0x408 SWAP1
0x409 LOG3
0x40a PUSH1 0x0
0x40c DUP1
0x40d SLOAD
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 NOT
0x424 AND
0x425 PUSH1 0x1
0x427 PUSH1 0xa0
0x429 PUSH1 0x2
0x42b EXP
0x42c SUB
0x42d SWAP3
0x42e SWAP1
0x42f SWAP3
0x430 AND
0x431 SWAP2
0x432 SWAP1
0x433 SWAP2
0x434 OR
0x435 SWAP1
0x436 SSTORE
0x437 JUMP
---
0x3cd: JUMPDEST 
0x3ce: V325 = 0x0
0x3d0: V326 = S[0x0]
0x3d1: V327 = 0x1
0x3d3: V328 = 0xa0
0x3d5: V329 = 0x2
0x3d7: V330 = EXP 0x2 0xa0
0x3d8: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3db: V332 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V333 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V334 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3ff: V335 = 0x40
0x401: V336 = M[0x40]
0x402: V337 = 0x40
0x404: V338 = M[0x40]
0x407: V339 = SUB V336 V338
0x409: LOG V338 V339 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V333 V332
0x40a: V340 = 0x0
0x40d: V341 = S[0x0]
0x40e: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V343 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x424: V344 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V341
0x425: V345 = 0x1
0x427: V346 = 0xa0
0x429: V347 = 0x2
0x42b: V348 = EXP 0x2 0xa0
0x42c: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x430: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x434: V351 = OR V350 V344
0x436: S[0x0] = V351
0x437: JUMP 0x98
---
Entry stack: [V11, 0x98, V122]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x438
[0x438:0x446]
---
Predecessors: [0x173]
Successors: [0xfa]
---
0x438 JUMPDEST
0x439 PUSH1 0x1
0x43b SLOAD
0x43c PUSH1 0x1
0x43e PUSH1 0xa0
0x440 PUSH1 0x2
0x442 EXP
0x443 SUB
0x444 AND
0x445 DUP2
0x446 JUMP
---
0x438: JUMPDEST 
0x439: V352 = 0x1
0x43b: V353 = S[0x1]
0x43c: V354 = 0x1
0x43e: V355 = 0xa0
0x440: V356 = 0x2
0x442: V357 = EXP 0x2 0xa0
0x443: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x444: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x446: JUMP 0xfa
---
Entry stack: [V11, 0xfa]
Stack pops: 1
Stack additions: [S0, V359]
Exit stack: [V11, 0xfa, V359]

================================

Block 0x447
[0x447:0x453]
---
Predecessors: [0x2cc, 0x311]
Successors: [0x454, 0x455]
---
0x447 JUMPDEST
0x448 PUSH1 0x0
0x44a DUP1
0x44b DUP3
0x44c DUP5
0x44d DUP2
0x44e ISZERO
0x44f ISZERO
0x450 PUSH2 0x455
0x453 JUMPI
---
0x447: JUMPDEST 
0x448: V360 = 0x0
0x44e: V361 = ISZERO 0x9
0x44f: V362 = ISZERO 0x0
0x450: V363 = 0x455
0x453: JUMPI 0x455 0x1
---
Entry stack: [V11, S8, S7, S6, S5, S4, {0x8, 0x8fc}, {0x2ec, 0x331}, S1, 0x9]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, S8, S7, S6, S5, S4, {0x8, 0x8fc}, {0x2ec, 0x331}, S1, 0x9, 0x0, 0x0, 0x9, S1]

================================

Block 0x454
[0x454:0x454]
---
Predecessors: [0x447]
Successors: []
---
0x454 INVALID
---
0x454: INVALID 
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x8, 0x8fc}, {0x2ec, 0x331}, S5, 0x9, 0x0, 0x0, 0x9, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, S10, S9, S8, {0x8, 0x8fc}, {0x2ec, 0x331}, S5, 0x9, 0x0, 0x0, 0x9, S0]

================================

Block 0x455
[0x455:0x45b]
---
Predecessors: [0x447]
Successors: [0x45c]
---
0x455 JUMPDEST
0x456 DIV
0x457 SWAP1
0x458 POP
0x459 DUP1
0x45a SWAP2
0x45b POP
---
0x455: JUMPDEST 
0x456: V364 = DIV S0 0x9
---
Entry stack: [V11, S12, S11, S10, S9, S8, {0x8, 0x8fc}, {0x2ec, 0x331}, S5, 0x9, 0x0, 0x0, 0x9, S0]
Stack pops: 4
Stack additions: [V364, V364]
Exit stack: [V11, S12, S11, S10, S9, S8, {0x8, 0x8fc}, {0x2ec, 0x331}, S5, 0x9, V364, V364]

================================

Block 0x45c
[0x45c:0x462]
---
Predecessors: [0x455, 0x46e]
Successors: [0x2ec, 0x331, 0x33d]
---
0x45c JUMPDEST
0x45d POP
0x45e SWAP3
0x45f SWAP2
0x460 POP
0x461 POP
0x462 JUMP
---
0x45c: JUMPDEST 
0x462: JUMP S4
---
Entry stack: [V11, S9, S8, S7, S6, S5, S4, S3, {0x8, 0x9, 0x8fc}, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, S9, S8, S7, S6, S5, S1]

================================

Block 0x463
[0x463:0x46d]
---
Predecessors: [0x331]
Successors: [0x46e, 0x476]
---
0x463 JUMPDEST
0x464 PUSH1 0x0
0x466 DUP1
0x467 DUP4
0x468 ISZERO
0x469 ISZERO
0x46a PUSH2 0x476
0x46d JUMPI
---
0x463: JUMPDEST 
0x464: V365 = 0x0
0x468: V366 = ISZERO S1
0x469: V367 = ISZERO V366
0x46a: V368 = 0x476
0x46d: JUMPI 0x476 V367
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, S5, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0x46e
[0x46e:0x475]
---
Predecessors: [0x463]
Successors: [0x45c]
---
0x46e PUSH1 0x0
0x470 SWAP2
0x471 POP
0x472 PUSH2 0x45c
0x475 JUMP
---
0x46e: V369 = 0x0
0x472: V370 = 0x45c
0x475: JUMP 0x45c
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x476
[0x476:0x484]
---
Predecessors: [0x463]
Successors: [0x485, 0x486]
---
0x476 JUMPDEST
0x477 POP
0x478 DUP3
0x479 DUP3
0x47a MUL
0x47b DUP3
0x47c DUP5
0x47d DUP3
0x47e DUP2
0x47f ISZERO
0x480 ISZERO
0x481 PUSH2 0x486
0x484 JUMPI
---
0x476: JUMPDEST 
0x47a: V371 = MUL {0x8, 0x8fc} S3
0x47f: V372 = ISZERO S3
0x480: V373 = ISZERO V372
0x481: V374 = 0x486
0x484: JUMPI 0x486 V373
---
Entry stack: [V11, S7, S6, S5, S4, S3, {0x8, 0x8fc}, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V371, S2, S3, V371]
Exit stack: [V11, S7, S6, S5, S4, S3, {0x8, 0x8fc}, 0x0, V371, {0x8, 0x8fc}, S3, V371]

================================

Block 0x485
[0x485:0x485]
---
Predecessors: [0x476]
Successors: []
---
0x485 INVALID
---
0x485: INVALID 
---
Entry stack: [V11, S10, S9, S8, S7, S6, {0x8, 0x8fc}, 0x0, V371, {0x8, 0x8fc}, S1, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, {0x8, 0x8fc}, 0x0, V371, {0x8, 0x8fc}, S1, V371]

================================

Block 0x486
[0x486:0x48c]
---
Predecessors: [0x476]
Successors: [0x48d, 0x48e]
---
0x486 JUMPDEST
0x487 DIV
0x488 EQ
0x489 PUSH2 0x48e
0x48c JUMPI
---
0x486: JUMPDEST 
0x487: V375 = DIV V371 S1
0x488: V376 = EQ V375 {0x8, 0x8fc}
0x489: V377 = 0x48e
0x48c: JUMPI 0x48e V376
---
Entry stack: [V11, S10, S9, S8, S7, S6, {0x8, 0x8fc}, 0x0, V371, {0x8, 0x8fc}, S1, V371]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S10, S9, S8, S7, S6, {0x8, 0x8fc}, 0x0, V371]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x486]
Successors: []
---
0x48d INVALID
---
0x48d: INVALID 
---
Entry stack: [V11, S7, S6, S5, S4, S3, {0x8, 0x8fc}, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, {0x8, 0x8fc}, 0x0, S0]

================================

Block 0x48e
[0x48e:0x494]
---
Predecessors: [0x486]
Successors: [0x33d]
---
0x48e JUMPDEST
0x48f SWAP4
0x490 SWAP3
0x491 POP
0x492 POP
0x493 POP
0x494 JUMP
---
0x48e: JUMPDEST 
0x494: JUMP S4
---
Entry stack: [V11, S7, S6, S5, S4, S3, {0x8, 0x8fc}, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S7, S6, S5, S0]

================================

Block 0x495
[0x495:0x4c0]
---
Predecessors: []
Successors: []
---
0x495 STOP
0x496 LOG1
0x497 PUSH6 0x627a7a723058
0x49e SHA3
0x49f MSTORE
0x4a0 NOT
0x4a1 MISSING 0xb8
0x4a2 PUSH30 0xa54940786ae486229f9bb5194d16128d565998ed1e7058553d412d150029
---
0x495: STOP 
0x496: LOG S0 S1 S2
0x497: V378 = 0x627a7a723058
0x49e: V379 = SHA3 0x627a7a723058 S3
0x49f: M[V379] = S4
0x4a0: V380 = NOT S5
0x4a1: MISSING 0xb8
0x4a2: V381 = 0xa54940786ae486229f9bb5194d16128d565998ed1e7058553d412d150029
---
Entry stack: []
Stack pops: 0
Stack additions: [V380, 0xa54940786ae486229f9bb5194d16128d565998ed1e7058553d412d150029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2654e624
Entry block: 0x9a
Exit block: 0x98
Body: 0x98, 0x9a, 0xa1, 0xa5, 0x17b, 0x192, 0x196

Function 1:
Public function signature: 0x37db12c4
Entry block: 0xad
Exit block: 0x98
Body: 0x98, 0xad, 0xb4, 0xb8, 0x1b6, 0x1cd, 0x1d1

Function 2:
Public function signature: 0x5c975abb
Entry block: 0xc0
Exit block: 0xd3
Body: 0xc0, 0xc7, 0xcb, 0xd3, 0x208

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xe7
Exit block: 0xfa
Body: 0xe7, 0xee, 0xf2, 0xfa, 0x229

Function 4:
Public function signature: 0xacf372ef
Entry block: 0x116
Exit block: 0x98
Body: 0x98, 0x116, 0x11d, 0x121, 0x238, 0x24f, 0x253

Function 5:
Public function signature: 0xcde596b2
Entry block: 0x135
Exit block: 0x98
Body: 0x98, 0x135, 0x282, 0x293, 0x297, 0x2a0, 0x2a4, 0x2c8, 0x2cc, 0x2ec, 0x30d, 0x311, 0x331, 0x33d, 0x463, 0x46e, 0x476, 0x485, 0x486, 0x48d, 0x48e

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x149
Exit block: 0x98
Body: 0x98, 0x149, 0x150, 0x154, 0x39d, 0x3b4, 0x3b8, 0x3c9, 0x3cd

Function 7:
Public function signature: 0xfc0d0117
Entry block: 0x168
Exit block: 0xfa
Body: 0xfa, 0x168, 0x16f, 0x173, 0x438

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x98
Body: 0x8d, 0x94, 0x98

Function 9:
Private function
Entry block: 0x447
Exit block: 0x45c
Body: 0x447, 0x455, 0x45c

