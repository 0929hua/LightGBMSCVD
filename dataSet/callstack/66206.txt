Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x74]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x74
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x74
0xc: JUMPI 0x74 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x79
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x79
0x26: JUMPI 0x79 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x103]
---
0x27 DUP1
0x28 PUSH4 0x18160ddd
0x2d EQ
0x2e PUSH2 0x103
0x31 JUMPI
---
0x28: V17 = 0x18160ddd
0x2d: V18 = EQ 0x18160ddd V13
0x2e: V19 = 0x103
0x31: JUMPI 0x103 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x12a]
---
0x32 DUP1
0x33 PUSH4 0x313ce567
0x38 EQ
0x39 PUSH2 0x12a
0x3c JUMPI
---
0x33: V20 = 0x313ce567
0x38: V21 = EQ 0x313ce567 V13
0x39: V22 = 0x12a
0x3c: JUMPI 0x12a V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x13f]
---
0x3d DUP1
0x3e PUSH4 0x70a08231
0x43 EQ
0x44 PUSH2 0x13f
0x47 JUMPI
---
0x3e: V23 = 0x70a08231
0x43: V24 = EQ 0x70a08231 V13
0x44: V25 = 0x13f
0x47: JUMPI 0x13f V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x160]
---
0x48 DUP1
0x49 PUSH4 0x95d89b41
0x4e EQ
0x4f PUSH2 0x160
0x52 JUMPI
---
0x49: V26 = 0x95d89b41
0x4e: V27 = EQ 0x95d89b41 V13
0x4f: V28 = 0x160
0x52: JUMPI 0x160 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x175]
---
0x53 DUP1
0x54 PUSH4 0xa9059cbb
0x59 EQ
0x5a PUSH2 0x175
0x5d JUMPI
---
0x54: V29 = 0xa9059cbb
0x59: V30 = EQ 0xa9059cbb V13
0x5a: V31 = 0x175
0x5d: JUMPI 0x175 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1ad]
---
0x5e DUP1
0x5f PUSH4 0xbe45fd62
0x64 EQ
0x65 PUSH2 0x1ad
0x68 JUMPI
---
0x5f: V32 = 0xbe45fd62
0x64: V33 = EQ 0xbe45fd62 V13
0x65: V34 = 0x1ad
0x68: JUMPI 0x1ad V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x216]
---
0x69 DUP1
0x6a PUSH4 0xf6368f8a
0x6f EQ
0x70 PUSH2 0x216
0x73 JUMPI
---
0x6a: V35 = 0xf6368f8a
0x6f: V36 = EQ 0xf6368f8a V13
0x70: V37 = 0x216
0x73: JUMPI 0x216 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x78]
---
Predecessors: [0x0, 0x69]
Successors: []
---
0x74 JUMPDEST
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x74: JUMPDEST 
0x75: V38 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b DUP1
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x79: JUMPDEST 
0x7a: V39 = CALLVALUE
0x7c: V40 = ISZERO V39
0x7d: V41 = 0x85
0x80: JUMPI 0x85 V40
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V13, V39]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x79]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V42 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V13, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V39]

================================

Block 0x85
[0x85:0x8d]
---
Predecessors: [0x79]
Successors: [0x2bd]
---
0x85 JUMPDEST
0x86 POP
0x87 PUSH2 0x8e
0x8a PUSH2 0x2bd
0x8d JUMP
---
0x85: JUMPDEST 
0x87: V43 = 0x8e
0x8a: V44 = 0x2bd
0x8d: JUMP 0x2bd
---
Entry stack: [V13, V39]
Stack pops: 1
Stack additions: [0x8e]
Exit stack: [V13, 0x8e]

================================

Block 0x8e
[0x8e:0xaf]
---
Predecessors: [0x340]
Successors: [0xb0]
---
0x8e JUMPDEST
0x8f PUSH1 0x40
0x91 DUP1
0x92 MLOAD
0x93 PUSH1 0x20
0x95 DUP1
0x96 DUP3
0x97 MSTORE
0x98 DUP4
0x99 MLOAD
0x9a DUP2
0x9b DUP4
0x9c ADD
0x9d MSTORE
0x9e DUP4
0x9f MLOAD
0xa0 SWAP2
0xa1 SWAP3
0xa2 DUP4
0xa3 SWAP3
0xa4 SWAP1
0xa5 DUP4
0xa6 ADD
0xa7 SWAP2
0xa8 DUP6
0xa9 ADD
0xaa SWAP1
0xab DUP1
0xac DUP4
0xad DUP4
0xae PUSH1 0x0
---
0x8e: JUMPDEST 
0x8f: V45 = 0x40
0x92: V46 = M[0x40]
0x93: V47 = 0x20
0x97: M[V46] = 0x20
0x99: V48 = M[S0]
0x9c: V49 = ADD V46 0x20
0x9d: M[V49] = V48
0x9f: V50 = M[S0]
0xa6: V51 = ADD V46 0x40
0xa9: V52 = ADD S0 0x20
0xae: V53 = 0x0
---
Entry stack: [V13, 0x8e, S0]
Stack pops: 1
Stack additions: [S0, V46, V46, V51, V52, V50, V50, V51, V52, 0x0]
Exit stack: [V13, 0x8e, S0, V46, V46, V51, V52, V50, V50, V51, V52, 0x0]

================================

Block 0xb0
[0xb0:0xb8]
---
Predecessors: [0x8e, 0xb9]
Successors: [0xb9, 0xc8]
---
0xb0 JUMPDEST
0xb1 DUP4
0xb2 DUP2
0xb3 LT
0xb4 ISZERO
0xb5 PUSH2 0xc8
0xb8 JUMPI
---
0xb0: JUMPDEST 
0xb3: V54 = LT S0 V50
0xb4: V55 = ISZERO V54
0xb5: V56 = 0xc8
0xb8: JUMPI 0xc8 V55
---
Entry stack: [V13, 0x8e, S9, V46, V46, V51, V52, V50, V50, V51, V52, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x8e, S9, V46, V46, V51, V52, V50, V50, V51, V52, S0]

================================

Block 0xb9
[0xb9:0xc7]
---
Predecessors: [0xb0]
Successors: [0xb0]
---
0xb9 DUP2
0xba DUP2
0xbb ADD
0xbc MLOAD
0xbd DUP4
0xbe DUP3
0xbf ADD
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 PUSH2 0xb0
0xc7 JUMP
---
0xbb: V57 = ADD S0 V52
0xbc: V58 = M[V57]
0xbf: V59 = ADD S0 V51
0xc0: M[V59] = V58
0xc1: V60 = 0x20
0xc3: V61 = ADD 0x20 S0
0xc4: V62 = 0xb0
0xc7: JUMP 0xb0
---
Entry stack: [V13, 0x8e, S9, V46, V46, V51, V52, V50, V50, V51, V52, S0]
Stack pops: 3
Stack additions: [S2, S1, V61]
Exit stack: [V13, 0x8e, S9, V46, V46, V51, V52, V50, V50, V51, V52, V61]

================================

Block 0xc8
[0xc8:0xdb]
---
Predecessors: [0xb0]
Successors: [0xdc, 0xf5]
---
0xc8 JUMPDEST
0xc9 POP
0xca POP
0xcb POP
0xcc POP
0xcd SWAP1
0xce POP
0xcf SWAP1
0xd0 DUP2
0xd1 ADD
0xd2 SWAP1
0xd3 PUSH1 0x1f
0xd5 AND
0xd6 DUP1
0xd7 ISZERO
0xd8 PUSH2 0xf5
0xdb JUMPI
---
0xc8: JUMPDEST 
0xd1: V63 = ADD V50 V51
0xd3: V64 = 0x1f
0xd5: V65 = AND 0x1f V50
0xd7: V66 = ISZERO V65
0xd8: V67 = 0xf5
0xdb: JUMPI 0xf5 V66
---
Entry stack: [V13, 0x8e, S9, V46, V46, V51, V52, V50, V50, V51, V52, S0]
Stack pops: 7
Stack additions: [V63, V65]
Exit stack: [V13, 0x8e, S9, V46, V46, V63, V65]

================================

Block 0xdc
[0xdc:0xf4]
---
Predecessors: [0xc8]
Successors: [0xf5]
---
0xdc DUP1
0xdd DUP3
0xde SUB
0xdf DUP1
0xe0 MLOAD
0xe1 PUSH1 0x1
0xe3 DUP4
0xe4 PUSH1 0x20
0xe6 SUB
0xe7 PUSH2 0x100
0xea EXP
0xeb SUB
0xec NOT
0xed AND
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
---
0xde: V68 = SUB V63 V65
0xe0: V69 = M[V68]
0xe1: V70 = 0x1
0xe4: V71 = 0x20
0xe6: V72 = SUB 0x20 V65
0xe7: V73 = 0x100
0xea: V74 = EXP 0x100 V72
0xeb: V75 = SUB V74 0x1
0xec: V76 = NOT V75
0xed: V77 = AND V76 V69
0xef: M[V68] = V77
0xf0: V78 = 0x20
0xf2: V79 = ADD 0x20 V68
---
Entry stack: [V13, 0x8e, S4, V46, V46, V63, V65]
Stack pops: 2
Stack additions: [V79, S0]
Exit stack: [V13, 0x8e, S4, V46, V46, V79, V65]

================================

Block 0xf5
[0xf5:0x102]
---
Predecessors: [0xc8, 0xdc]
Successors: []
---
0xf5 JUMPDEST
0xf6 POP
0xf7 SWAP3
0xf8 POP
0xf9 POP
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff SWAP2
0x100 SUB
0x101 SWAP1
0x102 RETURN
---
0xf5: JUMPDEST 
0xfb: V80 = 0x40
0xfd: V81 = M[0x40]
0x100: V82 = SUB S1 V81
0x102: RETURN V81 V82
---
Entry stack: [V13, 0x8e, S4, V46, V46, S1, V65]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x8e]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0x27]
Successors: [0x10b, 0x10f]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 DUP1
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x103: JUMPDEST 
0x104: V83 = CALLVALUE
0x106: V84 = ISZERO V83
0x107: V85 = 0x10f
0x10a: JUMPI 0x10f V84
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V13, V83]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x103]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V86 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V13, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V83]

================================

Block 0x10f
[0x10f:0x117]
---
Predecessors: [0x103]
Successors: [0x348]
---
0x10f JUMPDEST
0x110 POP
0x111 PUSH2 0x118
0x114 PUSH2 0x348
0x117 JUMP
---
0x10f: JUMPDEST 
0x111: V87 = 0x118
0x114: V88 = 0x348
0x117: JUMP 0x348
---
Entry stack: [V13, V83]
Stack pops: 1
Stack additions: [0x118]
Exit stack: [V13, 0x118]

================================

Block 0x118
[0x118:0x129]
---
Predecessors: [0x348, 0x34e, 0x354]
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b DUP1
0x11c MLOAD
0x11d SWAP2
0x11e DUP3
0x11f MSTORE
0x120 MLOAD
0x121 SWAP1
0x122 DUP2
0x123 SWAP1
0x124 SUB
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 RETURN
---
0x118: JUMPDEST 
0x119: V89 = 0x40
0x11c: V90 = M[0x40]
0x11f: M[V90] = S0
0x120: V91 = M[0x40]
0x124: V92 = SUB V90 V91
0x125: V93 = 0x20
0x127: V94 = ADD 0x20 V92
0x129: RETURN V91 V94
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x12a
[0x12a:0x131]
---
Predecessors: [0x32]
Successors: [0x132, 0x136]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c DUP1
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x12a: JUMPDEST 
0x12b: V95 = CALLVALUE
0x12d: V96 = ISZERO V95
0x12e: V97 = 0x136
0x131: JUMPI 0x136 V96
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V13, V95]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x12a]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V98 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V13, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V95]

================================

Block 0x136
[0x136:0x13e]
---
Predecessors: [0x12a]
Successors: [0x34e]
---
0x136 JUMPDEST
0x137 POP
0x138 PUSH2 0x118
0x13b PUSH2 0x34e
0x13e JUMP
---
0x136: JUMPDEST 
0x138: V99 = 0x118
0x13b: V100 = 0x34e
0x13e: JUMP 0x34e
---
Entry stack: [V13, V95]
Stack pops: 1
Stack additions: [0x118]
Exit stack: [V13, 0x118]

================================

Block 0x13f
[0x13f:0x146]
---
Predecessors: [0x3d]
Successors: [0x147, 0x14b]
---
0x13f JUMPDEST
0x140 CALLVALUE
0x141 DUP1
0x142 ISZERO
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x13f: JUMPDEST 
0x140: V101 = CALLVALUE
0x142: V102 = ISZERO V101
0x143: V103 = 0x14b
0x146: JUMPI 0x14b V102
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V13, V101]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x13f]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V104 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V13, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V101]

================================

Block 0x14b
[0x14b:0x15f]
---
Predecessors: [0x13f]
Successors: [0x354]
---
0x14b JUMPDEST
0x14c POP
0x14d PUSH2 0x118
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 PUSH1 0x4
0x15a CALLDATALOAD
0x15b AND
0x15c PUSH2 0x354
0x15f JUMP
---
0x14b: JUMPDEST 
0x14d: V105 = 0x118
0x150: V106 = 0x1
0x152: V107 = 0xa0
0x154: V108 = 0x2
0x156: V109 = EXP 0x2 0xa0
0x157: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x158: V111 = 0x4
0x15a: V112 = CALLDATALOAD 0x4
0x15b: V113 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V114 = 0x354
0x15f: JUMP 0x354
---
Entry stack: [V13, V101]
Stack pops: 1
Stack additions: [0x118, V113]
Exit stack: [V13, 0x118, V113]

================================

Block 0x160
[0x160:0x167]
---
Predecessors: [0x48]
Successors: [0x168, 0x16c]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 DUP1
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x160: JUMPDEST 
0x161: V115 = CALLVALUE
0x163: V116 = ISZERO V115
0x164: V117 = 0x16c
0x167: JUMPI 0x16c V116
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V115]
Exit stack: [V13, V115]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x160]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V118 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V13, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V115]

================================

Block 0x16c
[0x16c:0x174]
---
Predecessors: [0x160]
Successors: [0x36f]
---
0x16c JUMPDEST
0x16d POP
0x16e PUSH2 0x8e
0x171 PUSH2 0x36f
0x174 JUMP
---
0x16c: JUMPDEST 
0x16e: V119 = 0x8e
0x171: V120 = 0x36f
0x174: JUMP 0x36f
---
Entry stack: [V13, V115]
Stack pops: 1
Stack additions: [0x8e]
Exit stack: [V13, 0x8e]

================================

Block 0x175
[0x175:0x17c]
---
Predecessors: [0x53]
Successors: [0x17d, 0x181]
---
0x175 JUMPDEST
0x176 CALLVALUE
0x177 DUP1
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x175: JUMPDEST 
0x176: V121 = CALLVALUE
0x178: V122 = ISZERO V121
0x179: V123 = 0x181
0x17c: JUMPI 0x181 V122
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V13, V121]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x175]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V124 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V13, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V121]

================================

Block 0x181
[0x181:0x198]
---
Predecessors: [0x175]
Successors: [0x3ca]
---
0x181 JUMPDEST
0x182 POP
0x183 PUSH2 0x199
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e PUSH1 0x4
0x190 CALLDATALOAD
0x191 AND
0x192 PUSH1 0x24
0x194 CALLDATALOAD
0x195 PUSH2 0x3ca
0x198 JUMP
---
0x181: JUMPDEST 
0x183: V125 = 0x199
0x186: V126 = 0x1
0x188: V127 = 0xa0
0x18a: V128 = 0x2
0x18c: V129 = EXP 0x2 0xa0
0x18d: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V131 = 0x4
0x190: V132 = CALLDATALOAD 0x4
0x191: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x192: V134 = 0x24
0x194: V135 = CALLDATALOAD 0x24
0x195: V136 = 0x3ca
0x198: JUMP 0x3ca
---
Entry stack: [V13, V121]
Stack pops: 1
Stack additions: [0x199, V133, V135]
Exit stack: [V13, 0x199, V133, V135]

================================

Block 0x199
[0x199:0x1ac]
---
Predecessors: [0x409, 0x44e, 0x68b, 0x834]
Successors: []
---
0x199 JUMPDEST
0x19a PUSH1 0x40
0x19c DUP1
0x19d MLOAD
0x19e SWAP2
0x19f ISZERO
0x1a0 ISZERO
0x1a1 DUP3
0x1a2 MSTORE
0x1a3 MLOAD
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 SWAP1
0x1a7 SUB
0x1a8 PUSH1 0x20
0x1aa ADD
0x1ab SWAP1
0x1ac RETURN
---
0x199: JUMPDEST 
0x19a: V137 = 0x40
0x19d: V138 = M[0x40]
0x19f: V139 = ISZERO 0x1
0x1a0: V140 = ISZERO 0x0
0x1a2: M[V138] = 0x1
0x1a3: V141 = M[0x40]
0x1a7: V142 = SUB V138 V141
0x1a8: V143 = 0x20
0x1aa: V144 = ADD 0x20 V142
0x1ac: RETURN V141 V144
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1ad
[0x1ad:0x1b4]
---
Predecessors: [0x5e]
Successors: [0x1b5, 0x1b9]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af DUP1
0x1b0 ISZERO
0x1b1 PUSH2 0x1b9
0x1b4 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V145 = CALLVALUE
0x1b0: V146 = ISZERO V145
0x1b1: V147 = 0x1b9
0x1b4: JUMPI 0x1b9 V146
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V145]
Exit stack: [V13, V145]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 REVERT
---
0x1b5: V148 = 0x0
0x1b8: REVERT 0x0 0x0
---
Entry stack: [V13, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V145]

================================

Block 0x1b9
[0x1b9:0x215]
---
Predecessors: [0x1ad]
Successors: [0x411]
---
0x1b9 JUMPDEST
0x1ba POP
0x1bb PUSH1 0x40
0x1bd DUP1
0x1be MLOAD
0x1bf PUSH1 0x20
0x1c1 PUSH1 0x4
0x1c3 PUSH1 0x44
0x1c5 CALLDATALOAD
0x1c6 DUP2
0x1c7 DUP2
0x1c8 ADD
0x1c9 CALLDATALOAD
0x1ca PUSH1 0x1f
0x1cc DUP2
0x1cd ADD
0x1ce DUP5
0x1cf SWAP1
0x1d0 DIV
0x1d1 DUP5
0x1d2 MUL
0x1d3 DUP6
0x1d4 ADD
0x1d5 DUP5
0x1d6 ADD
0x1d7 SWAP1
0x1d8 SWAP6
0x1d9 MSTORE
0x1da DUP5
0x1db DUP5
0x1dc MSTORE
0x1dd PUSH2 0x199
0x1e0 SWAP5
0x1e1 DUP3
0x1e2 CALLDATALOAD
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0xa0
0x1e7 PUSH1 0x2
0x1e9 EXP
0x1ea SUB
0x1eb AND
0x1ec SWAP5
0x1ed PUSH1 0x24
0x1ef DUP1
0x1f0 CALLDATALOAD
0x1f1 SWAP6
0x1f2 CALLDATASIZE
0x1f3 SWAP6
0x1f4 SWAP5
0x1f5 PUSH1 0x64
0x1f7 SWAP5
0x1f8 SWAP3
0x1f9 ADD
0x1fa SWAP2
0x1fb SWAP1
0x1fc DUP2
0x1fd SWAP1
0x1fe DUP5
0x1ff ADD
0x200 DUP4
0x201 DUP3
0x202 DUP1
0x203 DUP3
0x204 DUP5
0x205 CALLDATACOPY
0x206 POP
0x207 SWAP5
0x208 SWAP8
0x209 POP
0x20a PUSH2 0x411
0x20d SWAP7
0x20e POP
0x20f POP
0x210 POP
0x211 POP
0x212 POP
0x213 POP
0x214 POP
0x215 JUMP
---
0x1b9: JUMPDEST 
0x1bb: V149 = 0x40
0x1be: V150 = M[0x40]
0x1bf: V151 = 0x20
0x1c1: V152 = 0x4
0x1c3: V153 = 0x44
0x1c5: V154 = CALLDATALOAD 0x44
0x1c8: V155 = ADD V154 0x4
0x1c9: V156 = CALLDATALOAD V155
0x1ca: V157 = 0x1f
0x1cd: V158 = ADD V156 0x1f
0x1d0: V159 = DIV V158 0x20
0x1d2: V160 = MUL 0x20 V159
0x1d4: V161 = ADD V150 V160
0x1d6: V162 = ADD 0x20 V161
0x1d9: M[0x40] = V162
0x1dc: M[V150] = V156
0x1dd: V163 = 0x199
0x1e2: V164 = CALLDATALOAD 0x4
0x1e3: V165 = 0x1
0x1e5: V166 = 0xa0
0x1e7: V167 = 0x2
0x1e9: V168 = EXP 0x2 0xa0
0x1ea: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1eb: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x1ed: V171 = 0x24
0x1f0: V172 = CALLDATALOAD 0x24
0x1f2: V173 = CALLDATASIZE
0x1f5: V174 = 0x64
0x1f9: V175 = ADD 0x24 V154
0x1ff: V176 = ADD V150 0x20
0x205: CALLDATACOPY V176 V175 V156
0x20a: V177 = 0x411
0x215: JUMP 0x411
---
Entry stack: [V13, V145]
Stack pops: 1
Stack additions: [0x199, V170, V172, V150]
Exit stack: [V13, 0x199, V170, V172, V150]

================================

Block 0x216
[0x216:0x21d]
---
Predecessors: [0x69]
Successors: [0x21e, 0x222]
---
0x216 JUMPDEST
0x217 CALLVALUE
0x218 DUP1
0x219 ISZERO
0x21a PUSH2 0x222
0x21d JUMPI
---
0x216: JUMPDEST 
0x217: V178 = CALLVALUE
0x219: V179 = ISZERO V178
0x21a: V180 = 0x222
0x21d: JUMPI 0x222 V179
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V178]
Exit stack: [V13, V178]

================================

Block 0x21e
[0x21e:0x221]
---
Predecessors: [0x216]
Successors: []
---
0x21e PUSH1 0x0
0x220 DUP1
0x221 REVERT
---
0x21e: V181 = 0x0
0x221: REVERT 0x0 0x0
---
Entry stack: [V13, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V178]

================================

Block 0x222
[0x222:0x2bc]
---
Predecessors: [0x216]
Successors: [0x456]
---
0x222 JUMPDEST
0x223 POP
0x224 PUSH1 0x40
0x226 DUP1
0x227 MLOAD
0x228 PUSH1 0x20
0x22a PUSH1 0x4
0x22c PUSH1 0x44
0x22e CALLDATALOAD
0x22f DUP2
0x230 DUP2
0x231 ADD
0x232 CALLDATALOAD
0x233 PUSH1 0x1f
0x235 DUP2
0x236 ADD
0x237 DUP5
0x238 SWAP1
0x239 DIV
0x23a DUP5
0x23b MUL
0x23c DUP6
0x23d ADD
0x23e DUP5
0x23f ADD
0x240 SWAP1
0x241 SWAP6
0x242 MSTORE
0x243 DUP5
0x244 DUP5
0x245 MSTORE
0x246 PUSH2 0x199
0x249 SWAP5
0x24a DUP3
0x24b CALLDATALOAD
0x24c PUSH1 0x1
0x24e PUSH1 0xa0
0x250 PUSH1 0x2
0x252 EXP
0x253 SUB
0x254 AND
0x255 SWAP5
0x256 PUSH1 0x24
0x258 DUP1
0x259 CALLDATALOAD
0x25a SWAP6
0x25b CALLDATASIZE
0x25c SWAP6
0x25d SWAP5
0x25e PUSH1 0x64
0x260 SWAP5
0x261 SWAP3
0x262 ADD
0x263 SWAP2
0x264 SWAP1
0x265 DUP2
0x266 SWAP1
0x267 DUP5
0x268 ADD
0x269 DUP4
0x26a DUP3
0x26b DUP1
0x26c DUP3
0x26d DUP5
0x26e CALLDATACOPY
0x26f POP
0x270 POP
0x271 PUSH1 0x40
0x273 DUP1
0x274 MLOAD
0x275 PUSH1 0x20
0x277 PUSH1 0x1f
0x279 DUP10
0x27a CALLDATALOAD
0x27b DUP12
0x27c ADD
0x27d DUP1
0x27e CALLDATALOAD
0x27f SWAP2
0x280 DUP3
0x281 ADD
0x282 DUP4
0x283 SWAP1
0x284 DIV
0x285 DUP4
0x286 MUL
0x287 DUP5
0x288 ADD
0x289 DUP4
0x28a ADD
0x28b SWAP1
0x28c SWAP5
0x28d MSTORE
0x28e DUP1
0x28f DUP4
0x290 MSTORE
0x291 SWAP8
0x292 SWAP11
0x293 SWAP10
0x294 SWAP9
0x295 DUP2
0x296 ADD
0x297 SWAP8
0x298 SWAP2
0x299 SWAP7
0x29a POP
0x29b SWAP2
0x29c DUP3
0x29d ADD
0x29e SWAP5
0x29f POP
0x2a0 SWAP3
0x2a1 POP
0x2a2 DUP3
0x2a3 SWAP2
0x2a4 POP
0x2a5 DUP5
0x2a6 ADD
0x2a7 DUP4
0x2a8 DUP3
0x2a9 DUP1
0x2aa DUP3
0x2ab DUP5
0x2ac CALLDATACOPY
0x2ad POP
0x2ae SWAP5
0x2af SWAP8
0x2b0 POP
0x2b1 PUSH2 0x456
0x2b4 SWAP7
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc JUMP
---
0x222: JUMPDEST 
0x224: V182 = 0x40
0x227: V183 = M[0x40]
0x228: V184 = 0x20
0x22a: V185 = 0x4
0x22c: V186 = 0x44
0x22e: V187 = CALLDATALOAD 0x44
0x231: V188 = ADD V187 0x4
0x232: V189 = CALLDATALOAD V188
0x233: V190 = 0x1f
0x236: V191 = ADD V189 0x1f
0x239: V192 = DIV V191 0x20
0x23b: V193 = MUL 0x20 V192
0x23d: V194 = ADD V183 V193
0x23f: V195 = ADD 0x20 V194
0x242: M[0x40] = V195
0x245: M[V183] = V189
0x246: V196 = 0x199
0x24b: V197 = CALLDATALOAD 0x4
0x24c: V198 = 0x1
0x24e: V199 = 0xa0
0x250: V200 = 0x2
0x252: V201 = EXP 0x2 0xa0
0x253: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x254: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x256: V204 = 0x24
0x259: V205 = CALLDATALOAD 0x24
0x25b: V206 = CALLDATASIZE
0x25e: V207 = 0x64
0x262: V208 = ADD 0x24 V187
0x268: V209 = ADD V183 0x20
0x26e: CALLDATACOPY V209 V208 V189
0x271: V210 = 0x40
0x274: V211 = M[0x40]
0x275: V212 = 0x20
0x277: V213 = 0x1f
0x27a: V214 = CALLDATALOAD 0x64
0x27c: V215 = ADD 0x4 V214
0x27e: V216 = CALLDATALOAD V215
0x281: V217 = ADD V216 0x1f
0x284: V218 = DIV V217 0x20
0x286: V219 = MUL 0x20 V218
0x288: V220 = ADD V211 V219
0x28a: V221 = ADD 0x20 V220
0x28d: M[0x40] = V221
0x290: M[V211] = V216
0x296: V222 = ADD 0x20 0x64
0x29d: V223 = ADD 0x20 V215
0x2a6: V224 = ADD V211 0x20
0x2ac: CALLDATACOPY V224 V223 V216
0x2b1: V225 = 0x456
0x2bc: JUMP 0x456
---
Entry stack: [V13, V178]
Stack pops: 1
Stack additions: [0x199, V203, V205, V183, V211]
Exit stack: [V13, 0x199, V203, V205, V183, V211]

================================

Block 0x2bd
[0x2bd:0x2f9]
---
Predecessors: [0x85]
Successors: [0x2fa, 0x340]
---
0x2bd JUMPDEST
0x2be PUSH1 0x2
0x2c0 DUP1
0x2c1 SLOAD
0x2c2 PUSH1 0x40
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 PUSH1 0x20
0x2c8 PUSH1 0x1
0x2ca DUP5
0x2cb AND
0x2cc ISZERO
0x2cd PUSH2 0x100
0x2d0 MUL
0x2d1 PUSH1 0x0
0x2d3 NOT
0x2d4 ADD
0x2d5 SWAP1
0x2d6 SWAP4
0x2d7 AND
0x2d8 DUP5
0x2d9 SWAP1
0x2da DIV
0x2db PUSH1 0x1f
0x2dd DUP2
0x2de ADD
0x2df DUP5
0x2e0 SWAP1
0x2e1 DIV
0x2e2 DUP5
0x2e3 MUL
0x2e4 DUP3
0x2e5 ADD
0x2e6 DUP5
0x2e7 ADD
0x2e8 SWAP1
0x2e9 SWAP3
0x2ea MSTORE
0x2eb DUP2
0x2ec DUP2
0x2ed MSTORE
0x2ee SWAP3
0x2ef SWAP2
0x2f0 DUP4
0x2f1 ADD
0x2f2 DUP3
0x2f3 DUP3
0x2f4 DUP1
0x2f5 ISZERO
0x2f6 PUSH2 0x340
0x2f9 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V226 = 0x2
0x2c1: V227 = S[0x2]
0x2c2: V228 = 0x40
0x2c5: V229 = M[0x40]
0x2c6: V230 = 0x20
0x2c8: V231 = 0x1
0x2cb: V232 = AND V227 0x1
0x2cc: V233 = ISZERO V232
0x2cd: V234 = 0x100
0x2d0: V235 = MUL 0x100 V233
0x2d1: V236 = 0x0
0x2d3: V237 = NOT 0x0
0x2d4: V238 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V235
0x2d7: V239 = AND V227 V238
0x2da: V240 = DIV V239 0x2
0x2db: V241 = 0x1f
0x2de: V242 = ADD V240 0x1f
0x2e1: V243 = DIV V242 0x20
0x2e3: V244 = MUL 0x20 V243
0x2e5: V245 = ADD V229 V244
0x2e7: V246 = ADD 0x20 V245
0x2ea: M[0x40] = V246
0x2ed: M[V229] = V240
0x2f1: V247 = ADD V229 0x20
0x2f5: V248 = ISZERO V240
0x2f6: V249 = 0x340
0x2f9: JUMPI 0x340 V248
---
Entry stack: [V13, 0x8e]
Stack pops: 0
Stack additions: [V229, 0x2, V240, V247, 0x2, V240]
Exit stack: [V13, 0x8e, V229, 0x2, V240, V247, 0x2, V240]

================================

Block 0x2fa
[0x2fa:0x301]
---
Predecessors: [0x2bd]
Successors: [0x302, 0x315]
---
0x2fa DUP1
0x2fb PUSH1 0x1f
0x2fd LT
0x2fe PUSH2 0x315
0x301 JUMPI
---
0x2fb: V250 = 0x1f
0x2fd: V251 = LT 0x1f V240
0x2fe: V252 = 0x315
0x301: JUMPI 0x315 V251
---
Entry stack: [V13, 0x8e, V229, 0x2, V240, V247, 0x2, V240]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x8e, V229, 0x2, V240, V247, 0x2, V240]

================================

Block 0x302
[0x302:0x314]
---
Predecessors: [0x2fa]
Successors: [0x340]
---
0x302 PUSH2 0x100
0x305 DUP1
0x306 DUP4
0x307 SLOAD
0x308 DIV
0x309 MUL
0x30a DUP4
0x30b MSTORE
0x30c SWAP2
0x30d PUSH1 0x20
0x30f ADD
0x310 SWAP2
0x311 PUSH2 0x340
0x314 JUMP
---
0x302: V253 = 0x100
0x307: V254 = S[0x2]
0x308: V255 = DIV V254 0x100
0x309: V256 = MUL V255 0x100
0x30b: M[V247] = V256
0x30d: V257 = 0x20
0x30f: V258 = ADD 0x20 V247
0x311: V259 = 0x340
0x314: JUMP 0x340
---
Entry stack: [V13, 0x8e, V229, 0x2, V240, V247, 0x2, V240]
Stack pops: 3
Stack additions: [V258, S1, S0]
Exit stack: [V13, 0x8e, V229, 0x2, V240, V258, 0x2, V240]

================================

Block 0x315
[0x315:0x322]
---
Predecessors: [0x2fa, 0x3af]
Successors: [0x323]
---
0x315 JUMPDEST
0x316 DUP3
0x317 ADD
0x318 SWAP2
0x319 SWAP1
0x31a PUSH1 0x0
0x31c MSTORE
0x31d PUSH1 0x20
0x31f PUSH1 0x0
0x321 SHA3
0x322 SWAP1
---
0x315: JUMPDEST 
0x317: V260 = ADD S2 S0
0x31a: V261 = 0x0
0x31c: M[0x0] = {0x2, 0x3}
0x31d: V262 = 0x20
0x31f: V263 = 0x0
0x321: V264 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x8e, S5, {0x2, 0x3}, S3, S2, {0x2, 0x3}, S0]
Stack pops: 3
Stack additions: [V260, V264, S2]
Exit stack: [V13, 0x8e, S5, {0x2, 0x3}, S3, V260, V264, S2]

================================

Block 0x323
[0x323:0x336]
---
Predecessors: [0x315, 0x323]
Successors: [0x323, 0x337]
---
0x323 JUMPDEST
0x324 DUP2
0x325 SLOAD
0x326 DUP2
0x327 MSTORE
0x328 SWAP1
0x329 PUSH1 0x1
0x32b ADD
0x32c SWAP1
0x32d PUSH1 0x20
0x32f ADD
0x330 DUP1
0x331 DUP4
0x332 GT
0x333 PUSH2 0x323
0x336 JUMPI
---
0x323: JUMPDEST 
0x325: V265 = S[S1]
0x327: M[S0] = V265
0x329: V266 = 0x1
0x32b: V267 = ADD 0x1 S1
0x32d: V268 = 0x20
0x32f: V269 = ADD 0x20 S0
0x332: V270 = GT V260 V269
0x333: V271 = 0x323
0x336: JUMPI 0x323 V270
---
Entry stack: [V13, 0x8e, S5, {0x2, 0x3}, S3, V260, S1, S0]
Stack pops: 3
Stack additions: [S2, V267, V269]
Exit stack: [V13, 0x8e, S5, {0x2, 0x3}, S3, V260, V267, V269]

================================

Block 0x337
[0x337:0x33f]
---
Predecessors: [0x323]
Successors: [0x340]
---
0x337 DUP3
0x338 SWAP1
0x339 SUB
0x33a PUSH1 0x1f
0x33c AND
0x33d DUP3
0x33e ADD
0x33f SWAP2
---
0x339: V272 = SUB V269 V260
0x33a: V273 = 0x1f
0x33c: V274 = AND 0x1f V272
0x33e: V275 = ADD V260 V274
---
Entry stack: [V13, 0x8e, S5, {0x2, 0x3}, S3, V260, V267, V269]
Stack pops: 3
Stack additions: [V275, S1, S2]
Exit stack: [V13, 0x8e, S5, {0x2, 0x3}, S3, V275, V267, V260]

================================

Block 0x340
[0x340:0x347]
---
Predecessors: [0x2bd, 0x302, 0x337, 0x36f, 0x3b7]
Successors: [0x8e]
---
0x340 JUMPDEST
0x341 POP
0x342 POP
0x343 POP
0x344 POP
0x345 POP
0x346 DUP2
0x347 JUMP
---
0x340: JUMPDEST 
0x347: JUMP 0x8e
---
Entry stack: [V13, 0x8e, S5, {0x2, 0x3}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0x8e, S5]

================================

Block 0x348
[0x348:0x34d]
---
Predecessors: [0x10f]
Successors: [0x118]
---
0x348 JUMPDEST
0x349 PUSH1 0x5
0x34b SLOAD
0x34c DUP2
0x34d JUMP
---
0x348: JUMPDEST 
0x349: V276 = 0x5
0x34b: V277 = S[0x5]
0x34d: JUMP 0x118
---
Entry stack: [V13, 0x118]
Stack pops: 1
Stack additions: [S0, V277]
Exit stack: [V13, 0x118, V277]

================================

Block 0x34e
[0x34e:0x353]
---
Predecessors: [0x136]
Successors: [0x118]
---
0x34e JUMPDEST
0x34f PUSH1 0x4
0x351 SLOAD
0x352 DUP2
0x353 JUMP
---
0x34e: JUMPDEST 
0x34f: V278 = 0x4
0x351: V279 = S[0x4]
0x353: JUMP 0x118
---
Entry stack: [V13, 0x118]
Stack pops: 1
Stack additions: [S0, V279]
Exit stack: [V13, 0x118, V279]

================================

Block 0x354
[0x354:0x36e]
---
Predecessors: [0x14b, 0x468, 0x47c, 0x48e, 0x6b4, 0x6cc, 0x6de, 0x8e6, 0x8fd, 0x90f]
Successors: [0x118, 0x471, 0x488, 0x4aa, 0x6c1, 0x6d8, 0x6fa, 0x8f2, 0x909, 0x92b]
---
0x354 JUMPDEST
0x355 PUSH1 0x1
0x357 PUSH1 0xa0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d AND
0x35e PUSH1 0x0
0x360 SWAP1
0x361 DUP2
0x362 MSTORE
0x363 PUSH1 0x1
0x365 PUSH1 0x20
0x367 MSTORE
0x368 PUSH1 0x40
0x36a SWAP1
0x36b SHA3
0x36c SLOAD
0x36d SWAP1
0x36e JUMP
---
0x354: JUMPDEST 
0x355: V280 = 0x1
0x357: V281 = 0xa0
0x359: V282 = 0x2
0x35b: V283 = EXP 0x2 0xa0
0x35c: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35d: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x35e: V286 = 0x0
0x362: M[0x0] = V285
0x363: V287 = 0x1
0x365: V288 = 0x20
0x367: M[0x20] = 0x1
0x368: V289 = 0x40
0x36b: V290 = SHA3 0x0 0x40
0x36c: V291 = S[V290]
0x36e: JUMP {0x118, 0x471, 0x488, 0x4aa, 0x6c1, 0x6d8, 0x6fa, 0x8f2, 0x909, 0x92b}
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x40}, S2, {0x118, 0x471, 0x488, 0x4aa, 0x6c1, 0x6d8, 0x6fa, 0x8f2, 0x909, 0x92b}, S0]
Stack pops: 2
Stack additions: [V291]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x40}, S2, V291]

================================

Block 0x36f
[0x36f:0x3ae]
---
Predecessors: [0x16c]
Successors: [0x340, 0x3af]
---
0x36f JUMPDEST
0x370 PUSH1 0x3
0x372 DUP1
0x373 SLOAD
0x374 PUSH1 0x40
0x376 DUP1
0x377 MLOAD
0x378 PUSH1 0x20
0x37a PUSH1 0x2
0x37c PUSH1 0x1
0x37e DUP6
0x37f AND
0x380 ISZERO
0x381 PUSH2 0x100
0x384 MUL
0x385 PUSH1 0x0
0x387 NOT
0x388 ADD
0x389 SWAP1
0x38a SWAP5
0x38b AND
0x38c SWAP4
0x38d SWAP1
0x38e SWAP4
0x38f DIV
0x390 PUSH1 0x1f
0x392 DUP2
0x393 ADD
0x394 DUP5
0x395 SWAP1
0x396 DIV
0x397 DUP5
0x398 MUL
0x399 DUP3
0x39a ADD
0x39b DUP5
0x39c ADD
0x39d SWAP1
0x39e SWAP3
0x39f MSTORE
0x3a0 DUP2
0x3a1 DUP2
0x3a2 MSTORE
0x3a3 SWAP3
0x3a4 SWAP2
0x3a5 DUP4
0x3a6 ADD
0x3a7 DUP3
0x3a8 DUP3
0x3a9 DUP1
0x3aa ISZERO
0x3ab PUSH2 0x340
0x3ae JUMPI
---
0x36f: JUMPDEST 
0x370: V292 = 0x3
0x373: V293 = S[0x3]
0x374: V294 = 0x40
0x377: V295 = M[0x40]
0x378: V296 = 0x20
0x37a: V297 = 0x2
0x37c: V298 = 0x1
0x37f: V299 = AND V293 0x1
0x380: V300 = ISZERO V299
0x381: V301 = 0x100
0x384: V302 = MUL 0x100 V300
0x385: V303 = 0x0
0x387: V304 = NOT 0x0
0x388: V305 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V302
0x38b: V306 = AND V293 V305
0x38f: V307 = DIV V306 0x2
0x390: V308 = 0x1f
0x393: V309 = ADD V307 0x1f
0x396: V310 = DIV V309 0x20
0x398: V311 = MUL 0x20 V310
0x39a: V312 = ADD V295 V311
0x39c: V313 = ADD 0x20 V312
0x39f: M[0x40] = V313
0x3a2: M[V295] = V307
0x3a6: V314 = ADD V295 0x20
0x3aa: V315 = ISZERO V307
0x3ab: V316 = 0x340
0x3ae: JUMPI 0x340 V315
---
Entry stack: [V13, 0x8e]
Stack pops: 0
Stack additions: [V295, 0x3, V307, V314, 0x3, V307]
Exit stack: [V13, 0x8e, V295, 0x3, V307, V314, 0x3, V307]

================================

Block 0x3af
[0x3af:0x3b6]
---
Predecessors: [0x36f]
Successors: [0x315, 0x3b7]
---
0x3af DUP1
0x3b0 PUSH1 0x1f
0x3b2 LT
0x3b3 PUSH2 0x315
0x3b6 JUMPI
---
0x3b0: V317 = 0x1f
0x3b2: V318 = LT 0x1f V307
0x3b3: V319 = 0x315
0x3b6: JUMPI 0x315 V318
---
Entry stack: [V13, 0x8e, V295, 0x3, V307, V314, 0x3, V307]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x8e, V295, 0x3, V307, V314, 0x3, V307]

================================

Block 0x3b7
[0x3b7:0x3c9]
---
Predecessors: [0x3af]
Successors: [0x340]
---
0x3b7 PUSH2 0x100
0x3ba DUP1
0x3bb DUP4
0x3bc SLOAD
0x3bd DIV
0x3be MUL
0x3bf DUP4
0x3c0 MSTORE
0x3c1 SWAP2
0x3c2 PUSH1 0x20
0x3c4 ADD
0x3c5 SWAP2
0x3c6 PUSH2 0x340
0x3c9 JUMP
---
0x3b7: V320 = 0x100
0x3bc: V321 = S[0x3]
0x3bd: V322 = DIV V321 0x100
0x3be: V323 = MUL V322 0x100
0x3c0: M[V314] = V323
0x3c2: V324 = 0x20
0x3c4: V325 = ADD 0x20 V314
0x3c6: V326 = 0x340
0x3c9: JUMP 0x340
---
Entry stack: [V13, 0x8e, V295, 0x3, V307, V314, 0x3, V307]
Stack pops: 3
Stack additions: [V325, S1, S0]
Exit stack: [V13, 0x8e, V295, 0x3, V307, V325, 0x3, V307]

================================

Block 0x3ca
[0x3ca:0x3d9]
---
Predecessors: [0x181]
Successors: [0x3da, 0x3de]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x0
0x3cd PUSH1 0x60
0x3cf PUSH1 0x40
0x3d1 PUSH1 0x44
0x3d3 CALLDATASIZE
0x3d4 LT
0x3d5 ISZERO
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V327 = 0x0
0x3cd: V328 = 0x60
0x3cf: V329 = 0x40
0x3d1: V330 = 0x44
0x3d3: V331 = CALLDATASIZE
0x3d4: V332 = LT V331 0x44
0x3d5: V333 = ISZERO V332
0x3d6: V334 = 0x3de
0x3d9: JUMPI 0x3de V333
---
Entry stack: [V13, 0x199, V133, V135]
Stack pops: 0
Stack additions: [0x0, 0x60, 0x40]
Exit stack: [V13, 0x199, V133, V135, 0x0, 0x60, 0x40]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x3ca]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V335 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x199, V133, V135, 0x0, 0x60, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x199, V133, V135, 0x0, 0x60, 0x40]

================================

Block 0x3de
[0x3de:0x3e6]
---
Predecessors: [0x3ca]
Successors: [0x694]
---
0x3de JUMPDEST
0x3df PUSH2 0x3e7
0x3e2 DUP6
0x3e3 PUSH2 0x694
0x3e6 JUMP
---
0x3de: JUMPDEST 
0x3df: V336 = 0x3e7
0x3e3: V337 = 0x694
0x3e6: JUMP 0x694
---
Entry stack: [V13, 0x199, V133, V135, 0x0, 0x60, 0x40]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x3e7, S4]
Exit stack: [V13, 0x199, V133, V135, 0x0, 0x60, 0x40, 0x3e7, V133]

================================

Block 0x3e7
[0x3e7:0x3ec]
---
Predecessors: [0x6ae]
Successors: [0x3ed, 0x3fe]
---
0x3e7 JUMPDEST
0x3e8 ISZERO
0x3e9 PUSH2 0x3fe
0x3ec JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V338 = ISZERO {0x0, 0x1}
0x3e9: V339 = 0x3fe
0x3ec: JUMPI 0x3fe V338
---
Entry stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, {0x0, 0x40}, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, {0x0, 0x40}]

================================

Block 0x3ed
[0x3ed:0x3f6]
---
Predecessors: [0x3e7]
Successors: [0x6b4]
---
0x3ed PUSH2 0x3f7
0x3f0 DUP6
0x3f1 DUP6
0x3f2 DUP5
0x3f3 PUSH2 0x6b4
0x3f6 JUMP
---
0x3ed: V340 = 0x3f7
0x3f3: V341 = 0x6b4
0x3f6: JUMP 0x6b4
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x3f7, S4, S3, S1]
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}, 0x3f7, S4, S3, {0x0, 0x60}]

================================

Block 0x3f7
[0x3f7:0x3fd]
---
Predecessors: [0x834, 0x97f]
Successors: [0x409]
---
0x3f7 JUMPDEST
0x3f8 SWAP3
0x3f9 POP
0x3fa PUSH2 0x409
0x3fd JUMP
---
0x3f7: JUMPDEST 
0x3fa: V342 = 0x409
0x3fd: JUMP 0x409
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V13, S8, S7, S6, S5, S4, 0x1, S2, S1]

================================

Block 0x3fe
[0x3fe:0x408]
---
Predecessors: [0x3e7]
Successors: [0x8e6]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x3f7
0x402 DUP6
0x403 DUP6
0x404 DUP5
0x405 PUSH2 0x8e6
0x408 JUMP
---
0x3fe: JUMPDEST 
0x3ff: V343 = 0x3f7
0x405: V344 = 0x8e6
0x408: JUMP 0x8e6
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x3f7, S4, S3, S1]
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}, 0x3f7, S4, S3, {0x0, 0x60}]

================================

Block 0x409
[0x409:0x410]
---
Predecessors: [0x3f7]
Successors: [0x199]
---
0x409 JUMPDEST
0x40a POP
0x40b POP
0x40c SWAP3
0x40d SWAP2
0x40e POP
0x40f POP
0x410 JUMP
---
0x409: JUMPDEST 
0x410: JUMP S5
---
Entry stack: [V13, S7, S6, S5, S4, S3, 0x1, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V13, S7, S6, 0x1]

================================

Block 0x411
[0x411:0x41e]
---
Predecessors: [0x1b9]
Successors: [0x41f, 0x423]
---
0x411 JUMPDEST
0x412 PUSH1 0x0
0x414 PUSH1 0x40
0x416 PUSH1 0x44
0x418 CALLDATASIZE
0x419 LT
0x41a ISZERO
0x41b PUSH2 0x423
0x41e JUMPI
---
0x411: JUMPDEST 
0x412: V345 = 0x0
0x414: V346 = 0x40
0x416: V347 = 0x44
0x418: V348 = CALLDATASIZE
0x419: V349 = LT V348 0x44
0x41a: V350 = ISZERO V349
0x41b: V351 = 0x423
0x41e: JUMPI 0x423 V350
---
Entry stack: [V13, 0x199, V170, V172, V150]
Stack pops: 0
Stack additions: [0x0, 0x40]
Exit stack: [V13, 0x199, V170, V172, V150, 0x0, 0x40]

================================

Block 0x41f
[0x41f:0x422]
---
Predecessors: [0x411]
Successors: []
---
0x41f PUSH1 0x0
0x421 DUP1
0x422 REVERT
---
0x41f: V352 = 0x0
0x422: REVERT 0x0 0x0
---
Entry stack: [V13, 0x199, V170, V172, V150, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x199, V170, V172, V150, 0x0, 0x40]

================================

Block 0x423
[0x423:0x42b]
---
Predecessors: [0x411]
Successors: [0x694]
---
0x423 JUMPDEST
0x424 PUSH2 0x42c
0x427 DUP6
0x428 PUSH2 0x694
0x42b JUMP
---
0x423: JUMPDEST 
0x424: V353 = 0x42c
0x428: V354 = 0x694
0x42b: JUMP 0x694
---
Entry stack: [V13, 0x199, V170, V172, V150, 0x0, 0x40]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x42c, S4]
Exit stack: [V13, 0x199, V170, V172, V150, 0x0, 0x40, 0x42c, V170]

================================

Block 0x42c
[0x42c:0x431]
---
Predecessors: [0x6ae]
Successors: [0x432, 0x443]
---
0x42c JUMPDEST
0x42d ISZERO
0x42e PUSH2 0x443
0x431 JUMPI
---
0x42c: JUMPDEST 
0x42d: V355 = ISZERO {0x0, 0x1}
0x42e: V356 = 0x443
0x431: JUMPI 0x443 V355
---
Entry stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, {0x0, 0x40}, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, {0x0, 0x40}]

================================

Block 0x432
[0x432:0x43b]
---
Predecessors: [0x42c]
Successors: [0x6b4]
---
0x432 PUSH2 0x43c
0x435 DUP6
0x436 DUP6
0x437 DUP6
0x438 PUSH2 0x6b4
0x43b JUMP
---
0x432: V357 = 0x43c
0x438: V358 = 0x6b4
0x43b: JUMP 0x6b4
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x43c, S4, S3, S2]
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}, 0x43c, S4, S3, S2]

================================

Block 0x43c
[0x43c:0x442]
---
Predecessors: [0x834, 0x97f]
Successors: [0x44e]
---
0x43c JUMPDEST
0x43d SWAP2
0x43e POP
0x43f PUSH2 0x44e
0x442 JUMP
---
0x43c: JUMPDEST 
0x43f: V359 = 0x44e
0x442: JUMP 0x44e
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x443
[0x443:0x44d]
---
Predecessors: [0x42c]
Successors: [0x8e6]
---
0x443 JUMPDEST
0x444 PUSH2 0x43c
0x447 DUP6
0x448 DUP6
0x449 DUP6
0x44a PUSH2 0x8e6
0x44d JUMP
---
0x443: JUMPDEST 
0x444: V360 = 0x43c
0x44a: V361 = 0x8e6
0x44d: JUMP 0x8e6
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x43c, S4, S3, S2]
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}, 0x43c, S4, S3, S2]

================================

Block 0x44e
[0x44e:0x455]
---
Predecessors: [0x43c]
Successors: [0x199]
---
0x44e JUMPDEST
0x44f POP
0x450 SWAP4
0x451 SWAP3
0x452 POP
0x453 POP
0x454 POP
0x455 JUMP
---
0x44e: JUMPDEST 
0x455: JUMP S5
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V13, S7, S6, 0x1]

================================

Block 0x456
[0x456:0x461]
---
Predecessors: [0x222]
Successors: [0x694]
---
0x456 JUMPDEST
0x457 PUSH1 0x0
0x459 DUP1
0x45a PUSH2 0x462
0x45d DUP7
0x45e PUSH2 0x694
0x461 JUMP
---
0x456: JUMPDEST 
0x457: V362 = 0x0
0x45a: V363 = 0x462
0x45e: V364 = 0x694
0x461: JUMP 0x694
---
Entry stack: [V13, 0x199, V203, V205, V183, V211]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x0, 0x462, S3]
Exit stack: [V13, 0x199, V203, V205, V183, V211, 0x0, 0x0, 0x462, V203]

================================

Block 0x462
[0x462:0x467]
---
Predecessors: [0x6ae]
Successors: [0x468, 0x67d]
---
0x462 JUMPDEST
0x463 ISZERO
0x464 PUSH2 0x67d
0x467 JUMPI
---
0x462: JUMPDEST 
0x463: V365 = ISZERO {0x0, 0x1}
0x464: V366 = 0x67d
0x467: JUMPI 0x67d V365
---
Entry stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, {0x0, 0x40}, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, {0x0, 0x60}, {0x0, 0x40}]

================================

Block 0x468
[0x468:0x470]
---
Predecessors: [0x462]
Successors: [0x354]
---
0x468 DUP5
0x469 PUSH2 0x471
0x46c CALLER
0x46d PUSH2 0x354
0x470 JUMP
---
0x469: V367 = 0x471
0x46c: V368 = CALLER
0x46d: V369 = 0x354
0x470: JUMP 0x354
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x471, V368]
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}, S4, 0x471, V368]

================================

Block 0x471
[0x471:0x477]
---
Predecessors: [0x354]
Successors: [0x478, 0x47c]
---
0x471 JUMPDEST
0x472 LT
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x471: JUMPDEST 
0x472: V370 = LT V291 S1
0x473: V371 = ISZERO V370
0x474: V372 = 0x47c
0x477: JUMPI 0x47c V371
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x471]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V373 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]

================================

Block 0x47c
[0x47c:0x487]
---
Predecessors: [0x471]
Successors: [0x354]
---
0x47c JUMPDEST
0x47d PUSH2 0x48e
0x480 PUSH2 0x488
0x483 CALLER
0x484 PUSH2 0x354
0x487 JUMP
---
0x47c: JUMPDEST 
0x47d: V374 = 0x48e
0x480: V375 = 0x488
0x483: V376 = CALLER
0x484: V377 = 0x354
0x487: JUMP 0x354
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]
Stack pops: 0
Stack additions: [0x48e, 0x488, V376]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}, 0x48e, 0x488, V376]

================================

Block 0x488
[0x488:0x48d]
---
Predecessors: [0x354]
Successors: [0xa30]
---
0x488 JUMPDEST
0x489 DUP7
0x48a PUSH2 0xa30
0x48d JUMP
---
0x488: JUMPDEST 
0x48a: V378 = 0xa30
0x48d: JUMP 0xa30
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291, S6]

================================

Block 0x48e
[0x48e:0x4a9]
---
Predecessors: [0xa3c]
Successors: [0x354]
---
0x48e JUMPDEST
0x48f CALLER
0x490 PUSH1 0x0
0x492 SWAP1
0x493 DUP2
0x494 MSTORE
0x495 PUSH1 0x1
0x497 PUSH1 0x20
0x499 MSTORE
0x49a PUSH1 0x40
0x49c SWAP1
0x49d SHA3
0x49e SSTORE
0x49f PUSH2 0x4b0
0x4a2 PUSH2 0x4aa
0x4a5 DUP8
0x4a6 PUSH2 0x354
0x4a9 JUMP
---
0x48e: JUMPDEST 
0x48f: V379 = CALLER
0x490: V380 = 0x0
0x494: M[0x0] = V379
0x495: V381 = 0x1
0x497: V382 = 0x20
0x499: M[0x20] = 0x1
0x49a: V383 = 0x40
0x49d: V384 = SHA3 0x0 0x40
0x49e: S[V384] = V808
0x49f: V385 = 0x4b0
0x4a2: V386 = 0x4aa
0x4a6: V387 = 0x354
0x4a9: JUMP 0x354
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, V808]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0x4b0, 0x4aa, S6]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, 0x4b0, 0x4aa, S6]

================================

Block 0x4aa
[0x4aa:0x4af]
---
Predecessors: [0x354]
Successors: [0xa42]
---
0x4aa JUMPDEST
0x4ab DUP7
0x4ac PUSH2 0xa42
0x4af JUMP
---
0x4aa: JUMPDEST 
0x4ac: V388 = 0xa42
0x4af: JUMP 0xa42
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291, S6]

================================

Block 0x4b0
[0x4b0:0x4e5]
---
Predecessors: [0xa3c, 0xa5f]
Successors: [0x4e6]
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x1
0x4b3 PUSH1 0xa0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 SUB
0x4b9 DUP8
0x4ba AND
0x4bb PUSH1 0x0
0x4bd DUP2
0x4be DUP2
0x4bf MSTORE
0x4c0 PUSH1 0x1
0x4c2 PUSH1 0x20
0x4c4 SWAP1
0x4c5 DUP2
0x4c6 MSTORE
0x4c7 PUSH1 0x40
0x4c9 DUP1
0x4ca DUP4
0x4cb SHA3
0x4cc SWAP5
0x4cd SWAP1
0x4ce SWAP5
0x4cf SSTORE
0x4d0 SWAP3
0x4d1 MLOAD
0x4d2 DUP7
0x4d3 MLOAD
0x4d4 DUP11
0x4d5 SWAP6
0x4d6 POP
0x4d7 SWAP3
0x4d8 SWAP4
0x4d9 SWAP2
0x4da SWAP3
0x4db DUP8
0x4dc SWAP3
0x4dd DUP3
0x4de SWAP2
0x4df SWAP1
0x4e0 DUP5
0x4e1 ADD
0x4e2 SWAP1
0x4e3 DUP1
0x4e4 DUP4
0x4e5 DUP4
---
0x4b0: JUMPDEST 
0x4b1: V389 = 0x1
0x4b3: V390 = 0xa0
0x4b5: V391 = 0x2
0x4b7: V392 = EXP 0x2 0xa0
0x4b8: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ba: V394 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V395 = 0x0
0x4bf: M[0x0] = V394
0x4c0: V396 = 0x1
0x4c2: V397 = 0x20
0x4c6: M[0x20] = 0x1
0x4c7: V398 = 0x40
0x4cb: V399 = SHA3 0x0 0x40
0x4cf: S[V399] = S0
0x4d1: V400 = M[0x40]
0x4d3: V401 = M[S3]
0x4e1: V402 = ADD S3 0x20
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S6, V394, 0x0, S3, V400, V400, V402, V401, V401, V400, V402]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S6, V394, 0x0, S3, V400, V400, V402, V401, V401, V400, V402]

================================

Block 0x4e6
[0x4e6:0x4ee]
---
Predecessors: [0x4b0, 0x4ef]
Successors: [0x4ef, 0x505]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x20
0x4e9 DUP4
0x4ea LT
0x4eb PUSH2 0x505
0x4ee JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V403 = 0x20
0x4ea: V404 = LT S2 0x20
0x4eb: V405 = 0x505
0x4ee: JUMPI 0x505 V404
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V394, 0x0, S7, V400, V400, V402, V401, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V394, 0x0, S7, V400, V400, V402, V401, S2, S1, S0]

================================

Block 0x4ef
[0x4ef:0x504]
---
Predecessors: [0x4e6]
Successors: [0x4e6]
---
0x4ef DUP1
0x4f0 MLOAD
0x4f1 DUP3
0x4f2 MSTORE
0x4f3 PUSH1 0x1f
0x4f5 NOT
0x4f6 SWAP1
0x4f7 SWAP3
0x4f8 ADD
0x4f9 SWAP2
0x4fa PUSH1 0x20
0x4fc SWAP2
0x4fd DUP3
0x4fe ADD
0x4ff SWAP2
0x500 ADD
0x501 PUSH2 0x4e6
0x504 JUMP
---
0x4f0: V406 = M[S0]
0x4f2: M[S1] = V406
0x4f3: V407 = 0x1f
0x4f5: V408 = NOT 0x1f
0x4f8: V409 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4fa: V410 = 0x20
0x4fe: V411 = ADD 0x20 S1
0x500: V412 = ADD 0x20 S0
0x501: V413 = 0x4e6
0x504: JUMP 0x4e6
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V394, 0x0, S7, V400, V400, V402, V401, S2, S1, S0]
Stack pops: 3
Stack additions: [V409, V411, V412]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V394, 0x0, S7, V400, V400, V402, V401, V409, V411, V412]

================================

Block 0x505
[0x505:0x57e]
---
Predecessors: [0x4e6]
Successors: [0x57f]
---
0x505 JUMPDEST
0x506 PUSH1 0x1
0x508 DUP4
0x509 PUSH1 0x20
0x50b SUB
0x50c PUSH2 0x100
0x50f EXP
0x510 SUB
0x511 DUP1
0x512 NOT
0x513 DUP3
0x514 MLOAD
0x515 AND
0x516 DUP2
0x517 DUP5
0x518 MLOAD
0x519 AND
0x51a DUP1
0x51b DUP3
0x51c OR
0x51d DUP6
0x51e MSTORE
0x51f POP
0x520 POP
0x521 POP
0x522 POP
0x523 POP
0x524 POP
0x525 SWAP1
0x526 POP
0x527 ADD
0x528 SWAP2
0x529 POP
0x52a POP
0x52b PUSH1 0x40
0x52d MLOAD
0x52e DUP1
0x52f SWAP2
0x530 SUB
0x531 SWAP1
0x532 SHA3
0x533 PUSH1 0xe0
0x535 PUSH1 0x2
0x537 EXP
0x538 SWAP1
0x539 DIV
0x53a SWAP1
0x53b CALLER
0x53c DUP9
0x53d DUP9
0x53e PUSH1 0x40
0x540 MLOAD
0x541 DUP6
0x542 PUSH4 0xffffffff
0x547 AND
0x548 PUSH1 0xe0
0x54a PUSH1 0x2
0x54c EXP
0x54d MUL
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x4
0x552 ADD
0x553 DUP1
0x554 DUP5
0x555 PUSH1 0x1
0x557 PUSH1 0xa0
0x559 PUSH1 0x2
0x55b EXP
0x55c SUB
0x55d AND
0x55e PUSH1 0x1
0x560 PUSH1 0xa0
0x562 PUSH1 0x2
0x564 EXP
0x565 SUB
0x566 AND
0x567 DUP2
0x568 MSTORE
0x569 PUSH1 0x20
0x56b ADD
0x56c DUP4
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x20
0x571 ADD
0x572 DUP3
0x573 DUP1
0x574 MLOAD
0x575 SWAP1
0x576 PUSH1 0x20
0x578 ADD
0x579 SWAP1
0x57a DUP1
0x57b DUP4
0x57c DUP4
0x57d PUSH1 0x0
---
0x505: JUMPDEST 
0x506: V414 = 0x1
0x509: V415 = 0x20
0x50b: V416 = SUB 0x20 S2
0x50c: V417 = 0x100
0x50f: V418 = EXP 0x100 V416
0x510: V419 = SUB V418 0x1
0x512: V420 = NOT V419
0x514: V421 = M[S0]
0x515: V422 = AND V421 V420
0x518: V423 = M[S1]
0x519: V424 = AND V423 V419
0x51c: V425 = OR V422 V424
0x51e: M[S1] = V425
0x527: V426 = ADD V401 V400
0x52b: V427 = 0x40
0x52d: V428 = M[0x40]
0x530: V429 = SUB V426 V428
0x532: V430 = SHA3 V428 V429
0x533: V431 = 0xe0
0x535: V432 = 0x2
0x537: V433 = EXP 0x2 0xe0
0x539: V434 = DIV V430 0x100000000000000000000000000000000000000000000000000000000
0x53b: V435 = CALLER
0x53e: V436 = 0x40
0x540: V437 = M[0x40]
0x542: V438 = 0xffffffff
0x547: V439 = AND 0xffffffff V434
0x548: V440 = 0xe0
0x54a: V441 = 0x2
0x54c: V442 = EXP 0x2 0xe0
0x54d: V443 = MUL 0x100000000000000000000000000000000000000000000000000000000 V439
0x54f: M[V437] = V443
0x550: V444 = 0x4
0x552: V445 = ADD 0x4 V437
0x555: V446 = 0x1
0x557: V447 = 0xa0
0x559: V448 = 0x2
0x55b: V449 = EXP 0x2 0xa0
0x55c: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55d: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x55e: V452 = 0x1
0x560: V453 = 0xa0
0x562: V454 = 0x2
0x564: V455 = EXP 0x2 0xa0
0x565: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x566: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x568: M[V445] = V457
0x569: V458 = 0x20
0x56b: V459 = ADD 0x20 V445
0x56e: M[V459] = S14
0x56f: V460 = 0x20
0x571: V461 = ADD 0x20 V459
0x574: V462 = M[S13]
0x576: V463 = 0x20
0x578: V464 = ADD 0x20 S13
0x57d: V465 = 0x0
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V394, 0x0, S7, V400, V400, V402, V401, S2, S1, S0]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, V434, S8, V435, S14, S13, V445, V461, V464, V462, V462, V461, V464, 0x0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V394, V434, 0x0, V435, S14, S13, V445, V461, V464, V462, V462, V461, V464, 0x0]

================================

Block 0x57f
[0x57f:0x587]
---
Predecessors: [0x505, 0x588]
Successors: [0x588, 0x597]
---
0x57f JUMPDEST
0x580 DUP4
0x581 DUP2
0x582 LT
0x583 ISZERO
0x584 PUSH2 0x597
0x587 JUMPI
---
0x57f: JUMPDEST 
0x582: V466 = LT S0 V462
0x583: V467 = ISZERO V466
0x584: V468 = 0x597
0x587: JUMPI 0x597 V467
---
Entry stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V394, V434, 0x0, V435, S9, S8, V445, V461, V464, V462, V462, V461, V464, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V394, V434, 0x0, V435, S9, S8, V445, V461, V464, V462, V462, V461, V464, S0]

================================

Block 0x588
[0x588:0x596]
---
Predecessors: [0x57f]
Successors: [0x57f]
---
0x588 DUP2
0x589 DUP2
0x58a ADD
0x58b MLOAD
0x58c DUP4
0x58d DUP3
0x58e ADD
0x58f MSTORE
0x590 PUSH1 0x20
0x592 ADD
0x593 PUSH2 0x57f
0x596 JUMP
---
0x58a: V469 = ADD S0 V464
0x58b: V470 = M[V469]
0x58e: V471 = ADD S0 V461
0x58f: M[V471] = V470
0x590: V472 = 0x20
0x592: V473 = ADD 0x20 S0
0x593: V474 = 0x57f
0x596: JUMP 0x57f
---
Entry stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V394, V434, 0x0, V435, S9, S8, V445, V461, V464, V462, V462, V461, V464, S0]
Stack pops: 3
Stack additions: [S2, S1, V473]
Exit stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V394, V434, 0x0, V435, S9, S8, V445, V461, V464, V462, V462, V461, V464, V473]

================================

Block 0x597
[0x597:0x5aa]
---
Predecessors: [0x57f]
Successors: [0x5ab, 0x5c4]
---
0x597 JUMPDEST
0x598 POP
0x599 POP
0x59a POP
0x59b POP
0x59c SWAP1
0x59d POP
0x59e SWAP1
0x59f DUP2
0x5a0 ADD
0x5a1 SWAP1
0x5a2 PUSH1 0x1f
0x5a4 AND
0x5a5 DUP1
0x5a6 ISZERO
0x5a7 PUSH2 0x5c4
0x5aa JUMPI
---
0x597: JUMPDEST 
0x5a0: V475 = ADD V462 V461
0x5a2: V476 = 0x1f
0x5a4: V477 = AND 0x1f V462
0x5a6: V478 = ISZERO V477
0x5a7: V479 = 0x5c4
0x5aa: JUMPI 0x5c4 V478
---
Entry stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V394, V434, 0x0, V435, S9, S8, V445, V461, V464, V462, V462, V461, V464, S0]
Stack pops: 7
Stack additions: [V475, V477]
Exit stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V394, V434, 0x0, V435, S9, S8, V445, V475, V477]

================================

Block 0x5ab
[0x5ab:0x5c3]
---
Predecessors: [0x597]
Successors: [0x5c4]
---
0x5ab DUP1
0x5ac DUP3
0x5ad SUB
0x5ae DUP1
0x5af MLOAD
0x5b0 PUSH1 0x1
0x5b2 DUP4
0x5b3 PUSH1 0x20
0x5b5 SUB
0x5b6 PUSH2 0x100
0x5b9 EXP
0x5ba SUB
0x5bb NOT
0x5bc AND
0x5bd DUP2
0x5be MSTORE
0x5bf PUSH1 0x20
0x5c1 ADD
0x5c2 SWAP2
0x5c3 POP
---
0x5ad: V480 = SUB V475 V477
0x5af: V481 = M[V480]
0x5b0: V482 = 0x1
0x5b3: V483 = 0x20
0x5b5: V484 = SUB 0x20 V477
0x5b6: V485 = 0x100
0x5b9: V486 = EXP 0x100 V484
0x5ba: V487 = SUB V486 0x1
0x5bb: V488 = NOT V487
0x5bc: V489 = AND V488 V481
0x5be: M[V480] = V489
0x5bf: V490 = 0x20
0x5c1: V491 = ADD 0x20 V480
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V394, V434, 0x0, V435, S4, S3, V445, V475, V477]
Stack pops: 2
Stack additions: [V491, S0]
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V394, V434, 0x0, V435, S4, S3, V445, V491, V477]

================================

Block 0x5c4
[0x5c4:0x5ed]
---
Predecessors: [0x597, 0x5ab]
Successors: [0x5ee]
---
0x5c4 JUMPDEST
0x5c5 POP
0x5c6 SWAP4
0x5c7 POP
0x5c8 POP
0x5c9 POP
0x5ca POP
0x5cb PUSH1 0x0
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 DUP1
0x5d1 DUP4
0x5d2 SUB
0x5d3 DUP2
0x5d4 DUP6
0x5d5 DUP9
0x5d6 GAS
0x5d7 CALL
0x5d8 SWAP4
0x5d9 POP
0x5da POP
0x5db POP
0x5dc POP
0x5dd POP
0x5de DUP4
0x5df PUSH1 0x40
0x5e1 MLOAD
0x5e2 DUP1
0x5e3 DUP3
0x5e4 DUP1
0x5e5 MLOAD
0x5e6 SWAP1
0x5e7 PUSH1 0x20
0x5e9 ADD
0x5ea SWAP1
0x5eb DUP1
0x5ec DUP4
0x5ed DUP4
---
0x5c4: JUMPDEST 
0x5cb: V492 = 0x0
0x5cd: V493 = 0x40
0x5cf: V494 = M[0x40]
0x5d2: V495 = SUB S1 V494
0x5d6: V496 = GAS
0x5d7: V497 = CALL V496 V394 0x0 V494 V495 V494 0x0
0x5df: V498 = 0x40
0x5e1: V499 = M[0x40]
0x5e5: V500 = M[S12]
0x5e7: V501 = 0x20
0x5e9: V502 = ADD 0x20 S12
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V394, V434, 0x0, V435, S4, S3, V445, S1, V477]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S12, V499, V499, V502, V500, V500, V499, V502]
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S12, V499, V499, V502, V500, V500, V499, V502]

================================

Block 0x5ee
[0x5ee:0x5f6]
---
Predecessors: [0x5c4, 0x5f7]
Successors: [0x5f7, 0x60d]
---
0x5ee JUMPDEST
0x5ef PUSH1 0x20
0x5f1 DUP4
0x5f2 LT
0x5f3 PUSH2 0x60d
0x5f6 JUMPI
---
0x5ee: JUMPDEST 
0x5ef: V503 = 0x20
0x5f2: V504 = LT S2 0x20
0x5f3: V505 = 0x60d
0x5f6: JUMPI 0x60d V504
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5f7
[0x5f7:0x60c]
---
Predecessors: [0x5ee]
Successors: [0x5ee]
---
0x5f7 DUP1
0x5f8 MLOAD
0x5f9 DUP3
0x5fa MSTORE
0x5fb PUSH1 0x1f
0x5fd NOT
0x5fe SWAP1
0x5ff SWAP3
0x600 ADD
0x601 SWAP2
0x602 PUSH1 0x20
0x604 SWAP2
0x605 DUP3
0x606 ADD
0x607 SWAP2
0x608 ADD
0x609 PUSH2 0x5ee
0x60c JUMP
---
0x5f8: V506 = M[S0]
0x5fa: M[S1] = V506
0x5fb: V507 = 0x1f
0x5fd: V508 = NOT 0x1f
0x600: V509 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x602: V510 = 0x20
0x606: V511 = ADD 0x20 S1
0x608: V512 = ADD 0x20 S0
0x609: V513 = 0x5ee
0x60c: JUMP 0x5ee
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V509, V511, V512]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V509, V511, V512]

================================

Block 0x60d
[0x60d:0x67c]
---
Predecessors: [0x5ee]
Successors: [0x68b]
---
0x60d JUMPDEST
0x60e MLOAD
0x60f DUP2
0x610 MLOAD
0x611 PUSH1 0x20
0x613 SWAP4
0x614 DUP5
0x615 SUB
0x616 PUSH2 0x100
0x619 EXP
0x61a PUSH1 0x0
0x61c NOT
0x61d ADD
0x61e DUP1
0x61f NOT
0x620 SWAP1
0x621 SWAP3
0x622 AND
0x623 SWAP2
0x624 AND
0x625 OR
0x626 SWAP1
0x627 MSTORE
0x628 PUSH1 0x40
0x62a DUP1
0x62b MLOAD
0x62c SWAP3
0x62d SWAP1
0x62e SWAP5
0x62f ADD
0x630 DUP3
0x631 SWAP1
0x632 SUB
0x633 DUP3
0x634 SHA3
0x635 DUP12
0x636 DUP4
0x637 MSTORE
0x638 SWAP4
0x639 MLOAD
0x63a SWAP4
0x63b SWAP6
0x63c POP
0x63d PUSH1 0x1
0x63f PUSH1 0xa0
0x641 PUSH1 0x2
0x643 EXP
0x644 SUB
0x645 DUP13
0x646 AND
0x647 SWAP5
0x648 POP
0x649 CALLER
0x64a SWAP4
0x64b PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x66c SWAP4
0x66d POP
0x66e SWAP2
0x66f DUP3
0x670 SWAP1
0x671 SUB
0x672 ADD
0x673 SWAP1
0x674 LOG4
0x675 PUSH1 0x1
0x677 SWAP2
0x678 POP
0x679 PUSH2 0x68b
0x67c JUMP
---
0x60d: JUMPDEST 
0x60e: V514 = M[S0]
0x610: V515 = M[S1]
0x611: V516 = 0x20
0x615: V517 = SUB 0x20 S2
0x616: V518 = 0x100
0x619: V519 = EXP 0x100 V517
0x61a: V520 = 0x0
0x61c: V521 = NOT 0x0
0x61d: V522 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V519
0x61f: V523 = NOT V522
0x622: V524 = AND V514 V523
0x624: V525 = AND V522 V515
0x625: V526 = OR V525 V524
0x627: M[S1] = V526
0x628: V527 = 0x40
0x62b: V528 = M[0x40]
0x62f: V529 = ADD S5 S3
0x632: V530 = SUB V529 V528
0x634: V531 = SHA3 V528 V530
0x637: M[V528] = S12
0x639: V532 = M[0x40]
0x63d: V533 = 0x1
0x63f: V534 = 0xa0
0x641: V535 = 0x2
0x643: V536 = EXP 0x2 0xa0
0x644: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x646: V538 = AND S13 0xffffffffffffffffffffffffffffffffffffffff
0x649: V539 = CALLER
0x64b: V540 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x671: V541 = SUB V528 V532
0x672: V542 = ADD V541 0x20
0x674: LOG V532 V542 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V539 V538 V531
0x675: V543 = 0x1
0x679: V544 = 0x68b
0x67c: JUMP 0x68b
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, 0x1, S8]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x1, S8]

================================

Block 0x67d
[0x67d:0x687]
---
Predecessors: [0x462]
Successors: [0x8e6]
---
0x67d JUMPDEST
0x67e PUSH2 0x688
0x681 DUP7
0x682 DUP7
0x683 DUP7
0x684 PUSH2 0x8e6
0x687 JUMP
---
0x67d: JUMPDEST 
0x67e: V545 = 0x688
0x684: V546 = 0x8e6
0x687: JUMP 0x8e6
---
Entry stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x688, S5, S4, S3]
Exit stack: [V13, S6, S5, S4, S3, S2, {0x0, 0x60}, {0x0, 0x40}, 0x688, S5, S4, S3]

================================

Block 0x688
[0x688:0x68a]
---
Predecessors: [0x97f]
Successors: [0x68b]
---
0x688 JUMPDEST
0x689 SWAP2
0x68a POP
---
0x688: JUMPDEST 
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x68b
[0x68b:0x693]
---
Predecessors: [0x60d, 0x688]
Successors: [0x199]
---
0x68b JUMPDEST
0x68c POP
0x68d SWAP5
0x68e SWAP4
0x68f POP
0x690 POP
0x691 POP
0x692 POP
0x693 JUMP
---
0x68b: JUMPDEST 
0x693: JUMP S6
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, 0x1]

================================

Block 0x694
[0x694:0x6a0]
---
Predecessors: [0x3de, 0x423, 0x456]
Successors: [0x6a1, 0x6a9]
---
0x694 JUMPDEST
0x695 PUSH1 0x0
0x697 DUP2
0x698 EXTCODESIZE
0x699 DUP2
0x69a DUP2
0x69b GT
0x69c ISZERO
0x69d PUSH2 0x6a9
0x6a0 JUMPI
---
0x694: JUMPDEST 
0x695: V547 = 0x0
0x698: V548 = EXTCODESIZE S0
0x69b: V549 = GT V548 0x0
0x69c: V550 = ISZERO V549
0x69d: V551 = 0x6a9
0x6a0: JUMPI 0x6a9 V550
---
Entry stack: [V13, S8, S7, S6, S5, S4, {0x0, 0x60}, {0x0, 0x40}, {0x3e7, 0x42c, 0x462}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V548]
Exit stack: [V13, S8, S7, S6, S5, S4, {0x0, 0x60}, {0x0, 0x40}, {0x3e7, 0x42c, 0x462}, S0, 0x0, V548]

================================

Block 0x6a1
[0x6a1:0x6a8]
---
Predecessors: [0x694]
Successors: [0x6ae]
---
0x6a1 PUSH1 0x1
0x6a3 SWAP2
0x6a4 POP
0x6a5 PUSH2 0x6ae
0x6a8 JUMP
---
0x6a1: V552 = 0x1
0x6a5: V553 = 0x6ae
0x6a8: JUMP 0x6ae
---
Entry stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3e7, 0x42c, 0x462}, S2, 0x0, V548]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3e7, 0x42c, 0x462}, S2, 0x1, V548]

================================

Block 0x6a9
[0x6a9:0x6ad]
---
Predecessors: [0x694]
Successors: [0x6ae]
---
0x6a9 JUMPDEST
0x6aa PUSH1 0x0
0x6ac SWAP2
0x6ad POP
---
0x6a9: JUMPDEST 
0x6aa: V554 = 0x0
---
Entry stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3e7, 0x42c, 0x462}, S2, 0x0, V548]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3e7, 0x42c, 0x462}, S2, 0x0, V548]

================================

Block 0x6ae
[0x6ae:0x6b3]
---
Predecessors: [0x6a1, 0x6a9]
Successors: [0x3e7, 0x42c, 0x462]
---
0x6ae JUMPDEST
0x6af POP
0x6b0 SWAP2
0x6b1 SWAP1
0x6b2 POP
0x6b3 JUMP
---
0x6ae: JUMPDEST 
0x6b3: JUMP {0x3e7, 0x42c, 0x462}
---
Entry stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3e7, 0x42c, 0x462}, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x0, 0x1}]

================================

Block 0x6b4
[0x6b4:0x6c0]
---
Predecessors: [0x3ed, 0x432]
Successors: [0x354]
---
0x6b4 JUMPDEST
0x6b5 PUSH1 0x0
0x6b7 DUP1
0x6b8 DUP4
0x6b9 PUSH2 0x6c1
0x6bc CALLER
0x6bd PUSH2 0x354
0x6c0 JUMP
---
0x6b4: JUMPDEST 
0x6b5: V555 = 0x0
0x6b9: V556 = 0x6c1
0x6bc: V557 = CALLER
0x6bd: V558 = 0x354
0x6c0: JUMP 0x354
---
Entry stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3f7, 0x43c}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S1, 0x6c1, V557]
Exit stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3f7, 0x43c}, S2, S1, S0, 0x0, 0x0, S1, 0x6c1, V557]

================================

Block 0x6c1
[0x6c1:0x6c7]
---
Predecessors: [0x354]
Successors: [0x6c8, 0x6cc]
---
0x6c1 JUMPDEST
0x6c2 LT
0x6c3 ISZERO
0x6c4 PUSH2 0x6cc
0x6c7 JUMPI
---
0x6c1: JUMPDEST 
0x6c2: V559 = LT V291 S1
0x6c3: V560 = ISZERO V559
0x6c4: V561 = 0x6cc
0x6c7: JUMPI 0x6cc V560
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}]

================================

Block 0x6c8
[0x6c8:0x6cb]
---
Predecessors: [0x6c1]
Successors: []
---
0x6c8 PUSH1 0x0
0x6ca DUP1
0x6cb REVERT
---
0x6c8: V562 = 0x0
0x6cb: REVERT 0x0 0x0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]

================================

Block 0x6cc
[0x6cc:0x6d7]
---
Predecessors: [0x6c1]
Successors: [0x354]
---
0x6cc JUMPDEST
0x6cd PUSH2 0x6de
0x6d0 PUSH2 0x6d8
0x6d3 CALLER
0x6d4 PUSH2 0x354
0x6d7 JUMP
---
0x6cc: JUMPDEST 
0x6cd: V563 = 0x6de
0x6d0: V564 = 0x6d8
0x6d3: V565 = CALLER
0x6d4: V566 = 0x354
0x6d7: JUMP 0x354
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]
Stack pops: 0
Stack additions: [0x6de, 0x6d8, V565]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}, 0x6de, 0x6d8, V565]

================================

Block 0x6d8
[0x6d8:0x6dd]
---
Predecessors: [0x354]
Successors: [0xa30]
---
0x6d8 JUMPDEST
0x6d9 DUP6
0x6da PUSH2 0xa30
0x6dd JUMP
---
0x6d8: JUMPDEST 
0x6da: V567 = 0xa30
0x6dd: JUMP 0xa30
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291, S5]

================================

Block 0x6de
[0x6de:0x6f9]
---
Predecessors: [0xa3c]
Successors: [0x354]
---
0x6de JUMPDEST
0x6df CALLER
0x6e0 PUSH1 0x0
0x6e2 SWAP1
0x6e3 DUP2
0x6e4 MSTORE
0x6e5 PUSH1 0x1
0x6e7 PUSH1 0x20
0x6e9 MSTORE
0x6ea PUSH1 0x40
0x6ec SWAP1
0x6ed SHA3
0x6ee SSTORE
0x6ef PUSH2 0x700
0x6f2 PUSH2 0x6fa
0x6f5 DUP7
0x6f6 PUSH2 0x354
0x6f9 JUMP
---
0x6de: JUMPDEST 
0x6df: V568 = CALLER
0x6e0: V569 = 0x0
0x6e4: M[0x0] = V568
0x6e5: V570 = 0x1
0x6e7: V571 = 0x20
0x6e9: M[0x20] = 0x1
0x6ea: V572 = 0x40
0x6ed: V573 = SHA3 0x0 0x40
0x6ee: S[V573] = V808
0x6ef: V574 = 0x700
0x6f2: V575 = 0x6fa
0x6f6: V576 = 0x354
0x6f9: JUMP 0x354
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, V808]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x700, 0x6fa, S5]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, 0x700, 0x6fa, S5]

================================

Block 0x6fa
[0x6fa:0x6ff]
---
Predecessors: [0x354]
Successors: [0xa42]
---
0x6fa JUMPDEST
0x6fb DUP6
0x6fc PUSH2 0xa42
0x6ff JUMP
---
0x6fa: JUMPDEST 
0x6fc: V577 = 0xa42
0x6ff: JUMP 0xa42
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291, S5]

================================

Block 0x700
[0x700:0x785]
---
Predecessors: [0xa3c, 0xa5f]
Successors: [0x786]
---
0x700 JUMPDEST
0x701 PUSH1 0x1
0x703 PUSH1 0xa0
0x705 PUSH1 0x2
0x707 EXP
0x708 SUB
0x709 DUP7
0x70a AND
0x70b PUSH1 0x0
0x70d DUP2
0x70e DUP2
0x70f MSTORE
0x710 PUSH1 0x1
0x712 PUSH1 0x20
0x714 SWAP1
0x715 DUP2
0x716 MSTORE
0x717 PUSH1 0x40
0x719 DUP1
0x71a DUP4
0x71b SHA3
0x71c SWAP5
0x71d SWAP1
0x71e SWAP5
0x71f SSTORE
0x720 SWAP3
0x721 MLOAD
0x722 PUSH32 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x743 DUP2
0x744 MSTORE
0x745 CALLER
0x746 PUSH1 0x4
0x748 DUP3
0x749 ADD
0x74a DUP2
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x24
0x74f DUP4
0x750 ADD
0x751 DUP11
0x752 SWAP1
0x753 MSTORE
0x754 PUSH1 0x60
0x756 PUSH1 0x44
0x758 DUP5
0x759 ADD
0x75a SWAP1
0x75b DUP2
0x75c MSTORE
0x75d DUP10
0x75e MLOAD
0x75f PUSH1 0x64
0x761 DUP6
0x762 ADD
0x763 MSTORE
0x764 DUP10
0x765 MLOAD
0x766 DUP13
0x767 SWAP9
0x768 POP
0x769 SWAP6
0x76a SWAP7
0x76b PUSH4 0xc0ee0b8a
0x770 SWAP7
0x771 SWAP4
0x772 SWAP6
0x773 DUP13
0x774 SWAP6
0x775 DUP13
0x776 SWAP6
0x777 PUSH1 0x84
0x779 SWAP1
0x77a SWAP2
0x77b ADD
0x77c SWAP3
0x77d DUP7
0x77e ADD
0x77f SWAP2
0x780 DUP2
0x781 SWAP1
0x782 DUP5
0x783 SWAP1
0x784 DUP5
0x785 SWAP1
---
0x700: JUMPDEST 
0x701: V578 = 0x1
0x703: V579 = 0xa0
0x705: V580 = 0x2
0x707: V581 = EXP 0x2 0xa0
0x708: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V583 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x70b: V584 = 0x0
0x70f: M[0x0] = V583
0x710: V585 = 0x1
0x712: V586 = 0x20
0x716: M[0x20] = 0x1
0x717: V587 = 0x40
0x71b: V588 = SHA3 0x0 0x40
0x71f: S[V588] = S0
0x721: V589 = M[0x40]
0x722: V590 = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x744: M[V589] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x745: V591 = CALLER
0x746: V592 = 0x4
0x749: V593 = ADD V589 0x4
0x74c: M[V593] = V591
0x74d: V594 = 0x24
0x750: V595 = ADD V589 0x24
0x753: M[V595] = S4
0x754: V596 = 0x60
0x756: V597 = 0x44
0x759: V598 = ADD V589 0x44
0x75c: M[V598] = 0x60
0x75e: V599 = M[S3]
0x75f: V600 = 0x64
0x762: V601 = ADD V589 0x64
0x763: M[V601] = V599
0x765: V602 = M[S3]
0x76b: V603 = 0xc0ee0b8a
0x777: V604 = 0x84
0x77b: V605 = ADD V589 0x84
0x77e: V606 = ADD S3 0x20
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, V583, 0xc0ee0b8a, V591, S4, S3, V593, V598, V605, V606, V602, V602, V605, V606, 0x0]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S5, V583, 0xc0ee0b8a, V591, S4, S3, V593, V598, V605, V606, V602, V602, V605, V606, 0x0]

================================

Block 0x786
[0x786:0x78e]
---
Predecessors: [0x700, 0x78f]
Successors: [0x78f, 0x79e]
---
0x786 JUMPDEST
0x787 DUP4
0x788 DUP2
0x789 LT
0x78a ISZERO
0x78b PUSH2 0x79e
0x78e JUMPI
---
0x786: JUMPDEST 
0x789: V607 = LT S0 V602
0x78a: V608 = ISZERO V607
0x78b: V609 = 0x79e
0x78e: JUMPI 0x79e V608
---
Entry stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V583, 0xc0ee0b8a, V591, S10, S9, V593, V598, V605, V606, V602, V602, V605, V606, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V583, 0xc0ee0b8a, V591, S10, S9, V593, V598, V605, V606, V602, V602, V605, V606, S0]

================================

Block 0x78f
[0x78f:0x79d]
---
Predecessors: [0x786]
Successors: [0x786]
---
0x78f DUP2
0x790 DUP2
0x791 ADD
0x792 MLOAD
0x793 DUP4
0x794 DUP3
0x795 ADD
0x796 MSTORE
0x797 PUSH1 0x20
0x799 ADD
0x79a PUSH2 0x786
0x79d JUMP
---
0x791: V610 = ADD S0 V606
0x792: V611 = M[V610]
0x795: V612 = ADD S0 V605
0x796: M[V612] = V611
0x797: V613 = 0x20
0x799: V614 = ADD 0x20 S0
0x79a: V615 = 0x786
0x79d: JUMP 0x786
---
Entry stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V583, 0xc0ee0b8a, V591, S10, S9, V593, V598, V605, V606, V602, V602, V605, V606, S0]
Stack pops: 3
Stack additions: [S2, S1, V614]
Exit stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V583, 0xc0ee0b8a, V591, S10, S9, V593, V598, V605, V606, V602, V602, V605, V606, V614]

================================

Block 0x79e
[0x79e:0x7b1]
---
Predecessors: [0x786]
Successors: [0x7b2, 0x7cb]
---
0x79e JUMPDEST
0x79f POP
0x7a0 POP
0x7a1 POP
0x7a2 POP
0x7a3 SWAP1
0x7a4 POP
0x7a5 SWAP1
0x7a6 DUP2
0x7a7 ADD
0x7a8 SWAP1
0x7a9 PUSH1 0x1f
0x7ab AND
0x7ac DUP1
0x7ad ISZERO
0x7ae PUSH2 0x7cb
0x7b1 JUMPI
---
0x79e: JUMPDEST 
0x7a7: V616 = ADD V602 V605
0x7a9: V617 = 0x1f
0x7ab: V618 = AND 0x1f V602
0x7ad: V619 = ISZERO V618
0x7ae: V620 = 0x7cb
0x7b1: JUMPI 0x7cb V619
---
Entry stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V583, 0xc0ee0b8a, V591, S10, S9, V593, V598, V605, V606, V602, V602, V605, V606, S0]
Stack pops: 7
Stack additions: [V616, V618]
Exit stack: [V13, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V583, 0xc0ee0b8a, V591, S10, S9, V593, V598, V616, V618]

================================

Block 0x7b2
[0x7b2:0x7ca]
---
Predecessors: [0x79e]
Successors: [0x7cb]
---
0x7b2 DUP1
0x7b3 DUP3
0x7b4 SUB
0x7b5 DUP1
0x7b6 MLOAD
0x7b7 PUSH1 0x1
0x7b9 DUP4
0x7ba PUSH1 0x20
0x7bc SUB
0x7bd PUSH2 0x100
0x7c0 EXP
0x7c1 SUB
0x7c2 NOT
0x7c3 AND
0x7c4 DUP2
0x7c5 MSTORE
0x7c6 PUSH1 0x20
0x7c8 ADD
0x7c9 SWAP2
0x7ca POP
---
0x7b4: V621 = SUB V616 V618
0x7b6: V622 = M[V621]
0x7b7: V623 = 0x1
0x7ba: V624 = 0x20
0x7bc: V625 = SUB 0x20 V618
0x7bd: V626 = 0x100
0x7c0: V627 = EXP 0x100 V625
0x7c1: V628 = SUB V627 0x1
0x7c2: V629 = NOT V628
0x7c3: V630 = AND V629 V622
0x7c5: M[V621] = V630
0x7c6: V631 = 0x20
0x7c8: V632 = ADD 0x20 V621
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V583, 0xc0ee0b8a, V591, S5, S4, V593, V598, V616, V618]
Stack pops: 2
Stack additions: [V632, S0]
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V583, 0xc0ee0b8a, V591, S5, S4, V593, V598, V632, V618]

================================

Block 0x7cb
[0x7cb:0x7e7]
---
Predecessors: [0x79e, 0x7b2]
Successors: [0x7e8, 0x7ec]
---
0x7cb JUMPDEST
0x7cc POP
0x7cd SWAP5
0x7ce POP
0x7cf POP
0x7d0 POP
0x7d1 POP
0x7d2 POP
0x7d3 PUSH1 0x0
0x7d5 PUSH1 0x40
0x7d7 MLOAD
0x7d8 DUP1
0x7d9 DUP4
0x7da SUB
0x7db DUP2
0x7dc PUSH1 0x0
0x7de DUP8
0x7df DUP1
0x7e0 EXTCODESIZE
0x7e1 ISZERO
0x7e2 DUP1
0x7e3 ISZERO
0x7e4 PUSH2 0x7ec
0x7e7 JUMPI
---
0x7cb: JUMPDEST 
0x7d3: V633 = 0x0
0x7d5: V634 = 0x40
0x7d7: V635 = M[0x40]
0x7da: V636 = SUB S1 V635
0x7dc: V637 = 0x0
0x7e0: V638 = EXTCODESIZE V583
0x7e1: V639 = ISZERO V638
0x7e3: V640 = ISZERO V639
0x7e4: V641 = 0x7ec
0x7e7: JUMPI 0x7ec V640
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V583, 0xc0ee0b8a, V591, S5, S4, V593, V598, S1, V618]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V635, V636, V635, 0x0, S8, V639]
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V583, 0xc0ee0b8a, S1, 0x0, V635, V636, V635, 0x0, V583, V639]

================================

Block 0x7e8
[0x7e8:0x7eb]
---
Predecessors: [0x7cb]
Successors: []
---
0x7e8 PUSH1 0x0
0x7ea DUP1
0x7eb REVERT
---
0x7e8: V642 = 0x0
0x7eb: REVERT 0x0 0x0
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V583, 0xc0ee0b8a, S7, 0x0, V635, V636, V635, 0x0, V583, V639]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V583, 0xc0ee0b8a, S7, 0x0, V635, V636, V635, 0x0, V583, V639]

================================

Block 0x7ec
[0x7ec:0x7f6]
---
Predecessors: [0x7cb]
Successors: [0x7f7, 0x800]
---
0x7ec JUMPDEST
0x7ed POP
0x7ee GAS
0x7ef CALL
0x7f0 ISZERO
0x7f1 DUP1
0x7f2 ISZERO
0x7f3 PUSH2 0x800
0x7f6 JUMPI
---
0x7ec: JUMPDEST 
0x7ee: V643 = GAS
0x7ef: V644 = CALL V643 V583 0x0 V635 V636 V635 0x0
0x7f0: V645 = ISZERO V644
0x7f2: V646 = ISZERO V645
0x7f3: V647 = 0x800
0x7f6: JUMPI 0x800 V646
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V583, 0xc0ee0b8a, S7, 0x0, V635, V636, V635, 0x0, V583, V639]
Stack pops: 7
Stack additions: [V645]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V583, 0xc0ee0b8a, S7, V645]

================================

Block 0x7f7
[0x7f7:0x7ff]
---
Predecessors: [0x7ec]
Successors: []
---
0x7f7 RETURNDATASIZE
0x7f8 PUSH1 0x0
0x7fa DUP1
0x7fb RETURNDATACOPY
0x7fc RETURNDATASIZE
0x7fd PUSH1 0x0
0x7ff REVERT
---
0x7f7: V648 = RETURNDATASIZE
0x7f8: V649 = 0x0
0x7fb: RETURNDATACOPY 0x0 0x0 V648
0x7fc: V650 = RETURNDATASIZE
0x7fd: V651 = 0x0
0x7ff: REVERT 0x0 V650
---
Entry stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V583, 0xc0ee0b8a, S1, V645]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V583, 0xc0ee0b8a, S1, V645]

================================

Block 0x800
[0x800:0x814]
---
Predecessors: [0x7ec]
Successors: [0x815]
---
0x800 JUMPDEST
0x801 POP
0x802 POP
0x803 POP
0x804 POP
0x805 DUP3
0x806 PUSH1 0x40
0x808 MLOAD
0x809 DUP1
0x80a DUP3
0x80b DUP1
0x80c MLOAD
0x80d SWAP1
0x80e PUSH1 0x20
0x810 ADD
0x811 SWAP1
0x812 DUP1
0x813 DUP4
0x814 DUP4
---
0x800: JUMPDEST 
0x806: V652 = 0x40
0x808: V653 = M[0x40]
0x80c: V654 = M[S6]
0x80e: V655 = 0x20
0x810: V656 = ADD 0x20 S6
---
Entry stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V583, 0xc0ee0b8a, S1, V645]
Stack pops: 7
Stack additions: [S6, S5, S4, S6, V653, V653, V656, V654, V654, V653, V656]
Exit stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S6, V653, V653, V656, V654, V654, V653, V656]

================================

Block 0x815
[0x815:0x81d]
---
Predecessors: [0x800, 0x81e]
Successors: [0x81e, 0x834]
---
0x815 JUMPDEST
0x816 PUSH1 0x20
0x818 DUP4
0x819 LT
0x81a PUSH2 0x834
0x81d JUMPI
---
0x815: JUMPDEST 
0x816: V657 = 0x20
0x819: V658 = LT S2 0x20
0x81a: V659 = 0x834
0x81d: JUMPI 0x834 V658
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x81e
[0x81e:0x833]
---
Predecessors: [0x815]
Successors: [0x815]
---
0x81e DUP1
0x81f MLOAD
0x820 DUP3
0x821 MSTORE
0x822 PUSH1 0x1f
0x824 NOT
0x825 SWAP1
0x826 SWAP3
0x827 ADD
0x828 SWAP2
0x829 PUSH1 0x20
0x82b SWAP2
0x82c DUP3
0x82d ADD
0x82e SWAP2
0x82f ADD
0x830 PUSH2 0x815
0x833 JUMP
---
0x81f: V660 = M[S0]
0x821: M[S1] = V660
0x822: V661 = 0x1f
0x824: V662 = NOT 0x1f
0x827: V663 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x829: V664 = 0x20
0x82d: V665 = ADD 0x20 S1
0x82f: V666 = ADD 0x20 S0
0x830: V667 = 0x815
0x833: JUMP 0x815
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V663, V665, V666]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V663, V665, V666]

================================

Block 0x834
[0x834:0x8e5]
---
Predecessors: [0x815]
Successors: [0x199, 0x3f7, 0x43c]
---
0x834 JUMPDEST
0x835 MLOAD
0x836 DUP2
0x837 MLOAD
0x838 PUSH1 0x20
0x83a SWAP4
0x83b DUP5
0x83c SUB
0x83d PUSH2 0x100
0x840 EXP
0x841 PUSH1 0x0
0x843 NOT
0x844 ADD
0x845 DUP1
0x846 NOT
0x847 SWAP1
0x848 SWAP3
0x849 AND
0x84a SWAP2
0x84b AND
0x84c OR
0x84d SWAP1
0x84e MSTORE
0x84f PUSH1 0x40
0x851 DUP1
0x852 MLOAD
0x853 SWAP3
0x854 SWAP1
0x855 SWAP5
0x856 ADD
0x857 DUP3
0x858 SWAP1
0x859 SUB
0x85a DUP3
0x85b SHA3
0x85c DUP11
0x85d DUP4
0x85e MSTORE
0x85f SWAP4
0x860 MLOAD
0x861 SWAP4
0x862 SWAP6
0x863 POP
0x864 PUSH1 0x1
0x866 PUSH1 0xa0
0x868 PUSH1 0x2
0x86a EXP
0x86b SUB
0x86c DUP12
0x86d AND
0x86e SWAP5
0x86f POP
0x870 CALLER
0x871 SWAP4
0x872 PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x893 SWAP4
0x894 POP
0x895 SWAP2
0x896 DUP3
0x897 SWAP1
0x898 SUB
0x899 ADD
0x89a SWAP1
0x89b LOG4
0x89c PUSH1 0x40
0x89e DUP1
0x89f MLOAD
0x8a0 DUP6
0x8a1 DUP2
0x8a2 MSTORE
0x8a3 SWAP1
0x8a4 MLOAD
0x8a5 PUSH1 0x1
0x8a7 PUSH1 0xa0
0x8a9 PUSH1 0x2
0x8ab EXP
0x8ac SUB
0x8ad DUP8
0x8ae AND
0x8af SWAP2
0x8b0 CALLER
0x8b1 SWAP2
0x8b2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8d3 SWAP2
0x8d4 DUP2
0x8d5 SWAP1
0x8d6 SUB
0x8d7 PUSH1 0x20
0x8d9 ADD
0x8da SWAP1
0x8db LOG3
0x8dc POP
0x8dd PUSH1 0x1
0x8df SWAP5
0x8e0 SWAP4
0x8e1 POP
0x8e2 POP
0x8e3 POP
0x8e4 POP
0x8e5 JUMP
---
0x834: JUMPDEST 
0x835: V668 = M[S0]
0x837: V669 = M[S1]
0x838: V670 = 0x20
0x83c: V671 = SUB 0x20 S2
0x83d: V672 = 0x100
0x840: V673 = EXP 0x100 V671
0x841: V674 = 0x0
0x843: V675 = NOT 0x0
0x844: V676 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V673
0x846: V677 = NOT V676
0x849: V678 = AND V668 V677
0x84b: V679 = AND V676 V669
0x84c: V680 = OR V679 V678
0x84e: M[S1] = V680
0x84f: V681 = 0x40
0x852: V682 = M[0x40]
0x856: V683 = ADD S5 S3
0x859: V684 = SUB V683 V682
0x85b: V685 = SHA3 V682 V684
0x85e: M[V682] = S11
0x860: V686 = M[0x40]
0x864: V687 = 0x1
0x866: V688 = 0xa0
0x868: V689 = 0x2
0x86a: V690 = EXP 0x2 0xa0
0x86b: V691 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86d: V692 = AND S12 0xffffffffffffffffffffffffffffffffffffffff
0x870: V693 = CALLER
0x872: V694 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x898: V695 = SUB V682 V686
0x899: V696 = ADD V695 0x20
0x89b: LOG V686 V696 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V693 V692 V685
0x89c: V697 = 0x40
0x89f: V698 = M[0x40]
0x8a2: M[V698] = S11
0x8a4: V699 = M[0x40]
0x8a5: V700 = 0x1
0x8a7: V701 = 0xa0
0x8a9: V702 = 0x2
0x8ab: V703 = EXP 0x2 0xa0
0x8ac: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ae: V705 = AND S12 0xffffffffffffffffffffffffffffffffffffffff
0x8b0: V706 = CALLER
0x8b2: V707 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8d6: V708 = SUB V698 V699
0x8d7: V709 = 0x20
0x8d9: V710 = ADD 0x20 V708
0x8db: LOG V699 V710 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V706 V705
0x8dd: V711 = 0x1
0x8e5: JUMP S13
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [0x1]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, 0x1]

================================

Block 0x8e6
[0x8e6:0x8f1]
---
Predecessors: [0x3fe, 0x443, 0x67d]
Successors: [0x354]
---
0x8e6 JUMPDEST
0x8e7 PUSH1 0x0
0x8e9 DUP3
0x8ea PUSH2 0x8f2
0x8ed CALLER
0x8ee PUSH2 0x354
0x8f1 JUMP
---
0x8e6: JUMPDEST 
0x8e7: V712 = 0x0
0x8ea: V713 = 0x8f2
0x8ed: V714 = CALLER
0x8ee: V715 = 0x354
0x8f1: JUMP 0x354
---
Entry stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3f7, 0x43c, 0x688}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, 0x8f2, V714]
Exit stack: [V13, S10, S9, S8, S7, S6, {0x0, 0x60}, {0x0, 0x40}, {0x3f7, 0x43c, 0x688}, S2, S1, S0, 0x0, S1, 0x8f2, V714]

================================

Block 0x8f2
[0x8f2:0x8f8]
---
Predecessors: [0x354]
Successors: [0x8f9, 0x8fd]
---
0x8f2 JUMPDEST
0x8f3 LT
0x8f4 ISZERO
0x8f5 PUSH2 0x8fd
0x8f8 JUMPI
---
0x8f2: JUMPDEST 
0x8f3: V716 = LT V291 S1
0x8f4: V717 = ISZERO V716
0x8f5: V718 = 0x8fd
0x8f8: JUMPI 0x8fd V717
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}]

================================

Block 0x8f9
[0x8f9:0x8fc]
---
Predecessors: [0x8f2]
Successors: []
---
0x8f9 PUSH1 0x0
0x8fb DUP1
0x8fc REVERT
---
0x8f9: V719 = 0x0
0x8fc: REVERT 0x0 0x0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]

================================

Block 0x8fd
[0x8fd:0x908]
---
Predecessors: [0x8f2]
Successors: [0x354]
---
0x8fd JUMPDEST
0x8fe PUSH2 0x90f
0x901 PUSH2 0x909
0x904 CALLER
0x905 PUSH2 0x354
0x908 JUMP
---
0x8fd: JUMPDEST 
0x8fe: V720 = 0x90f
0x901: V721 = 0x909
0x904: V722 = CALLER
0x905: V723 = 0x354
0x908: JUMP 0x354
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}]
Stack pops: 0
Stack additions: [0x90f, 0x909, V722]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x0, 0x40}, 0x90f, 0x909, V722]

================================

Block 0x909
[0x909:0x90e]
---
Predecessors: [0x354]
Successors: [0xa30]
---
0x909 JUMPDEST
0x90a DUP5
0x90b PUSH2 0xa30
0x90e JUMP
---
0x909: JUMPDEST 
0x90b: V724 = 0xa30
0x90e: JUMP 0xa30
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291, S4]

================================

Block 0x90f
[0x90f:0x92a]
---
Predecessors: [0xa3c]
Successors: [0x354]
---
0x90f JUMPDEST
0x910 CALLER
0x911 PUSH1 0x0
0x913 SWAP1
0x914 DUP2
0x915 MSTORE
0x916 PUSH1 0x1
0x918 PUSH1 0x20
0x91a MSTORE
0x91b PUSH1 0x40
0x91d SWAP1
0x91e SHA3
0x91f SSTORE
0x920 PUSH2 0x931
0x923 PUSH2 0x92b
0x926 DUP6
0x927 PUSH2 0x354
0x92a JUMP
---
0x90f: JUMPDEST 
0x910: V725 = CALLER
0x911: V726 = 0x0
0x915: M[0x0] = V725
0x916: V727 = 0x1
0x918: V728 = 0x20
0x91a: M[0x20] = 0x1
0x91b: V729 = 0x40
0x91e: V730 = SHA3 0x0 0x40
0x91f: S[V730] = V808
0x920: V731 = 0x931
0x923: V732 = 0x92b
0x927: V733 = 0x354
0x92a: JUMP 0x354
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, V808]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x931, 0x92b, S4]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, 0x931, 0x92b, S4]

================================

Block 0x92b
[0x92b:0x930]
---
Predecessors: [0x354]
Successors: [0xa42]
---
0x92b JUMPDEST
0x92c DUP5
0x92d PUSH2 0xa42
0x930 JUMP
---
0x92b: JUMPDEST 
0x92d: V734 = 0xa42
0x930: JUMP 0xa42
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x40}, S1, V291, S4]

================================

Block 0x931
[0x931:0x95f]
---
Predecessors: [0xa3c, 0xa5f]
Successors: [0x960]
---
0x931 JUMPDEST
0x932 PUSH1 0x1
0x934 PUSH1 0xa0
0x936 PUSH1 0x2
0x938 EXP
0x939 SUB
0x93a DUP6
0x93b AND
0x93c PUSH1 0x0
0x93e SWAP1
0x93f DUP2
0x940 MSTORE
0x941 PUSH1 0x1
0x943 PUSH1 0x20
0x945 SWAP1
0x946 DUP2
0x947 MSTORE
0x948 PUSH1 0x40
0x94a SWAP2
0x94b DUP3
0x94c SWAP1
0x94d SHA3
0x94e SWAP3
0x94f SWAP1
0x950 SWAP3
0x951 SSTORE
0x952 MLOAD
0x953 DUP4
0x954 MLOAD
0x955 DUP5
0x956 SWAP3
0x957 DUP3
0x958 SWAP2
0x959 SWAP1
0x95a DUP5
0x95b ADD
0x95c SWAP1
0x95d DUP1
0x95e DUP4
0x95f DUP4
---
0x931: JUMPDEST 
0x932: V735 = 0x1
0x934: V736 = 0xa0
0x936: V737 = 0x2
0x938: V738 = EXP 0x2 0xa0
0x939: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93b: V740 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x93c: V741 = 0x0
0x940: M[0x0] = V740
0x941: V742 = 0x1
0x943: V743 = 0x20
0x947: M[0x20] = 0x1
0x948: V744 = 0x40
0x94d: V745 = SHA3 0x0 0x40
0x951: S[V745] = S0
0x952: V746 = M[0x40]
0x954: V747 = M[S2]
0x95b: V748 = ADD S2 0x20
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S2, V746, V746, V748, V747, V747, V746, V748]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x40}, S2, V746, V746, V748, V747, V747, V746, V748]

================================

Block 0x960
[0x960:0x968]
---
Predecessors: [0x931, 0x969]
Successors: [0x969, 0x97f]
---
0x960 JUMPDEST
0x961 PUSH1 0x20
0x963 DUP4
0x964 LT
0x965 PUSH2 0x97f
0x968 JUMPI
---
0x960: JUMPDEST 
0x961: V749 = 0x20
0x964: V750 = LT S2 0x20
0x965: V751 = 0x97f
0x968: JUMPI 0x97f V750
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x40}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x40}, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x969
[0x969:0x97e]
---
Predecessors: [0x960]
Successors: [0x960]
---
0x969 DUP1
0x96a MLOAD
0x96b DUP3
0x96c MSTORE
0x96d PUSH1 0x1f
0x96f NOT
0x970 SWAP1
0x971 SWAP3
0x972 ADD
0x973 SWAP2
0x974 PUSH1 0x20
0x976 SWAP2
0x977 DUP3
0x978 ADD
0x979 SWAP2
0x97a ADD
0x97b PUSH2 0x960
0x97e JUMP
---
0x96a: V752 = M[S0]
0x96c: M[S1] = V752
0x96d: V753 = 0x1f
0x96f: V754 = NOT 0x1f
0x972: V755 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x974: V756 = 0x20
0x978: V757 = ADD 0x20 S1
0x97a: V758 = ADD 0x20 S0
0x97b: V759 = 0x960
0x97e: JUMP 0x960
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x40}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V755, V757, V758]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x40}, S7, S6, S5, S4, S3, V755, V757, V758]

================================

Block 0x97f
[0x97f:0xa2f]
---
Predecessors: [0x960]
Successors: [0x3f7, 0x43c, 0x688]
---
0x97f JUMPDEST
0x980 MLOAD
0x981 DUP2
0x982 MLOAD
0x983 PUSH1 0x20
0x985 SWAP4
0x986 DUP5
0x987 SUB
0x988 PUSH2 0x100
0x98b EXP
0x98c PUSH1 0x0
0x98e NOT
0x98f ADD
0x990 DUP1
0x991 NOT
0x992 SWAP1
0x993 SWAP3
0x994 AND
0x995 SWAP2
0x996 AND
0x997 OR
0x998 SWAP1
0x999 MSTORE
0x99a PUSH1 0x40
0x99c DUP1
0x99d MLOAD
0x99e SWAP3
0x99f SWAP1
0x9a0 SWAP5
0x9a1 ADD
0x9a2 DUP3
0x9a3 SWAP1
0x9a4 SUB
0x9a5 DUP3
0x9a6 SHA3
0x9a7 DUP10
0x9a8 DUP4
0x9a9 MSTORE
0x9aa SWAP4
0x9ab MLOAD
0x9ac SWAP4
0x9ad SWAP6
0x9ae POP
0x9af PUSH1 0x1
0x9b1 PUSH1 0xa0
0x9b3 PUSH1 0x2
0x9b5 EXP
0x9b6 SUB
0x9b7 DUP11
0x9b8 AND
0x9b9 SWAP5
0x9ba POP
0x9bb CALLER
0x9bc SWAP4
0x9bd PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x9de SWAP4
0x9df POP
0x9e0 SWAP2
0x9e1 DUP3
0x9e2 SWAP1
0x9e3 SUB
0x9e4 ADD
0x9e5 SWAP1
0x9e6 LOG4
0x9e7 PUSH1 0x40
0x9e9 DUP1
0x9ea MLOAD
0x9eb DUP5
0x9ec DUP2
0x9ed MSTORE
0x9ee SWAP1
0x9ef MLOAD
0x9f0 PUSH1 0x1
0x9f2 PUSH1 0xa0
0x9f4 PUSH1 0x2
0x9f6 EXP
0x9f7 SUB
0x9f8 DUP7
0x9f9 AND
0x9fa SWAP2
0x9fb CALLER
0x9fc SWAP2
0x9fd PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa1e SWAP2
0xa1f DUP2
0xa20 SWAP1
0xa21 SUB
0xa22 PUSH1 0x20
0xa24 ADD
0xa25 SWAP1
0xa26 LOG3
0xa27 POP
0xa28 PUSH1 0x1
0xa2a SWAP4
0xa2b SWAP3
0xa2c POP
0xa2d POP
0xa2e POP
0xa2f JUMP
---
0x97f: JUMPDEST 
0x980: V760 = M[S0]
0x982: V761 = M[S1]
0x983: V762 = 0x20
0x987: V763 = SUB 0x20 S2
0x988: V764 = 0x100
0x98b: V765 = EXP 0x100 V763
0x98c: V766 = 0x0
0x98e: V767 = NOT 0x0
0x98f: V768 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V765
0x991: V769 = NOT V768
0x994: V770 = AND V760 V769
0x996: V771 = AND V768 V761
0x997: V772 = OR V771 V770
0x999: M[S1] = V772
0x99a: V773 = 0x40
0x99d: V774 = M[0x40]
0x9a1: V775 = ADD S5 S3
0x9a4: V776 = SUB V775 V774
0x9a6: V777 = SHA3 V774 V776
0x9a9: M[V774] = S10
0x9ab: V778 = M[0x40]
0x9af: V779 = 0x1
0x9b1: V780 = 0xa0
0x9b3: V781 = 0x2
0x9b5: V782 = EXP 0x2 0xa0
0x9b6: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b8: V784 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x9bb: V785 = CALLER
0x9bd: V786 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x9e3: V787 = SUB V774 V778
0x9e4: V788 = ADD V787 0x20
0x9e6: LOG V778 V788 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V785 V784 V777
0x9e7: V789 = 0x40
0x9ea: V790 = M[0x40]
0x9ed: M[V790] = S10
0x9ef: V791 = M[0x40]
0x9f0: V792 = 0x1
0x9f2: V793 = 0xa0
0x9f4: V794 = 0x2
0x9f6: V795 = EXP 0x2 0xa0
0x9f7: V796 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f9: V797 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x9fb: V798 = CALLER
0x9fd: V799 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa21: V800 = SUB V790 V791
0xa22: V801 = 0x20
0xa24: V802 = ADD 0x20 V800
0xa26: LOG V791 V802 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V798 V797
0xa28: V803 = 0x1
0xa2f: JUMP S12
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x0, 0x40}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: [0x1]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, 0x1]

================================

Block 0xa30
[0xa30:0xa3a]
---
Predecessors: [0x488, 0x6d8, 0x909]
Successors: [0xa3b, 0xa3c]
---
0xa30 JUMPDEST
0xa31 PUSH1 0x0
0xa33 DUP3
0xa34 DUP3
0xa35 GT
0xa36 ISZERO
0xa37 PUSH2 0xa3c
0xa3a JUMPI
---
0xa30: JUMPDEST 
0xa31: V804 = 0x0
0xa35: V805 = GT S0 V291
0xa36: V806 = ISZERO V805
0xa37: V807 = 0xa3c
0xa3a: JUMPI 0xa3c V806
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x40}, S2, V291, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x40}, S2, V291, S0, 0x0]

================================

Block 0xa3b
[0xa3b:0xa3b]
---
Predecessors: [0xa30]
Successors: []
---
0xa3b INVALID
---
0xa3b: INVALID 
---
Entry stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x40}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x40}, S3, S2, S1, 0x0]

================================

Block 0xa3c
[0xa3c:0xa41]
---
Predecessors: [0xa30]
Successors: [0x48e, 0x4b0, 0x6de, 0x700, 0x90f, 0x931]
---
0xa3c JUMPDEST
0xa3d POP
0xa3e SWAP1
0xa3f SUB
0xa40 SWAP1
0xa41 JUMP
---
0xa3c: JUMPDEST 
0xa3f: V808 = SUB S2 S1
0xa41: JUMP S3
---
Entry stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x40}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V808]
Exit stack: [V13, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x40}, V808]

================================

Block 0xa42
[0xa42:0xa51]
---
Predecessors: [0x4aa, 0x6fa, 0x92b]
Successors: [0xa52, 0xa57]
---
0xa42 JUMPDEST
0xa43 PUSH1 0x0
0xa45 DUP3
0xa46 DUP3
0xa47 ADD
0xa48 DUP4
0xa49 DUP2
0xa4a LT
0xa4b DUP1
0xa4c ISZERO
0xa4d SWAP1
0xa4e PUSH2 0xa57
0xa51 JUMPI
---
0xa42: JUMPDEST 
0xa43: V809 = 0x0
0xa47: V810 = ADD S0 V291
0xa4a: V811 = LT V810 V291
0xa4c: V812 = ISZERO V811
0xa4e: V813 = 0xa57
0xa51: JUMPI 0xa57 V811
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x40}, S2, V291, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V810, V812]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x40}, S2, V291, S0, 0x0, V810, V812]

================================

Block 0xa52
[0xa52:0xa56]
---
Predecessors: [0xa42]
Successors: [0xa57]
---
0xa52 POP
0xa53 DUP3
0xa54 DUP2
0xa55 LT
0xa56 ISZERO
---
0xa55: V814 = LT V810 S3
0xa56: V815 = ISZERO V814
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x40}, S5, V291, S3, 0x0, V810, V812]
Stack pops: 4
Stack additions: [S3, S2, S1, V815]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x40}, S5, V291, S3, 0x0, V810, V815]

================================

Block 0xa57
[0xa57:0xa5d]
---
Predecessors: [0xa42, 0xa52]
Successors: [0xa5e, 0xa5f]
---
0xa57 JUMPDEST
0xa58 ISZERO
0xa59 ISZERO
0xa5a PUSH2 0xa5f
0xa5d JUMPI
---
0xa57: JUMPDEST 
0xa58: V816 = ISZERO S0
0xa59: V817 = ISZERO V816
0xa5a: V818 = 0xa5f
0xa5d: JUMPI 0xa5f V817
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x40}, S5, S4, S3, 0x0, V810, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x40}, S5, S4, S3, 0x0, V810]

================================

Block 0xa5e
[0xa5e:0xa5e]
---
Predecessors: [0xa57]
Successors: []
---
0xa5e INVALID
---
0xa5e: INVALID 
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x40}, {0x4b0, 0x700, 0x931}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x40}, {0x4b0, 0x700, 0x931}, S3, S2, 0x0, S0]

================================

Block 0xa5f
[0xa5f:0xa65]
---
Predecessors: [0xa57]
Successors: [0x4b0, 0x700, 0x931]
---
0xa5f JUMPDEST
0xa60 SWAP4
0xa61 SWAP3
0xa62 POP
0xa63 POP
0xa64 POP
0xa65 JUMP
---
0xa5f: JUMPDEST 
0xa65: JUMP {0x4b0, 0x700, 0x931}
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x40}, {0x4b0, 0x700, 0x931}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x0, 0x40}, S0]

================================

Block 0xa66
[0xa66:0xa91]
---
Predecessors: []
Successors: []
---
0xa66 STOP
0xa67 LOG1
0xa68 PUSH6 0x627a7a723058
0xa6f SHA3
0xa70 MISSING 0x5f
0xa71 MISSING 0xd6
0xa72 MISSING 0x28
0xa73 MISSING 0xcb
0xa74 MISSING 0xc8
0xa75 MISSING 0xf9
0xa76 MISSING 0xb5
0xa77 PUSH17 0x2d3c2645d6020cf27d5a12a125eed8d6d8
0xa89 SLT
0xa8a DUP16
0xa8b MISSING 0xd3
0xa8c MISSING 0xf
0xa8d SHA3
0xa8e MISSING 0xfc
0xa8f MSTORE8
0xa90 STOP
0xa91 MISSING 0x29
---
0xa66: STOP 
0xa67: LOG S0 S1 S2
0xa68: V819 = 0x627a7a723058
0xa6f: V820 = SHA3 0x627a7a723058 S3
0xa70: MISSING 0x5f
0xa71: MISSING 0xd6
0xa72: MISSING 0x28
0xa73: MISSING 0xcb
0xa74: MISSING 0xc8
0xa75: MISSING 0xf9
0xa76: MISSING 0xb5
0xa77: V821 = 0x2d3c2645d6020cf27d5a12a125eed8d6d8
0xa89: V822 = SLT 0x2d3c2645d6020cf27d5a12a125eed8d6d8 S0
0xa8b: MISSING 0xd3
0xa8c: MISSING 0xf
0xa8d: V823 = SHA3 S0 S1
0xa8e: MISSING 0xfc
0xa8f: M8[S0] = S1
0xa90: STOP 
0xa91: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V820, S15, V822, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V823]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x79
Exit block: 0xf5
Body: 0x79, 0x81, 0x85, 0x8e, 0xb0, 0xb9, 0xc8, 0xdc, 0xf5, 0x2bd, 0x2fa, 0x302, 0x315, 0x323, 0x337, 0x340

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x103
Exit block: 0x118
Body: 0x103, 0x10b, 0x10f, 0x118, 0x348

Function 2:
Public function signature: 0x313ce567
Entry block: 0x12a
Exit block: 0x118
Body: 0x118, 0x12a, 0x132, 0x136, 0x34e

Function 3:
Public function signature: 0x70a08231
Entry block: 0x13f
Exit block: 0x118
Body: 0x118, 0x13f, 0x147, 0x14b

Function 4:
Public function signature: 0x95d89b41
Entry block: 0x160
Exit block: 0xf5
Body: 0x8e, 0xb0, 0xb9, 0xc8, 0xdc, 0xf5, 0x160, 0x168, 0x16c, 0x315, 0x323, 0x337, 0x340, 0x36f, 0x3af, 0x3b7

Function 5:
Public function signature: 0xa9059cbb
Entry block: 0x175
Exit block: 0x199
Body: 0x175, 0x17d, 0x181, 0x199, 0x3ca, 0x3da, 0x3de, 0x3e7, 0x3ed, 0x3f7, 0x3fe, 0x409

Function 6:
Public function signature: 0xbe45fd62
Entry block: 0x1ad
Exit block: 0x199
Body: 0x199, 0x1ad, 0x1b5, 0x1b9, 0x411, 0x41f, 0x423, 0x42c, 0x432, 0x43c, 0x443, 0x44e

Function 7:
Public function signature: 0xf6368f8a
Entry block: 0x216
Exit block: 0x199
Body: 0x199, 0x216, 0x21e, 0x222, 0x456, 0x462, 0x468, 0x471, 0x478, 0x47c, 0x488, 0x67d, 0x688, 0x68b

Function 8:
Public fallback function
Entry block: 0x74
Exit block: 0x74
Body: 0x74

Function 9:
Private function
Entry block: 0x694
Exit block: 0x6ae
Body: 0x694, 0x6a1, 0x6a9, 0x6ae

Function 10:
Private function
Entry block: 0x8e6
Exit block: 0x97f
Body: 0x48e, 0x4aa, 0x6de, 0x6fa, 0x700, 0x786, 0x78f, 0x79e, 0x7b2, 0x7cb, 0x7ec, 0x800, 0x815, 0x81e, 0x834, 0x8e6, 0x8f2, 0x8fd, 0x909, 0x90f, 0x92b, 0x931, 0x960, 0x969, 0x97f, 0xa30, 0xa3c, 0xa42, 0xa52, 0xa57, 0xa5f

Function 11:
Private function
Entry block: 0x6b4
Exit block: 0x97f
Body: 0x48e, 0x4aa, 0x6b4, 0x6c1, 0x6cc, 0x6d8, 0x6de, 0x6fa, 0x700, 0x786, 0x78f, 0x79e, 0x7b2, 0x7cb, 0x7ec, 0x800, 0x815, 0x81e, 0x834, 0x90f, 0x92b, 0x931, 0x960, 0x969, 0x97f, 0xa30, 0xa3c, 0xa42, 0xa52, 0xa57, 0xa5f

