Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x39]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0xe4fc6b6d
0x2e EQ
0x2f PUSH2 0x39
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0xe4fc6b6d
0x2e: V7 = EQ 0xe4fc6b6d V5
0x2f: V8 = 0x39
0x32: JUMPI 0x39 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x36]
---
Predecessors: [0x0]
Successors: [0x37]
---
0x33 PUSH2 0x37
0x36 JUMP
---
0x33: V9 = 0x37
0x36: JUMP 0x37
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x37
[0x37:0x38]
---
Predecessors: [0x33]
Successors: []
---
0x37 JUMPDEST
0x38 STOP
---
0x37: JUMPDEST 
0x38: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x39
[0x39:0x45]
---
Predecessors: [0x0]
Successors: [0x48]
---
0x39 JUMPDEST
0x3a PUSH2 0x46
0x3d PUSH1 0x4
0x3f DUP1
0x40 POP
0x41 POP
0x42 PUSH2 0x48
0x45 JUMP
---
0x39: JUMPDEST 
0x3a: V10 = 0x46
0x3d: V11 = 0x4
0x42: V12 = 0x48
0x45: JUMP 0x48
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x46]
Exit stack: [V5, 0x46]

================================

Block 0x46
[0x46:0x47]
---
Predecessors: [0x146]
Successors: []
---
0x46 JUMPDEST
0x47 STOP
---
0x46: JUMPDEST 
0x47: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x48
[0x48:0x7a]
---
Predecessors: [0x39]
Successors: [0x7b]
---
0x48 JUMPDEST
0x49 PUSH1 0x0
0x4b PUSH1 0x0
0x4d PUSH1 0x0
0x4f PUSH1 0x0
0x51 PUSH1 0x0
0x53 PUSH1 0x0
0x55 PUSH1 0x0
0x57 SWAP6
0x58 POP
0x59 PUSH1 0x0
0x5b SWAP5
0x5c POP
0x5d ADDRESS
0x5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73 AND
0x74 BALANCE
0x75 SWAP4
0x76 POP
0x77 PUSH1 0x0
0x79 SWAP3
0x7a POP
---
0x48: JUMPDEST 
0x49: V13 = 0x0
0x4b: V14 = 0x0
0x4d: V15 = 0x0
0x4f: V16 = 0x0
0x51: V17 = 0x0
0x53: V18 = 0x0
0x55: V19 = 0x0
0x59: V20 = 0x0
0x5d: V21 = ADDRESS
0x5e: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x73: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x74: V24 = BALANCE V23
0x77: V25 = 0x0
---
Entry stack: [V5, 0x46]
Stack pops: 0
Stack additions: [0x0, 0x0, V24, 0x0, 0x0, 0x0]
Exit stack: [V5, 0x46, 0x0, 0x0, V24, 0x0, 0x0, 0x0]

================================

Block 0x7b
[0x7b:0x8e]
---
Predecessors: [0x48, 0x138]
Successors: [0x8f, 0x145]
---
0x7b JUMPDEST
0x7c PUSH1 0x0
0x7e PUSH1 0x0
0x80 POP
0x81 DUP1
0x82 SLOAD
0x83 SWAP1
0x84 POP
0x85 DUP4
0x86 PUSH1 0xff
0x88 AND
0x89 LT
0x8a ISZERO
0x8b PUSH2 0x145
0x8e JUMPI
---
0x7b: JUMPDEST 
0x7c: V26 = 0x0
0x7e: V27 = 0x0
0x82: V28 = S[0x0]
0x86: V29 = 0xff
0x88: V30 = AND 0xff S2
0x89: V31 = LT V30 V28
0x8a: V32 = ISZERO V31
0x8b: V33 = 0x145
0x8e: JUMPI 0x145 V32
---
Entry stack: [V5, 0x46, S5, S4, V24, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V5, 0x46, S5, S4, V24, S2, S1, S0]

================================

Block 0x8f
[0x8f:0x9d]
---
Predecessors: [0x7b]
Successors: [0x9e]
---
0x8f PUSH1 0x1
0x91 PUSH1 0x0
0x93 POP
0x94 DUP4
0x95 DUP2
0x96 SLOAD
0x97 DUP2
0x98 LT
0x99 ISZERO
0x9a PUSH2 0x2
0x9d JUMPI
---
0x8f: V34 = 0x1
0x91: V35 = 0x0
0x96: V36 = S[0x1]
0x98: V37 = LT S2 V36
0x99: V38 = ISZERO V37
0x9a: V39 = 0x2
0x9d: THROWI V38
---
Entry stack: [V5, 0x46, S5, S4, V24, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, S2]
Exit stack: [V5, 0x46, S5, S4, V24, S2, S1, S0, 0x1, S2]

================================

Block 0x9e
[0x9e:0xaa]
---
Predecessors: [0x8f]
Successors: [0xab]
---
0x9e SWAP1
0x9f PUSH1 0x0
0xa1 MSTORE
0xa2 PUSH1 0x20
0xa4 PUSH1 0x0
0xa6 SHA3
0xa7 SWAP1
0xa8 ADD
0xa9 PUSH1 0x0
---
0x9f: V40 = 0x0
0xa1: M[0x0] = 0x1
0xa2: V41 = 0x20
0xa4: V42 = 0x0
0xa6: V43 = SHA3 0x0 0x20
0xa8: V44 = ADD S0 V43
0xa9: V45 = 0x0
---
Entry stack: [V5, 0x46, S7, S6, V24, S4, S3, S2, 0x1, S0]
Stack pops: 2
Stack additions: [V44, 0x0]
Exit stack: [V5, 0x46, S7, S6, V24, S4, S3, S2, V44, 0x0]

================================

Block 0xab
[0xab:0xcc]
---
Predecessors: [0x9e]
Successors: [0xcd]
---
0xab JUMPDEST
0xac POP
0xad SLOAD
0xae DUP7
0xaf ADD
0xb0 SWAP2
0xb1 POP
0xb2 PUSH1 0x2
0xb4 PUSH1 0x0
0xb6 POP
0xb7 SLOAD
0xb8 DUP3
0xb9 DUP6
0xba MUL
0xbb DIV
0xbc SWAP1
0xbd POP
0xbe PUSH1 0x0
0xc0 PUSH1 0x0
0xc2 POP
0xc3 DUP4
0xc4 DUP2
0xc5 SLOAD
0xc6 DUP2
0xc7 LT
0xc8 ISZERO
0xc9 PUSH2 0x2
0xcc JUMPI
---
0xab: JUMPDEST 
0xad: V46 = S[V44]
0xaf: V47 = ADD S7 V46
0xb2: V48 = 0x2
0xb4: V49 = 0x0
0xb7: V50 = S[0x2]
0xba: V51 = MUL V24 V47
0xbb: V52 = DIV V51 V50
0xbe: V53 = 0x0
0xc0: V54 = 0x0
0xc5: V55 = S[0x0]
0xc7: V56 = LT S4 V55
0xc8: V57 = ISZERO V56
0xc9: V58 = 0x2
0xcc: THROWI V57
---
Entry stack: [V5, 0x46, S7, S6, V24, S4, S3, S2, V44, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, V47, V52, 0x0, S4]
Exit stack: [V5, 0x46, S7, S6, V24, S4, V47, V52, 0x0, S4]

================================

Block 0xcd
[0xcd:0xd9]
---
Predecessors: [0xab]
Successors: [0xda]
---
0xcd SWAP1
0xce PUSH1 0x0
0xd0 MSTORE
0xd1 PUSH1 0x20
0xd3 PUSH1 0x0
0xd5 SHA3
0xd6 SWAP1
0xd7 ADD
0xd8 PUSH1 0x0
---
0xce: V59 = 0x0
0xd0: M[0x0] = 0x0
0xd1: V60 = 0x20
0xd3: V61 = 0x0
0xd5: V62 = SHA3 0x0 0x20
0xd7: V63 = ADD S0 V62
0xd8: V64 = 0x0
---
Entry stack: [V5, 0x46, S7, S6, V24, S4, V47, V52, 0x0, S0]
Stack pops: 2
Stack additions: [V63, 0x0]
Exit stack: [V5, 0x46, S7, S6, V24, S4, V47, V52, V63, 0x0]

================================

Block 0xda
[0xda:0x137]
---
Predecessors: [0xcd]
Successors: [0x138]
---
0xda JUMPDEST
0xdb SWAP1
0xdc SLOAD
0xdd SWAP1
0xde PUSH2 0x100
0xe1 EXP
0xe2 SWAP1
0xe3 DIV
0xe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9 AND
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 PUSH1 0x0
0x112 DUP7
0x113 DUP4
0x114 SUB
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 SWAP1
0x11a POP
0x11b PUSH1 0x0
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 DUP4
0x122 SUB
0x123 DUP2
0x124 DUP6
0x125 DUP9
0x126 DUP9
0x127 CALL
0x128 SWAP4
0x129 POP
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e DUP2
0x12f SWAP6
0x130 POP
0x131 DUP6
0x132 POP
0x133 DUP1
0x134 SWAP5
0x135 POP
0x136 DUP5
0x137 POP
---
0xda: JUMPDEST 
0xdc: V65 = S[V63]
0xde: V66 = 0x100
0xe1: V67 = EXP 0x100 0x0
0xe3: V68 = DIV V65 0x1
0xe4: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xfa: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x110: V73 = 0x0
0x114: V74 = SUB V52 S6
0x115: V75 = 0x40
0x117: V76 = M[0x40]
0x11b: V77 = 0x0
0x11d: V78 = 0x40
0x11f: V79 = M[0x40]
0x122: V80 = SUB V76 V79
0x127: V81 = CALL 0x0 V72 V74 V79 V80 V79 0x0
---
Entry stack: [V5, 0x46, S7, S6, V24, S4, V47, V52, V63, 0x0]
Stack pops: 8
Stack additions: [S3, S2, S5, S4, S3, S2]
Exit stack: [V5, 0x46, V47, V52, V24, S4, V47, V52]

================================

Block 0x138
[0x138:0x144]
---
Predecessors: [0xda]
Successors: [0x7b]
---
0x138 JUMPDEST
0x139 DUP3
0x13a PUSH1 0x1
0x13c ADD
0x13d SWAP3
0x13e POP
0x13f DUP3
0x140 POP
0x141 PUSH2 0x7b
0x144 JUMP
---
0x138: JUMPDEST 
0x13a: V82 = 0x1
0x13c: V83 = ADD 0x1 S2
0x141: V84 = 0x7b
0x144: JUMP 0x7b
---
Entry stack: [V5, 0x46, V47, V52, V24, S2, V47, V52]
Stack pops: 3
Stack additions: [V83, S1, S0]
Exit stack: [V5, 0x46, V47, V52, V24, V83, V47, V52]

================================

Block 0x145
[0x145:0x145]
---
Predecessors: [0x7b]
Successors: [0x146]
---
0x145 JUMPDEST
---
0x145: JUMPDEST 
---
Entry stack: [V5, 0x46, S5, S4, V24, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x46, S5, S4, V24, S2, S1, S0]

================================

Block 0x146
[0x146:0x14d]
---
Predecessors: [0x145]
Successors: [0x46]
---
0x146 JUMPDEST
0x147 POP
0x148 POP
0x149 POP
0x14a POP
0x14b POP
0x14c POP
0x14d JUMP
---
0x146: JUMPDEST 
0x14d: JUMP 0x46
---
Entry stack: [V5, 0x46, S5, S4, V24, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V5]

================================

Function 0:
Public function signature: 0xe4fc6b6d
Entry block: 0x39
Exit block: 0x46
Body: 0x39, 0x46, 0x48, 0x7b, 0x8f, 0x9e, 0xab, 0xcd, 0xda, 0x138, 0x145, 0x146

Function 1:
Public fallback function
Entry block: 0x33
Exit block: 0x37
Body: 0x33, 0x37

