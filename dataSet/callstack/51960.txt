Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x27]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x27
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x27
0xc: JUMPI 0x27 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x29]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x52fba25c
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x29
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x52fba25c
0x22: V15 = EQ V13 0x52fba25c
0x23: V16 = 0x29
0x26: JUMPI 0x29 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x28]
---
Predecessors: [0x0, 0xd, 0x232]
Successors: []
---
0x27 JUMPDEST
0x28 STOP
---
0x27: JUMPDEST 
0x28: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x29
[0x29:0x5c]
---
Predecessors: [0xd]
Successors: [0x5d, 0x6c]
---
0x29 JUMPDEST
0x2a PUSH2 0x27
0x2d PUSH1 0x1
0x2f PUSH1 0xa0
0x31 PUSH1 0x2
0x33 EXP
0x34 SUB
0x35 PUSH1 0x4
0x37 CALLDATALOAD
0x38 AND
0x39 PUSH1 0x24
0x3b CALLDATALOAD
0x3c PUSH1 0x60
0x3e PUSH1 0x0
0x40 DUP1
0x41 PUSH1 0x0
0x43 DUP5
0x44 PUSH1 0x40
0x46 MLOAD
0x47 SWAP1
0x48 DUP1
0x49 DUP3
0x4a MSTORE
0x4b DUP1
0x4c PUSH1 0x20
0x4e MUL
0x4f PUSH1 0x20
0x51 ADD
0x52 DUP3
0x53 ADD
0x54 PUSH1 0x40
0x56 MSTORE
0x57 DUP1
0x58 ISZERO
0x59 PUSH2 0x6c
0x5c JUMPI
---
0x29: JUMPDEST 
0x2a: V17 = 0x27
0x2d: V18 = 0x1
0x2f: V19 = 0xa0
0x31: V20 = 0x2
0x33: V21 = EXP 0x2 0xa0
0x34: V22 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35: V23 = 0x4
0x37: V24 = CALLDATALOAD 0x4
0x38: V25 = AND V24 0xffffffffffffffffffffffffffffffffffffffff
0x39: V26 = 0x24
0x3b: V27 = CALLDATALOAD 0x24
0x3c: V28 = 0x60
0x3e: V29 = 0x0
0x41: V30 = 0x0
0x44: V31 = 0x40
0x46: V32 = M[0x40]
0x4a: M[V32] = V27
0x4c: V33 = 0x20
0x4e: V34 = MUL 0x20 V27
0x4f: V35 = 0x20
0x51: V36 = ADD 0x20 V34
0x53: V37 = ADD V32 V36
0x54: V38 = 0x40
0x56: M[0x40] = V37
0x58: V39 = ISZERO V27
0x59: V40 = 0x6c
0x5c: JUMPI 0x6c V39
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27, V25, V27, 0x60, 0x0, 0x0, 0x0, V32, V27]
Exit stack: [V13, 0x27, V25, V27, 0x60, 0x0, 0x0, 0x0, V32, V27]

================================

Block 0x5d
[0x5d:0x6b]
---
Predecessors: [0x29]
Successors: [0x6c]
---
0x5d DUP2
0x5e PUSH1 0x20
0x60 ADD
0x61 PUSH1 0x20
0x63 DUP3
0x64 MUL
0x65 DUP1
0x66 CODESIZE
0x67 DUP4
0x68 CODECOPY
0x69 ADD
0x6a SWAP1
0x6b POP
---
0x5e: V41 = 0x20
0x60: V42 = ADD 0x20 V32
0x61: V43 = 0x20
0x64: V44 = MUL V27 0x20
0x66: V45 = CODESIZE
0x68: CODECOPY V42 V45 V44
0x69: V46 = ADD V44 V42
---
Entry stack: [V13, 0x27, V25, V27, 0x60, 0x0, 0x0, 0x0, V32, V27]
Stack pops: 2
Stack additions: [S1, V46]
Exit stack: [V13, 0x27, V25, V27, 0x60, 0x0, 0x0, 0x0, V32, V46]

================================

Block 0x6c
[0x6c:0x73]
---
Predecessors: [0x29, 0x5d]
Successors: [0x74]
---
0x6c JUMPDEST
0x6d POP
0x6e SWAP4
0x6f POP
0x70 PUSH1 0x0
0x72 SWAP3
0x73 POP
---
0x6c: JUMPDEST 
0x70: V47 = 0x0
---
Entry stack: [V13, 0x27, V25, V27, 0x60, 0x0, 0x0, 0x0, V32, S0]
Stack pops: 6
Stack additions: [S1, 0x0, S3, S2]
Exit stack: [V13, 0x27, V25, V27, V32, 0x0, 0x0, 0x0]

================================

Block 0x74
[0x74:0x7c]
---
Predecessors: [0x6c, 0x164]
Successors: [0x7d, 0x16f]
---
0x74 JUMPDEST
0x75 DUP5
0x76 DUP4
0x77 LT
0x78 ISZERO
0x79 PUSH2 0x16f
0x7c JUMPI
---
0x74: JUMPDEST 
0x77: V48 = LT S2 V27
0x78: V49 = ISZERO V48
0x79: V50 = 0x16f
0x7c: JUMPI 0x16f V49
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x27, V25, V27, V32, S2, S1, 0x0]

================================

Block 0x7d
[0x7d:0x8d]
---
Predecessors: [0x74]
Successors: [0x23a]
---
0x7d PUSH8 0x16345785d8a0000
0x86 DUP7
0x87 PUSH2 0x8e
0x8a PUSH2 0x23a
0x8d JUMP
---
0x7d: V51 = 0x16345785d8a0000
0x87: V52 = 0x8e
0x8a: V53 = 0x23a
0x8d: JUMP 0x23a
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x16345785d8a0000, S5, 0x8e]
Exit stack: [V13, 0x27, V25, V27, V32, S2, S1, 0x0, 0x16345785d8a0000, V25, 0x8e]

================================

Block 0x8e
[0x8e:0xb0]
---
Predecessors: [0x23a]
Successors: [0xb1, 0xba]
---
0x8e JUMPDEST
0x8f PUSH1 0x1
0x91 PUSH1 0xa0
0x93 PUSH1 0x2
0x95 EXP
0x96 SUB
0x97 SWAP1
0x98 SWAP2
0x99 AND
0x9a DUP2
0x9b MSTORE
0x9c PUSH1 0x40
0x9e MLOAD
0x9f SWAP1
0xa0 DUP2
0xa1 SWAP1
0xa2 SUB
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 DUP3
0xa8 CREATE
0xa9 DUP1
0xaa ISZERO
0xab DUP1
0xac ISZERO
0xad PUSH2 0xba
0xb0 JUMPI
---
0x8e: JUMPDEST 
0x8f: V54 = 0x1
0x91: V55 = 0xa0
0x93: V56 = 0x2
0x95: V57 = EXP 0x2 0xa0
0x96: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V59 = AND V25 0xffffffffffffffffffffffffffffffffffffffff
0x9b: M[V228] = V59
0x9c: V60 = 0x40
0x9e: V61 = M[0x40]
0xa2: V62 = SUB V228 V61
0xa3: V63 = 0x20
0xa5: V64 = ADD 0x20 V62
0xa8: V65 = CREATE 0x16345785d8a0000 V61 V64
0xaa: V66 = ISZERO V65
0xac: V67 = ISZERO V66
0xad: V68 = 0xba
0xb0: JUMPI 0xba V67
---
Entry stack: [V13, 0x27, V25, V27, V32, S5, S4, 0x0, 0x16345785d8a0000, V25, V228]
Stack pops: 3
Stack additions: [S2, V65, V66]
Exit stack: [V13, 0x27, V25, V27, V32, S5, S4, 0x0, 0x16345785d8a0000, V65, V66]

================================

Block 0xb1
[0xb1:0xb9]
---
Predecessors: [0x8e]
Successors: []
---
0xb1 RETURNDATASIZE
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 RETURNDATACOPY
0xb6 RETURNDATASIZE
0xb7 PUSH1 0x0
0xb9 REVERT
---
0xb1: V69 = RETURNDATASIZE
0xb2: V70 = 0x0
0xb5: RETURNDATACOPY 0x0 0x0 V69
0xb6: V71 = RETURNDATASIZE
0xb7: V72 = 0x0
0xb9: REVERT 0x0 V71
---
Entry stack: [V13, 0x27, V25, V27, V32, S5, S4, 0x0, 0x16345785d8a0000, V65, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S5, S4, 0x0, 0x16345785d8a0000, V65, V66]

================================

Block 0xba
[0xba:0xcc]
---
Predecessors: [0x8e]
Successors: [0xcd, 0xce]
---
0xba JUMPDEST
0xbb POP
0xbc SWAP1
0xbd POP
0xbe SWAP2
0xbf POP
0xc0 DUP2
0xc1 DUP5
0xc2 DUP5
0xc3 DUP2
0xc4 MLOAD
0xc5 DUP2
0xc6 LT
0xc7 ISZERO
0xc8 ISZERO
0xc9 PUSH2 0xce
0xcc JUMPI
---
0xba: JUMPDEST 
0xc4: V73 = M[V32]
0xc6: V74 = LT S5 V73
0xc7: V75 = ISZERO V74
0xc8: V76 = ISZERO V75
0xc9: V77 = 0xce
0xcc: JUMPI 0xce V76
---
Entry stack: [V13, 0x27, V25, V27, V32, S5, S4, 0x0, 0x16345785d8a0000, V65, V66]
Stack pops: 7
Stack additions: [S6, S5, S1, S3, S1, S6, S5]
Exit stack: [V13, 0x27, V25, V27, V32, S5, V65, 0x0, V65, V32, S5]

================================

Block 0xcd
[0xcd:0xcd]
---
Predecessors: [0xba]
Successors: []
---
0xcd INVALID
---
0xcd: INVALID 
---
Entry stack: [V13, 0x27, V25, V27, V32, S5, V65, 0x0, V65, V32, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S5, V65, 0x0, V65, V32, S0]

================================

Block 0xce
[0xce:0x129]
---
Predecessors: [0xba]
Successors: [0x12a, 0x12e]
---
0xce JUMPDEST
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 PUSH1 0x20
0xd6 MUL
0xd7 ADD
0xd8 SWAP1
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 AND
0xe2 SWAP1
0xe3 DUP2
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec AND
0xed DUP2
0xee MSTORE
0xef POP
0xf0 POP
0xf1 DUP2
0xf2 PUSH1 0x1
0xf4 PUSH1 0xa0
0xf6 PUSH1 0x2
0xf8 EXP
0xf9 SUB
0xfa AND
0xfb PUSH4 0x20a9158d
0x100 PUSH1 0x40
0x102 MLOAD
0x103 DUP2
0x104 PUSH4 0xffffffff
0x109 AND
0x10a PUSH1 0xe0
0x10c PUSH1 0x2
0x10e EXP
0x10f MUL
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x4
0x114 ADD
0x115 PUSH1 0x20
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b DUP4
0x11c SUB
0x11d DUP2
0x11e PUSH1 0x0
0x120 DUP8
0x121 DUP1
0x122 EXTCODESIZE
0x123 ISZERO
0x124 DUP1
0x125 ISZERO
0x126 PUSH2 0x12e
0x129 JUMPI
---
0xce: JUMPDEST 
0xd0: V78 = 0x20
0xd2: V79 = ADD 0x20 V32
0xd4: V80 = 0x20
0xd6: V81 = MUL 0x20 S0
0xd7: V82 = ADD V81 V79
0xd9: V83 = 0x1
0xdb: V84 = 0xa0
0xdd: V85 = 0x2
0xdf: V86 = EXP 0x2 0xa0
0xe0: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xe4: V89 = 0x1
0xe6: V90 = 0xa0
0xe8: V91 = 0x2
0xea: V92 = EXP 0x2 0xa0
0xeb: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0xee: M[V82] = V94
0xf2: V95 = 0x1
0xf4: V96 = 0xa0
0xf6: V97 = 0x2
0xf8: V98 = EXP 0x2 0xa0
0xf9: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xfb: V101 = 0x20a9158d
0x100: V102 = 0x40
0x102: V103 = M[0x40]
0x104: V104 = 0xffffffff
0x109: V105 = AND 0xffffffff 0x20a9158d
0x10a: V106 = 0xe0
0x10c: V107 = 0x2
0x10e: V108 = EXP 0x2 0xe0
0x10f: V109 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x20a9158d
0x111: M[V103] = 0x20a9158d00000000000000000000000000000000000000000000000000000000
0x112: V110 = 0x4
0x114: V111 = ADD 0x4 V103
0x115: V112 = 0x20
0x117: V113 = 0x40
0x119: V114 = M[0x40]
0x11c: V115 = SUB V111 V114
0x11e: V116 = 0x0
0x122: V117 = EXTCODESIZE V100
0x123: V118 = ISZERO V117
0x125: V119 = ISZERO V118
0x126: V120 = 0x12e
0x129: JUMPI 0x12e V119
---
Entry stack: [V13, 0x27, V25, V27, V32, S5, V65, 0x0, V65, V32, S0]
Stack pops: 5
Stack additions: [S4, S3, V100, 0x20a9158d, V111, 0x20, V114, V115, V114, 0x0, V100, V118]
Exit stack: [V13, 0x27, V25, V27, V32, S5, V65, 0x0, V100, 0x20a9158d, V111, 0x20, V114, V115, V114, 0x0, V100, V118]

================================

Block 0x12a
[0x12a:0x12d]
---
Predecessors: [0xce]
Successors: []
---
0x12a PUSH1 0x0
0x12c DUP1
0x12d REVERT
---
0x12a: V121 = 0x0
0x12d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V25, V27, V32, S12, V65, 0x0, V100, 0x20a9158d, V111, 0x20, V114, V115, V114, 0x0, V100, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S12, V65, 0x0, V100, 0x20a9158d, V111, 0x20, V114, V115, V114, 0x0, V100, V118]

================================

Block 0x12e
[0x12e:0x138]
---
Predecessors: [0xce]
Successors: [0x139, 0x142]
---
0x12e JUMPDEST
0x12f POP
0x130 GAS
0x131 CALL
0x132 ISZERO
0x133 DUP1
0x134 ISZERO
0x135 PUSH2 0x142
0x138 JUMPI
---
0x12e: JUMPDEST 
0x130: V122 = GAS
0x131: V123 = CALL V122 V100 0x0 V114 V115 V114 0x20
0x132: V124 = ISZERO V123
0x134: V125 = ISZERO V124
0x135: V126 = 0x142
0x138: JUMPI 0x142 V125
---
Entry stack: [V13, 0x27, V25, V27, V32, S12, V65, 0x0, V100, 0x20a9158d, V111, 0x20, V114, V115, V114, 0x0, V100, V118]
Stack pops: 7
Stack additions: [V124]
Exit stack: [V13, 0x27, V25, V27, V32, S12, V65, 0x0, V100, 0x20a9158d, V111, V124]

================================

Block 0x139
[0x139:0x141]
---
Predecessors: [0x12e]
Successors: []
---
0x139 RETURNDATASIZE
0x13a PUSH1 0x0
0x13c DUP1
0x13d RETURNDATACOPY
0x13e RETURNDATASIZE
0x13f PUSH1 0x0
0x141 REVERT
---
0x139: V127 = RETURNDATASIZE
0x13a: V128 = 0x0
0x13d: RETURNDATACOPY 0x0 0x0 V127
0x13e: V129 = RETURNDATASIZE
0x13f: V130 = 0x0
0x141: REVERT 0x0 V129
---
Entry stack: [V13, 0x27, V25, V27, V32, S6, V65, 0x0, V100, 0x20a9158d, V111, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S6, V65, 0x0, V100, 0x20a9158d, V111, V124]

================================

Block 0x142
[0x142:0x153]
---
Predecessors: [0x12e]
Successors: [0x154, 0x158]
---
0x142 JUMPDEST
0x143 POP
0x144 POP
0x145 POP
0x146 POP
0x147 PUSH1 0x40
0x149 MLOAD
0x14a RETURNDATASIZE
0x14b PUSH1 0x20
0x14d DUP2
0x14e LT
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x142: JUMPDEST 
0x147: V131 = 0x40
0x149: V132 = M[0x40]
0x14a: V133 = RETURNDATASIZE
0x14b: V134 = 0x20
0x14e: V135 = LT V133 0x20
0x14f: V136 = ISZERO V135
0x150: V137 = 0x158
0x153: JUMPI 0x158 V136
---
Entry stack: [V13, 0x27, V25, V27, V32, S6, V65, 0x0, V100, 0x20a9158d, V111, V124]
Stack pops: 4
Stack additions: [V132, V133]
Exit stack: [V13, 0x27, V25, V27, V32, S6, V65, 0x0, V132, V133]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x142]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V138 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V25, V27, V32, S4, V65, 0x0, V132, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S4, V65, 0x0, V132, V133]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x142]
Successors: [0x160, 0x164]
---
0x158 JUMPDEST
0x159 POP
0x15a MLOAD
0x15b ISZERO
0x15c PUSH2 0x164
0x15f JUMPI
---
0x158: JUMPDEST 
0x15a: V139 = M[V132]
0x15b: V140 = ISZERO V139
0x15c: V141 = 0x164
0x15f: JUMPI 0x164 V140
---
Entry stack: [V13, 0x27, V25, V27, V32, S4, V65, 0x0, V132, V133]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S4, V65, 0x0]

================================

Block 0x160
[0x160:0x163]
---
Predecessors: [0x158]
Successors: [0x16f]
---
0x160 PUSH2 0x16f
0x163 JUMP
---
0x160: V142 = 0x16f
0x163: JUMP 0x16f
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, V65, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S2, V65, 0x0]

================================

Block 0x164
[0x164:0x16e]
---
Predecessors: [0x158]
Successors: [0x74]
---
0x164 JUMPDEST
0x165 PUSH1 0x1
0x167 SWAP1
0x168 SWAP3
0x169 ADD
0x16a SWAP2
0x16b PUSH2 0x74
0x16e JUMP
---
0x164: JUMPDEST 
0x165: V143 = 0x1
0x169: V144 = ADD S2 0x1
0x16b: V145 = 0x74
0x16e: JUMP 0x74
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, V65, 0x0]
Stack pops: 3
Stack additions: [V144, S1, S0]
Exit stack: [V13, 0x27, V25, V27, V32, V144, V65, 0x0]

================================

Block 0x16f
[0x16f:0x1a0]
---
Predecessors: [0x74, 0x160]
Successors: [0x1a1, 0x1aa]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 DUP1
0x173 SLOAD
0x174 PUSH1 0x40
0x176 MLOAD
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f SWAP1
0x180 SWAP2
0x181 AND
0x182 SWAP2
0x183 ADDRESS
0x184 BALANCE
0x185 DUP1
0x186 ISZERO
0x187 PUSH2 0x8fc
0x18a MUL
0x18b SWAP3
0x18c SWAP1
0x18d SWAP2
0x18e DUP2
0x18f DUP2
0x190 DUP2
0x191 DUP6
0x192 DUP9
0x193 DUP9
0x194 CALL
0x195 SWAP4
0x196 POP
0x197 POP
0x198 POP
0x199 POP
0x19a ISZERO
0x19b DUP1
0x19c ISZERO
0x19d PUSH2 0x1aa
0x1a0 JUMPI
---
0x16f: JUMPDEST 
0x170: V146 = 0x0
0x173: V147 = S[0x0]
0x174: V148 = 0x40
0x176: V149 = M[0x40]
0x177: V150 = 0x1
0x179: V151 = 0xa0
0x17b: V152 = 0x2
0x17d: V153 = EXP 0x2 0xa0
0x17e: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V155 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x183: V156 = ADDRESS
0x184: V157 = BALANCE V156
0x186: V158 = ISZERO V157
0x187: V159 = 0x8fc
0x18a: V160 = MUL 0x8fc V158
0x194: V161 = CALL V160 V155 V157 V149 0x0 V149 0x0
0x19a: V162 = ISZERO V161
0x19c: V163 = ISZERO V162
0x19d: V164 = 0x1aa
0x1a0: JUMPI 0x1aa V163
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, S1, 0x0]
Stack pops: 0
Stack additions: [V162]
Exit stack: [V13, 0x27, V25, V27, V32, S2, S1, 0x0, V162]

================================

Block 0x1a1
[0x1a1:0x1a9]
---
Predecessors: [0x16f]
Successors: []
---
0x1a1 RETURNDATASIZE
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 RETURNDATACOPY
0x1a6 RETURNDATASIZE
0x1a7 PUSH1 0x0
0x1a9 REVERT
---
0x1a1: V165 = RETURNDATASIZE
0x1a2: V166 = 0x0
0x1a5: RETURNDATACOPY 0x0 0x0 V165
0x1a6: V167 = RETURNDATASIZE
0x1a7: V168 = 0x0
0x1a9: REVERT 0x0 V167
---
Entry stack: [V13, 0x27, V25, V27, V32, S3, S2, 0x0, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S3, S2, 0x0, V162]

================================

Block 0x1aa
[0x1aa:0x1af]
---
Predecessors: [0x16f]
Successors: [0x1b0]
---
0x1aa JUMPDEST
0x1ab POP
0x1ac PUSH1 0x0
0x1ae SWAP1
0x1af POP
---
0x1aa: JUMPDEST 
0x1ac: V169 = 0x0
---
Entry stack: [V13, 0x27, V25, V27, V32, S3, S2, 0x0, V162]
Stack pops: 2
Stack additions: [0x0]
Exit stack: [V13, 0x27, V25, V27, V32, S3, S2, 0x0]

================================

Block 0x1b0
[0x1b0:0x1b9]
---
Predecessors: [0x1aa, 0x222]
Successors: [0x1ba, 0x232]
---
0x1b0 JUMPDEST
0x1b1 DUP4
0x1b2 MLOAD
0x1b3 DUP2
0x1b4 LT
0x1b5 ISZERO
0x1b6 PUSH2 0x232
0x1b9 JUMPI
---
0x1b0: JUMPDEST 
0x1b2: V170 = M[V32]
0x1b4: V171 = LT S0 V170
0x1b5: V172 = ISZERO V171
0x1b6: V173 = 0x232
0x1b9: JUMPI 0x232 V172
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x27, V25, V27, V32, S2, S1, S0]

================================

Block 0x1ba
[0x1ba:0x1c5]
---
Predecessors: [0x1b0]
Successors: [0x1c6, 0x1c7]
---
0x1ba DUP4
0x1bb DUP2
0x1bc DUP2
0x1bd MLOAD
0x1be DUP2
0x1bf LT
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 PUSH2 0x1c7
0x1c5 JUMPI
---
0x1bd: V174 = M[V32]
0x1bf: V175 = LT S0 V174
0x1c0: V176 = ISZERO V175
0x1c1: V177 = ISZERO V176
0x1c2: V178 = 0x1c7
0x1c5: JUMPI 0x1c7 V177
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S0]
Exit stack: [V13, 0x27, V25, V27, V32, S2, S1, S0, V32, S0]

================================

Block 0x1c6
[0x1c6:0x1c6]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c6 INVALID
---
0x1c6: INVALID 
---
Entry stack: [V13, 0x27, V25, V27, V32, S4, S3, S2, V32, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S4, S3, S2, V32, S0]

================================

Block 0x1c7
[0x1c7:0x209]
---
Predecessors: [0x1ba]
Successors: [0x20a, 0x20e]
---
0x1c7 JUMPDEST
0x1c8 SWAP1
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP1
0x1cd PUSH1 0x20
0x1cf MUL
0x1d0 ADD
0x1d1 MLOAD
0x1d2 PUSH1 0x1
0x1d4 PUSH1 0xa0
0x1d6 PUSH1 0x2
0x1d8 EXP
0x1d9 SUB
0x1da AND
0x1db PUSH4 0xe14a6258
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 DUP2
0x1e4 PUSH4 0xffffffff
0x1e9 AND
0x1ea PUSH1 0xe0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef MUL
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x4
0x1f4 ADD
0x1f5 PUSH1 0x0
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb DUP4
0x1fc SUB
0x1fd DUP2
0x1fe PUSH1 0x0
0x200 DUP8
0x201 DUP1
0x202 EXTCODESIZE
0x203 ISZERO
0x204 DUP1
0x205 ISZERO
0x206 PUSH2 0x20e
0x209 JUMPI
---
0x1c7: JUMPDEST 
0x1c9: V179 = 0x20
0x1cb: V180 = ADD 0x20 V32
0x1cd: V181 = 0x20
0x1cf: V182 = MUL 0x20 S0
0x1d0: V183 = ADD V182 V180
0x1d1: V184 = M[V183]
0x1d2: V185 = 0x1
0x1d4: V186 = 0xa0
0x1d6: V187 = 0x2
0x1d8: V188 = EXP 0x2 0xa0
0x1d9: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1da: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x1db: V191 = 0xe14a6258
0x1e0: V192 = 0x40
0x1e2: V193 = M[0x40]
0x1e4: V194 = 0xffffffff
0x1e9: V195 = AND 0xffffffff 0xe14a6258
0x1ea: V196 = 0xe0
0x1ec: V197 = 0x2
0x1ee: V198 = EXP 0x2 0xe0
0x1ef: V199 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe14a6258
0x1f1: M[V193] = 0xe14a625800000000000000000000000000000000000000000000000000000000
0x1f2: V200 = 0x4
0x1f4: V201 = ADD 0x4 V193
0x1f5: V202 = 0x0
0x1f7: V203 = 0x40
0x1f9: V204 = M[0x40]
0x1fc: V205 = SUB V201 V204
0x1fe: V206 = 0x0
0x202: V207 = EXTCODESIZE V190
0x203: V208 = ISZERO V207
0x205: V209 = ISZERO V208
0x206: V210 = 0x20e
0x209: JUMPI 0x20e V209
---
Entry stack: [V13, 0x27, V25, V27, V32, S4, S3, S2, V32, S0]
Stack pops: 2
Stack additions: [V190, 0xe14a6258, V201, 0x0, V204, V205, V204, 0x0, V190, V208]
Exit stack: [V13, 0x27, V25, V27, V32, S4, S3, S2, V190, 0xe14a6258, V201, 0x0, V204, V205, V204, 0x0, V190, V208]

================================

Block 0x20a
[0x20a:0x20d]
---
Predecessors: [0x1c7]
Successors: []
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
---
0x20a: V211 = 0x0
0x20d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27, V25, V27, V32, S12, S11, S10, V190, 0xe14a6258, V201, 0x0, V204, V205, V204, 0x0, V190, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S12, S11, S10, V190, 0xe14a6258, V201, 0x0, V204, V205, V204, 0x0, V190, V208]

================================

Block 0x20e
[0x20e:0x218]
---
Predecessors: [0x1c7]
Successors: [0x219, 0x222]
---
0x20e JUMPDEST
0x20f POP
0x210 GAS
0x211 CALL
0x212 ISZERO
0x213 DUP1
0x214 ISZERO
0x215 PUSH2 0x222
0x218 JUMPI
---
0x20e: JUMPDEST 
0x210: V212 = GAS
0x211: V213 = CALL V212 V190 0x0 V204 V205 V204 0x0
0x212: V214 = ISZERO V213
0x214: V215 = ISZERO V214
0x215: V216 = 0x222
0x218: JUMPI 0x222 V215
---
Entry stack: [V13, 0x27, V25, V27, V32, S12, S11, S10, V190, 0xe14a6258, V201, 0x0, V204, V205, V204, 0x0, V190, V208]
Stack pops: 7
Stack additions: [V214]
Exit stack: [V13, 0x27, V25, V27, V32, S12, S11, S10, V190, 0xe14a6258, V201, V214]

================================

Block 0x219
[0x219:0x221]
---
Predecessors: [0x20e]
Successors: []
---
0x219 RETURNDATASIZE
0x21a PUSH1 0x0
0x21c DUP1
0x21d RETURNDATACOPY
0x21e RETURNDATASIZE
0x21f PUSH1 0x0
0x221 REVERT
---
0x219: V217 = RETURNDATASIZE
0x21a: V218 = 0x0
0x21d: RETURNDATACOPY 0x0 0x0 V217
0x21e: V219 = RETURNDATASIZE
0x21f: V220 = 0x0
0x221: REVERT 0x0 V219
---
Entry stack: [V13, 0x27, V25, V27, V32, S6, S5, S4, V190, 0xe14a6258, V201, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27, V25, V27, V32, S6, S5, S4, V190, 0xe14a6258, V201, V214]

================================

Block 0x222
[0x222:0x231]
---
Predecessors: [0x20e]
Successors: [0x1b0]
---
0x222 JUMPDEST
0x223 POP
0x224 POP
0x225 PUSH1 0x1
0x227 SWAP1
0x228 SWAP3
0x229 ADD
0x22a SWAP2
0x22b POP
0x22c PUSH2 0x1b0
0x22f SWAP1
0x230 POP
0x231 JUMP
---
0x222: JUMPDEST 
0x225: V221 = 0x1
0x229: V222 = ADD S4 0x1
0x22c: V223 = 0x1b0
0x231: JUMP 0x1b0
---
Entry stack: [V13, 0x27, V25, V27, V32, S6, S5, S4, V190, 0xe14a6258, V201, V214]
Stack pops: 5
Stack additions: [V222]
Exit stack: [V13, 0x27, V25, V27, V32, S6, S5, V222]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x1b0]
Successors: [0x27]
---
0x232 JUMPDEST
0x233 POP
0x234 POP
0x235 POP
0x236 POP
0x237 POP
0x238 POP
0x239 JUMP
---
0x232: JUMPDEST 
0x239: JUMP 0x27
---
Entry stack: [V13, 0x27, V25, V27, V32, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x23a
[0x23a:0x249]
---
Predecessors: [0x7d]
Successors: [0x8e]
---
0x23a JUMPDEST
0x23b PUSH1 0x40
0x23d MLOAD
0x23e PUSH2 0x433
0x241 DUP1
0x242 PUSH2 0x24b
0x245 DUP4
0x246 CODECOPY
0x247 ADD
0x248 SWAP1
0x249 JUMP
---
0x23a: JUMPDEST 
0x23b: V224 = 0x40
0x23d: V225 = M[0x40]
0x23e: V226 = 0x433
0x242: V227 = 0x24b
0x246: CODECOPY V225 0x24b 0x433
0x247: V228 = ADD 0x433 V225
0x249: JUMP 0x8e
---
Entry stack: [V13, 0x27, V25, V27, V32, S5, S4, 0x0, 0x16345785d8a0000, V25, 0x8e]
Stack pops: 1
Stack additions: [V228]
Exit stack: [V13, 0x27, V25, V27, V32, S5, S4, 0x0, 0x16345785d8a0000, V25, V228]

================================

Block 0x24a
[0x24a:0x2aa]
---
Predecessors: []
Successors: [0x2ab]
---
0x24a STOP
0x24b PUSH1 0x80
0x24d PUSH1 0x40
0x24f MSTORE
0x250 PUSH1 0x40
0x252 MLOAD
0x253 PUSH1 0x20
0x255 DUP1
0x256 PUSH2 0x433
0x259 DUP4
0x25a CODECOPY
0x25b DUP2
0x25c ADD
0x25d PUSH1 0x40
0x25f DUP2
0x260 DUP2
0x261 MSTORE
0x262 SWAP2
0x263 MLOAD
0x264 PUSH13 0x1000000000000000000000000
0x272 ADDRESS
0x273 MUL
0x274 PUSH1 0x20
0x276 DUP1
0x277 DUP5
0x278 ADD
0x279 SWAP2
0x27a SWAP1
0x27b SWAP2
0x27c MSTORE
0x27d DUP4
0x27e MLOAD
0x27f DUP1
0x280 DUP5
0x281 SUB
0x282 PUSH1 0x14
0x284 ADD
0x285 DUP2
0x286 MSTORE
0x287 PUSH1 0x34
0x289 SWAP1
0x28a SWAP4
0x28b ADD
0x28c SWAP4
0x28d DUP5
0x28e SWAP1
0x28f MSTORE
0x290 DUP3
0x291 MLOAD
0x292 SWAP2
0x293 SWAP4
0x294 DUP5
0x295 SWAP4
0x296 PUSH1 0x0
0x298 SWAP4
0x299 DUP5
0x29a SWAP4
0x29b NUMBER
0x29c SWAP4
0x29d TIMESTAMP
0x29e SWAP4
0x29f SWAP3
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 DUP3
0x2a3 SWAP2
0x2a4 SWAP1
0x2a5 DUP5
0x2a6 ADD
0x2a7 SWAP1
0x2a8 DUP1
0x2a9 DUP4
0x2aa DUP4
---
0x24a: STOP 
0x24b: V229 = 0x80
0x24d: V230 = 0x40
0x24f: M[0x40] = 0x80
0x250: V231 = 0x40
0x252: V232 = M[0x40]
0x253: V233 = 0x20
0x256: V234 = 0x433
0x25a: CODECOPY V232 0x433 0x20
0x25c: V235 = ADD V232 0x20
0x25d: V236 = 0x40
0x261: M[0x40] = V235
0x263: V237 = M[V232]
0x264: V238 = 0x1000000000000000000000000
0x272: V239 = ADDRESS
0x273: V240 = MUL V239 0x1000000000000000000000000
0x274: V241 = 0x20
0x278: V242 = ADD V235 0x20
0x27c: M[V242] = V240
0x27e: V243 = M[0x40]
0x281: V244 = SUB V235 V243
0x282: V245 = 0x14
0x284: V246 = ADD 0x14 V244
0x286: M[V243] = V246
0x287: V247 = 0x34
0x28b: V248 = ADD V235 0x34
0x28f: M[0x40] = V248
0x291: V249 = M[V243]
0x296: V250 = 0x0
0x29b: V251 = NUMBER
0x29d: V252 = TIMESTAMP
0x2a6: V253 = ADD V243 0x20
---
Entry stack: []
Stack pops: 0
Stack additions: [V253, V248, V249, V249, V253, V248, V248, V243, V252, V251, 0x0, 0x0, V237, V237]
Exit stack: []

================================

Block 0x2ab
[0x2ab:0x2b3]
---
Predecessors: [0x24a]
Successors: [0x2b4]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x20
0x2ae DUP4
0x2af LT
0x2b0 PUSH2 0x7f
0x2b3 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V254 = 0x20
0x2af: V255 = LT V249 0x20
0x2b0: V256 = 0x7f
0x2b3: THROWI V255
---
Entry stack: [V237, V237, 0x0, 0x0, V251, V252, V243, V248, V248, V253, V249, V249, V248, V253]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V237, V237, 0x0, 0x0, V251, V252, V243, V248, V248, V253, V249, V249, V248, V253]

================================

Block 0x2b4
[0x2b4:0x2fe]
---
Predecessors: [0x2ab]
Successors: [0x2ff]
---
0x2b4 DUP1
0x2b5 MLOAD
0x2b6 DUP3
0x2b7 MSTORE
0x2b8 PUSH1 0x1f
0x2ba NOT
0x2bb SWAP1
0x2bc SWAP3
0x2bd ADD
0x2be SWAP2
0x2bf PUSH1 0x20
0x2c1 SWAP2
0x2c2 DUP3
0x2c3 ADD
0x2c4 SWAP2
0x2c5 ADD
0x2c6 PUSH2 0x60
0x2c9 JUMP
0x2ca JUMPDEST
0x2cb MLOAD
0x2cc DUP2
0x2cd MLOAD
0x2ce PUSH1 0x20
0x2d0 SWAP4
0x2d1 SWAP1
0x2d2 SWAP4
0x2d3 SUB
0x2d4 PUSH2 0x100
0x2d7 EXP
0x2d8 PUSH1 0x0
0x2da NOT
0x2db ADD
0x2dc DUP1
0x2dd NOT
0x2de SWAP1
0x2df SWAP2
0x2e0 AND
0x2e1 SWAP3
0x2e2 AND
0x2e3 SWAP2
0x2e4 SWAP1
0x2e5 SWAP2
0x2e6 OR
0x2e7 SWAP1
0x2e8 MSTORE
0x2e9 PUSH1 0x40
0x2eb MLOAD
0x2ec SWAP3
0x2ed ADD
0x2ee DUP3
0x2ef SWAP1
0x2f0 SUB
0x2f1 SWAP1
0x2f2 SWAP2
0x2f3 SHA3
0x2f4 SWAP3
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 DUP2
0x2f9 ISZERO
0x2fa ISZERO
0x2fb PUSH2 0xb5
0x2fe JUMPI
---
0x2b5: V257 = M[V253]
0x2b7: M[V248] = V257
0x2b8: V258 = 0x1f
0x2ba: V259 = NOT 0x1f
0x2bd: V260 = ADD V249 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2bf: V261 = 0x20
0x2c3: V262 = ADD 0x20 V248
0x2c5: V263 = ADD 0x20 V253
0x2c6: V264 = 0x60
0x2c9: THROW 
0x2ca: JUMPDEST 
0x2cb: V265 = M[S0]
0x2cd: V266 = M[S1]
0x2ce: V267 = 0x20
0x2d3: V268 = SUB 0x20 S2
0x2d4: V269 = 0x100
0x2d7: V270 = EXP 0x100 V268
0x2d8: V271 = 0x0
0x2da: V272 = NOT 0x0
0x2db: V273 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V270
0x2dd: V274 = NOT V273
0x2e0: V275 = AND V265 V274
0x2e2: V276 = AND V266 V273
0x2e6: V277 = OR V276 V275
0x2e8: M[S1] = V277
0x2e9: V278 = 0x40
0x2eb: V279 = M[0x40]
0x2ed: V280 = ADD S5 S3
0x2f0: V281 = SUB V280 V279
0x2f3: V282 = SHA3 V279 V281
0x2f9: V283 = ISZERO S8
0x2fa: V284 = ISZERO V283
0x2fb: V285 = 0xb5
0x2fe: THROWI V284
---
Entry stack: [V237, V237, 0x0, 0x0, V251, V252, V243, V248, V248, V253, V249, V249, V248, V253]
Stack pops: 3
Stack additions: [V282, S8]
Exit stack: []

================================

Block 0x2ff
[0x2ff:0x353]
---
Predecessors: [0x2b4]
Successors: [0x354]
---
0x2ff INVALID
0x300 JUMPDEST
0x301 DIV
0x302 GASLIMIT
0x303 TIMESTAMP
0x304 COINBASE
0x305 PUSH1 0x40
0x307 MLOAD
0x308 PUSH1 0x20
0x30a ADD
0x30b DUP1
0x30c DUP3
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 PUSH1 0x2
0x313 EXP
0x314 SUB
0x315 AND
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e AND
0x31f PUSH13 0x1000000000000000000000000
0x32d MUL
0x32e DUP2
0x32f MSTORE
0x330 PUSH1 0x14
0x332 ADD
0x333 SWAP2
0x334 POP
0x335 POP
0x336 PUSH1 0x40
0x338 MLOAD
0x339 PUSH1 0x20
0x33b DUP2
0x33c DUP4
0x33d SUB
0x33e SUB
0x33f DUP2
0x340 MSTORE
0x341 SWAP1
0x342 PUSH1 0x40
0x344 MSTORE
0x345 PUSH1 0x40
0x347 MLOAD
0x348 DUP1
0x349 DUP3
0x34a DUP1
0x34b MLOAD
0x34c SWAP1
0x34d PUSH1 0x20
0x34f ADD
0x350 SWAP1
0x351 DUP1
0x352 DUP4
0x353 DUP4
---
0x2ff: INVALID 
0x300: JUMPDEST 
0x301: V286 = DIV S0 S1
0x302: V287 = GASLIMIT
0x303: V288 = TIMESTAMP
0x304: V289 = COINBASE
0x305: V290 = 0x40
0x307: V291 = M[0x40]
0x308: V292 = 0x20
0x30a: V293 = ADD 0x20 V291
0x30d: V294 = 0x1
0x30f: V295 = 0xa0
0x311: V296 = 0x2
0x313: V297 = EXP 0x2 0xa0
0x314: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x316: V300 = 0x1
0x318: V301 = 0xa0
0x31a: V302 = 0x2
0x31c: V303 = EXP 0x2 0xa0
0x31d: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x31f: V306 = 0x1000000000000000000000000
0x32d: V307 = MUL 0x1000000000000000000000000 V305
0x32f: M[V293] = V307
0x330: V308 = 0x14
0x332: V309 = ADD 0x14 V293
0x336: V310 = 0x40
0x338: V311 = M[0x40]
0x339: V312 = 0x20
0x33d: V313 = SUB V309 V311
0x33e: V314 = SUB V313 0x20
0x340: M[V311] = V314
0x342: V315 = 0x40
0x344: M[0x40] = V309
0x345: V316 = 0x40
0x347: V317 = M[0x40]
0x34b: V318 = M[V311]
0x34d: V319 = 0x20
0x34f: V320 = ADD 0x20 V311
---
Entry stack: [S1, V282]
Stack pops: 0
Stack additions: [V320, V317, V318, V318, V320, V317, V317, V311, V288, V287, V286]
Exit stack: []

================================

Block 0x354
[0x354:0x35c]
---
Predecessors: [0x2ff]
Successors: [0x35d]
---
0x354 JUMPDEST
0x355 PUSH1 0x20
0x357 DUP4
0x358 LT
0x359 PUSH2 0x128
0x35c JUMPI
---
0x354: JUMPDEST 
0x355: V321 = 0x20
0x358: V322 = LT V318 0x20
0x359: V323 = 0x128
0x35c: THROWI V322
---
Entry stack: [V286, V287, V288, V311, V317, V317, V320, V318, V318, V317, V320]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V286, V287, V288, V311, V317, V317, V320, V318, V318, V317, V320]

================================

Block 0x35d
[0x35d:0x3a7]
---
Predecessors: [0x354]
Successors: [0x3a8]
---
0x35d DUP1
0x35e MLOAD
0x35f DUP3
0x360 MSTORE
0x361 PUSH1 0x1f
0x363 NOT
0x364 SWAP1
0x365 SWAP3
0x366 ADD
0x367 SWAP2
0x368 PUSH1 0x20
0x36a SWAP2
0x36b DUP3
0x36c ADD
0x36d SWAP2
0x36e ADD
0x36f PUSH2 0x109
0x372 JUMP
0x373 JUMPDEST
0x374 MLOAD
0x375 DUP2
0x376 MLOAD
0x377 PUSH1 0x20
0x379 SWAP4
0x37a SWAP1
0x37b SWAP4
0x37c SUB
0x37d PUSH2 0x100
0x380 EXP
0x381 PUSH1 0x0
0x383 NOT
0x384 ADD
0x385 DUP1
0x386 NOT
0x387 SWAP1
0x388 SWAP2
0x389 AND
0x38a SWAP3
0x38b AND
0x38c SWAP2
0x38d SWAP1
0x38e SWAP2
0x38f OR
0x390 SWAP1
0x391 MSTORE
0x392 PUSH1 0x40
0x394 MLOAD
0x395 SWAP3
0x396 ADD
0x397 DUP3
0x398 SWAP1
0x399 SUB
0x39a SWAP1
0x39b SWAP2
0x39c SHA3
0x39d SWAP3
0x39e POP
0x39f POP
0x3a0 POP
0x3a1 DUP2
0x3a2 ISZERO
0x3a3 ISZERO
0x3a4 PUSH2 0x15e
0x3a7 JUMPI
---
0x35e: V324 = M[V320]
0x360: M[V317] = V324
0x361: V325 = 0x1f
0x363: V326 = NOT 0x1f
0x366: V327 = ADD V318 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x368: V328 = 0x20
0x36c: V329 = ADD 0x20 V317
0x36e: V330 = ADD 0x20 V320
0x36f: V331 = 0x109
0x372: THROW 
0x373: JUMPDEST 
0x374: V332 = M[S0]
0x376: V333 = M[S1]
0x377: V334 = 0x20
0x37c: V335 = SUB 0x20 S2
0x37d: V336 = 0x100
0x380: V337 = EXP 0x100 V335
0x381: V338 = 0x0
0x383: V339 = NOT 0x0
0x384: V340 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V337
0x386: V341 = NOT V340
0x389: V342 = AND V332 V341
0x38b: V343 = AND V333 V340
0x38f: V344 = OR V343 V342
0x391: M[S1] = V344
0x392: V345 = 0x40
0x394: V346 = M[0x40]
0x396: V347 = ADD S5 S3
0x399: V348 = SUB V347 V346
0x39c: V349 = SHA3 V346 V348
0x3a2: V350 = ISZERO S8
0x3a3: V351 = ISZERO V350
0x3a4: V352 = 0x15e
0x3a7: THROWI V351
---
Entry stack: [V286, V287, V288, V311, V317, V317, V320, V318, V318, V317, V320]
Stack pops: 3
Stack additions: [V349, S8]
Exit stack: []

================================

Block 0x3a8
[0x3a8:0x3df]
---
Predecessors: [0x35d]
Successors: [0x3e0]
---
0x3a8 INVALID
0x3a9 JUMPDEST
0x3aa DIV
0x3ab DIFFICULTY
0x3ac TIMESTAMP
0x3ad ADD
0x3ae ADD
0x3af ADD
0x3b0 ADD
0x3b1 ADD
0x3b2 PUSH1 0x40
0x3b4 MLOAD
0x3b5 PUSH1 0x20
0x3b7 ADD
0x3b8 DUP1
0x3b9 DUP3
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP2
0x3c0 POP
0x3c1 POP
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 PUSH1 0x20
0x3c7 DUP2
0x3c8 DUP4
0x3c9 SUB
0x3ca SUB
0x3cb DUP2
0x3cc MSTORE
0x3cd SWAP1
0x3ce PUSH1 0x40
0x3d0 MSTORE
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 DUP1
0x3d5 DUP3
0x3d6 DUP1
0x3d7 MLOAD
0x3d8 SWAP1
0x3d9 PUSH1 0x20
0x3db ADD
0x3dc SWAP1
0x3dd DUP1
0x3de DUP4
0x3df DUP4
---
0x3a8: INVALID 
0x3a9: JUMPDEST 
0x3aa: V353 = DIV S0 S1
0x3ab: V354 = DIFFICULTY
0x3ac: V355 = TIMESTAMP
0x3ad: V356 = ADD V355 V354
0x3ae: V357 = ADD V356 V353
0x3af: V358 = ADD V357 S2
0x3b0: V359 = ADD V358 S3
0x3b1: V360 = ADD V359 S4
0x3b2: V361 = 0x40
0x3b4: V362 = M[0x40]
0x3b5: V363 = 0x20
0x3b7: V364 = ADD 0x20 V362
0x3bb: M[V364] = V360
0x3bc: V365 = 0x20
0x3be: V366 = ADD 0x20 V364
0x3c2: V367 = 0x40
0x3c4: V368 = M[0x40]
0x3c5: V369 = 0x20
0x3c9: V370 = SUB V366 V368
0x3ca: V371 = SUB V370 0x20
0x3cc: M[V368] = V371
0x3ce: V372 = 0x40
0x3d0: M[0x40] = V366
0x3d1: V373 = 0x40
0x3d3: V374 = M[0x40]
0x3d7: V375 = M[V368]
0x3d9: V376 = 0x20
0x3db: V377 = ADD 0x20 V368
---
Entry stack: [S1, V349]
Stack pops: 0
Stack additions: [V377, V374, V375, V375, V377, V374, V374, V368]
Exit stack: []

================================

Block 0x3e0
[0x3e0:0x3e8]
---
Predecessors: [0x3a8]
Successors: [0x3e9]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x20
0x3e3 DUP4
0x3e4 LT
0x3e5 PUSH2 0x1b4
0x3e8 JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V378 = 0x20
0x3e4: V379 = LT V375 0x20
0x3e5: V380 = 0x1b4
0x3e8: THROWI V379
---
Entry stack: [V368, V374, V374, V377, V375, V375, V374, V377]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V368, V374, V374, V377, V375, V375, V374, V377]

================================

Block 0x3e9
[0x3e9:0x47d]
---
Predecessors: [0x3e0]
Successors: [0x47e]
---
0x3e9 DUP1
0x3ea MLOAD
0x3eb DUP3
0x3ec MSTORE
0x3ed PUSH1 0x1f
0x3ef NOT
0x3f0 SWAP1
0x3f1 SWAP3
0x3f2 ADD
0x3f3 SWAP2
0x3f4 PUSH1 0x20
0x3f6 SWAP2
0x3f7 DUP3
0x3f8 ADD
0x3f9 SWAP2
0x3fa ADD
0x3fb PUSH2 0x195
0x3fe JUMP
0x3ff JUMPDEST
0x400 MLOAD
0x401 DUP2
0x402 MLOAD
0x403 PUSH1 0x20
0x405 SWAP4
0x406 DUP5
0x407 SUB
0x408 PUSH2 0x100
0x40b EXP
0x40c PUSH1 0x0
0x40e NOT
0x40f ADD
0x410 DUP1
0x411 NOT
0x412 SWAP1
0x413 SWAP3
0x414 AND
0x415 SWAP2
0x416 AND
0x417 OR
0x418 SWAP1
0x419 MSTORE
0x41a PUSH1 0x40
0x41c DUP1
0x41d MLOAD
0x41e SWAP3
0x41f SWAP1
0x420 SWAP5
0x421 ADD
0x422 DUP3
0x423 SWAP1
0x424 SUB
0x425 DUP3
0x426 SHA3
0x427 PUSH32 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x448 DUP4
0x449 MSTORE
0x44a SWAP4
0x44b MLOAD
0x44c SWAP4
0x44d SWAP8
0x44e POP
0x44f PUSH1 0x1
0x451 PUSH1 0xa0
0x453 PUSH1 0x2
0x455 EXP
0x456 SUB
0x457 DUP10
0x458 AND
0x459 SWAP6
0x45a POP
0x45b PUSH4 0x11a09ae7
0x460 SWAP5
0x461 POP
0x462 PUSH1 0x4
0x464 DUP1
0x465 DUP4
0x466 ADD
0x467 SWAP5
0x468 SWAP2
0x469 SWAP4
0x46a POP
0x46b SWAP1
0x46c SWAP2
0x46d DUP3
0x46e SWAP1
0x46f SUB
0x470 ADD
0x471 DUP2
0x472 PUSH1 0x0
0x474 DUP8
0x475 DUP1
0x476 EXTCODESIZE
0x477 ISZERO
0x478 DUP1
0x479 ISZERO
0x47a PUSH2 0x237
0x47d JUMPI
---
0x3ea: V381 = M[V377]
0x3ec: M[V374] = V381
0x3ed: V382 = 0x1f
0x3ef: V383 = NOT 0x1f
0x3f2: V384 = ADD V375 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3f4: V385 = 0x20
0x3f8: V386 = ADD 0x20 V374
0x3fa: V387 = ADD 0x20 V377
0x3fb: V388 = 0x195
0x3fe: THROW 
0x3ff: JUMPDEST 
0x400: V389 = M[S0]
0x402: V390 = M[S1]
0x403: V391 = 0x20
0x407: V392 = SUB 0x20 S2
0x408: V393 = 0x100
0x40b: V394 = EXP 0x100 V392
0x40c: V395 = 0x0
0x40e: V396 = NOT 0x0
0x40f: V397 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V394
0x411: V398 = NOT V397
0x414: V399 = AND V389 V398
0x416: V400 = AND V397 V390
0x417: V401 = OR V400 V399
0x419: M[S1] = V401
0x41a: V402 = 0x40
0x41d: V403 = M[0x40]
0x421: V404 = ADD S5 S3
0x424: V405 = SUB V404 V403
0x426: V406 = SHA3 V403 V405
0x427: V407 = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x449: M[V403] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x44b: V408 = M[0x40]
0x44f: V409 = 0x1
0x451: V410 = 0xa0
0x453: V411 = 0x2
0x455: V412 = EXP 0x2 0xa0
0x456: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V414 = AND S10 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V415 = 0x11a09ae7
0x462: V416 = 0x4
0x466: V417 = ADD V403 0x4
0x46f: V418 = SUB V403 V408
0x470: V419 = ADD V418 0x4
0x472: V420 = 0x0
0x476: V421 = EXTCODESIZE V414
0x477: V422 = ISZERO V421
0x479: V423 = ISZERO V422
0x47a: V424 = 0x237
0x47d: THROWI V423
---
Entry stack: [V368, V374, V374, V377, V375, V375, V374, V377]
Stack pops: 3
Stack additions: [V422, V414, 0x0, V408, V419, V408, 0x20, V417, 0x11a09ae7, V414, S8, V406, S10]
Exit stack: []

================================

Block 0x47e
[0x47e:0x48c]
---
Predecessors: [0x3e9]
Successors: [0x48d]
---
0x47e PUSH1 0x0
0x480 DUP1
0x481 REVERT
0x482 JUMPDEST
0x483 POP
0x484 GAS
0x485 CALL
0x486 ISZERO
0x487 DUP1
0x488 ISZERO
0x489 PUSH2 0x24b
0x48c JUMPI
---
0x47e: V425 = 0x0
0x481: REVERT 0x0 0x0
0x482: JUMPDEST 
0x484: V426 = GAS
0x485: V427 = CALL V426 S1 S2 S3 S4 S5 S6
0x486: V428 = ISZERO V427
0x488: V429 = ISZERO V428
0x489: V430 = 0x24b
0x48c: THROWI V429
---
Entry stack: [S12, V406, S10, V414, 0x11a09ae7, V417, 0x20, V408, V419, V408, 0x0, V414, V422]
Stack pops: 0
Stack additions: [V428]
Exit stack: []

================================

Block 0x48d
[0x48d:0x4a7]
---
Predecessors: [0x47e]
Successors: [0x4a8]
---
0x48d RETURNDATASIZE
0x48e PUSH1 0x0
0x490 DUP1
0x491 RETURNDATACOPY
0x492 RETURNDATASIZE
0x493 PUSH1 0x0
0x495 REVERT
0x496 JUMPDEST
0x497 POP
0x498 POP
0x499 POP
0x49a POP
0x49b PUSH1 0x40
0x49d MLOAD
0x49e RETURNDATASIZE
0x49f PUSH1 0x20
0x4a1 DUP2
0x4a2 LT
0x4a3 ISZERO
0x4a4 PUSH2 0x261
0x4a7 JUMPI
---
0x48d: V431 = RETURNDATASIZE
0x48e: V432 = 0x0
0x491: RETURNDATACOPY 0x0 0x0 V431
0x492: V433 = RETURNDATASIZE
0x493: V434 = 0x0
0x495: REVERT 0x0 V433
0x496: JUMPDEST 
0x49b: V435 = 0x40
0x49d: V436 = M[0x40]
0x49e: V437 = RETURNDATASIZE
0x49f: V438 = 0x20
0x4a2: V439 = LT V437 0x20
0x4a3: V440 = ISZERO V439
0x4a4: V441 = 0x261
0x4a7: THROWI V440
---
Entry stack: [V428]
Stack pops: 0
Stack additions: [V437, V436]
Exit stack: []

================================

Block 0x4a8
[0x4a8:0x4c2]
---
Predecessors: [0x48d]
Successors: [0x4c3]
---
0x4a8 PUSH1 0x0
0x4aa DUP1
0x4ab REVERT
0x4ac JUMPDEST
0x4ad POP
0x4ae MLOAD
0x4af SWAP1
0x4b0 POP
0x4b1 DUP1
0x4b2 PUSH2 0x3e8
0x4b5 DUP4
0x4b6 DIV
0x4b7 PUSH2 0x3e8
0x4ba MUL
0x4bb DUP4
0x4bc SUB
0x4bd LT
0x4be ISZERO
0x4bf PUSH2 0x31f
0x4c2 JUMPI
---
0x4a8: V442 = 0x0
0x4ab: REVERT 0x0 0x0
0x4ac: JUMPDEST 
0x4ae: V443 = M[S1]
0x4b2: V444 = 0x3e8
0x4b6: V445 = DIV S3 0x3e8
0x4b7: V446 = 0x3e8
0x4ba: V447 = MUL 0x3e8 V445
0x4bc: V448 = SUB S3 V447
0x4bd: V449 = LT V448 V443
0x4be: V450 = ISZERO V449
0x4bf: V451 = 0x31f
0x4c2: THROWI V450
---
Entry stack: [V436, V437]
Stack pops: 0
Stack additions: [V443, S3]
Exit stack: []

================================

Block 0x4c3
[0x4c3:0x53a]
---
Predecessors: [0x4a8]
Successors: [0x53b]
---
0x4c3 PUSH1 0x40
0x4c5 MLOAD
0x4c6 PUSH1 0x1
0x4c8 PUSH1 0xa0
0x4ca PUSH1 0x2
0x4cc EXP
0x4cd SUB
0x4ce DUP5
0x4cf AND
0x4d0 SWAP1
0x4d1 PUSH8 0x16345785d8a0000
0x4da SWAP1
0x4db PUSH1 0x0
0x4dd DUP2
0x4de DUP2
0x4df DUP2
0x4e0 DUP6
0x4e1 DUP8
0x4e2 GAS
0x4e3 CALL
0x4e4 SWAP3
0x4e5 POP
0x4e6 POP
0x4e7 POP
0x4e8 POP
0x4e9 DUP3
0x4ea PUSH1 0x1
0x4ec PUSH1 0xa0
0x4ee PUSH1 0x2
0x4f0 EXP
0x4f1 SUB
0x4f2 AND
0x4f3 PUSH4 0x3ccfd60b
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP2
0x4fc PUSH4 0xffffffff
0x501 AND
0x502 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x520 MUL
0x521 DUP2
0x522 MSTORE
0x523 PUSH1 0x4
0x525 ADD
0x526 PUSH1 0x0
0x528 PUSH1 0x40
0x52a MLOAD
0x52b DUP1
0x52c DUP4
0x52d SUB
0x52e DUP2
0x52f PUSH1 0x0
0x531 DUP8
0x532 DUP1
0x533 EXTCODESIZE
0x534 ISZERO
0x535 DUP1
0x536 ISZERO
0x537 PUSH2 0x2f4
0x53a JUMPI
---
0x4c3: V452 = 0x40
0x4c5: V453 = M[0x40]
0x4c6: V454 = 0x1
0x4c8: V455 = 0xa0
0x4ca: V456 = 0x2
0x4cc: V457 = EXP 0x2 0xa0
0x4cd: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cf: V459 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V460 = 0x16345785d8a0000
0x4db: V461 = 0x0
0x4e2: V462 = GAS
0x4e3: V463 = CALL V462 V459 0x16345785d8a0000 V453 0x0 V453 0x0
0x4ea: V464 = 0x1
0x4ec: V465 = 0xa0
0x4ee: V466 = 0x2
0x4f0: V467 = EXP 0x2 0xa0
0x4f1: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f2: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x4f3: V470 = 0x3ccfd60b
0x4f8: V471 = 0x40
0x4fa: V472 = M[0x40]
0x4fc: V473 = 0xffffffff
0x501: V474 = AND 0xffffffff 0x3ccfd60b
0x502: V475 = 0x100000000000000000000000000000000000000000000000000000000
0x520: V476 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x522: M[V472] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x523: V477 = 0x4
0x525: V478 = ADD 0x4 V472
0x526: V479 = 0x0
0x528: V480 = 0x40
0x52a: V481 = M[0x40]
0x52d: V482 = SUB V478 V481
0x52f: V483 = 0x0
0x533: V484 = EXTCODESIZE V469
0x534: V485 = ISZERO V484
0x536: V486 = ISZERO V485
0x537: V487 = 0x2f4
0x53a: THROWI V486
---
Entry stack: [S1, V443]
Stack pops: 3
Stack additions: [S2, S1, S0, V469, 0x3ccfd60b, V478, 0x0, V481, V482, V481, 0x0, V469, V485]
Exit stack: [S0, S1, V443, V469, 0x3ccfd60b, V478, 0x0, V481, V482, V481, 0x0, V469, V485]

================================

Block 0x53b
[0x53b:0x549]
---
Predecessors: [0x4c3]
Successors: [0x54a]
---
0x53b PUSH1 0x0
0x53d DUP1
0x53e REVERT
0x53f JUMPDEST
0x540 POP
0x541 GAS
0x542 CALL
0x543 ISZERO
0x544 DUP1
0x545 ISZERO
0x546 PUSH2 0x308
0x549 JUMPI
---
0x53b: V488 = 0x0
0x53e: REVERT 0x0 0x0
0x53f: JUMPDEST 
0x541: V489 = GAS
0x542: V490 = CALL V489 S1 S2 S3 S4 S5 S6
0x543: V491 = ISZERO V490
0x545: V492 = ISZERO V491
0x546: V493 = 0x308
0x549: THROWI V492
---
Entry stack: [S12, S11, V443, V469, 0x3ccfd60b, V478, 0x0, V481, V482, V481, 0x0, V469, V485]
Stack pops: 0
Stack additions: [V491]
Exit stack: []

================================

Block 0x54a
[0x54a:0x58d]
---
Predecessors: [0x53b]
Successors: [0x58e]
---
0x54a RETURNDATASIZE
0x54b PUSH1 0x0
0x54d DUP1
0x54e RETURNDATACOPY
0x54f RETURNDATASIZE
0x550 PUSH1 0x0
0x552 REVERT
0x553 JUMPDEST
0x554 POP
0x555 POP
0x556 PUSH1 0x0
0x558 DUP1
0x559 SLOAD
0x55a PUSH1 0xff
0x55c NOT
0x55d AND
0x55e PUSH1 0x1
0x560 OR
0x561 SWAP1
0x562 SSTORE
0x563 POP
0x564 PUSH2 0x34e
0x567 SWAP1
0x568 POP
0x569 JUMP
0x56a JUMPDEST
0x56b PUSH1 0x40
0x56d MLOAD
0x56e CALLER
0x56f SWAP1
0x570 ADDRESS
0x571 BALANCE
0x572 DUP1
0x573 ISZERO
0x574 PUSH2 0x8fc
0x577 MUL
0x578 SWAP2
0x579 PUSH1 0x0
0x57b DUP2
0x57c DUP2
0x57d DUP2
0x57e DUP6
0x57f DUP9
0x580 DUP9
0x581 CALL
0x582 SWAP4
0x583 POP
0x584 POP
0x585 POP
0x586 POP
0x587 ISZERO
0x588 DUP1
0x589 ISZERO
0x58a PUSH2 0x34c
0x58d JUMPI
---
0x54a: V494 = RETURNDATASIZE
0x54b: V495 = 0x0
0x54e: RETURNDATACOPY 0x0 0x0 V494
0x54f: V496 = RETURNDATASIZE
0x550: V497 = 0x0
0x552: REVERT 0x0 V496
0x553: JUMPDEST 
0x556: V498 = 0x0
0x559: V499 = S[0x0]
0x55a: V500 = 0xff
0x55c: V501 = NOT 0xff
0x55d: V502 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V499
0x55e: V503 = 0x1
0x560: V504 = OR 0x1 V502
0x562: S[0x0] = V504
0x564: V505 = 0x34e
0x569: THROW 
0x56a: JUMPDEST 
0x56b: V506 = 0x40
0x56d: V507 = M[0x40]
0x56e: V508 = CALLER
0x570: V509 = ADDRESS
0x571: V510 = BALANCE V509
0x573: V511 = ISZERO V510
0x574: V512 = 0x8fc
0x577: V513 = MUL 0x8fc V511
0x579: V514 = 0x0
0x581: V515 = CALL V513 V508 V510 V507 0x0 V507 0x0
0x587: V516 = ISZERO V515
0x589: V517 = ISZERO V516
0x58a: V518 = 0x34c
0x58d: THROWI V517
---
Entry stack: [V491]
Stack pops: 0
Stack additions: [V516]
Exit stack: []

================================

Block 0x58e
[0x58e:0x598]
---
Predecessors: [0x54a]
Successors: [0x599]
---
0x58e RETURNDATASIZE
0x58f PUSH1 0x0
0x591 DUP1
0x592 RETURNDATACOPY
0x593 RETURNDATASIZE
0x594 PUSH1 0x0
0x596 REVERT
0x597 JUMPDEST
0x598 POP
---
0x58e: V519 = RETURNDATASIZE
0x58f: V520 = 0x0
0x592: RETURNDATACOPY 0x0 0x0 V519
0x593: V521 = RETURNDATASIZE
0x594: V522 = 0x0
0x596: REVERT 0x0 V521
0x597: JUMPDEST 
---
Entry stack: [V516]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x599
[0x599:0x5b6]
---
Predecessors: [0x58e]
Successors: [0x5b7]
---
0x599 JUMPDEST
0x59a POP
0x59b POP
0x59c POP
0x59d POP
0x59e PUSH1 0xd3
0x5a0 DUP1
0x5a1 PUSH2 0x360
0x5a4 PUSH1 0x0
0x5a6 CODECOPY
0x5a7 PUSH1 0x0
0x5a9 RETURN
0x5aa STOP
0x5ab PUSH1 0x80
0x5ad PUSH1 0x40
0x5af MSTORE
0x5b0 PUSH1 0x4
0x5b2 CALLDATASIZE
0x5b3 LT
0x5b4 PUSH1 0x48
0x5b6 JUMPI
---
0x599: JUMPDEST 
0x59e: V523 = 0xd3
0x5a1: V524 = 0x360
0x5a4: V525 = 0x0
0x5a6: CODECOPY 0x0 0x360 0xd3
0x5a7: V526 = 0x0
0x5a9: RETURN 0x0 0xd3
0x5aa: STOP 
0x5ab: V527 = 0x80
0x5ad: V528 = 0x40
0x5af: M[0x40] = 0x80
0x5b0: V529 = 0x4
0x5b2: V530 = CALLDATASIZE
0x5b3: V531 = LT V530 0x4
0x5b4: V532 = 0x48
0x5b6: THROWI V531
---
Entry stack: []
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0x5b7
[0x5b7:0x5e8]
---
Predecessors: [0x599]
Successors: [0x5e9]
---
0x5b7 PUSH4 0xffffffff
0x5bc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5da PUSH1 0x0
0x5dc CALLDATALOAD
0x5dd DIV
0x5de AND
0x5df PUSH4 0x20a9158d
0x5e4 DUP2
0x5e5 EQ
0x5e6 PUSH1 0x4d
0x5e8 JUMPI
---
0x5b7: V533 = 0xffffffff
0x5bc: V534 = 0x100000000000000000000000000000000000000000000000000000000
0x5da: V535 = 0x0
0x5dc: V536 = CALLDATALOAD 0x0
0x5dd: V537 = DIV V536 0x100000000000000000000000000000000000000000000000000000000
0x5de: V538 = AND V537 0xffffffff
0x5df: V539 = 0x20a9158d
0x5e5: V540 = EQ V538 0x20a9158d
0x5e6: V541 = 0x4d
0x5e8: THROWI V540
---
Entry stack: []
Stack pops: 0
Stack additions: [V538]
Exit stack: [V538]

================================

Block 0x5e9
[0x5e9:0x5f2]
---
Predecessors: [0x5b7]
Successors: [0x5f3]
---
0x5e9 DUP1
0x5ea PUSH4 0xe14a6258
0x5ef EQ
0x5f0 PUSH1 0x73
0x5f2 JUMPI
---
0x5ea: V542 = 0xe14a6258
0x5ef: V543 = EQ 0xe14a6258 V538
0x5f0: V544 = 0x73
0x5f2: THROWI V543
---
Entry stack: [V538]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V538]

================================

Block 0x5f3
[0x5f3:0x5fe]
---
Predecessors: [0x5e9]
Successors: [0x5ff]
---
0x5f3 JUMPDEST
0x5f4 PUSH1 0x0
0x5f6 DUP1
0x5f7 REVERT
0x5f8 JUMPDEST
0x5f9 CALLVALUE
0x5fa DUP1
0x5fb ISZERO
0x5fc PUSH1 0x58
0x5fe JUMPI
---
0x5f3: JUMPDEST 
0x5f4: V545 = 0x0
0x5f7: REVERT 0x0 0x0
0x5f8: JUMPDEST 
0x5f9: V546 = CALLVALUE
0x5fb: V547 = ISZERO V546
0x5fc: V548 = 0x58
0x5fe: THROWI V547
---
Entry stack: [V538]
Stack pops: 0
Stack additions: [V546]
Exit stack: []

================================

Block 0x5ff
[0x5ff:0x624]
---
Predecessors: [0x5f3]
Successors: [0x625]
---
0x5ff PUSH1 0x0
0x601 DUP1
0x602 REVERT
0x603 JUMPDEST
0x604 POP
0x605 PUSH1 0x5f
0x607 PUSH1 0x87
0x609 JUMP
0x60a JUMPDEST
0x60b PUSH1 0x40
0x60d DUP1
0x60e MLOAD
0x60f SWAP2
0x610 ISZERO
0x611 ISZERO
0x612 DUP3
0x613 MSTORE
0x614 MLOAD
0x615 SWAP1
0x616 DUP2
0x617 SWAP1
0x618 SUB
0x619 PUSH1 0x20
0x61b ADD
0x61c SWAP1
0x61d RETURN
0x61e JUMPDEST
0x61f CALLVALUE
0x620 DUP1
0x621 ISZERO
0x622 PUSH1 0x7e
0x624 JUMPI
---
0x5ff: V549 = 0x0
0x602: REVERT 0x0 0x0
0x603: JUMPDEST 
0x605: V550 = 0x5f
0x607: V551 = 0x87
0x609: THROW 
0x60a: JUMPDEST 
0x60b: V552 = 0x40
0x60e: V553 = M[0x40]
0x610: V554 = ISZERO S0
0x611: V555 = ISZERO V554
0x613: M[V553] = V555
0x614: V556 = M[0x40]
0x618: V557 = SUB V553 V556
0x619: V558 = 0x20
0x61b: V559 = ADD 0x20 V557
0x61d: RETURN V556 V559
0x61e: JUMPDEST 
0x61f: V560 = CALLVALUE
0x621: V561 = ISZERO V560
0x622: V562 = 0x7e
0x624: THROWI V561
---
Entry stack: [V546]
Stack pops: 0
Stack additions: [0x5f, V560]
Exit stack: []

================================

Block 0x625
[0x625:0x65b]
---
Predecessors: [0x5ff]
Successors: [0x65c]
---
0x625 PUSH1 0x0
0x627 DUP1
0x628 REVERT
0x629 JUMPDEST
0x62a POP
0x62b PUSH1 0x85
0x62d PUSH1 0x90
0x62f JUMP
0x630 JUMPDEST
0x631 STOP
0x632 JUMPDEST
0x633 PUSH1 0x0
0x635 SLOAD
0x636 PUSH1 0xff
0x638 AND
0x639 DUP2
0x63a JUMP
0x63b JUMPDEST
0x63c PUSH20 0x93cdb0a93fc36f6a53ed21ecf6305ab80d06beca
0x651 SELFDESTRUCT
0x652 STOP
0x653 LOG1
0x654 PUSH6 0x627a7a723058
0x65b SHA3
---
0x625: V563 = 0x0
0x628: REVERT 0x0 0x0
0x629: JUMPDEST 
0x62b: V564 = 0x85
0x62d: V565 = 0x90
0x62f: THROW 
0x630: JUMPDEST 
0x631: STOP 
0x632: JUMPDEST 
0x633: V566 = 0x0
0x635: V567 = S[0x0]
0x636: V568 = 0xff
0x638: V569 = AND 0xff V567
0x63a: JUMP S0
0x63b: JUMPDEST 
0x63c: V570 = 0x93cdb0a93fc36f6a53ed21ecf6305ab80d06beca
0x651: SELFDESTRUCT 0x93cdb0a93fc36f6a53ed21ecf6305ab80d06beca
0x652: STOP 
0x653: LOG S0 S1 S2
0x654: V571 = 0x627a7a723058
0x65b: V572 = SHA3 0x627a7a723058 S3
---
Entry stack: [V560]
Stack pops: 0
Stack additions: [0x85, V569, S0, V572]
Exit stack: []

================================

Block 0x65c
[0x65c:0x6be]
---
Predecessors: [0x625]
Successors: []
---
0x65c JUMPDEST
0x65d SWAP5
0x65e MISSING 0xae
0x65f LOG3
0x660 MISSING 0xcd
0x661 MISSING 0xc6
0x662 MISSING 0xc7
0x663 PUSH19 0x27611cf82e3c8ae47345da0e5388f6e3aac2f
0x677 SWAP5
0x678 PUSH12 0xc92ba0029a165627a7a7230
0x685 PC
0x686 SHA3
0x687 REVERT
0x688 SWAP15
0x689 PUSH16 0xc03b945551e25e76bce5388b183e8cb7
0x69a BALANCE
0x69b DIV
0x69c MISSING 0xb7
0x69d GT
0x69e PUSH32 0xf0ec8d9fc65ea2350029
---
0x65c: JUMPDEST 
0x65e: MISSING 0xae
0x65f: LOG S0 S1 S2 S3 S4
0x660: MISSING 0xcd
0x661: MISSING 0xc6
0x662: MISSING 0xc7
0x663: V573 = 0x27611cf82e3c8ae47345da0e5388f6e3aac2f
0x678: V574 = 0xc92ba0029a165627a7a7230
0x685: V575 = PC
0x686: V576 = SHA3 V575 0xc92ba0029a165627a7a7230
0x687: REVERT V576 S4
0x689: V577 = 0xc03b945551e25e76bce5388b183e8cb7
0x69a: V578 = BALANCE 0xc03b945551e25e76bce5388b183e8cb7
0x69b: V579 = DIV V578 S15
0x69c: MISSING 0xb7
0x69d: V580 = GT S0 S1
0x69e: V581 = 0xf0ec8d9fc65ea2350029
---
Entry stack: [V572]
Stack pops: 166
Stack additions: [0xf0ec8d9fc65ea2350029, V580]
Exit stack: []

================================

Function 0:
Public function signature: 0x52fba25c
Entry block: 0x29
Exit block: 0x154
Body: 0x27, 0x29, 0x5d, 0x6c, 0x74, 0x7d, 0x8e, 0xb1, 0xba, 0xcd, 0xce, 0x12a, 0x12e, 0x139, 0x142, 0x154, 0x158, 0x160, 0x164, 0x16f, 0x1a1, 0x1aa, 0x1b0, 0x1ba, 0x1c6, 0x1c7, 0x20a, 0x20e, 0x219, 0x222, 0x232, 0x23a

Function 1:
Public fallback function
Entry block: 0x27
Exit block: 0x27
Body: 0x27

