Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xdf]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xdf
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xdf
0xc: JUMPI 0xdf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x9c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x8f32d59b
0x36 GT
0x37 PUSH2 0x9c
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x8f32d59b
0x36: V11 = GT 0x8f32d59b V9
0x37: V12 = 0x9c
0x3a: JUMPI 0x9c V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0x76]
---
0x3b DUP1
0x3c PUSH4 0xcb16d4a2
0x41 GT
0x42 PUSH2 0x76
0x45 JUMPI
---
0x3c: V13 = 0xcb16d4a2
0x41: V14 = GT 0xcb16d4a2 V9
0x42: V15 = 0x76
0x45: JUMPI 0x76 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x4ac]
---
0x46 DUP1
0x47 PUSH4 0xcb16d4a2
0x4c EQ
0x4d PUSH2 0x4ac
0x50 JUMPI
---
0x47: V16 = 0xcb16d4a2
0x4c: V17 = EQ 0xcb16d4a2 V9
0x4d: V18 = 0x4ac
0x50: JUMPI 0x4ac V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x4e5]
---
0x51 DUP1
0x52 PUSH4 0xdab0efff
0x57 EQ
0x58 PUSH2 0x4e5
0x5b JUMPI
---
0x52: V19 = 0xdab0efff
0x57: V20 = EQ 0xdab0efff V9
0x58: V21 = 0x4e5
0x5b: JUMPI 0x4e5 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x528]
---
0x5c DUP1
0x5d PUSH4 0xe1758bd8
0x62 EQ
0x63 PUSH2 0x528
0x66 JUMPI
---
0x5d: V22 = 0xe1758bd8
0x62: V23 = EQ 0xe1758bd8 V9
0x63: V24 = 0x528
0x66: JUMPI 0x528 V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x53d]
---
0x67 DUP1
0x68 PUSH4 0xf2fde38b
0x6d EQ
0x6e PUSH2 0x53d
0x71 JUMPI
---
0x68: V25 = 0xf2fde38b
0x6d: V26 = EQ 0xf2fde38b V9
0x6e: V27 = 0x53d
0x71: JUMPI 0x53d V26
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x67]
Successors: [0xdf]
---
0x72 PUSH2 0xdf
0x75 JUMP
---
0x72: V28 = 0xdf
0x75: JUMP 0xdf
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x76
[0x76:0x81]
---
Predecessors: [0x3b]
Successors: [0x82, 0x40b]
---
0x76 JUMPDEST
0x77 DUP1
0x78 PUSH4 0x8f32d59b
0x7d EQ
0x7e PUSH2 0x40b
0x81 JUMPI
---
0x76: JUMPDEST 
0x78: V29 = 0x8f32d59b
0x7d: V30 = EQ 0x8f32d59b V9
0x7e: V31 = 0x40b
0x81: JUMPI 0x40b V30
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x76]
Successors: [0x8d, 0x420]
---
0x82 DUP1
0x83 PUSH4 0xab751f71
0x88 EQ
0x89 PUSH2 0x420
0x8c JUMPI
---
0x83: V32 = 0xab751f71
0x88: V33 = EQ 0xab751f71 V9
0x89: V34 = 0x420
0x8c: JUMPI 0x420 V33
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x463]
---
0x8d DUP1
0x8e PUSH4 0xb756d5a2
0x93 EQ
0x94 PUSH2 0x463
0x97 JUMPI
---
0x8e: V35 = 0xb756d5a2
0x93: V36 = EQ 0xb756d5a2 V9
0x94: V37 = 0x463
0x97: JUMPI 0x463 V36
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x8d]
Successors: [0xdf]
---
0x98 PUSH2 0xdf
0x9b JUMP
---
0x98: V38 = 0xdf
0x9b: JUMP 0xdf
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x9c
[0x9c:0xa7]
---
Predecessors: [0xd]
Successors: [0xa8, 0x117]
---
0x9c JUMPDEST
0x9d DUP1
0x9e PUSH4 0x1386dc2d
0xa3 EQ
0xa4 PUSH2 0x117
0xa7 JUMPI
---
0x9c: JUMPDEST 
0x9e: V39 = 0x1386dc2d
0xa3: V40 = EQ 0x1386dc2d V9
0xa4: V41 = 0x117
0xa7: JUMPI 0x117 V40
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xa8
[0xa8:0xb2]
---
Predecessors: [0x9c]
Successors: [0xb3, 0x1a1]
---
0xa8 DUP1
0xa9 PUSH4 0x4650c308
0xae EQ
0xaf PUSH2 0x1a1
0xb2 JUMPI
---
0xa9: V42 = 0x4650c308
0xae: V43 = EQ 0x4650c308 V9
0xaf: V44 = 0x1a1
0xb2: JUMPI 0x1a1 V43
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xb3
[0xb3:0xbd]
---
Predecessors: [0xa8]
Successors: [0xbe, 0x2e7]
---
0xb3 DUP1
0xb4 PUSH4 0x715018a6
0xb9 EQ
0xba PUSH2 0x2e7
0xbd JUMPI
---
0xb4: V45 = 0x715018a6
0xb9: V46 = EQ 0x715018a6 V9
0xba: V47 = 0x2e7
0xbd: JUMPI 0x2e7 V46
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xbe
[0xbe:0xc8]
---
Predecessors: [0xb3]
Successors: [0xc9, 0x2fe]
---
0xbe DUP1
0xbf PUSH4 0x890ac46c
0xc4 EQ
0xc5 PUSH2 0x2fe
0xc8 JUMPI
---
0xbf: V48 = 0x890ac46c
0xc4: V49 = EQ 0x890ac46c V9
0xc5: V50 = 0x2fe
0xc8: JUMPI 0x2fe V49
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xc9
[0xc9:0xd3]
---
Predecessors: [0xbe]
Successors: [0xd4, 0x3c5]
---
0xc9 DUP1
0xca PUSH4 0x89ae1c90
0xcf EQ
0xd0 PUSH2 0x3c5
0xd3 JUMPI
---
0xca: V51 = 0x89ae1c90
0xcf: V52 = EQ 0x89ae1c90 V9
0xd0: V53 = 0x3c5
0xd3: JUMPI 0x3c5 V52
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xd4
[0xd4:0xde]
---
Predecessors: [0xc9]
Successors: [0xdf, 0x3f6]
---
0xd4 DUP1
0xd5 PUSH4 0x8da5cb5b
0xda EQ
0xdb PUSH2 0x3f6
0xde JUMPI
---
0xd5: V54 = 0x8da5cb5b
0xda: V55 = EQ 0x8da5cb5b V9
0xdb: V56 = 0x3f6
0xde: JUMPI 0x3f6 V55
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xdf
[0xdf:0x116]
---
Predecessors: [0x0, 0x72, 0x98, 0xd4]
Successors: []
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 DUP1
0xe3 MLOAD
0xe4 CALLVALUE
0xe5 DUP2
0xe6 MSTORE
0xe7 SWAP1
0xe8 MLOAD
0xe9 CALLER
0xea SWAP2
0xeb PUSH32 0xf32a9f77675fd5917534c7746608fd3e309eac68fbdcbf5925e24ca97a704396
0x10c SWAP2
0x10d SWAP1
0x10e DUP2
0x10f SWAP1
0x110 SUB
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP1
0x115 LOG2
0x116 STOP
---
0xdf: JUMPDEST 
0xe0: V57 = 0x40
0xe3: V58 = M[0x40]
0xe4: V59 = CALLVALUE
0xe6: M[V58] = V59
0xe8: V60 = M[0x40]
0xe9: V61 = CALLER
0xeb: V62 = 0xf32a9f77675fd5917534c7746608fd3e309eac68fbdcbf5925e24ca97a704396
0x110: V63 = SUB V58 V60
0x111: V64 = 0x20
0x113: V65 = ADD 0x20 V63
0x115: LOG V60 V65 0xf32a9f77675fd5917534c7746608fd3e309eac68fbdcbf5925e24ca97a704396 V61
0x116: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x117
[0x117:0x11e]
---
Predecessors: [0x9c]
Successors: [0x11f, 0x123]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 DUP1
0x11a ISZERO
0x11b PUSH2 0x123
0x11e JUMPI
---
0x117: JUMPDEST 
0x118: V66 = CALLVALUE
0x11a: V67 = ISZERO V66
0x11b: V68 = 0x123
0x11e: JUMPI 0x123 V67
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V9, V66]

================================

Block 0x11f
[0x11f:0x122]
---
Predecessors: [0x117]
Successors: []
---
0x11f PUSH1 0x0
0x121 DUP1
0x122 REVERT
---
0x11f: V69 = 0x0
0x122: REVERT 0x0 0x0
---
Entry stack: [V9, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V66]

================================

Block 0x123
[0x123:0x12b]
---
Predecessors: [0x117]
Successors: [0x570]
---
0x123 JUMPDEST
0x124 POP
0x125 PUSH2 0x12c
0x128 PUSH2 0x570
0x12b JUMP
---
0x123: JUMPDEST 
0x125: V70 = 0x12c
0x128: V71 = 0x570
0x12b: JUMP 0x570
---
Entry stack: [V9, V66]
Stack pops: 1
Stack additions: [0x12c]
Exit stack: [V9, 0x12c]

================================

Block 0x12c
[0x12c:0x14d]
---
Predecessors: [0x5f5]
Successors: [0x14e]
---
0x12c JUMPDEST
0x12d PUSH1 0x40
0x12f DUP1
0x130 MLOAD
0x131 PUSH1 0x20
0x133 DUP1
0x134 DUP3
0x135 MSTORE
0x136 DUP4
0x137 MLOAD
0x138 DUP2
0x139 DUP4
0x13a ADD
0x13b MSTORE
0x13c DUP4
0x13d MLOAD
0x13e SWAP2
0x13f SWAP3
0x140 DUP4
0x141 SWAP3
0x142 SWAP1
0x143 DUP4
0x144 ADD
0x145 SWAP2
0x146 DUP6
0x147 ADD
0x148 SWAP1
0x149 DUP1
0x14a DUP4
0x14b DUP4
0x14c PUSH1 0x0
---
0x12c: JUMPDEST 
0x12d: V72 = 0x40
0x130: V73 = M[0x40]
0x131: V74 = 0x20
0x135: M[V73] = 0x20
0x137: V75 = M[V468]
0x13a: V76 = ADD V73 0x20
0x13b: M[V76] = V75
0x13d: V77 = M[V468]
0x144: V78 = ADD V73 0x40
0x147: V79 = ADD V468 0x20
0x14c: V80 = 0x0
---
Entry stack: [V9, 0x12c, V468]
Stack pops: 1
Stack additions: [S0, V73, V73, V78, V79, V77, V77, V78, V79, 0x0]
Exit stack: [V9, 0x12c, V468, V73, V73, V78, V79, V77, V77, V78, V79, 0x0]

================================

Block 0x14e
[0x14e:0x156]
---
Predecessors: [0x12c, 0x157]
Successors: [0x157, 0x166]
---
0x14e JUMPDEST
0x14f DUP4
0x150 DUP2
0x151 LT
0x152 ISZERO
0x153 PUSH2 0x166
0x156 JUMPI
---
0x14e: JUMPDEST 
0x151: V81 = LT S0 V77
0x152: V82 = ISZERO V81
0x153: V83 = 0x166
0x156: JUMPI 0x166 V82
---
Entry stack: [V9, 0x12c, V468, V73, V73, V78, V79, V77, V77, V78, V79, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, 0x12c, V468, V73, V73, V78, V79, V77, V77, V78, V79, S0]

================================

Block 0x157
[0x157:0x165]
---
Predecessors: [0x14e]
Successors: [0x14e]
---
0x157 DUP2
0x158 DUP2
0x159 ADD
0x15a MLOAD
0x15b DUP4
0x15c DUP3
0x15d ADD
0x15e MSTORE
0x15f PUSH1 0x20
0x161 ADD
0x162 PUSH2 0x14e
0x165 JUMP
---
0x159: V84 = ADD S0 V79
0x15a: V85 = M[V84]
0x15d: V86 = ADD S0 V78
0x15e: M[V86] = V85
0x15f: V87 = 0x20
0x161: V88 = ADD 0x20 S0
0x162: V89 = 0x14e
0x165: JUMP 0x14e
---
Entry stack: [V9, 0x12c, V468, V73, V73, V78, V79, V77, V77, V78, V79, S0]
Stack pops: 3
Stack additions: [S2, S1, V88]
Exit stack: [V9, 0x12c, V468, V73, V73, V78, V79, V77, V77, V78, V79, V88]

================================

Block 0x166
[0x166:0x179]
---
Predecessors: [0x14e]
Successors: [0x17a, 0x193]
---
0x166 JUMPDEST
0x167 POP
0x168 POP
0x169 POP
0x16a POP
0x16b SWAP1
0x16c POP
0x16d SWAP1
0x16e DUP2
0x16f ADD
0x170 SWAP1
0x171 PUSH1 0x1f
0x173 AND
0x174 DUP1
0x175 ISZERO
0x176 PUSH2 0x193
0x179 JUMPI
---
0x166: JUMPDEST 
0x16f: V90 = ADD V77 V78
0x171: V91 = 0x1f
0x173: V92 = AND 0x1f V77
0x175: V93 = ISZERO V92
0x176: V94 = 0x193
0x179: JUMPI 0x193 V93
---
Entry stack: [V9, 0x12c, V468, V73, V73, V78, V79, V77, V77, V78, V79, S0]
Stack pops: 7
Stack additions: [V90, V92]
Exit stack: [V9, 0x12c, V468, V73, V73, V90, V92]

================================

Block 0x17a
[0x17a:0x192]
---
Predecessors: [0x166]
Successors: [0x193]
---
0x17a DUP1
0x17b DUP3
0x17c SUB
0x17d DUP1
0x17e MLOAD
0x17f PUSH1 0x1
0x181 DUP4
0x182 PUSH1 0x20
0x184 SUB
0x185 PUSH2 0x100
0x188 EXP
0x189 SUB
0x18a NOT
0x18b AND
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP2
0x192 POP
---
0x17c: V95 = SUB V90 V92
0x17e: V96 = M[V95]
0x17f: V97 = 0x1
0x182: V98 = 0x20
0x184: V99 = SUB 0x20 V92
0x185: V100 = 0x100
0x188: V101 = EXP 0x100 V99
0x189: V102 = SUB V101 0x1
0x18a: V103 = NOT V102
0x18b: V104 = AND V103 V96
0x18d: M[V95] = V104
0x18e: V105 = 0x20
0x190: V106 = ADD 0x20 V95
---
Entry stack: [V9, 0x12c, V468, V73, V73, V90, V92]
Stack pops: 2
Stack additions: [V106, S0]
Exit stack: [V9, 0x12c, V468, V73, V73, V106, V92]

================================

Block 0x193
[0x193:0x1a0]
---
Predecessors: [0x166, 0x17a]
Successors: []
---
0x193 JUMPDEST
0x194 POP
0x195 SWAP3
0x196 POP
0x197 POP
0x198 POP
0x199 PUSH1 0x40
0x19b MLOAD
0x19c DUP1
0x19d SWAP2
0x19e SUB
0x19f SWAP1
0x1a0 RETURN
---
0x193: JUMPDEST 
0x199: V107 = 0x40
0x19b: V108 = M[0x40]
0x19e: V109 = SUB S1 V108
0x1a0: RETURN V108 V109
---
Entry stack: [V9, 0x12c, V468, V73, V73, S1, V92]
Stack pops: 5
Stack additions: []
Exit stack: [V9, 0x12c]

================================

Block 0x1a1
[0x1a1:0x1a8]
---
Predecessors: [0xa8]
Successors: [0x1a9, 0x1ad]
---
0x1a1 JUMPDEST
0x1a2 CALLVALUE
0x1a3 DUP1
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V110 = CALLVALUE
0x1a4: V111 = ISZERO V110
0x1a5: V112 = 0x1ad
0x1a8: JUMPI 0x1ad V111
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V110]
Exit stack: [V9, V110]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a1]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V113 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V9, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V110]

================================

Block 0x1ad
[0x1ad:0x1bf]
---
Predecessors: [0x1a1]
Successors: [0x1c0, 0x1c4]
---
0x1ad JUMPDEST
0x1ae POP
0x1af PUSH2 0x264
0x1b2 PUSH1 0x4
0x1b4 DUP1
0x1b5 CALLDATASIZE
0x1b6 SUB
0x1b7 PUSH1 0x40
0x1b9 DUP2
0x1ba LT
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x1ad: JUMPDEST 
0x1af: V114 = 0x264
0x1b2: V115 = 0x4
0x1b5: V116 = CALLDATASIZE
0x1b6: V117 = SUB V116 0x4
0x1b7: V118 = 0x40
0x1ba: V119 = LT V117 0x40
0x1bb: V120 = ISZERO V119
0x1bc: V121 = 0x1c4
0x1bf: JUMPI 0x1c4 V120
---
Entry stack: [V9, V110]
Stack pops: 1
Stack additions: [0x264, 0x4, V117]
Exit stack: [V9, 0x264, 0x4, V117]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1ad]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V122 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V9, 0x264, 0x4, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x264, 0x4, V117]

================================

Block 0x1c4
[0x1c4:0x1ea]
---
Predecessors: [0x1ad]
Successors: [0x1eb, 0x1ef]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd DUP3
0x1ce CALLDATALOAD
0x1cf AND
0x1d0 SWAP2
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 ADD
0x1d4 SWAP1
0x1d5 PUSH1 0x40
0x1d7 DUP2
0x1d8 ADD
0x1d9 PUSH1 0x20
0x1db DUP3
0x1dc ADD
0x1dd CALLDATALOAD
0x1de PUSH5 0x100000000
0x1e4 DUP2
0x1e5 GT
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V123 = 0x1
0x1c7: V124 = 0xa0
0x1c9: V125 = 0x2
0x1cb: V126 = EXP 0x2 0xa0
0x1cc: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ce: V128 = CALLDATALOAD 0x4
0x1cf: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V130 = ADD 0x4 V117
0x1d5: V131 = 0x40
0x1d8: V132 = ADD 0x4 0x40
0x1d9: V133 = 0x20
0x1dc: V134 = ADD 0x4 0x20
0x1dd: V135 = CALLDATALOAD 0x24
0x1de: V136 = 0x100000000
0x1e5: V137 = GT V135 0x100000000
0x1e6: V138 = ISZERO V137
0x1e7: V139 = 0x1ef
0x1ea: JUMPI 0x1ef V138
---
Entry stack: [V9, 0x264, 0x4, V117]
Stack pops: 2
Stack additions: [V129, V130, S1, 0x44, V135]
Exit stack: [V9, 0x264, V129, V130, 0x4, 0x44, V135]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1c4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V140 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V9, 0x264, V129, V130, 0x4, 0x44, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x264, V129, V130, 0x4, 0x44, V135]

================================

Block 0x1ef
[0x1ef:0x1fc]
---
Predecessors: [0x1c4]
Successors: [0x1fd, 0x201]
---
0x1ef JUMPDEST
0x1f0 DUP3
0x1f1 ADD
0x1f2 DUP4
0x1f3 PUSH1 0x20
0x1f5 DUP3
0x1f6 ADD
0x1f7 GT
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x1ef: JUMPDEST 
0x1f1: V141 = ADD 0x4 V135
0x1f3: V142 = 0x20
0x1f6: V143 = ADD V141 0x20
0x1f7: V144 = GT V143 V130
0x1f8: V145 = ISZERO V144
0x1f9: V146 = 0x201
0x1fc: JUMPI 0x201 V145
---
Entry stack: [V9, 0x264, V129, V130, 0x4, 0x44, V135]
Stack pops: 4
Stack additions: [S3, S2, S1, V141]
Exit stack: [V9, 0x264, V129, V130, 0x4, 0x44, V141]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x1ef]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V147 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V9, 0x264, V129, V130, 0x4, 0x44, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x264, V129, V130, 0x4, 0x44, V141]

================================

Block 0x201
[0x201:0x21e]
---
Predecessors: [0x1ef]
Successors: [0x21f, 0x223]
---
0x201 JUMPDEST
0x202 DUP1
0x203 CALLDATALOAD
0x204 SWAP1
0x205 PUSH1 0x20
0x207 ADD
0x208 SWAP2
0x209 DUP5
0x20a PUSH1 0x1
0x20c DUP4
0x20d MUL
0x20e DUP5
0x20f ADD
0x210 GT
0x211 PUSH5 0x100000000
0x217 DUP4
0x218 GT
0x219 OR
0x21a ISZERO
0x21b PUSH2 0x223
0x21e JUMPI
---
0x201: JUMPDEST 
0x203: V148 = CALLDATALOAD V141
0x205: V149 = 0x20
0x207: V150 = ADD 0x20 V141
0x20a: V151 = 0x1
0x20d: V152 = MUL V148 0x1
0x20f: V153 = ADD V150 V152
0x210: V154 = GT V153 V130
0x211: V155 = 0x100000000
0x218: V156 = GT V148 0x100000000
0x219: V157 = OR V156 V154
0x21a: V158 = ISZERO V157
0x21b: V159 = 0x223
0x21e: JUMPI 0x223 V158
---
Entry stack: [V9, 0x264, V129, V130, 0x4, 0x44, V141]
Stack pops: 4
Stack additions: [S3, S2, V150, V148, S1]
Exit stack: [V9, 0x264, V129, V130, 0x4, V150, V148, 0x44]

================================

Block 0x21f
[0x21f:0x222]
---
Predecessors: [0x201]
Successors: []
---
0x21f PUSH1 0x0
0x221 DUP1
0x222 REVERT
---
0x21f: V160 = 0x0
0x222: REVERT 0x0 0x0
---
Entry stack: [V9, 0x264, V129, V130, 0x4, V150, V148, 0x44]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x264, V129, V130, 0x4, V150, V148, 0x44]

================================

Block 0x223
[0x223:0x263]
---
Predecessors: [0x201]
Successors: [0x5fd]
---
0x223 JUMPDEST
0x224 SWAP2
0x225 SWAP1
0x226 DUP1
0x227 DUP1
0x228 PUSH1 0x1f
0x22a ADD
0x22b PUSH1 0x20
0x22d DUP1
0x22e SWAP2
0x22f DIV
0x230 MUL
0x231 PUSH1 0x20
0x233 ADD
0x234 PUSH1 0x40
0x236 MLOAD
0x237 SWAP1
0x238 DUP2
0x239 ADD
0x23a PUSH1 0x40
0x23c MSTORE
0x23d DUP1
0x23e SWAP4
0x23f SWAP3
0x240 SWAP2
0x241 SWAP1
0x242 DUP2
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x20
0x247 ADD
0x248 DUP4
0x249 DUP4
0x24a DUP1
0x24b DUP3
0x24c DUP5
0x24d CALLDATACOPY
0x24e PUSH1 0x0
0x250 SWAP3
0x251 ADD
0x252 SWAP2
0x253 SWAP1
0x254 SWAP2
0x255 MSTORE
0x256 POP
0x257 SWAP3
0x258 SWAP6
0x259 POP
0x25a PUSH2 0x5fd
0x25d SWAP5
0x25e POP
0x25f POP
0x260 POP
0x261 POP
0x262 POP
0x263 JUMP
---
0x223: JUMPDEST 
0x228: V161 = 0x1f
0x22a: V162 = ADD 0x1f V148
0x22b: V163 = 0x20
0x22f: V164 = DIV V162 0x20
0x230: V165 = MUL V164 0x20
0x231: V166 = 0x20
0x233: V167 = ADD 0x20 V165
0x234: V168 = 0x40
0x236: V169 = M[0x40]
0x239: V170 = ADD V169 V167
0x23a: V171 = 0x40
0x23c: M[0x40] = V170
0x244: M[V169] = V148
0x245: V172 = 0x20
0x247: V173 = ADD 0x20 V169
0x24d: CALLDATACOPY V173 V150 V148
0x24e: V174 = 0x0
0x251: V175 = ADD V173 V148
0x255: M[V175] = 0x0
0x25a: V176 = 0x5fd
0x263: JUMP 0x5fd
---
Entry stack: [V9, 0x264, V129, V130, 0x4, V150, V148, 0x44]
Stack pops: 5
Stack additions: [V169]
Exit stack: [V9, 0x264, V129, V169]

================================

Block 0x264
[0x264:0x292]
---
Predecessors: [0x75f]
Successors: [0x293]
---
0x264 JUMPDEST
0x265 PUSH1 0x40
0x267 MLOAD
0x268 DUP1
0x269 DUP4
0x26a ISZERO
0x26b ISZERO
0x26c ISZERO
0x26d ISZERO
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x20
0x272 ADD
0x273 DUP1
0x274 PUSH1 0x20
0x276 ADD
0x277 DUP3
0x278 DUP2
0x279 SUB
0x27a DUP3
0x27b MSTORE
0x27c DUP4
0x27d DUP2
0x27e DUP2
0x27f MLOAD
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 SWAP2
0x286 POP
0x287 DUP1
0x288 MLOAD
0x289 SWAP1
0x28a PUSH1 0x20
0x28c ADD
0x28d SWAP1
0x28e DUP1
0x28f DUP4
0x290 DUP4
0x291 PUSH1 0x0
---
0x264: JUMPDEST 
0x265: V177 = 0x40
0x267: V178 = M[0x40]
0x26a: V179 = ISZERO V564
0x26b: V180 = ISZERO V179
0x26c: V181 = ISZERO V180
0x26d: V182 = ISZERO V181
0x26f: M[V178] = V182
0x270: V183 = 0x20
0x272: V184 = ADD 0x20 V178
0x274: V185 = 0x20
0x276: V186 = ADD 0x20 V184
0x279: V187 = SUB V186 V178
0x27b: M[V184] = V187
0x27f: V188 = M[S0]
0x281: M[V186] = V188
0x282: V189 = 0x20
0x284: V190 = ADD 0x20 V186
0x288: V191 = M[S0]
0x28a: V192 = 0x20
0x28c: V193 = ADD 0x20 S0
0x291: V194 = 0x0
---
Entry stack: [V9, S2, V564, S0]
Stack pops: 2
Stack additions: [S1, S0, V178, V184, V190, V193, V191, V191, V190, V193, 0x0]
Exit stack: [V9, S2, V564, S0, V178, V184, V190, V193, V191, V191, V190, V193, 0x0]

================================

Block 0x293
[0x293:0x29b]
---
Predecessors: [0x264, 0x29c]
Successors: [0x29c, 0x2ab]
---
0x293 JUMPDEST
0x294 DUP4
0x295 DUP2
0x296 LT
0x297 ISZERO
0x298 PUSH2 0x2ab
0x29b JUMPI
---
0x293: JUMPDEST 
0x296: V195 = LT S0 V191
0x297: V196 = ISZERO V195
0x298: V197 = 0x2ab
0x29b: JUMPI 0x2ab V196
---
Entry stack: [V9, S11, V564, S9, V178, V184, V190, V193, V191, V191, V190, V193, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, S11, V564, S9, V178, V184, V190, V193, V191, V191, V190, V193, S0]

================================

Block 0x29c
[0x29c:0x2aa]
---
Predecessors: [0x293]
Successors: [0x293]
---
0x29c DUP2
0x29d DUP2
0x29e ADD
0x29f MLOAD
0x2a0 DUP4
0x2a1 DUP3
0x2a2 ADD
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 PUSH2 0x293
0x2aa JUMP
---
0x29e: V198 = ADD S0 V193
0x29f: V199 = M[V198]
0x2a2: V200 = ADD S0 V190
0x2a3: M[V200] = V199
0x2a4: V201 = 0x20
0x2a6: V202 = ADD 0x20 S0
0x2a7: V203 = 0x293
0x2aa: JUMP 0x293
---
Entry stack: [V9, S11, V564, S9, V178, V184, V190, V193, V191, V191, V190, V193, S0]
Stack pops: 3
Stack additions: [S2, S1, V202]
Exit stack: [V9, S11, V564, S9, V178, V184, V190, V193, V191, V191, V190, V193, V202]

================================

Block 0x2ab
[0x2ab:0x2be]
---
Predecessors: [0x293]
Successors: [0x2bf, 0x2d8]
---
0x2ab JUMPDEST
0x2ac POP
0x2ad POP
0x2ae POP
0x2af POP
0x2b0 SWAP1
0x2b1 POP
0x2b2 SWAP1
0x2b3 DUP2
0x2b4 ADD
0x2b5 SWAP1
0x2b6 PUSH1 0x1f
0x2b8 AND
0x2b9 DUP1
0x2ba ISZERO
0x2bb PUSH2 0x2d8
0x2be JUMPI
---
0x2ab: JUMPDEST 
0x2b4: V204 = ADD V191 V190
0x2b6: V205 = 0x1f
0x2b8: V206 = AND 0x1f V191
0x2ba: V207 = ISZERO V206
0x2bb: V208 = 0x2d8
0x2be: JUMPI 0x2d8 V207
---
Entry stack: [V9, S11, V564, S9, V178, V184, V190, V193, V191, V191, V190, V193, S0]
Stack pops: 7
Stack additions: [V204, V206]
Exit stack: [V9, S11, V564, S9, V178, V184, V204, V206]

================================

Block 0x2bf
[0x2bf:0x2d7]
---
Predecessors: [0x2ab]
Successors: [0x2d8]
---
0x2bf DUP1
0x2c0 DUP3
0x2c1 SUB
0x2c2 DUP1
0x2c3 MLOAD
0x2c4 PUSH1 0x1
0x2c6 DUP4
0x2c7 PUSH1 0x20
0x2c9 SUB
0x2ca PUSH2 0x100
0x2cd EXP
0x2ce SUB
0x2cf NOT
0x2d0 AND
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 SWAP2
0x2d7 POP
---
0x2c1: V209 = SUB V204 V206
0x2c3: V210 = M[V209]
0x2c4: V211 = 0x1
0x2c7: V212 = 0x20
0x2c9: V213 = SUB 0x20 V206
0x2ca: V214 = 0x100
0x2cd: V215 = EXP 0x100 V213
0x2ce: V216 = SUB V215 0x1
0x2cf: V217 = NOT V216
0x2d0: V218 = AND V217 V210
0x2d2: M[V209] = V218
0x2d3: V219 = 0x20
0x2d5: V220 = ADD 0x20 V209
---
Entry stack: [V9, S6, V564, S4, V178, V184, V204, V206]
Stack pops: 2
Stack additions: [V220, S0]
Exit stack: [V9, S6, V564, S4, V178, V184, V220, V206]

================================

Block 0x2d8
[0x2d8:0x2e6]
---
Predecessors: [0x2ab, 0x2bf]
Successors: []
---
0x2d8 JUMPDEST
0x2d9 POP
0x2da SWAP4
0x2db POP
0x2dc POP
0x2dd POP
0x2de POP
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 SWAP2
0x2e4 SUB
0x2e5 SWAP1
0x2e6 RETURN
---
0x2d8: JUMPDEST 
0x2df: V221 = 0x40
0x2e1: V222 = M[0x40]
0x2e4: V223 = SUB S1 V222
0x2e6: RETURN V222 V223
---
Entry stack: [V9, S6, V564, S4, V178, V184, S1, V206]
Stack pops: 6
Stack additions: []
Exit stack: [V9, S6]

================================

Block 0x2e7
[0x2e7:0x2ee]
---
Predecessors: [0xb3]
Successors: [0x2ef, 0x2f3]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 DUP1
0x2ea ISZERO
0x2eb PUSH2 0x2f3
0x2ee JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V224 = CALLVALUE
0x2ea: V225 = ISZERO V224
0x2eb: V226 = 0x2f3
0x2ee: JUMPI 0x2f3 V225
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V224]
Exit stack: [V9, V224]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
---
0x2ef: V227 = 0x0
0x2f2: REVERT 0x0 0x0
---
Entry stack: [V9, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V224]

================================

Block 0x2f3
[0x2f3:0x2fb]
---
Predecessors: [0x2e7]
Successors: [0x774]
---
0x2f3 JUMPDEST
0x2f4 POP
0x2f5 PUSH2 0x2fc
0x2f8 PUSH2 0x774
0x2fb JUMP
---
0x2f3: JUMPDEST 
0x2f5: V228 = 0x2fc
0x2f8: V229 = 0x774
0x2fb: JUMP 0x774
---
Entry stack: [V9, V224]
Stack pops: 1
Stack additions: [0x2fc]
Exit stack: [V9, 0x2fc]

================================

Block 0x2fc
[0x2fc:0x2fd]
---
Predecessors: [0x787, 0xb0f]
Successors: []
---
0x2fc JUMPDEST
0x2fd STOP
---
0x2fc: JUMPDEST 
0x2fd: STOP 
---
Entry stack: [V9, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S4, S3, S2, S1, S0]

================================

Block 0x2fe
[0x2fe:0x305]
---
Predecessors: [0xbe]
Successors: [0x306, 0x30a]
---
0x2fe JUMPDEST
0x2ff CALLVALUE
0x300 DUP1
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V230 = CALLVALUE
0x301: V231 = ISZERO V230
0x302: V232 = 0x30a
0x305: JUMPI 0x30a V231
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V9, V230]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2fe]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V233 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V9, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V230]

================================

Block 0x30a
[0x30a:0x31c]
---
Predecessors: [0x2fe]
Successors: [0x31d, 0x321]
---
0x30a JUMPDEST
0x30b POP
0x30c PUSH2 0x3b1
0x30f PUSH1 0x4
0x311 DUP1
0x312 CALLDATASIZE
0x313 SUB
0x314 PUSH1 0x20
0x316 DUP2
0x317 LT
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x30a: JUMPDEST 
0x30c: V234 = 0x3b1
0x30f: V235 = 0x4
0x312: V236 = CALLDATASIZE
0x313: V237 = SUB V236 0x4
0x314: V238 = 0x20
0x317: V239 = LT V237 0x20
0x318: V240 = ISZERO V239
0x319: V241 = 0x321
0x31c: JUMPI 0x321 V240
---
Entry stack: [V9, V230]
Stack pops: 1
Stack additions: [0x3b1, 0x4, V237]
Exit stack: [V9, 0x3b1, 0x4, V237]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x30a]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V242 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, 0x4, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, 0x4, V237]

================================

Block 0x321
[0x321:0x337]
---
Predecessors: [0x30a]
Successors: [0x338, 0x33c]
---
0x321 JUMPDEST
0x322 DUP2
0x323 ADD
0x324 SWAP1
0x325 PUSH1 0x20
0x327 DUP2
0x328 ADD
0x329 DUP2
0x32a CALLDATALOAD
0x32b PUSH5 0x100000000
0x331 DUP2
0x332 GT
0x333 ISZERO
0x334 PUSH2 0x33c
0x337 JUMPI
---
0x321: JUMPDEST 
0x323: V243 = ADD 0x4 V237
0x325: V244 = 0x20
0x328: V245 = ADD 0x4 0x20
0x32a: V246 = CALLDATALOAD 0x4
0x32b: V247 = 0x100000000
0x332: V248 = GT V246 0x100000000
0x333: V249 = ISZERO V248
0x334: V250 = 0x33c
0x337: JUMPI 0x33c V249
---
Entry stack: [V9, 0x3b1, 0x4, V237]
Stack pops: 2
Stack additions: [V243, S1, 0x24, V246]
Exit stack: [V9, 0x3b1, V243, 0x4, 0x24, V246]

================================

Block 0x338
[0x338:0x33b]
---
Predecessors: [0x321]
Successors: []
---
0x338 PUSH1 0x0
0x33a DUP1
0x33b REVERT
---
0x338: V251 = 0x0
0x33b: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, V243, 0x4, 0x24, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, V243, 0x4, 0x24, V246]

================================

Block 0x33c
[0x33c:0x349]
---
Predecessors: [0x321]
Successors: [0x34a, 0x34e]
---
0x33c JUMPDEST
0x33d DUP3
0x33e ADD
0x33f DUP4
0x340 PUSH1 0x20
0x342 DUP3
0x343 ADD
0x344 GT
0x345 ISZERO
0x346 PUSH2 0x34e
0x349 JUMPI
---
0x33c: JUMPDEST 
0x33e: V252 = ADD 0x4 V246
0x340: V253 = 0x20
0x343: V254 = ADD V252 0x20
0x344: V255 = GT V254 V243
0x345: V256 = ISZERO V255
0x346: V257 = 0x34e
0x349: JUMPI 0x34e V256
---
Entry stack: [V9, 0x3b1, V243, 0x4, 0x24, V246]
Stack pops: 4
Stack additions: [S3, S2, S1, V252]
Exit stack: [V9, 0x3b1, V243, 0x4, 0x24, V252]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x33c]
Successors: []
---
0x34a PUSH1 0x0
0x34c DUP1
0x34d REVERT
---
0x34a: V258 = 0x0
0x34d: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, V243, 0x4, 0x24, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, V243, 0x4, 0x24, V252]

================================

Block 0x34e
[0x34e:0x36b]
---
Predecessors: [0x33c]
Successors: [0x36c, 0x370]
---
0x34e JUMPDEST
0x34f DUP1
0x350 CALLDATALOAD
0x351 SWAP1
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP2
0x356 DUP5
0x357 PUSH1 0x1
0x359 DUP4
0x35a MUL
0x35b DUP5
0x35c ADD
0x35d GT
0x35e PUSH5 0x100000000
0x364 DUP4
0x365 GT
0x366 OR
0x367 ISZERO
0x368 PUSH2 0x370
0x36b JUMPI
---
0x34e: JUMPDEST 
0x350: V259 = CALLDATALOAD V252
0x352: V260 = 0x20
0x354: V261 = ADD 0x20 V252
0x357: V262 = 0x1
0x35a: V263 = MUL V259 0x1
0x35c: V264 = ADD V261 V263
0x35d: V265 = GT V264 V243
0x35e: V266 = 0x100000000
0x365: V267 = GT V259 0x100000000
0x366: V268 = OR V267 V265
0x367: V269 = ISZERO V268
0x368: V270 = 0x370
0x36b: JUMPI 0x370 V269
---
Entry stack: [V9, 0x3b1, V243, 0x4, 0x24, V252]
Stack pops: 4
Stack additions: [S3, S2, V261, V259, S1]
Exit stack: [V9, 0x3b1, V243, 0x4, V261, V259, 0x24]

================================

Block 0x36c
[0x36c:0x36f]
---
Predecessors: [0x34e]
Successors: []
---
0x36c PUSH1 0x0
0x36e DUP1
0x36f REVERT
---
0x36c: V271 = 0x0
0x36f: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, V243, 0x4, V261, V259, 0x24]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, V243, 0x4, V261, V259, 0x24]

================================

Block 0x370
[0x370:0x3b0]
---
Predecessors: [0x34e]
Successors: [0x7de]
---
0x370 JUMPDEST
0x371 SWAP2
0x372 SWAP1
0x373 DUP1
0x374 DUP1
0x375 PUSH1 0x1f
0x377 ADD
0x378 PUSH1 0x20
0x37a DUP1
0x37b SWAP2
0x37c DIV
0x37d MUL
0x37e PUSH1 0x20
0x380 ADD
0x381 PUSH1 0x40
0x383 MLOAD
0x384 SWAP1
0x385 DUP2
0x386 ADD
0x387 PUSH1 0x40
0x389 MSTORE
0x38a DUP1
0x38b SWAP4
0x38c SWAP3
0x38d SWAP2
0x38e SWAP1
0x38f DUP2
0x390 DUP2
0x391 MSTORE
0x392 PUSH1 0x20
0x394 ADD
0x395 DUP4
0x396 DUP4
0x397 DUP1
0x398 DUP3
0x399 DUP5
0x39a CALLDATACOPY
0x39b PUSH1 0x0
0x39d SWAP3
0x39e ADD
0x39f SWAP2
0x3a0 SWAP1
0x3a1 SWAP2
0x3a2 MSTORE
0x3a3 POP
0x3a4 SWAP3
0x3a5 SWAP6
0x3a6 POP
0x3a7 PUSH2 0x7de
0x3aa SWAP5
0x3ab POP
0x3ac POP
0x3ad POP
0x3ae POP
0x3af POP
0x3b0 JUMP
---
0x370: JUMPDEST 
0x375: V272 = 0x1f
0x377: V273 = ADD 0x1f V259
0x378: V274 = 0x20
0x37c: V275 = DIV V273 0x20
0x37d: V276 = MUL V275 0x20
0x37e: V277 = 0x20
0x380: V278 = ADD 0x20 V276
0x381: V279 = 0x40
0x383: V280 = M[0x40]
0x386: V281 = ADD V280 V278
0x387: V282 = 0x40
0x389: M[0x40] = V281
0x391: M[V280] = V259
0x392: V283 = 0x20
0x394: V284 = ADD 0x20 V280
0x39a: CALLDATACOPY V284 V261 V259
0x39b: V285 = 0x0
0x39e: V286 = ADD V284 V259
0x3a2: M[V286] = 0x0
0x3a7: V287 = 0x7de
0x3b0: JUMP 0x7de
---
Entry stack: [V9, 0x3b1, V243, 0x4, V261, V259, 0x24]
Stack pops: 5
Stack additions: [V280]
Exit stack: [V9, 0x3b1, V280]

================================

Block 0x3b1
[0x3b1:0x3c4]
---
Predecessors: [0x75f, 0x87f, 0x8b2, 0x8f2, 0x972, 0xa17, 0xa8f]
Successors: []
---
0x3b1 JUMPDEST
0x3b2 PUSH1 0x40
0x3b4 DUP1
0x3b5 MLOAD
0x3b6 SWAP2
0x3b7 ISZERO
0x3b8 ISZERO
0x3b9 DUP3
0x3ba MSTORE
0x3bb MLOAD
0x3bc SWAP1
0x3bd DUP2
0x3be SWAP1
0x3bf SUB
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 SWAP1
0x3c4 RETURN
---
0x3b1: JUMPDEST 
0x3b2: V288 = 0x40
0x3b5: V289 = M[0x40]
0x3b7: V290 = ISZERO S0
0x3b8: V291 = ISZERO V290
0x3ba: M[V289] = V291
0x3bb: V292 = M[0x40]
0x3bf: V293 = SUB V289 V292
0x3c0: V294 = 0x20
0x3c2: V295 = ADD 0x20 V293
0x3c4: RETURN V292 V295
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0x3c5
[0x3c5:0x3cc]
---
Predecessors: [0xc9]
Successors: [0x3cd, 0x3d1]
---
0x3c5 JUMPDEST
0x3c6 CALLVALUE
0x3c7 DUP1
0x3c8 ISZERO
0x3c9 PUSH2 0x3d1
0x3cc JUMPI
---
0x3c5: JUMPDEST 
0x3c6: V296 = CALLVALUE
0x3c8: V297 = ISZERO V296
0x3c9: V298 = 0x3d1
0x3cc: JUMPI 0x3d1 V297
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V296]
Exit stack: [V9, V296]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x3c5]
Successors: []
---
0x3cd PUSH1 0x0
0x3cf DUP1
0x3d0 REVERT
---
0x3cd: V299 = 0x0
0x3d0: REVERT 0x0 0x0
---
Entry stack: [V9, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V296]

================================

Block 0x3d1
[0x3d1:0x3d9]
---
Predecessors: [0x3c5]
Successors: [0x894]
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 PUSH2 0x3da
0x3d6 PUSH2 0x894
0x3d9 JUMP
---
0x3d1: JUMPDEST 
0x3d3: V300 = 0x3da
0x3d6: V301 = 0x894
0x3d9: JUMP 0x894
---
Entry stack: [V9, V296]
Stack pops: 1
Stack additions: [0x3da]
Exit stack: [V9, 0x3da]

================================

Block 0x3da
[0x3da:0x3f5]
---
Predecessors: [0x894, 0x8a3, 0xae4]
Successors: []
---
0x3da JUMPDEST
0x3db PUSH1 0x40
0x3dd DUP1
0x3de MLOAD
0x3df PUSH1 0x1
0x3e1 PUSH1 0xa0
0x3e3 PUSH1 0x2
0x3e5 EXP
0x3e6 SUB
0x3e7 SWAP1
0x3e8 SWAP3
0x3e9 AND
0x3ea DUP3
0x3eb MSTORE
0x3ec MLOAD
0x3ed SWAP1
0x3ee DUP2
0x3ef SWAP1
0x3f0 SUB
0x3f1 PUSH1 0x20
0x3f3 ADD
0x3f4 SWAP1
0x3f5 RETURN
---
0x3da: JUMPDEST 
0x3db: V302 = 0x40
0x3de: V303 = M[0x40]
0x3df: V304 = 0x1
0x3e1: V305 = 0xa0
0x3e3: V306 = 0x2
0x3e5: V307 = EXP 0x2 0xa0
0x3e6: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e9: V309 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: M[V303] = V309
0x3ec: V310 = M[0x40]
0x3f0: V311 = SUB V303 V310
0x3f1: V312 = 0x20
0x3f3: V313 = ADD 0x20 V311
0x3f5: RETURN V310 V313
---
Entry stack: [V9, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S1]

================================

Block 0x3f6
[0x3f6:0x3fd]
---
Predecessors: [0xd4]
Successors: [0x3fe, 0x402]
---
0x3f6 JUMPDEST
0x3f7 CALLVALUE
0x3f8 DUP1
0x3f9 ISZERO
0x3fa PUSH2 0x402
0x3fd JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V314 = CALLVALUE
0x3f9: V315 = ISZERO V314
0x3fa: V316 = 0x402
0x3fd: JUMPI 0x402 V315
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V314]
Exit stack: [V9, V314]

================================

Block 0x3fe
[0x3fe:0x401]
---
Predecessors: [0x3f6]
Successors: []
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
---
0x3fe: V317 = 0x0
0x401: REVERT 0x0 0x0
---
Entry stack: [V9, V314]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V314]

================================

Block 0x402
[0x402:0x40a]
---
Predecessors: [0x3f6]
Successors: [0x8a3]
---
0x402 JUMPDEST
0x403 POP
0x404 PUSH2 0x3da
0x407 PUSH2 0x8a3
0x40a JUMP
---
0x402: JUMPDEST 
0x404: V318 = 0x3da
0x407: V319 = 0x8a3
0x40a: JUMP 0x8a3
---
Entry stack: [V9, V314]
Stack pops: 1
Stack additions: [0x3da]
Exit stack: [V9, 0x3da]

================================

Block 0x40b
[0x40b:0x412]
---
Predecessors: [0x76]
Successors: [0x413, 0x417]
---
0x40b JUMPDEST
0x40c CALLVALUE
0x40d DUP1
0x40e ISZERO
0x40f PUSH2 0x417
0x412 JUMPI
---
0x40b: JUMPDEST 
0x40c: V320 = CALLVALUE
0x40e: V321 = ISZERO V320
0x40f: V322 = 0x417
0x412: JUMPI 0x417 V321
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V320]
Exit stack: [V9, V320]

================================

Block 0x413
[0x413:0x416]
---
Predecessors: [0x40b]
Successors: []
---
0x413 PUSH1 0x0
0x415 DUP1
0x416 REVERT
---
0x413: V323 = 0x0
0x416: REVERT 0x0 0x0
---
Entry stack: [V9, V320]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V320]

================================

Block 0x417
[0x417:0x41f]
---
Predecessors: [0x40b]
Successors: [0x8b2]
---
0x417 JUMPDEST
0x418 POP
0x419 PUSH2 0x3b1
0x41c PUSH2 0x8b2
0x41f JUMP
---
0x417: JUMPDEST 
0x419: V324 = 0x3b1
0x41c: V325 = 0x8b2
0x41f: JUMP 0x8b2
---
Entry stack: [V9, V320]
Stack pops: 1
Stack additions: [0x3b1]
Exit stack: [V9, 0x3b1]

================================

Block 0x420
[0x420:0x427]
---
Predecessors: [0x82]
Successors: [0x428, 0x42c]
---
0x420 JUMPDEST
0x421 CALLVALUE
0x422 DUP1
0x423 ISZERO
0x424 PUSH2 0x42c
0x427 JUMPI
---
0x420: JUMPDEST 
0x421: V326 = CALLVALUE
0x423: V327 = ISZERO V326
0x424: V328 = 0x42c
0x427: JUMPI 0x42c V327
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V326]
Exit stack: [V9, V326]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x420]
Successors: []
---
0x428 PUSH1 0x0
0x42a DUP1
0x42b REVERT
---
0x428: V329 = 0x0
0x42b: REVERT 0x0 0x0
---
Entry stack: [V9, V326]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V326]

================================

Block 0x42c
[0x42c:0x43e]
---
Predecessors: [0x420]
Successors: [0x43f, 0x443]
---
0x42c JUMPDEST
0x42d POP
0x42e PUSH2 0x3b1
0x431 PUSH1 0x4
0x433 DUP1
0x434 CALLDATASIZE
0x435 SUB
0x436 PUSH1 0x60
0x438 DUP2
0x439 LT
0x43a ISZERO
0x43b PUSH2 0x443
0x43e JUMPI
---
0x42c: JUMPDEST 
0x42e: V330 = 0x3b1
0x431: V331 = 0x4
0x434: V332 = CALLDATASIZE
0x435: V333 = SUB V332 0x4
0x436: V334 = 0x60
0x439: V335 = LT V333 0x60
0x43a: V336 = ISZERO V335
0x43b: V337 = 0x443
0x43e: JUMPI 0x443 V336
---
Entry stack: [V9, V326]
Stack pops: 1
Stack additions: [0x3b1, 0x4, V333]
Exit stack: [V9, 0x3b1, 0x4, V333]

================================

Block 0x43f
[0x43f:0x442]
---
Predecessors: [0x42c]
Successors: []
---
0x43f PUSH1 0x0
0x441 DUP1
0x442 REVERT
---
0x43f: V338 = 0x0
0x442: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, 0x4, V333]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, 0x4, V333]

================================

Block 0x443
[0x443:0x462]
---
Predecessors: [0x42c]
Successors: [0x8c3]
---
0x443 JUMPDEST
0x444 POP
0x445 PUSH1 0x1
0x447 PUSH1 0xa0
0x449 PUSH1 0x2
0x44b EXP
0x44c SUB
0x44d DUP2
0x44e CALLDATALOAD
0x44f DUP2
0x450 AND
0x451 SWAP2
0x452 PUSH1 0x20
0x454 DUP2
0x455 ADD
0x456 CALLDATALOAD
0x457 SWAP1
0x458 SWAP2
0x459 AND
0x45a SWAP1
0x45b PUSH1 0x40
0x45d ADD
0x45e CALLDATALOAD
0x45f PUSH2 0x8c3
0x462 JUMP
---
0x443: JUMPDEST 
0x445: V339 = 0x1
0x447: V340 = 0xa0
0x449: V341 = 0x2
0x44b: V342 = EXP 0x2 0xa0
0x44c: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V344 = CALLDATALOAD 0x4
0x450: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x452: V346 = 0x20
0x455: V347 = ADD 0x4 0x20
0x456: V348 = CALLDATALOAD 0x24
0x459: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x45b: V350 = 0x40
0x45d: V351 = ADD 0x40 0x4
0x45e: V352 = CALLDATALOAD 0x44
0x45f: V353 = 0x8c3
0x462: JUMP 0x8c3
---
Entry stack: [V9, 0x3b1, 0x4, V333]
Stack pops: 2
Stack additions: [V345, V349, V352]
Exit stack: [V9, 0x3b1, V345, V349, V352]

================================

Block 0x463
[0x463:0x46a]
---
Predecessors: [0x8d]
Successors: [0x46b, 0x46f]
---
0x463 JUMPDEST
0x464 CALLVALUE
0x465 DUP1
0x466 ISZERO
0x467 PUSH2 0x46f
0x46a JUMPI
---
0x463: JUMPDEST 
0x464: V354 = CALLVALUE
0x466: V355 = ISZERO V354
0x467: V356 = 0x46f
0x46a: JUMPI 0x46f V355
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V354]
Exit stack: [V9, V354]

================================

Block 0x46b
[0x46b:0x46e]
---
Predecessors: [0x463]
Successors: []
---
0x46b PUSH1 0x0
0x46d DUP1
0x46e REVERT
---
0x46b: V357 = 0x0
0x46e: REVERT 0x0 0x0
---
Entry stack: [V9, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V354]

================================

Block 0x46f
[0x46f:0x481]
---
Predecessors: [0x463]
Successors: [0x482, 0x486]
---
0x46f JUMPDEST
0x470 POP
0x471 PUSH2 0x3b1
0x474 PUSH1 0x4
0x476 DUP1
0x477 CALLDATASIZE
0x478 SUB
0x479 PUSH1 0x80
0x47b DUP2
0x47c LT
0x47d ISZERO
0x47e PUSH2 0x486
0x481 JUMPI
---
0x46f: JUMPDEST 
0x471: V358 = 0x3b1
0x474: V359 = 0x4
0x477: V360 = CALLDATASIZE
0x478: V361 = SUB V360 0x4
0x479: V362 = 0x80
0x47c: V363 = LT V361 0x80
0x47d: V364 = ISZERO V363
0x47e: V365 = 0x486
0x481: JUMPI 0x486 V364
---
Entry stack: [V9, V354]
Stack pops: 1
Stack additions: [0x3b1, 0x4, V361]
Exit stack: [V9, 0x3b1, 0x4, V361]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x46f]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V366 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, 0x4, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, 0x4, V361]

================================

Block 0x486
[0x486:0x4ab]
---
Predecessors: [0x46f]
Successors: [0x942]
---
0x486 JUMPDEST
0x487 POP
0x488 PUSH1 0x1
0x48a PUSH1 0xa0
0x48c PUSH1 0x2
0x48e EXP
0x48f SUB
0x490 DUP2
0x491 CALLDATALOAD
0x492 DUP2
0x493 AND
0x494 SWAP2
0x495 PUSH1 0x20
0x497 DUP2
0x498 ADD
0x499 CALLDATALOAD
0x49a DUP3
0x49b AND
0x49c SWAP2
0x49d PUSH1 0x40
0x49f DUP3
0x4a0 ADD
0x4a1 CALLDATALOAD
0x4a2 AND
0x4a3 SWAP1
0x4a4 PUSH1 0x60
0x4a6 ADD
0x4a7 CALLDATALOAD
0x4a8 PUSH2 0x942
0x4ab JUMP
---
0x486: JUMPDEST 
0x488: V367 = 0x1
0x48a: V368 = 0xa0
0x48c: V369 = 0x2
0x48e: V370 = EXP 0x2 0xa0
0x48f: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V372 = CALLDATALOAD 0x4
0x493: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x495: V374 = 0x20
0x498: V375 = ADD 0x4 0x20
0x499: V376 = CALLDATALOAD 0x24
0x49b: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x49d: V378 = 0x40
0x4a0: V379 = ADD 0x4 0x40
0x4a1: V380 = CALLDATALOAD 0x44
0x4a2: V381 = AND V380 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V382 = 0x60
0x4a6: V383 = ADD 0x60 0x4
0x4a7: V384 = CALLDATALOAD 0x64
0x4a8: V385 = 0x942
0x4ab: JUMP 0x942
---
Entry stack: [V9, 0x3b1, 0x4, V361]
Stack pops: 2
Stack additions: [V373, V377, V381, V384]
Exit stack: [V9, 0x3b1, V373, V377, V381, V384]

================================

Block 0x4ac
[0x4ac:0x4b3]
---
Predecessors: [0x46]
Successors: [0x4b4, 0x4b8]
---
0x4ac JUMPDEST
0x4ad CALLVALUE
0x4ae DUP1
0x4af ISZERO
0x4b0 PUSH2 0x4b8
0x4b3 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V386 = CALLVALUE
0x4af: V387 = ISZERO V386
0x4b0: V388 = 0x4b8
0x4b3: JUMPI 0x4b8 V387
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V386]
Exit stack: [V9, V386]

================================

Block 0x4b4
[0x4b4:0x4b7]
---
Predecessors: [0x4ac]
Successors: []
---
0x4b4 PUSH1 0x0
0x4b6 DUP1
0x4b7 REVERT
---
0x4b4: V389 = 0x0
0x4b7: REVERT 0x0 0x0
---
Entry stack: [V9, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V386]

================================

Block 0x4b8
[0x4b8:0x4ca]
---
Predecessors: [0x4ac]
Successors: [0x4cb, 0x4cf]
---
0x4b8 JUMPDEST
0x4b9 POP
0x4ba PUSH2 0x3b1
0x4bd PUSH1 0x4
0x4bf DUP1
0x4c0 CALLDATASIZE
0x4c1 SUB
0x4c2 PUSH1 0x40
0x4c4 DUP2
0x4c5 LT
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x4b8: JUMPDEST 
0x4ba: V390 = 0x3b1
0x4bd: V391 = 0x4
0x4c0: V392 = CALLDATASIZE
0x4c1: V393 = SUB V392 0x4
0x4c2: V394 = 0x40
0x4c5: V395 = LT V393 0x40
0x4c6: V396 = ISZERO V395
0x4c7: V397 = 0x4cf
0x4ca: JUMPI 0x4cf V396
---
Entry stack: [V9, V386]
Stack pops: 1
Stack additions: [0x3b1, 0x4, V393]
Exit stack: [V9, 0x3b1, 0x4, V393]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x4b8]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V398 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, 0x4, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, 0x4, V393]

================================

Block 0x4cf
[0x4cf:0x4e4]
---
Predecessors: [0x4b8]
Successors: [0x9cc]
---
0x4cf JUMPDEST
0x4d0 POP
0x4d1 DUP1
0x4d2 CALLDATALOAD
0x4d3 SWAP1
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 CALLDATALOAD
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 AND
0x4e1 PUSH2 0x9cc
0x4e4 JUMP
---
0x4cf: JUMPDEST 
0x4d2: V399 = CALLDATALOAD 0x4
0x4d4: V400 = 0x20
0x4d6: V401 = ADD 0x20 0x4
0x4d7: V402 = CALLDATALOAD 0x24
0x4d8: V403 = 0x1
0x4da: V404 = 0xa0
0x4dc: V405 = 0x2
0x4de: V406 = EXP 0x2 0xa0
0x4df: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e0: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x4e1: V409 = 0x9cc
0x4e4: JUMP 0x9cc
---
Entry stack: [V9, 0x3b1, 0x4, V393]
Stack pops: 2
Stack additions: [V399, V408]
Exit stack: [V9, 0x3b1, V399, V408]

================================

Block 0x4e5
[0x4e5:0x4ec]
---
Predecessors: [0x51]
Successors: [0x4ed, 0x4f1]
---
0x4e5 JUMPDEST
0x4e6 CALLVALUE
0x4e7 DUP1
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4e5: JUMPDEST 
0x4e6: V410 = CALLVALUE
0x4e8: V411 = ISZERO V410
0x4e9: V412 = 0x4f1
0x4ec: JUMPI 0x4f1 V411
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V410]
Exit stack: [V9, V410]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4e5]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V413 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V9, V410]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V410]

================================

Block 0x4f1
[0x4f1:0x503]
---
Predecessors: [0x4e5]
Successors: [0x504, 0x508]
---
0x4f1 JUMPDEST
0x4f2 POP
0x4f3 PUSH2 0x3b1
0x4f6 PUSH1 0x4
0x4f8 DUP1
0x4f9 CALLDATASIZE
0x4fa SUB
0x4fb PUSH1 0x60
0x4fd DUP2
0x4fe LT
0x4ff ISZERO
0x500 PUSH2 0x508
0x503 JUMPI
---
0x4f1: JUMPDEST 
0x4f3: V414 = 0x3b1
0x4f6: V415 = 0x4
0x4f9: V416 = CALLDATASIZE
0x4fa: V417 = SUB V416 0x4
0x4fb: V418 = 0x60
0x4fe: V419 = LT V417 0x60
0x4ff: V420 = ISZERO V419
0x500: V421 = 0x508
0x503: JUMPI 0x508 V420
---
Entry stack: [V9, V410]
Stack pops: 1
Stack additions: [0x3b1, 0x4, V417]
Exit stack: [V9, 0x3b1, 0x4, V417]

================================

Block 0x504
[0x504:0x507]
---
Predecessors: [0x4f1]
Successors: []
---
0x504 PUSH1 0x0
0x506 DUP1
0x507 REVERT
---
0x504: V422 = 0x0
0x507: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, 0x4, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, 0x4, V417]

================================

Block 0x508
[0x508:0x527]
---
Predecessors: [0x4f1]
Successors: [0xa60]
---
0x508 JUMPDEST
0x509 POP
0x50a PUSH1 0x1
0x50c PUSH1 0xa0
0x50e PUSH1 0x2
0x510 EXP
0x511 SUB
0x512 DUP2
0x513 CALLDATALOAD
0x514 DUP2
0x515 AND
0x516 SWAP2
0x517 PUSH1 0x20
0x519 DUP2
0x51a ADD
0x51b CALLDATALOAD
0x51c SWAP1
0x51d SWAP2
0x51e AND
0x51f SWAP1
0x520 PUSH1 0x40
0x522 ADD
0x523 CALLDATALOAD
0x524 PUSH2 0xa60
0x527 JUMP
---
0x508: JUMPDEST 
0x50a: V423 = 0x1
0x50c: V424 = 0xa0
0x50e: V425 = 0x2
0x510: V426 = EXP 0x2 0xa0
0x511: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V428 = CALLDATALOAD 0x4
0x515: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x517: V430 = 0x20
0x51a: V431 = ADD 0x4 0x20
0x51b: V432 = CALLDATALOAD 0x24
0x51e: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x520: V434 = 0x40
0x522: V435 = ADD 0x40 0x4
0x523: V436 = CALLDATALOAD 0x44
0x524: V437 = 0xa60
0x527: JUMP 0xa60
---
Entry stack: [V9, 0x3b1, 0x4, V417]
Stack pops: 2
Stack additions: [V429, V433, V436]
Exit stack: [V9, 0x3b1, V429, V433, V436]

================================

Block 0x528
[0x528:0x52f]
---
Predecessors: [0x5c]
Successors: [0x530, 0x534]
---
0x528 JUMPDEST
0x529 CALLVALUE
0x52a DUP1
0x52b ISZERO
0x52c PUSH2 0x534
0x52f JUMPI
---
0x528: JUMPDEST 
0x529: V438 = CALLVALUE
0x52b: V439 = ISZERO V438
0x52c: V440 = 0x534
0x52f: JUMPI 0x534 V439
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V438]
Exit stack: [V9, V438]

================================

Block 0x530
[0x530:0x533]
---
Predecessors: [0x528]
Successors: []
---
0x530 PUSH1 0x0
0x532 DUP1
0x533 REVERT
---
0x530: V441 = 0x0
0x533: REVERT 0x0 0x0
---
Entry stack: [V9, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V438]

================================

Block 0x534
[0x534:0x53c]
---
Predecessors: [0x528]
Successors: [0xae4]
---
0x534 JUMPDEST
0x535 POP
0x536 PUSH2 0x3da
0x539 PUSH2 0xae4
0x53c JUMP
---
0x534: JUMPDEST 
0x536: V442 = 0x3da
0x539: V443 = 0xae4
0x53c: JUMP 0xae4
---
Entry stack: [V9, V438]
Stack pops: 1
Stack additions: [0x3da]
Exit stack: [V9, 0x3da]

================================

Block 0x53d
[0x53d:0x544]
---
Predecessors: [0x67]
Successors: [0x545, 0x549]
---
0x53d JUMPDEST
0x53e CALLVALUE
0x53f DUP1
0x540 ISZERO
0x541 PUSH2 0x549
0x544 JUMPI
---
0x53d: JUMPDEST 
0x53e: V444 = CALLVALUE
0x540: V445 = ISZERO V444
0x541: V446 = 0x549
0x544: JUMPI 0x549 V445
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V444]
Exit stack: [V9, V444]

================================

Block 0x545
[0x545:0x548]
---
Predecessors: [0x53d]
Successors: []
---
0x545 PUSH1 0x0
0x547 DUP1
0x548 REVERT
---
0x545: V447 = 0x0
0x548: REVERT 0x0 0x0
---
Entry stack: [V9, V444]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V444]

================================

Block 0x549
[0x549:0x55b]
---
Predecessors: [0x53d]
Successors: [0x55c, 0x560]
---
0x549 JUMPDEST
0x54a POP
0x54b PUSH2 0x2fc
0x54e PUSH1 0x4
0x550 DUP1
0x551 CALLDATASIZE
0x552 SUB
0x553 PUSH1 0x20
0x555 DUP2
0x556 LT
0x557 ISZERO
0x558 PUSH2 0x560
0x55b JUMPI
---
0x549: JUMPDEST 
0x54b: V448 = 0x2fc
0x54e: V449 = 0x4
0x551: V450 = CALLDATASIZE
0x552: V451 = SUB V450 0x4
0x553: V452 = 0x20
0x556: V453 = LT V451 0x20
0x557: V454 = ISZERO V453
0x558: V455 = 0x560
0x55b: JUMPI 0x560 V454
---
Entry stack: [V9, V444]
Stack pops: 1
Stack additions: [0x2fc, 0x4, V451]
Exit stack: [V9, 0x2fc, 0x4, V451]

================================

Block 0x55c
[0x55c:0x55f]
---
Predecessors: [0x549]
Successors: []
---
0x55c PUSH1 0x0
0x55e DUP1
0x55f REVERT
---
0x55c: V456 = 0x0
0x55f: REVERT 0x0 0x0
---
Entry stack: [V9, 0x2fc, 0x4, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x2fc, 0x4, V451]

================================

Block 0x560
[0x560:0x56f]
---
Predecessors: [0x549]
Successors: [0xaf3]
---
0x560 JUMPDEST
0x561 POP
0x562 CALLDATALOAD
0x563 PUSH1 0x1
0x565 PUSH1 0xa0
0x567 PUSH1 0x2
0x569 EXP
0x56a SUB
0x56b AND
0x56c PUSH2 0xaf3
0x56f JUMP
---
0x560: JUMPDEST 
0x562: V457 = CALLDATALOAD 0x4
0x563: V458 = 0x1
0x565: V459 = 0xa0
0x567: V460 = 0x2
0x569: V461 = EXP 0x2 0xa0
0x56a: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x56c: V464 = 0xaf3
0x56f: JUMP 0xaf3
---
Entry stack: [V9, 0x2fc, 0x4, V451]
Stack pops: 2
Stack additions: [V463]
Exit stack: [V9, 0x2fc, V463]

================================

Block 0x570
[0x570:0x5ae]
---
Predecessors: [0x123]
Successors: [0x5af, 0x5f5]
---
0x570 JUMPDEST
0x571 PUSH1 0x1
0x573 DUP1
0x574 SLOAD
0x575 PUSH1 0x40
0x577 DUP1
0x578 MLOAD
0x579 PUSH1 0x20
0x57b PUSH1 0x2
0x57d DUP5
0x57e DUP7
0x57f AND
0x580 ISZERO
0x581 PUSH2 0x100
0x584 MUL
0x585 PUSH1 0x0
0x587 NOT
0x588 ADD
0x589 SWAP1
0x58a SWAP5
0x58b AND
0x58c SWAP4
0x58d SWAP1
0x58e SWAP4
0x58f DIV
0x590 PUSH1 0x1f
0x592 DUP2
0x593 ADD
0x594 DUP5
0x595 SWAP1
0x596 DIV
0x597 DUP5
0x598 MUL
0x599 DUP3
0x59a ADD
0x59b DUP5
0x59c ADD
0x59d SWAP1
0x59e SWAP3
0x59f MSTORE
0x5a0 DUP2
0x5a1 DUP2
0x5a2 MSTORE
0x5a3 SWAP3
0x5a4 SWAP2
0x5a5 DUP4
0x5a6 ADD
0x5a7 DUP3
0x5a8 DUP3
0x5a9 DUP1
0x5aa ISZERO
0x5ab PUSH2 0x5f5
0x5ae JUMPI
---
0x570: JUMPDEST 
0x571: V465 = 0x1
0x574: V466 = S[0x1]
0x575: V467 = 0x40
0x578: V468 = M[0x40]
0x579: V469 = 0x20
0x57b: V470 = 0x2
0x57f: V471 = AND 0x1 V466
0x580: V472 = ISZERO V471
0x581: V473 = 0x100
0x584: V474 = MUL 0x100 V472
0x585: V475 = 0x0
0x587: V476 = NOT 0x0
0x588: V477 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V474
0x58b: V478 = AND V466 V477
0x58f: V479 = DIV V478 0x2
0x590: V480 = 0x1f
0x593: V481 = ADD V479 0x1f
0x596: V482 = DIV V481 0x20
0x598: V483 = MUL 0x20 V482
0x59a: V484 = ADD V468 V483
0x59c: V485 = ADD 0x20 V484
0x59f: M[0x40] = V485
0x5a2: M[V468] = V479
0x5a6: V486 = ADD V468 0x20
0x5aa: V487 = ISZERO V479
0x5ab: V488 = 0x5f5
0x5ae: JUMPI 0x5f5 V487
---
Entry stack: [V9, 0x12c]
Stack pops: 0
Stack additions: [V468, 0x1, V479, V486, 0x1, V479]
Exit stack: [V9, 0x12c, V468, 0x1, V479, V486, 0x1, V479]

================================

Block 0x5af
[0x5af:0x5b6]
---
Predecessors: [0x570]
Successors: [0x5b7, 0x5ca]
---
0x5af DUP1
0x5b0 PUSH1 0x1f
0x5b2 LT
0x5b3 PUSH2 0x5ca
0x5b6 JUMPI
---
0x5b0: V489 = 0x1f
0x5b2: V490 = LT 0x1f V479
0x5b3: V491 = 0x5ca
0x5b6: JUMPI 0x5ca V490
---
Entry stack: [V9, 0x12c, V468, 0x1, V479, V486, 0x1, V479]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x12c, V468, 0x1, V479, V486, 0x1, V479]

================================

Block 0x5b7
[0x5b7:0x5c9]
---
Predecessors: [0x5af]
Successors: [0x5f5]
---
0x5b7 PUSH2 0x100
0x5ba DUP1
0x5bb DUP4
0x5bc SLOAD
0x5bd DIV
0x5be MUL
0x5bf DUP4
0x5c0 MSTORE
0x5c1 SWAP2
0x5c2 PUSH1 0x20
0x5c4 ADD
0x5c5 SWAP2
0x5c6 PUSH2 0x5f5
0x5c9 JUMP
---
0x5b7: V492 = 0x100
0x5bc: V493 = S[0x1]
0x5bd: V494 = DIV V493 0x100
0x5be: V495 = MUL V494 0x100
0x5c0: M[V486] = V495
0x5c2: V496 = 0x20
0x5c4: V497 = ADD 0x20 V486
0x5c6: V498 = 0x5f5
0x5c9: JUMP 0x5f5
---
Entry stack: [V9, 0x12c, V468, 0x1, V479, V486, 0x1, V479]
Stack pops: 3
Stack additions: [V497, S1, S0]
Exit stack: [V9, 0x12c, V468, 0x1, V479, V497, 0x1, V479]

================================

Block 0x5ca
[0x5ca:0x5d7]
---
Predecessors: [0x5af]
Successors: [0x5d8]
---
0x5ca JUMPDEST
0x5cb DUP3
0x5cc ADD
0x5cd SWAP2
0x5ce SWAP1
0x5cf PUSH1 0x0
0x5d1 MSTORE
0x5d2 PUSH1 0x20
0x5d4 PUSH1 0x0
0x5d6 SHA3
0x5d7 SWAP1
---
0x5ca: JUMPDEST 
0x5cc: V499 = ADD V486 V479
0x5cf: V500 = 0x0
0x5d1: M[0x0] = 0x1
0x5d2: V501 = 0x20
0x5d4: V502 = 0x0
0x5d6: V503 = SHA3 0x0 0x20
---
Entry stack: [V9, 0x12c, V468, 0x1, V479, V486, 0x1, V479]
Stack pops: 3
Stack additions: [V499, V503, S2]
Exit stack: [V9, 0x12c, V468, 0x1, V479, V499, V503, V486]

================================

Block 0x5d8
[0x5d8:0x5eb]
---
Predecessors: [0x5ca, 0x5d8]
Successors: [0x5d8, 0x5ec]
---
0x5d8 JUMPDEST
0x5d9 DUP2
0x5da SLOAD
0x5db DUP2
0x5dc MSTORE
0x5dd SWAP1
0x5de PUSH1 0x1
0x5e0 ADD
0x5e1 SWAP1
0x5e2 PUSH1 0x20
0x5e4 ADD
0x5e5 DUP1
0x5e6 DUP4
0x5e7 GT
0x5e8 PUSH2 0x5d8
0x5eb JUMPI
---
0x5d8: JUMPDEST 
0x5da: V504 = S[S1]
0x5dc: M[S0] = V504
0x5de: V505 = 0x1
0x5e0: V506 = ADD 0x1 S1
0x5e2: V507 = 0x20
0x5e4: V508 = ADD 0x20 S0
0x5e7: V509 = GT V499 V508
0x5e8: V510 = 0x5d8
0x5eb: JUMPI 0x5d8 V509
---
Entry stack: [V9, 0x12c, V468, 0x1, V479, V499, S1, S0]
Stack pops: 3
Stack additions: [S2, V506, V508]
Exit stack: [V9, 0x12c, V468, 0x1, V479, V499, V506, V508]

================================

Block 0x5ec
[0x5ec:0x5f4]
---
Predecessors: [0x5d8]
Successors: [0x5f5]
---
0x5ec DUP3
0x5ed SWAP1
0x5ee SUB
0x5ef PUSH1 0x1f
0x5f1 AND
0x5f2 DUP3
0x5f3 ADD
0x5f4 SWAP2
---
0x5ee: V511 = SUB V508 V499
0x5ef: V512 = 0x1f
0x5f1: V513 = AND 0x1f V511
0x5f3: V514 = ADD V499 V513
---
Entry stack: [V9, 0x12c, V468, 0x1, V479, V499, V506, V508]
Stack pops: 3
Stack additions: [V514, S1, S2]
Exit stack: [V9, 0x12c, V468, 0x1, V479, V514, V506, V499]

================================

Block 0x5f5
[0x5f5:0x5fc]
---
Predecessors: [0x570, 0x5b7, 0x5ec]
Successors: [0x12c]
---
0x5f5 JUMPDEST
0x5f6 POP
0x5f7 POP
0x5f8 POP
0x5f9 POP
0x5fa POP
0x5fb DUP2
0x5fc JUMP
---
0x5f5: JUMPDEST 
0x5fc: JUMP 0x12c
---
Entry stack: [V9, 0x12c, V468, 0x1, V479, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V9, 0x12c, V468]

================================

Block 0x5fd
[0x5fd:0x608]
---
Predecessors: [0x223]
Successors: [0x8b2]
---
0x5fd JUMPDEST
0x5fe PUSH1 0x0
0x600 PUSH1 0x60
0x602 PUSH2 0x609
0x605 PUSH2 0x8b2
0x608 JUMP
---
0x5fd: JUMPDEST 
0x5fe: V515 = 0x0
0x600: V516 = 0x60
0x602: V517 = 0x609
0x605: V518 = 0x8b2
0x608: JUMP 0x8b2
---
Entry stack: [V9, 0x264, V129, V169]
Stack pops: 0
Stack additions: [0x0, 0x60, 0x609]
Exit stack: [V9, 0x264, V129, V169, 0x0, 0x60, 0x609]

================================

Block 0x609
[0x609:0x60f]
---
Predecessors: [0x8b2]
Successors: [0x610, 0x614]
---
0x609 JUMPDEST
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x614
0x60f JUMPI
---
0x609: JUMPDEST 
0x60a: V519 = ISZERO V737
0x60b: V520 = ISZERO V519
0x60c: V521 = 0x614
0x60f: JUMPI 0x614 V520
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0x610
[0x610:0x613]
---
Predecessors: [0x609]
Successors: []
---
0x610 PUSH1 0x0
0x612 DUP1
0x613 REVERT
---
0x610: V522 = 0x0
0x613: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0x614
[0x614:0x62e]
---
Predecessors: [0x609]
Successors: [0x62f]
---
0x614 JUMPDEST
0x615 DUP4
0x616 PUSH1 0x1
0x618 PUSH1 0xa0
0x61a PUSH1 0x2
0x61c EXP
0x61d SUB
0x61e AND
0x61f DUP4
0x620 PUSH1 0x40
0x622 MLOAD
0x623 DUP1
0x624 DUP3
0x625 DUP1
0x626 MLOAD
0x627 SWAP1
0x628 PUSH1 0x20
0x62a ADD
0x62b SWAP1
0x62c DUP1
0x62d DUP4
0x62e DUP4
---
0x614: JUMPDEST 
0x616: V523 = 0x1
0x618: V524 = 0xa0
0x61a: V525 = 0x2
0x61c: V526 = EXP 0x2 0xa0
0x61d: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61e: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x620: V529 = 0x40
0x622: V530 = M[0x40]
0x626: V531 = M[S2]
0x628: V532 = 0x20
0x62a: V533 = ADD 0x20 S2
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V528, S2, V530, V530, V533, V531, V531, V530, V533]
Exit stack: [V9, S5, S4, S3, S2, S1, S0, V528, S2, V530, V530, V533, V531, V531, V530, V533]

================================

Block 0x62f
[0x62f:0x637]
---
Predecessors: [0x614, 0x638]
Successors: [0x638, 0x64e]
---
0x62f JUMPDEST
0x630 PUSH1 0x20
0x632 DUP4
0x633 LT
0x634 PUSH2 0x64e
0x637 JUMPI
---
0x62f: JUMPDEST 
0x630: V534 = 0x20
0x633: V535 = LT S2 0x20
0x634: V536 = 0x64e
0x637: JUMPI 0x64e V535
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, V528, S7, V530, V530, V533, V531, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, V528, S7, V530, V530, V533, V531, S2, S1, S0]

================================

Block 0x638
[0x638:0x64d]
---
Predecessors: [0x62f]
Successors: [0x62f]
---
0x638 DUP1
0x639 MLOAD
0x63a DUP3
0x63b MSTORE
0x63c PUSH1 0x1f
0x63e NOT
0x63f SWAP1
0x640 SWAP3
0x641 ADD
0x642 SWAP2
0x643 PUSH1 0x20
0x645 SWAP2
0x646 DUP3
0x647 ADD
0x648 SWAP2
0x649 ADD
0x64a PUSH2 0x62f
0x64d JUMP
---
0x639: V537 = M[S0]
0x63b: M[S1] = V537
0x63c: V538 = 0x1f
0x63e: V539 = NOT 0x1f
0x641: V540 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x643: V541 = 0x20
0x647: V542 = ADD 0x20 S1
0x649: V543 = ADD 0x20 S0
0x64a: V544 = 0x62f
0x64d: JUMP 0x62f
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, V528, S7, V530, V530, V533, V531, S2, S1, S0]
Stack pops: 3
Stack additions: [V540, V542, V543]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, V528, S7, V530, V530, V533, V531, V540, V542, V543]

================================

Block 0x64e
[0x64e:0x68e]
---
Predecessors: [0x62f]
Successors: [0x68f, 0x6b0]
---
0x64e JUMPDEST
0x64f PUSH1 0x1
0x651 DUP4
0x652 PUSH1 0x20
0x654 SUB
0x655 PUSH2 0x100
0x658 EXP
0x659 SUB
0x65a DUP1
0x65b NOT
0x65c DUP3
0x65d MLOAD
0x65e AND
0x65f DUP2
0x660 DUP5
0x661 MLOAD
0x662 AND
0x663 DUP1
0x664 DUP3
0x665 OR
0x666 DUP6
0x667 MSTORE
0x668 POP
0x669 POP
0x66a POP
0x66b POP
0x66c POP
0x66d POP
0x66e SWAP1
0x66f POP
0x670 ADD
0x671 SWAP2
0x672 POP
0x673 POP
0x674 PUSH1 0x0
0x676 PUSH1 0x40
0x678 MLOAD
0x679 DUP1
0x67a DUP4
0x67b SUB
0x67c DUP2
0x67d PUSH1 0x0
0x67f DUP7
0x680 GAS
0x681 CALL
0x682 SWAP2
0x683 POP
0x684 POP
0x685 RETURNDATASIZE
0x686 DUP1
0x687 PUSH1 0x0
0x689 DUP2
0x68a EQ
0x68b PUSH2 0x6b0
0x68e JUMPI
---
0x64e: JUMPDEST 
0x64f: V545 = 0x1
0x652: V546 = 0x20
0x654: V547 = SUB 0x20 S2
0x655: V548 = 0x100
0x658: V549 = EXP 0x100 V547
0x659: V550 = SUB V549 0x1
0x65b: V551 = NOT V550
0x65d: V552 = M[S0]
0x65e: V553 = AND V552 V551
0x661: V554 = M[S1]
0x662: V555 = AND V554 V550
0x665: V556 = OR V553 V555
0x667: M[S1] = V556
0x670: V557 = ADD V531 V530
0x674: V558 = 0x0
0x676: V559 = 0x40
0x678: V560 = M[0x40]
0x67b: V561 = SUB V557 V560
0x67d: V562 = 0x0
0x680: V563 = GAS
0x681: V564 = CALL V563 V528 0x0 V560 V561 V560 0x0
0x685: V565 = RETURNDATASIZE
0x687: V566 = 0x0
0x68a: V567 = EQ V565 0x0
0x68b: V568 = 0x6b0
0x68e: JUMPI 0x6b0 V567
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, V528, S7, V530, V530, V533, V531, S2, S1, S0]
Stack pops: 9
Stack additions: [V564, V565, V565]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, V564, V565, V565]

================================

Block 0x68f
[0x68f:0x6af]
---
Predecessors: [0x64e]
Successors: [0x6b5]
---
0x68f PUSH1 0x40
0x691 MLOAD
0x692 SWAP2
0x693 POP
0x694 PUSH1 0x1f
0x696 NOT
0x697 PUSH1 0x3f
0x699 RETURNDATASIZE
0x69a ADD
0x69b AND
0x69c DUP3
0x69d ADD
0x69e PUSH1 0x40
0x6a0 MSTORE
0x6a1 RETURNDATASIZE
0x6a2 DUP3
0x6a3 MSTORE
0x6a4 RETURNDATASIZE
0x6a5 PUSH1 0x0
0x6a7 PUSH1 0x20
0x6a9 DUP5
0x6aa ADD
0x6ab RETURNDATACOPY
0x6ac PUSH2 0x6b5
0x6af JUMP
---
0x68f: V569 = 0x40
0x691: V570 = M[0x40]
0x694: V571 = 0x1f
0x696: V572 = NOT 0x1f
0x697: V573 = 0x3f
0x699: V574 = RETURNDATASIZE
0x69a: V575 = ADD V574 0x3f
0x69b: V576 = AND V575 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x69d: V577 = ADD V570 V576
0x69e: V578 = 0x40
0x6a0: M[0x40] = V577
0x6a1: V579 = RETURNDATASIZE
0x6a3: M[V570] = V579
0x6a4: V580 = RETURNDATASIZE
0x6a5: V581 = 0x0
0x6a7: V582 = 0x20
0x6aa: V583 = ADD V570 0x20
0x6ab: RETURNDATACOPY V583 0x0 V580
0x6ac: V584 = 0x6b5
0x6af: JUMP 0x6b5
---
Entry stack: [V9, S8, S7, S6, S5, S4, S3, V564, V565, V565]
Stack pops: 2
Stack additions: [V570, S0]
Exit stack: [V9, S8, S7, S6, S5, S4, S3, V564, V570, V565]

================================

Block 0x6b0
[0x6b0:0x6b4]
---
Predecessors: [0x64e]
Successors: [0x6b5]
---
0x6b0 JUMPDEST
0x6b1 PUSH1 0x60
0x6b3 SWAP2
0x6b4 POP
---
0x6b0: JUMPDEST 
0x6b1: V585 = 0x60
---
Entry stack: [V9, S8, S7, S6, S5, S4, S3, V564, V565, V565]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, S8, S7, S6, S5, S4, S3, V564, 0x60, V565]

================================

Block 0x6b5
[0x6b5:0x719]
---
Predecessors: [0x68f, 0x6b0]
Successors: [0x71a]
---
0x6b5 JUMPDEST
0x6b6 POP
0x6b7 DUP1
0x6b8 SWAP3
0x6b9 POP
0x6ba DUP2
0x6bb SWAP4
0x6bc POP
0x6bd POP
0x6be POP
0x6bf DUP4
0x6c0 PUSH1 0x1
0x6c2 PUSH1 0xa0
0x6c4 PUSH1 0x2
0x6c6 EXP
0x6c7 SUB
0x6c8 AND
0x6c9 PUSH32 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34
0x6ea DUP5
0x6eb DUP5
0x6ec PUSH1 0x40
0x6ee MLOAD
0x6ef DUP1
0x6f0 DUP1
0x6f1 PUSH1 0x20
0x6f3 ADD
0x6f4 DUP4
0x6f5 ISZERO
0x6f6 ISZERO
0x6f7 ISZERO
0x6f8 ISZERO
0x6f9 DUP2
0x6fa MSTORE
0x6fb PUSH1 0x20
0x6fd ADD
0x6fe DUP3
0x6ff DUP2
0x700 SUB
0x701 DUP3
0x702 MSTORE
0x703 DUP5
0x704 DUP2
0x705 DUP2
0x706 MLOAD
0x707 DUP2
0x708 MSTORE
0x709 PUSH1 0x20
0x70b ADD
0x70c SWAP2
0x70d POP
0x70e DUP1
0x70f MLOAD
0x710 SWAP1
0x711 PUSH1 0x20
0x713 ADD
0x714 SWAP1
0x715 DUP1
0x716 DUP4
0x717 DUP4
0x718 PUSH1 0x0
---
0x6b5: JUMPDEST 
0x6c0: V586 = 0x1
0x6c2: V587 = 0xa0
0x6c4: V588 = 0x2
0x6c6: V589 = EXP 0x2 0xa0
0x6c7: V590 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c8: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x6c9: V592 = 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34
0x6ec: V593 = 0x40
0x6ee: V594 = M[0x40]
0x6f1: V595 = 0x20
0x6f3: V596 = ADD 0x20 V594
0x6f5: V597 = ISZERO V564
0x6f6: V598 = ISZERO V597
0x6f7: V599 = ISZERO V598
0x6f8: V600 = ISZERO V599
0x6fa: M[V596] = V600
0x6fb: V601 = 0x20
0x6fd: V602 = ADD 0x20 V596
0x700: V603 = SUB V602 V594
0x702: M[V594] = V603
0x706: V604 = M[S5]
0x708: M[V602] = V604
0x709: V605 = 0x20
0x70b: V606 = ADD 0x20 V602
0x70f: V607 = M[S5]
0x711: V608 = 0x20
0x713: V609 = ADD 0x20 S5
0x718: V610 = 0x0
---
Entry stack: [V9, S8, S7, S6, S5, S4, S3, V564, S1, V565]
Stack pops: 7
Stack additions: [S6, S5, S2, S1, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S5, S2, V594, V594, V606, V609, V607, V607, V606, V609, 0x0]
Exit stack: [V9, S8, S7, S6, S5, V564, S1, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S5, V564, V594, V594, V606, V609, V607, V607, V606, V609, 0x0]

================================

Block 0x71a
[0x71a:0x722]
---
Predecessors: [0x6b5, 0x723]
Successors: [0x723, 0x732]
---
0x71a JUMPDEST
0x71b DUP4
0x71c DUP2
0x71d LT
0x71e ISZERO
0x71f PUSH2 0x732
0x722 JUMPI
---
0x71a: JUMPDEST 
0x71d: V611 = LT S0 V607
0x71e: V612 = ISZERO V611
0x71f: V613 = 0x732
0x722: JUMPI 0x732 V612
---
Entry stack: [V9, S18, S17, S16, S15, V564, S13, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S10, V564, V594, V594, V606, V609, V607, V607, V606, V609, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, S18, S17, S16, S15, V564, S13, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S10, V564, V594, V594, V606, V609, V607, V607, V606, V609, S0]

================================

Block 0x723
[0x723:0x731]
---
Predecessors: [0x71a]
Successors: [0x71a]
---
0x723 DUP2
0x724 DUP2
0x725 ADD
0x726 MLOAD
0x727 DUP4
0x728 DUP3
0x729 ADD
0x72a MSTORE
0x72b PUSH1 0x20
0x72d ADD
0x72e PUSH2 0x71a
0x731 JUMP
---
0x725: V614 = ADD S0 V609
0x726: V615 = M[V614]
0x729: V616 = ADD S0 V606
0x72a: M[V616] = V615
0x72b: V617 = 0x20
0x72d: V618 = ADD 0x20 S0
0x72e: V619 = 0x71a
0x731: JUMP 0x71a
---
Entry stack: [V9, S18, S17, S16, S15, V564, S13, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S10, V564, V594, V594, V606, V609, V607, V607, V606, V609, S0]
Stack pops: 3
Stack additions: [S2, S1, V618]
Exit stack: [V9, S18, S17, S16, S15, V564, S13, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S10, V564, V594, V594, V606, V609, V607, V607, V606, V609, V618]

================================

Block 0x732
[0x732:0x745]
---
Predecessors: [0x71a]
Successors: [0x746, 0x75f]
---
0x732 JUMPDEST
0x733 POP
0x734 POP
0x735 POP
0x736 POP
0x737 SWAP1
0x738 POP
0x739 SWAP1
0x73a DUP2
0x73b ADD
0x73c SWAP1
0x73d PUSH1 0x1f
0x73f AND
0x740 DUP1
0x741 ISZERO
0x742 PUSH2 0x75f
0x745 JUMPI
---
0x732: JUMPDEST 
0x73b: V620 = ADD V607 V606
0x73d: V621 = 0x1f
0x73f: V622 = AND 0x1f V607
0x741: V623 = ISZERO V622
0x742: V624 = 0x75f
0x745: JUMPI 0x75f V623
---
Entry stack: [V9, S18, S17, S16, S15, V564, S13, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S10, V564, V594, V594, V606, V609, V607, V607, V606, V609, S0]
Stack pops: 7
Stack additions: [V620, V622]
Exit stack: [V9, S18, S17, S16, S15, V564, S13, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S10, V564, V594, V594, V620, V622]

================================

Block 0x746
[0x746:0x75e]
---
Predecessors: [0x732]
Successors: [0x75f]
---
0x746 DUP1
0x747 DUP3
0x748 SUB
0x749 DUP1
0x74a MLOAD
0x74b PUSH1 0x1
0x74d DUP4
0x74e PUSH1 0x20
0x750 SUB
0x751 PUSH2 0x100
0x754 EXP
0x755 SUB
0x756 NOT
0x757 AND
0x758 DUP2
0x759 MSTORE
0x75a PUSH1 0x20
0x75c ADD
0x75d SWAP2
0x75e POP
---
0x748: V625 = SUB V620 V622
0x74a: V626 = M[V625]
0x74b: V627 = 0x1
0x74e: V628 = 0x20
0x750: V629 = SUB 0x20 V622
0x751: V630 = 0x100
0x754: V631 = EXP 0x100 V629
0x755: V632 = SUB V631 0x1
0x756: V633 = NOT V632
0x757: V634 = AND V633 V626
0x759: M[V625] = V634
0x75a: V635 = 0x20
0x75c: V636 = ADD 0x20 V625
---
Entry stack: [V9, S13, S12, S11, S10, V564, S8, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S5, V564, V594, V594, V620, V622]
Stack pops: 2
Stack additions: [V636, S0]
Exit stack: [V9, S13, S12, S11, S10, V564, S8, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S5, V564, V594, V594, V636, V622]

================================

Block 0x75f
[0x75f:0x773]
---
Predecessors: [0x732, 0x746]
Successors: [0x264, 0x3b1]
---
0x75f JUMPDEST
0x760 POP
0x761 SWAP4
0x762 POP
0x763 POP
0x764 POP
0x765 POP
0x766 PUSH1 0x40
0x768 MLOAD
0x769 DUP1
0x76a SWAP2
0x76b SUB
0x76c SWAP1
0x76d LOG2
0x76e SWAP3
0x76f POP
0x770 SWAP3
0x771 SWAP1
0x772 POP
0x773 JUMP
---
0x75f: JUMPDEST 
0x766: V637 = 0x40
0x768: V638 = M[0x40]
0x76b: V639 = SUB S1 V638
0x76d: LOG V638 V639 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34 V591
0x773: JUMP S12
---
Entry stack: [V9, S13, S12, S11, S10, V564, S8, V591, 0x4e0273c2f549d9b5661a7f99d596db7cdb61840fe47fca018a26b27b2377dd34, S5, V564, V594, V594, S1, V622]
Stack pops: 13
Stack additions: [S9, S8]
Exit stack: [V9, S13, V564, S8]

================================

Block 0x774
[0x774:0x77b]
---
Predecessors: [0x2f3]
Successors: [0x8b2]
---
0x774 JUMPDEST
0x775 PUSH2 0x77c
0x778 PUSH2 0x8b2
0x77b JUMP
---
0x774: JUMPDEST 
0x775: V640 = 0x77c
0x778: V641 = 0x8b2
0x77b: JUMP 0x8b2
---
Entry stack: [V9, 0x2fc]
Stack pops: 0
Stack additions: [0x77c]
Exit stack: [V9, 0x2fc, 0x77c]

================================

Block 0x77c
[0x77c:0x782]
---
Predecessors: [0x8b2]
Successors: [0x783, 0x787]
---
0x77c JUMPDEST
0x77d ISZERO
0x77e ISZERO
0x77f PUSH2 0x787
0x782 JUMPI
---
0x77c: JUMPDEST 
0x77d: V642 = ISZERO V737
0x77e: V643 = ISZERO V642
0x77f: V644 = 0x787
0x782: JUMPI 0x787 V643
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0x783
[0x783:0x786]
---
Predecessors: [0x77c]
Successors: []
---
0x783 PUSH1 0x0
0x785 DUP1
0x786 REVERT
---
0x783: V645 = 0x0
0x786: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0x787
[0x787:0x7dd]
---
Predecessors: [0x77c]
Successors: [0x2fc]
---
0x787 JUMPDEST
0x788 PUSH1 0x0
0x78a DUP1
0x78b SLOAD
0x78c PUSH1 0x40
0x78e MLOAD
0x78f PUSH1 0x1
0x791 PUSH1 0xa0
0x793 PUSH1 0x2
0x795 EXP
0x796 SUB
0x797 SWAP1
0x798 SWAP2
0x799 AND
0x79a SWAP1
0x79b PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7bc SWAP1
0x7bd DUP4
0x7be SWAP1
0x7bf LOG3
0x7c0 PUSH1 0x0
0x7c2 DUP1
0x7c3 SLOAD
0x7c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d9 NOT
0x7da AND
0x7db SWAP1
0x7dc SSTORE
0x7dd JUMP
---
0x787: JUMPDEST 
0x788: V646 = 0x0
0x78b: V647 = S[0x0]
0x78c: V648 = 0x40
0x78e: V649 = M[0x40]
0x78f: V650 = 0x1
0x791: V651 = 0xa0
0x793: V652 = 0x2
0x795: V653 = EXP 0x2 0xa0
0x796: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x799: V655 = AND V647 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V656 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7bf: LOG V649 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V655 0x0
0x7c0: V657 = 0x0
0x7c3: V658 = S[0x0]
0x7c4: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d9: V660 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7da: V661 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V658
0x7dc: S[0x0] = V661
0x7dd: JUMP S0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1]

================================

Block 0x7de
[0x7de:0x7e7]
---
Predecessors: [0x370]
Successors: [0x8b2]
---
0x7de JUMPDEST
0x7df PUSH1 0x0
0x7e1 PUSH2 0x7e8
0x7e4 PUSH2 0x8b2
0x7e7 JUMP
---
0x7de: JUMPDEST 
0x7df: V662 = 0x0
0x7e1: V663 = 0x7e8
0x7e4: V664 = 0x8b2
0x7e7: JUMP 0x8b2
---
Entry stack: [V9, 0x3b1, V280]
Stack pops: 0
Stack additions: [0x0, 0x7e8]
Exit stack: [V9, 0x3b1, V280, 0x0, 0x7e8]

================================

Block 0x7e8
[0x7e8:0x7ee]
---
Predecessors: [0x8b2]
Successors: [0x7ef, 0x7f3]
---
0x7e8 JUMPDEST
0x7e9 ISZERO
0x7ea ISZERO
0x7eb PUSH2 0x7f3
0x7ee JUMPI
---
0x7e8: JUMPDEST 
0x7e9: V665 = ISZERO V737
0x7ea: V666 = ISZERO V665
0x7eb: V667 = 0x7f3
0x7ee: JUMPI 0x7f3 V666
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0x7ef
[0x7ef:0x7f2]
---
Predecessors: [0x7e8]
Successors: []
---
0x7ef PUSH1 0x0
0x7f1 DUP1
0x7f2 REVERT
---
0x7ef: V668 = 0x0
0x7f2: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0x7f3
[0x7f3:0x839]
---
Predecessors: [0x7e8]
Successors: [0x83a]
---
0x7f3 JUMPDEST
0x7f4 PUSH32 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b
0x815 DUP3
0x816 PUSH1 0x40
0x818 MLOAD
0x819 DUP1
0x81a DUP1
0x81b PUSH1 0x20
0x81d ADD
0x81e DUP3
0x81f DUP2
0x820 SUB
0x821 DUP3
0x822 MSTORE
0x823 DUP4
0x824 DUP2
0x825 DUP2
0x826 MLOAD
0x827 DUP2
0x828 MSTORE
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP2
0x82d POP
0x82e DUP1
0x82f MLOAD
0x830 SWAP1
0x831 PUSH1 0x20
0x833 ADD
0x834 SWAP1
0x835 DUP1
0x836 DUP4
0x837 DUP4
0x838 PUSH1 0x0
---
0x7f3: JUMPDEST 
0x7f4: V669 = 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b
0x816: V670 = 0x40
0x818: V671 = M[0x40]
0x81b: V672 = 0x20
0x81d: V673 = ADD 0x20 V671
0x820: V674 = SUB V673 V671
0x822: M[V671] = V674
0x826: V675 = M[S1]
0x828: M[V673] = V675
0x829: V676 = 0x20
0x82b: V677 = ADD 0x20 V673
0x82f: V678 = M[S1]
0x831: V679 = 0x20
0x833: V680 = ADD 0x20 S1
0x838: V681 = 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S1, V671, V671, V677, V680, V678, V678, V677, V680, 0x0]
Exit stack: [V9, S5, S4, S3, S2, S1, S0, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S1, V671, V671, V677, V680, V678, V678, V677, V680, 0x0]

================================

Block 0x83a
[0x83a:0x842]
---
Predecessors: [0x7f3, 0x843]
Successors: [0x843, 0x852]
---
0x83a JUMPDEST
0x83b DUP4
0x83c DUP2
0x83d LT
0x83e ISZERO
0x83f PUSH2 0x852
0x842 JUMPI
---
0x83a: JUMPDEST 
0x83d: V682 = LT S0 V678
0x83e: V683 = ISZERO V682
0x83f: V684 = 0x852
0x842: JUMPI 0x852 V683
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S9, V671, V671, V677, V680, V678, V678, V677, V680, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, S16, S15, S14, S13, S12, S11, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S9, V671, V671, V677, V680, V678, V678, V677, V680, S0]

================================

Block 0x843
[0x843:0x851]
---
Predecessors: [0x83a]
Successors: [0x83a]
---
0x843 DUP2
0x844 DUP2
0x845 ADD
0x846 MLOAD
0x847 DUP4
0x848 DUP3
0x849 ADD
0x84a MSTORE
0x84b PUSH1 0x20
0x84d ADD
0x84e PUSH2 0x83a
0x851 JUMP
---
0x845: V685 = ADD S0 V680
0x846: V686 = M[V685]
0x849: V687 = ADD S0 V677
0x84a: M[V687] = V686
0x84b: V688 = 0x20
0x84d: V689 = ADD 0x20 S0
0x84e: V690 = 0x83a
0x851: JUMP 0x83a
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S9, V671, V671, V677, V680, V678, V678, V677, V680, S0]
Stack pops: 3
Stack additions: [S2, S1, V689]
Exit stack: [V9, S16, S15, S14, S13, S12, S11, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S9, V671, V671, V677, V680, V678, V678, V677, V680, V689]

================================

Block 0x852
[0x852:0x865]
---
Predecessors: [0x83a]
Successors: [0x866, 0x87f]
---
0x852 JUMPDEST
0x853 POP
0x854 POP
0x855 POP
0x856 POP
0x857 SWAP1
0x858 POP
0x859 SWAP1
0x85a DUP2
0x85b ADD
0x85c SWAP1
0x85d PUSH1 0x1f
0x85f AND
0x860 DUP1
0x861 ISZERO
0x862 PUSH2 0x87f
0x865 JUMPI
---
0x852: JUMPDEST 
0x85b: V691 = ADD V678 V677
0x85d: V692 = 0x1f
0x85f: V693 = AND 0x1f V678
0x861: V694 = ISZERO V693
0x862: V695 = 0x87f
0x865: JUMPI 0x87f V694
---
Entry stack: [V9, S16, S15, S14, S13, S12, S11, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S9, V671, V671, V677, V680, V678, V678, V677, V680, S0]
Stack pops: 7
Stack additions: [V691, V693]
Exit stack: [V9, S16, S15, S14, S13, S12, S11, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S9, V671, V671, V691, V693]

================================

Block 0x866
[0x866:0x87e]
---
Predecessors: [0x852]
Successors: [0x87f]
---
0x866 DUP1
0x867 DUP3
0x868 SUB
0x869 DUP1
0x86a MLOAD
0x86b PUSH1 0x1
0x86d DUP4
0x86e PUSH1 0x20
0x870 SUB
0x871 PUSH2 0x100
0x874 EXP
0x875 SUB
0x876 NOT
0x877 AND
0x878 DUP2
0x879 MSTORE
0x87a PUSH1 0x20
0x87c ADD
0x87d SWAP2
0x87e POP
---
0x868: V696 = SUB V691 V693
0x86a: V697 = M[V696]
0x86b: V698 = 0x1
0x86e: V699 = 0x20
0x870: V700 = SUB 0x20 V693
0x871: V701 = 0x100
0x874: V702 = EXP 0x100 V700
0x875: V703 = SUB V702 0x1
0x876: V704 = NOT V703
0x877: V705 = AND V704 V697
0x879: M[V696] = V705
0x87a: V706 = 0x20
0x87c: V707 = ADD 0x20 V696
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S4, V671, V671, V691, V693]
Stack pops: 2
Stack additions: [V707, S0]
Exit stack: [V9, S11, S10, S9, S8, S7, S6, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S4, V671, V671, V707, V693]

================================

Block 0x87f
[0x87f:0x893]
---
Predecessors: [0x852, 0x866]
Successors: [0x3b1]
---
0x87f JUMPDEST
0x880 POP
0x881 SWAP3
0x882 POP
0x883 POP
0x884 POP
0x885 PUSH1 0x40
0x887 MLOAD
0x888 DUP1
0x889 SWAP2
0x88a SUB
0x88b SWAP1
0x88c LOG1
0x88d POP
0x88e PUSH1 0x1
0x890 SWAP2
0x891 SWAP1
0x892 POP
0x893 JUMP
---
0x87f: JUMPDEST 
0x885: V708 = 0x40
0x887: V709 = M[0x40]
0x88a: V710 = SUB S1 V709
0x88c: LOG V709 V710 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b
0x88e: V711 = 0x1
0x893: JUMP S8
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, 0xf9deba4938ba20070ec5a45ddf59bccba49cf83124215228ec1232182ef0ba2b, S4, V671, V671, S1, V693]
Stack pops: 9
Stack additions: [0x1]
Exit stack: [V9, S11, S10, S9, 0x1]

================================

Block 0x894
[0x894:0x8a2]
---
Predecessors: [0x3d1]
Successors: [0x3da]
---
0x894 JUMPDEST
0x895 PUSH1 0x3
0x897 SLOAD
0x898 PUSH1 0x1
0x89a PUSH1 0xa0
0x89c PUSH1 0x2
0x89e EXP
0x89f SUB
0x8a0 AND
0x8a1 DUP2
0x8a2 JUMP
---
0x894: JUMPDEST 
0x895: V712 = 0x3
0x897: V713 = S[0x3]
0x898: V714 = 0x1
0x89a: V715 = 0xa0
0x89c: V716 = 0x2
0x89e: V717 = EXP 0x2 0xa0
0x89f: V718 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V713
0x8a2: JUMP 0x3da
---
Entry stack: [V9, 0x3da]
Stack pops: 1
Stack additions: [S0, V719]
Exit stack: [V9, 0x3da, V719]

================================

Block 0x8a3
[0x8a3:0x8b1]
---
Predecessors: [0x402]
Successors: [0x3da]
---
0x8a3 JUMPDEST
0x8a4 PUSH1 0x0
0x8a6 SLOAD
0x8a7 PUSH1 0x1
0x8a9 PUSH1 0xa0
0x8ab PUSH1 0x2
0x8ad EXP
0x8ae SUB
0x8af AND
0x8b0 SWAP1
0x8b1 JUMP
---
0x8a3: JUMPDEST 
0x8a4: V720 = 0x0
0x8a6: V721 = S[0x0]
0x8a7: V722 = 0x1
0x8a9: V723 = 0xa0
0x8ab: V724 = 0x2
0x8ad: V725 = EXP 0x2 0xa0
0x8ae: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8af: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0x8b1: JUMP 0x3da
---
Entry stack: [V9, 0x3da]
Stack pops: 1
Stack additions: [V727]
Exit stack: [V9, V727]

================================

Block 0x8b2
[0x8b2:0x8c2]
---
Predecessors: [0x417, 0x5fd, 0x774, 0x7de, 0x8c3, 0x942, 0x9cc, 0xa60, 0xaf3]
Successors: [0x3b1, 0x609, 0x77c, 0x7e8, 0x8cd, 0x94c, 0x9d6, 0xa6a, 0xafb]
---
0x8b2 JUMPDEST
0x8b3 PUSH1 0x0
0x8b5 SLOAD
0x8b6 PUSH1 0x1
0x8b8 PUSH1 0xa0
0x8ba PUSH1 0x2
0x8bc EXP
0x8bd SUB
0x8be AND
0x8bf CALLER
0x8c0 EQ
0x8c1 SWAP1
0x8c2 JUMP
---
0x8b2: JUMPDEST 
0x8b3: V728 = 0x0
0x8b5: V729 = S[0x0]
0x8b6: V730 = 0x1
0x8b8: V731 = 0xa0
0x8ba: V732 = 0x2
0x8bc: V733 = EXP 0x2 0xa0
0x8bd: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8be: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0x8bf: V736 = CALLER
0x8c0: V737 = EQ V736 V735
0x8c2: JUMP {0x3b1, 0x609, 0x77c, 0x7e8, 0x8cd, 0x94c, 0x9d6, 0xa6a, 0xafb}
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, {0x3b1, 0x609, 0x77c, 0x7e8, 0x8cd, 0x94c, 0x9d6, 0xa6a, 0xafb}]
Stack pops: 1
Stack additions: [V737]
Exit stack: [V9, S6, S5, S4, S3, S2, S1, V737]

================================

Block 0x8c3
[0x8c3:0x8cc]
---
Predecessors: [0x443]
Successors: [0x8b2]
---
0x8c3 JUMPDEST
0x8c4 PUSH1 0x0
0x8c6 PUSH2 0x8cd
0x8c9 PUSH2 0x8b2
0x8cc JUMP
---
0x8c3: JUMPDEST 
0x8c4: V738 = 0x0
0x8c6: V739 = 0x8cd
0x8c9: V740 = 0x8b2
0x8cc: JUMP 0x8b2
---
Entry stack: [V9, 0x3b1, V345, V349, V352]
Stack pops: 0
Stack additions: [0x0, 0x8cd]
Exit stack: [V9, 0x3b1, V345, V349, V352, 0x0, 0x8cd]

================================

Block 0x8cd
[0x8cd:0x8d3]
---
Predecessors: [0x8b2]
Successors: [0x8d4, 0x8d8]
---
0x8cd JUMPDEST
0x8ce ISZERO
0x8cf ISZERO
0x8d0 PUSH2 0x8d8
0x8d3 JUMPI
---
0x8cd: JUMPDEST 
0x8ce: V741 = ISZERO V737
0x8cf: V742 = ISZERO V741
0x8d0: V743 = 0x8d8
0x8d3: JUMPI 0x8d8 V742
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0x8d4
[0x8d4:0x8d7]
---
Predecessors: [0x8cd]
Successors: []
---
0x8d4 PUSH1 0x0
0x8d6 DUP1
0x8d7 REVERT
---
0x8d4: V744 = 0x0
0x8d7: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0x8d8
[0x8d8:0x8f1]
---
Predecessors: [0x8cd]
Successors: [0xb12]
---
0x8d8 JUMPDEST
0x8d9 PUSH2 0x8f2
0x8dc PUSH1 0x1
0x8de PUSH1 0xa0
0x8e0 PUSH1 0x2
0x8e2 EXP
0x8e3 SUB
0x8e4 DUP6
0x8e5 AND
0x8e6 DUP5
0x8e7 DUP5
0x8e8 PUSH4 0xffffffff
0x8ed PUSH2 0xb12
0x8f0 AND
0x8f1 JUMP
---
0x8d8: JUMPDEST 
0x8d9: V745 = 0x8f2
0x8dc: V746 = 0x1
0x8de: V747 = 0xa0
0x8e0: V748 = 0x2
0x8e2: V749 = EXP 0x2 0xa0
0x8e3: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e5: V751 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x8e8: V752 = 0xffffffff
0x8ed: V753 = 0xb12
0x8f0: V754 = AND 0xb12 0xffffffff
0x8f1: JUMP 0xb12
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x8f2, V751, S2, S1]
Exit stack: [V9, S5, S4, S3, S2, S1, S0, 0x8f2, V751, S2, S1]

================================

Block 0x8f2
[0x8f2:0x941]
---
Predecessors: [0xdac]
Successors: [0x3b1]
---
0x8f2 JUMPDEST
0x8f3 PUSH1 0x40
0x8f5 DUP1
0x8f6 MLOAD
0x8f7 PUSH1 0x1
0x8f9 PUSH1 0xa0
0x8fb PUSH1 0x2
0x8fd EXP
0x8fe SUB
0x8ff DUP6
0x900 DUP2
0x901 AND
0x902 DUP3
0x903 MSTORE
0x904 PUSH1 0x20
0x906 DUP3
0x907 ADD
0x908 DUP6
0x909 SWAP1
0x90a MSTORE
0x90b DUP3
0x90c MLOAD
0x90d SWAP1
0x90e DUP8
0x90f AND
0x910 SWAP3
0x911 PUSH32 0x3a48a4d6253b30fd10e57a347c1f9bcb0604946481fae0b2fdad6e74f2a9cbb3
0x932 SWAP3
0x933 DUP3
0x934 SWAP1
0x935 SUB
0x936 ADD
0x937 SWAP1
0x938 LOG2
0x939 POP
0x93a PUSH1 0x1
0x93c SWAP4
0x93d SWAP3
0x93e POP
0x93f POP
0x940 POP
0x941 JUMP
---
0x8f2: JUMPDEST 
0x8f3: V755 = 0x40
0x8f6: V756 = M[0x40]
0x8f7: V757 = 0x1
0x8f9: V758 = 0xa0
0x8fb: V759 = 0x2
0x8fd: V760 = EXP 0x2 0xa0
0x8fe: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x901: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x903: M[V756] = V762
0x904: V763 = 0x20
0x907: V764 = ADD V756 0x20
0x90a: M[V764] = S1
0x90c: V765 = M[0x40]
0x90f: V766 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x911: V767 = 0x3a48a4d6253b30fd10e57a347c1f9bcb0604946481fae0b2fdad6e74f2a9cbb3
0x935: V768 = SUB V756 V765
0x936: V769 = ADD V768 0x40
0x938: LOG V765 V769 0x3a48a4d6253b30fd10e57a347c1f9bcb0604946481fae0b2fdad6e74f2a9cbb3 V766
0x93a: V770 = 0x1
0x941: JUMP 0x3b1
---
Entry stack: [V9, 0x3b1, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V9, 0x1]

================================

Block 0x942
[0x942:0x94b]
---
Predecessors: [0x486]
Successors: [0x8b2]
---
0x942 JUMPDEST
0x943 PUSH1 0x0
0x945 PUSH2 0x94c
0x948 PUSH2 0x8b2
0x94b JUMP
---
0x942: JUMPDEST 
0x943: V771 = 0x0
0x945: V772 = 0x94c
0x948: V773 = 0x8b2
0x94b: JUMP 0x8b2
---
Entry stack: [V9, 0x3b1, V373, V377, V381, V384]
Stack pops: 0
Stack additions: [0x0, 0x94c]
Exit stack: [V9, 0x3b1, V373, V377, V381, V384, 0x0, 0x94c]

================================

Block 0x94c
[0x94c:0x952]
---
Predecessors: [0x8b2]
Successors: [0x953, 0x957]
---
0x94c JUMPDEST
0x94d ISZERO
0x94e ISZERO
0x94f PUSH2 0x957
0x952 JUMPI
---
0x94c: JUMPDEST 
0x94d: V774 = ISZERO V737
0x94e: V775 = ISZERO V774
0x94f: V776 = 0x957
0x952: JUMPI 0x957 V775
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0x953
[0x953:0x956]
---
Predecessors: [0x94c]
Successors: []
---
0x953 PUSH1 0x0
0x955 DUP1
0x956 REVERT
---
0x953: V777 = 0x0
0x956: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0x957
[0x957:0x971]
---
Predecessors: [0x94c]
Successors: [0xdb3]
---
0x957 JUMPDEST
0x958 PUSH2 0x972
0x95b PUSH1 0x1
0x95d PUSH1 0xa0
0x95f PUSH1 0x2
0x961 EXP
0x962 SUB
0x963 DUP7
0x964 AND
0x965 DUP6
0x966 DUP6
0x967 DUP6
0x968 PUSH4 0xffffffff
0x96d PUSH2 0xdb3
0x970 AND
0x971 JUMP
---
0x957: JUMPDEST 
0x958: V778 = 0x972
0x95b: V779 = 0x1
0x95d: V780 = 0xa0
0x95f: V781 = 0x2
0x961: V782 = EXP 0x2 0xa0
0x962: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x964: V784 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x968: V785 = 0xffffffff
0x96d: V786 = 0xdb3
0x970: V787 = AND 0xdb3 0xffffffff
0x971: JUMP 0xdb3
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x972, V784, S3, S2, S1]
Exit stack: [V9, S5, S4, S3, S2, S1, S0, 0x972, V784, S3, S2, S1]

================================

Block 0x972
[0x972:0x9cb]
---
Predecessors: [0xfa3]
Successors: [0x3b1]
---
0x972 JUMPDEST
0x973 PUSH1 0x40
0x975 DUP1
0x976 MLOAD
0x977 PUSH1 0x1
0x979 PUSH1 0xa0
0x97b PUSH1 0x2
0x97d EXP
0x97e SUB
0x97f DUP7
0x980 DUP2
0x981 AND
0x982 DUP3
0x983 MSTORE
0x984 DUP6
0x985 DUP2
0x986 AND
0x987 PUSH1 0x20
0x989 DUP4
0x98a ADD
0x98b MSTORE
0x98c DUP2
0x98d DUP4
0x98e ADD
0x98f DUP6
0x990 SWAP1
0x991 MSTORE
0x992 SWAP2
0x993 MLOAD
0x994 SWAP2
0x995 DUP8
0x996 AND
0x997 SWAP2
0x998 PUSH32 0x179c15de44aa7ab84896301974328eb40b5b40fe01cfe0fee2924ea712c3e843
0x9b9 SWAP2
0x9ba DUP2
0x9bb SWAP1
0x9bc SUB
0x9bd PUSH1 0x60
0x9bf ADD
0x9c0 SWAP1
0x9c1 LOG2
0x9c2 POP
0x9c3 PUSH1 0x1
0x9c5 SWAP5
0x9c6 SWAP4
0x9c7 POP
0x9c8 POP
0x9c9 POP
0x9ca POP
0x9cb JUMP
---
0x972: JUMPDEST 
0x973: V788 = 0x40
0x976: V789 = M[0x40]
0x977: V790 = 0x1
0x979: V791 = 0xa0
0x97b: V792 = 0x2
0x97d: V793 = EXP 0x2 0xa0
0x97e: V794 = SUB 0x10000000000000000000000000000000000000000 0x1
0x981: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x983: M[V789] = V795
0x986: V796 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x987: V797 = 0x20
0x98a: V798 = ADD V789 0x20
0x98b: M[V798] = V796
0x98e: V799 = ADD 0x40 V789
0x991: M[V799] = V384
0x993: V800 = M[0x40]
0x996: V801 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0x998: V802 = 0x179c15de44aa7ab84896301974328eb40b5b40fe01cfe0fee2924ea712c3e843
0x9bc: V803 = SUB V789 V800
0x9bd: V804 = 0x60
0x9bf: V805 = ADD 0x60 V803
0x9c1: LOG V800 V805 0x179c15de44aa7ab84896301974328eb40b5b40fe01cfe0fee2924ea712c3e843 V801
0x9c3: V806 = 0x1
0x9cb: JUMP 0x3b1
---
Entry stack: [V9, 0x3b1, V373, V377, V381, V384, 0x0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V9, 0x1]

================================

Block 0x9cc
[0x9cc:0x9d5]
---
Predecessors: [0x4cf]
Successors: [0x8b2]
---
0x9cc JUMPDEST
0x9cd PUSH1 0x0
0x9cf PUSH2 0x9d6
0x9d2 PUSH2 0x8b2
0x9d5 JUMP
---
0x9cc: JUMPDEST 
0x9cd: V807 = 0x0
0x9cf: V808 = 0x9d6
0x9d2: V809 = 0x8b2
0x9d5: JUMP 0x8b2
---
Entry stack: [V9, 0x3b1, V399, V408]
Stack pops: 0
Stack additions: [0x0, 0x9d6]
Exit stack: [V9, 0x3b1, V399, V408, 0x0, 0x9d6]

================================

Block 0x9d6
[0x9d6:0x9dc]
---
Predecessors: [0x8b2]
Successors: [0x9dd, 0x9e1]
---
0x9d6 JUMPDEST
0x9d7 ISZERO
0x9d8 ISZERO
0x9d9 PUSH2 0x9e1
0x9dc JUMPI
---
0x9d6: JUMPDEST 
0x9d7: V810 = ISZERO V737
0x9d8: V811 = ISZERO V810
0x9d9: V812 = 0x9e1
0x9dc: JUMPI 0x9e1 V811
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0x9dd
[0x9dd:0x9e0]
---
Predecessors: [0x9d6]
Successors: []
---
0x9dd PUSH1 0x0
0x9df DUP1
0x9e0 REVERT
---
0x9dd: V813 = 0x0
0x9e0: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0x9e1
[0x9e1:0xa0d]
---
Predecessors: [0x9d6]
Successors: [0xa0e, 0xa17]
---
0x9e1 JUMPDEST
0x9e2 PUSH1 0x40
0x9e4 MLOAD
0x9e5 PUSH1 0x1
0x9e7 PUSH1 0xa0
0x9e9 PUSH1 0x2
0x9eb EXP
0x9ec SUB
0x9ed DUP4
0x9ee AND
0x9ef SWAP1
0x9f0 DUP5
0x9f1 ISZERO
0x9f2 PUSH2 0x8fc
0x9f5 MUL
0x9f6 SWAP1
0x9f7 DUP6
0x9f8 SWAP1
0x9f9 PUSH1 0x0
0x9fb DUP2
0x9fc DUP2
0x9fd DUP2
0x9fe DUP6
0x9ff DUP9
0xa00 DUP9
0xa01 CALL
0xa02 SWAP4
0xa03 POP
0xa04 POP
0xa05 POP
0xa06 POP
0xa07 ISZERO
0xa08 DUP1
0xa09 ISZERO
0xa0a PUSH2 0xa17
0xa0d JUMPI
---
0x9e1: JUMPDEST 
0x9e2: V814 = 0x40
0x9e4: V815 = M[0x40]
0x9e5: V816 = 0x1
0x9e7: V817 = 0xa0
0x9e9: V818 = 0x2
0x9eb: V819 = EXP 0x2 0xa0
0x9ec: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ee: V821 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x9f1: V822 = ISZERO S2
0x9f2: V823 = 0x8fc
0x9f5: V824 = MUL 0x8fc V822
0x9f9: V825 = 0x0
0xa01: V826 = CALL V824 V821 S2 V815 0x0 V815 0x0
0xa07: V827 = ISZERO V826
0xa09: V828 = ISZERO V827
0xa0a: V829 = 0xa17
0xa0d: JUMPI 0xa17 V828
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V827]
Exit stack: [V9, S5, S4, S3, S2, S1, S0, V827]

================================

Block 0xa0e
[0xa0e:0xa16]
---
Predecessors: [0x9e1]
Successors: []
---
0xa0e RETURNDATASIZE
0xa0f PUSH1 0x0
0xa11 DUP1
0xa12 RETURNDATACOPY
0xa13 RETURNDATASIZE
0xa14 PUSH1 0x0
0xa16 REVERT
---
0xa0e: V830 = RETURNDATASIZE
0xa0f: V831 = 0x0
0xa12: RETURNDATACOPY 0x0 0x0 V830
0xa13: V832 = RETURNDATASIZE
0xa14: V833 = 0x0
0xa16: REVERT 0x0 V832
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V827]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1, V827]

================================

Block 0xa17
[0xa17:0xa5f]
---
Predecessors: [0x9e1]
Successors: [0x3b1]
---
0xa17 JUMPDEST
0xa18 POP
0xa19 PUSH1 0x40
0xa1b DUP1
0xa1c MLOAD
0xa1d DUP5
0xa1e DUP2
0xa1f MSTORE
0xa20 SWAP1
0xa21 MLOAD
0xa22 PUSH1 0x1
0xa24 PUSH1 0xa0
0xa26 PUSH1 0x2
0xa28 EXP
0xa29 SUB
0xa2a DUP5
0xa2b AND
0xa2c SWAP2
0xa2d PUSH32 0x22fca66666089f39bc900dd6605b489df4aae6260cc8ea8257594cfb8c84926c
0xa4e SWAP2
0xa4f SWAP1
0xa50 DUP2
0xa51 SWAP1
0xa52 SUB
0xa53 PUSH1 0x20
0xa55 ADD
0xa56 SWAP1
0xa57 LOG2
0xa58 POP
0xa59 PUSH1 0x1
0xa5b SWAP3
0xa5c SWAP2
0xa5d POP
0xa5e POP
0xa5f JUMP
---
0xa17: JUMPDEST 
0xa19: V834 = 0x40
0xa1c: V835 = M[0x40]
0xa1f: M[V835] = S3
0xa21: V836 = M[0x40]
0xa22: V837 = 0x1
0xa24: V838 = 0xa0
0xa26: V839 = 0x2
0xa28: V840 = EXP 0x2 0xa0
0xa29: V841 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2b: V842 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa2d: V843 = 0x22fca66666089f39bc900dd6605b489df4aae6260cc8ea8257594cfb8c84926c
0xa52: V844 = SUB V835 V836
0xa53: V845 = 0x20
0xa55: V846 = ADD 0x20 V844
0xa57: LOG V836 V846 0x22fca66666089f39bc900dd6605b489df4aae6260cc8ea8257594cfb8c84926c V842
0xa59: V847 = 0x1
0xa5f: JUMP S4
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V827]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V9, S6, S5, 0x1]

================================

Block 0xa60
[0xa60:0xa69]
---
Predecessors: [0x508]
Successors: [0x8b2]
---
0xa60 JUMPDEST
0xa61 PUSH1 0x0
0xa63 PUSH2 0xa6a
0xa66 PUSH2 0x8b2
0xa69 JUMP
---
0xa60: JUMPDEST 
0xa61: V848 = 0x0
0xa63: V849 = 0xa6a
0xa66: V850 = 0x8b2
0xa69: JUMP 0x8b2
---
Entry stack: [V9, 0x3b1, V429, V433, V436]
Stack pops: 0
Stack additions: [0x0, 0xa6a]
Exit stack: [V9, 0x3b1, V429, V433, V436, 0x0, 0xa6a]

================================

Block 0xa6a
[0xa6a:0xa70]
---
Predecessors: [0x8b2]
Successors: [0xa71, 0xa75]
---
0xa6a JUMPDEST
0xa6b ISZERO
0xa6c ISZERO
0xa6d PUSH2 0xa75
0xa70 JUMPI
---
0xa6a: JUMPDEST 
0xa6b: V851 = ISZERO V737
0xa6c: V852 = ISZERO V851
0xa6d: V853 = 0xa75
0xa70: JUMPI 0xa75 V852
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0xa71
[0xa71:0xa74]
---
Predecessors: [0xa6a]
Successors: []
---
0xa71 PUSH1 0x0
0xa73 DUP1
0xa74 REVERT
---
0xa71: V854 = 0x0
0xa74: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0xa75
[0xa75:0xa8e]
---
Predecessors: [0xa6a]
Successors: [0xfab]
---
0xa75 JUMPDEST
0xa76 PUSH2 0xa8f
0xa79 PUSH1 0x1
0xa7b PUSH1 0xa0
0xa7d PUSH1 0x2
0xa7f EXP
0xa80 SUB
0xa81 DUP6
0xa82 AND
0xa83 DUP5
0xa84 DUP5
0xa85 PUSH4 0xffffffff
0xa8a PUSH2 0xfab
0xa8d AND
0xa8e JUMP
---
0xa75: JUMPDEST 
0xa76: V855 = 0xa8f
0xa79: V856 = 0x1
0xa7b: V857 = 0xa0
0xa7d: V858 = 0x2
0xa7f: V859 = EXP 0x2 0xa0
0xa80: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa82: V861 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xa85: V862 = 0xffffffff
0xa8a: V863 = 0xfab
0xa8d: V864 = AND 0xfab 0xffffffff
0xa8e: JUMP 0xfab
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xa8f, V861, S2, S1]
Exit stack: [V9, S5, S4, S3, S2, S1, S0, 0xa8f, V861, S2, S1]

================================

Block 0xa8f
[0xa8f:0xae3]
---
Predecessors: [0xdac]
Successors: [0x3b1]
---
0xa8f JUMPDEST
0xa90 DUP3
0xa91 PUSH1 0x1
0xa93 PUSH1 0xa0
0xa95 PUSH1 0x2
0xa97 EXP
0xa98 SUB
0xa99 AND
0xa9a DUP5
0xa9b PUSH1 0x1
0xa9d PUSH1 0xa0
0xa9f PUSH1 0x2
0xaa1 EXP
0xaa2 SUB
0xaa3 AND
0xaa4 PUSH32 0x49dc2a60d2599a7b6932d78fb694c30dfc596fe4e0282b5d0fd184b52472c04d
0xac5 DUP5
0xac6 PUSH1 0x40
0xac8 MLOAD
0xac9 DUP1
0xaca DUP3
0xacb DUP2
0xacc MSTORE
0xacd PUSH1 0x20
0xacf ADD
0xad0 SWAP2
0xad1 POP
0xad2 POP
0xad3 PUSH1 0x40
0xad5 MLOAD
0xad6 DUP1
0xad7 SWAP2
0xad8 SUB
0xad9 SWAP1
0xada LOG3
0xadb POP
0xadc PUSH1 0x1
0xade SWAP4
0xadf SWAP3
0xae0 POP
0xae1 POP
0xae2 POP
0xae3 JUMP
---
0xa8f: JUMPDEST 
0xa91: V865 = 0x1
0xa93: V866 = 0xa0
0xa95: V867 = 0x2
0xa97: V868 = EXP 0x2 0xa0
0xa98: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa99: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa9b: V871 = 0x1
0xa9d: V872 = 0xa0
0xa9f: V873 = 0x2
0xaa1: V874 = EXP 0x2 0xa0
0xaa2: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa3: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xaa4: V877 = 0x49dc2a60d2599a7b6932d78fb694c30dfc596fe4e0282b5d0fd184b52472c04d
0xac6: V878 = 0x40
0xac8: V879 = M[0x40]
0xacc: M[V879] = S1
0xacd: V880 = 0x20
0xacf: V881 = ADD 0x20 V879
0xad3: V882 = 0x40
0xad5: V883 = M[0x40]
0xad8: V884 = SUB V881 V883
0xada: LOG V883 V884 0x49dc2a60d2599a7b6932d78fb694c30dfc596fe4e0282b5d0fd184b52472c04d V876 V870
0xadc: V885 = 0x1
0xae3: JUMP 0x3b1
---
Entry stack: [V9, 0x3b1, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V9, 0x1]

================================

Block 0xae4
[0xae4:0xaf2]
---
Predecessors: [0x534]
Successors: [0x3da]
---
0xae4 JUMPDEST
0xae5 PUSH1 0x2
0xae7 SLOAD
0xae8 PUSH1 0x1
0xaea PUSH1 0xa0
0xaec PUSH1 0x2
0xaee EXP
0xaef SUB
0xaf0 AND
0xaf1 DUP2
0xaf2 JUMP
---
0xae4: JUMPDEST 
0xae5: V886 = 0x2
0xae7: V887 = S[0x2]
0xae8: V888 = 0x1
0xaea: V889 = 0xa0
0xaec: V890 = 0x2
0xaee: V891 = EXP 0x2 0xa0
0xaef: V892 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf0: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xaf2: JUMP 0x3da
---
Entry stack: [V9, 0x3da]
Stack pops: 1
Stack additions: [S0, V893]
Exit stack: [V9, 0x3da, V893]

================================

Block 0xaf3
[0xaf3:0xafa]
---
Predecessors: [0x560]
Successors: [0x8b2]
---
0xaf3 JUMPDEST
0xaf4 PUSH2 0xafb
0xaf7 PUSH2 0x8b2
0xafa JUMP
---
0xaf3: JUMPDEST 
0xaf4: V894 = 0xafb
0xaf7: V895 = 0x8b2
0xafa: JUMP 0x8b2
---
Entry stack: [V9, 0x2fc, V463]
Stack pops: 0
Stack additions: [0xafb]
Exit stack: [V9, 0x2fc, V463, 0xafb]

================================

Block 0xafb
[0xafb:0xb01]
---
Predecessors: [0x8b2]
Successors: [0xb02, 0xb06]
---
0xafb JUMPDEST
0xafc ISZERO
0xafd ISZERO
0xafe PUSH2 0xb06
0xb01 JUMPI
---
0xafb: JUMPDEST 
0xafc: V896 = ISZERO V737
0xafd: V897 = ISZERO V896
0xafe: V898 = 0xb06
0xb01: JUMPI 0xb06 V897
---
Entry stack: [V9, S6, S5, S4, S3, S2, S1, V737]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S6, S5, S4, S3, S2, S1]

================================

Block 0xb02
[0xb02:0xb05]
---
Predecessors: [0xafb]
Successors: []
---
0xb02 PUSH1 0x0
0xb04 DUP1
0xb05 REVERT
---
0xb02: V899 = 0x0
0xb05: REVERT 0x0 0x0
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1, S0]

================================

Block 0xb06
[0xb06:0xb0e]
---
Predecessors: [0xafb]
Successors: [0x10a2]
---
0xb06 JUMPDEST
0xb07 PUSH2 0xb0f
0xb0a DUP2
0xb0b PUSH2 0x10a2
0xb0e JUMP
---
0xb06: JUMPDEST 
0xb07: V900 = 0xb0f
0xb0b: V901 = 0x10a2
0xb0e: JUMP 0x10a2
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0xb0f, S0]
Exit stack: [V9, S5, S4, S3, S2, S1, S0, 0xb0f, S0]

================================

Block 0xb0f
[0xb0f:0xb11]
---
Predecessors: [0x10b7]
Successors: [0x2fc]
---
0xb0f JUMPDEST
0xb10 POP
0xb11 JUMP
---
0xb0f: JUMPDEST 
0xb11: JUMP S1
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2]

================================

Block 0xb12
[0xb12:0xb23]
---
Predecessors: [0x8d8]
Successors: [0x111f]
---
0xb12 JUMPDEST
0xb13 PUSH2 0xb24
0xb16 DUP4
0xb17 PUSH1 0x1
0xb19 PUSH1 0xa0
0xb1b PUSH1 0x2
0xb1d EXP
0xb1e SUB
0xb1f AND
0xb20 PUSH2 0x111f
0xb23 JUMP
---
0xb12: JUMPDEST 
0xb13: V902 = 0xb24
0xb17: V903 = 0x1
0xb19: V904 = 0xa0
0xb1b: V905 = 0x2
0xb1d: V906 = EXP 0x2 0xa0
0xb1e: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1f: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xb20: V909 = 0x111f
0xb23: JUMP 0x111f
---
Entry stack: [V9, S9, S8, S7, S6, S5, S4, 0x8f2, V751, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xb24, V908]
Exit stack: [V9, S9, S8, S7, S6, S5, S4, 0x8f2, V751, S1, S0, 0xb24, V908]

================================

Block 0xb24
[0xb24:0xb2a]
---
Predecessors: [0x111f]
Successors: [0xb2b, 0xb2f]
---
0xb24 JUMPDEST
0xb25 ISZERO
0xb26 ISZERO
0xb27 PUSH2 0xb2f
0xb2a JUMPI
---
0xb24: JUMPDEST 
0xb25: V910 = ISZERO V1326
0xb26: V911 = ISZERO V910
0xb27: V912 = 0xb2f
0xb2a: JUMPI 0xb2f V911
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1326]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xb2b
[0xb2b:0xb2e]
---
Predecessors: [0xb24]
Successors: []
---
0xb2b PUSH1 0x0
0xb2d DUP1
0xb2e REVERT
---
0xb2b: V913 = 0x0
0xb2e: REVERT 0x0 0x0
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb2f
[0xb2f:0xb36]
---
Predecessors: [0xb24]
Successors: [0xb37, 0xbce]
---
0xb2f JUMPDEST
0xb30 DUP1
0xb31 ISZERO
0xb32 DUP1
0xb33 PUSH2 0xbce
0xb36 JUMPI
---
0xb2f: JUMPDEST 
0xb31: V914 = ISZERO S0
0xb33: V915 = 0xbce
0xb36: JUMPI 0xbce V914
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V914]
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V914]

================================

Block 0xb37
[0xb37:0xb9b]
---
Predecessors: [0xb2f]
Successors: [0xb9c, 0xba0]
---
0xb37 POP
0xb38 PUSH1 0x40
0xb3a DUP1
0xb3b MLOAD
0xb3c PUSH32 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0xb5d DUP2
0xb5e MSTORE
0xb5f ADDRESS
0xb60 PUSH1 0x4
0xb62 DUP3
0xb63 ADD
0xb64 MSTORE
0xb65 PUSH1 0x1
0xb67 PUSH1 0xa0
0xb69 PUSH1 0x2
0xb6b EXP
0xb6c SUB
0xb6d DUP5
0xb6e DUP2
0xb6f AND
0xb70 PUSH1 0x24
0xb72 DUP4
0xb73 ADD
0xb74 MSTORE
0xb75 SWAP2
0xb76 MLOAD
0xb77 SWAP2
0xb78 DUP6
0xb79 AND
0xb7a SWAP2
0xb7b PUSH4 0xdd62ed3e
0xb80 SWAP2
0xb81 PUSH1 0x44
0xb83 DUP1
0xb84 DUP3
0xb85 ADD
0xb86 SWAP3
0xb87 PUSH1 0x20
0xb89 SWAP3
0xb8a SWAP1
0xb8b SWAP2
0xb8c SWAP1
0xb8d DUP3
0xb8e SWAP1
0xb8f SUB
0xb90 ADD
0xb91 DUP2
0xb92 DUP7
0xb93 DUP1
0xb94 EXTCODESIZE
0xb95 ISZERO
0xb96 DUP1
0xb97 ISZERO
0xb98 PUSH2 0xba0
0xb9b JUMPI
---
0xb38: V916 = 0x40
0xb3b: V917 = M[0x40]
0xb3c: V918 = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0xb5e: M[V917] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0xb5f: V919 = ADDRESS
0xb60: V920 = 0x4
0xb63: V921 = ADD V917 0x4
0xb64: M[V921] = V919
0xb65: V922 = 0x1
0xb67: V923 = 0xa0
0xb69: V924 = 0x2
0xb6b: V925 = EXP 0x2 0xa0
0xb6c: V926 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6f: V927 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xb70: V928 = 0x24
0xb73: V929 = ADD V917 0x24
0xb74: M[V929] = V927
0xb76: V930 = M[0x40]
0xb79: V931 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xb7b: V932 = 0xdd62ed3e
0xb81: V933 = 0x44
0xb85: V934 = ADD V917 0x44
0xb87: V935 = 0x20
0xb8f: V936 = SUB V917 V930
0xb90: V937 = ADD V936 0x44
0xb94: V938 = EXTCODESIZE V931
0xb95: V939 = ISZERO V938
0xb97: V940 = ISZERO V939
0xb98: V941 = 0xba0
0xb9b: JUMPI 0xba0 V940
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V914]
Stack pops: 4
Stack additions: [S3, S2, S1, V931, 0xdd62ed3e, V934, 0x20, V930, V937, V930, V931, V939]
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V931, 0xdd62ed3e, V934, 0x20, V930, V937, V930, V931, V939]

================================

Block 0xb9c
[0xb9c:0xb9f]
---
Predecessors: [0xb37]
Successors: []
---
0xb9c PUSH1 0x0
0xb9e DUP1
0xb9f REVERT
---
0xb9c: V942 = 0x0
0xb9f: REVERT 0x0 0x0
---
Entry stack: [V9, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V931, 0xdd62ed3e, V934, 0x20, V930, V937, V930, V931, V939]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V931, 0xdd62ed3e, V934, 0x20, V930, V937, V930, V931, V939]

================================

Block 0xba0
[0xba0:0xbaa]
---
Predecessors: [0xb37]
Successors: [0xbab, 0xbb4]
---
0xba0 JUMPDEST
0xba1 POP
0xba2 GAS
0xba3 STATICCALL
0xba4 ISZERO
0xba5 DUP1
0xba6 ISZERO
0xba7 PUSH2 0xbb4
0xbaa JUMPI
---
0xba0: JUMPDEST 
0xba2: V943 = GAS
0xba3: V944 = STATICCALL V943 V931 V930 V937 V930 0x20
0xba4: V945 = ISZERO V944
0xba6: V946 = ISZERO V945
0xba7: V947 = 0xbb4
0xbaa: JUMPI 0xbb4 V946
---
Entry stack: [V9, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V931, 0xdd62ed3e, V934, 0x20, V930, V937, V930, V931, V939]
Stack pops: 6
Stack additions: [V945]
Exit stack: [V9, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V931, 0xdd62ed3e, V934, V945]

================================

Block 0xbab
[0xbab:0xbb3]
---
Predecessors: [0xba0]
Successors: []
---
0xbab RETURNDATASIZE
0xbac PUSH1 0x0
0xbae DUP1
0xbaf RETURNDATACOPY
0xbb0 RETURNDATASIZE
0xbb1 PUSH1 0x0
0xbb3 REVERT
---
0xbab: V948 = RETURNDATASIZE
0xbac: V949 = 0x0
0xbaf: RETURNDATACOPY 0x0 0x0 V948
0xbb0: V950 = RETURNDATASIZE
0xbb1: V951 = 0x0
0xbb3: REVERT 0x0 V950
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V931, 0xdd62ed3e, V934, V945]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V931, 0xdd62ed3e, V934, V945]

================================

Block 0xbb4
[0xbb4:0xbc5]
---
Predecessors: [0xba0]
Successors: [0xbc6, 0xbca]
---
0xbb4 JUMPDEST
0xbb5 POP
0xbb6 POP
0xbb7 POP
0xbb8 POP
0xbb9 PUSH1 0x40
0xbbb MLOAD
0xbbc RETURNDATASIZE
0xbbd PUSH1 0x20
0xbbf DUP2
0xbc0 LT
0xbc1 ISZERO
0xbc2 PUSH2 0xbca
0xbc5 JUMPI
---
0xbb4: JUMPDEST 
0xbb9: V952 = 0x40
0xbbb: V953 = M[0x40]
0xbbc: V954 = RETURNDATASIZE
0xbbd: V955 = 0x20
0xbc0: V956 = LT V954 0x20
0xbc1: V957 = ISZERO V956
0xbc2: V958 = 0xbca
0xbc5: JUMPI 0xbca V957
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V931, 0xdd62ed3e, V934, V945]
Stack pops: 4
Stack additions: [V953, V954]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V953, V954]

================================

Block 0xbc6
[0xbc6:0xbc9]
---
Predecessors: [0xbb4]
Successors: []
---
0xbc6 PUSH1 0x0
0xbc8 DUP1
0xbc9 REVERT
---
0xbc6: V959 = 0x0
0xbc9: REVERT 0x0 0x0
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V953, V954]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V953, V954]

================================

Block 0xbca
[0xbca:0xbcd]
---
Predecessors: [0xbb4]
Successors: [0xbce]
---
0xbca JUMPDEST
0xbcb POP
0xbcc MLOAD
0xbcd ISZERO
---
0xbca: JUMPDEST 
0xbcc: V960 = M[V953]
0xbcd: V961 = ISZERO V960
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V953, V954]
Stack pops: 2
Stack additions: [V961]
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V961]

================================

Block 0xbce
[0xbce:0xbd4]
---
Predecessors: [0xb2f, 0xbca]
Successors: [0xbd5, 0xbd9]
---
0xbce JUMPDEST
0xbcf ISZERO
0xbd0 ISZERO
0xbd1 PUSH2 0xbd9
0xbd4 JUMPI
---
0xbce: JUMPDEST 
0xbcf: V962 = ISZERO S0
0xbd0: V963 = ISZERO V962
0xbd1: V964 = 0xbd9
0xbd4: JUMPI 0xbd9 V963
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xbd5
[0xbd5:0xbd8]
---
Predecessors: [0xbce]
Successors: []
---
0xbd5 PUSH1 0x0
0xbd7 DUP1
0xbd8 REVERT
---
0xbd5: V965 = 0x0
0xbd8: REVERT 0x0 0x0
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbd9
[0xbd9:0xc94]
---
Predecessors: [0xbce]
Successors: [0xc95]
---
0xbd9 JUMPDEST
0xbda PUSH1 0x40
0xbdc DUP1
0xbdd MLOAD
0xbde DUP1
0xbdf DUP3
0xbe0 ADD
0xbe1 DUP3
0xbe2 MSTORE
0xbe3 PUSH1 0x18
0xbe5 DUP2
0xbe6 MSTORE
0xbe7 PUSH32 0x617070726f766528616464726573732c75696e74323536290000000000000000
0xc08 PUSH1 0x20
0xc0a SWAP2
0xc0b DUP3
0xc0c ADD
0xc0d MSTORE
0xc0e DUP2
0xc0f MLOAD
0xc10 PUSH1 0x1
0xc12 PUSH1 0xa0
0xc14 PUSH1 0x2
0xc16 EXP
0xc17 SUB
0xc18 DUP6
0xc19 DUP2
0xc1a AND
0xc1b PUSH1 0x24
0xc1d DUP4
0xc1e ADD
0xc1f MSTORE
0xc20 PUSH1 0x44
0xc22 DUP1
0xc23 DUP4
0xc24 ADD
0xc25 DUP7
0xc26 SWAP1
0xc27 MSTORE
0xc28 DUP5
0xc29 MLOAD
0xc2a DUP1
0xc2b DUP5
0xc2c SUB
0xc2d SWAP1
0xc2e SWAP2
0xc2f ADD
0xc30 DUP2
0xc31 MSTORE
0xc32 PUSH1 0x64
0xc34 SWAP1
0xc35 SWAP3
0xc36 ADD
0xc37 DUP5
0xc38 MSTORE
0xc39 SWAP2
0xc3a DUP2
0xc3b ADD
0xc3c DUP1
0xc3d MLOAD
0xc3e PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc5b AND
0xc5c PUSH32 0x95ea7b300000000000000000000000000000000000000000000000000000000
0xc7d OR
0xc7e DUP2
0xc7f MSTORE
0xc80 SWAP3
0xc81 MLOAD
0xc82 DUP2
0xc83 MLOAD
0xc84 PUSH1 0x0
0xc86 SWAP5
0xc87 PUSH1 0x60
0xc89 SWAP5
0xc8a DUP10
0xc8b AND
0xc8c SWAP4
0xc8d SWAP3
0xc8e SWAP2
0xc8f DUP3
0xc90 SWAP2
0xc91 SWAP1
0xc92 DUP1
0xc93 DUP4
0xc94 DUP4
---
0xbd9: JUMPDEST 
0xbda: V966 = 0x40
0xbdd: V967 = M[0x40]
0xbe0: V968 = ADD 0x40 V967
0xbe2: M[0x40] = V968
0xbe3: V969 = 0x18
0xbe6: M[V967] = 0x18
0xbe7: V970 = 0x617070726f766528616464726573732c75696e74323536290000000000000000
0xc08: V971 = 0x20
0xc0c: V972 = ADD 0x20 V967
0xc0d: M[V972] = 0x617070726f766528616464726573732c75696e74323536290000000000000000
0xc0f: V973 = M[0x40]
0xc10: V974 = 0x1
0xc12: V975 = 0xa0
0xc14: V976 = 0x2
0xc16: V977 = EXP 0x2 0xa0
0xc17: V978 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1a: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xc1b: V980 = 0x24
0xc1e: V981 = ADD V973 0x24
0xc1f: M[V981] = V979
0xc20: V982 = 0x44
0xc24: V983 = ADD V973 0x44
0xc27: M[V983] = S0
0xc29: V984 = M[0x40]
0xc2c: V985 = SUB V973 V984
0xc2f: V986 = ADD 0x44 V985
0xc31: M[V984] = V986
0xc32: V987 = 0x64
0xc36: V988 = ADD V973 0x64
0xc38: M[0x40] = V988
0xc3b: V989 = ADD V984 0x20
0xc3d: V990 = M[V989]
0xc3e: V991 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc5b: V992 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff V990
0xc5c: V993 = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0xc7d: V994 = OR 0x95ea7b300000000000000000000000000000000000000000000000000000000 V992
0xc7f: M[V989] = V994
0xc81: V995 = M[0x40]
0xc83: V996 = M[V984]
0xc84: V997 = 0x0
0xc87: V998 = 0x60
0xc8b: V999 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x60, V999, V984, V995, V995, V989, V996, V996, V995, V989]
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x60, V999, V984, V995, V995, V989, V996, V996, V995, V989]

================================

Block 0xc95
[0xc95:0xc9d]
---
Predecessors: [0xbd9, 0xc9e, 0x108c]
Successors: [0xc9e, 0xcb4]
---
0xc95 JUMPDEST
0xc96 PUSH1 0x20
0xc98 DUP4
0xc99 LT
0xc9a PUSH2 0xcb4
0xc9d JUMPI
---
0xc95: JUMPDEST 
0xc96: V1000 = 0x20
0xc99: V1001 = LT S2 0x20
0xc9a: V1002 = 0xcb4
0xc9d: JUMPI 0xcb4 V1001
---
Entry stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc9e
[0xc9e:0xcb3]
---
Predecessors: [0xc95]
Successors: [0xc95]
---
0xc9e DUP1
0xc9f MLOAD
0xca0 DUP3
0xca1 MSTORE
0xca2 PUSH1 0x1f
0xca4 NOT
0xca5 SWAP1
0xca6 SWAP3
0xca7 ADD
0xca8 SWAP2
0xca9 PUSH1 0x20
0xcab SWAP2
0xcac DUP3
0xcad ADD
0xcae SWAP2
0xcaf ADD
0xcb0 PUSH2 0xc95
0xcb3 JUMP
---
0xc9f: V1003 = M[S0]
0xca1: M[S1] = V1003
0xca2: V1004 = 0x1f
0xca4: V1005 = NOT 0x1f
0xca7: V1006 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xca9: V1007 = 0x20
0xcad: V1008 = ADD 0x20 S1
0xcaf: V1009 = ADD 0x20 S0
0xcb0: V1010 = 0xc95
0xcb3: JUMP 0xc95
---
Entry stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V1006, V1008, V1009]
Exit stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, S7, S6, S5, S4, S3, V1006, V1008, V1009]

================================

Block 0xcb4
[0xcb4:0xcf4]
---
Predecessors: [0xc95, 0xfc8]
Successors: [0xcf5, 0xd16]
---
0xcb4 JUMPDEST
0xcb5 PUSH1 0x1
0xcb7 DUP4
0xcb8 PUSH1 0x20
0xcba SUB
0xcbb PUSH2 0x100
0xcbe EXP
0xcbf SUB
0xcc0 DUP1
0xcc1 NOT
0xcc2 DUP3
0xcc3 MLOAD
0xcc4 AND
0xcc5 DUP2
0xcc6 DUP5
0xcc7 MLOAD
0xcc8 AND
0xcc9 DUP1
0xcca DUP3
0xccb OR
0xccc DUP6
0xccd MSTORE
0xcce POP
0xccf POP
0xcd0 POP
0xcd1 POP
0xcd2 POP
0xcd3 POP
0xcd4 SWAP1
0xcd5 POP
0xcd6 ADD
0xcd7 SWAP2
0xcd8 POP
0xcd9 POP
0xcda PUSH1 0x0
0xcdc PUSH1 0x40
0xcde MLOAD
0xcdf DUP1
0xce0 DUP4
0xce1 SUB
0xce2 DUP2
0xce3 PUSH1 0x0
0xce5 DUP7
0xce6 GAS
0xce7 CALL
0xce8 SWAP2
0xce9 POP
0xcea POP
0xceb RETURNDATASIZE
0xcec DUP1
0xced PUSH1 0x0
0xcef DUP2
0xcf0 EQ
0xcf1 PUSH2 0xd16
0xcf4 JUMPI
---
0xcb4: JUMPDEST 
0xcb5: V1011 = 0x1
0xcb8: V1012 = 0x20
0xcba: V1013 = SUB 0x20 S2
0xcbb: V1014 = 0x100
0xcbe: V1015 = EXP 0x100 V1013
0xcbf: V1016 = SUB V1015 0x1
0xcc1: V1017 = NOT V1016
0xcc3: V1018 = M[S0]
0xcc4: V1019 = AND V1018 V1017
0xcc7: V1020 = M[S1]
0xcc8: V1021 = AND V1020 V1016
0xccb: V1022 = OR V1019 V1021
0xccd: M[S1] = V1022
0xcd6: V1023 = ADD S3 S5
0xcda: V1024 = 0x0
0xcdc: V1025 = 0x40
0xcde: V1026 = M[0x40]
0xce1: V1027 = SUB V1023 V1026
0xce3: V1028 = 0x0
0xce6: V1029 = GAS
0xce7: V1030 = CALL V1029 S8 0x0 V1026 V1027 V1026 0x0
0xceb: V1031 = RETURNDATASIZE
0xced: V1032 = 0x0
0xcf0: V1033 = EQ V1031 0x0
0xcf1: V1034 = 0xd16
0xcf4: JUMPI 0xd16 V1033
---
Entry stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [V1030, V1031, V1031]
Exit stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1030, V1031, V1031]

================================

Block 0xcf5
[0xcf5:0xd15]
---
Predecessors: [0xcb4]
Successors: [0xd1b]
---
0xcf5 PUSH1 0x40
0xcf7 MLOAD
0xcf8 SWAP2
0xcf9 POP
0xcfa PUSH1 0x1f
0xcfc NOT
0xcfd PUSH1 0x3f
0xcff RETURNDATASIZE
0xd00 ADD
0xd01 AND
0xd02 DUP3
0xd03 ADD
0xd04 PUSH1 0x40
0xd06 MSTORE
0xd07 RETURNDATASIZE
0xd08 DUP3
0xd09 MSTORE
0xd0a RETURNDATASIZE
0xd0b PUSH1 0x0
0xd0d PUSH1 0x20
0xd0f DUP5
0xd10 ADD
0xd11 RETURNDATACOPY
0xd12 PUSH2 0xd1b
0xd15 JUMP
---
0xcf5: V1035 = 0x40
0xcf7: V1036 = M[0x40]
0xcfa: V1037 = 0x1f
0xcfc: V1038 = NOT 0x1f
0xcfd: V1039 = 0x3f
0xcff: V1040 = RETURNDATASIZE
0xd00: V1041 = ADD V1040 0x3f
0xd01: V1042 = AND V1041 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xd03: V1043 = ADD V1036 V1042
0xd04: V1044 = 0x40
0xd06: M[0x40] = V1043
0xd07: V1045 = RETURNDATASIZE
0xd09: M[V1036] = V1045
0xd0a: V1046 = RETURNDATASIZE
0xd0b: V1047 = 0x0
0xd0d: V1048 = 0x20
0xd10: V1049 = ADD V1036 0x20
0xd11: RETURNDATACOPY V1049 0x0 V1046
0xd12: V1050 = 0xd1b
0xd15: JUMP 0xd1b
---
Entry stack: [V9, 0x3b1, S14, S13, S12, S11, S10, {0x0, 0x972}, S8, S7, S6, S5, 0x0, 0x60, V1030, V1031, V1031]
Stack pops: 2
Stack additions: [V1036, S0]
Exit stack: [V9, 0x3b1, S14, S13, S12, S11, S10, {0x0, 0x972}, S8, S7, S6, S5, 0x0, 0x60, V1030, V1036, V1031]

================================

Block 0xd16
[0xd16:0xd1a]
---
Predecessors: [0xcb4]
Successors: [0xd1b]
---
0xd16 JUMPDEST
0xd17 PUSH1 0x60
0xd19 SWAP2
0xd1a POP
---
0xd16: JUMPDEST 
0xd17: V1051 = 0x60
---
Entry stack: [V9, 0x3b1, S14, S13, S12, S11, S10, {0x0, 0x972}, S8, S7, S6, S5, 0x0, 0x60, V1030, V1031, V1031]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, 0x3b1, S14, S13, S12, S11, S10, {0x0, 0x972}, S8, S7, S6, S5, 0x0, 0x60, V1030, 0x60, V1031]

================================

Block 0xd1b
[0xd1b:0xd27]
---
Predecessors: [0xcf5, 0xd16]
Successors: [0xd28, 0xd2c]
---
0xd1b JUMPDEST
0xd1c POP
0xd1d SWAP2
0xd1e POP
0xd1f SWAP2
0xd20 POP
0xd21 DUP2
0xd22 ISZERO
0xd23 ISZERO
0xd24 PUSH2 0xd2c
0xd27 JUMPI
---
0xd1b: JUMPDEST 
0xd22: V1052 = ISZERO S2
0xd23: V1053 = ISZERO V1052
0xd24: V1054 = 0xd2c
0xd27: JUMPI 0xd2c V1053
---
Entry stack: [V9, 0x3b1, S14, S13, S12, S11, S10, {0x0, 0x972}, S8, S7, S6, S5, 0x0, 0x60, S2, S1, S0]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V9, 0x3b1, S14, S13, S12, S11, S10, {0x0, 0x972}, S8, S7, S6, S5, S2, S1]

================================

Block 0xd28
[0xd28:0xd2b]
---
Predecessors: [0xd1b]
Successors: []
---
0xd28 PUSH1 0x0
0xd2a DUP1
0xd2b REVERT
---
0xd28: V1055 = 0x0
0xd2b: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, S9, S8, S7, 0x0, {0x8f2, 0xa8f}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, S9, S8, S7, 0x0, {0x8f2, 0xa8f}, S4, S3, S2, S1, S0]

================================

Block 0xd2c
[0xd2c:0xd34]
---
Predecessors: [0xd1b]
Successors: [0xd35, 0xda1]
---
0xd2c JUMPDEST
0xd2d DUP1
0xd2e MLOAD
0xd2f ISZERO
0xd30 DUP1
0xd31 PUSH2 0xda1
0xd34 JUMPI
---
0xd2c: JUMPDEST 
0xd2e: V1056 = M[S0]
0xd2f: V1057 = ISZERO V1056
0xd31: V1058 = 0xda1
0xd34: JUMPI 0xda1 V1057
---
Entry stack: [V9, 0x3b1, S9, S8, S7, 0x0, {0x8f2, 0xa8f}, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V1057]
Exit stack: [V9, 0x3b1, S9, S8, S7, 0x0, {0x8f2, 0xa8f}, S4, S3, S2, S1, S0, V1057]

================================

Block 0xd35
[0xd35:0xd40]
---
Predecessors: [0xd2c]
Successors: [0xd41, 0xda1]
---
0xd35 POP
0xd36 DUP1
0xd37 MLOAD
0xd38 PUSH1 0x20
0xd3a EQ
0xd3b DUP1
0xd3c ISZERO
0xd3d PUSH2 0xda1
0xd40 JUMPI
---
0xd37: V1059 = M[S1]
0xd38: V1060 = 0x20
0xd3a: V1061 = EQ 0x20 V1059
0xd3c: V1062 = ISZERO V1061
0xd3d: V1063 = 0xda1
0xd40: JUMPI 0xda1 V1062
---
Entry stack: [V9, 0x3b1, S10, S9, S8, 0x0, {0x8f2, 0xa8f}, S5, S4, S3, S2, S1, V1057]
Stack pops: 2
Stack additions: [S1, V1061]
Exit stack: [V9, 0x3b1, S10, S9, S8, 0x0, {0x8f2, 0xa8f}, S5, S4, S3, S2, S1, V1061]

================================

Block 0xd41
[0xd41:0xd4e]
---
Predecessors: [0xd35]
Successors: [0xd4f, 0xd50]
---
0xd41 POP
0xd42 DUP1
0xd43 PUSH1 0x1f
0xd45 DUP2
0xd46 MLOAD
0xd47 DUP2
0xd48 LT
0xd49 ISZERO
0xd4a ISZERO
0xd4b PUSH2 0xd50
0xd4e JUMPI
---
0xd43: V1064 = 0x1f
0xd46: V1065 = M[S1]
0xd48: V1066 = LT 0x1f V1065
0xd49: V1067 = ISZERO V1066
0xd4a: V1068 = ISZERO V1067
0xd4b: V1069 = 0xd50
0xd4e: JUMPI 0xd50 V1068
---
Entry stack: [V9, 0x3b1, S10, S9, S8, 0x0, {0x8f2, 0xa8f}, S5, S4, S3, S2, S1, V1061]
Stack pops: 2
Stack additions: [S1, S1, 0x1f]
Exit stack: [V9, 0x3b1, S10, S9, S8, 0x0, {0x8f2, 0xa8f}, S5, S4, S3, S2, S1, S1, 0x1f]

================================

Block 0xd4f
[0xd4f:0xd4f]
---
Predecessors: [0xd41]
Successors: []
---
0xd4f INVALID
---
0xd4f: INVALID 
---
Entry stack: [V9, 0x3b1, S11, S10, S9, 0x0, {0x8f2, 0xa8f}, S6, S5, S4, S3, S2, S1, 0x1f]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, S11, S10, S9, 0x0, {0x8f2, 0xa8f}, S6, S5, S4, S3, S2, S1, 0x1f]

================================

Block 0xd50
[0xd50:0xda0]
---
Predecessors: [0xd41]
Successors: [0xda1]
---
0xd50 JUMPDEST
0xd51 PUSH1 0x20
0xd53 SWAP2
0xd54 ADD
0xd55 ADD
0xd56 MLOAD
0xd57 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xd78 SWAP1
0xd79 DUP2
0xd7a SWAP1
0xd7b DIV
0xd7c MUL
0xd7d PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0xd9e AND
0xd9f ISZERO
0xda0 ISZERO
---
0xd50: JUMPDEST 
0xd51: V1070 = 0x20
0xd54: V1071 = ADD S1 0x1f
0xd55: V1072 = ADD V1071 0x20
0xd56: V1073 = M[V1072]
0xd57: V1074 = 0x100000000000000000000000000000000000000000000000000000000000000
0xd7b: V1075 = DIV V1073 0x100000000000000000000000000000000000000000000000000000000000000
0xd7c: V1076 = MUL V1075 0x100000000000000000000000000000000000000000000000000000000000000
0xd7d: V1077 = 0xff00000000000000000000000000000000000000000000000000000000000000
0xd9e: V1078 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V1076
0xd9f: V1079 = ISZERO V1078
0xda0: V1080 = ISZERO V1079
---
Entry stack: [V9, 0x3b1, S11, S10, S9, 0x0, {0x8f2, 0xa8f}, S6, S5, S4, S3, S2, S1, 0x1f]
Stack pops: 2
Stack additions: [V1080]
Exit stack: [V9, 0x3b1, S11, S10, S9, 0x0, {0x8f2, 0xa8f}, S6, S5, S4, S3, S2, V1080]

================================

Block 0xda1
[0xda1:0xda7]
---
Predecessors: [0xd2c, 0xd35, 0xd50]
Successors: [0xda8, 0xdac]
---
0xda1 JUMPDEST
0xda2 ISZERO
0xda3 ISZERO
0xda4 PUSH2 0xdac
0xda7 JUMPI
---
0xda1: JUMPDEST 
0xda2: V1081 = ISZERO S0
0xda3: V1082 = ISZERO V1081
0xda4: V1083 = 0xdac
0xda7: JUMPI 0xdac V1082
---
Entry stack: [V9, 0x3b1, S10, S9, S8, 0x0, {0x8f2, 0xa8f}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x3b1, S10, S9, S8, 0x0, {0x8f2, 0xa8f}, S5, S4, S3, S2, S1]

================================

Block 0xda8
[0xda8:0xdab]
---
Predecessors: [0xda1]
Successors: []
---
0xda8 PUSH1 0x0
0xdaa DUP1
0xdab REVERT
---
0xda8: V1084 = 0x0
0xdab: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, S9, S8, S7, 0x0, {0x8f2, 0xa8f}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, S9, S8, S7, 0x0, {0x8f2, 0xa8f}, S4, S3, S2, S1, S0]

================================

Block 0xdac
[0xdac:0xdb2]
---
Predecessors: [0xda1]
Successors: [0x8f2, 0xa8f]
---
0xdac JUMPDEST
0xdad POP
0xdae POP
0xdaf POP
0xdb0 POP
0xdb1 POP
0xdb2 JUMP
---
0xdac: JUMPDEST 
0xdb2: JUMP {0x8f2, 0xa8f}
---
Entry stack: [V9, 0x3b1, S9, S8, S7, 0x0, {0x8f2, 0xa8f}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V9, 0x3b1, S9, S8, S7, 0x0]

================================

Block 0xdb3
[0xdb3:0xdc4]
---
Predecessors: [0x957]
Successors: [0x111f]
---
0xdb3 JUMPDEST
0xdb4 PUSH2 0xdc5
0xdb7 DUP5
0xdb8 PUSH1 0x1
0xdba PUSH1 0xa0
0xdbc PUSH1 0x2
0xdbe EXP
0xdbf SUB
0xdc0 AND
0xdc1 PUSH2 0x111f
0xdc4 JUMP
---
0xdb3: JUMPDEST 
0xdb4: V1085 = 0xdc5
0xdb8: V1086 = 0x1
0xdba: V1087 = 0xa0
0xdbc: V1088 = 0x2
0xdbe: V1089 = EXP 0x2 0xa0
0xdbf: V1090 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc0: V1091 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xdc1: V1092 = 0x111f
0xdc4: JUMP 0x111f
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, 0x972, V784, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xdc5, V1091]
Exit stack: [V9, S10, S9, S8, S7, S6, S5, 0x972, V784, S2, S1, S0, 0xdc5, V1091]

================================

Block 0xdc5
[0xdc5:0xdcb]
---
Predecessors: [0x111f]
Successors: [0xdcc, 0xdd0]
---
0xdc5 JUMPDEST
0xdc6 ISZERO
0xdc7 ISZERO
0xdc8 PUSH2 0xdd0
0xdcb JUMPI
---
0xdc5: JUMPDEST 
0xdc6: V1093 = ISZERO V1326
0xdc7: V1094 = ISZERO V1093
0xdc8: V1095 = 0xdd0
0xdcb: JUMPI 0xdd0 V1094
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1326]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xdcc
[0xdcc:0xdcf]
---
Predecessors: [0xdc5]
Successors: []
---
0xdcc PUSH1 0x0
0xdce DUP1
0xdcf REVERT
---
0xdcc: V1096 = 0x0
0xdcf: REVERT 0x0 0x0
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdd0
[0xdd0:0xe8b]
---
Predecessors: [0xdc5]
Successors: [0xe8c]
---
0xdd0 JUMPDEST
0xdd1 PUSH1 0x0
0xdd3 PUSH1 0x60
0xdd5 DUP6
0xdd6 PUSH1 0x1
0xdd8 PUSH1 0xa0
0xdda PUSH1 0x2
0xddc EXP
0xddd SUB
0xdde AND
0xddf PUSH1 0x60
0xde1 PUSH1 0x40
0xde3 MLOAD
0xde4 SWAP1
0xde5 DUP2
0xde6 ADD
0xde7 PUSH1 0x40
0xde9 MSTORE
0xdea DUP1
0xdeb PUSH1 0x25
0xded DUP2
0xdee MSTORE
0xdef PUSH1 0x20
0xdf1 ADD
0xdf2 PUSH2 0x1128
0xdf5 PUSH1 0x25
0xdf7 SWAP2
0xdf8 CODECOPY
0xdf9 DUP1
0xdfa MLOAD
0xdfb PUSH1 0x20
0xdfd SWAP2
0xdfe DUP3
0xdff ADD
0xe00 SHA3
0xe01 PUSH1 0x40
0xe03 DUP1
0xe04 MLOAD
0xe05 PUSH1 0x1
0xe07 PUSH1 0xa0
0xe09 PUSH1 0x2
0xe0b EXP
0xe0c SUB
0xe0d DUP1
0xe0e DUP12
0xe0f AND
0xe10 PUSH1 0x24
0xe12 DUP4
0xe13 ADD
0xe14 MSTORE
0xe15 DUP10
0xe16 AND
0xe17 PUSH1 0x44
0xe19 DUP3
0xe1a ADD
0xe1b MSTORE
0xe1c PUSH1 0x64
0xe1e DUP1
0xe1f DUP3
0xe20 ADD
0xe21 DUP10
0xe22 SWAP1
0xe23 MSTORE
0xe24 DUP3
0xe25 MLOAD
0xe26 DUP1
0xe27 DUP4
0xe28 SUB
0xe29 SWAP1
0xe2a SWAP2
0xe2b ADD
0xe2c DUP2
0xe2d MSTORE
0xe2e PUSH1 0x84
0xe30 SWAP1
0xe31 SWAP2
0xe32 ADD
0xe33 DUP3
0xe34 MSTORE
0xe35 SWAP3
0xe36 DUP4
0xe37 ADD
0xe38 DUP1
0xe39 MLOAD
0xe3a PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe57 AND
0xe58 PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000
0xe79 SWAP1
0xe7a SWAP4
0xe7b AND
0xe7c SWAP3
0xe7d SWAP1
0xe7e SWAP3
0xe7f OR
0xe80 DUP3
0xe81 MSTORE
0xe82 MLOAD
0xe83 DUP3
0xe84 MLOAD
0xe85 SWAP1
0xe86 SWAP2
0xe87 DUP3
0xe88 SWAP2
0xe89 DUP1
0xe8a DUP4
0xe8b DUP4
---
0xdd0: JUMPDEST 
0xdd1: V1097 = 0x0
0xdd3: V1098 = 0x60
0xdd6: V1099 = 0x1
0xdd8: V1100 = 0xa0
0xdda: V1101 = 0x2
0xddc: V1102 = EXP 0x2 0xa0
0xddd: V1103 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdde: V1104 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xddf: V1105 = 0x60
0xde1: V1106 = 0x40
0xde3: V1107 = M[0x40]
0xde6: V1108 = ADD V1107 0x60
0xde7: V1109 = 0x40
0xde9: M[0x40] = V1108
0xdeb: V1110 = 0x25
0xdee: M[V1107] = 0x25
0xdef: V1111 = 0x20
0xdf1: V1112 = ADD 0x20 V1107
0xdf2: V1113 = 0x1128
0xdf5: V1114 = 0x25
0xdf8: CODECOPY V1112 0x1128 0x25
0xdfa: V1115 = M[V1107]
0xdfb: V1116 = 0x20
0xdff: V1117 = ADD 0x20 V1107
0xe00: V1118 = SHA3 V1117 V1115
0xe01: V1119 = 0x40
0xe04: V1120 = M[0x40]
0xe05: V1121 = 0x1
0xe07: V1122 = 0xa0
0xe09: V1123 = 0x2
0xe0b: V1124 = EXP 0x2 0xa0
0xe0c: V1125 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0f: V1126 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xe10: V1127 = 0x24
0xe13: V1128 = ADD V1120 0x24
0xe14: M[V1128] = V1126
0xe16: V1129 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xe17: V1130 = 0x44
0xe1a: V1131 = ADD V1120 0x44
0xe1b: M[V1131] = V1129
0xe1c: V1132 = 0x64
0xe20: V1133 = ADD V1120 0x64
0xe23: M[V1133] = S0
0xe25: V1134 = M[0x40]
0xe28: V1135 = SUB V1120 V1134
0xe2b: V1136 = ADD 0x64 V1135
0xe2d: M[V1134] = V1136
0xe2e: V1137 = 0x84
0xe32: V1138 = ADD V1120 0x84
0xe34: M[0x40] = V1138
0xe37: V1139 = ADD V1134 0x20
0xe39: V1140 = M[V1139]
0xe3a: V1141 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe57: V1142 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1140
0xe58: V1143 = 0xffffffff00000000000000000000000000000000000000000000000000000000
0xe7b: V1144 = AND V1118 0xffffffff00000000000000000000000000000000000000000000000000000000
0xe7f: V1145 = OR V1144 V1142
0xe81: M[V1139] = V1145
0xe82: V1146 = M[0x40]
0xe84: V1147 = M[V1134]
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x60, V1104, V1134, V1146, V1146, V1139, V1147, V1147, V1146, V1139]
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x60, V1104, V1134, V1146, V1146, V1139, V1147, V1147, V1146, V1139]

================================

Block 0xe8c
[0xe8c:0xe94]
---
Predecessors: [0xdd0, 0xe95]
Successors: [0xe95, 0xeab]
---
0xe8c JUMPDEST
0xe8d PUSH1 0x20
0xe8f DUP4
0xe90 LT
0xe91 PUSH2 0xeab
0xe94 JUMPI
---
0xe8c: JUMPDEST 
0xe8d: V1148 = 0x20
0xe90: V1149 = LT S2 0x20
0xe91: V1150 = 0xeab
0xe94: JUMPI 0xeab V1149
---
Entry stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1104, V1134, V1146, V1146, V1139, V1147, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1104, V1134, V1146, V1146, V1139, V1147, S2, S1, S0]

================================

Block 0xe95
[0xe95:0xeaa]
---
Predecessors: [0xe8c]
Successors: [0xe8c]
---
0xe95 DUP1
0xe96 MLOAD
0xe97 DUP3
0xe98 MSTORE
0xe99 PUSH1 0x1f
0xe9b NOT
0xe9c SWAP1
0xe9d SWAP3
0xe9e ADD
0xe9f SWAP2
0xea0 PUSH1 0x20
0xea2 SWAP2
0xea3 DUP3
0xea4 ADD
0xea5 SWAP2
0xea6 ADD
0xea7 PUSH2 0xe8c
0xeaa JUMP
---
0xe96: V1151 = M[S0]
0xe98: M[S1] = V1151
0xe99: V1152 = 0x1f
0xe9b: V1153 = NOT 0x1f
0xe9e: V1154 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xea0: V1155 = 0x20
0xea4: V1156 = ADD 0x20 S1
0xea6: V1157 = ADD 0x20 S0
0xea7: V1158 = 0xe8c
0xeaa: JUMP 0xe8c
---
Entry stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1104, V1134, V1146, V1146, V1139, V1147, S2, S1, S0]
Stack pops: 3
Stack additions: [V1154, V1156, V1157]
Exit stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1104, V1134, V1146, V1146, V1139, V1147, V1154, V1156, V1157]

================================

Block 0xeab
[0xeab:0xeeb]
---
Predecessors: [0xe8c]
Successors: [0xeec, 0xf0d]
---
0xeab JUMPDEST
0xeac PUSH1 0x1
0xeae DUP4
0xeaf PUSH1 0x20
0xeb1 SUB
0xeb2 PUSH2 0x100
0xeb5 EXP
0xeb6 SUB
0xeb7 DUP1
0xeb8 NOT
0xeb9 DUP3
0xeba MLOAD
0xebb AND
0xebc DUP2
0xebd DUP5
0xebe MLOAD
0xebf AND
0xec0 DUP1
0xec1 DUP3
0xec2 OR
0xec3 DUP6
0xec4 MSTORE
0xec5 POP
0xec6 POP
0xec7 POP
0xec8 POP
0xec9 POP
0xeca POP
0xecb SWAP1
0xecc POP
0xecd ADD
0xece SWAP2
0xecf POP
0xed0 POP
0xed1 PUSH1 0x0
0xed3 PUSH1 0x40
0xed5 MLOAD
0xed6 DUP1
0xed7 DUP4
0xed8 SUB
0xed9 DUP2
0xeda PUSH1 0x0
0xedc DUP7
0xedd GAS
0xede CALL
0xedf SWAP2
0xee0 POP
0xee1 POP
0xee2 RETURNDATASIZE
0xee3 DUP1
0xee4 PUSH1 0x0
0xee6 DUP2
0xee7 EQ
0xee8 PUSH2 0xf0d
0xeeb JUMPI
---
0xeab: JUMPDEST 
0xeac: V1159 = 0x1
0xeaf: V1160 = 0x20
0xeb1: V1161 = SUB 0x20 S2
0xeb2: V1162 = 0x100
0xeb5: V1163 = EXP 0x100 V1161
0xeb6: V1164 = SUB V1163 0x1
0xeb8: V1165 = NOT V1164
0xeba: V1166 = M[S0]
0xebb: V1167 = AND V1166 V1165
0xebe: V1168 = M[S1]
0xebf: V1169 = AND V1168 V1164
0xec2: V1170 = OR V1167 V1169
0xec4: M[S1] = V1170
0xecd: V1171 = ADD V1147 V1146
0xed1: V1172 = 0x0
0xed3: V1173 = 0x40
0xed5: V1174 = M[0x40]
0xed8: V1175 = SUB V1171 V1174
0xeda: V1176 = 0x0
0xedd: V1177 = GAS
0xede: V1178 = CALL V1177 V1104 0x0 V1174 V1175 V1174 0x0
0xee2: V1179 = RETURNDATASIZE
0xee4: V1180 = 0x0
0xee7: V1181 = EQ V1179 0x0
0xee8: V1182 = 0xf0d
0xeeb: JUMPI 0xf0d V1181
---
Entry stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1104, V1134, V1146, V1146, V1139, V1147, S2, S1, S0]
Stack pops: 9
Stack additions: [V1178, V1179, V1179]
Exit stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1178, V1179, V1179]

================================

Block 0xeec
[0xeec:0xf0c]
---
Predecessors: [0xeab]
Successors: [0xf12]
---
0xeec PUSH1 0x40
0xeee MLOAD
0xeef SWAP2
0xef0 POP
0xef1 PUSH1 0x1f
0xef3 NOT
0xef4 PUSH1 0x3f
0xef6 RETURNDATASIZE
0xef7 ADD
0xef8 AND
0xef9 DUP3
0xefa ADD
0xefb PUSH1 0x40
0xefd MSTORE
0xefe RETURNDATASIZE
0xeff DUP3
0xf00 MSTORE
0xf01 RETURNDATASIZE
0xf02 PUSH1 0x0
0xf04 PUSH1 0x20
0xf06 DUP5
0xf07 ADD
0xf08 RETURNDATACOPY
0xf09 PUSH2 0xf12
0xf0c JUMP
---
0xeec: V1183 = 0x40
0xeee: V1184 = M[0x40]
0xef1: V1185 = 0x1f
0xef3: V1186 = NOT 0x1f
0xef4: V1187 = 0x3f
0xef6: V1188 = RETURNDATASIZE
0xef7: V1189 = ADD V1188 0x3f
0xef8: V1190 = AND V1189 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xefa: V1191 = ADD V1184 V1190
0xefb: V1192 = 0x40
0xefd: M[0x40] = V1191
0xefe: V1193 = RETURNDATASIZE
0xf00: M[V1184] = V1193
0xf01: V1194 = RETURNDATASIZE
0xf02: V1195 = 0x0
0xf04: V1196 = 0x20
0xf07: V1197 = ADD V1184 0x20
0xf08: RETURNDATACOPY V1197 0x0 V1194
0xf09: V1198 = 0xf12
0xf0c: JUMP 0xf12
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x60, V1178, V1179, V1179]
Stack pops: 2
Stack additions: [V1184, S0]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x60, V1178, V1184, V1179]

================================

Block 0xf0d
[0xf0d:0xf11]
---
Predecessors: [0xeab]
Successors: [0xf12]
---
0xf0d JUMPDEST
0xf0e PUSH1 0x60
0xf10 SWAP2
0xf11 POP
---
0xf0d: JUMPDEST 
0xf0e: V1199 = 0x60
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x60, V1178, V1179, V1179]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x60, V1178, 0x60, V1179]

================================

Block 0xf12
[0xf12:0xf1e]
---
Predecessors: [0xeec, 0xf0d]
Successors: [0xf1f, 0xf23]
---
0xf12 JUMPDEST
0xf13 POP
0xf14 SWAP2
0xf15 POP
0xf16 SWAP2
0xf17 POP
0xf18 DUP2
0xf19 ISZERO
0xf1a ISZERO
0xf1b PUSH2 0xf23
0xf1e JUMPI
---
0xf12: JUMPDEST 
0xf19: V1200 = ISZERO V1178
0xf1a: V1201 = ISZERO V1200
0xf1b: V1202 = 0xf23
0xf1e: JUMPI 0xf23 V1201
---
Entry stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x60, V1178, S1, V1179]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V9, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1178, S1]

================================

Block 0xf1f
[0xf1f:0xf22]
---
Predecessors: [0xf12]
Successors: []
---
0xf1f PUSH1 0x0
0xf21 DUP1
0xf22 REVERT
---
0xf1f: V1203 = 0x0
0xf22: REVERT 0x0 0x0
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1178, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1178, S0]

================================

Block 0xf23
[0xf23:0xf2b]
---
Predecessors: [0xf12]
Successors: [0xf2c, 0xf98]
---
0xf23 JUMPDEST
0xf24 DUP1
0xf25 MLOAD
0xf26 ISZERO
0xf27 DUP1
0xf28 PUSH2 0xf98
0xf2b JUMPI
---
0xf23: JUMPDEST 
0xf25: V1204 = M[S0]
0xf26: V1205 = ISZERO V1204
0xf28: V1206 = 0xf98
0xf2b: JUMPI 0xf98 V1205
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1178, S0]
Stack pops: 1
Stack additions: [S0, V1205]
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1178, S0, V1205]

================================

Block 0xf2c
[0xf2c:0xf37]
---
Predecessors: [0xf23]
Successors: [0xf38, 0xf98]
---
0xf2c POP
0xf2d DUP1
0xf2e MLOAD
0xf2f PUSH1 0x20
0xf31 EQ
0xf32 DUP1
0xf33 ISZERO
0xf34 PUSH2 0xf98
0xf37 JUMPI
---
0xf2e: V1207 = M[S1]
0xf2f: V1208 = 0x20
0xf31: V1209 = EQ 0x20 V1207
0xf33: V1210 = ISZERO V1209
0xf34: V1211 = 0xf98
0xf37: JUMPI 0xf98 V1210
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1178, S1, V1205]
Stack pops: 2
Stack additions: [S1, V1209]
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1178, S1, V1209]

================================

Block 0xf38
[0xf38:0xf45]
---
Predecessors: [0xf2c]
Successors: [0xf46, 0xf47]
---
0xf38 POP
0xf39 DUP1
0xf3a PUSH1 0x1f
0xf3c DUP2
0xf3d MLOAD
0xf3e DUP2
0xf3f LT
0xf40 ISZERO
0xf41 ISZERO
0xf42 PUSH2 0xf47
0xf45 JUMPI
---
0xf3a: V1212 = 0x1f
0xf3d: V1213 = M[S1]
0xf3f: V1214 = LT 0x1f V1213
0xf40: V1215 = ISZERO V1214
0xf41: V1216 = ISZERO V1215
0xf42: V1217 = 0xf47
0xf45: JUMPI 0xf47 V1216
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1178, S1, V1209]
Stack pops: 2
Stack additions: [S1, S1, 0x1f]
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1178, S1, S1, 0x1f]

================================

Block 0xf46
[0xf46:0xf46]
---
Predecessors: [0xf38]
Successors: []
---
0xf46 INVALID
---
0xf46: INVALID 
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1178, S2, S1, 0x1f]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1178, S2, S1, 0x1f]

================================

Block 0xf47
[0xf47:0xf97]
---
Predecessors: [0xf38]
Successors: [0xf98]
---
0xf47 JUMPDEST
0xf48 PUSH1 0x20
0xf4a SWAP2
0xf4b ADD
0xf4c ADD
0xf4d MLOAD
0xf4e PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xf6f SWAP1
0xf70 DUP2
0xf71 SWAP1
0xf72 DIV
0xf73 MUL
0xf74 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0xf95 AND
0xf96 ISZERO
0xf97 ISZERO
---
0xf47: JUMPDEST 
0xf48: V1218 = 0x20
0xf4b: V1219 = ADD S1 0x1f
0xf4c: V1220 = ADD V1219 0x20
0xf4d: V1221 = M[V1220]
0xf4e: V1222 = 0x100000000000000000000000000000000000000000000000000000000000000
0xf72: V1223 = DIV V1221 0x100000000000000000000000000000000000000000000000000000000000000
0xf73: V1224 = MUL V1223 0x100000000000000000000000000000000000000000000000000000000000000
0xf74: V1225 = 0xff00000000000000000000000000000000000000000000000000000000000000
0xf95: V1226 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V1224
0xf96: V1227 = ISZERO V1226
0xf97: V1228 = ISZERO V1227
---
Entry stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1178, S2, S1, 0x1f]
Stack pops: 2
Stack additions: [V1228]
Exit stack: [V9, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1178, S2, V1228]

================================

Block 0xf98
[0xf98:0xf9e]
---
Predecessors: [0xf23, 0xf2c, 0xf47]
Successors: [0xf9f, 0xfa3]
---
0xf98 JUMPDEST
0xf99 ISZERO
0xf9a ISZERO
0xf9b PUSH2 0xfa3
0xf9e JUMPI
---
0xf98: JUMPDEST 
0xf99: V1229 = ISZERO S0
0xf9a: V1230 = ISZERO V1229
0xf9b: V1231 = 0xfa3
0xf9e: JUMPI 0xfa3 V1230
---
Entry stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1178, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1178, S1]

================================

Block 0xf9f
[0xf9f:0xfa2]
---
Predecessors: [0xf98]
Successors: []
---
0xf9f PUSH1 0x0
0xfa1 DUP1
0xfa2 REVERT
---
0xf9f: V1232 = 0x0
0xfa2: REVERT 0x0 0x0
---
Entry stack: [V9, 0x3b1, S11, S10, S9, S8, S7, {0x0, 0x972}, S5, S4, S3, S2, V1178, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x3b1, S11, S10, S9, S8, S7, {0x0, 0x972}, S5, S4, S3, S2, V1178, S0]

================================

Block 0xfa3
[0xfa3:0xfaa]
---
Predecessors: [0xf98]
Successors: [0x972]
---
0xfa3 JUMPDEST
0xfa4 POP
0xfa5 POP
0xfa6 POP
0xfa7 POP
0xfa8 POP
0xfa9 POP
0xfaa JUMP
---
0xfa3: JUMPDEST 
0xfaa: JUMP {0x0, 0x972}
---
Entry stack: [V9, 0x3b1, S11, S10, S9, S8, S7, {0x0, 0x972}, S5, S4, S3, S2, V1178, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V9, 0x3b1, S11, S10, S9, S8, S7]

================================

Block 0xfab
[0xfab:0xfbc]
---
Predecessors: [0xa75]
Successors: [0x111f]
---
0xfab JUMPDEST
0xfac PUSH2 0xfbd
0xfaf DUP4
0xfb0 PUSH1 0x1
0xfb2 PUSH1 0xa0
0xfb4 PUSH1 0x2
0xfb6 EXP
0xfb7 SUB
0xfb8 AND
0xfb9 PUSH2 0x111f
0xfbc JUMP
---
0xfab: JUMPDEST 
0xfac: V1233 = 0xfbd
0xfb0: V1234 = 0x1
0xfb2: V1235 = 0xa0
0xfb4: V1236 = 0x2
0xfb6: V1237 = EXP 0x2 0xa0
0xfb7: V1238 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb8: V1239 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0xfb9: V1240 = 0x111f
0xfbc: JUMP 0x111f
---
Entry stack: [V9, S9, S8, S7, S6, S5, S4, 0xa8f, V861, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xfbd, V1239]
Exit stack: [V9, S9, S8, S7, S6, S5, S4, 0xa8f, V861, S1, S0, 0xfbd, V1239]

================================

Block 0xfbd
[0xfbd:0xfc3]
---
Predecessors: [0x111f]
Successors: [0xfc4, 0xfc8]
---
0xfbd JUMPDEST
0xfbe ISZERO
0xfbf ISZERO
0xfc0 PUSH2 0xfc8
0xfc3 JUMPI
---
0xfbd: JUMPDEST 
0xfbe: V1241 = ISZERO V1326
0xfbf: V1242 = ISZERO V1241
0xfc0: V1243 = 0xfc8
0xfc3: JUMPI 0xfc8 V1242
---
Entry stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1326]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xfc4
[0xfc4:0xfc7]
---
Predecessors: [0xfbd]
Successors: []
---
0xfc4 PUSH1 0x0
0xfc6 DUP1
0xfc7 REVERT
---
0xfc4: V1244 = 0x0
0xfc7: REVERT 0x0 0x0
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfc8
[0xfc8:0x108b]
---
Predecessors: [0xfbd]
Successors: [0xcb4, 0x108c]
---
0xfc8 JUMPDEST
0xfc9 PUSH1 0x40
0xfcb DUP1
0xfcc MLOAD
0xfcd DUP1
0xfce DUP3
0xfcf ADD
0xfd0 DUP3
0xfd1 MSTORE
0xfd2 PUSH1 0x19
0xfd4 DUP2
0xfd5 MSTORE
0xfd6 PUSH32 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0xff7 PUSH1 0x20
0xff9 SWAP2
0xffa DUP3
0xffb ADD
0xffc MSTORE
0xffd DUP2
0xffe MLOAD
0xfff PUSH1 0x1
0x1001 PUSH1 0xa0
0x1003 PUSH1 0x2
0x1005 EXP
0x1006 SUB
0x1007 DUP6
0x1008 DUP2
0x1009 AND
0x100a PUSH1 0x24
0x100c DUP4
0x100d ADD
0x100e MSTORE
0x100f PUSH1 0x44
0x1011 DUP1
0x1012 DUP4
0x1013 ADD
0x1014 DUP7
0x1015 SWAP1
0x1016 MSTORE
0x1017 DUP5
0x1018 MLOAD
0x1019 DUP1
0x101a DUP5
0x101b SUB
0x101c SWAP1
0x101d SWAP2
0x101e ADD
0x101f DUP2
0x1020 MSTORE
0x1021 PUSH1 0x64
0x1023 SWAP1
0x1024 SWAP3
0x1025 ADD
0x1026 DUP5
0x1027 MSTORE
0x1028 SWAP2
0x1029 DUP2
0x102a ADD
0x102b DUP1
0x102c MLOAD
0x102d PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x104a AND
0x104b PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x106c OR
0x106d DUP2
0x106e MSTORE
0x106f SWAP3
0x1070 MLOAD
0x1071 DUP2
0x1072 MLOAD
0x1073 PUSH1 0x0
0x1075 SWAP5
0x1076 PUSH1 0x60
0x1078 SWAP5
0x1079 DUP10
0x107a AND
0x107b SWAP4
0x107c SWAP3
0x107d SWAP2
0x107e DUP3
0x107f SWAP2
0x1080 SWAP1
0x1081 DUP1
0x1082 DUP4
0x1083 DUP4
0x1084 PUSH1 0x20
0x1086 DUP4
0x1087 LT
0x1088 PUSH2 0xcb4
0x108b JUMPI
---
0xfc8: JUMPDEST 
0xfc9: V1245 = 0x40
0xfcc: V1246 = M[0x40]
0xfcf: V1247 = ADD 0x40 V1246
0xfd1: M[0x40] = V1247
0xfd2: V1248 = 0x19
0xfd5: M[V1246] = 0x19
0xfd6: V1249 = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0xff7: V1250 = 0x20
0xffb: V1251 = ADD 0x20 V1246
0xffc: M[V1251] = 0x7472616e7366657228616464726573732c75696e743235362900000000000000
0xffe: V1252 = M[0x40]
0xfff: V1253 = 0x1
0x1001: V1254 = 0xa0
0x1003: V1255 = 0x2
0x1005: V1256 = EXP 0x2 0xa0
0x1006: V1257 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1009: V1258 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x100a: V1259 = 0x24
0x100d: V1260 = ADD V1252 0x24
0x100e: M[V1260] = V1258
0x100f: V1261 = 0x44
0x1013: V1262 = ADD V1252 0x44
0x1016: M[V1262] = S0
0x1018: V1263 = M[0x40]
0x101b: V1264 = SUB V1252 V1263
0x101e: V1265 = ADD 0x44 V1264
0x1020: M[V1263] = V1265
0x1021: V1266 = 0x64
0x1025: V1267 = ADD V1252 0x64
0x1027: M[0x40] = V1267
0x102a: V1268 = ADD V1263 0x20
0x102c: V1269 = M[V1268]
0x102d: V1270 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x104a: V1271 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1269
0x104b: V1272 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x106c: V1273 = OR 0xa9059cbb00000000000000000000000000000000000000000000000000000000 V1271
0x106e: M[V1268] = V1273
0x1070: V1274 = M[0x40]
0x1072: V1275 = M[V1263]
0x1073: V1276 = 0x0
0x1076: V1277 = 0x60
0x107a: V1278 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x1084: V1279 = 0x20
0x1087: V1280 = LT V1275 0x20
0x1088: V1281 = 0xcb4
0x108b: JUMPI 0xcb4 V1280
---
Entry stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x60, V1278, V1263, V1274, V1274, V1268, V1275, V1275, V1274, V1268]
Exit stack: [V9, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x60, V1278, V1263, V1274, V1274, V1268, V1275, V1275, V1274, V1268]

================================

Block 0x108c
[0x108c:0x10a1]
---
Predecessors: [0xfc8]
Successors: [0xc95]
---
0x108c DUP1
0x108d MLOAD
0x108e DUP3
0x108f MSTORE
0x1090 PUSH1 0x1f
0x1092 NOT
0x1093 SWAP1
0x1094 SWAP3
0x1095 ADD
0x1096 SWAP2
0x1097 PUSH1 0x20
0x1099 SWAP2
0x109a DUP3
0x109b ADD
0x109c SWAP2
0x109d ADD
0x109e PUSH2 0xc95
0x10a1 JUMP
---
0x108d: V1282 = M[V1268]
0x108f: M[V1274] = V1282
0x1090: V1283 = 0x1f
0x1092: V1284 = NOT 0x1f
0x1095: V1285 = ADD V1275 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1097: V1286 = 0x20
0x109b: V1287 = ADD 0x20 V1274
0x109d: V1288 = ADD 0x20 V1268
0x109e: V1289 = 0xc95
0x10a1: JUMP 0xc95
---
Entry stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1278, V1263, V1274, V1274, V1268, V1275, V1275, V1274, V1268]
Stack pops: 3
Stack additions: [V1285, V1287, V1288]
Exit stack: [V9, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x60, V1278, V1263, V1274, V1274, V1268, V1275, V1285, V1287, V1288]

================================

Block 0x10a2
[0x10a2:0x10b2]
---
Predecessors: [0xb06]
Successors: [0x10b3, 0x10b7]
---
0x10a2 JUMPDEST
0x10a3 PUSH1 0x1
0x10a5 PUSH1 0xa0
0x10a7 PUSH1 0x2
0x10a9 EXP
0x10aa SUB
0x10ab DUP2
0x10ac AND
0x10ad ISZERO
0x10ae ISZERO
0x10af PUSH2 0x10b7
0x10b2 JUMPI
---
0x10a2: JUMPDEST 
0x10a3: V1290 = 0x1
0x10a5: V1291 = 0xa0
0x10a7: V1292 = 0x2
0x10a9: V1293 = EXP 0x2 0xa0
0x10aa: V1294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10ac: V1295 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10ad: V1296 = ISZERO V1295
0x10ae: V1297 = ISZERO V1296
0x10af: V1298 = 0x10b7
0x10b2: JUMPI 0x10b7 V1297
---
Entry stack: [V9, S7, S6, S5, S4, S3, S2, 0xb0f, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, S7, S6, S5, S4, S3, S2, 0xb0f, S0]

================================

Block 0x10b3
[0x10b3:0x10b6]
---
Predecessors: [0x10a2]
Successors: []
---
0x10b3 PUSH1 0x0
0x10b5 DUP1
0x10b6 REVERT
---
0x10b3: V1299 = 0x0
0x10b6: REVERT 0x0 0x0
---
Entry stack: [V9, S7, S6, S5, S4, S3, S2, 0xb0f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S7, S6, S5, S4, S3, S2, 0xb0f, S0]

================================

Block 0x10b7
[0x10b7:0x111e]
---
Predecessors: [0x10a2]
Successors: [0xb0f]
---
0x10b7 JUMPDEST
0x10b8 PUSH1 0x0
0x10ba DUP1
0x10bb SLOAD
0x10bc PUSH1 0x40
0x10be MLOAD
0x10bf PUSH1 0x1
0x10c1 PUSH1 0xa0
0x10c3 PUSH1 0x2
0x10c5 EXP
0x10c6 SUB
0x10c7 DUP1
0x10c8 DUP6
0x10c9 AND
0x10ca SWAP4
0x10cb SWAP3
0x10cc AND
0x10cd SWAP2
0x10ce PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x10ef SWAP2
0x10f0 LOG3
0x10f1 PUSH1 0x0
0x10f3 DUP1
0x10f4 SLOAD
0x10f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x110a NOT
0x110b AND
0x110c PUSH1 0x1
0x110e PUSH1 0xa0
0x1110 PUSH1 0x2
0x1112 EXP
0x1113 SUB
0x1114 SWAP3
0x1115 SWAP1
0x1116 SWAP3
0x1117 AND
0x1118 SWAP2
0x1119 SWAP1
0x111a SWAP2
0x111b OR
0x111c SWAP1
0x111d SSTORE
0x111e JUMP
---
0x10b7: JUMPDEST 
0x10b8: V1300 = 0x0
0x10bb: V1301 = S[0x0]
0x10bc: V1302 = 0x40
0x10be: V1303 = M[0x40]
0x10bf: V1304 = 0x1
0x10c1: V1305 = 0xa0
0x10c3: V1306 = 0x2
0x10c5: V1307 = EXP 0x2 0xa0
0x10c6: V1308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c9: V1309 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10cc: V1310 = AND V1301 0xffffffffffffffffffffffffffffffffffffffff
0x10ce: V1311 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x10f0: LOG V1303 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1310 V1309
0x10f1: V1312 = 0x0
0x10f4: V1313 = S[0x0]
0x10f5: V1314 = 0xffffffffffffffffffffffffffffffffffffffff
0x110a: V1315 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x110b: V1316 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1313
0x110c: V1317 = 0x1
0x110e: V1318 = 0xa0
0x1110: V1319 = 0x2
0x1112: V1320 = EXP 0x2 0xa0
0x1113: V1321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1117: V1322 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x111b: V1323 = OR V1322 V1316
0x111d: S[0x0] = V1323
0x111e: JUMP 0xb0f
---
Entry stack: [V9, S7, S6, S5, S4, S3, S2, 0xb0f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V9, S7, S6, S5, S4, S3, S2]

================================

Block 0x111f
[0x111f:0x1126]
---
Predecessors: [0xb12, 0xdb3, 0xfab]
Successors: [0xb24, 0xdc5, 0xfbd]
---
0x111f JUMPDEST
0x1120 PUSH1 0x0
0x1122 SWAP1
0x1123 EXTCODESIZE
0x1124 GT
0x1125 SWAP1
0x1126 JUMP
---
0x111f: JUMPDEST 
0x1120: V1324 = 0x0
0x1123: V1325 = EXTCODESIZE S0
0x1124: V1326 = GT V1325 0x0
0x1126: JUMP {0xb24, 0xdc5, 0xfbd}
---
Entry stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xb24, 0xdc5, 0xfbd}, S0]
Stack pops: 2
Stack additions: [V1326]
Exit stack: [V9, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1326]

================================

Block 0x1127
[0x1127:0x1177]
---
Predecessors: []
Successors: []
---
0x1127 INVALID
0x1128 PUSH21 0x72616e7366657246726f6d28616464726573732c61
0x113e PUSH5 0x6472657373
0x1144 MISSING 0x2c
0x1145 PUSH22 0x696e7432353629a165627a7a723058204fcdceba5ff1
0x115c MISSING 0xaf
0x115d LOG1
0x115e RETURNDATASIZE
0x115f MISSING 0xe8
0x1160 MISSING 0x4e
0x1161 MISSING 0x2a
0x1162 MISSING 0xc4
0x1163 CREATE
0x1164 SELFDESTRUCT
0x1165 MISSING 0xdc
0x1166 PUSH17 0xb4336aa0404365e6b3c5f0b63f8b040029
---
0x1127: INVALID 
0x1128: V1327 = 0x72616e7366657246726f6d28616464726573732c61
0x113e: V1328 = 0x6472657373
0x1144: MISSING 0x2c
0x1145: V1329 = 0x696e7432353629a165627a7a723058204fcdceba5ff1
0x115c: MISSING 0xaf
0x115d: LOG S0 S1 S2
0x115e: V1330 = RETURNDATASIZE
0x115f: MISSING 0xe8
0x1160: MISSING 0x4e
0x1161: MISSING 0x2a
0x1162: MISSING 0xc4
0x1163: V1331 = CREATE S0 S1 S2
0x1164: SELFDESTRUCT V1331
0x1165: MISSING 0xdc
0x1166: V1332 = 0xb4336aa0404365e6b3c5f0b63f8b040029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6472657373, 0x72616e7366657246726f6d28616464726573732c61, 0x696e7432353629a165627a7a723058204fcdceba5ff1, V1330, 0xb4336aa0404365e6b3c5f0b63f8b040029]
Exit stack: []

================================


