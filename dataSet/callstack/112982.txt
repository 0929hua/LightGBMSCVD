Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x5b]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x5b
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x5b
0x3f: JUMPI 0x5b V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x72]
---
0x40 DUP1
0x41 PUSH4 0xc2381296
0x46 EQ
0x47 PUSH2 0x72
0x4a JUMPI
---
0x41: V15 = 0xc2381296
0x46: V16 = EQ 0xc2381296 V11
0x47: V17 = 0x72
0x4a: JUMPI 0x72 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x87]
---
0x4b DUP1
0x4c PUSH4 0xf8a8fd6d
0x51 EQ
0x52 PUSH2 0x87
0x55 JUMPI
---
0x4c: V18 = 0xf8a8fd6d
0x51: V19 = EQ 0xf8a8fd6d V11
0x52: V20 = 0x87
0x55: JUMPI 0x87 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x5a]
---
Predecessors: [0x0, 0x4b]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 DUP1
0x5a REVERT
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x5a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5b JUMPDEST
0x5c CALLVALUE
0x5d DUP1
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5b: JUMPDEST 
0x5c: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5b]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x67
[0x67:0x6f]
---
Predecessors: [0x5b]
Successors: [0xcb]
---
0x67 JUMPDEST
0x68 POP
0x69 PUSH2 0x70
0x6c PUSH2 0xcb
0x6f JUMP
---
0x67: JUMPDEST 
0x69: V26 = 0x70
0x6c: V27 = 0xcb
0x6f: JUMP 0xcb
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x70]
Exit stack: [V11, 0x70]

================================

Block 0x70
[0x70:0x71]
---
Predecessors: [0x11c, 0x16b]
Successors: []
---
0x70 JUMPDEST
0x71 STOP
---
0x70: JUMPDEST 
0x71: STOP 
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S4, {0x0, 0x70, 0x9c}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S4, {0x0, 0x70, 0x9c}, S2, S1, S0]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x40]
Successors: [0x7a, 0x7e]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 DUP1
0x75 ISZERO
0x76 PUSH2 0x7e
0x79 JUMPI
---
0x72: JUMPDEST 
0x73: V28 = CALLVALUE
0x75: V29 = ISZERO V28
0x76: V30 = 0x7e
0x79: JUMPI 0x7e V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x72]
Successors: []
---
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x7a: V31 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7e
[0x7e:0x86]
---
Predecessors: [0x72]
Successors: [0x11f]
---
0x7e JUMPDEST
0x7f POP
0x80 PUSH2 0x70
0x83 PUSH2 0x11f
0x86 JUMP
---
0x7e: JUMPDEST 
0x80: V32 = 0x70
0x83: V33 = 0x11f
0x86: JUMP 0x11f
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x70]
Exit stack: [V11, 0x70]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x4b]
Successors: [0x8f, 0x93]
---
0x87 JUMPDEST
0x88 CALLVALUE
0x89 DUP1
0x8a ISZERO
0x8b PUSH2 0x93
0x8e JUMPI
---
0x87: JUMPDEST 
0x88: V34 = CALLVALUE
0x8a: V35 = ISZERO V34
0x8b: V36 = 0x93
0x8e: JUMPI 0x93 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x87]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V37 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x93
[0x93:0x9b]
---
Predecessors: [0x87]
Successors: [0x170]
---
0x93 JUMPDEST
0x94 POP
0x95 PUSH2 0x9c
0x98 PUSH2 0x170
0x9b JUMP
---
0x93: JUMPDEST 
0x95: V38 = 0x9c
0x98: V39 = 0x170
0x9b: JUMP 0x170
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0x9c]
Exit stack: [V11, 0x9c]

================================

Block 0x9c
[0x9c:0xca]
---
Predecessors: [0x16b, 0x1e3]
Successors: []
---
0x9c JUMPDEST
0x9d PUSH1 0x40
0x9f DUP1
0xa0 MLOAD
0xa1 SWAP5
0xa2 DUP6
0xa3 MSTORE
0xa4 PUSH1 0x20
0xa6 DUP6
0xa7 ADD
0xa8 SWAP4
0xa9 SWAP1
0xaa SWAP4
0xab MSTORE
0xac DUP4
0xad DUP4
0xae ADD
0xaf SWAP2
0xb0 SWAP1
0xb1 SWAP2
0xb2 MSTORE
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb AND
0xbc PUSH1 0x60
0xbe DUP4
0xbf ADD
0xc0 MSTORE
0xc1 MLOAD
0xc2 SWAP1
0xc3 DUP2
0xc4 SWAP1
0xc5 SUB
0xc6 PUSH1 0x80
0xc8 ADD
0xc9 SWAP1
0xca RETURN
---
0x9c: JUMPDEST 
0x9d: V40 = 0x40
0xa0: V41 = M[0x40]
0xa3: M[V41] = {0x0, 0x70, 0x9c, 0xde0b6b3a7640000}
0xa4: V42 = 0x20
0xa7: V43 = ADD V41 0x20
0xab: M[V43] = S2
0xae: V44 = ADD 0x40 V41
0xb2: M[V44] = S1
0xb3: V45 = 0x1
0xb5: V46 = 0xa0
0xb7: V47 = 0x2
0xb9: V48 = EXP 0x2 0xa0
0xba: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbc: V51 = 0x60
0xbf: V52 = ADD V41 0x60
0xc0: M[V52] = V50
0xc1: V53 = M[0x40]
0xc5: V54 = SUB V41 V53
0xc6: V55 = 0x80
0xc8: V56 = ADD 0x80 V54
0xca: RETURN V53 V56
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S4, {0x0, 0x70, 0x9c, 0xde0b6b3a7640000}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S4]

================================

Block 0xcb
[0xcb:0xdd]
---
Predecessors: [0x67]
Successors: [0xde, 0xe2]
---
0xcb JUMPDEST
0xcc PUSH1 0x1
0xce SLOAD
0xcf PUSH1 0x1
0xd1 PUSH1 0xa0
0xd3 PUSH1 0x2
0xd5 EXP
0xd6 SUB
0xd7 AND
0xd8 CALLER
0xd9 EQ
0xda PUSH2 0xe2
0xdd JUMPI
---
0xcb: JUMPDEST 
0xcc: V57 = 0x1
0xce: V58 = S[0x1]
0xcf: V59 = 0x1
0xd1: V60 = 0xa0
0xd3: V61 = 0x2
0xd5: V62 = EXP 0x2 0xa0
0xd6: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd7: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xd8: V65 = CALLER
0xd9: V66 = EQ V65 V64
0xda: V67 = 0xe2
0xdd: JUMPI 0xe2 V66
---
Entry stack: [V11, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xcb]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V68 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70]

================================

Block 0xe2
[0xe2:0x112]
---
Predecessors: [0xcb]
Successors: [0x113, 0x11c]
---
0xe2 JUMPDEST
0xe3 PUSH1 0x1
0xe5 SLOAD
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 PUSH1 0x1
0xeb PUSH1 0xa0
0xed PUSH1 0x2
0xef EXP
0xf0 SUB
0xf1 SWAP1
0xf2 SWAP2
0xf3 AND
0xf4 SWAP1
0xf5 ADDRESS
0xf6 BALANCE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x8fc
0xfc MUL
0xfd SWAP2
0xfe PUSH1 0x0
0x100 DUP2
0x101 DUP2
0x102 DUP2
0x103 DUP6
0x104 DUP9
0x105 DUP9
0x106 CALL
0x107 SWAP4
0x108 POP
0x109 POP
0x10a POP
0x10b POP
0x10c ISZERO
0x10d DUP1
0x10e ISZERO
0x10f PUSH2 0x11c
0x112 JUMPI
---
0xe2: JUMPDEST 
0xe3: V69 = 0x1
0xe5: V70 = S[0x1]
0xe6: V71 = 0x40
0xe8: V72 = M[0x40]
0xe9: V73 = 0x1
0xeb: V74 = 0xa0
0xed: V75 = 0x2
0xef: V76 = EXP 0x2 0xa0
0xf0: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf3: V78 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V79 = ADDRESS
0xf6: V80 = BALANCE V79
0xf8: V81 = ISZERO V80
0xf9: V82 = 0x8fc
0xfc: V83 = MUL 0x8fc V81
0xfe: V84 = 0x0
0x106: V85 = CALL V83 V78 V80 V72 0x0 V72 0x0
0x10c: V86 = ISZERO V85
0x10e: V87 = ISZERO V86
0x10f: V88 = 0x11c
0x112: JUMPI 0x11c V87
---
Entry stack: [V11, 0x70]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, 0x70, V86]

================================

Block 0x113
[0x113:0x11b]
---
Predecessors: [0xe2]
Successors: []
---
0x113 RETURNDATASIZE
0x114 PUSH1 0x0
0x116 DUP1
0x117 RETURNDATACOPY
0x118 RETURNDATASIZE
0x119 PUSH1 0x0
0x11b REVERT
---
0x113: V89 = RETURNDATASIZE
0x114: V90 = 0x0
0x117: RETURNDATACOPY 0x0 0x0 V89
0x118: V91 = RETURNDATASIZE
0x119: V92 = 0x0
0x11b: REVERT 0x0 V91
---
Entry stack: [V11, 0x70, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70, V86]

================================

Block 0x11c
[0x11c:0x11e]
---
Predecessors: [0xe2]
Successors: [0x70]
---
0x11c JUMPDEST
0x11d POP
0x11e JUMP
---
0x11c: JUMPDEST 
0x11e: JUMP 0x70
---
Entry stack: [V11, 0x70, V86]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x138]
---
Predecessors: [0x7e]
Successors: [0x139, 0x13d]
---
0x11f JUMPDEST
0x120 PUSH1 0x1
0x122 SLOAD
0x123 PUSH1 0x0
0x125 SWAP1
0x126 DUP2
0x127 SWAP1
0x128 DUP2
0x129 SWAP1
0x12a PUSH1 0x1
0x12c PUSH1 0xa0
0x12e PUSH1 0x2
0x130 EXP
0x131 SUB
0x132 AND
0x133 CALLER
0x134 EQ
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x11f: JUMPDEST 
0x120: V93 = 0x1
0x122: V94 = S[0x1]
0x123: V95 = 0x0
0x12a: V96 = 0x1
0x12c: V97 = 0xa0
0x12e: V98 = 0x2
0x130: V99 = EXP 0x2 0xa0
0x131: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x133: V102 = CALLER
0x134: V103 = EQ V102 V101
0x135: V104 = 0x13d
0x138: JUMPI 0x13d V103
---
Entry stack: [V11, 0x70]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x70, 0x0, 0x0, 0x0]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x11f]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V105 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x70, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x70, 0x0, 0x0, 0x0]

================================

Block 0x13d
[0x13d:0x144]
---
Predecessors: [0x11f]
Successors: [0x1ec]
---
0x13d JUMPDEST
0x13e PUSH2 0x145
0x141 PUSH2 0x1ec
0x144 JUMP
---
0x13d: JUMPDEST 
0x13e: V106 = 0x145
0x141: V107 = 0x1ec
0x144: JUMP 0x1ec
---
Entry stack: [V11, 0x70, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x145]
Exit stack: [V11, 0x70, 0x0, 0x0, 0x0, 0x145]

================================

Block 0x145
[0x145:0x161]
---
Predecessors: [0x5a7]
Successors: [0x162, 0x16b]
---
0x145 JUMPDEST
0x146 PUSH1 0x8
0x148 SLOAD
0x149 SWAP3
0x14a SWAP6
0x14b POP
0x14c SWAP1
0x14d SWAP4
0x14e POP
0x14f SWAP2
0x150 POP
0x151 PUSH8 0x16345785d8a0000
0x15a DUP5
0x15b ADD
0x15c LT
0x15d ISZERO
0x15e PUSH2 0x16b
0x161 JUMPI
---
0x145: JUMPDEST 
0x146: V108 = 0x8
0x148: V109 = S[0x8]
0x151: V110 = 0x16345785d8a0000
0x15b: V111 = ADD S2 0x16345785d8a0000
0x15c: V112 = LT V111 V109
0x15d: V113 = ISZERO V112
0x15e: V114 = 0x16b
0x161: JUMPI 0x16b V113
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S7, {0x0, 0x70}, 0x0, 0x0, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S7, {0x0, 0x70}, S2, S1, S0]

================================

Block 0x162
[0x162:0x16a]
---
Predecessors: [0x145]
Successors: [0x5b7]
---
0x162 PUSH2 0x16b
0x165 DUP3
0x166 DUP3
0x167 PUSH2 0x5b7
0x16a JUMP
---
0x162: V115 = 0x16b
0x167: V116 = 0x5b7
0x16a: JUMP 0x5b7
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S4, {0x0, 0x70}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x16b, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S4, {0x0, 0x70}, S2, S1, S0, 0x16b, S1, S0]

================================

Block 0x16b
[0x16b:0x16f]
---
Predecessors: [0x145, 0x16b, 0x5ba]
Successors: [0x70, 0x9c, 0x16b]
---
0x16b JUMPDEST
0x16c POP
0x16d POP
0x16e POP
0x16f JUMP
---
0x16b: JUMPDEST 
0x16f: JUMP {0x0, 0x70, 0x9c, 0x16b}
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70, 0x9c}, S6, S5, S4, {0x0, 0x70, 0x9c, 0x16b}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70, 0x9c}, S6, S5, S4]

================================

Block 0x170
[0x170:0x191]
---
Predecessors: [0x93]
Successors: [0x192, 0x196]
---
0x170 JUMPDEST
0x171 PUSH1 0x1
0x173 SLOAD
0x174 PUSH1 0x0
0x176 SWAP1
0x177 DUP2
0x178 SWAP1
0x179 DUP2
0x17a SWAP1
0x17b DUP2
0x17c SWAP1
0x17d DUP2
0x17e SWAP1
0x17f DUP2
0x180 SWAP1
0x181 DUP2
0x182 SWAP1
0x183 PUSH1 0x1
0x185 PUSH1 0xa0
0x187 PUSH1 0x2
0x189 EXP
0x18a SUB
0x18b AND
0x18c CALLER
0x18d EQ
0x18e PUSH2 0x196
0x191 JUMPI
---
0x170: JUMPDEST 
0x171: V117 = 0x1
0x173: V118 = S[0x1]
0x174: V119 = 0x0
0x183: V120 = 0x1
0x185: V121 = 0xa0
0x187: V122 = 0x2
0x189: V123 = EXP 0x2 0xa0
0x18a: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18b: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x18c: V126 = CALLER
0x18d: V127 = EQ V126 V125
0x18e: V128 = 0x196
0x191: JUMPI 0x196 V127
---
Entry stack: [V11, 0x9c]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x9c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x170]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V129 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x170]
Successors: [0x1ec]
---
0x196 JUMPDEST
0x197 PUSH2 0x19e
0x19a PUSH2 0x1ec
0x19d JUMP
---
0x196: JUMPDEST 
0x197: V130 = 0x19e
0x19a: V131 = 0x1ec
0x19d: JUMP 0x1ec
---
Entry stack: [V11, 0x9c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x19e]
Exit stack: [V11, 0x9c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19e]

================================

Block 0x19e
[0x19e:0x1ba]
---
Predecessors: [0x5a7]
Successors: [0x1bb, 0x1cd]
---
0x19e JUMPDEST
0x19f PUSH1 0x8
0x1a1 SLOAD
0x1a2 SWAP3
0x1a3 SWAP6
0x1a4 POP
0x1a5 SWAP1
0x1a6 SWAP4
0x1a7 POP
0x1a8 SWAP2
0x1a9 POP
0x1aa PUSH8 0x16345785d8a0000
0x1b3 DUP5
0x1b4 ADD
0x1b5 LT
0x1b6 ISZERO
0x1b7 PUSH2 0x1cd
0x1ba JUMPI
---
0x19e: JUMPDEST 
0x19f: V132 = 0x8
0x1a1: V133 = S[0x8]
0x1aa: V134 = 0x16345785d8a0000
0x1b4: V135 = ADD S2 0x16345785d8a0000
0x1b5: V136 = LT V135 V133
0x1b6: V137 = ISZERO V136
0x1b7: V138 = 0x1cd
0x1ba: JUMPI 0x1cd V137
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S7, {0x0, 0x70}, 0x0, 0x0, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S7, {0x0, 0x70}, S2, S1, S0]

================================

Block 0x1bb
[0x1bb:0x1cc]
---
Predecessors: [0x19e]
Successors: [0x1e3]
---
0x1bb PUSH1 0x0
0x1bd SWAP7
0x1be POP
0x1bf SWAP2
0x1c0 SWAP5
0x1c1 POP
0x1c2 SWAP3
0x1c3 POP
0x1c4 SWAP1
0x1c5 POP
0x1c6 DUP3
0x1c7 DUP3
0x1c8 DUP3
0x1c9 PUSH2 0x1e3
0x1cc JUMP
---
0x1bb: V139 = 0x0
0x1c9: V140 = 0x1e3
0x1cc: JUMP 0x1e3
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S4, {0x0, 0x70}, S2, S1, S0]
Stack pops: 7
Stack additions: [0x0, S2, S1, S0, S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, S2, S1, S0, S2, S1, S0]

================================

Block 0x1cd
[0x1cd:0x1e2]
---
Predecessors: [0x19e]
Successors: [0x1e3]
---
0x1cd JUMPDEST
0x1ce PUSH8 0xde0b6b3a7640000
0x1d7 SWAP7
0x1d8 POP
0x1d9 SWAP2
0x1da SWAP5
0x1db POP
0x1dc SWAP3
0x1dd POP
0x1de SWAP1
0x1df POP
0x1e0 DUP3
0x1e1 DUP3
0x1e2 DUP3
---
0x1cd: JUMPDEST 
0x1ce: V141 = 0xde0b6b3a7640000
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S4, {0x0, 0x70}, S2, S1, S0]
Stack pops: 7
Stack additions: [0xde0b6b3a7640000, S2, S1, S0, S2, S1, S0]
Exit stack: [V11, 0x9c, 0xde0b6b3a7640000, S2, S1, S0, S2, S1, S0]

================================

Block 0x1e3
[0x1e3:0x1eb]
---
Predecessors: [0x1bb, 0x1cd]
Successors: [0x9c]
---
0x1e3 JUMPDEST
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 SWAP1
0x1e8 SWAP2
0x1e9 SWAP3
0x1ea SWAP4
0x1eb JUMP
---
0x1e3: JUMPDEST 
0x1eb: JUMP 0x9c
---
Entry stack: [V11, 0x9c, {0x0, 0xde0b6b3a7640000}, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S6, S5, S4, S3]
Exit stack: [V11, {0x0, 0xde0b6b3a7640000}, S5, S4, S3]

================================

Block 0x1ec
[0x1ec:0x257]
---
Predecessors: [0x13d, 0x196]
Successors: [0x258, 0x25c]
---
0x1ec JUMPDEST
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 SLOAD
0x1f1 PUSH1 0x40
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 PUSH32 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x216 DUP2
0x217 MSTORE
0x218 SWAP1
0x219 MLOAD
0x21a DUP4
0x21b SWAP3
0x21c DUP4
0x21d SWAP3
0x21e ADDRESS
0x21f SWAP3
0x220 DUP5
0x221 SWAP3
0x222 DUP4
0x223 SWAP3
0x224 DUP4
0x225 SWAP3
0x226 DUP4
0x227 SWAP3
0x228 DUP4
0x229 SWAP3
0x22a PUSH1 0x1
0x22c PUSH1 0xa0
0x22e PUSH1 0x2
0x230 EXP
0x231 SUB
0x232 SWAP1
0x233 SWAP2
0x234 AND
0x235 SWAP2
0x236 PUSH4 0x11a09ae7
0x23b SWAP2
0x23c PUSH1 0x4
0x23e DUP1
0x23f DUP3
0x240 ADD
0x241 SWAP3
0x242 PUSH1 0x20
0x244 SWAP3
0x245 SWAP1
0x246 SWAP2
0x247 SWAP1
0x248 DUP3
0x249 SWAP1
0x24a SUB
0x24b ADD
0x24c DUP2
0x24d DUP8
0x24e DUP8
0x24f DUP1
0x250 EXTCODESIZE
0x251 ISZERO
0x252 DUP1
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V142 = 0x0
0x1f0: V143 = S[0x0]
0x1f1: V144 = 0x40
0x1f4: V145 = M[0x40]
0x1f5: V146 = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x217: M[V145] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x219: V147 = M[0x40]
0x21e: V148 = ADDRESS
0x22a: V149 = 0x1
0x22c: V150 = 0xa0
0x22e: V151 = 0x2
0x230: V152 = EXP 0x2 0xa0
0x231: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x234: V154 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x236: V155 = 0x11a09ae7
0x23c: V156 = 0x4
0x240: V157 = ADD V145 0x4
0x242: V158 = 0x20
0x24a: V159 = SUB V145 V147
0x24b: V160 = ADD V159 0x4
0x250: V161 = EXTCODESIZE V154
0x251: V162 = ISZERO V161
0x253: V163 = ISZERO V162
0x254: V164 = 0x25c
0x257: JUMPI 0x25c V163
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S5, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V148, 0x0, 0x0, 0x0, 0x0, 0x0, V154, 0x11a09ae7, V157, 0x20, V147, V160, V147, 0x0, V154, V162]
Exit stack: [V11, 0x9c, 0x0, 0x0, S5, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, V148, 0x0, 0x0, 0x0, 0x0, 0x0, V154, 0x11a09ae7, V157, 0x20, V147, V160, V147, 0x0, V154, V162]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x1ec]
Successors: []
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b REVERT
---
0x258: V165 = 0x0
0x25b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, V148, 0x0, 0x0, 0x0, 0x0, 0x0, V154, 0x11a09ae7, V157, 0x20, V147, V160, V147, 0x0, V154, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, V148, 0x0, 0x0, 0x0, 0x0, 0x0, V154, 0x11a09ae7, V157, 0x20, V147, V160, V147, 0x0, V154, V162]

================================

Block 0x25c
[0x25c:0x266]
---
Predecessors: [0x1ec]
Successors: [0x267, 0x270]
---
0x25c JUMPDEST
0x25d POP
0x25e GAS
0x25f CALL
0x260 ISZERO
0x261 DUP1
0x262 ISZERO
0x263 PUSH2 0x270
0x266 JUMPI
---
0x25c: JUMPDEST 
0x25e: V166 = GAS
0x25f: V167 = CALL V166 V154 0x0 V147 V160 V147 0x20
0x260: V168 = ISZERO V167
0x262: V169 = ISZERO V168
0x263: V170 = 0x270
0x266: JUMPI 0x270 V169
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, V148, 0x0, 0x0, 0x0, 0x0, 0x0, V154, 0x11a09ae7, V157, 0x20, V147, V160, V147, 0x0, V154, V162]
Stack pops: 7
Stack additions: [V168]
Exit stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, V148, 0x0, 0x0, 0x0, 0x0, 0x0, V154, 0x11a09ae7, V157, V168]

================================

Block 0x267
[0x267:0x26f]
---
Predecessors: [0x25c]
Successors: []
---
0x267 RETURNDATASIZE
0x268 PUSH1 0x0
0x26a DUP1
0x26b RETURNDATACOPY
0x26c RETURNDATASIZE
0x26d PUSH1 0x0
0x26f REVERT
---
0x267: V171 = RETURNDATASIZE
0x268: V172 = 0x0
0x26b: RETURNDATACOPY 0x0 0x0 V171
0x26c: V173 = RETURNDATASIZE
0x26d: V174 = 0x0
0x26f: REVERT 0x0 V173
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S18, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S18, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V168]

================================

Block 0x270
[0x270:0x281]
---
Predecessors: [0x25c]
Successors: [0x282, 0x286]
---
0x270 JUMPDEST
0x271 POP
0x272 POP
0x273 POP
0x274 POP
0x275 PUSH1 0x40
0x277 MLOAD
0x278 RETURNDATASIZE
0x279 PUSH1 0x20
0x27b DUP2
0x27c LT
0x27d ISZERO
0x27e PUSH2 0x286
0x281 JUMPI
---
0x270: JUMPDEST 
0x275: V175 = 0x40
0x277: V176 = M[0x40]
0x278: V177 = RETURNDATASIZE
0x279: V178 = 0x20
0x27c: V179 = LT V177 0x20
0x27d: V180 = ISZERO V179
0x27e: V181 = 0x286
0x281: JUMPI 0x286 V180
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S18, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V168]
Stack pops: 4
Stack additions: [V176, V177]
Exit stack: [V11, 0x9c, 0x0, 0x0, S18, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]

================================

Block 0x282
[0x282:0x285]
---
Predecessors: [0x270]
Successors: []
---
0x282 PUSH1 0x0
0x284 DUP1
0x285 REVERT
---
0x282: V182 = 0x0
0x285: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S16, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S16, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]

================================

Block 0x286
[0x286:0x28e]
---
Predecessors: [0x270]
Successors: [0x28f]
---
0x286 JUMPDEST
0x287 POP
0x288 MLOAD
0x289 SWAP2
0x28a POP
0x28b PUSH1 0x0
0x28d SWAP1
0x28e POP
---
0x286: JUMPDEST 
0x288: V183 = M[V176]
0x28b: V184 = 0x0
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S16, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V176, V177]
Stack pops: 4
Stack additions: [V183, 0x0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S16, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, V183, 0x0]

================================

Block 0x28f
[0x28f:0x296]
---
Predecessors: [0x286, 0x5a2]
Successors: [0x297, 0x5a7]
---
0x28f JUMPDEST
0x290 DUP1
0x291 ISZERO
0x292 ISZERO
0x293 PUSH2 0x5a7
0x296 JUMPI
---
0x28f: JUMPDEST 
0x291: V185 = ISZERO S0
0x292: V186 = ISZERO V185
0x293: V187 = 0x5a7
0x296: JUMPI 0x5a7 V186
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x297
[0x297:0x2e8]
---
Predecessors: [0x28f]
Successors: [0x2e9]
---
0x297 NUMBER
0x298 TIMESTAMP
0x299 DUP8
0x29a PUSH1 0x40
0x29c MLOAD
0x29d PUSH1 0x20
0x29f ADD
0x2a0 DUP1
0x2a1 DUP3
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa AND
0x2ab PUSH1 0x1
0x2ad PUSH1 0xa0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 SUB
0x2b3 AND
0x2b4 PUSH13 0x1000000000000000000000000
0x2c2 MUL
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x14
0x2c7 ADD
0x2c8 SWAP2
0x2c9 POP
0x2ca POP
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce PUSH1 0x20
0x2d0 DUP2
0x2d1 DUP4
0x2d2 SUB
0x2d3 SUB
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 SWAP1
0x2d7 PUSH1 0x40
0x2d9 MSTORE
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd DUP1
0x2de DUP3
0x2df DUP1
0x2e0 MLOAD
0x2e1 SWAP1
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 SWAP1
0x2e6 DUP1
0x2e7 DUP4
0x2e8 DUP4
---
0x297: V188 = NUMBER
0x298: V189 = TIMESTAMP
0x29a: V190 = 0x40
0x29c: V191 = M[0x40]
0x29d: V192 = 0x20
0x29f: V193 = ADD 0x20 V191
0x2a2: V194 = 0x1
0x2a4: V195 = 0xa0
0x2a6: V196 = 0x2
0x2a8: V197 = EXP 0x2 0xa0
0x2a9: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x2ab: V200 = 0x1
0x2ad: V201 = 0xa0
0x2af: V202 = 0x2
0x2b1: V203 = EXP 0x2 0xa0
0x2b2: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b3: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x2b4: V206 = 0x1000000000000000000000000
0x2c2: V207 = MUL 0x1000000000000000000000000 V205
0x2c4: M[V193] = V207
0x2c5: V208 = 0x14
0x2c7: V209 = ADD 0x14 V193
0x2cb: V210 = 0x40
0x2cd: V211 = M[0x40]
0x2ce: V212 = 0x20
0x2d2: V213 = SUB V209 V211
0x2d3: V214 = SUB V213 0x20
0x2d5: M[V211] = V214
0x2d7: V215 = 0x40
0x2d9: M[0x40] = V209
0x2da: V216 = 0x40
0x2dc: V217 = M[0x40]
0x2e0: V218 = M[V211]
0x2e2: V219 = 0x20
0x2e4: V220 = ADD 0x20 V211
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V188, V189, V211, V217, V217, V220, V218, V218, V217, V220]
Exit stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0, V188, V189, V211, V217, V217, V220, V218, V218, V217, V220]

================================

Block 0x2e9
[0x2e9:0x2f1]
---
Predecessors: [0x297, 0x2f2]
Successors: [0x2f2, 0x308]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x20
0x2ec DUP4
0x2ed LT
0x2ee PUSH2 0x308
0x2f1 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V221 = 0x20
0x2ed: V222 = LT S2 0x20
0x2ee: V223 = 0x308
0x2f1: JUMPI 0x308 V222
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V188, V189, V211, V217, V217, V220, V218, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V188, V189, V211, V217, V217, V220, V218, S2, S1, S0]

================================

Block 0x2f2
[0x2f2:0x307]
---
Predecessors: [0x2e9]
Successors: [0x2e9]
---
0x2f2 DUP1
0x2f3 MLOAD
0x2f4 DUP3
0x2f5 MSTORE
0x2f6 PUSH1 0x1f
0x2f8 NOT
0x2f9 SWAP1
0x2fa SWAP3
0x2fb ADD
0x2fc SWAP2
0x2fd PUSH1 0x20
0x2ff SWAP2
0x300 DUP3
0x301 ADD
0x302 SWAP2
0x303 ADD
0x304 PUSH2 0x2e9
0x307 JUMP
---
0x2f3: V224 = M[S0]
0x2f5: M[S1] = V224
0x2f6: V225 = 0x1f
0x2f8: V226 = NOT 0x1f
0x2fb: V227 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2fd: V228 = 0x20
0x301: V229 = ADD 0x20 S1
0x303: V230 = ADD 0x20 S0
0x304: V231 = 0x2e9
0x307: JUMP 0x2e9
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V188, V189, V211, V217, V217, V220, V218, S2, S1, S0]
Stack pops: 3
Stack additions: [V227, V229, V230]
Exit stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V188, V189, V211, V217, V217, V220, V218, V227, V229, V230]

================================

Block 0x308
[0x308:0x33c]
---
Predecessors: [0x2e9]
Successors: [0x33d, 0x33e]
---
0x308 JUMPDEST
0x309 MLOAD
0x30a DUP2
0x30b MLOAD
0x30c PUSH1 0x20
0x30e SWAP4
0x30f SWAP1
0x310 SWAP4
0x311 SUB
0x312 PUSH2 0x100
0x315 EXP
0x316 PUSH1 0x0
0x318 NOT
0x319 ADD
0x31a DUP1
0x31b NOT
0x31c SWAP1
0x31d SWAP2
0x31e AND
0x31f SWAP3
0x320 AND
0x321 SWAP2
0x322 SWAP1
0x323 SWAP2
0x324 OR
0x325 SWAP1
0x326 MSTORE
0x327 PUSH1 0x40
0x329 MLOAD
0x32a SWAP3
0x32b ADD
0x32c DUP3
0x32d SWAP1
0x32e SUB
0x32f SWAP1
0x330 SWAP2
0x331 SHA3
0x332 SWAP3
0x333 POP
0x334 POP
0x335 POP
0x336 DUP2
0x337 ISZERO
0x338 ISZERO
0x339 PUSH2 0x33e
0x33c JUMPI
---
0x308: JUMPDEST 
0x309: V232 = M[S0]
0x30b: V233 = M[S1]
0x30c: V234 = 0x20
0x311: V235 = SUB 0x20 S2
0x312: V236 = 0x100
0x315: V237 = EXP 0x100 V235
0x316: V238 = 0x0
0x318: V239 = NOT 0x0
0x319: V240 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V237
0x31b: V241 = NOT V240
0x31e: V242 = AND V232 V241
0x320: V243 = AND V233 V240
0x324: V244 = OR V243 V242
0x326: M[S1] = V244
0x327: V245 = 0x40
0x329: V246 = M[0x40]
0x32b: V247 = ADD V217 V218
0x32e: V248 = SUB V247 V246
0x331: V249 = SHA3 V246 V248
0x337: V250 = ISZERO V189
0x338: V251 = ISZERO V250
0x339: V252 = 0x33e
0x33c: JUMPI 0x33e V251
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V188, V189, V211, V217, V217, V220, V218, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V249]
Exit stack: [V11, 0x9c, 0x0, 0x0, S24, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V188, V189, V249]

================================

Block 0x33d
[0x33d:0x33d]
---
Predecessors: [0x308]
Successors: []
---
0x33d INVALID
---
0x33d: INVALID 
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S17, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V188, V189, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S17, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V188, V189, V249]

================================

Block 0x33e
[0x33e:0x391]
---
Predecessors: [0x308]
Successors: [0x392]
---
0x33e JUMPDEST
0x33f DIV
0x340 GASLIMIT
0x341 TIMESTAMP
0x342 COINBASE
0x343 PUSH1 0x40
0x345 MLOAD
0x346 PUSH1 0x20
0x348 ADD
0x349 DUP1
0x34a DUP3
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 AND
0x354 PUSH1 0x1
0x356 PUSH1 0xa0
0x358 PUSH1 0x2
0x35a EXP
0x35b SUB
0x35c AND
0x35d PUSH13 0x1000000000000000000000000
0x36b MUL
0x36c DUP2
0x36d MSTORE
0x36e PUSH1 0x14
0x370 ADD
0x371 SWAP2
0x372 POP
0x373 POP
0x374 PUSH1 0x40
0x376 MLOAD
0x377 PUSH1 0x20
0x379 DUP2
0x37a DUP4
0x37b SUB
0x37c SUB
0x37d DUP2
0x37e MSTORE
0x37f SWAP1
0x380 PUSH1 0x40
0x382 MSTORE
0x383 PUSH1 0x40
0x385 MLOAD
0x386 DUP1
0x387 DUP3
0x388 DUP1
0x389 MLOAD
0x38a SWAP1
0x38b PUSH1 0x20
0x38d ADD
0x38e SWAP1
0x38f DUP1
0x390 DUP4
0x391 DUP4
---
0x33e: JUMPDEST 
0x33f: V253 = DIV V249 V189
0x340: V254 = GASLIMIT
0x341: V255 = TIMESTAMP
0x342: V256 = COINBASE
0x343: V257 = 0x40
0x345: V258 = M[0x40]
0x346: V259 = 0x20
0x348: V260 = ADD 0x20 V258
0x34b: V261 = 0x1
0x34d: V262 = 0xa0
0x34f: V263 = 0x2
0x351: V264 = EXP 0x2 0xa0
0x352: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x354: V267 = 0x1
0x356: V268 = 0xa0
0x358: V269 = 0x2
0x35a: V270 = EXP 0x2 0xa0
0x35b: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35c: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x35d: V273 = 0x1000000000000000000000000
0x36b: V274 = MUL 0x1000000000000000000000000 V272
0x36d: M[V260] = V274
0x36e: V275 = 0x14
0x370: V276 = ADD 0x14 V260
0x374: V277 = 0x40
0x376: V278 = M[0x40]
0x377: V279 = 0x20
0x37b: V280 = SUB V276 V278
0x37c: V281 = SUB V280 0x20
0x37e: M[V278] = V281
0x380: V282 = 0x40
0x382: M[0x40] = V276
0x383: V283 = 0x40
0x385: V284 = M[0x40]
0x389: V285 = M[V278]
0x38b: V286 = 0x20
0x38d: V287 = ADD 0x20 V278
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S17, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V188, V189, V249]
Stack pops: 2
Stack additions: [V253, V254, V255, V278, V284, V284, V287, V285, V285, V284, V287]
Exit stack: [V11, 0x9c, 0x0, 0x0, S17, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V188, V253, V254, V255, V278, V284, V284, V287, V285, V285, V284, V287]

================================

Block 0x392
[0x392:0x39a]
---
Predecessors: [0x33e, 0x39b]
Successors: [0x39b, 0x3b1]
---
0x392 JUMPDEST
0x393 PUSH1 0x20
0x395 DUP4
0x396 LT
0x397 PUSH2 0x3b1
0x39a JUMPI
---
0x392: JUMPDEST 
0x393: V288 = 0x20
0x396: V289 = LT S2 0x20
0x397: V290 = 0x3b1
0x39a: JUMPI 0x3b1 V289
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S26, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V188, V253, V254, V255, V278, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S26, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V188, V253, V254, V255, V278, V284, V284, V287, V285, S2, S1, S0]

================================

Block 0x39b
[0x39b:0x3b0]
---
Predecessors: [0x392]
Successors: [0x392]
---
0x39b DUP1
0x39c MLOAD
0x39d DUP3
0x39e MSTORE
0x39f PUSH1 0x1f
0x3a1 NOT
0x3a2 SWAP1
0x3a3 SWAP3
0x3a4 ADD
0x3a5 SWAP2
0x3a6 PUSH1 0x20
0x3a8 SWAP2
0x3a9 DUP3
0x3aa ADD
0x3ab SWAP2
0x3ac ADD
0x3ad PUSH2 0x392
0x3b0 JUMP
---
0x39c: V291 = M[S0]
0x39e: M[S1] = V291
0x39f: V292 = 0x1f
0x3a1: V293 = NOT 0x1f
0x3a4: V294 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3a6: V295 = 0x20
0x3aa: V296 = ADD 0x20 S1
0x3ac: V297 = ADD 0x20 S0
0x3ad: V298 = 0x392
0x3b0: JUMP 0x392
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S26, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V188, V253, V254, V255, V278, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 3
Stack additions: [V294, V296, V297]
Exit stack: [V11, 0x9c, 0x0, 0x0, S26, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V188, V253, V254, V255, V278, V284, V284, V287, V285, V294, V296, V297]

================================

Block 0x3b1
[0x3b1:0x3e5]
---
Predecessors: [0x392]
Successors: [0x3e6, 0x3e7]
---
0x3b1 JUMPDEST
0x3b2 MLOAD
0x3b3 DUP2
0x3b4 MLOAD
0x3b5 PUSH1 0x20
0x3b7 SWAP4
0x3b8 SWAP1
0x3b9 SWAP4
0x3ba SUB
0x3bb PUSH2 0x100
0x3be EXP
0x3bf PUSH1 0x0
0x3c1 NOT
0x3c2 ADD
0x3c3 DUP1
0x3c4 NOT
0x3c5 SWAP1
0x3c6 SWAP2
0x3c7 AND
0x3c8 SWAP3
0x3c9 AND
0x3ca SWAP2
0x3cb SWAP1
0x3cc SWAP2
0x3cd OR
0x3ce SWAP1
0x3cf MSTORE
0x3d0 PUSH1 0x40
0x3d2 MLOAD
0x3d3 SWAP3
0x3d4 ADD
0x3d5 DUP3
0x3d6 SWAP1
0x3d7 SUB
0x3d8 SWAP1
0x3d9 SWAP2
0x3da SHA3
0x3db SWAP3
0x3dc POP
0x3dd POP
0x3de POP
0x3df DUP2
0x3e0 ISZERO
0x3e1 ISZERO
0x3e2 PUSH2 0x3e7
0x3e5 JUMPI
---
0x3b1: JUMPDEST 
0x3b2: V299 = M[S0]
0x3b4: V300 = M[S1]
0x3b5: V301 = 0x20
0x3ba: V302 = SUB 0x20 S2
0x3bb: V303 = 0x100
0x3be: V304 = EXP 0x100 V302
0x3bf: V305 = 0x0
0x3c1: V306 = NOT 0x0
0x3c2: V307 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V304
0x3c4: V308 = NOT V307
0x3c7: V309 = AND V299 V308
0x3c9: V310 = AND V300 V307
0x3cd: V311 = OR V310 V309
0x3cf: M[S1] = V311
0x3d0: V312 = 0x40
0x3d2: V313 = M[0x40]
0x3d4: V314 = ADD V284 V285
0x3d7: V315 = SUB V314 V313
0x3da: V316 = SHA3 V313 V315
0x3e0: V317 = ISZERO V255
0x3e1: V318 = ISZERO V317
0x3e2: V319 = 0x3e7
0x3e5: JUMPI 0x3e7 V318
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S26, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V188, V253, V254, V255, V278, V284, V284, V287, V285, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V316]
Exit stack: [V11, 0x9c, 0x0, 0x0, S26, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V188, V253, V254, V255, V316]

================================

Block 0x3e6
[0x3e6:0x3e6]
---
Predecessors: [0x3b1]
Successors: []
---
0x3e6 INVALID
---
0x3e6: INVALID 
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S19, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V188, V253, V254, V255, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S19, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V188, V253, V254, V255, V316]

================================

Block 0x3e7
[0x3e7:0x41d]
---
Predecessors: [0x3b1]
Successors: [0x41e]
---
0x3e7 JUMPDEST
0x3e8 DIV
0x3e9 DIFFICULTY
0x3ea TIMESTAMP
0x3eb ADD
0x3ec ADD
0x3ed ADD
0x3ee ADD
0x3ef ADD
0x3f0 PUSH1 0x40
0x3f2 MLOAD
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 DUP1
0x3f7 DUP3
0x3f8 DUP2
0x3f9 MSTORE
0x3fa PUSH1 0x20
0x3fc ADD
0x3fd SWAP2
0x3fe POP
0x3ff POP
0x400 PUSH1 0x40
0x402 MLOAD
0x403 PUSH1 0x20
0x405 DUP2
0x406 DUP4
0x407 SUB
0x408 SUB
0x409 DUP2
0x40a MSTORE
0x40b SWAP1
0x40c PUSH1 0x40
0x40e MSTORE
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP1
0x413 DUP3
0x414 DUP1
0x415 MLOAD
0x416 SWAP1
0x417 PUSH1 0x20
0x419 ADD
0x41a SWAP1
0x41b DUP1
0x41c DUP4
0x41d DUP4
---
0x3e7: JUMPDEST 
0x3e8: V320 = DIV V316 V255
0x3e9: V321 = DIFFICULTY
0x3ea: V322 = TIMESTAMP
0x3eb: V323 = ADD V322 V321
0x3ec: V324 = ADD V323 V320
0x3ed: V325 = ADD V324 V254
0x3ee: V326 = ADD V325 V253
0x3ef: V327 = ADD V326 V188
0x3f0: V328 = 0x40
0x3f2: V329 = M[0x40]
0x3f3: V330 = 0x20
0x3f5: V331 = ADD 0x20 V329
0x3f9: M[V331] = V327
0x3fa: V332 = 0x20
0x3fc: V333 = ADD 0x20 V331
0x400: V334 = 0x40
0x402: V335 = M[0x40]
0x403: V336 = 0x20
0x407: V337 = SUB V333 V335
0x408: V338 = SUB V337 0x20
0x40a: M[V335] = V338
0x40c: V339 = 0x40
0x40e: M[0x40] = V333
0x40f: V340 = 0x40
0x411: V341 = M[0x40]
0x415: V342 = M[V335]
0x417: V343 = 0x20
0x419: V344 = ADD 0x20 V335
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S19, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V188, V253, V254, V255, V316]
Stack pops: 5
Stack additions: [V335, V341, V341, V344, V342, V342, V341, V344]
Exit stack: [V11, 0x9c, 0x0, 0x0, S19, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V335, V341, V341, V344, V342, V342, V341, V344]

================================

Block 0x41e
[0x41e:0x426]
---
Predecessors: [0x3e7, 0x427]
Successors: [0x427, 0x43d]
---
0x41e JUMPDEST
0x41f PUSH1 0x20
0x421 DUP4
0x422 LT
0x423 PUSH2 0x43d
0x426 JUMPI
---
0x41e: JUMPDEST 
0x41f: V345 = 0x20
0x422: V346 = LT S2 0x20
0x423: V347 = 0x43d
0x426: JUMPI 0x43d V346
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V335, V341, V341, V344, V342, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V335, V341, V341, V344, V342, S2, S1, S0]

================================

Block 0x427
[0x427:0x43c]
---
Predecessors: [0x41e]
Successors: [0x41e]
---
0x427 DUP1
0x428 MLOAD
0x429 DUP3
0x42a MSTORE
0x42b PUSH1 0x1f
0x42d NOT
0x42e SWAP1
0x42f SWAP3
0x430 ADD
0x431 SWAP2
0x432 PUSH1 0x20
0x434 SWAP2
0x435 DUP3
0x436 ADD
0x437 SWAP2
0x438 ADD
0x439 PUSH2 0x41e
0x43c JUMP
---
0x428: V348 = M[S0]
0x42a: M[S1] = V348
0x42b: V349 = 0x1f
0x42d: V350 = NOT 0x1f
0x430: V351 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x432: V352 = 0x20
0x436: V353 = ADD 0x20 S1
0x438: V354 = ADD 0x20 S0
0x439: V355 = 0x41e
0x43c: JUMP 0x41e
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V335, V341, V341, V344, V342, S2, S1, S0]
Stack pops: 3
Stack additions: [V351, V353, V354]
Exit stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V335, V341, V341, V344, V342, V351, V353, V354]

================================

Block 0x43d
[0x43d:0x47a]
---
Predecessors: [0x41e]
Successors: [0x47b, 0x596]
---
0x43d JUMPDEST
0x43e MLOAD
0x43f DUP2
0x440 MLOAD
0x441 PUSH1 0x20
0x443 SWAP4
0x444 SWAP1
0x445 SWAP4
0x446 SUB
0x447 PUSH2 0x100
0x44a EXP
0x44b PUSH1 0x0
0x44d NOT
0x44e ADD
0x44f DUP1
0x450 NOT
0x451 SWAP1
0x452 SWAP2
0x453 AND
0x454 SWAP3
0x455 AND
0x456 SWAP2
0x457 SWAP1
0x458 SWAP2
0x459 OR
0x45a SWAP1
0x45b MSTORE
0x45c PUSH1 0x40
0x45e MLOAD
0x45f SWAP3
0x460 ADD
0x461 DUP3
0x462 SWAP1
0x463 SUB
0x464 SWAP1
0x465 SWAP2
0x466 SHA3
0x467 SWAP6
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c PUSH2 0x3e8
0x46f DUP1
0x470 DUP5
0x471 DIV
0x472 MUL
0x473 DUP4
0x474 SUB
0x475 DUP3
0x476 GT
0x477 PUSH2 0x596
0x47a JUMPI
---
0x43d: JUMPDEST 
0x43e: V356 = M[S0]
0x440: V357 = M[S1]
0x441: V358 = 0x20
0x446: V359 = SUB 0x20 S2
0x447: V360 = 0x100
0x44a: V361 = EXP 0x100 V359
0x44b: V362 = 0x0
0x44d: V363 = NOT 0x0
0x44e: V364 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V361
0x450: V365 = NOT V364
0x453: V366 = AND V356 V365
0x455: V367 = AND V357 V364
0x459: V368 = OR V367 V366
0x45b: M[S1] = V368
0x45c: V369 = 0x40
0x45e: V370 = M[0x40]
0x460: V371 = ADD V341 V342
0x463: V372 = SUB V371 V370
0x466: V373 = SHA3 V370 V372
0x46c: V374 = 0x3e8
0x471: V375 = DIV V373 0x3e8
0x472: V376 = MUL V375 0x3e8
0x474: V377 = SUB V373 V376
0x476: V378 = GT S9 V377
0x477: V379 = 0x596
0x47a: JUMPI 0x596 V378
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V335, V341, V341, V344, V342, S2, S1, S0]
Stack pops: 11
Stack additions: [V373, S9, S8]
Exit stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, V373, S9, S8]

================================

Block 0x47b
[0x47b:0x532]
---
Predecessors: [0x43d]
Successors: [0x533]
---
0x47b PUSH1 0x40
0x47d DUP1
0x47e MLOAD
0x47f PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x4a0 PUSH1 0x20
0x4a2 DUP1
0x4a3 DUP4
0x4a4 ADD
0x4a5 SWAP2
0x4a6 SWAP1
0x4a7 SWAP2
0x4a8 MSTORE
0x4a9 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x4ca PUSH1 0x21
0x4cc DUP4
0x4cd ADD
0x4ce MSTORE
0x4cf PUSH13 0x1000000000000000000000000
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 DUP11
0x4e6 AND
0x4e7 MUL
0x4e8 PUSH1 0x22
0x4ea DUP4
0x4eb ADD
0x4ec MSTORE
0x4ed PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x50e PUSH1 0x36
0x510 DUP4
0x511 ADD
0x512 MSTORE
0x513 DUP3
0x514 MLOAD
0x515 PUSH1 0x17
0x517 DUP2
0x518 DUP5
0x519 SUB
0x51a ADD
0x51b DUP2
0x51c MSTORE
0x51d PUSH1 0x37
0x51f SWAP1
0x520 SWAP3
0x521 ADD
0x522 SWAP3
0x523 DUP4
0x524 SWAP1
0x525 MSTORE
0x526 DUP2
0x527 MLOAD
0x528 SWAP2
0x529 SWAP3
0x52a SWAP2
0x52b DUP3
0x52c SWAP2
0x52d DUP5
0x52e ADD
0x52f SWAP1
0x530 DUP1
0x531 DUP4
0x532 DUP4
---
0x47b: V380 = 0x40
0x47e: V381 = M[0x40]
0x47f: V382 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x4a0: V383 = 0x20
0x4a4: V384 = ADD V381 0x20
0x4a8: M[V384] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x4a9: V385 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x4ca: V386 = 0x21
0x4cd: V387 = ADD V381 0x21
0x4ce: M[V387] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x4cf: V388 = 0x1000000000000000000000000
0x4dd: V389 = 0x1
0x4df: V390 = 0xa0
0x4e1: V391 = 0x2
0x4e3: V392 = EXP 0x2 0xa0
0x4e4: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e6: V394 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x4e7: V395 = MUL V394 0x1000000000000000000000000
0x4e8: V396 = 0x22
0x4eb: V397 = ADD V381 0x22
0x4ec: M[V397] = V395
0x4ed: V398 = 0x100000000000000000000000000000000000000000000000000000000000000
0x50e: V399 = 0x36
0x511: V400 = ADD V381 0x36
0x512: M[V400] = 0x100000000000000000000000000000000000000000000000000000000000000
0x514: V401 = M[0x40]
0x515: V402 = 0x17
0x519: V403 = SUB V381 V401
0x51a: V404 = ADD V403 0x17
0x51c: M[V401] = V404
0x51d: V405 = 0x37
0x521: V406 = ADD V381 0x37
0x525: M[0x40] = V406
0x527: V407 = M[V401]
0x52e: V408 = ADD V401 0x20
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, V373, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V401, V406, V406, V408, V407, V407, V406, V408]
Exit stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, V373, S1, S0, V401, V406, V406, V408, V407, V407, V406, V408]

================================

Block 0x533
[0x533:0x53b]
---
Predecessors: [0x47b, 0x53c]
Successors: [0x53c, 0x552]
---
0x533 JUMPDEST
0x534 PUSH1 0x20
0x536 DUP4
0x537 LT
0x538 PUSH2 0x552
0x53b JUMPI
---
0x533: JUMPDEST 
0x534: V409 = 0x20
0x537: V410 = LT S2 0x20
0x538: V411 = 0x552
0x53b: JUMPI 0x552 V410
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V401, V406, V406, V408, V407, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V401, V406, V406, V408, V407, S2, S1, S0]

================================

Block 0x53c
[0x53c:0x551]
---
Predecessors: [0x533]
Successors: [0x533]
---
0x53c DUP1
0x53d MLOAD
0x53e DUP3
0x53f MSTORE
0x540 PUSH1 0x1f
0x542 NOT
0x543 SWAP1
0x544 SWAP3
0x545 ADD
0x546 SWAP2
0x547 PUSH1 0x20
0x549 SWAP2
0x54a DUP3
0x54b ADD
0x54c SWAP2
0x54d ADD
0x54e PUSH2 0x533
0x551 JUMP
---
0x53d: V412 = M[S0]
0x53f: M[S1] = V412
0x540: V413 = 0x1f
0x542: V414 = NOT 0x1f
0x545: V415 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x547: V416 = 0x20
0x54b: V417 = ADD 0x20 S1
0x54d: V418 = ADD 0x20 S0
0x54e: V419 = 0x533
0x551: JUMP 0x533
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V401, V406, V406, V408, V407, S2, S1, S0]
Stack pops: 3
Stack additions: [V415, V417, V418]
Exit stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V401, V406, V406, V408, V407, V415, V417, V418]

================================

Block 0x552
[0x552:0x595]
---
Predecessors: [0x533]
Successors: [0x5a2]
---
0x552 JUMPDEST
0x553 MLOAD
0x554 DUP2
0x555 MLOAD
0x556 PUSH1 0x20
0x558 SWAP4
0x559 SWAP1
0x55a SWAP4
0x55b SUB
0x55c PUSH2 0x100
0x55f EXP
0x560 PUSH1 0x0
0x562 NOT
0x563 ADD
0x564 DUP1
0x565 NOT
0x566 SWAP1
0x567 SWAP2
0x568 AND
0x569 SWAP3
0x56a AND
0x56b SWAP2
0x56c SWAP1
0x56d SWAP2
0x56e OR
0x56f SWAP1
0x570 MSTORE
0x571 PUSH1 0x40
0x573 MLOAD
0x574 SWAP3
0x575 ADD
0x576 DUP3
0x577 SWAP1
0x578 SUB
0x579 SWAP1
0x57a SWAP2
0x57b SHA3
0x57c PUSH1 0x6
0x57e SLOAD
0x57f SWAP1
0x580 SWAP10
0x581 POP
0x582 PUSH1 0x1
0x584 SWAP9
0x585 SWAP1
0x586 SWAP9
0x587 ADD
0x588 SWAP8
0x589 SWAP7
0x58a SWAP1
0x58b SWAP7
0x58c ADD
0x58d SWAP6
0x58e POP
0x58f PUSH2 0x5a2
0x592 SWAP2
0x593 POP
0x594 POP
0x595 JUMP
---
0x552: JUMPDEST 
0x553: V420 = M[S0]
0x555: V421 = M[S1]
0x556: V422 = 0x20
0x55b: V423 = SUB 0x20 S2
0x55c: V424 = 0x100
0x55f: V425 = EXP 0x100 V423
0x560: V426 = 0x0
0x562: V427 = NOT 0x0
0x563: V428 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V425
0x565: V429 = NOT V428
0x568: V430 = AND V420 V429
0x56a: V431 = AND V421 V428
0x56e: V432 = OR V431 V430
0x570: M[S1] = V432
0x571: V433 = 0x40
0x573: V434 = M[0x40]
0x575: V435 = ADD V406 V407
0x578: V436 = SUB V435 V434
0x57b: V437 = SHA3 V434 V436
0x57c: V438 = 0x6
0x57e: V439 = S[0x6]
0x582: V440 = 0x1
0x587: V441 = ADD 0x1 S12
0x58c: V442 = ADD V439 S11
0x58f: V443 = 0x5a2
0x595: JUMP 0x5a2
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V401, V406, V406, V408, V407, S2, S1, S0]
Stack pops: 14
Stack additions: [V437, V441, V442, S10, S9, S8]
Exit stack: [V11, 0x9c, 0x0, 0x0, S22, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, V437, V441, V442, S10, S9, S8]

================================

Block 0x596
[0x596:0x5a1]
---
Predecessors: [0x43d]
Successors: [0x5a2]
---
0x596 JUMPDEST
0x597 PUSH1 0x1
0x599 SWAP1
0x59a POP
0x59b PUSH1 0x7
0x59d SLOAD
0x59e DUP5
0x59f ADD
0x5a0 SWAP4
0x5a1 POP
---
0x596: JUMPDEST 
0x597: V444 = 0x1
0x59b: V445 = 0x7
0x59d: V446 = S[0x7]
0x59f: V447 = ADD S3 V446
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, V373, S1, S0]
Stack pops: 4
Stack additions: [V447, S2, S1, 0x1]
Exit stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, V447, V373, S1, 0x1]

================================

Block 0x5a2
[0x5a2:0x5a6]
---
Predecessors: [0x552, 0x596]
Successors: [0x28f]
---
0x5a2 JUMPDEST
0x5a3 PUSH2 0x28f
0x5a6 JUMP
---
0x5a2: JUMPDEST 
0x5a3: V448 = 0x28f
0x5a6: JUMP 0x28f
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x5a7
[0x5a7:0x5b6]
---
Predecessors: [0x28f]
Successors: [0x145, 0x19e]
---
0x5a7 JUMPDEST
0x5a8 POP
0x5a9 SWAP2
0x5aa SWAP8
0x5ab SWAP3
0x5ac SWAP7
0x5ad POP
0x5ae SWAP3
0x5af SWAP5
0x5b0 POP
0x5b1 SWAP1
0x5b2 SWAP3
0x5b3 POP
0x5b4 POP
0x5b5 POP
0x5b6 JUMP
---
0x5a7: JUMPDEST 
0x5b6: JUMP {0x145, 0x19e}
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, {0x145, 0x19e}, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S3, S4, S5]
Exit stack: [V11, 0x9c, 0x0, 0x0, S14, {0x0, 0x70}, 0x0, 0x0, 0x0, S3, S4, S5]

================================

Block 0x5b7
[0x5b7:0x5b9]
---
Predecessors: [0x162]
Successors: [0x5ba]
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x0
---
0x5b7: JUMPDEST 
0x5b8: V449 = 0x0
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S7, {0x0, 0x70}, S5, S4, S3, 0x16b, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S7, {0x0, 0x70}, S5, S4, S3, 0x16b, S1, S0, 0x0]

================================

Block 0x5ba
[0x5ba:0x5c2]
---
Predecessors: [0x5b7, 0x63f]
Successors: [0x16b, 0x5c3]
---
0x5ba JUMPDEST
0x5bb DUP3
0x5bc DUP2
0x5bd LT
0x5be ISZERO
0x5bf PUSH2 0x16b
0x5c2 JUMPI
---
0x5ba: JUMPDEST 
0x5bd: V450 = LT S0 S2
0x5be: V451 = ISZERO V450
0x5bf: V452 = 0x16b
0x5c2: JUMPI 0x16b V451
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, S0]

================================

Block 0x5c3
[0x5c3:0x5ce]
---
Predecessors: [0x5ba]
Successors: [0x5cf, 0x61b]
---
0x5c3 PUSH1 0x1
0x5c5 DUP2
0x5c6 ADD
0x5c7 SWAP1
0x5c8 DUP4
0x5c9 EQ
0x5ca ISZERO
0x5cb PUSH2 0x61b
0x5ce JUMPI
---
0x5c3: V453 = 0x1
0x5c6: V454 = ADD S0 0x1
0x5c9: V455 = EQ S2 S0
0x5ca: V456 = ISZERO V455
0x5cb: V457 = 0x61b
0x5ce: JUMPI 0x61b V456
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V454]
Exit stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, V454]

================================

Block 0x5cf
[0x5cf:0x5fb]
---
Predecessors: [0x5c3]
Successors: [0x649]
---
0x5cf PUSH1 0x40
0x5d1 MLOAD
0x5d2 PUSH1 0x1
0x5d4 PUSH1 0xa0
0x5d6 PUSH1 0x2
0x5d8 EXP
0x5d9 SUB
0x5da DUP4
0x5db AND
0x5dc SWAP1
0x5dd PUSH8 0x16345785d8a0000
0x5e6 SWAP1
0x5e7 PUSH1 0x0
0x5e9 DUP2
0x5ea DUP2
0x5eb DUP2
0x5ec DUP6
0x5ed DUP8
0x5ee GAS
0x5ef CALL
0x5f0 SWAP3
0x5f1 POP
0x5f2 POP
0x5f3 POP
0x5f4 POP
0x5f5 PUSH2 0x5fc
0x5f8 PUSH2 0x649
0x5fb JUMP
---
0x5cf: V458 = 0x40
0x5d1: V459 = M[0x40]
0x5d2: V460 = 0x1
0x5d4: V461 = 0xa0
0x5d6: V462 = 0x2
0x5d8: V463 = EXP 0x2 0xa0
0x5d9: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5db: V465 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V466 = 0x16345785d8a0000
0x5e7: V467 = 0x0
0x5ee: V468 = GAS
0x5ef: V469 = CALL V468 V465 0x16345785d8a0000 V459 0x0 V459 0x0
0x5f5: V470 = 0x5fc
0x5f8: V471 = 0x649
0x5fb: JUMP 0x649
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, V454]
Stack pops: 2
Stack additions: [S1, S0, 0x5fc]
Exit stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, V454, 0x5fc]

================================

Block 0x5fc
[0x5fc:0x60e]
---
Predecessors: [0x649]
Successors: [0x60f, 0x618]
---
0x5fc JUMPDEST
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 DUP1
0x601 SWAP2
0x602 SUB
0x603 SWAP1
0x604 PUSH1 0x0
0x606 CREATE
0x607 DUP1
0x608 ISZERO
0x609 DUP1
0x60a ISZERO
0x60b PUSH2 0x618
0x60e JUMPI
---
0x5fc: JUMPDEST 
0x5fd: V472 = 0x40
0x5ff: V473 = M[0x40]
0x602: V474 = SUB V505 V473
0x604: V475 = 0x0
0x606: V476 = CREATE 0x0 V473 V474
0x608: V477 = ISZERO V476
0x60a: V478 = ISZERO V477
0x60b: V479 = 0x618
0x60e: JUMPI 0x618 V478
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, V505]
Stack pops: 1
Stack additions: [V476, V477]
Exit stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, V476, V477]

================================

Block 0x60f
[0x60f:0x617]
---
Predecessors: [0x5fc]
Successors: []
---
0x60f RETURNDATASIZE
0x610 PUSH1 0x0
0x612 DUP1
0x613 RETURNDATACOPY
0x614 RETURNDATASIZE
0x615 PUSH1 0x0
0x617 REVERT
---
0x60f: V480 = RETURNDATASIZE
0x610: V481 = 0x0
0x613: RETURNDATACOPY 0x0 0x0 V480
0x614: V482 = RETURNDATASIZE
0x615: V483 = 0x0
0x617: REVERT 0x0 V482
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V454, V476, V477]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V454, V476, V477]

================================

Block 0x618
[0x618:0x61a]
---
Predecessors: [0x5fc]
Successors: [0x61b]
---
0x618 JUMPDEST
0x619 POP
0x61a POP
---
0x618: JUMPDEST 
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V454, V476, V477]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V454]

================================

Block 0x61b
[0x61b:0x622]
---
Predecessors: [0x5c3, 0x618]
Successors: [0x659]
---
0x61b JUMPDEST
0x61c PUSH2 0x623
0x61f PUSH2 0x659
0x622 JUMP
---
0x61b: JUMPDEST 
0x61c: V484 = 0x623
0x61f: V485 = 0x659
0x622: JUMP 0x659
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, V454]
Stack pops: 0
Stack additions: [0x623]
Exit stack: [V11, 0x9c, 0x0, 0x0, S8, {0x0, 0x70}, S6, S5, S4, 0x16b, S2, S1, V454, 0x623]

================================

Block 0x623
[0x623:0x635]
---
Predecessors: [0x659]
Successors: [0x636, 0x63f]
---
0x623 JUMPDEST
0x624 PUSH1 0x40
0x626 MLOAD
0x627 DUP1
0x628 SWAP2
0x629 SUB
0x62a SWAP1
0x62b PUSH1 0x0
0x62d CREATE
0x62e DUP1
0x62f ISZERO
0x630 DUP1
0x631 ISZERO
0x632 PUSH2 0x63f
0x635 JUMPI
---
0x623: JUMPDEST 
0x624: V486 = 0x40
0x626: V487 = M[0x40]
0x629: V488 = SUB V510 V487
0x62b: V489 = 0x0
0x62d: V490 = CREATE 0x0 V487 V488
0x62f: V491 = ISZERO V490
0x631: V492 = ISZERO V491
0x632: V493 = 0x63f
0x635: JUMPI 0x63f V492
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, V510]
Stack pops: 1
Stack additions: [V490, V491]
Exit stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, V490, V491]

================================

Block 0x636
[0x636:0x63e]
---
Predecessors: [0x623]
Successors: []
---
0x636 RETURNDATASIZE
0x637 PUSH1 0x0
0x639 DUP1
0x63a RETURNDATACOPY
0x63b RETURNDATASIZE
0x63c PUSH1 0x0
0x63e REVERT
---
0x636: V494 = RETURNDATASIZE
0x637: V495 = 0x0
0x63a: RETURNDATACOPY 0x0 0x0 V494
0x63b: V496 = RETURNDATASIZE
0x63c: V497 = 0x0
0x63e: REVERT 0x0 V496
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V454, V490, V491]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V454, V490, V491]

================================

Block 0x63f
[0x63f:0x648]
---
Predecessors: [0x623]
Successors: [0x5ba]
---
0x63f JUMPDEST
0x640 POP
0x641 POP
0x642 PUSH1 0x1
0x644 ADD
0x645 PUSH2 0x5ba
0x648 JUMP
---
0x63f: JUMPDEST 
0x642: V498 = 0x1
0x644: V499 = ADD 0x1 V454
0x645: V500 = 0x5ba
0x648: JUMP 0x5ba
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V454, V490, V491]
Stack pops: 3
Stack additions: [V499]
Exit stack: [V11, 0x9c, 0x0, 0x0, S10, {0x0, 0x70}, S8, S7, S6, 0x16b, S4, S3, V499]

================================

Block 0x649
[0x649:0x658]
---
Predecessors: [0x5cf]
Successors: [0x5fc]
---
0x649 JUMPDEST
0x64a PUSH1 0x40
0x64c MLOAD
0x64d PUSH2 0x11b
0x650 DUP1
0x651 PUSH2 0x669
0x654 DUP4
0x655 CODECOPY
0x656 ADD
0x657 SWAP1
0x658 JUMP
---
0x649: JUMPDEST 
0x64a: V501 = 0x40
0x64c: V502 = M[0x40]
0x64d: V503 = 0x11b
0x651: V504 = 0x669
0x655: CODECOPY V502 0x669 0x11b
0x656: V505 = ADD 0x11b V502
0x658: JUMP 0x5fc
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, 0x5fc]
Stack pops: 1
Stack additions: [V505]
Exit stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, V505]

================================

Block 0x659
[0x659:0x667]
---
Predecessors: [0x61b]
Successors: [0x623]
---
0x659 JUMPDEST
0x65a PUSH1 0x40
0x65c MLOAD
0x65d PUSH1 0x52
0x65f DUP1
0x660 PUSH2 0x784
0x663 DUP4
0x664 CODECOPY
0x665 ADD
0x666 SWAP1
0x667 JUMP
---
0x659: JUMPDEST 
0x65a: V506 = 0x40
0x65c: V507 = M[0x40]
0x65d: V508 = 0x52
0x660: V509 = 0x784
0x664: CODECOPY V507 0x784 0x52
0x665: V510 = ADD 0x52 V507
0x667: JUMP 0x623
---
Entry stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, 0x623]
Stack pops: 1
Stack additions: [V510]
Exit stack: [V11, 0x9c, 0x0, 0x0, S9, {0x0, 0x70}, S7, S6, S5, 0x16b, S3, S2, V454, V510]

================================

Block 0x668
[0x668:0x699]
---
Predecessors: []
Successors: [0x69a]
---
0x668 STOP
0x669 PUSH1 0x80
0x66b PUSH1 0x40
0x66d MSTORE
0x66e PUSH1 0x0
0x670 DUP1
0x671 SLOAD
0x672 PUSH1 0x1
0x674 PUSH1 0xa0
0x676 PUSH1 0x2
0x678 EXP
0x679 SUB
0x67a NOT
0x67b AND
0x67c PUSH20 0xa62142888aba8370742be823c1782d17a0389da1
0x691 OR
0x692 SWAP1
0x693 SSTORE
0x694 CALLVALUE
0x695 DUP1
0x696 ISZERO
0x697 PUSH1 0x35
0x699 JUMPI
---
0x668: STOP 
0x669: V511 = 0x80
0x66b: V512 = 0x40
0x66d: M[0x40] = 0x80
0x66e: V513 = 0x0
0x671: V514 = S[0x0]
0x672: V515 = 0x1
0x674: V516 = 0xa0
0x676: V517 = 0x2
0x678: V518 = EXP 0x2 0xa0
0x679: V519 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67a: V520 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x67b: V521 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V514
0x67c: V522 = 0xa62142888aba8370742be823c1782d17a0389da1
0x691: V523 = OR 0xa62142888aba8370742be823c1782d17a0389da1 V521
0x693: S[0x0] = V523
0x694: V524 = CALLVALUE
0x696: V525 = ISZERO V524
0x697: V526 = 0x35
0x699: THROWI V525
---
Entry stack: []
Stack pops: 0
Stack additions: [V524]
Exit stack: []

================================

Block 0x69a
[0x69a:0x6cd]
---
Predecessors: [0x668]
Successors: [0x6ce]
---
0x69a PUSH1 0x0
0x69c DUP1
0x69d REVERT
0x69e JUMPDEST
0x69f POP
0x6a0 PUSH1 0x0
0x6a2 DUP1
0x6a3 SLOAD
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 PUSH1 0x1
0x6a9 PUSH1 0xa0
0x6ab PUSH1 0x2
0x6ad EXP
0x6ae SUB
0x6af SWAP1
0x6b0 SWAP2
0x6b1 AND
0x6b2 SWAP2
0x6b3 PUSH8 0x16345785d8a0000
0x6bc SWAP2
0x6bd SWAP1
0x6be DUP2
0x6bf DUP2
0x6c0 DUP2
0x6c1 DUP6
0x6c2 DUP8
0x6c3 GAS
0x6c4 CALL
0x6c5 SWAP3
0x6c6 POP
0x6c7 POP
0x6c8 POP
0x6c9 ISZERO
0x6ca ISZERO
0x6cb PUSH1 0xd8
0x6cd JUMPI
---
0x69a: V527 = 0x0
0x69d: REVERT 0x0 0x0
0x69e: JUMPDEST 
0x6a0: V528 = 0x0
0x6a3: V529 = S[0x0]
0x6a4: V530 = 0x40
0x6a6: V531 = M[0x40]
0x6a7: V532 = 0x1
0x6a9: V533 = 0xa0
0x6ab: V534 = 0x2
0x6ad: V535 = EXP 0x2 0xa0
0x6ae: V536 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b1: V537 = AND V529 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: V538 = 0x16345785d8a0000
0x6c3: V539 = GAS
0x6c4: V540 = CALL V539 V537 0x16345785d8a0000 V531 0x0 V531 0x0
0x6c9: V541 = ISZERO V540
0x6ca: V542 = ISZERO V541
0x6cb: V543 = 0xd8
0x6cd: THROWI V542
---
Entry stack: [V524]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6ce
[0x6ce:0x721]
---
Predecessors: [0x69a]
Successors: [0x722]
---
0x6ce PUSH1 0x0
0x6d0 DUP1
0x6d1 SLOAD
0x6d2 PUSH1 0x40
0x6d4 DUP1
0x6d5 MLOAD
0x6d6 PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x6f7 DUP2
0x6f8 MSTORE
0x6f9 SWAP1
0x6fa MLOAD
0x6fb PUSH1 0x1
0x6fd PUSH1 0xa0
0x6ff PUSH1 0x2
0x701 EXP
0x702 SUB
0x703 SWAP1
0x704 SWAP3
0x705 AND
0x706 SWAP3
0x707 PUSH4 0x3ccfd60b
0x70c SWAP3
0x70d PUSH1 0x4
0x70f DUP1
0x710 DUP5
0x711 ADD
0x712 SWAP4
0x713 DUP3
0x714 SWAP1
0x715 SUB
0x716 ADD
0x717 DUP2
0x718 DUP4
0x719 DUP8
0x71a DUP1
0x71b EXTCODESIZE
0x71c ISZERO
0x71d DUP1
0x71e ISZERO
0x71f PUSH1 0xbd
0x721 JUMPI
---
0x6ce: V544 = 0x0
0x6d1: V545 = S[0x0]
0x6d2: V546 = 0x40
0x6d5: V547 = M[0x40]
0x6d6: V548 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x6f8: M[V547] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x6fa: V549 = M[0x40]
0x6fb: V550 = 0x1
0x6fd: V551 = 0xa0
0x6ff: V552 = 0x2
0x701: V553 = EXP 0x2 0xa0
0x702: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x705: V555 = AND V545 0xffffffffffffffffffffffffffffffffffffffff
0x707: V556 = 0x3ccfd60b
0x70d: V557 = 0x4
0x711: V558 = ADD V547 0x4
0x715: V559 = SUB V547 V549
0x716: V560 = ADD V559 0x4
0x71b: V561 = EXTCODESIZE V555
0x71c: V562 = ISZERO V561
0x71e: V563 = ISZERO V562
0x71f: V564 = 0xbd
0x721: THROWI V563
---
Entry stack: []
Stack pops: 0
Stack additions: [V555, 0x3ccfd60b, V558, 0x0, V549, V560, V549, 0x0, V555, V562]
Exit stack: [V555, 0x3ccfd60b, V558, 0x0, V549, V560, V549, 0x0, V555, V562]

================================

Block 0x722
[0x722:0x72f]
---
Predecessors: [0x6ce]
Successors: [0x730]
---
0x722 PUSH1 0x0
0x724 DUP1
0x725 REVERT
0x726 JUMPDEST
0x727 POP
0x728 GAS
0x729 CALL
0x72a ISZERO
0x72b DUP1
0x72c ISZERO
0x72d PUSH1 0xd0
0x72f JUMPI
---
0x722: V565 = 0x0
0x725: REVERT 0x0 0x0
0x726: JUMPDEST 
0x728: V566 = GAS
0x729: V567 = CALL V566 S1 S2 S3 S4 S5 S6
0x72a: V568 = ISZERO V567
0x72c: V569 = ISZERO V568
0x72d: V570 = 0xd0
0x72f: THROWI V569
---
Entry stack: [V555, 0x3ccfd60b, V558, 0x0, V549, V560, V549, 0x0, V555, V562]
Stack pops: 0
Stack additions: [V568]
Exit stack: []

================================

Block 0x730
[0x730:0x80e]
---
Predecessors: [0x722]
Successors: []
---
0x730 RETURNDATASIZE
0x731 PUSH1 0x0
0x733 DUP1
0x734 RETURNDATACOPY
0x735 RETURNDATASIZE
0x736 PUSH1 0x0
0x738 REVERT
0x739 JUMPDEST
0x73a POP
0x73b CALLER
0x73c SWAP3
0x73d POP
0x73e POP
0x73f POP
0x740 SELFDESTRUCT
0x741 JUMPDEST
0x742 PUSH1 0x35
0x744 DUP1
0x745 PUSH2 0xe6
0x748 PUSH1 0x0
0x74a CODECOPY
0x74b PUSH1 0x0
0x74d RETURN
0x74e STOP
0x74f PUSH1 0x80
0x751 PUSH1 0x40
0x753 MSTORE
0x754 PUSH1 0x0
0x756 DUP1
0x757 REVERT
0x758 STOP
0x759 LOG1
0x75a PUSH6 0x627a7a723058
0x761 SHA3
0x762 PUSH15 0xe98033a74bf8e3e59422a2d35755cf
0x772 DUP7
0x773 PUSH28 0x1fc552165f7fefa0d19cfeffedf500296080604052348015600f5760
0x790 STOP
0x791 DUP1
0x792 REVERT
0x793 JUMPDEST
0x794 POP
0x795 PUSH1 0x35
0x797 DUP1
0x798 PUSH1 0x1d
0x79a PUSH1 0x0
0x79c CODECOPY
0x79d PUSH1 0x0
0x79f RETURN
0x7a0 STOP
0x7a1 PUSH1 0x80
0x7a3 PUSH1 0x40
0x7a5 MSTORE
0x7a6 PUSH1 0x0
0x7a8 DUP1
0x7a9 REVERT
0x7aa STOP
0x7ab LOG1
0x7ac PUSH6 0x627a7a723058
0x7b3 SHA3
0x7b4 SSTORE
0x7b5 PC
0x7b6 MISSING 0xf
0x7b7 MISSING 0xd7
0x7b8 MISSING 0xb0
0x7b9 PUSH24 0xde45dfe0a3f4d33b1fc5513392b56c5c9576ec8a988d6c99
0x7d2 SWAP12
0x7d3 MISSING 0xed
0x7d4 STOP
0x7d5 MISSING 0x29
0x7d6 LOG1
0x7d7 PUSH6 0x627a7a723058
0x7de SHA3
0x7df MISSING 0xd9
0x7e0 JUMPDEST
0x7e1 MISSING 0xea
0x7e2 MISSING 0xa6
0x7e3 SIGNEXTEND
0x7e4 MISSING 0xdb
0x7e5 DUP2
0x7e6 RETURNDATASIZE
0x7e7 MISSING 0x48
0x7e8 SDIV
0x7e9 MISSING 0xe2
0x7ea MUL
0x7eb SWAP2
0x7ec MISSING 0x21
0x7ed MISSING 0xed
0x7ee MISSING 0x1e
0x7ef MISSING 0xd
0x7f0 MISSING 0xe5
0x7f1 MISSING 0x47
0x7f2 MISSING 0xed
0x7f3 PUSH27 0x14f978f543c75896ce9d3f0029
---
0x730: V571 = RETURNDATASIZE
0x731: V572 = 0x0
0x734: RETURNDATACOPY 0x0 0x0 V571
0x735: V573 = RETURNDATASIZE
0x736: V574 = 0x0
0x738: REVERT 0x0 V573
0x739: JUMPDEST 
0x73b: V575 = CALLER
0x740: SELFDESTRUCT V575
0x741: JUMPDEST 
0x742: V576 = 0x35
0x745: V577 = 0xe6
0x748: V578 = 0x0
0x74a: CODECOPY 0x0 0xe6 0x35
0x74b: V579 = 0x0
0x74d: RETURN 0x0 0x35
0x74e: STOP 
0x74f: V580 = 0x80
0x751: V581 = 0x40
0x753: M[0x40] = 0x80
0x754: V582 = 0x0
0x757: REVERT 0x0 0x0
0x758: STOP 
0x759: LOG S0 S1 S2
0x75a: V583 = 0x627a7a723058
0x761: V584 = SHA3 0x627a7a723058 S3
0x762: V585 = 0xe98033a74bf8e3e59422a2d35755cf
0x773: V586 = 0x1fc552165f7fefa0d19cfeffedf500296080604052348015600f5760
0x790: STOP 
0x792: REVERT S0 S0
0x793: JUMPDEST 
0x795: V587 = 0x35
0x798: V588 = 0x1d
0x79a: V589 = 0x0
0x79c: CODECOPY 0x0 0x1d 0x35
0x79d: V590 = 0x0
0x79f: RETURN 0x0 0x35
0x7a0: STOP 
0x7a1: V591 = 0x80
0x7a3: V592 = 0x40
0x7a5: M[0x40] = 0x80
0x7a6: V593 = 0x0
0x7a9: REVERT 0x0 0x0
0x7aa: STOP 
0x7ab: LOG S0 S1 S2
0x7ac: V594 = 0x627a7a723058
0x7b3: V595 = SHA3 0x627a7a723058 S3
0x7b4: S[V595] = S4
0x7b5: V596 = PC
0x7b6: MISSING 0xf
0x7b7: MISSING 0xd7
0x7b8: MISSING 0xb0
0x7b9: V597 = 0xde45dfe0a3f4d33b1fc5513392b56c5c9576ec8a988d6c99
0x7d3: MISSING 0xed
0x7d4: STOP 
0x7d5: MISSING 0x29
0x7d6: LOG S0 S1 S2
0x7d7: V598 = 0x627a7a723058
0x7de: V599 = SHA3 0x627a7a723058 S3
0x7df: MISSING 0xd9
0x7e0: JUMPDEST 
0x7e1: MISSING 0xea
0x7e2: MISSING 0xa6
0x7e3: V600 = SIGNEXTEND S0 S1
0x7e4: MISSING 0xdb
0x7e6: V601 = RETURNDATASIZE
0x7e7: MISSING 0x48
0x7e8: V602 = SDIV S0 S1
0x7e9: MISSING 0xe2
0x7ea: V603 = MUL S0 S1
0x7ec: MISSING 0x21
0x7ed: MISSING 0xed
0x7ee: MISSING 0x1e
0x7ef: MISSING 0xd
0x7f0: MISSING 0xe5
0x7f1: MISSING 0x47
0x7f2: MISSING 0xed
0x7f3: V604 = 0x14f978f543c75896ce9d3f0029
---
Entry stack: [V568]
Stack pops: 0
Stack additions: [0x1fc552165f7fefa0d19cfeffedf500296080604052348015600f5760, S8, 0xe98033a74bf8e3e59422a2d35755cf, V584, S4, S5, S6, S7, S8, V596, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0xde45dfe0a3f4d33b1fc5513392b56c5c9576ec8a988d6c99, V599, V600, V601, S1, S0, S1, V602, S3, S2, V603, 0x14f978f543c75896ce9d3f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x5b
Exit block: 0x70
Body: 0x5b, 0x63, 0x67, 0x70, 0xcb, 0xde, 0xe2, 0x113, 0x11c

Function 1:
Public function signature: 0xc2381296
Entry block: 0x72
Exit block: 0x636
Body: 0x70, 0x72, 0x7a, 0x7e, 0x9c, 0x11f, 0x139, 0x13d, 0x145, 0x162, 0x16b, 0x5b7, 0x5ba, 0x5c3, 0x5cf, 0x5fc, 0x60f, 0x618, 0x61b, 0x623, 0x636, 0x63f, 0x649, 0x659

Function 2:
Public function signature: 0xf8a8fd6d
Entry block: 0x87
Exit block: 0x9c
Body: 0x87, 0x8f, 0x93, 0x9c, 0x170, 0x192, 0x196, 0x19e, 0x1bb, 0x1cd, 0x1e3

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

Function 4:
Private function
Entry block: 0x1ec
Exit block: 0x5a7
Body: 0x1ec, 0x25c, 0x270, 0x286, 0x28f, 0x297, 0x2e9, 0x2f2, 0x308, 0x33e, 0x392, 0x39b, 0x3b1, 0x3e7, 0x41e, 0x427, 0x43d, 0x47b, 0x533, 0x53c, 0x552, 0x596, 0x5a2, 0x5a7

