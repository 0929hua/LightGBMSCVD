Block 0x0
[0x0:0x12]
---
Predecessors: []
Successors: [0x13, 0x17]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 PUSH1 0x0
0xa CALLVALUE
0xb LT
0xc ISZERO
0xd ISZERO
0xe ISZERO
0xf PUSH2 0x17
0x12 JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x0
0x8: V3 = 0x0
0xa: V4 = CALLVALUE
0xb: V5 = LT V4 0x0
0xc: V6 = ISZERO V5
0xd: V7 = ISZERO V6
0xe: V8 = ISZERO V7
0xf: V9 = 0x17
0x12: JUMPI 0x17 V8
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [0x0, 0x0]

================================

Block 0x13
[0x13:0x16]
---
Predecessors: [0x0]
Successors: []
---
0x13 PUSH1 0x0
0x15 DUP1
0x16 REVERT
---
0x13: V10 = 0x0
0x16: REVERT 0x0 0x0
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, 0x0]

================================

Block 0x17
[0x17:0x42]
---
Predecessors: [0x0]
Successors: [0x43, 0x44]
---
0x17 JUMPDEST
0x18 PUSH1 0x0
0x1a DUP1
0x1b SWAP1
0x1c SLOAD
0x1d SWAP1
0x1e PUSH2 0x100
0x21 EXP
0x22 SWAP1
0x23 DIV
0x24 PUSH1 0x1
0x26 PUSH1 0xa0
0x28 PUSH1 0x2
0x2a EXP
0x2b SUB
0x2c AND
0x2d PUSH1 0x1
0x2f PUSH1 0xa0
0x31 PUSH1 0x2
0x33 EXP
0x34 SUB
0x35 AND
0x36 PUSH2 0x8fc
0x39 PUSH1 0xa
0x3b CALLVALUE
0x3c DUP2
0x3d ISZERO
0x3e ISZERO
0x3f PUSH2 0x44
0x42 JUMPI
---
0x17: JUMPDEST 
0x18: V11 = 0x0
0x1c: V12 = S[0x0]
0x1e: V13 = 0x100
0x21: V14 = EXP 0x100 0x0
0x23: V15 = DIV V12 0x1
0x24: V16 = 0x1
0x26: V17 = 0xa0
0x28: V18 = 0x2
0x2a: V19 = EXP 0x2 0xa0
0x2b: V20 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V15
0x2d: V22 = 0x1
0x2f: V23 = 0xa0
0x31: V24 = 0x2
0x33: V25 = EXP 0x2 0xa0
0x34: V26 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x36: V28 = 0x8fc
0x39: V29 = 0xa
0x3b: V30 = CALLVALUE
0x3d: V31 = ISZERO 0xa
0x3e: V32 = ISZERO 0x0
0x3f: V33 = 0x44
0x42: JUMPI 0x44 0x1
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [V27, 0x8fc, 0xa, V30]
Exit stack: [0x0, 0x0, V27, 0x8fc, 0xa, V30]

================================

Block 0x43
[0x43:0x43]
---
Predecessors: [0x17]
Successors: []
---
0x43 INVALID
---
0x43: INVALID 
---
Entry stack: [0x0, 0x0, V27, 0x8fc, 0xa, V30]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, 0x0, V27, 0x8fc, 0xa, V30]

================================

Block 0x44
[0x44:0x92]
---
Predecessors: [0x17]
Successors: [0x93, 0x18f]
---
0x44 JUMPDEST
0x45 DIV
0x46 SWAP1
0x47 DUP2
0x48 ISZERO
0x49 MUL
0x4a SWAP1
0x4b PUSH1 0x40
0x4d MLOAD
0x4e PUSH1 0x0
0x50 PUSH1 0x40
0x52 MLOAD
0x53 DUP1
0x54 DUP4
0x55 SUB
0x56 DUP2
0x57 DUP6
0x58 DUP9
0x59 DUP9
0x5a CALL
0x5b SWAP4
0x5c POP
0x5d POP
0x5e POP
0x5f POP
0x60 POP
0x61 TIMESTAMP
0x62 SWAP2
0x63 POP
0x64 PUSH1 0x2
0x66 PUSH1 0x0
0x68 CALLER
0x69 PUSH1 0x1
0x6b PUSH1 0xa0
0x6d PUSH1 0x2
0x6f EXP
0x70 SUB
0x71 AND
0x72 PUSH1 0x1
0x74 PUSH1 0xa0
0x76 PUSH1 0x2
0x78 EXP
0x79 SUB
0x7a AND
0x7b DUP2
0x7c MSTORE
0x7d PUSH1 0x20
0x7f ADD
0x80 SWAP1
0x81 DUP2
0x82 MSTORE
0x83 PUSH1 0x20
0x85 ADD
0x86 PUSH1 0x0
0x88 SHA3
0x89 SLOAD
0x8a PUSH1 0x0
0x8c EQ
0x8d ISZERO
0x8e ISZERO
0x8f PUSH2 0x18f
0x92 JUMPI
---
0x44: JUMPDEST 
0x45: V34 = DIV V30 0xa
0x48: V35 = ISZERO V34
0x49: V36 = MUL V35 0x8fc
0x4b: V37 = 0x40
0x4d: V38 = M[0x40]
0x4e: V39 = 0x0
0x50: V40 = 0x40
0x52: V41 = M[0x40]
0x55: V42 = SUB V38 V41
0x5a: V43 = CALL V36 V27 V34 V41 V42 V41 0x0
0x61: V44 = TIMESTAMP
0x64: V45 = 0x2
0x66: V46 = 0x0
0x68: V47 = CALLER
0x69: V48 = 0x1
0x6b: V49 = 0xa0
0x6d: V50 = 0x2
0x6f: V51 = EXP 0x2 0xa0
0x70: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x72: V54 = 0x1
0x74: V55 = 0xa0
0x76: V56 = 0x2
0x78: V57 = EXP 0x2 0xa0
0x79: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x7c: M[0x0] = V59
0x7d: V60 = 0x20
0x7f: V61 = ADD 0x20 0x0
0x82: M[0x20] = 0x2
0x83: V62 = 0x20
0x85: V63 = ADD 0x20 0x20
0x86: V64 = 0x0
0x88: V65 = SHA3 0x0 0x40
0x89: V66 = S[V65]
0x8a: V67 = 0x0
0x8c: V68 = EQ 0x0 V66
0x8d: V69 = ISZERO V68
0x8e: V70 = ISZERO V69
0x8f: V71 = 0x18f
0x92: JUMPI 0x18f V70
---
Entry stack: [0x0, 0x0, V27, 0x8fc, 0xa, V30]
Stack pops: 6
Stack additions: [V44, S4]
Exit stack: [V44, 0x0]

================================

Block 0x93
[0x93:0xf1]
---
Predecessors: [0x44]
Successors: [0xf2, 0xf3]
---
0x93 PUSH3 0x15180
0x97 PUSH1 0x3
0x99 PUSH1 0x0
0x9b CALLER
0x9c PUSH1 0x1
0x9e PUSH1 0xa0
0xa0 PUSH1 0x2
0xa2 EXP
0xa3 SUB
0xa4 AND
0xa5 PUSH1 0x1
0xa7 PUSH1 0xa0
0xa9 PUSH1 0x2
0xab EXP
0xac SUB
0xad AND
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP1
0xb4 DUP2
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 PUSH1 0x0
0xbb SHA3
0xbc SLOAD
0xbd DUP4
0xbe SUB
0xbf PUSH1 0x64
0xc1 PUSH1 0x1
0xc3 SLOAD
0xc4 PUSH1 0x2
0xc6 PUSH1 0x0
0xc8 CALLER
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 AND
0xd2 PUSH1 0x1
0xd4 PUSH1 0xa0
0xd6 PUSH1 0x2
0xd8 EXP
0xd9 SUB
0xda AND
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 PUSH1 0x0
0xe8 SHA3
0xe9 SLOAD
0xea MUL
0xeb DUP2
0xec ISZERO
0xed ISZERO
0xee PUSH2 0xf3
0xf1 JUMPI
---
0x93: V72 = 0x15180
0x97: V73 = 0x3
0x99: V74 = 0x0
0x9b: V75 = CALLER
0x9c: V76 = 0x1
0x9e: V77 = 0xa0
0xa0: V78 = 0x2
0xa2: V79 = EXP 0x2 0xa0
0xa3: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xa5: V82 = 0x1
0xa7: V83 = 0xa0
0xa9: V84 = 0x2
0xab: V85 = EXP 0x2 0xa0
0xac: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0xaf: M[0x0] = V87
0xb0: V88 = 0x20
0xb2: V89 = ADD 0x20 0x0
0xb5: M[0x20] = 0x3
0xb6: V90 = 0x20
0xb8: V91 = ADD 0x20 0x20
0xb9: V92 = 0x0
0xbb: V93 = SHA3 0x0 0x40
0xbc: V94 = S[V93]
0xbe: V95 = SUB V44 V94
0xbf: V96 = 0x64
0xc1: V97 = 0x1
0xc3: V98 = S[0x1]
0xc4: V99 = 0x2
0xc6: V100 = 0x0
0xc8: V101 = CALLER
0xc9: V102 = 0x1
0xcb: V103 = 0xa0
0xcd: V104 = 0x2
0xcf: V105 = EXP 0x2 0xa0
0xd0: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0xd2: V108 = 0x1
0xd4: V109 = 0xa0
0xd6: V110 = 0x2
0xd8: V111 = EXP 0x2 0xa0
0xd9: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0xdc: M[0x0] = V113
0xdd: V114 = 0x20
0xdf: V115 = ADD 0x20 0x0
0xe2: M[0x20] = 0x2
0xe3: V116 = 0x20
0xe5: V117 = ADD 0x20 0x20
0xe6: V118 = 0x0
0xe8: V119 = SHA3 0x0 0x40
0xe9: V120 = S[V119]
0xea: V121 = MUL V120 V98
0xec: V122 = ISZERO 0x64
0xed: V123 = ISZERO 0x0
0xee: V124 = 0xf3
0xf1: JUMPI 0xf3 0x1
---
Entry stack: [V44, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x15180, V95, 0x64, V121]
Exit stack: [V44, 0x0, 0x15180, V95, 0x64, V121]

================================

Block 0xf2
[0xf2:0xf2]
---
Predecessors: [0x93]
Successors: []
---
0xf2 INVALID
---
0xf2: INVALID 
---
Entry stack: [V44, 0x0, 0x15180, V95, 0x64, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V44, 0x0, 0x15180, V95, 0x64, V121]

================================

Block 0xf3
[0xf3:0xfc]
---
Predecessors: [0x93]
Successors: [0xfd, 0xfe]
---
0xf3 JUMPDEST
0xf4 DIV
0xf5 MUL
0xf6 DUP2
0xf7 ISZERO
0xf8 ISZERO
0xf9 PUSH2 0xfe
0xfc JUMPI
---
0xf3: JUMPDEST 
0xf4: V125 = DIV V121 0x64
0xf5: V126 = MUL V125 V95
0xf7: V127 = ISZERO 0x15180
0xf8: V128 = ISZERO 0x0
0xf9: V129 = 0xfe
0xfc: JUMPI 0xfe 0x1
---
Entry stack: [V44, 0x0, 0x15180, V95, 0x64, V121]
Stack pops: 4
Stack additions: [S3, V126]
Exit stack: [V44, 0x0, 0x15180, V126]

================================

Block 0xfd
[0xfd:0xfd]
---
Predecessors: [0xf3]
Successors: []
---
0xfd INVALID
---
0xfd: INVALID 
---
Entry stack: [V44, 0x0, 0x15180, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V44, 0x0, 0x15180, V126]

================================

Block 0xfe
[0xfe:0x113]
---
Predecessors: [0xf3]
Successors: [0x114, 0x120]
---
0xfe JUMPDEST
0xff DIV
0x100 SWAP1
0x101 POP
0x102 DUP1
0x103 ADDRESS
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c AND
0x10d BALANCE
0x10e LT
0x10f ISZERO
0x110 PUSH2 0x120
0x113 JUMPI
---
0xfe: JUMPDEST 
0xff: V130 = DIV V126 0x15180
0x103: V131 = ADDRESS
0x104: V132 = 0x1
0x106: V133 = 0xa0
0x108: V134 = 0x2
0x10a: V135 = EXP 0x2 0xa0
0x10b: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x10d: V138 = BALANCE V137
0x10e: V139 = LT V138 V130
0x10f: V140 = ISZERO V139
0x110: V141 = 0x120
0x113: JUMPI 0x120 V140
---
Entry stack: [V44, 0x0, 0x15180, V126]
Stack pops: 3
Stack additions: [V130]
Exit stack: [V44, V130]

================================

Block 0x114
[0x114:0x11f]
---
Predecessors: [0xfe]
Successors: [0x120]
---
0x114 POP
0x115 PUSH1 0x1
0x117 PUSH1 0xa0
0x119 PUSH1 0x2
0x11b EXP
0x11c SUB
0x11d ADDRESS
0x11e AND
0x11f BALANCE
---
0x115: V142 = 0x1
0x117: V143 = 0xa0
0x119: V144 = 0x2
0x11b: V145 = EXP 0x2 0xa0
0x11c: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V147 = ADDRESS
0x11e: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V149 = BALANCE V148
---
Entry stack: [V44, V130]
Stack pops: 1
Stack additions: [V149]
Exit stack: [V44, V149]

================================

Block 0x120
[0x120:0x18e]
---
Predecessors: [0xfe, 0x114]
Successors: [0x18f]
---
0x120 JUMPDEST
0x121 CALLER
0x122 PUSH1 0x1
0x124 PUSH1 0xa0
0x126 PUSH1 0x2
0x128 EXP
0x129 SUB
0x12a AND
0x12b PUSH2 0x8fc
0x12e DUP3
0x12f SWAP1
0x130 DUP2
0x131 ISZERO
0x132 MUL
0x133 SWAP1
0x134 PUSH1 0x40
0x136 MLOAD
0x137 PUSH1 0x0
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP4
0x13e SUB
0x13f DUP2
0x140 DUP6
0x141 DUP9
0x142 DUP9
0x143 CALL
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x1
0x14c PUSH1 0xa0
0x14e PUSH1 0x2
0x150 EXP
0x151 SUB
0x152 CALLER
0x153 DUP2
0x154 AND
0x155 AND
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a SWAP1
0x15b DUP2
0x15c ADD
0x15d DUP7
0x15e DUP2
0x15f MSTORE
0x160 SWAP2
0x161 MLOAD
0x162 PUSH32 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6
0x183 SWAP6
0x184 POP
0x185 SWAP2
0x186 ADD
0x187 DUP2
0x188 SWAP1
0x189 SUB
0x18a SWAP3
0x18b POP
0x18c SWAP1
0x18d POP
0x18e LOG1
---
0x120: JUMPDEST 
0x121: V150 = CALLER
0x122: V151 = 0x1
0x124: V152 = 0xa0
0x126: V153 = 0x2
0x128: V154 = EXP 0x2 0xa0
0x129: V155 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x12b: V157 = 0x8fc
0x131: V158 = ISZERO S0
0x132: V159 = MUL V158 0x8fc
0x134: V160 = 0x40
0x136: V161 = M[0x40]
0x137: V162 = 0x0
0x139: V163 = 0x40
0x13b: V164 = M[0x40]
0x13e: V165 = SUB V161 V164
0x143: V166 = CALL V159 V156 S0 V164 V165 V164 0x0
0x146: V167 = 0x40
0x149: V168 = M[0x40]
0x14a: V169 = 0x1
0x14c: V170 = 0xa0
0x14e: V171 = 0x2
0x150: V172 = EXP 0x2 0xa0
0x151: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x152: V174 = CALLER
0x154: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x155: V176 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x157: M[V168] = V176
0x158: V177 = 0x20
0x15c: V178 = ADD 0x20 V168
0x15f: M[V178] = S0
0x161: V179 = M[0x40]
0x162: V180 = 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6
0x186: V181 = ADD V178 0x20
0x189: V182 = SUB V181 V179
0x18e: LOG V179 V182 0x5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a6
---
Entry stack: [V44, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V44, S0]

================================

Block 0x18f
[0x18f:0x1cb]
---
Predecessors: [0x44, 0x120]
Successors: [0x1cc, 0x227]
---
0x18f JUMPDEST
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 CALLER
0x199 DUP2
0x19a AND
0x19b AND
0x19c PUSH1 0x0
0x19e DUP2
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x3
0x1a3 PUSH1 0x20
0x1a5 DUP1
0x1a6 DUP4
0x1a7 ADD
0x1a8 SWAP2
0x1a9 DUP3
0x1aa MSTORE
0x1ab DUP2
0x1ac ADD
0x1ad DUP1
0x1ae DUP4
0x1af SHA3
0x1b0 DUP7
0x1b1 SWAP1
0x1b2 SSTORE
0x1b3 SWAP3
0x1b4 DUP3
0x1b5 MSTORE
0x1b6 PUSH1 0x2
0x1b8 SWAP1
0x1b9 MSTORE
0x1ba SWAP1
0x1bb DUP2
0x1bc SHA3
0x1bd DUP1
0x1be SLOAD
0x1bf CALLVALUE
0x1c0 SWAP1
0x1c1 DUP2
0x1c2 ADD
0x1c3 SWAP1
0x1c4 SWAP2
0x1c5 SSTORE
0x1c6 GT
0x1c7 ISZERO
0x1c8 PUSH2 0x227
0x1cb JUMPI
---
0x18f: JUMPDEST 
0x190: V183 = 0x1
0x192: V184 = 0xa0
0x194: V185 = 0x2
0x196: V186 = EXP 0x2 0xa0
0x197: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V188 = CALLER
0x19a: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x19b: V190 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V191 = 0x0
0x1a0: M[0x0] = V190
0x1a1: V192 = 0x3
0x1a3: V193 = 0x20
0x1a7: V194 = ADD 0x0 0x20
0x1aa: M[0x20] = 0x3
0x1ac: V195 = ADD 0x20 0x20
0x1af: V196 = SHA3 0x0 0x40
0x1b2: S[V196] = V44
0x1b5: M[0x0] = V190
0x1b6: V197 = 0x2
0x1b9: M[0x20] = 0x2
0x1bc: V198 = SHA3 0x0 0x40
0x1be: V199 = S[V198]
0x1bf: V200 = CALLVALUE
0x1c2: V201 = ADD V200 V199
0x1c5: S[V198] = V201
0x1c6: V202 = GT V200 0x0
0x1c7: V203 = ISZERO V202
0x1c8: V204 = 0x227
0x1cb: JUMPI 0x227 V203
---
Entry stack: [V44, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V44, S0]

================================

Block 0x1cc
[0x1cc:0x226]
---
Predecessors: [0x18f]
Successors: [0x227]
---
0x1cc PUSH1 0x1
0x1ce PUSH1 0xa0
0x1d0 PUSH1 0x2
0x1d2 EXP
0x1d3 SUB
0x1d4 CALLER
0x1d5 DUP2
0x1d6 AND
0x1d7 AND
0x1d8 PUSH1 0x0
0x1da DUP2
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x2
0x1df PUSH1 0x20
0x1e1 DUP1
0x1e2 DUP4
0x1e3 ADD
0x1e4 SWAP2
0x1e5 DUP3
0x1e6 MSTORE
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 ADD
0x1ea SWAP1
0x1eb SWAP2
0x1ec SHA3
0x1ed SLOAD
0x1ee PUSH1 0x40
0x1f0 DUP1
0x1f1 MLOAD
0x1f2 SWAP4
0x1f3 DUP5
0x1f4 MSTORE
0x1f5 SWAP3
0x1f6 DUP3
0x1f7 ADD
0x1f8 SWAP1
0x1f9 DUP2
0x1fa MSTORE
0x1fb SWAP2
0x1fc MLOAD
0x1fd PUSH32 0xabcc1dbf61afa26d6213b4d94418583f36fedeb579db6e003f94e32aa7927cb8
0x21e SWAP3
0x21f SWAP1
0x220 SWAP2
0x221 ADD
0x222 DUP2
0x223 SWAP1
0x224 SUB
0x225 SWAP1
0x226 LOG1
---
0x1cc: V205 = 0x1
0x1ce: V206 = 0xa0
0x1d0: V207 = 0x2
0x1d2: V208 = EXP 0x2 0xa0
0x1d3: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d4: V210 = CALLER
0x1d6: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x1d7: V212 = AND V211 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V213 = 0x0
0x1dc: M[0x0] = V212
0x1dd: V214 = 0x2
0x1df: V215 = 0x20
0x1e3: V216 = ADD 0x0 0x20
0x1e6: M[0x20] = 0x2
0x1e9: V217 = ADD 0x20 0x20
0x1ec: V218 = SHA3 0x0 0x40
0x1ed: V219 = S[V218]
0x1ee: V220 = 0x40
0x1f1: V221 = M[0x40]
0x1f4: M[V221] = V212
0x1f7: V222 = ADD 0x20 V221
0x1fa: M[V222] = V219
0x1fc: V223 = M[0x40]
0x1fd: V224 = 0xabcc1dbf61afa26d6213b4d94418583f36fedeb579db6e003f94e32aa7927cb8
0x221: V225 = ADD 0x20 V222
0x224: V226 = SUB V225 V223
0x226: LOG V223 V226 0xabcc1dbf61afa26d6213b4d94418583f36fedeb579db6e003f94e32aa7927cb8
---
Entry stack: [V44, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V44, S0]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x18f, 0x1cc]
Successors: []
---
0x227 JUMPDEST
0x228 POP
0x229 POP
0x22a STOP
---
0x227: JUMPDEST 
0x22a: STOP 
---
Entry stack: [V44, S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x25a]
---
Predecessors: []
Successors: []
---
0x22b STOP
0x22c LOG1
0x22d PUSH6 0x627a7a723058
0x234 SHA3
0x235 DUP2
0x236 MISSING 0xf
0x237 GT
0x238 CALLVALUE
0x239 MISSING 0xd1
0x23a EXTCODESIZE
0x23b MISSING 0x5f
0x23c MISSING 0x4b
0x23d MISSING 0x4c
0x23e SUB
0x23f MISSING 0xe7
0x240 MISSING 0xe5
0x241 PUSH25 0x83e5bb9aabc354998e11dd68a627f83ff97f8c0029
---
0x22b: STOP 
0x22c: LOG S0 S1 S2
0x22d: V227 = 0x627a7a723058
0x234: V228 = SHA3 0x627a7a723058 S3
0x236: MISSING 0xf
0x237: V229 = GT S0 S1
0x238: V230 = CALLVALUE
0x239: MISSING 0xd1
0x23a: V231 = EXTCODESIZE S0
0x23b: MISSING 0x5f
0x23c: MISSING 0x4b
0x23d: MISSING 0x4c
0x23e: V232 = SUB S0 S1
0x23f: MISSING 0xe7
0x240: MISSING 0xe5
0x241: V233 = 0x83e5bb9aabc354998e11dd68a627f83ff97f8c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S4, V228, S4, V230, V229, V231, V232, 0x83e5bb9aabc354998e11dd68a627f83ff97f8c0029]
Exit stack: []

================================


