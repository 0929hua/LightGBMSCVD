Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x7f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x7f
0xa: JUMPI 0x7f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0x81]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0xd6a4259
0x34 EQ
0x35 PUSH2 0x81
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0xd6a4259
0x34: V10 = EQ 0xd6a4259 V8
0x35: V11 = 0x81
0x38: JUMPI 0x81 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x8e]
---
0x39 DUP1
0x3a PUSH4 0x12065fe0
0x3f EQ
0x40 PUSH2 0x8e
0x43 JUMPI
---
0x3a: V12 = 0x12065fe0
0x3f: V13 = EQ 0x12065fe0 V8
0x40: V14 = 0x8e
0x43: JUMPI 0x8e V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xaf]
---
0x44 DUP1
0x45 PUSH4 0x38cc4831
0x4a EQ
0x4b PUSH2 0xaf
0x4e JUMPI
---
0x45: V15 = 0x38cc4831
0x4a: V16 = EQ 0x38cc4831 V8
0x4b: V17 = 0xaf
0x4e: JUMPI 0xaf V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xe6]
---
0x4f DUP1
0x50 PUSH4 0x39df1608
0x55 EQ
0x56 PUSH2 0xe6
0x59 JUMPI
---
0x50: V18 = 0x39df1608
0x55: V19 = EQ 0x39df1608 V8
0x56: V20 = 0xe6
0x59: JUMPI 0xe6 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0xf9]
---
0x5a DUP1
0x5b PUSH4 0x41c0e1b5
0x60 EQ
0x61 PUSH2 0xf9
0x64 JUMPI
---
0x5b: V21 = 0x41c0e1b5
0x60: V22 = EQ 0x41c0e1b5 V8
0x61: V23 = 0xf9
0x64: JUMPI 0xf9 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x106]
---
0x65 DUP1
0x66 PUSH4 0x7a1d8570
0x6b EQ
0x6c PUSH2 0x106
0x6f JUMPI
---
0x66: V24 = 0x7a1d8570
0x6b: V25 = EQ 0x7a1d8570 V8
0x6c: V26 = 0x106
0x6f: JUMPI 0x106 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x12a]
---
0x70 DUP1
0x71 PUSH4 0xfab43cb1
0x76 EQ
0x77 PUSH2 0x12a
0x7a JUMPI
---
0x71: V27 = 0xfab43cb1
0x76: V28 = EQ 0xfab43cb1 V8
0x77: V29 = 0x12a
0x7a: JUMPI 0x12a V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x70]
Successors: [0x7f]
---
0x7b PUSH2 0x7f
0x7e JUMP
---
0x7b: V30 = 0x7f
0x7e: JUMP 0x7f
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x0, 0x7b]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0xb]
Successors: [0x185]
---
0x81 JUMPDEST
0x82 PUSH2 0x8c
0x85 PUSH1 0x4
0x87 POP
0x88 PUSH2 0x185
0x8b JUMP
---
0x81: JUMPDEST 
0x82: V31 = 0x8c
0x85: V32 = 0x4
0x88: V33 = 0x185
0x8b: JUMP 0x185
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V8, 0x8c]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: [0x2cc]
Successors: []
---
0x8c JUMPDEST
0x8d STOP
---
0x8c: JUMPDEST 
0x8d: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x39]
Successors: [0x161]
---
0x8e JUMPDEST
0x8f PUSH2 0x99
0x92 PUSH1 0x4
0x94 POP
0x95 PUSH2 0x161
0x98 JUMP
---
0x8e: JUMPDEST 
0x8f: V34 = 0x99
0x92: V35 = 0x4
0x95: V36 = 0x161
0x98: JUMP 0x161
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x99]
Exit stack: [V8, 0x99]

================================

Block 0x99
[0x99:0xae]
---
Predecessors: [0x182]
Successors: []
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e DUP3
0x9f DUP2
0xa0 MSTORE
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP2
0xa5 POP
0xa6 POP
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab SWAP2
0xac SUB
0xad SWAP1
0xae RETURN
---
0x99: JUMPDEST 
0x9a: V37 = 0x40
0x9c: V38 = M[0x40]
0xa0: M[V38] = V93
0xa1: V39 = 0x20
0xa3: V40 = ADD 0x20 V38
0xa7: V41 = 0x40
0xa9: V42 = M[0x40]
0xac: V43 = SUB V40 V42
0xae: RETURN V42 V43
---
Entry stack: [V8, V93]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0x44]
Successors: [0x349]
---
0xaf JUMPDEST
0xb0 PUSH2 0xba
0xb3 PUSH1 0x4
0xb5 POP
0xb6 PUSH2 0x349
0xb9 JUMP
---
0xaf: JUMPDEST 
0xb0: V44 = 0xba
0xb3: V45 = 0x4
0xb6: V46 = 0x349
0xb9: JUMP 0x349
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xba]
Exit stack: [V8, 0xba]

================================

Block 0xba
[0xba:0xe5]
---
Predecessors: [0x353]
Successors: []
---
0xba JUMPDEST
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf DUP3
0xc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5 AND
0xd6 DUP2
0xd7 MSTORE
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP2
0xdc POP
0xdd POP
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xba: JUMPDEST 
0xbb: V47 = 0x40
0xbd: V48 = M[0x40]
0xc0: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0xd7: M[V48] = V50
0xd8: V51 = 0x20
0xda: V52 = ADD 0x20 V48
0xde: V53 = 0x40
0xe0: V54 = M[0x40]
0xe3: V55 = SUB V52 V54
0xe5: RETURN V54 V55
---
Entry stack: [V8, V196]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xe6
[0xe6:0xf6]
---
Predecessors: [0x4f]
Successors: [0x2eb]
---
0xe6 JUMPDEST
0xe7 PUSH2 0xf7
0xea PUSH1 0x4
0xec DUP1
0xed CALLDATALOAD
0xee SWAP1
0xef PUSH1 0x20
0xf1 ADD
0xf2 POP
0xf3 PUSH2 0x2eb
0xf6 JUMP
---
0xe6: JUMPDEST 
0xe7: V56 = 0xf7
0xea: V57 = 0x4
0xed: V58 = CALLDATALOAD 0x4
0xef: V59 = 0x20
0xf1: V60 = ADD 0x20 0x4
0xf3: V61 = 0x2eb
0xf6: JUMP 0x2eb
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xf7, V58]
Exit stack: [V8, 0xf7, V58]

================================

Block 0xf7
[0xf7:0xf8]
---
Predecessors: [0x317]
Successors: []
---
0xf7 JUMPDEST
0xf8 STOP
---
0xf7: JUMPDEST 
0xf8: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0x5a]
Successors: [0x356]
---
0xf9 JUMPDEST
0xfa PUSH2 0x104
0xfd PUSH1 0x4
0xff POP
0x100 PUSH2 0x356
0x103 JUMP
---
0xf9: JUMPDEST 
0xfa: V62 = 0x104
0xfd: V63 = 0x4
0x100: V64 = 0x356
0x103: JUMP 0x356
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V8, 0x104]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x3e8]
Successors: []
---
0x104 JUMPDEST
0x105 STOP
---
0x104: JUMPDEST 
0x105: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0x65]
Successors: [0x2cf]
---
0x106 JUMPDEST
0x107 PUSH2 0x111
0x10a PUSH1 0x4
0x10c POP
0x10d PUSH2 0x2cf
0x110 JUMP
---
0x106: JUMPDEST 
0x107: V65 = 0x111
0x10a: V66 = 0x4
0x10d: V67 = 0x2cf
0x110: JUMP 0x2cf
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V8, 0x111]

================================

Block 0x111
[0x111:0x129]
---
Predecessors: [0x2e8]
Successors: []
---
0x111 JUMPDEST
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 DUP3
0x117 PUSH1 0x0
0x119 SIGNEXTEND
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP2
0x120 POP
0x121 POP
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 SWAP2
0x127 SUB
0x128 SWAP1
0x129 RETURN
---
0x111: JUMPDEST 
0x112: V68 = 0x40
0x114: V69 = M[0x40]
0x117: V70 = 0x0
0x119: V71 = SIGNEXTEND 0x0 V172
0x11b: M[V69] = V71
0x11c: V72 = 0x20
0x11e: V73 = ADD 0x20 V69
0x122: V74 = 0x40
0x124: V75 = M[0x40]
0x127: V76 = SUB V73 V75
0x129: RETURN V75 V76
---
Entry stack: [V8, V172]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x12a
[0x12a:0x134]
---
Predecessors: [0x70]
Successors: [0x31a]
---
0x12a JUMPDEST
0x12b PUSH2 0x135
0x12e PUSH1 0x4
0x130 POP
0x131 PUSH2 0x31a
0x134 JUMP
---
0x12a: JUMPDEST 
0x12b: V77 = 0x135
0x12e: V78 = 0x4
0x131: V79 = 0x31a
0x134: JUMP 0x31a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x135]
Exit stack: [V8, 0x135]

================================

Block 0x135
[0x135:0x160]
---
Predecessors: [0x346]
Successors: []
---
0x135 JUMPDEST
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a DUP3
0x13b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x150 AND
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP2
0x157 POP
0x158 POP
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 RETURN
---
0x135: JUMPDEST 
0x136: V80 = 0x40
0x138: V81 = M[0x40]
0x13b: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x150: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x152: M[V81] = V83
0x153: V84 = 0x20
0x155: V85 = ADD 0x20 V81
0x159: V86 = 0x40
0x15b: V87 = M[0x40]
0x15e: V88 = SUB V85 V87
0x160: RETURN V87 V88
---
Entry stack: [V8, V193]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x161
[0x161:0x181]
---
Predecessors: [0x8e]
Successors: [0x182]
---
0x161 JUMPDEST
0x162 PUSH1 0x0
0x164 ADDRESS
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b BALANCE
0x17c SWAP1
0x17d POP
0x17e PUSH2 0x182
0x181 JUMP
---
0x161: JUMPDEST 
0x162: V89 = 0x0
0x164: V90 = ADDRESS
0x165: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x17b: V93 = BALANCE V92
0x17e: V94 = 0x182
0x181: JUMP 0x182
---
Entry stack: [V8, 0x99]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V8, 0x99, V93]

================================

Block 0x182
[0x182:0x184]
---
Predecessors: [0x161]
Successors: [0x99]
---
0x182 JUMPDEST
0x183 SWAP1
0x184 JUMP
---
0x182: JUMPDEST 
0x184: JUMP 0x99
---
Entry stack: [V8, 0x99, V93]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V93]

================================

Block 0x185
[0x185:0x249]
---
Predecessors: [0x81]
Successors: [0x24a, 0x28c]
---
0x185 JUMPDEST
0x186 PUSH1 0x0
0x188 PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1a9 PUSH1 0x1
0x1ab PUSH1 0x14
0x1ad PUSH2 0x100
0x1b0 EXP
0x1b1 DUP2
0x1b2 SLOAD
0x1b3 DUP2
0x1b4 PUSH1 0xff
0x1b6 MUL
0x1b7 NOT
0x1b8 AND
0x1b9 SWAP1
0x1ba DUP4
0x1bb PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x1dc SWAP1
0x1dd DUP2
0x1de MUL
0x1df DIV
0x1e0 MUL
0x1e1 OR
0x1e2 SWAP1
0x1e3 SSTORE
0x1e4 POP
0x1e5 PUSH1 0x0
0x1e7 SWAP1
0x1e8 POP
0x1e9 PUSH1 0x0
0x1eb PUSH1 0x0
0x1ed SWAP1
0x1ee SLOAD
0x1ef SWAP1
0x1f0 PUSH2 0x100
0x1f3 EXP
0x1f4 SWAP1
0x1f5 DIV
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x221 AND
0x222 PUSH1 0x0
0x224 PUSH3 0x2dc6c0
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c SWAP1
0x22d POP
0x22e PUSH1 0x0
0x230 PUSH1 0x40
0x232 MLOAD
0x233 DUP1
0x234 DUP4
0x235 SUB
0x236 DUP2
0x237 DUP6
0x238 DUP9
0x239 DUP9
0x23a CALL
0x23b SWAP4
0x23c POP
0x23d POP
0x23e POP
0x23f POP
0x240 SWAP1
0x241 POP
0x242 DUP1
0x243 POP
0x244 DUP1
0x245 ISZERO
0x246 PUSH2 0x28c
0x249 JUMPI
---
0x185: JUMPDEST 
0x186: V95 = 0x0
0x188: V96 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1a9: V97 = 0x1
0x1ab: V98 = 0x14
0x1ad: V99 = 0x100
0x1b0: V100 = EXP 0x100 0x14
0x1b2: V101 = S[0x1]
0x1b4: V102 = 0xff
0x1b6: V103 = MUL 0xff 0x10000000000000000000000000000000000000000
0x1b7: V104 = NOT 0xff0000000000000000000000000000000000000000
0x1b8: V105 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V101
0x1bb: V106 = 0x100000000000000000000000000000000000000000000000000000000000000
0x1de: V107 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1df: V108 = DIV 0xff00000000000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000000000
0x1e0: V109 = MUL 0xff 0x10000000000000000000000000000000000000000
0x1e1: V110 = OR 0xff0000000000000000000000000000000000000000 V105
0x1e3: S[0x1] = V110
0x1e5: V111 = 0x0
0x1e9: V112 = 0x0
0x1eb: V113 = 0x0
0x1ee: V114 = S[0x0]
0x1f0: V115 = 0x100
0x1f3: V116 = EXP 0x100 0x0
0x1f5: V117 = DIV V114 0x1
0x1f6: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x20c: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x221: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x222: V122 = 0x0
0x224: V123 = 0x2dc6c0
0x228: V124 = 0x40
0x22a: V125 = M[0x40]
0x22e: V126 = 0x0
0x230: V127 = 0x40
0x232: V128 = M[0x40]
0x235: V129 = SUB V125 V128
0x23a: V130 = CALL 0x0 V121 0x2dc6c0 V128 V129 V128 0x0
0x245: V131 = ISZERO V130
0x246: V132 = 0x28c
0x249: JUMPI 0x28c V131
---
Entry stack: [V8, 0x8c]
Stack pops: 0
Stack additions: [V130]
Exit stack: [V8, 0x8c, V130]

================================

Block 0x24a
[0x24a:0x28b]
---
Predecessors: [0x185]
Successors: [0x2cb]
---
0x24a PUSH1 0x1
0x24c PUSH1 0x1
0x24e PUSH1 0x14
0x250 PUSH2 0x100
0x253 EXP
0x254 DUP2
0x255 SLOAD
0x256 DUP2
0x257 PUSH1 0xff
0x259 MUL
0x25a NOT
0x25b AND
0x25c SWAP1
0x25d DUP4
0x25e PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x27f SWAP1
0x280 DUP2
0x281 MUL
0x282 DIV
0x283 MUL
0x284 OR
0x285 SWAP1
0x286 SSTORE
0x287 POP
0x288 PUSH2 0x2cb
0x28b JUMP
---
0x24a: V133 = 0x1
0x24c: V134 = 0x1
0x24e: V135 = 0x14
0x250: V136 = 0x100
0x253: V137 = EXP 0x100 0x14
0x255: V138 = S[0x1]
0x257: V139 = 0xff
0x259: V140 = MUL 0xff 0x10000000000000000000000000000000000000000
0x25a: V141 = NOT 0xff0000000000000000000000000000000000000000
0x25b: V142 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V138
0x25e: V143 = 0x100000000000000000000000000000000000000000000000000000000000000
0x281: V144 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x282: V145 = DIV 0x100000000000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000000000
0x283: V146 = MUL 0x1 0x10000000000000000000000000000000000000000
0x284: V147 = OR 0x10000000000000000000000000000000000000000 V142
0x286: S[0x1] = V147
0x288: V148 = 0x2cb
0x28b: JUMP 0x2cb
---
Entry stack: [V8, 0x8c, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x8c, V130]

================================

Block 0x28c
[0x28c:0x2ca]
---
Predecessors: [0x185]
Successors: [0x2cb]
---
0x28c JUMPDEST
0x28d PUSH1 0x0
0x28f PUSH1 0x1
0x291 PUSH1 0x14
0x293 PUSH2 0x100
0x296 EXP
0x297 DUP2
0x298 SLOAD
0x299 DUP2
0x29a PUSH1 0xff
0x29c MUL
0x29d NOT
0x29e AND
0x29f SWAP1
0x2a0 DUP4
0x2a1 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x2c2 SWAP1
0x2c3 DUP2
0x2c4 MUL
0x2c5 DIV
0x2c6 MUL
0x2c7 OR
0x2c8 SWAP1
0x2c9 SSTORE
0x2ca POP
---
0x28c: JUMPDEST 
0x28d: V149 = 0x0
0x28f: V150 = 0x1
0x291: V151 = 0x14
0x293: V152 = 0x100
0x296: V153 = EXP 0x100 0x14
0x298: V154 = S[0x1]
0x29a: V155 = 0xff
0x29c: V156 = MUL 0xff 0x10000000000000000000000000000000000000000
0x29d: V157 = NOT 0xff0000000000000000000000000000000000000000
0x29e: V158 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V154
0x2a1: V159 = 0x100000000000000000000000000000000000000000000000000000000000000
0x2c4: V160 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x0
0x2c5: V161 = DIV 0x0 0x100000000000000000000000000000000000000000000000000000000000000
0x2c6: V162 = MUL 0x0 0x10000000000000000000000000000000000000000
0x2c7: V163 = OR 0x0 V158
0x2c9: S[0x1] = V163
---
Entry stack: [V8, 0x8c, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x8c, V130]

================================

Block 0x2cb
[0x2cb:0x2cb]
---
Predecessors: [0x24a, 0x28c]
Successors: [0x2cc]
---
0x2cb JUMPDEST
---
0x2cb: JUMPDEST 
---
Entry stack: [V8, 0x8c, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x8c, V130]

================================

Block 0x2cc
[0x2cc:0x2ce]
---
Predecessors: [0x2cb]
Successors: [0x8c]
---
0x2cc JUMPDEST
0x2cd POP
0x2ce JUMP
---
0x2cc: JUMPDEST 
0x2ce: JUMP 0x8c
---
Entry stack: [V8, 0x8c, V130]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x2cf
[0x2cf:0x2e7]
---
Predecessors: [0x106]
Successors: [0x2e8]
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x0
0x2d2 PUSH1 0x1
0x2d4 PUSH1 0x14
0x2d6 SWAP1
0x2d7 SLOAD
0x2d8 SWAP1
0x2d9 PUSH2 0x100
0x2dc EXP
0x2dd SWAP1
0x2de DIV
0x2df PUSH1 0x0
0x2e1 SIGNEXTEND
0x2e2 SWAP1
0x2e3 POP
0x2e4 PUSH2 0x2e8
0x2e7 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V164 = 0x0
0x2d2: V165 = 0x1
0x2d4: V166 = 0x14
0x2d7: V167 = S[0x1]
0x2d9: V168 = 0x100
0x2dc: V169 = EXP 0x100 0x14
0x2de: V170 = DIV V167 0x10000000000000000000000000000000000000000
0x2df: V171 = 0x0
0x2e1: V172 = SIGNEXTEND 0x0 V170
0x2e4: V173 = 0x2e8
0x2e7: JUMP 0x2e8
---
Entry stack: [V8, 0x111]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V8, 0x111, V172]

================================

Block 0x2e8
[0x2e8:0x2ea]
---
Predecessors: [0x2cf]
Successors: [0x111]
---
0x2e8 JUMPDEST
0x2e9 SWAP1
0x2ea JUMP
---
0x2e8: JUMPDEST 
0x2ea: JUMP 0x111
---
Entry stack: [V8, 0x111, V172]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V172]

================================

Block 0x2eb
[0x2eb:0x316]
---
Predecessors: [0xe6]
Successors: [0x317]
---
0x2eb JUMPDEST
0x2ec DUP1
0x2ed PUSH1 0x0
0x2ef PUSH1 0x0
0x2f1 PUSH2 0x100
0x2f4 EXP
0x2f5 DUP2
0x2f6 SLOAD
0x2f7 DUP2
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d MUL
0x30e NOT
0x30f AND
0x310 SWAP1
0x311 DUP4
0x312 MUL
0x313 OR
0x314 SWAP1
0x315 SSTORE
0x316 POP
---
0x2eb: JUMPDEST 
0x2ed: V174 = 0x0
0x2ef: V175 = 0x0
0x2f1: V176 = 0x100
0x2f4: V177 = EXP 0x100 0x0
0x2f6: V178 = S[0x0]
0x2f8: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V180 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x30e: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V182 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V178
0x312: V183 = MUL V58 0x1
0x313: V184 = OR V183 V182
0x315: S[0x0] = V184
---
Entry stack: [V8, 0xf7, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0xf7, V58]

================================

Block 0x317
[0x317:0x319]
---
Predecessors: [0x2eb]
Successors: [0xf7]
---
0x317 JUMPDEST
0x318 POP
0x319 JUMP
---
0x317: JUMPDEST 
0x319: JUMP 0xf7
---
Entry stack: [V8, 0xf7, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x31a
[0x31a:0x345]
---
Predecessors: [0x12a]
Successors: [0x346]
---
0x31a JUMPDEST
0x31b PUSH1 0x0
0x31d PUSH1 0x0
0x31f PUSH1 0x0
0x321 SWAP1
0x322 SLOAD
0x323 SWAP1
0x324 PUSH2 0x100
0x327 EXP
0x328 SWAP1
0x329 DIV
0x32a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33f AND
0x340 SWAP1
0x341 POP
0x342 PUSH2 0x346
0x345 JUMP
---
0x31a: JUMPDEST 
0x31b: V185 = 0x0
0x31d: V186 = 0x0
0x31f: V187 = 0x0
0x322: V188 = S[0x0]
0x324: V189 = 0x100
0x327: V190 = EXP 0x100 0x0
0x329: V191 = DIV V188 0x1
0x32a: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x342: V194 = 0x346
0x345: JUMP 0x346
---
Entry stack: [V8, 0x135]
Stack pops: 0
Stack additions: [V193]
Exit stack: [V8, 0x135, V193]

================================

Block 0x346
[0x346:0x348]
---
Predecessors: [0x31a]
Successors: [0x135]
---
0x346 JUMPDEST
0x347 SWAP1
0x348 JUMP
---
0x346: JUMPDEST 
0x348: JUMP 0x135
---
Entry stack: [V8, 0x135, V193]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V193]

================================

Block 0x349
[0x349:0x352]
---
Predecessors: [0xaf]
Successors: [0x353]
---
0x349 JUMPDEST
0x34a PUSH1 0x0
0x34c ADDRESS
0x34d SWAP1
0x34e POP
0x34f PUSH2 0x353
0x352 JUMP
---
0x349: JUMPDEST 
0x34a: V195 = 0x0
0x34c: V196 = ADDRESS
0x34f: V197 = 0x353
0x352: JUMP 0x353
---
Entry stack: [V8, 0xba]
Stack pops: 0
Stack additions: [V196]
Exit stack: [V8, 0xba, V196]

================================

Block 0x353
[0x353:0x355]
---
Predecessors: [0x349]
Successors: [0xba]
---
0x353 JUMPDEST
0x354 SWAP1
0x355 JUMP
---
0x353: JUMPDEST 
0x355: JUMP 0xba
---
Entry stack: [V8, 0xba, V196]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V196]

================================

Block 0x356
[0x356:0x3ac]
---
Predecessors: [0xf9]
Successors: [0x3ad, 0x3e7]
---
0x356 JUMPDEST
0x357 PUSH1 0x1
0x359 PUSH1 0x0
0x35b SWAP1
0x35c SLOAD
0x35d SWAP1
0x35e PUSH2 0x100
0x361 EXP
0x362 SWAP1
0x363 DIV
0x364 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x379 AND
0x37a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38f AND
0x390 CALLER
0x391 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a6 AND
0x3a7 EQ
0x3a8 ISZERO
0x3a9 PUSH2 0x3e7
0x3ac JUMPI
---
0x356: JUMPDEST 
0x357: V198 = 0x1
0x359: V199 = 0x0
0x35c: V200 = S[0x1]
0x35e: V201 = 0x100
0x361: V202 = EXP 0x100 0x0
0x363: V203 = DIV V200 0x1
0x364: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x379: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x37a: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x390: V208 = CALLER
0x391: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x3a7: V211 = EQ V210 V207
0x3a8: V212 = ISZERO V211
0x3a9: V213 = 0x3e7
0x3ac: JUMPI 0x3e7 V212
---
Entry stack: [V8, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x104]

================================

Block 0x3ad
[0x3ad:0x3e6]
---
Predecessors: [0x356]
Successors: []
---
0x3ad PUSH1 0x1
0x3af PUSH1 0x0
0x3b1 SWAP1
0x3b2 SLOAD
0x3b3 SWAP1
0x3b4 PUSH2 0x100
0x3b7 EXP
0x3b8 SWAP1
0x3b9 DIV
0x3ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cf AND
0x3d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e5 AND
0x3e6 SELFDESTRUCT
---
0x3ad: V214 = 0x1
0x3af: V215 = 0x0
0x3b2: V216 = S[0x1]
0x3b4: V217 = 0x100
0x3b7: V218 = EXP 0x100 0x0
0x3b9: V219 = DIV V216 0x1
0x3ba: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cf: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3d0: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x3e6: SELFDESTRUCT V223
---
Entry stack: [V8, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x104]

================================

Block 0x3e7
[0x3e7:0x3e7]
---
Predecessors: [0x356]
Successors: [0x3e8]
---
0x3e7 JUMPDEST
---
0x3e7: JUMPDEST 
---
Entry stack: [V8, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x104]

================================

Block 0x3e8
[0x3e8:0x3e9]
---
Predecessors: [0x3e7]
Successors: [0x104]
---
0x3e8 JUMPDEST
0x3e9 JUMP
---
0x3e8: JUMPDEST 
0x3e9: JUMP 0x104
---
Entry stack: [V8, 0x104]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0xd6a4259
Entry block: 0x81
Exit block: 0x8c
Body: 0x81, 0x8c, 0x185, 0x24a, 0x28c, 0x2cb, 0x2cc

Function 1:
Public function signature: 0x12065fe0
Entry block: 0x8e
Exit block: 0x99
Body: 0x8e, 0x99, 0x161, 0x182

Function 2:
Public function signature: 0x38cc4831
Entry block: 0xaf
Exit block: 0xba
Body: 0xaf, 0xba, 0x349, 0x353

Function 3:
Public function signature: 0x39df1608
Entry block: 0xe6
Exit block: 0xf7
Body: 0xe6, 0xf7, 0x2eb, 0x317

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0xf9
Exit block: 0x104
Body: 0xf9, 0x104, 0x356, 0x3ad, 0x3e7, 0x3e8

Function 5:
Public function signature: 0x7a1d8570
Entry block: 0x106
Exit block: 0x111
Body: 0x106, 0x111, 0x2cf, 0x2e8

Function 6:
Public function signature: 0xfab43cb1
Entry block: 0x12a
Exit block: 0x135
Body: 0x12a, 0x135, 0x31a, 0x346

Function 7:
Public fallback function
Entry block: 0x7b
Exit block: 0x7f
Body: 0x7b, 0x7f

