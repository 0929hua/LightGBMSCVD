Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x57]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x57
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x57
0x19: JUMPI 0x57 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x2a]
---
Predecessors: [0x10]
Successors: [0x2b, 0x5c]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH1 0xe0
0x1f SHR
0x20 DUP1
0x21 PUSH4 0x26d111f5
0x26 EQ
0x27 PUSH2 0x5c
0x2a JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0xe0
0x1f: V13 = SHR 0xe0 V11
0x21: V14 = 0x26d111f5
0x26: V15 = EQ 0x26d111f5 V13
0x27: V16 = 0x5c
0x2a: JUMPI 0x5c V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0x1a]
Successors: [0x36, 0xd9]
---
0x2b DUP1
0x2c PUSH4 0x38af3eed
0x31 EQ
0x32 PUSH2 0xd9
0x35 JUMPI
---
0x2c: V17 = 0x38af3eed
0x31: V18 = EQ 0x38af3eed V13
0x32: V19 = 0xd9
0x35: JUMPI 0xd9 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x36
[0x36:0x40]
---
Predecessors: [0x2b]
Successors: [0x41, 0xfd]
---
0x36 DUP1
0x37 PUSH4 0x86d1a69f
0x3c EQ
0x3d PUSH2 0xfd
0x40 JUMPI
---
0x37: V20 = 0x86d1a69f
0x3c: V21 = EQ 0x86d1a69f V13
0x3d: V22 = 0xfd
0x40: JUMPI 0xfd V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x36]
Successors: [0x4c, 0x107]
---
0x41 DUP1
0x42 PUSH4 0xb91d4001
0x47 EQ
0x48 PUSH2 0x107
0x4b JUMPI
---
0x42: V23 = 0xb91d4001
0x47: V24 = EQ 0xb91d4001 V13
0x48: V25 = 0x107
0x4b: JUMPI 0x107 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x121]
---
0x4c DUP1
0x4d PUSH4 0xfc0c546a
0x52 EQ
0x53 PUSH2 0x121
0x56 JUMPI
---
0x4d: V26 = 0xfc0c546a
0x52: V27 = EQ 0xfc0c546a V13
0x53: V28 = 0x121
0x56: JUMPI 0x121 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x10, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V29 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x1a]
Successors: [0x129]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0x129
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V30 = 0x64
0x60: V31 = 0x129
0x63: JUMP 0x129
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V13, 0x64]

================================

Block 0x64
[0x64:0x85]
---
Predecessors: [0x1b5]
Successors: [0x86]
---
0x64 JUMPDEST
0x65 PUSH1 0x40
0x67 DUP1
0x68 MLOAD
0x69 PUSH1 0x20
0x6b DUP1
0x6c DUP3
0x6d MSTORE
0x6e DUP4
0x6f MLOAD
0x70 DUP2
0x71 DUP4
0x72 ADD
0x73 MSTORE
0x74 DUP4
0x75 MLOAD
0x76 SWAP2
0x77 SWAP3
0x78 DUP4
0x79 SWAP3
0x7a SWAP1
0x7b DUP4
0x7c ADD
0x7d SWAP2
0x7e DUP6
0x7f ADD
0x80 SWAP1
0x81 DUP1
0x82 DUP4
0x83 DUP4
0x84 PUSH1 0x0
---
0x64: JUMPDEST 
0x65: V32 = 0x40
0x68: V33 = M[0x40]
0x69: V34 = 0x20
0x6d: M[V33] = 0x20
0x6f: V35 = M[V99]
0x72: V36 = ADD V33 0x20
0x73: M[V36] = V35
0x75: V37 = M[V99]
0x7c: V38 = ADD V33 0x40
0x7f: V39 = ADD V99 0x20
0x84: V40 = 0x0
---
Entry stack: [V13, V99]
Stack pops: 1
Stack additions: [S0, V33, V33, V38, V39, V37, V37, V38, V39, 0x0]
Exit stack: [V13, V99, V33, V33, V38, V39, V37, V37, V38, V39, 0x0]

================================

Block 0x86
[0x86:0x8e]
---
Predecessors: [0x64, 0x8f]
Successors: [0x8f, 0x9e]
---
0x86 JUMPDEST
0x87 DUP4
0x88 DUP2
0x89 LT
0x8a ISZERO
0x8b PUSH2 0x9e
0x8e JUMPI
---
0x86: JUMPDEST 
0x89: V41 = LT S0 V37
0x8a: V42 = ISZERO V41
0x8b: V43 = 0x9e
0x8e: JUMPI 0x9e V42
---
Entry stack: [V13, V99, V33, V33, V38, V39, V37, V37, V38, V39, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V99, V33, V33, V38, V39, V37, V37, V38, V39, S0]

================================

Block 0x8f
[0x8f:0x9d]
---
Predecessors: [0x86]
Successors: [0x86]
---
0x8f DUP2
0x90 DUP2
0x91 ADD
0x92 MLOAD
0x93 DUP4
0x94 DUP3
0x95 ADD
0x96 MSTORE
0x97 PUSH1 0x20
0x99 ADD
0x9a PUSH2 0x86
0x9d JUMP
---
0x91: V44 = ADD S0 V39
0x92: V45 = M[V44]
0x95: V46 = ADD S0 V38
0x96: M[V46] = V45
0x97: V47 = 0x20
0x99: V48 = ADD 0x20 S0
0x9a: V49 = 0x86
0x9d: JUMP 0x86
---
Entry stack: [V13, V99, V33, V33, V38, V39, V37, V37, V38, V39, S0]
Stack pops: 3
Stack additions: [S2, S1, V48]
Exit stack: [V13, V99, V33, V33, V38, V39, V37, V37, V38, V39, V48]

================================

Block 0x9e
[0x9e:0xb1]
---
Predecessors: [0x86]
Successors: [0xb2, 0xcb]
---
0x9e JUMPDEST
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 SWAP1
0xa4 POP
0xa5 SWAP1
0xa6 DUP2
0xa7 ADD
0xa8 SWAP1
0xa9 PUSH1 0x1f
0xab AND
0xac DUP1
0xad ISZERO
0xae PUSH2 0xcb
0xb1 JUMPI
---
0x9e: JUMPDEST 
0xa7: V50 = ADD V37 V38
0xa9: V51 = 0x1f
0xab: V52 = AND 0x1f V37
0xad: V53 = ISZERO V52
0xae: V54 = 0xcb
0xb1: JUMPI 0xcb V53
---
Entry stack: [V13, V99, V33, V33, V38, V39, V37, V37, V38, V39, S0]
Stack pops: 7
Stack additions: [V50, V52]
Exit stack: [V13, V99, V33, V33, V50, V52]

================================

Block 0xb2
[0xb2:0xca]
---
Predecessors: [0x9e]
Successors: [0xcb]
---
0xb2 DUP1
0xb3 DUP3
0xb4 SUB
0xb5 DUP1
0xb6 MLOAD
0xb7 PUSH1 0x1
0xb9 DUP4
0xba PUSH1 0x20
0xbc SUB
0xbd PUSH2 0x100
0xc0 EXP
0xc1 SUB
0xc2 NOT
0xc3 AND
0xc4 DUP2
0xc5 MSTORE
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP2
0xca POP
---
0xb4: V55 = SUB V50 V52
0xb6: V56 = M[V55]
0xb7: V57 = 0x1
0xba: V58 = 0x20
0xbc: V59 = SUB 0x20 V52
0xbd: V60 = 0x100
0xc0: V61 = EXP 0x100 V59
0xc1: V62 = SUB V61 0x1
0xc2: V63 = NOT V62
0xc3: V64 = AND V63 V56
0xc5: M[V55] = V64
0xc6: V65 = 0x20
0xc8: V66 = ADD 0x20 V55
---
Entry stack: [V13, V99, V33, V33, V50, V52]
Stack pops: 2
Stack additions: [V66, S0]
Exit stack: [V13, V99, V33, V33, V66, V52]

================================

Block 0xcb
[0xcb:0xd8]
---
Predecessors: [0x9e, 0xb2]
Successors: []
---
0xcb JUMPDEST
0xcc POP
0xcd SWAP3
0xce POP
0xcf POP
0xd0 POP
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 SWAP2
0xd6 SUB
0xd7 SWAP1
0xd8 RETURN
---
0xcb: JUMPDEST 
0xd1: V67 = 0x40
0xd3: V68 = M[0x40]
0xd6: V69 = SUB S1 V68
0xd8: RETURN V68 V69
---
Entry stack: [V13, V99, V33, V33, S1, V52]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x2b]
Successors: [0x1bf]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x1bf
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V70 = 0xe1
0xdd: V71 = 0x1bf
0xe0: JUMP 0x1bf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V13, 0xe1]

================================

Block 0xe1
[0xe1:0xfc]
---
Predecessors: [0x1bf, 0x290]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 DUP1
0xe5 MLOAD
0xe6 PUSH1 0x1
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec SHL
0xed SUB
0xee SWAP1
0xef SWAP3
0xf0 AND
0xf1 DUP3
0xf2 MSTORE
0xf3 MLOAD
0xf4 SWAP1
0xf5 DUP2
0xf6 SWAP1
0xf7 SUB
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP1
0xfc RETURN
---
0xe1: JUMPDEST 
0xe2: V72 = 0x40
0xe5: V73 = M[0x40]
0xe6: V74 = 0x1
0xe8: V75 = 0x1
0xea: V76 = 0xa0
0xec: V77 = SHL 0xa0 0x1
0xed: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V79 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf2: M[V73] = V79
0xf3: V80 = M[0x40]
0xf7: V81 = SUB V73 V80
0xf8: V82 = 0x20
0xfa: V83 = ADD 0x20 V81
0xfc: RETURN V80 V83
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xfd
[0xfd:0x104]
---
Predecessors: [0x36]
Successors: [0x1ce]
---
0xfd JUMPDEST
0xfe PUSH2 0x105
0x101 PUSH2 0x1ce
0x104 JUMP
---
0xfd: JUMPDEST 
0xfe: V84 = 0x105
0x101: V85 = 0x1ce
0x104: JUMP 0x1ce
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V13, 0x105]

================================

Block 0x105
[0x105:0x106]
---
Predecessors: [0x287]
Successors: []
---
0x105 JUMPDEST
0x106 STOP
---
0x105: JUMPDEST 
0x106: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0x41]
Successors: [0x28a]
---
0x107 JUMPDEST
0x108 PUSH2 0x10f
0x10b PUSH2 0x28a
0x10e JUMP
---
0x107: JUMPDEST 
0x108: V86 = 0x10f
0x10b: V87 = 0x28a
0x10e: JUMP 0x28a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x10f]
Exit stack: [V13, 0x10f]

================================

Block 0x10f
[0x10f:0x120]
---
Predecessors: [0x28a]
Successors: []
---
0x10f JUMPDEST
0x110 PUSH1 0x40
0x112 DUP1
0x113 MLOAD
0x114 SWAP2
0x115 DUP3
0x116 MSTORE
0x117 MLOAD
0x118 SWAP1
0x119 DUP2
0x11a SWAP1
0x11b SUB
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 RETURN
---
0x10f: JUMPDEST 
0x110: V88 = 0x40
0x113: V89 = M[0x40]
0x116: M[V89] = V229
0x117: V90 = M[0x40]
0x11b: V91 = SUB V89 V90
0x11c: V92 = 0x20
0x11e: V93 = ADD 0x20 V91
0x120: RETURN V90 V93
---
Entry stack: [V13, V229]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x121
[0x121:0x128]
---
Predecessors: [0x4c]
Successors: [0x290]
---
0x121 JUMPDEST
0x122 PUSH2 0xe1
0x125 PUSH2 0x290
0x128 JUMP
---
0x121: JUMPDEST 
0x122: V94 = 0xe1
0x125: V95 = 0x290
0x128: JUMP 0x290
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V13, 0xe1]

================================

Block 0x129
[0x129:0x16e]
---
Predecessors: [0x5c]
Successors: [0x16f, 0x1b5]
---
0x129 JUMPDEST
0x12a PUSH1 0x3
0x12c DUP1
0x12d SLOAD
0x12e PUSH1 0x40
0x130 DUP1
0x131 MLOAD
0x132 PUSH1 0x20
0x134 PUSH1 0x1f
0x136 PUSH1 0x2
0x138 PUSH1 0x0
0x13a NOT
0x13b PUSH2 0x100
0x13e PUSH1 0x1
0x140 DUP9
0x141 AND
0x142 ISZERO
0x143 MUL
0x144 ADD
0x145 SWAP1
0x146 SWAP6
0x147 AND
0x148 SWAP5
0x149 SWAP1
0x14a SWAP5
0x14b DIV
0x14c SWAP4
0x14d DUP5
0x14e ADD
0x14f DUP2
0x150 SWAP1
0x151 DIV
0x152 DUP2
0x153 MUL
0x154 DUP3
0x155 ADD
0x156 DUP2
0x157 ADD
0x158 SWAP1
0x159 SWAP3
0x15a MSTORE
0x15b DUP3
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x60
0x160 SWAP4
0x161 SWAP1
0x162 SWAP3
0x163 SWAP1
0x164 SWAP2
0x165 DUP4
0x166 ADD
0x167 DUP3
0x168 DUP3
0x169 DUP1
0x16a ISZERO
0x16b PUSH2 0x1b5
0x16e JUMPI
---
0x129: JUMPDEST 
0x12a: V96 = 0x3
0x12d: V97 = S[0x3]
0x12e: V98 = 0x40
0x131: V99 = M[0x40]
0x132: V100 = 0x20
0x134: V101 = 0x1f
0x136: V102 = 0x2
0x138: V103 = 0x0
0x13a: V104 = NOT 0x0
0x13b: V105 = 0x100
0x13e: V106 = 0x1
0x141: V107 = AND V97 0x1
0x142: V108 = ISZERO V107
0x143: V109 = MUL V108 0x100
0x144: V110 = ADD V109 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x147: V111 = AND V97 V110
0x14b: V112 = DIV V111 0x2
0x14e: V113 = ADD V112 0x1f
0x151: V114 = DIV V113 0x20
0x153: V115 = MUL 0x20 V114
0x155: V116 = ADD V99 V115
0x157: V117 = ADD 0x20 V116
0x15a: M[0x40] = V117
0x15d: M[V99] = V112
0x15e: V118 = 0x60
0x166: V119 = ADD V99 0x20
0x16a: V120 = ISZERO V112
0x16b: V121 = 0x1b5
0x16e: JUMPI 0x1b5 V120
---
Entry stack: [V13, 0x64]
Stack pops: 0
Stack additions: [0x60, V99, 0x3, V112, V119, 0x3, V112]
Exit stack: [V13, 0x64, 0x60, V99, 0x3, V112, V119, 0x3, V112]

================================

Block 0x16f
[0x16f:0x176]
---
Predecessors: [0x129]
Successors: [0x177, 0x18a]
---
0x16f DUP1
0x170 PUSH1 0x1f
0x172 LT
0x173 PUSH2 0x18a
0x176 JUMPI
---
0x170: V122 = 0x1f
0x172: V123 = LT 0x1f V112
0x173: V124 = 0x18a
0x176: JUMPI 0x18a V123
---
Entry stack: [V13, 0x64, 0x60, V99, 0x3, V112, V119, 0x3, V112]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x64, 0x60, V99, 0x3, V112, V119, 0x3, V112]

================================

Block 0x177
[0x177:0x189]
---
Predecessors: [0x16f]
Successors: [0x1b5]
---
0x177 PUSH2 0x100
0x17a DUP1
0x17b DUP4
0x17c SLOAD
0x17d DIV
0x17e MUL
0x17f DUP4
0x180 MSTORE
0x181 SWAP2
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP2
0x186 PUSH2 0x1b5
0x189 JUMP
---
0x177: V125 = 0x100
0x17c: V126 = S[0x3]
0x17d: V127 = DIV V126 0x100
0x17e: V128 = MUL V127 0x100
0x180: M[V119] = V128
0x182: V129 = 0x20
0x184: V130 = ADD 0x20 V119
0x186: V131 = 0x1b5
0x189: JUMP 0x1b5
---
Entry stack: [V13, 0x64, 0x60, V99, 0x3, V112, V119, 0x3, V112]
Stack pops: 3
Stack additions: [V130, S1, S0]
Exit stack: [V13, 0x64, 0x60, V99, 0x3, V112, V130, 0x3, V112]

================================

Block 0x18a
[0x18a:0x197]
---
Predecessors: [0x16f]
Successors: [0x198]
---
0x18a JUMPDEST
0x18b DUP3
0x18c ADD
0x18d SWAP2
0x18e SWAP1
0x18f PUSH1 0x0
0x191 MSTORE
0x192 PUSH1 0x20
0x194 PUSH1 0x0
0x196 SHA3
0x197 SWAP1
---
0x18a: JUMPDEST 
0x18c: V132 = ADD V119 V112
0x18f: V133 = 0x0
0x191: M[0x0] = 0x3
0x192: V134 = 0x20
0x194: V135 = 0x0
0x196: V136 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x64, 0x60, V99, 0x3, V112, V119, 0x3, V112]
Stack pops: 3
Stack additions: [V132, V136, S2]
Exit stack: [V13, 0x64, 0x60, V99, 0x3, V112, V132, V136, V119]

================================

Block 0x198
[0x198:0x1ab]
---
Predecessors: [0x18a, 0x198]
Successors: [0x198, 0x1ac]
---
0x198 JUMPDEST
0x199 DUP2
0x19a SLOAD
0x19b DUP2
0x19c MSTORE
0x19d SWAP1
0x19e PUSH1 0x1
0x1a0 ADD
0x1a1 SWAP1
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 DUP1
0x1a6 DUP4
0x1a7 GT
0x1a8 PUSH2 0x198
0x1ab JUMPI
---
0x198: JUMPDEST 
0x19a: V137 = S[S1]
0x19c: M[S0] = V137
0x19e: V138 = 0x1
0x1a0: V139 = ADD 0x1 S1
0x1a2: V140 = 0x20
0x1a4: V141 = ADD 0x20 S0
0x1a7: V142 = GT V132 V141
0x1a8: V143 = 0x198
0x1ab: JUMPI 0x198 V142
---
Entry stack: [V13, 0x64, 0x60, V99, 0x3, V112, V132, S1, S0]
Stack pops: 3
Stack additions: [S2, V139, V141]
Exit stack: [V13, 0x64, 0x60, V99, 0x3, V112, V132, V139, V141]

================================

Block 0x1ac
[0x1ac:0x1b4]
---
Predecessors: [0x198]
Successors: [0x1b5]
---
0x1ac DUP3
0x1ad SWAP1
0x1ae SUB
0x1af PUSH1 0x1f
0x1b1 AND
0x1b2 DUP3
0x1b3 ADD
0x1b4 SWAP2
---
0x1ae: V144 = SUB V141 V132
0x1af: V145 = 0x1f
0x1b1: V146 = AND 0x1f V144
0x1b3: V147 = ADD V132 V146
---
Entry stack: [V13, 0x64, 0x60, V99, 0x3, V112, V132, V139, V141]
Stack pops: 3
Stack additions: [V147, S1, S2]
Exit stack: [V13, 0x64, 0x60, V99, 0x3, V112, V147, V139, V132]

================================

Block 0x1b5
[0x1b5:0x1be]
---
Predecessors: [0x129, 0x177, 0x1ac]
Successors: [0x64]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb SWAP1
0x1bc POP
0x1bd SWAP1
0x1be JUMP
---
0x1b5: JUMPDEST 
0x1be: JUMP 0x64
---
Entry stack: [V13, 0x64, 0x60, V99, 0x3, V112, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, V99]

================================

Block 0x1bf
[0x1bf:0x1cd]
---
Predecessors: [0xd9]
Successors: [0xe1]
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x1
0x1c2 SLOAD
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 SHL
0x1ca SUB
0x1cb AND
0x1cc SWAP1
0x1cd JUMP
---
0x1bf: JUMPDEST 
0x1c0: V148 = 0x1
0x1c2: V149 = S[0x1]
0x1c3: V150 = 0x1
0x1c5: V151 = 0x1
0x1c7: V152 = 0xa0
0x1c9: V153 = SHL 0xa0 0x1
0x1ca: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x1cd: JUMP 0xe1
---
Entry stack: [V13, 0xe1]
Stack pops: 1
Stack additions: [V155]
Exit stack: [V13, V155]

================================

Block 0x1ce
[0x1ce:0x1d8]
---
Predecessors: [0xfd]
Successors: [0x1d9, 0x1dd]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x2
0x1d1 SLOAD
0x1d2 TIMESTAMP
0x1d3 LT
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V156 = 0x2
0x1d1: V157 = S[0x2]
0x1d2: V158 = TIMESTAMP
0x1d3: V159 = LT V158 V157
0x1d4: V160 = ISZERO V159
0x1d5: V161 = 0x1dd
0x1d8: JUMPI 0x1dd V160
---
Entry stack: [V13, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V162 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105]

================================

Block 0x1dd
[0x1dd:0x227]
---
Predecessors: [0x1ce]
Successors: [0x228, 0x22c]
---
0x1dd JUMPDEST
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 SLOAD
0x1e2 PUSH1 0x40
0x1e4 DUP1
0x1e5 MLOAD
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xe0
0x1ea SHL
0x1eb PUSH4 0x70a08231
0x1f0 MUL
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 ADDRESS
0x1f4 PUSH1 0x4
0x1f6 DUP3
0x1f7 ADD
0x1f8 MSTORE
0x1f9 SWAP1
0x1fa MLOAD
0x1fb PUSH1 0x1
0x1fd PUSH1 0x1
0x1ff PUSH1 0xa0
0x201 SHL
0x202 SUB
0x203 SWAP1
0x204 SWAP3
0x205 AND
0x206 SWAP2
0x207 PUSH4 0x70a08231
0x20c SWAP2
0x20d PUSH1 0x24
0x20f DUP1
0x210 DUP3
0x211 ADD
0x212 SWAP3
0x213 PUSH1 0x20
0x215 SWAP3
0x216 SWAP1
0x217 SWAP2
0x218 SWAP1
0x219 DUP3
0x21a SWAP1
0x21b SUB
0x21c ADD
0x21d DUP2
0x21e DUP7
0x21f DUP1
0x220 EXTCODESIZE
0x221 ISZERO
0x222 DUP1
0x223 ISZERO
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V163 = 0x0
0x1e1: V164 = S[0x0]
0x1e2: V165 = 0x40
0x1e5: V166 = M[0x40]
0x1e6: V167 = 0x1
0x1e8: V168 = 0xe0
0x1ea: V169 = SHL 0xe0 0x1
0x1eb: V170 = 0x70a08231
0x1f0: V171 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1f2: M[V166] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1f3: V172 = ADDRESS
0x1f4: V173 = 0x4
0x1f7: V174 = ADD V166 0x4
0x1f8: M[V174] = V172
0x1fa: V175 = M[0x40]
0x1fb: V176 = 0x1
0x1fd: V177 = 0x1
0x1ff: V178 = 0xa0
0x201: V179 = SHL 0xa0 0x1
0x202: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x205: V181 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x207: V182 = 0x70a08231
0x20d: V183 = 0x24
0x211: V184 = ADD V166 0x24
0x213: V185 = 0x20
0x21b: V186 = SUB V166 V175
0x21c: V187 = ADD V186 0x24
0x220: V188 = EXTCODESIZE V181
0x221: V189 = ISZERO V188
0x223: V190 = ISZERO V189
0x224: V191 = 0x22c
0x227: JUMPI 0x22c V190
---
Entry stack: [V13, 0x105]
Stack pops: 0
Stack additions: [0x0, V181, 0x70a08231, V184, 0x20, V175, V187, V175, V181, V189]
Exit stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, 0x20, V175, V187, V175, V181, V189]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x1dd]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V192 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, 0x20, V175, V187, V175, V181, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, 0x20, V175, V187, V175, V181, V189]

================================

Block 0x22c
[0x22c:0x236]
---
Predecessors: [0x1dd]
Successors: [0x237, 0x240]
---
0x22c JUMPDEST
0x22d POP
0x22e GAS
0x22f STATICCALL
0x230 ISZERO
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x240
0x236 JUMPI
---
0x22c: JUMPDEST 
0x22e: V193 = GAS
0x22f: V194 = STATICCALL V193 V181 V175 V187 V175 0x20
0x230: V195 = ISZERO V194
0x232: V196 = ISZERO V195
0x233: V197 = 0x240
0x236: JUMPI 0x240 V196
---
Entry stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, 0x20, V175, V187, V175, V181, V189]
Stack pops: 6
Stack additions: [V195]
Exit stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, V195]

================================

Block 0x237
[0x237:0x23f]
---
Predecessors: [0x22c]
Successors: []
---
0x237 RETURNDATASIZE
0x238 PUSH1 0x0
0x23a DUP1
0x23b RETURNDATACOPY
0x23c RETURNDATASIZE
0x23d PUSH1 0x0
0x23f REVERT
---
0x237: V198 = RETURNDATASIZE
0x238: V199 = 0x0
0x23b: RETURNDATACOPY 0x0 0x0 V198
0x23c: V200 = RETURNDATASIZE
0x23d: V201 = 0x0
0x23f: REVERT 0x0 V200
---
Entry stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, V195]

================================

Block 0x240
[0x240:0x251]
---
Predecessors: [0x22c]
Successors: [0x252, 0x256]
---
0x240 JUMPDEST
0x241 POP
0x242 POP
0x243 POP
0x244 POP
0x245 PUSH1 0x40
0x247 MLOAD
0x248 RETURNDATASIZE
0x249 PUSH1 0x20
0x24b DUP2
0x24c LT
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x240: JUMPDEST 
0x245: V202 = 0x40
0x247: V203 = M[0x40]
0x248: V204 = RETURNDATASIZE
0x249: V205 = 0x20
0x24c: V206 = LT V204 0x20
0x24d: V207 = ISZERO V206
0x24e: V208 = 0x256
0x251: JUMPI 0x256 V207
---
Entry stack: [V13, 0x105, 0x0, V181, 0x70a08231, V184, V195]
Stack pops: 4
Stack additions: [V203, V204]
Exit stack: [V13, 0x105, 0x0, V203, V204]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x240]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V209 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105, 0x0, V203, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, 0x0, V203, V204]

================================

Block 0x256
[0x256:0x25f]
---
Predecessors: [0x240]
Successors: [0x260, 0x264]
---
0x256 JUMPDEST
0x257 POP
0x258 MLOAD
0x259 SWAP1
0x25a POP
0x25b DUP1
0x25c PUSH2 0x264
0x25f JUMPI
---
0x256: JUMPDEST 
0x258: V210 = M[V203]
0x25c: V211 = 0x264
0x25f: JUMPI 0x264 V210
---
Entry stack: [V13, 0x105, 0x0, V203, V204]
Stack pops: 3
Stack additions: [V210]
Exit stack: [V13, 0x105, V210]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x256]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V212 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, V210]

================================

Block 0x264
[0x264:0x286]
---
Predecessors: [0x256]
Successors: [0x29f]
---
0x264 JUMPDEST
0x265 PUSH1 0x1
0x267 SLOAD
0x268 PUSH1 0x0
0x26a SLOAD
0x26b PUSH2 0x287
0x26e SWAP2
0x26f PUSH1 0x1
0x271 PUSH1 0x1
0x273 PUSH1 0xa0
0x275 SHL
0x276 SUB
0x277 SWAP2
0x278 DUP3
0x279 AND
0x27a SWAP2
0x27b AND
0x27c DUP4
0x27d PUSH4 0xffffffff
0x282 PUSH2 0x29f
0x285 AND
0x286 JUMP
---
0x264: JUMPDEST 
0x265: V213 = 0x1
0x267: V214 = S[0x1]
0x268: V215 = 0x0
0x26a: V216 = S[0x0]
0x26b: V217 = 0x287
0x26f: V218 = 0x1
0x271: V219 = 0x1
0x273: V220 = 0xa0
0x275: V221 = SHL 0xa0 0x1
0x276: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x27b: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x27d: V225 = 0xffffffff
0x282: V226 = 0x29f
0x285: V227 = AND 0x29f 0xffffffff
0x286: JUMP 0x29f
---
Entry stack: [V13, 0x105, V210]
Stack pops: 1
Stack additions: [S0, 0x287, V223, V224, S0]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210]

================================

Block 0x287
[0x287:0x289]
---
Predecessors: [0x2f4]
Successors: [0x105]
---
0x287 JUMPDEST
0x288 POP
0x289 JUMP
---
0x287: JUMPDEST 
0x289: JUMP 0x105
---
Entry stack: [V13, 0x105, V210]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x28a
[0x28a:0x28f]
---
Predecessors: [0x107]
Successors: [0x10f]
---
0x28a JUMPDEST
0x28b PUSH1 0x2
0x28d SLOAD
0x28e SWAP1
0x28f JUMP
---
0x28a: JUMPDEST 
0x28b: V228 = 0x2
0x28d: V229 = S[0x2]
0x28f: JUMP 0x10f
---
Entry stack: [V13, 0x10f]
Stack pops: 1
Stack additions: [V229]
Exit stack: [V13, V229]

================================

Block 0x290
[0x290:0x29e]
---
Predecessors: [0x121]
Successors: [0xe1]
---
0x290 JUMPDEST
0x291 PUSH1 0x0
0x293 SLOAD
0x294 PUSH1 0x1
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a SHL
0x29b SUB
0x29c AND
0x29d SWAP1
0x29e JUMP
---
0x290: JUMPDEST 
0x291: V230 = 0x0
0x293: V231 = S[0x0]
0x294: V232 = 0x1
0x296: V233 = 0x1
0x298: V234 = 0xa0
0x29a: V235 = SHL 0xa0 0x1
0x29b: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x29e: JUMP 0xe1
---
Entry stack: [V13, 0xe1]
Stack pops: 1
Stack additions: [V237]
Exit stack: [V13, V237]

================================

Block 0x29f
[0x29f:0x2f3]
---
Predecessors: [0x264]
Successors: [0x2f9]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x40
0x2a2 DUP1
0x2a3 MLOAD
0x2a4 PUSH1 0x1
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa SHL
0x2ab SUB
0x2ac DUP5
0x2ad AND
0x2ae PUSH1 0x24
0x2b0 DUP3
0x2b1 ADD
0x2b2 MSTORE
0x2b3 PUSH1 0x44
0x2b5 DUP1
0x2b6 DUP3
0x2b7 ADD
0x2b8 DUP5
0x2b9 SWAP1
0x2ba MSTORE
0x2bb DUP3
0x2bc MLOAD
0x2bd DUP1
0x2be DUP4
0x2bf SUB
0x2c0 SWAP1
0x2c1 SWAP2
0x2c2 ADD
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x64
0x2c7 SWAP1
0x2c8 SWAP2
0x2c9 ADD
0x2ca SWAP1
0x2cb SWAP2
0x2cc MSTORE
0x2cd PUSH1 0x20
0x2cf DUP2
0x2d0 ADD
0x2d1 DUP1
0x2d2 MLOAD
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0x1
0x2d7 PUSH1 0xe0
0x2d9 SHL
0x2da SUB
0x2db AND
0x2dc PUSH1 0x1
0x2de PUSH1 0xe0
0x2e0 SHL
0x2e1 PUSH4 0xa9059cbb
0x2e6 MUL
0x2e7 OR
0x2e8 SWAP1
0x2e9 MSTORE
0x2ea PUSH2 0x2f4
0x2ed SWAP1
0x2ee DUP5
0x2ef SWAP1
0x2f0 PUSH2 0x2f9
0x2f3 JUMP
---
0x29f: JUMPDEST 
0x2a0: V238 = 0x40
0x2a3: V239 = M[0x40]
0x2a4: V240 = 0x1
0x2a6: V241 = 0x1
0x2a8: V242 = 0xa0
0x2aa: V243 = SHL 0xa0 0x1
0x2ab: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V245 = AND V224 0xffffffffffffffffffffffffffffffffffffffff
0x2ae: V246 = 0x24
0x2b1: V247 = ADD V239 0x24
0x2b2: M[V247] = V245
0x2b3: V248 = 0x44
0x2b7: V249 = ADD V239 0x44
0x2ba: M[V249] = V210
0x2bc: V250 = M[0x40]
0x2bf: V251 = SUB V239 V250
0x2c2: V252 = ADD 0x44 V251
0x2c4: M[V250] = V252
0x2c5: V253 = 0x64
0x2c9: V254 = ADD V239 0x64
0x2cc: M[0x40] = V254
0x2cd: V255 = 0x20
0x2d0: V256 = ADD V250 0x20
0x2d2: V257 = M[V256]
0x2d3: V258 = 0x1
0x2d5: V259 = 0x1
0x2d7: V260 = 0xe0
0x2d9: V261 = SHL 0xe0 0x1
0x2da: V262 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x2db: V263 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff V257
0x2dc: V264 = 0x1
0x2de: V265 = 0xe0
0x2e0: V266 = SHL 0xe0 0x1
0x2e1: V267 = 0xa9059cbb
0x2e6: V268 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2e7: V269 = OR 0xa9059cbb00000000000000000000000000000000000000000000000000000000 V263
0x2e9: M[V256] = V269
0x2ea: V270 = 0x2f4
0x2f0: V271 = 0x2f9
0x2f3: JUMP 0x2f9
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x2f4, S2, V250]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250]

================================

Block 0x2f4
[0x2f4:0x2f8]
---
Predecessors: [0x3ef]
Successors: [0x287]
---
0x2f4 JUMPDEST
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 JUMP
---
0x2f4: JUMPDEST 
0x2f8: JUMP 0x287
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x105, V210]

================================

Block 0x2f9
[0x2f9:0x30a]
---
Predecessors: [0x29f]
Successors: [0x3f5]
---
0x2f9 JUMPDEST
0x2fa PUSH2 0x30b
0x2fd DUP3
0x2fe PUSH1 0x1
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 SHL
0x305 SUB
0x306 AND
0x307 PUSH2 0x3f5
0x30a JUMP
---
0x2f9: JUMPDEST 
0x2fa: V272 = 0x30b
0x2fe: V273 = 0x1
0x300: V274 = 0x1
0x302: V275 = 0xa0
0x304: V276 = SHL 0xa0 0x1
0x305: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x307: V279 = 0x3f5
0x30a: JUMP 0x3f5
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250]
Stack pops: 2
Stack additions: [S1, S0, 0x30b, V278]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x30b, V278]

================================

Block 0x30b
[0x30b:0x30f]
---
Predecessors: [0x3f5]
Successors: [0x310, 0x314]
---
0x30b JUMPDEST
0x30c PUSH2 0x314
0x30f JUMPI
---
0x30b: JUMPDEST 
0x30c: V280 = 0x314
0x30f: JUMPI 0x314 V365
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V365]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x30b]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V281 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250]

================================

Block 0x314
[0x314:0x332]
---
Predecessors: [0x30b]
Successors: [0x333]
---
0x314 JUMPDEST
0x315 PUSH1 0x0
0x317 PUSH1 0x60
0x319 DUP4
0x31a PUSH1 0x1
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 SHL
0x321 SUB
0x322 AND
0x323 DUP4
0x324 PUSH1 0x40
0x326 MLOAD
0x327 DUP1
0x328 DUP3
0x329 DUP1
0x32a MLOAD
0x32b SWAP1
0x32c PUSH1 0x20
0x32e ADD
0x32f SWAP1
0x330 DUP1
0x331 DUP4
0x332 DUP4
---
0x314: JUMPDEST 
0x315: V282 = 0x0
0x317: V283 = 0x60
0x31a: V284 = 0x1
0x31c: V285 = 0x1
0x31e: V286 = 0xa0
0x320: V287 = SHL 0xa0 0x1
0x321: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x324: V290 = 0x40
0x326: V291 = M[0x40]
0x32a: V292 = M[V250]
0x32c: V293 = 0x20
0x32e: V294 = ADD 0x20 V250
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x60, V289, S0, V291, V291, V294, V292, V292, V291, V294]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V289, V250, V291, V291, V294, V292, V292, V291, V294]

================================

Block 0x333
[0x333:0x33b]
---
Predecessors: [0x314, 0x33c]
Successors: [0x33c, 0x352]
---
0x333 JUMPDEST
0x334 PUSH1 0x20
0x336 DUP4
0x337 LT
0x338 PUSH2 0x352
0x33b JUMPI
---
0x333: JUMPDEST 
0x334: V295 = 0x20
0x337: V296 = LT S2 0x20
0x338: V297 = 0x352
0x33b: JUMPI 0x352 V296
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V289, V250, V291, V291, V294, V292, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V289, V250, V291, V291, V294, V292, S2, S1, S0]

================================

Block 0x33c
[0x33c:0x351]
---
Predecessors: [0x333]
Successors: [0x333]
---
0x33c DUP1
0x33d MLOAD
0x33e DUP3
0x33f MSTORE
0x340 PUSH1 0x1f
0x342 NOT
0x343 SWAP1
0x344 SWAP3
0x345 ADD
0x346 SWAP2
0x347 PUSH1 0x20
0x349 SWAP2
0x34a DUP3
0x34b ADD
0x34c SWAP2
0x34d ADD
0x34e PUSH2 0x333
0x351 JUMP
---
0x33d: V298 = M[S0]
0x33f: M[S1] = V298
0x340: V299 = 0x1f
0x342: V300 = NOT 0x1f
0x345: V301 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x347: V302 = 0x20
0x34b: V303 = ADD 0x20 S1
0x34d: V304 = ADD 0x20 S0
0x34e: V305 = 0x333
0x351: JUMP 0x333
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V289, V250, V291, V291, V294, V292, S2, S1, S0]
Stack pops: 3
Stack additions: [V301, V303, V304]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V289, V250, V291, V291, V294, V292, V301, V303, V304]

================================

Block 0x352
[0x352:0x392]
---
Predecessors: [0x333]
Successors: [0x393, 0x3b4]
---
0x352 JUMPDEST
0x353 PUSH1 0x1
0x355 DUP4
0x356 PUSH1 0x20
0x358 SUB
0x359 PUSH2 0x100
0x35c EXP
0x35d SUB
0x35e DUP1
0x35f NOT
0x360 DUP3
0x361 MLOAD
0x362 AND
0x363 DUP2
0x364 DUP5
0x365 MLOAD
0x366 AND
0x367 DUP1
0x368 DUP3
0x369 OR
0x36a DUP6
0x36b MSTORE
0x36c POP
0x36d POP
0x36e POP
0x36f POP
0x370 POP
0x371 POP
0x372 SWAP1
0x373 POP
0x374 ADD
0x375 SWAP2
0x376 POP
0x377 POP
0x378 PUSH1 0x0
0x37a PUSH1 0x40
0x37c MLOAD
0x37d DUP1
0x37e DUP4
0x37f SUB
0x380 DUP2
0x381 PUSH1 0x0
0x383 DUP7
0x384 GAS
0x385 CALL
0x386 SWAP2
0x387 POP
0x388 POP
0x389 RETURNDATASIZE
0x38a DUP1
0x38b PUSH1 0x0
0x38d DUP2
0x38e EQ
0x38f PUSH2 0x3b4
0x392 JUMPI
---
0x352: JUMPDEST 
0x353: V306 = 0x1
0x356: V307 = 0x20
0x358: V308 = SUB 0x20 S2
0x359: V309 = 0x100
0x35c: V310 = EXP 0x100 V308
0x35d: V311 = SUB V310 0x1
0x35f: V312 = NOT V311
0x361: V313 = M[S0]
0x362: V314 = AND V313 V312
0x365: V315 = M[S1]
0x366: V316 = AND V315 V311
0x369: V317 = OR V314 V316
0x36b: M[S1] = V317
0x374: V318 = ADD V292 V291
0x378: V319 = 0x0
0x37a: V320 = 0x40
0x37c: V321 = M[0x40]
0x37f: V322 = SUB V318 V321
0x381: V323 = 0x0
0x384: V324 = GAS
0x385: V325 = CALL V324 V289 0x0 V321 V322 V321 0x0
0x389: V326 = RETURNDATASIZE
0x38b: V327 = 0x0
0x38e: V328 = EQ V326 0x0
0x38f: V329 = 0x3b4
0x392: JUMPI 0x3b4 V328
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V289, V250, V291, V291, V294, V292, S2, S1, S0]
Stack pops: 9
Stack additions: [V325, V326, V326]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V325, V326, V326]

================================

Block 0x393
[0x393:0x3b3]
---
Predecessors: [0x352]
Successors: [0x3b9]
---
0x393 PUSH1 0x40
0x395 MLOAD
0x396 SWAP2
0x397 POP
0x398 PUSH1 0x1f
0x39a NOT
0x39b PUSH1 0x3f
0x39d RETURNDATASIZE
0x39e ADD
0x39f AND
0x3a0 DUP3
0x3a1 ADD
0x3a2 PUSH1 0x40
0x3a4 MSTORE
0x3a5 RETURNDATASIZE
0x3a6 DUP3
0x3a7 MSTORE
0x3a8 RETURNDATASIZE
0x3a9 PUSH1 0x0
0x3ab PUSH1 0x20
0x3ad DUP5
0x3ae ADD
0x3af RETURNDATACOPY
0x3b0 PUSH2 0x3b9
0x3b3 JUMP
---
0x393: V330 = 0x40
0x395: V331 = M[0x40]
0x398: V332 = 0x1f
0x39a: V333 = NOT 0x1f
0x39b: V334 = 0x3f
0x39d: V335 = RETURNDATASIZE
0x39e: V336 = ADD V335 0x3f
0x39f: V337 = AND V336 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3a1: V338 = ADD V331 V337
0x3a2: V339 = 0x40
0x3a4: M[0x40] = V338
0x3a5: V340 = RETURNDATASIZE
0x3a7: M[V331] = V340
0x3a8: V341 = RETURNDATASIZE
0x3a9: V342 = 0x0
0x3ab: V343 = 0x20
0x3ae: V344 = ADD V331 0x20
0x3af: RETURNDATACOPY V344 0x0 V341
0x3b0: V345 = 0x3b9
0x3b3: JUMP 0x3b9
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V325, V326, V326]
Stack pops: 2
Stack additions: [V331, S0]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V325, V331, V326]

================================

Block 0x3b4
[0x3b4:0x3b8]
---
Predecessors: [0x352]
Successors: [0x3b9]
---
0x3b4 JUMPDEST
0x3b5 PUSH1 0x60
0x3b7 SWAP2
0x3b8 POP
---
0x3b4: JUMPDEST 
0x3b5: V346 = 0x60
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V325, V326, V326]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V325, 0x60, V326]

================================

Block 0x3b9
[0x3b9:0x3c3]
---
Predecessors: [0x393, 0x3b4]
Successors: [0x3c4, 0x3c8]
---
0x3b9 JUMPDEST
0x3ba POP
0x3bb SWAP2
0x3bc POP
0x3bd SWAP2
0x3be POP
0x3bf DUP2
0x3c0 PUSH2 0x3c8
0x3c3 JUMPI
---
0x3b9: JUMPDEST 
0x3c0: V347 = 0x3c8
0x3c3: JUMPI 0x3c8 V325
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x0, 0x60, V325, S1, V326]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S1]

================================

Block 0x3c4
[0x3c4:0x3c7]
---
Predecessors: [0x3b9]
Successors: []
---
0x3c4 PUSH1 0x0
0x3c6 DUP1
0x3c7 REVERT
---
0x3c4: V348 = 0x0
0x3c7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]

================================

Block 0x3c8
[0x3c8:0x3cf]
---
Predecessors: [0x3b9]
Successors: [0x3d0, 0x3ef]
---
0x3c8 JUMPDEST
0x3c9 DUP1
0x3ca MLOAD
0x3cb ISZERO
0x3cc PUSH2 0x3ef
0x3cf JUMPI
---
0x3c8: JUMPDEST 
0x3ca: V349 = M[S0]
0x3cb: V350 = ISZERO V349
0x3cc: V351 = 0x3ef
0x3cf: JUMPI 0x3ef V350
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]

================================

Block 0x3d0
[0x3d0:0x3df]
---
Predecessors: [0x3c8]
Successors: [0x3e0, 0x3e4]
---
0x3d0 DUP1
0x3d1 DUP1
0x3d2 PUSH1 0x20
0x3d4 ADD
0x3d5 SWAP1
0x3d6 MLOAD
0x3d7 PUSH1 0x20
0x3d9 DUP2
0x3da LT
0x3db ISZERO
0x3dc PUSH2 0x3e4
0x3df JUMPI
---
0x3d2: V352 = 0x20
0x3d4: V353 = ADD 0x20 S0
0x3d6: V354 = M[S0]
0x3d7: V355 = 0x20
0x3da: V356 = LT V354 0x20
0x3db: V357 = ISZERO V356
0x3dc: V358 = 0x3e4
0x3df: JUMPI 0x3e4 V357
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]
Stack pops: 1
Stack additions: [S0, V353, V354]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0, V353, V354]

================================

Block 0x3e0
[0x3e0:0x3e3]
---
Predecessors: [0x3d0]
Successors: []
---
0x3e0 PUSH1 0x0
0x3e2 DUP1
0x3e3 REVERT
---
0x3e0: V359 = 0x0
0x3e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S2, V353, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S2, V353, V354]

================================

Block 0x3e4
[0x3e4:0x3ea]
---
Predecessors: [0x3d0]
Successors: [0x3eb, 0x3ef]
---
0x3e4 JUMPDEST
0x3e5 POP
0x3e6 MLOAD
0x3e7 PUSH2 0x3ef
0x3ea JUMPI
---
0x3e4: JUMPDEST 
0x3e6: V360 = M[V353]
0x3e7: V361 = 0x3ef
0x3ea: JUMPI 0x3ef V360
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S2, V353, V354]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S2]

================================

Block 0x3eb
[0x3eb:0x3ee]
---
Predecessors: [0x3e4]
Successors: []
---
0x3eb PUSH1 0x0
0x3ed DUP1
0x3ee REVERT
---
0x3eb: V362 = 0x0
0x3ee: REVERT 0x0 0x0
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]

================================

Block 0x3ef
[0x3ef:0x3f4]
---
Predecessors: [0x3c8, 0x3e4]
Successors: [0x2f4]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 JUMP
---
0x3ef: JUMPDEST 
0x3f4: JUMP 0x2f4
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V325, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210]

================================

Block 0x3f5
[0x3f5:0x3fa]
---
Predecessors: [0x2f9]
Successors: [0x30b]
---
0x3f5 JUMPDEST
0x3f6 EXTCODESIZE
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 SWAP1
0x3fa JUMP
---
0x3f5: JUMPDEST 
0x3f6: V363 = EXTCODESIZE V278
0x3f7: V364 = ISZERO V363
0x3f8: V365 = ISZERO V364
0x3fa: JUMP 0x30b
---
Entry stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, 0x30b, V278]
Stack pops: 2
Stack additions: [V365]
Exit stack: [V13, 0x105, V210, 0x287, V223, V224, V210, 0x2f4, V223, V250, V365]

================================

Block 0x3fb
[0x3fb:0x42d]
---
Predecessors: []
Successors: []
---
0x3fb INVALID
0x3fc LOG1
0x3fd PUSH6 0x627a7a723058
0x404 SHA3
0x405 MOD
0x406 CALLVALUE
0x407 SWAP1
0x408 DUP4
0x409 MISSING 0xf8
0x40a MISSING 0x25
0x40b PUSH7 0x8887f246934533
0x413 PUSH26 0xb1cf136f93dad60b647601696f1975b1300029
---
0x3fb: INVALID 
0x3fc: LOG S0 S1 S2
0x3fd: V366 = 0x627a7a723058
0x404: V367 = SHA3 0x627a7a723058 S3
0x405: V368 = MOD V367 S4
0x406: V369 = CALLVALUE
0x409: MISSING 0xf8
0x40a: MISSING 0x25
0x40b: V370 = 0x8887f246934533
0x413: V371 = 0xb1cf136f93dad60b647601696f1975b1300029
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, V368, V369, S5, S6, 0xb1cf136f93dad60b647601696f1975b1300029, 0x8887f246934533]
Exit stack: []

================================

Function 0:
Public function signature: 0x26d111f5
Entry block: 0x5c
Exit block: 0xcb
Body: 0x5c, 0x64, 0x86, 0x8f, 0x9e, 0xb2, 0xcb, 0x129, 0x16f, 0x177, 0x18a, 0x198, 0x1ac, 0x1b5

Function 1:
Public function signature: 0x38af3eed
Entry block: 0xd9
Exit block: 0xe1
Body: 0xd9, 0xe1, 0x1bf

Function 2:
Public function signature: 0x86d1a69f
Entry block: 0xfd
Exit block: 0x105
Body: 0xfd, 0x105, 0x1ce, 0x1d9, 0x1dd, 0x228, 0x22c, 0x237, 0x240, 0x252, 0x256, 0x260, 0x264, 0x287, 0x29f, 0x2f4, 0x2f9, 0x30b, 0x310, 0x314, 0x333, 0x33c, 0x352, 0x393, 0x3b4, 0x3b9, 0x3c4, 0x3c8, 0x3d0, 0x3e0, 0x3e4, 0x3eb, 0x3ef, 0x3f5

Function 3:
Public function signature: 0xb91d4001
Entry block: 0x107
Exit block: 0x10f
Body: 0x107, 0x10f, 0x28a

Function 4:
Public function signature: 0xfc0c546a
Entry block: 0x121
Exit block: 0xe1
Body: 0xe1, 0x121, 0x290

Function 5:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

