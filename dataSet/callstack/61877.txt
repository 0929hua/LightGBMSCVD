Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x10e]
---
0x40 DUP1
0x41 PUSH4 0x2986c0e5
0x46 EQ
0x47 PUSH2 0x10e
0x4a JUMPI
---
0x41: V15 = 0x2986c0e5
0x46: V16 = EQ 0x2986c0e5 V11
0x47: V17 = 0x10e
0x4a: JUMPI 0x10e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x135]
---
0x4b DUP1
0x4c PUSH4 0x47c05c22
0x51 EQ
0x52 PUSH2 0x135
0x55 JUMPI
---
0x4c: V18 = 0x47c05c22
0x51: V19 = EQ 0x47c05c22 V11
0x52: V20 = 0x135
0x55: JUMPI 0x135 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x155]
---
0x56 DUP1
0x57 PUSH4 0x5fd8c710
0x5c EQ
0x5d PUSH2 0x155
0x60 JUMPI
---
0x57: V21 = 0x5fd8c710
0x5c: V22 = EQ 0x5fd8c710 V11
0x5d: V23 = 0x155
0x60: JUMPI 0x155 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x16a]
---
0x61 DUP1
0x62 PUSH4 0x6b88f4ae
0x67 EQ
0x68 PUSH2 0x16a
0x6b JUMPI
---
0x62: V24 = 0x6b88f4ae
0x67: V25 = EQ 0x6b88f4ae V11
0x68: V26 = 0x16a
0x6b: JUMPI 0x16a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x182]
---
0x6c DUP1
0x6d PUSH4 0x95d89b41
0x72 EQ
0x73 PUSH2 0x182
0x76 JUMPI
---
0x6d: V27 = 0x95d89b41
0x72: V28 = EQ 0x95d89b41 V11
0x73: V29 = 0x182
0x76: JUMPI 0x182 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x197]
---
0x77 DUP1
0x78 PUSH4 0xf2fde38b
0x7d EQ
0x7e PUSH2 0x197
0x81 JUMPI
---
0x78: V30 = 0xf2fde38b
0x7d: V31 = EQ 0xf2fde38b V11
0x7e: V32 = 0x197
0x81: JUMPI 0x197 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x2fa, 0x351, 0x36b, 0x3be]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0xd]
Successors: [0x8c, 0x90]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 DUP1
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x84: JUMPDEST 
0x85: V33 = CALLVALUE
0x87: V34 = ISZERO V33
0x88: V35 = 0x90
0x8b: JUMPI 0x90 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33]
Exit stack: [V11, V33]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x84]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V36 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V11, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33]

================================

Block 0x90
[0x90:0x98]
---
Predecessors: [0x84]
Successors: [0x1b8]
---
0x90 JUMPDEST
0x91 POP
0x92 PUSH2 0x99
0x95 PUSH2 0x1b8
0x98 JUMP
---
0x90: JUMPDEST 
0x92: V37 = 0x99
0x95: V38 = 0x1b8
0x98: JUMP 0x1b8
---
Entry stack: [V11, V33]
Stack pops: 1
Stack additions: [0x99]
Exit stack: [V11, 0x99]

================================

Block 0x99
[0x99:0xba]
---
Predecessors: [0x1b8, 0x370]
Successors: [0xbb]
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c DUP1
0x9d MLOAD
0x9e PUSH1 0x20
0xa0 DUP1
0xa1 DUP3
0xa2 MSTORE
0xa3 DUP4
0xa4 MLOAD
0xa5 DUP2
0xa6 DUP4
0xa7 ADD
0xa8 MSTORE
0xa9 DUP4
0xaa MLOAD
0xab SWAP2
0xac SWAP3
0xad DUP4
0xae SWAP3
0xaf SWAP1
0xb0 DUP4
0xb1 ADD
0xb2 SWAP2
0xb3 DUP6
0xb4 ADD
0xb5 SWAP1
0xb6 DUP1
0xb7 DUP4
0xb8 DUP4
0xb9 PUSH1 0x0
---
0x99: JUMPDEST 
0x9a: V39 = 0x40
0x9d: V40 = M[0x40]
0x9e: V41 = 0x20
0xa2: M[V40] = 0x20
0xa4: V42 = M[S0]
0xa7: V43 = ADD V40 0x20
0xa8: M[V43] = V42
0xaa: V44 = M[S0]
0xb1: V45 = ADD V40 0x40
0xb4: V46 = ADD S0 0x20
0xb9: V47 = 0x0
---
Entry stack: [V11, 0x99, S0]
Stack pops: 1
Stack additions: [S0, V40, V40, V45, V46, V44, V44, V45, V46, 0x0]
Exit stack: [V11, 0x99, S0, V40, V40, V45, V46, V44, V44, V45, V46, 0x0]

================================

Block 0xbb
[0xbb:0xc3]
---
Predecessors: [0x99, 0xc4]
Successors: [0xc4, 0xd3]
---
0xbb JUMPDEST
0xbc DUP4
0xbd DUP2
0xbe LT
0xbf ISZERO
0xc0 PUSH2 0xd3
0xc3 JUMPI
---
0xbb: JUMPDEST 
0xbe: V48 = LT S0 V44
0xbf: V49 = ISZERO V48
0xc0: V50 = 0xd3
0xc3: JUMPI 0xd3 V49
---
Entry stack: [V11, 0x99, S9, V40, V40, V45, V46, V44, V44, V45, V46, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x99, S9, V40, V40, V45, V46, V44, V44, V45, V46, S0]

================================

Block 0xc4
[0xc4:0xd2]
---
Predecessors: [0xbb]
Successors: [0xbb]
---
0xc4 DUP2
0xc5 DUP2
0xc6 ADD
0xc7 MLOAD
0xc8 DUP4
0xc9 DUP3
0xca ADD
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf PUSH2 0xbb
0xd2 JUMP
---
0xc6: V51 = ADD S0 V46
0xc7: V52 = M[V51]
0xca: V53 = ADD S0 V45
0xcb: M[V53] = V52
0xcc: V54 = 0x20
0xce: V55 = ADD 0x20 S0
0xcf: V56 = 0xbb
0xd2: JUMP 0xbb
---
Entry stack: [V11, 0x99, S9, V40, V40, V45, V46, V44, V44, V45, V46, S0]
Stack pops: 3
Stack additions: [S2, S1, V55]
Exit stack: [V11, 0x99, S9, V40, V40, V45, V46, V44, V44, V45, V46, V55]

================================

Block 0xd3
[0xd3:0xe6]
---
Predecessors: [0xbb]
Successors: [0xe7, 0x100]
---
0xd3 JUMPDEST
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 SWAP1
0xd9 POP
0xda SWAP1
0xdb DUP2
0xdc ADD
0xdd SWAP1
0xde PUSH1 0x1f
0xe0 AND
0xe1 DUP1
0xe2 ISZERO
0xe3 PUSH2 0x100
0xe6 JUMPI
---
0xd3: JUMPDEST 
0xdc: V57 = ADD V44 V45
0xde: V58 = 0x1f
0xe0: V59 = AND 0x1f V44
0xe2: V60 = ISZERO V59
0xe3: V61 = 0x100
0xe6: JUMPI 0x100 V60
---
Entry stack: [V11, 0x99, S9, V40, V40, V45, V46, V44, V44, V45, V46, S0]
Stack pops: 7
Stack additions: [V57, V59]
Exit stack: [V11, 0x99, S9, V40, V40, V57, V59]

================================

Block 0xe7
[0xe7:0xff]
---
Predecessors: [0xd3]
Successors: [0x100]
---
0xe7 DUP1
0xe8 DUP3
0xe9 SUB
0xea DUP1
0xeb MLOAD
0xec PUSH1 0x1
0xee DUP4
0xef PUSH1 0x20
0xf1 SUB
0xf2 PUSH2 0x100
0xf5 EXP
0xf6 SUB
0xf7 NOT
0xf8 AND
0xf9 DUP2
0xfa MSTORE
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP2
0xff POP
---
0xe9: V62 = SUB V57 V59
0xeb: V63 = M[V62]
0xec: V64 = 0x1
0xef: V65 = 0x20
0xf1: V66 = SUB 0x20 V59
0xf2: V67 = 0x100
0xf5: V68 = EXP 0x100 V66
0xf6: V69 = SUB V68 0x1
0xf7: V70 = NOT V69
0xf8: V71 = AND V70 V63
0xfa: M[V62] = V71
0xfb: V72 = 0x20
0xfd: V73 = ADD 0x20 V62
---
Entry stack: [V11, 0x99, S4, V40, V40, V57, V59]
Stack pops: 2
Stack additions: [V73, S0]
Exit stack: [V11, 0x99, S4, V40, V40, V73, V59]

================================

Block 0x100
[0x100:0x10d]
---
Predecessors: [0xd3, 0xe7]
Successors: []
---
0x100 JUMPDEST
0x101 POP
0x102 SWAP3
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 DUP1
0x10a SWAP2
0x10b SUB
0x10c SWAP1
0x10d RETURN
---
0x100: JUMPDEST 
0x106: V74 = 0x40
0x108: V75 = M[0x40]
0x10b: V76 = SUB S1 V75
0x10d: RETURN V75 V76
---
Entry stack: [V11, 0x99, S4, V40, V40, S1, V59]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x99]

================================

Block 0x10e
[0x10e:0x115]
---
Predecessors: [0x40]
Successors: [0x116, 0x11a]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 DUP1
0x111 ISZERO
0x112 PUSH2 0x11a
0x115 JUMPI
---
0x10e: JUMPDEST 
0x10f: V77 = CALLVALUE
0x111: V78 = ISZERO V77
0x112: V79 = 0x11a
0x115: JUMPI 0x11a V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0x10e]
Successors: []
---
0x116 PUSH1 0x0
0x118 DUP1
0x119 REVERT
---
0x116: V80 = 0x0
0x119: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x11a
[0x11a:0x122]
---
Predecessors: [0x10e]
Successors: [0x1ef]
---
0x11a JUMPDEST
0x11b POP
0x11c PUSH2 0x123
0x11f PUSH2 0x1ef
0x122 JUMP
---
0x11a: JUMPDEST 
0x11c: V81 = 0x123
0x11f: V82 = 0x1ef
0x122: JUMP 0x1ef
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x123]
Exit stack: [V11, 0x123]

================================

Block 0x123
[0x123:0x134]
---
Predecessors: [0x1ef]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 DUP1
0x127 MLOAD
0x128 SWAP2
0x129 DUP3
0x12a MSTORE
0x12b MLOAD
0x12c SWAP1
0x12d DUP2
0x12e SWAP1
0x12f SUB
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP1
0x134 RETURN
---
0x123: JUMPDEST 
0x124: V83 = 0x40
0x127: V84 = M[0x40]
0x12a: M[V84] = V143
0x12b: V85 = M[0x40]
0x12f: V86 = SUB V84 V85
0x130: V87 = 0x20
0x132: V88 = ADD 0x20 V86
0x134: RETURN V85 V88
---
Entry stack: [V11, 0x123, V143]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x123]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x4b]
Successors: [0x13d, 0x141]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x135: JUMPDEST 
0x136: V89 = CALLVALUE
0x138: V90 = ISZERO V89
0x139: V91 = 0x141
0x13c: JUMPI 0x141 V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x135]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V92 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x141
[0x141:0x154]
---
Predecessors: [0x135]
Successors: [0x1f5]
---
0x141 JUMPDEST
0x142 POP
0x143 PUSH2 0x82
0x146 PUSH1 0x4
0x148 DUP1
0x149 CALLDATALOAD
0x14a PUSH1 0x24
0x14c DUP2
0x14d ADD
0x14e SWAP2
0x14f ADD
0x150 CALLDATALOAD
0x151 PUSH2 0x1f5
0x154 JUMP
---
0x141: JUMPDEST 
0x143: V93 = 0x82
0x146: V94 = 0x4
0x149: V95 = CALLDATALOAD 0x4
0x14a: V96 = 0x24
0x14d: V97 = ADD V95 0x24
0x14f: V98 = ADD 0x4 V95
0x150: V99 = CALLDATALOAD V98
0x151: V100 = 0x1f5
0x154: JUMP 0x1f5
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0x82, V97, V99]
Exit stack: [V11, 0x82, V97, V99]

================================

Block 0x155
[0x155:0x15c]
---
Predecessors: [0x56]
Successors: [0x15d, 0x161]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 DUP1
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x155: JUMPDEST 
0x156: V101 = CALLVALUE
0x158: V102 = ISZERO V101
0x159: V103 = 0x161
0x15c: JUMPI 0x161 V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x155]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V104 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V11, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V101]

================================

Block 0x161
[0x161:0x169]
---
Predecessors: [0x155]
Successors: [0x2ff]
---
0x161 JUMPDEST
0x162 POP
0x163 PUSH2 0x82
0x166 PUSH2 0x2ff
0x169 JUMP
---
0x161: JUMPDEST 
0x163: V105 = 0x82
0x166: V106 = 0x2ff
0x169: JUMP 0x2ff
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x61]
Successors: [0x172, 0x176]
---
0x16a JUMPDEST
0x16b CALLVALUE
0x16c DUP1
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x16a: JUMPDEST 
0x16b: V107 = CALLVALUE
0x16d: V108 = ISZERO V107
0x16e: V109 = 0x176
0x171: JUMPI 0x176 V108
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V11, V107]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x16a]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V110 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V11, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V107]

================================

Block 0x176
[0x176:0x181]
---
Predecessors: [0x16a]
Successors: [0x354]
---
0x176 JUMPDEST
0x177 POP
0x178 PUSH2 0x82
0x17b PUSH1 0x4
0x17d CALLDATALOAD
0x17e PUSH2 0x354
0x181 JUMP
---
0x176: JUMPDEST 
0x178: V111 = 0x82
0x17b: V112 = 0x4
0x17d: V113 = CALLDATALOAD 0x4
0x17e: V114 = 0x354
0x181: JUMP 0x354
---
Entry stack: [V11, V107]
Stack pops: 1
Stack additions: [0x82, V113]
Exit stack: [V11, 0x82, V113]

================================

Block 0x182
[0x182:0x189]
---
Predecessors: [0x6c]
Successors: [0x18a, 0x18e]
---
0x182 JUMPDEST
0x183 CALLVALUE
0x184 DUP1
0x185 ISZERO
0x186 PUSH2 0x18e
0x189 JUMPI
---
0x182: JUMPDEST 
0x183: V115 = CALLVALUE
0x185: V116 = ISZERO V115
0x186: V117 = 0x18e
0x189: JUMPI 0x18e V116
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V115]
Exit stack: [V11, V115]

================================

Block 0x18a
[0x18a:0x18d]
---
Predecessors: [0x182]
Successors: []
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d REVERT
---
0x18a: V118 = 0x0
0x18d: REVERT 0x0 0x0
---
Entry stack: [V11, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V115]

================================

Block 0x18e
[0x18e:0x196]
---
Predecessors: [0x182]
Successors: [0x370]
---
0x18e JUMPDEST
0x18f POP
0x190 PUSH2 0x99
0x193 PUSH2 0x370
0x196 JUMP
---
0x18e: JUMPDEST 
0x190: V119 = 0x99
0x193: V120 = 0x370
0x196: JUMP 0x370
---
Entry stack: [V11, V115]
Stack pops: 1
Stack additions: [0x99]
Exit stack: [V11, 0x99]

================================

Block 0x197
[0x197:0x19e]
---
Predecessors: [0x77]
Successors: [0x19f, 0x1a3]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 DUP1
0x19a ISZERO
0x19b PUSH2 0x1a3
0x19e JUMPI
---
0x197: JUMPDEST 
0x198: V121 = CALLVALUE
0x19a: V122 = ISZERO V121
0x19b: V123 = 0x1a3
0x19e: JUMPI 0x1a3 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x19f
[0x19f:0x1a2]
---
Predecessors: [0x197]
Successors: []
---
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 REVERT
---
0x19f: V124 = 0x0
0x1a2: REVERT 0x0 0x0
---
Entry stack: [V11, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V121]

================================

Block 0x1a3
[0x1a3:0x1b7]
---
Predecessors: [0x197]
Successors: [0x3a7]
---
0x1a3 JUMPDEST
0x1a4 POP
0x1a5 PUSH2 0x82
0x1a8 PUSH1 0x1
0x1aa PUSH1 0xa0
0x1ac PUSH1 0x2
0x1ae EXP
0x1af SUB
0x1b0 PUSH1 0x4
0x1b2 CALLDATALOAD
0x1b3 AND
0x1b4 PUSH2 0x3a7
0x1b7 JUMP
---
0x1a3: JUMPDEST 
0x1a5: V125 = 0x82
0x1a8: V126 = 0x1
0x1aa: V127 = 0xa0
0x1ac: V128 = 0x2
0x1ae: V129 = EXP 0x2 0xa0
0x1af: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V131 = 0x4
0x1b2: V132 = CALLDATALOAD 0x4
0x1b3: V133 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V134 = 0x3a7
0x1b7: JUMP 0x3a7
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: [0x82, V133]
Exit stack: [V11, 0x82, V133]

================================

Block 0x1b8
[0x1b8:0x1ee]
---
Predecessors: [0x90]
Successors: [0x99]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb DUP1
0x1bc MLOAD
0x1bd DUP1
0x1be DUP3
0x1bf ADD
0x1c0 SWAP1
0x1c1 SWAP2
0x1c2 MSTORE
0x1c3 PUSH1 0x1c
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH32 0xe286932053656520436f6465204f662054686520436f6e747261637400000000
0x1e8 PUSH1 0x20
0x1ea DUP3
0x1eb ADD
0x1ec MSTORE
0x1ed DUP2
0x1ee JUMP
---
0x1b8: JUMPDEST 
0x1b9: V135 = 0x40
0x1bc: V136 = M[0x40]
0x1bf: V137 = ADD 0x40 V136
0x1c2: M[0x40] = V137
0x1c3: V138 = 0x1c
0x1c6: M[V136] = 0x1c
0x1c7: V139 = 0xe286932053656520436f6465204f662054686520436f6e747261637400000000
0x1e8: V140 = 0x20
0x1eb: V141 = ADD V136 0x20
0x1ec: M[V141] = 0xe286932053656520436f6465204f662054686520436f6e747261637400000000
0x1ee: JUMP 0x99
---
Entry stack: [V11, 0x99]
Stack pops: 1
Stack additions: [S0, V136]
Exit stack: [V11, 0x99, V136]

================================

Block 0x1ef
[0x1ef:0x1f4]
---
Predecessors: [0x11a]
Successors: [0x123]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x1
0x1f2 SLOAD
0x1f3 DUP2
0x1f4 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V142 = 0x1
0x1f2: V143 = S[0x1]
0x1f4: JUMP 0x123
---
Entry stack: [V11, 0x123]
Stack pops: 1
Stack additions: [S0, V143]
Exit stack: [V11, 0x123, V143]

================================

Block 0x1f5
[0x1f5:0x208]
---
Predecessors: [0x141]
Successors: [0x209, 0x20d]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 SLOAD
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 AND
0x203 CALLER
0x204 EQ
0x205 PUSH2 0x20d
0x208 JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V144 = 0x0
0x1f9: V145 = S[0x0]
0x1fa: V146 = 0x1
0x1fc: V147 = 0xa0
0x1fe: V148 = 0x2
0x200: V149 = EXP 0x2 0xa0
0x201: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x203: V152 = CALLER
0x204: V153 = EQ V152 V151
0x205: V154 = 0x20d
0x208: JUMPI 0x20d V153
---
Entry stack: [V11, 0x82, V97, V99]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x82, V97, V99, 0x0]

================================

Block 0x209
[0x209:0x20c]
---
Predecessors: [0x1f5]
Successors: []
---
0x209 PUSH1 0x0
0x20b DUP1
0x20c REVERT
---
0x209: V155 = 0x0
0x20c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V97, V99, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V97, V99, 0x0]

================================

Block 0x20d
[0x20d:0x21a]
---
Predecessors: [0x1f5]
Successors: [0x21b, 0x21f]
---
0x20d JUMPDEST
0x20e PUSH1 0x1
0x210 SLOAD
0x211 PUSH3 0xf4240
0x215 EQ
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x20d: JUMPDEST 
0x20e: V156 = 0x1
0x210: V157 = S[0x1]
0x211: V158 = 0xf4240
0x215: V159 = EQ 0xf4240 V157
0x216: V160 = ISZERO V159
0x217: V161 = 0x21f
0x21a: JUMPI 0x21f V160
---
Entry stack: [V11, 0x82, V97, V99, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V97, V99, 0x0]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x20d]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V162 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V97, V99, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V97, V99, 0x0]

================================

Block 0x21f
[0x21f:0x223]
---
Predecessors: [0x20d]
Successors: [0x224]
---
0x21f JUMPDEST
0x220 POP
0x221 PUSH1 0x1
0x223 SLOAD
---
0x21f: JUMPDEST 
0x221: V163 = 0x1
0x223: V164 = S[0x1]
---
Entry stack: [V11, 0x82, V97, V99, 0x0]
Stack pops: 1
Stack additions: [V164]
Exit stack: [V11, 0x82, V97, V99, V164]

================================

Block 0x224
[0x224:0x22c]
---
Predecessors: [0x21f, 0x2f2]
Successors: [0x22d, 0x2fa]
---
0x224 JUMPDEST
0x225 DUP2
0x226 DUP2
0x227 LT
0x228 ISZERO
0x229 PUSH2 0x2fa
0x22c JUMPI
---
0x224: JUMPDEST 
0x227: V165 = LT S0 V99
0x228: V166 = ISZERO V165
0x229: V167 = 0x2fa
0x22c: JUMPI 0x2fa V166
---
Entry stack: [V11, 0x82, V97, V99, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x82, V97, V99, S0]

================================

Block 0x22d
[0x22d:0x236]
---
Predecessors: [0x224]
Successors: [0x237, 0x238]
---
0x22d DUP3
0x22e DUP3
0x22f DUP3
0x230 DUP2
0x231 DUP2
0x232 LT
0x233 PUSH2 0x238
0x236 JUMPI
---
0x232: V168 = LT S0 V99
0x233: V169 = 0x238
0x236: JUMPI 0x238 V168
---
Entry stack: [V11, 0x82, V97, V99, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S1, S0]
Exit stack: [V11, 0x82, V97, V99, S0, V97, V99, S0]

================================

Block 0x237
[0x237:0x237]
---
Predecessors: [0x22d]
Successors: []
---
0x237 INVALID
---
0x237: INVALID 
---
Entry stack: [V11, 0x82, V97, V99, S3, V97, V99, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V97, V99, S3, V97, V99, S0]

================================

Block 0x238
[0x238:0x271]
---
Predecessors: [0x22d]
Successors: [0x272, 0x273]
---
0x238 JUMPDEST
0x239 PUSH1 0x40
0x23b MLOAD
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 PUSH1 0x20
0x246 SWAP1
0x247 SWAP3
0x248 MUL
0x249 SWAP4
0x24a SWAP1
0x24b SWAP4
0x24c ADD
0x24d CALLDATALOAD
0x24e AND
0x24f SWAP2
0x250 PUSH1 0x0
0x252 SWAP2
0x253 POP
0x254 PUSH2 0x309
0x257 SWAP1
0x258 DUP3
0x259 DUP2
0x25a DUP2
0x25b DUP2
0x25c DUP6
0x25d DUP9
0x25e DUP4
0x25f CALL
0x260 SWAP4
0x261 POP
0x262 POP
0x263 POP
0x264 POP
0x265 POP
0x266 DUP3
0x267 DUP3
0x268 DUP3
0x269 DUP2
0x26a DUP2
0x26b LT
0x26c ISZERO
0x26d ISZERO
0x26e PUSH2 0x273
0x271 JUMPI
---
0x238: JUMPDEST 
0x239: V170 = 0x40
0x23b: V171 = M[0x40]
0x23c: V172 = 0x1
0x23e: V173 = 0xa0
0x240: V174 = 0x2
0x242: V175 = EXP 0x2 0xa0
0x243: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V177 = 0x20
0x248: V178 = MUL S0 0x20
0x24c: V179 = ADD V178 V97
0x24d: V180 = CALLDATALOAD V179
0x24e: V181 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x250: V182 = 0x0
0x254: V183 = 0x309
0x25f: V184 = CALL 0x0 V181 0x309 V171 0x0 V171 0x0
0x26b: V185 = LT S3 V99
0x26c: V186 = ISZERO V185
0x26d: V187 = ISZERO V186
0x26e: V188 = 0x273
0x271: JUMPI 0x273 V187
---
Entry stack: [V11, 0x82, V97, V99, S3, V97, V99, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, S4, S3]
Exit stack: [V11, 0x82, V97, V99, S3, V97, V99, S3]

================================

Block 0x272
[0x272:0x272]
---
Predecessors: [0x238]
Successors: []
---
0x272 INVALID
---
0x272: INVALID 
---
Entry stack: [V11, 0x82, V97, V99, S3, V97, V99, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V97, V99, S3, V97, V99, S0]

================================

Block 0x273
[0x273:0x2d3]
---
Predecessors: [0x238]
Successors: [0x2d4, 0x2df]
---
0x273 JUMPDEST
0x274 SWAP1
0x275 POP
0x276 PUSH1 0x20
0x278 MUL
0x279 ADD
0x27a CALLDATALOAD
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 AND
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c AND
0x28d PUSH1 0x0
0x28f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2b0 PUSH2 0x309
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 DUP3
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd SWAP2
0x2be POP
0x2bf POP
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 DUP1
0x2c4 SWAP2
0x2c5 SUB
0x2c6 SWAP1
0x2c7 LOG3
0x2c8 PUSH1 0x0
0x2ca NOT
0x2cb DUP3
0x2cc ADD
0x2cd DUP2
0x2ce EQ
0x2cf ISZERO
0x2d0 PUSH2 0x2df
0x2d3 JUMPI
---
0x273: JUMPDEST 
0x276: V189 = 0x20
0x278: V190 = MUL 0x20 S0
0x279: V191 = ADD V190 V97
0x27a: V192 = CALLDATALOAD V191
0x27b: V193 = 0x1
0x27d: V194 = 0xa0
0x27f: V195 = 0x2
0x281: V196 = EXP 0x2 0xa0
0x282: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x284: V199 = 0x1
0x286: V200 = 0xa0
0x288: V201 = 0x2
0x28a: V202 = EXP 0x2 0xa0
0x28b: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x28d: V205 = 0x0
0x28f: V206 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2b0: V207 = 0x309
0x2b3: V208 = 0x40
0x2b5: V209 = M[0x40]
0x2b9: M[V209] = 0x309
0x2ba: V210 = 0x20
0x2bc: V211 = ADD 0x20 V209
0x2c0: V212 = 0x40
0x2c2: V213 = M[0x40]
0x2c5: V214 = SUB V211 V213
0x2c7: LOG V213 V214 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 0x0 V204
0x2c8: V215 = 0x0
0x2ca: V216 = NOT 0x0
0x2cc: V217 = ADD V99 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2ce: V218 = EQ S3 V217
0x2cf: V219 = ISZERO V218
0x2d0: V220 = 0x2df
0x2d3: JUMPI 0x2df V219
---
Entry stack: [V11, 0x82, V97, V99, S3, V97, V99, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V11, 0x82, V97, V99, S3]

================================

Block 0x2d4
[0x2d4:0x2de]
---
Predecessors: [0x273]
Successors: [0x2fa]
---
0x2d4 PUSH3 0xf4240
0x2d8 PUSH1 0x1
0x2da SSTORE
0x2db PUSH2 0x2fa
0x2de JUMP
---
0x2d4: V221 = 0xf4240
0x2d8: V222 = 0x1
0x2da: S[0x1] = 0xf4240
0x2db: V223 = 0x2fa
0x2de: JUMP 0x2fa
---
Entry stack: [V11, 0x82, V97, V99, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V97, V99, S0]

================================

Block 0x2df
[0x2df:0x2e8]
---
Predecessors: [0x273]
Successors: [0x2e9, 0x2f2]
---
0x2df JUMPDEST
0x2e0 PUSH2 0xc350
0x2e3 GAS
0x2e4 GT
0x2e5 PUSH2 0x2f2
0x2e8 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V224 = 0xc350
0x2e3: V225 = GAS
0x2e4: V226 = GT V225 0xc350
0x2e5: V227 = 0x2f2
0x2e8: JUMPI 0x2f2 V226
---
Entry stack: [V11, 0x82, V97, V99, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V97, V99, S0]

================================

Block 0x2e9
[0x2e9:0x2f1]
---
Predecessors: [0x2df]
Successors: [0x2fa]
---
0x2e9 PUSH1 0x1
0x2eb DUP2
0x2ec SWAP1
0x2ed SSTORE
0x2ee PUSH2 0x2fa
0x2f1 JUMP
---
0x2e9: V228 = 0x1
0x2ed: S[0x1] = S0
0x2ee: V229 = 0x2fa
0x2f1: JUMP 0x2fa
---
Entry stack: [V11, 0x82, V97, V99, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V97, V99, S0]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x2df]
Successors: [0x224]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x1
0x2f5 ADD
0x2f6 PUSH2 0x224
0x2f9 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V230 = 0x1
0x2f5: V231 = ADD 0x1 S0
0x2f6: V232 = 0x224
0x2f9: JUMP 0x224
---
Entry stack: [V11, 0x82, V97, V99, S0]
Stack pops: 1
Stack additions: [V231]
Exit stack: [V11, 0x82, V97, V99, V231]

================================

Block 0x2fa
[0x2fa:0x2fe]
---
Predecessors: [0x224, 0x2d4, 0x2e9]
Successors: [0x82]
---
0x2fa JUMPDEST
0x2fb POP
0x2fc POP
0x2fd POP
0x2fe JUMP
---
0x2fa: JUMPDEST 
0x2fe: JUMP 0x82
---
Entry stack: [V11, 0x82, V97, V99, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ff
[0x2ff:0x311]
---
Predecessors: [0x161]
Successors: [0x312, 0x316]
---
0x2ff JUMPDEST
0x300 PUSH1 0x0
0x302 SLOAD
0x303 PUSH1 0x1
0x305 PUSH1 0xa0
0x307 PUSH1 0x2
0x309 EXP
0x30a SUB
0x30b AND
0x30c CALLER
0x30d EQ
0x30e PUSH2 0x316
0x311 JUMPI
---
0x2ff: JUMPDEST 
0x300: V233 = 0x0
0x302: V234 = S[0x0]
0x303: V235 = 0x1
0x305: V236 = 0xa0
0x307: V237 = 0x2
0x309: V238 = EXP 0x2 0xa0
0x30a: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30b: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x30c: V241 = CALLER
0x30d: V242 = EQ V241 V240
0x30e: V243 = 0x316
0x311: JUMPI 0x316 V242
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x312
[0x312:0x315]
---
Predecessors: [0x2ff]
Successors: []
---
0x312 PUSH1 0x0
0x314 DUP1
0x315 REVERT
---
0x312: V244 = 0x0
0x315: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x316
[0x316:0x347]
---
Predecessors: [0x2ff]
Successors: [0x348, 0x351]
---
0x316 JUMPDEST
0x317 PUSH1 0x0
0x319 DUP1
0x31a SLOAD
0x31b PUSH1 0x40
0x31d MLOAD
0x31e PUSH1 0x1
0x320 PUSH1 0xa0
0x322 PUSH1 0x2
0x324 EXP
0x325 SUB
0x326 SWAP1
0x327 SWAP2
0x328 AND
0x329 SWAP2
0x32a ADDRESS
0x32b BALANCE
0x32c DUP1
0x32d ISZERO
0x32e PUSH2 0x8fc
0x331 MUL
0x332 SWAP3
0x333 SWAP1
0x334 SWAP2
0x335 DUP2
0x336 DUP2
0x337 DUP2
0x338 DUP6
0x339 DUP9
0x33a DUP9
0x33b CALL
0x33c SWAP4
0x33d POP
0x33e POP
0x33f POP
0x340 POP
0x341 ISZERO
0x342 DUP1
0x343 ISZERO
0x344 PUSH2 0x351
0x347 JUMPI
---
0x316: JUMPDEST 
0x317: V245 = 0x0
0x31a: V246 = S[0x0]
0x31b: V247 = 0x40
0x31d: V248 = M[0x40]
0x31e: V249 = 0x1
0x320: V250 = 0xa0
0x322: V251 = 0x2
0x324: V252 = EXP 0x2 0xa0
0x325: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V254 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V255 = ADDRESS
0x32b: V256 = BALANCE V255
0x32d: V257 = ISZERO V256
0x32e: V258 = 0x8fc
0x331: V259 = MUL 0x8fc V257
0x33b: V260 = CALL V259 V254 V256 V248 0x0 V248 0x0
0x341: V261 = ISZERO V260
0x343: V262 = ISZERO V261
0x344: V263 = 0x351
0x347: JUMPI 0x351 V262
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: [V261]
Exit stack: [V11, 0x82, V261]

================================

Block 0x348
[0x348:0x350]
---
Predecessors: [0x316]
Successors: []
---
0x348 RETURNDATASIZE
0x349 PUSH1 0x0
0x34b DUP1
0x34c RETURNDATACOPY
0x34d RETURNDATASIZE
0x34e PUSH1 0x0
0x350 REVERT
---
0x348: V264 = RETURNDATASIZE
0x349: V265 = 0x0
0x34c: RETURNDATACOPY 0x0 0x0 V264
0x34d: V266 = RETURNDATASIZE
0x34e: V267 = 0x0
0x350: REVERT 0x0 V266
---
Entry stack: [V11, 0x82, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V261]

================================

Block 0x351
[0x351:0x353]
---
Predecessors: [0x316]
Successors: [0x82]
---
0x351 JUMPDEST
0x352 POP
0x353 JUMP
---
0x351: JUMPDEST 
0x353: JUMP 0x82
---
Entry stack: [V11, 0x82, V261]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x354
[0x354:0x366]
---
Predecessors: [0x176]
Successors: [0x367, 0x36b]
---
0x354 JUMPDEST
0x355 PUSH1 0x0
0x357 SLOAD
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 AND
0x361 CALLER
0x362 EQ
0x363 PUSH2 0x36b
0x366 JUMPI
---
0x354: JUMPDEST 
0x355: V268 = 0x0
0x357: V269 = S[0x0]
0x358: V270 = 0x1
0x35a: V271 = 0xa0
0x35c: V272 = 0x2
0x35e: V273 = EXP 0x2 0xa0
0x35f: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x360: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x361: V276 = CALLER
0x362: V277 = EQ V276 V275
0x363: V278 = 0x36b
0x366: JUMPI 0x36b V277
---
Entry stack: [V11, 0x82, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V113]

================================

Block 0x367
[0x367:0x36a]
---
Predecessors: [0x354]
Successors: []
---
0x367 PUSH1 0x0
0x369 DUP1
0x36a REVERT
---
0x367: V279 = 0x0
0x36a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V113]

================================

Block 0x36b
[0x36b:0x36f]
---
Predecessors: [0x354]
Successors: [0x82]
---
0x36b JUMPDEST
0x36c PUSH1 0x1
0x36e SSTORE
0x36f JUMP
---
0x36b: JUMPDEST 
0x36c: V280 = 0x1
0x36e: S[0x1] = V113
0x36f: JUMP 0x82
---
Entry stack: [V11, 0x82, V113]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x370
[0x370:0x3a6]
---
Predecessors: [0x18e]
Successors: [0x99]
---
0x370 JUMPDEST
0x371 PUSH1 0x40
0x373 DUP1
0x374 MLOAD
0x375 DUP1
0x376 DUP3
0x377 ADD
0x378 SWAP1
0x379 SWAP2
0x37a MSTORE
0x37b PUSH1 0x8
0x37d DUP2
0x37e MSTORE
0x37f PUSH32 0x436f646520e29c93000000000000000000000000000000000000000000000000
0x3a0 PUSH1 0x20
0x3a2 DUP3
0x3a3 ADD
0x3a4 MSTORE
0x3a5 DUP2
0x3a6 JUMP
---
0x370: JUMPDEST 
0x371: V281 = 0x40
0x374: V282 = M[0x40]
0x377: V283 = ADD 0x40 V282
0x37a: M[0x40] = V283
0x37b: V284 = 0x8
0x37e: M[V282] = 0x8
0x37f: V285 = 0x436f646520e29c93000000000000000000000000000000000000000000000000
0x3a0: V286 = 0x20
0x3a3: V287 = ADD V282 0x20
0x3a4: M[V287] = 0x436f646520e29c93000000000000000000000000000000000000000000000000
0x3a6: JUMP 0x99
---
Entry stack: [V11, 0x99]
Stack pops: 1
Stack additions: [S0, V282]
Exit stack: [V11, 0x99, V282]

================================

Block 0x3a7
[0x3a7:0x3b9]
---
Predecessors: [0x1a3]
Successors: [0x3ba, 0x3be]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x0
0x3aa SLOAD
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 AND
0x3b4 CALLER
0x3b5 EQ
0x3b6 PUSH2 0x3be
0x3b9 JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V288 = 0x0
0x3aa: V289 = S[0x0]
0x3ab: V290 = 0x1
0x3ad: V291 = 0xa0
0x3af: V292 = 0x2
0x3b1: V293 = EXP 0x2 0xa0
0x3b2: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x3b4: V296 = CALLER
0x3b5: V297 = EQ V296 V295
0x3b6: V298 = 0x3be
0x3b9: JUMPI 0x3be V297
---
Entry stack: [V11, 0x82, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V133]

================================

Block 0x3ba
[0x3ba:0x3bd]
---
Predecessors: [0x3a7]
Successors: []
---
0x3ba PUSH1 0x0
0x3bc DUP1
0x3bd REVERT
---
0x3ba: V299 = 0x0
0x3bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V133]

================================

Block 0x3be
[0x3be:0x3ec]
---
Predecessors: [0x3a7]
Successors: [0x82]
---
0x3be JUMPDEST
0x3bf PUSH1 0x0
0x3c1 DUP1
0x3c2 SLOAD
0x3c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d8 NOT
0x3d9 AND
0x3da PUSH1 0x1
0x3dc PUSH1 0xa0
0x3de PUSH1 0x2
0x3e0 EXP
0x3e1 SUB
0x3e2 SWAP3
0x3e3 SWAP1
0x3e4 SWAP3
0x3e5 AND
0x3e6 SWAP2
0x3e7 SWAP1
0x3e8 SWAP2
0x3e9 OR
0x3ea SWAP1
0x3eb SSTORE
0x3ec JUMP
---
0x3be: JUMPDEST 
0x3bf: V300 = 0x0
0x3c2: V301 = S[0x0]
0x3c3: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d8: V303 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V304 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V301
0x3da: V305 = 0x1
0x3dc: V306 = 0xa0
0x3de: V307 = 0x2
0x3e0: V308 = EXP 0x2 0xa0
0x3e1: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e5: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x3e9: V311 = OR V310 V304
0x3eb: S[0x0] = V311
0x3ec: JUMP 0x82
---
Entry stack: [V11, 0x82, V133]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ed
[0x3ed:0x42c]
---
Predecessors: []
Successors: []
---
0x3ed STOP
0x3ee LOG1
0x3ef PUSH6 0x627a7a723058
0x3f6 SHA3
0x3f7 MISSING 0x4f
0x3f8 EXP
0x3f9 PUSH10 0x4714d580f097c546b206
0x404 MSIZE
0x405 MISSING 0xa7
0x406 ORIGIN
0x407 MISSING 0xa9
0x408 MISSING 0x27
0x409 MISSING 0x4e
0x40a MISSING 0x48
0x40b MISSING 0xbb
0x40c PUSH32 0xe9336a96a0c1f45c98500029
---
0x3ed: STOP 
0x3ee: LOG S0 S1 S2
0x3ef: V312 = 0x627a7a723058
0x3f6: V313 = SHA3 0x627a7a723058 S3
0x3f7: MISSING 0x4f
0x3f8: V314 = EXP S0 S1
0x3f9: V315 = 0x4714d580f097c546b206
0x404: V316 = MSIZE
0x405: MISSING 0xa7
0x406: V317 = ORIGIN
0x407: MISSING 0xa9
0x408: MISSING 0x27
0x409: MISSING 0x4e
0x40a: MISSING 0x48
0x40b: MISSING 0xbb
0x40c: V318 = 0xe9336a96a0c1f45c98500029
---
Entry stack: []
Stack pops: 0
Stack additions: [V313, V316, 0x4714d580f097c546b206, V314, V317, 0xe9336a96a0c1f45c98500029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x84
Exit block: 0x100
Body: 0x84, 0x8c, 0x90, 0x99, 0xbb, 0xc4, 0xd3, 0xe7, 0x100, 0x1b8

Function 1:
Public function signature: 0x2986c0e5
Entry block: 0x10e
Exit block: 0x123
Body: 0x10e, 0x116, 0x11a, 0x123, 0x1ef

Function 2:
Public function signature: 0x47c05c22
Entry block: 0x135
Exit block: 0x272
Body: 0x82, 0x135, 0x13d, 0x141, 0x1f5, 0x209, 0x20d, 0x21b, 0x21f, 0x224, 0x22d, 0x237, 0x238, 0x272, 0x273, 0x2d4, 0x2df, 0x2e9, 0x2f2, 0x2fa

Function 3:
Public function signature: 0x5fd8c710
Entry block: 0x155
Exit block: 0x82
Body: 0x82, 0x155, 0x15d, 0x161, 0x2ff, 0x312, 0x316, 0x348, 0x351

Function 4:
Public function signature: 0x6b88f4ae
Entry block: 0x16a
Exit block: 0x82
Body: 0x82, 0x16a, 0x172, 0x176, 0x354, 0x367, 0x36b

Function 5:
Public function signature: 0x95d89b41
Entry block: 0x182
Exit block: 0x100
Body: 0x99, 0xbb, 0xc4, 0xd3, 0xe7, 0x100, 0x182, 0x18a, 0x18e, 0x370

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x197
Exit block: 0x82
Body: 0x82, 0x197, 0x19f, 0x1a3, 0x3a7, 0x3ba, 0x3be

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

