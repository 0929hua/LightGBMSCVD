Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x48a2f27a
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x48a2f27a
0x3b: V13 = EQ V11 0x48a2f27a
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa8]
---
0x40 DUP1
0x41 PUSH4 0xb69ef8a8
0x46 EQ
0x47 PUSH2 0xa8
0x4a JUMPI
---
0x41: V15 = 0xb69ef8a8
0x46: V16 = EQ 0xb69ef8a8 V11
0x47: V17 = 0xa8
0x4a: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcf]
---
0x4b DUP1
0x4c PUSH4 0xeffc73a4
0x51 EQ
0x52 PUSH2 0xcf
0x55 JUMPI
---
0x4c: V18 = 0xeffc73a4
0x51: V19 = EQ 0xeffc73a4 V11
0x52: V20 = 0xcf
0x55: JUMPI 0xcf V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x34b]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a DUP1
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V21]
Exit stack: [V11, V21]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x58]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V21]

================================

Block 0x64
[0x64:0x93]
---
Predecessors: [0x58]
Successors: [0xe4]
---
0x64 JUMPDEST
0x65 POP
0x66 PUSH2 0x94
0x69 PUSH1 0x4
0x6b CALLDATALOAD
0x6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81 PUSH1 0x24
0x83 CALLDATALOAD
0x84 AND
0x85 PUSH1 0x44
0x87 CALLDATALOAD
0x88 PUSH1 0x64
0x8a CALLDATALOAD
0x8b PUSH1 0x84
0x8d CALLDATALOAD
0x8e ISZERO
0x8f ISZERO
0x90 PUSH2 0xe4
0x93 JUMP
---
0x64: JUMPDEST 
0x66: V25 = 0x94
0x69: V26 = 0x4
0x6b: V27 = CALLDATALOAD 0x4
0x6c: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x81: V29 = 0x24
0x83: V30 = CALLDATALOAD 0x24
0x84: V31 = AND V30 0xffffffffffffffffffffffffffffffffffffffff
0x85: V32 = 0x44
0x87: V33 = CALLDATALOAD 0x44
0x88: V34 = 0x64
0x8a: V35 = CALLDATALOAD 0x64
0x8b: V36 = 0x84
0x8d: V37 = CALLDATALOAD 0x84
0x8e: V38 = ISZERO V37
0x8f: V39 = ISZERO V38
0x90: V40 = 0xe4
0x93: JUMP 0xe4
---
Entry stack: [V11, V21]
Stack pops: 1
Stack additions: [0x94, V27, V31, V33, V35, V39]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39]

================================

Block 0x94
[0x94:0xa7]
---
Predecessors: [0x2cc]
Successors: []
---
0x94 JUMPDEST
0x95 PUSH1 0x40
0x97 DUP1
0x98 MLOAD
0x99 SWAP2
0x9a ISZERO
0x9b ISZERO
0x9c DUP3
0x9d MSTORE
0x9e MLOAD
0x9f SWAP1
0xa0 DUP2
0xa1 SWAP1
0xa2 SUB
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 RETURN
---
0x94: JUMPDEST 
0x95: V41 = 0x40
0x98: V42 = M[0x40]
0x9a: V43 = ISZERO 0x1
0x9b: V44 = ISZERO 0x0
0x9d: M[V42] = 0x1
0x9e: V45 = M[0x40]
0xa2: V46 = SUB V42 V45
0xa3: V47 = 0x20
0xa5: V48 = ADD 0x20 V46
0xa7: RETURN V45 V48
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x40]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V49 = CALLVALUE
0xab: V50 = ISZERO V49
0xac: V51 = 0xb4
0xaf: JUMPI 0xb4 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V52 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xb4
[0xb4:0xbc]
---
Predecessors: [0xa8]
Successors: [0x2db]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0xbd
0xb9 PUSH2 0x2db
0xbc JUMP
---
0xb4: JUMPDEST 
0xb6: V53 = 0xbd
0xb9: V54 = 0x2db
0xbc: JUMP 0x2db
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0xbd
[0xbd:0xce]
---
Predecessors: [0x2db]
Successors: []
---
0xbd JUMPDEST
0xbe PUSH1 0x40
0xc0 DUP1
0xc1 MLOAD
0xc2 SWAP2
0xc3 DUP3
0xc4 MSTORE
0xc5 MLOAD
0xc6 SWAP1
0xc7 DUP2
0xc8 SWAP1
0xc9 SUB
0xca PUSH1 0x20
0xcc ADD
0xcd SWAP1
0xce RETURN
---
0xbd: JUMPDEST 
0xbe: V55 = 0x40
0xc1: V56 = M[0x40]
0xc4: M[V56] = V170
0xc5: V57 = M[0x40]
0xc9: V58 = SUB V56 V57
0xca: V59 = 0x20
0xcc: V60 = ADD 0x20 V58
0xce: RETURN V57 V60
---
Entry stack: [V11, 0xbd, V170]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0xcf
[0xcf:0xd6]
---
Predecessors: [0x4b]
Successors: [0xd7, 0xdb]
---
0xcf JUMPDEST
0xd0 CALLVALUE
0xd1 DUP1
0xd2 ISZERO
0xd3 PUSH2 0xdb
0xd6 JUMPI
---
0xcf: JUMPDEST 
0xd0: V61 = CALLVALUE
0xd2: V62 = ISZERO V61
0xd3: V63 = 0xdb
0xd6: JUMPI 0xdb V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xd7
[0xd7:0xda]
---
Predecessors: [0xcf]
Successors: []
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
---
0xd7: V64 = 0x0
0xda: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xdb
[0xdb:0xe3]
---
Predecessors: [0xcf]
Successors: [0x2e1]
---
0xdb JUMPDEST
0xdc POP
0xdd PUSH2 0x56
0xe0 PUSH2 0x2e1
0xe3 JUMP
---
0xdb: JUMPDEST 
0xdd: V65 = 0x56
0xe0: V66 = 0x2e1
0xe3: JUMP 0x2e1
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0xe4
[0xe4:0x106]
---
Predecessors: [0x64]
Successors: [0x107, 0x10b]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 SLOAD
0xe9 DUP2
0xea SWAP1
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 CALLER
0x102 EQ
0x103 PUSH2 0x10b
0x106 JUMPI
---
0xe4: JUMPDEST 
0xe5: V67 = 0x0
0xe8: V68 = S[0x0]
0xeb: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x101: V71 = CALLER
0x102: V72 = EQ V71 V70
0x103: V73 = 0x10b
0x106: JUMPI 0x10b V72
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0xe4]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V74 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0]

================================

Block 0x10b
[0x10b:0x1de]
---
Predecessors: [0xe4]
Successors: [0x1df]
---
0x10b JUMPDEST
0x10c PUSH1 0x40
0x10e DUP1
0x10f MLOAD
0x110 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x131 PUSH1 0x20
0x133 DUP1
0x134 DUP4
0x135 ADD
0x136 SWAP2
0x137 SWAP1
0x138 SWAP2
0x139 MSTORE
0x13a PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x15b PUSH1 0x21
0x15d DUP4
0x15e ADD
0x15f MSTORE
0x160 PUSH13 0x1000000000000000000000000
0x16e ADDRESS
0x16f MUL
0x170 PUSH1 0x22
0x172 DUP4
0x173 ADD
0x174 MSTORE
0x175 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x196 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x1b7 DUP12
0x1b8 MUL
0x1b9 AND
0x1ba PUSH1 0x36
0x1bc DUP4
0x1bd ADD
0x1be MSTORE
0x1bf DUP3
0x1c0 MLOAD
0x1c1 PUSH1 0x17
0x1c3 DUP2
0x1c4 DUP5
0x1c5 SUB
0x1c6 ADD
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x37
0x1cb SWAP1
0x1cc SWAP3
0x1cd ADD
0x1ce SWAP3
0x1cf DUP4
0x1d0 SWAP1
0x1d1 MSTORE
0x1d2 DUP2
0x1d3 MLOAD
0x1d4 SWAP2
0x1d5 SWAP3
0x1d6 SWAP2
0x1d7 DUP3
0x1d8 SWAP2
0x1d9 DUP5
0x1da ADD
0x1db SWAP1
0x1dc DUP1
0x1dd DUP4
0x1de DUP4
---
0x10b: JUMPDEST 
0x10c: V75 = 0x40
0x10f: V76 = M[0x40]
0x110: V77 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x131: V78 = 0x20
0x135: V79 = ADD V76 0x20
0x139: M[V79] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x13a: V80 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x15b: V81 = 0x21
0x15e: V82 = ADD V76 0x21
0x15f: M[V82] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x160: V83 = 0x1000000000000000000000000
0x16e: V84 = ADDRESS
0x16f: V85 = MUL V84 0x1000000000000000000000000
0x170: V86 = 0x22
0x173: V87 = ADD V76 0x22
0x174: M[V87] = V85
0x175: V88 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x196: V89 = 0x100000000000000000000000000000000000000000000000000000000000000
0x1b8: V90 = MUL V27 0x100000000000000000000000000000000000000000000000000000000000000
0x1b9: V91 = AND V90 0xff00000000000000000000000000000000000000000000000000000000000000
0x1ba: V92 = 0x36
0x1bd: V93 = ADD V76 0x36
0x1be: M[V93] = V91
0x1c0: V94 = M[0x40]
0x1c1: V95 = 0x17
0x1c5: V96 = SUB V76 V94
0x1c6: V97 = ADD V96 0x17
0x1c8: M[V94] = V97
0x1c9: V98 = 0x37
0x1cd: V99 = ADD V76 0x37
0x1d1: M[0x40] = V99
0x1d3: V100 = M[V94]
0x1da: V101 = ADD V94 0x20
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V94, V99, V99, V101, V100, V100, V99, V101]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0, V94, V99, V99, V101, V100, V100, V99, V101]

================================

Block 0x1df
[0x1df:0x1e7]
---
Predecessors: [0x10b, 0x1e8]
Successors: [0x1e8, 0x1fe]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x20
0x1e2 DUP4
0x1e3 LT
0x1e4 PUSH2 0x1fe
0x1e7 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V102 = 0x20
0x1e3: V103 = LT S2 0x20
0x1e4: V104 = 0x1fe
0x1e7: JUMPI 0x1fe V103
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0, V94, V99, V99, V101, V100, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0, V94, V99, V99, V101, V100, S2, S1, S0]

================================

Block 0x1e8
[0x1e8:0x1fd]
---
Predecessors: [0x1df]
Successors: [0x1df]
---
0x1e8 DUP1
0x1e9 MLOAD
0x1ea DUP3
0x1eb MSTORE
0x1ec PUSH1 0x1f
0x1ee NOT
0x1ef SWAP1
0x1f0 SWAP3
0x1f1 ADD
0x1f2 SWAP2
0x1f3 PUSH1 0x20
0x1f5 SWAP2
0x1f6 DUP3
0x1f7 ADD
0x1f8 SWAP2
0x1f9 ADD
0x1fa PUSH2 0x1df
0x1fd JUMP
---
0x1e9: V105 = M[S0]
0x1eb: M[S1] = V105
0x1ec: V106 = 0x1f
0x1ee: V107 = NOT 0x1f
0x1f1: V108 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1f3: V109 = 0x20
0x1f7: V110 = ADD 0x20 S1
0x1f9: V111 = ADD 0x20 S0
0x1fa: V112 = 0x1df
0x1fd: JUMP 0x1df
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0, V94, V99, V99, V101, V100, S2, S1, S0]
Stack pops: 3
Stack additions: [V108, V110, V111]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0, V94, V99, V99, V101, V100, V108, V110, V111]

================================

Block 0x1fe
[0x1fe:0x264]
---
Predecessors: [0x1df]
Successors: [0x265, 0x26e]
---
0x1fe JUMPDEST
0x1ff MLOAD
0x200 DUP2
0x201 MLOAD
0x202 PUSH1 0x20
0x204 SWAP4
0x205 SWAP1
0x206 SWAP4
0x207 SUB
0x208 PUSH2 0x100
0x20b EXP
0x20c PUSH1 0x0
0x20e NOT
0x20f ADD
0x210 DUP1
0x211 NOT
0x212 SWAP1
0x213 SWAP2
0x214 AND
0x215 SWAP3
0x216 AND
0x217 SWAP2
0x218 SWAP1
0x219 SWAP2
0x21a OR
0x21b SWAP1
0x21c MSTORE
0x21d PUSH1 0x40
0x21f MLOAD
0x220 SWAP3
0x221 ADD
0x222 DUP3
0x223 SWAP1
0x224 SUB
0x225 DUP3
0x226 SHA3
0x227 SWAP5
0x228 POP
0x229 POP
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f DUP5
0x240 AND
0x241 SWAP3
0x242 POP
0x243 PUSH1 0x0
0x245 SWAP2
0x246 POP
0x247 PUSH8 0x16345785d8a0000
0x250 SWAP1
0x251 DUP3
0x252 DUP2
0x253 DUP2
0x254 DUP2
0x255 DUP6
0x256 DUP9
0x257 DUP4
0x258 CALL
0x259 SWAP4
0x25a POP
0x25b POP
0x25c POP
0x25d POP
0x25e ISZERO
0x25f DUP1
0x260 ISZERO
0x261 PUSH2 0x26e
0x264 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V113 = M[S0]
0x201: V114 = M[S1]
0x202: V115 = 0x20
0x207: V116 = SUB 0x20 S2
0x208: V117 = 0x100
0x20b: V118 = EXP 0x100 V116
0x20c: V119 = 0x0
0x20e: V120 = NOT 0x0
0x20f: V121 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V118
0x211: V122 = NOT V121
0x214: V123 = AND V113 V122
0x216: V124 = AND V114 V121
0x21a: V125 = OR V124 V123
0x21c: M[S1] = V125
0x21d: V126 = 0x40
0x21f: V127 = M[0x40]
0x221: V128 = ADD V99 V100
0x224: V129 = SUB V128 V127
0x226: V130 = SHA3 V127 V129
0x22a: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V132 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x243: V133 = 0x0
0x247: V134 = 0x16345785d8a0000
0x258: V135 = CALL 0x0 V132 0x16345785d8a0000 V127 0x0 V127 0x0
0x25e: V136 = ISZERO V135
0x260: V137 = ISZERO V136
0x261: V138 = 0x26e
0x264: JUMPI 0x26e V137
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, 0x0, V94, V99, V99, V101, V100, S2, S1, S0]
Stack pops: 9
Stack additions: [V130, V136]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V136]

================================

Block 0x265
[0x265:0x26d]
---
Predecessors: [0x1fe]
Successors: []
---
0x265 RETURNDATASIZE
0x266 PUSH1 0x0
0x268 DUP1
0x269 RETURNDATACOPY
0x26a RETURNDATASIZE
0x26b PUSH1 0x0
0x26d REVERT
---
0x265: V139 = RETURNDATASIZE
0x266: V140 = 0x0
0x269: RETURNDATACOPY 0x0 0x0 V139
0x26a: V141 = RETURNDATASIZE
0x26b: V142 = 0x0
0x26d: REVERT 0x0 V141
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V136]

================================

Block 0x26e
[0x26e:0x27a]
---
Predecessors: [0x1fe]
Successors: [0x34e]
---
0x26e JUMPDEST
0x26f POP
0x270 DUP6
0x271 DUP6
0x272 DUP6
0x273 DUP6
0x274 PUSH2 0x27b
0x277 PUSH2 0x34e
0x27a JUMP
---
0x26e: JUMPDEST 
0x274: V143 = 0x27b
0x277: V144 = 0x34e
0x27a: JUMP 0x34e
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V136]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S6, S5, S4, S3, 0x27b]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V31, V33, V35, V39, 0x27b]

================================

Block 0x27b
[0x27b:0x2c2]
---
Predecessors: [0x34e]
Successors: [0x2c3, 0x2cc]
---
0x27b JUMPDEST
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 SWAP1
0x292 SWAP5
0x293 AND
0x294 DUP5
0x295 MSTORE
0x296 PUSH1 0x20
0x298 DUP5
0x299 ADD
0x29a SWAP3
0x29b SWAP1
0x29c SWAP3
0x29d MSTORE
0x29e PUSH1 0x40
0x2a0 DUP1
0x2a1 DUP5
0x2a2 ADD
0x2a3 SWAP2
0x2a4 SWAP1
0x2a5 SWAP2
0x2a6 MSTORE
0x2a7 SWAP1
0x2a8 ISZERO
0x2a9 ISZERO
0x2aa PUSH1 0x60
0x2ac DUP4
0x2ad ADD
0x2ae MSTORE
0x2af MLOAD
0x2b0 SWAP1
0x2b1 DUP2
0x2b2 SWAP1
0x2b3 SUB
0x2b4 PUSH1 0x80
0x2b6 ADD
0x2b7 SWAP1
0x2b8 PUSH1 0x0
0x2ba CREATE
0x2bb DUP1
0x2bc ISZERO
0x2bd DUP1
0x2be ISZERO
0x2bf PUSH2 0x2cc
0x2c2 JUMPI
---
0x27b: JUMPDEST 
0x27c: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x293: V146 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x295: M[V201] = V146
0x296: V147 = 0x20
0x299: V148 = ADD V201 0x20
0x29d: M[V148] = V33
0x29e: V149 = 0x40
0x2a2: V150 = ADD V201 0x40
0x2a6: M[V150] = V35
0x2a8: V151 = ISZERO V39
0x2a9: V152 = ISZERO V151
0x2aa: V153 = 0x60
0x2ad: V154 = ADD V201 0x60
0x2ae: M[V154] = V152
0x2af: V155 = M[0x40]
0x2b3: V156 = SUB V201 V155
0x2b4: V157 = 0x80
0x2b6: V158 = ADD 0x80 V156
0x2b8: V159 = 0x0
0x2ba: V160 = CREATE 0x0 V155 V158
0x2bc: V161 = ISZERO V160
0x2be: V162 = ISZERO V161
0x2bf: V163 = 0x2cc
0x2c2: JUMPI 0x2cc V162
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V31, V33, V35, V39, V201]
Stack pops: 5
Stack additions: [V160, V161]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V160, V161]

================================

Block 0x2c3
[0x2c3:0x2cb]
---
Predecessors: [0x27b]
Successors: []
---
0x2c3 RETURNDATASIZE
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 RETURNDATACOPY
0x2c8 RETURNDATASIZE
0x2c9 PUSH1 0x0
0x2cb REVERT
---
0x2c3: V164 = RETURNDATASIZE
0x2c4: V165 = 0x0
0x2c7: RETURNDATACOPY 0x0 0x0 V164
0x2c8: V166 = RETURNDATASIZE
0x2c9: V167 = 0x0
0x2cb: REVERT 0x0 V166
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V160, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V160, V161]

================================

Block 0x2cc
[0x2cc:0x2da]
---
Predecessors: [0x27b]
Successors: [0x94]
---
0x2cc JUMPDEST
0x2cd POP
0x2ce PUSH1 0x1
0x2d0 SWAP9
0x2d1 SWAP8
0x2d2 POP
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 POP
0x2d8 POP
0x2d9 POP
0x2da JUMP
---
0x2cc: JUMPDEST 
0x2ce: V168 = 0x1
0x2da: JUMP 0x94
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V160, V161]
Stack pops: 10
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x2db
[0x2db:0x2e0]
---
Predecessors: [0xb4]
Successors: [0xbd]
---
0x2db JUMPDEST
0x2dc PUSH1 0x1
0x2de SLOAD
0x2df DUP2
0x2e0 JUMP
---
0x2db: JUMPDEST 
0x2dc: V169 = 0x1
0x2de: V170 = S[0x1]
0x2e0: JUMP 0xbd
---
Entry stack: [V11, 0xbd]
Stack pops: 1
Stack additions: [S0, V170]
Exit stack: [V11, 0xbd, V170]

================================

Block 0x2e1
[0x2e1:0x300]
---
Predecessors: [0xdb]
Successors: [0x301, 0x305]
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x0
0x2e4 SLOAD
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb CALLER
0x2fc EQ
0x2fd PUSH2 0x305
0x300 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V171 = 0x0
0x2e4: V172 = S[0x0]
0x2e5: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2fb: V175 = CALLER
0x2fc: V176 = EQ V175 V174
0x2fd: V177 = 0x305
0x300: JUMPI 0x305 V176
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x301
[0x301:0x304]
---
Predecessors: [0x2e1]
Successors: []
---
0x301 PUSH1 0x0
0x303 DUP1
0x304 REVERT
---
0x301: V178 = 0x0
0x304: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x305
[0x305:0x341]
---
Predecessors: [0x2e1]
Successors: [0x342, 0x34b]
---
0x305 JUMPDEST
0x306 ADDRESS
0x307 BALANCE
0x308 PUSH1 0x1
0x30a DUP2
0x30b SWAP1
0x30c SSTORE
0x30d PUSH1 0x40
0x30f MLOAD
0x310 PUSH20 0xad5723c4f7b4c478e09688f96a7a477b0d1196fd
0x325 SWAP2
0x326 DUP1
0x327 ISZERO
0x328 PUSH2 0x8fc
0x32b MUL
0x32c SWAP2
0x32d PUSH1 0x0
0x32f DUP2
0x330 DUP2
0x331 DUP2
0x332 DUP6
0x333 DUP9
0x334 DUP9
0x335 CALL
0x336 SWAP4
0x337 POP
0x338 POP
0x339 POP
0x33a POP
0x33b ISZERO
0x33c DUP1
0x33d ISZERO
0x33e PUSH2 0x34b
0x341 JUMPI
---
0x305: JUMPDEST 
0x306: V179 = ADDRESS
0x307: V180 = BALANCE V179
0x308: V181 = 0x1
0x30c: S[0x1] = V180
0x30d: V182 = 0x40
0x30f: V183 = M[0x40]
0x310: V184 = 0xad5723c4f7b4c478e09688f96a7a477b0d1196fd
0x327: V185 = ISZERO V180
0x328: V186 = 0x8fc
0x32b: V187 = MUL 0x8fc V185
0x32d: V188 = 0x0
0x335: V189 = CALL V187 0xad5723c4f7b4c478e09688f96a7a477b0d1196fd V180 V183 0x0 V183 0x0
0x33b: V190 = ISZERO V189
0x33d: V191 = ISZERO V190
0x33e: V192 = 0x34b
0x341: JUMPI 0x34b V191
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [V190]
Exit stack: [V11, 0x56, V190]

================================

Block 0x342
[0x342:0x34a]
---
Predecessors: [0x305]
Successors: []
---
0x342 RETURNDATASIZE
0x343 PUSH1 0x0
0x345 DUP1
0x346 RETURNDATACOPY
0x347 RETURNDATASIZE
0x348 PUSH1 0x0
0x34a REVERT
---
0x342: V193 = RETURNDATASIZE
0x343: V194 = 0x0
0x346: RETURNDATACOPY 0x0 0x0 V193
0x347: V195 = RETURNDATASIZE
0x348: V196 = 0x0
0x34a: REVERT 0x0 V195
---
Entry stack: [V11, 0x56, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V190]

================================

Block 0x34b
[0x34b:0x34d]
---
Predecessors: [0x305]
Successors: [0x56]
---
0x34b JUMPDEST
0x34c POP
0x34d JUMP
---
0x34b: JUMPDEST 
0x34d: JUMP 0x56
---
Entry stack: [V11, 0x56, V190]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x34e
[0x34e:0x35d]
---
Predecessors: [0x26e]
Successors: [0x27b]
---
0x34e JUMPDEST
0x34f PUSH1 0x40
0x351 MLOAD
0x352 PUSH2 0x161
0x355 DUP1
0x356 PUSH2 0x35f
0x359 DUP4
0x35a CODECOPY
0x35b ADD
0x35c SWAP1
0x35d JUMP
---
0x34e: JUMPDEST 
0x34f: V197 = 0x40
0x351: V198 = M[0x40]
0x352: V199 = 0x161
0x356: V200 = 0x35f
0x35a: CODECOPY V198 0x35f 0x161
0x35b: V201 = ADD 0x161 V198
0x35d: JUMP 0x27b
---
Entry stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V31, V33, V35, V39, 0x27b]
Stack pops: 1
Stack additions: [V201]
Exit stack: [V11, 0x94, V27, V31, V33, V35, V39, 0x0, V130, V31, V33, V35, V39, V201]

================================

Block 0x35e
[0x35e:0x395]
---
Predecessors: []
Successors: [0x396]
---
0x35e STOP
0x35f PUSH1 0x80
0x361 PUSH1 0x40
0x363 MSTORE
0x364 PUSH1 0x40
0x366 MLOAD
0x367 PUSH1 0x80
0x369 DUP1
0x36a PUSH2 0x161
0x36d DUP4
0x36e CODECOPY
0x36f DUP2
0x370 ADD
0x371 PUSH1 0x40
0x373 SWAP1
0x374 DUP2
0x375 MSTORE
0x376 DUP2
0x377 MLOAD
0x378 PUSH1 0x20
0x37a DUP4
0x37b ADD
0x37c MLOAD
0x37d SWAP2
0x37e DUP4
0x37f ADD
0x380 MLOAD
0x381 PUSH1 0x60
0x383 SWAP1
0x384 SWAP4
0x385 ADD
0x386 MLOAD
0x387 SWAP1
0x388 SWAP3
0x389 SWAP1
0x38a DUP4
0x38b PUSH1 0x1
0x38d DUP3
0x38e ISZERO
0x38f ISZERO
0x390 EQ
0x391 ISZERO
0x392 PUSH2 0x61
0x395 JUMPI
---
0x35e: STOP 
0x35f: V202 = 0x80
0x361: V203 = 0x40
0x363: M[0x40] = 0x80
0x364: V204 = 0x40
0x366: V205 = M[0x40]
0x367: V206 = 0x80
0x36a: V207 = 0x161
0x36e: CODECOPY V205 0x161 0x80
0x370: V208 = ADD V205 0x80
0x371: V209 = 0x40
0x375: M[0x40] = V208
0x377: V210 = M[V205]
0x378: V211 = 0x20
0x37b: V212 = ADD V205 0x20
0x37c: V213 = M[V212]
0x37f: V214 = ADD V205 0x40
0x380: V215 = M[V214]
0x381: V216 = 0x60
0x385: V217 = ADD V205 0x60
0x386: V218 = M[V217]
0x38b: V219 = 0x1
0x38e: V220 = ISZERO V218
0x38f: V221 = ISZERO V220
0x390: V222 = EQ V221 0x1
0x391: V223 = ISZERO V222
0x392: V224 = 0x61
0x395: THROWI V223
---
Entry stack: []
Stack pops: 0
Stack additions: [V210, V218, V215, V213, V210]
Exit stack: []

================================

Block 0x396
[0x396:0x42d]
---
Predecessors: [0x35e]
Successors: [0x42e]
---
0x396 PUSH1 0x40
0x398 MLOAD
0x399 PUSH1 0x1
0x39b PUSH1 0xa0
0x39d PUSH1 0x2
0x39f EXP
0x3a0 SUB
0x3a1 DUP3
0x3a2 AND
0x3a3 SWAP1
0x3a4 PUSH8 0x16345785d8a0000
0x3ad SWAP1
0x3ae PUSH1 0x0
0x3b0 DUP2
0x3b1 DUP2
0x3b2 DUP2
0x3b3 DUP6
0x3b4 DUP8
0x3b5 GAS
0x3b6 CALL
0x3b7 SWAP3
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb POP
0x3bc PUSH2 0xed
0x3bf JUMP
0x3c0 JUMPDEST
0x3c1 DUP1
0x3c2 PUSH1 0x1
0x3c4 PUSH1 0xa0
0x3c6 PUSH1 0x2
0x3c8 EXP
0x3c9 SUB
0x3ca AND
0x3cb PUSH4 0x8f38f309
0x3d0 PUSH8 0x16345785d8a0000
0x3d9 DUP7
0x3da DUP7
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de DUP5
0x3df PUSH4 0xffffffff
0x3e4 AND
0x3e5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x403 MUL
0x404 DUP2
0x405 MSTORE
0x406 PUSH1 0x4
0x408 ADD
0x409 DUP1
0x40a DUP4
0x40b DUP2
0x40c MSTORE
0x40d PUSH1 0x20
0x40f ADD
0x410 DUP3
0x411 DUP2
0x412 MSTORE
0x413 PUSH1 0x20
0x415 ADD
0x416 SWAP3
0x417 POP
0x418 POP
0x419 POP
0x41a PUSH1 0x0
0x41c PUSH1 0x40
0x41e MLOAD
0x41f DUP1
0x420 DUP4
0x421 SUB
0x422 DUP2
0x423 DUP6
0x424 DUP9
0x425 DUP1
0x426 EXTCODESIZE
0x427 ISZERO
0x428 DUP1
0x429 ISZERO
0x42a PUSH2 0xd3
0x42d JUMPI
---
0x396: V225 = 0x40
0x398: V226 = M[0x40]
0x399: V227 = 0x1
0x39b: V228 = 0xa0
0x39d: V229 = 0x2
0x39f: V230 = EXP 0x2 0xa0
0x3a0: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V232 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V233 = 0x16345785d8a0000
0x3ae: V234 = 0x0
0x3b5: V235 = GAS
0x3b6: V236 = CALL V235 V232 0x16345785d8a0000 V226 0x0 V226 0x0
0x3bc: V237 = 0xed
0x3bf: THROW 
0x3c0: JUMPDEST 
0x3c2: V238 = 0x1
0x3c4: V239 = 0xa0
0x3c6: V240 = 0x2
0x3c8: V241 = EXP 0x2 0xa0
0x3c9: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ca: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3cb: V244 = 0x8f38f309
0x3d0: V245 = 0x16345785d8a0000
0x3db: V246 = 0x40
0x3dd: V247 = M[0x40]
0x3df: V248 = 0xffffffff
0x3e4: V249 = AND 0xffffffff 0x8f38f309
0x3e5: V250 = 0x100000000000000000000000000000000000000000000000000000000
0x403: V251 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8f38f309
0x405: M[V247] = 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x406: V252 = 0x4
0x408: V253 = ADD 0x4 V247
0x40c: M[V253] = S3
0x40d: V254 = 0x20
0x40f: V255 = ADD 0x20 V253
0x412: M[V255] = S2
0x413: V256 = 0x20
0x415: V257 = ADD 0x20 V255
0x41a: V258 = 0x0
0x41c: V259 = 0x40
0x41e: V260 = M[0x40]
0x421: V261 = SUB V257 V260
0x426: V262 = EXTCODESIZE V243
0x427: V263 = ISZERO V262
0x429: V264 = ISZERO V263
0x42a: V265 = 0xd3
0x42d: THROWI V264
---
Entry stack: [V210, V213, V215, V218, V210]
Stack pops: 1
Stack additions: [V263, V243, 0x16345785d8a0000, V260, V261, V260, 0x0, V257, 0x16345785d8a0000, 0x8f38f309, V243, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x42e
[0x42e:0x43c]
---
Predecessors: [0x396]
Successors: [0x43d]
---
0x42e PUSH1 0x0
0x430 DUP1
0x431 REVERT
0x432 JUMPDEST
0x433 POP
0x434 GAS
0x435 CALL
0x436 ISZERO
0x437 DUP1
0x438 ISZERO
0x439 PUSH2 0xe7
0x43c JUMPI
---
0x42e: V266 = 0x0
0x431: REVERT 0x0 0x0
0x432: JUMPDEST 
0x434: V267 = GAS
0x435: V268 = CALL V267 S1 S2 S3 S4 S5 S6
0x436: V269 = ISZERO V268
0x438: V270 = ISZERO V269
0x439: V271 = 0xe7
0x43c: THROWI V270
---
Entry stack: [S14, S13, S12, S11, V243, 0x8f38f309, 0x16345785d8a0000, V257, 0x0, V260, V261, V260, 0x16345785d8a0000, V243, V263]
Stack pops: 0
Stack additions: [V269]
Exit stack: []

================================

Block 0x43d
[0x43d:0x44b]
---
Predecessors: [0x42e]
Successors: [0x44c]
---
0x43d RETURNDATASIZE
0x43e PUSH1 0x0
0x440 DUP1
0x441 RETURNDATACOPY
0x442 RETURNDATASIZE
0x443 PUSH1 0x0
0x445 REVERT
0x446 JUMPDEST
0x447 POP
0x448 POP
0x449 POP
0x44a POP
0x44b POP
---
0x43d: V272 = RETURNDATASIZE
0x43e: V273 = 0x0
0x441: RETURNDATACOPY 0x0 0x0 V272
0x442: V274 = RETURNDATASIZE
0x443: V275 = 0x0
0x445: REVERT 0x0 V274
0x446: JUMPDEST 
---
Entry stack: [V269]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x44c
[0x44c:0x49e]
---
Predecessors: [0x43d]
Successors: [0x49f]
---
0x44c JUMPDEST
0x44d DUP1
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 AND
0x457 PUSH4 0x3ccfd60b
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP2
0x460 PUSH4 0xffffffff
0x465 AND
0x466 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x484 MUL
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x4
0x489 ADD
0x48a PUSH1 0x0
0x48c PUSH1 0x40
0x48e MLOAD
0x48f DUP1
0x490 DUP4
0x491 SUB
0x492 DUP2
0x493 PUSH1 0x0
0x495 DUP8
0x496 DUP1
0x497 EXTCODESIZE
0x498 ISZERO
0x499 DUP1
0x49a ISZERO
0x49b PUSH2 0x144
0x49e JUMPI
---
0x44c: JUMPDEST 
0x44e: V276 = 0x1
0x450: V277 = 0xa0
0x452: V278 = 0x2
0x454: V279 = EXP 0x2 0xa0
0x455: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x457: V282 = 0x3ccfd60b
0x45c: V283 = 0x40
0x45e: V284 = M[0x40]
0x460: V285 = 0xffffffff
0x465: V286 = AND 0xffffffff 0x3ccfd60b
0x466: V287 = 0x100000000000000000000000000000000000000000000000000000000
0x484: V288 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x486: M[V284] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x487: V289 = 0x4
0x489: V290 = ADD 0x4 V284
0x48a: V291 = 0x0
0x48c: V292 = 0x40
0x48e: V293 = M[0x40]
0x491: V294 = SUB V290 V293
0x493: V295 = 0x0
0x497: V296 = EXTCODESIZE V281
0x498: V297 = ISZERO V296
0x49a: V298 = ISZERO V297
0x49b: V299 = 0x144
0x49e: THROWI V298
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V281, 0x3ccfd60b, V290, 0x0, V293, V294, V293, 0x0, V281, V297]
Exit stack: [S0, V281, 0x3ccfd60b, V290, 0x0, V293, V294, V293, 0x0, V281, V297]

================================

Block 0x49f
[0x49f:0x4ad]
---
Predecessors: [0x44c]
Successors: [0x4ae]
---
0x49f PUSH1 0x0
0x4a1 DUP1
0x4a2 REVERT
0x4a3 JUMPDEST
0x4a4 POP
0x4a5 GAS
0x4a6 CALL
0x4a7 ISZERO
0x4a8 DUP1
0x4a9 ISZERO
0x4aa PUSH2 0x158
0x4ad JUMPI
---
0x49f: V300 = 0x0
0x4a2: REVERT 0x0 0x0
0x4a3: JUMPDEST 
0x4a5: V301 = GAS
0x4a6: V302 = CALL V301 S1 S2 S3 S4 S5 S6
0x4a7: V303 = ISZERO V302
0x4a9: V304 = ISZERO V303
0x4aa: V305 = 0x158
0x4ad: THROWI V304
---
Entry stack: [S10, V281, 0x3ccfd60b, V290, 0x0, V293, V294, V293, 0x0, V281, V297]
Stack pops: 0
Stack additions: [V303]
Exit stack: []

================================

Block 0x4ae
[0x4ae:0x4f4]
---
Predecessors: [0x49f]
Successors: []
---
0x4ae RETURNDATASIZE
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 RETURNDATACOPY
0x4b3 RETURNDATASIZE
0x4b4 PUSH1 0x0
0x4b6 REVERT
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 CALLER
0x4ba SWAP3
0x4bb POP
0x4bc POP
0x4bd POP
0x4be SELFDESTRUCT
0x4bf STOP
0x4c0 LOG1
0x4c1 PUSH6 0x627a7a723058
0x4c8 SHA3
0x4c9 MISSING 0x21
0x4ca SWAP11
0x4cb DIV
0x4cc BYTE
0x4cd PUSH4 0xab254298
0x4d2 SWAP5
0x4d3 MISSING 0x2d
0x4d4 MISSING 0xe9
0x4d5 BYTE
0x4d6 GASLIMIT
0x4d7 PUSH29 0xe834e627b4d644e21e88e0c26892ffc0450029
---
0x4ae: V306 = RETURNDATASIZE
0x4af: V307 = 0x0
0x4b2: RETURNDATACOPY 0x0 0x0 V306
0x4b3: V308 = RETURNDATASIZE
0x4b4: V309 = 0x0
0x4b6: REVERT 0x0 V308
0x4b7: JUMPDEST 
0x4b9: V310 = CALLER
0x4be: SELFDESTRUCT V310
0x4bf: STOP 
0x4c0: LOG S0 S1 S2
0x4c1: V311 = 0x627a7a723058
0x4c8: V312 = SHA3 0x627a7a723058 S3
0x4c9: MISSING 0x21
0x4cb: V313 = DIV S11 S1
0x4cc: V314 = BYTE V313 S2
0x4cd: V315 = 0xab254298
0x4d3: MISSING 0x2d
0x4d4: MISSING 0xe9
0x4d5: V316 = BYTE S0 S1
0x4d6: V317 = GASLIMIT
0x4d7: V318 = 0xe834e627b4d644e21e88e0c26892ffc0450029
---
Entry stack: [V303]
Stack pops: 0
Stack additions: [V312, S6, V314, S3, S4, S5, 0xab254298, S7, S8, S9, S10, S0, 0xe834e627b4d644e21e88e0c26892ffc0450029, V317, V316]
Exit stack: []

================================

Function 0:
Public function signature: 0x48a2f27a
Entry block: 0x58
Exit block: 0x94
Body: 0x58, 0x60, 0x64, 0x94, 0xe4, 0x107, 0x10b, 0x1df, 0x1e8, 0x1fe, 0x265, 0x26e, 0x27b, 0x2c3, 0x2cc, 0x34e

Function 1:
Public function signature: 0xb69ef8a8
Entry block: 0xa8
Exit block: 0xbd
Body: 0xa8, 0xb0, 0xb4, 0xbd, 0x2db

Function 2:
Public function signature: 0xeffc73a4
Entry block: 0xcf
Exit block: 0x56
Body: 0x56, 0xcf, 0xd7, 0xdb, 0x2e1, 0x301, 0x305, 0x342, 0x34b

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

