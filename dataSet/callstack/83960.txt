Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4c54fee1
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4c54fee1
0x3c: V13 = EQ 0x4c54fee1 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa5]
---
0x41 DUP1
0x42 PUSH4 0x80a448e1
0x47 EQ
0x48 PUSH2 0xa5
0x4b JUMPI
---
0x42: V15 = 0x80a448e1
0x47: V16 = EQ 0x80a448e1 V11
0x48: V17 = 0xa5
0x4b: JUMPI 0xa5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xa2]
---
Predecessors: [0x51]
Successors: [0x116]
---
0x5c JUMPDEST
0x5d PUSH2 0xa3
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH1 0x0
0x67 NOT
0x68 AND
0x69 SWAP1
0x6a PUSH1 0x20
0x6c ADD
0x6d SWAP1
0x6e SWAP2
0x6f SWAP1
0x70 DUP1
0x71 CALLDATALOAD
0x72 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x8b NOT
0x8c AND
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 SWAP2
0x93 SWAP1
0x94 DUP1
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP1
0x9b SWAP2
0x9c SWAP1
0x9d POP
0x9e POP
0x9f PUSH2 0x116
0xa2 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xa3
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0x0
0x67: V27 = NOT 0x0
0x68: V28 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V25
0x6a: V29 = 0x20
0x6c: V30 = ADD 0x20 0x4
0x71: V31 = CALLDATALOAD 0x24
0x72: V32 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x8b: V33 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x8c: V34 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V31
0x8e: V35 = 0x20
0x90: V36 = ADD 0x20 0x24
0x95: V37 = CALLDATALOAD 0x44
0x97: V38 = 0x20
0x99: V39 = ADD 0x20 0x44
0x9f: V40 = 0x116
0xa2: JUMP 0x116
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa3, V28, V34, V37]
Exit stack: [V11, 0xa3, V28, V34, V37]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x171]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa5
[0xa5:0xab]
---
Predecessors: [0x41]
Successors: [0xac, 0xb0]
---
0xa5 JUMPDEST
0xa6 CALLVALUE
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa5: JUMPDEST 
0xa6: V41 = CALLVALUE
0xa7: V42 = ISZERO V41
0xa8: V43 = 0xb0
0xab: JUMPI 0xb0 V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa5]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V44 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xff]
---
Predecessors: [0xa5]
Successors: [0x28c]
---
0xb0 JUMPDEST
0xb1 PUSH2 0x100
0xb4 PUSH1 0x4
0xb6 DUP1
0xb7 DUP1
0xb8 CALLDATALOAD
0xb9 PUSH1 0x0
0xbb NOT
0xbc AND
0xbd SWAP1
0xbe PUSH1 0x20
0xc0 ADD
0xc1 SWAP1
0xc2 SWAP2
0xc3 SWAP1
0xc4 DUP1
0xc5 CALLDATALOAD
0xc6 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0xdf NOT
0xe0 AND
0xe1 SWAP1
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 SWAP1
0xe6 SWAP2
0xe7 SWAP1
0xe8 DUP1
0xe9 CALLDATALOAD
0xea SWAP1
0xeb PUSH1 0x20
0xed ADD
0xee SWAP1
0xef SWAP2
0xf0 SWAP1
0xf1 DUP1
0xf2 CALLDATALOAD
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 SWAP2
0xf9 SWAP1
0xfa POP
0xfb POP
0xfc PUSH2 0x28c
0xff JUMP
---
0xb0: JUMPDEST 
0xb1: V45 = 0x100
0xb4: V46 = 0x4
0xb8: V47 = CALLDATALOAD 0x4
0xb9: V48 = 0x0
0xbb: V49 = NOT 0x0
0xbc: V50 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V47
0xbe: V51 = 0x20
0xc0: V52 = ADD 0x20 0x4
0xc5: V53 = CALLDATALOAD 0x24
0xc6: V54 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0xdf: V55 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0xe0: V56 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V53
0xe2: V57 = 0x20
0xe4: V58 = ADD 0x20 0x24
0xe9: V59 = CALLDATALOAD 0x44
0xeb: V60 = 0x20
0xed: V61 = ADD 0x20 0x44
0xf2: V62 = CALLDATALOAD 0x64
0xf4: V63 = 0x20
0xf6: V64 = ADD 0x20 0x64
0xfc: V65 = 0x28c
0xff: JUMP 0x28c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x100, V50, V56, V59, V62]
Exit stack: [V11, 0x100, V50, V56, V59, V62]

================================

Block 0x100
[0x100:0x115]
---
Predecessors: [0x421]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x40
0x103 MLOAD
0x104 DUP1
0x105 DUP3
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x20
0x10a ADD
0x10b SWAP2
0x10c POP
0x10d POP
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 SWAP2
0x113 SUB
0x114 SWAP1
0x115 RETURN
---
0x100: JUMPDEST 
0x101: V66 = 0x40
0x103: V67 = M[0x40]
0x107: M[V67] = S0
0x108: V68 = 0x20
0x10a: V69 = ADD 0x20 V67
0x10e: V70 = 0x40
0x110: V71 = M[0x40]
0x113: V72 = SUB V69 V71
0x115: RETURN V71 V72
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x116
[0x116:0x16c]
---
Predecessors: [0x5c]
Successors: [0x16d, 0x171]
---
0x116 JUMPDEST
0x117 PUSH1 0x0
0x119 DUP1
0x11a SWAP1
0x11b SLOAD
0x11c SWAP1
0x11d PUSH2 0x100
0x120 EXP
0x121 SWAP1
0x122 DIV
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e AND
0x14f CALLER
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 EQ
0x167 ISZERO
0x168 ISZERO
0x169 PUSH2 0x171
0x16c JUMPI
---
0x116: JUMPDEST 
0x117: V73 = 0x0
0x11b: V74 = S[0x0]
0x11d: V75 = 0x100
0x120: V76 = EXP 0x100 0x0
0x122: V77 = DIV V74 0x1
0x123: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x139: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x14f: V82 = CALLER
0x150: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x166: V85 = EQ V84 V81
0x167: V86 = ISZERO V85
0x168: V87 = ISZERO V86
0x169: V88 = 0x171
0x16c: JUMPI 0x171 V87
---
Entry stack: [V11, 0xa3, V28, V34, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V28, V34, V37]

================================

Block 0x16d
[0x16d:0x170]
---
Predecessors: [0x116]
Successors: []
---
0x16d PUSH1 0x0
0x16f DUP1
0x170 REVERT
---
0x16d: V89 = 0x0
0x170: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa3, V28, V34, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa3, V28, V34, V37]

================================

Block 0x171
[0x171:0x28b]
---
Predecessors: [0x116]
Successors: [0xa3]
---
0x171 JUMPDEST
0x172 PUSH20 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d DUP2
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 DUP1
0x1a2 DUP1
0x1a3 PUSH32 0x656e74657228627974657333322c627974657338290000000000000000000000
0x1c4 DUP2
0x1c5 MSTORE
0x1c6 POP
0x1c7 PUSH1 0x15
0x1c9 ADD
0x1ca SWAP1
0x1cb POP
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP1
0x1d0 SWAP2
0x1d1 SUB
0x1d2 SWAP1
0x1d3 SHA3
0x1d4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1f2 SWAP1
0x1f3 DIV
0x1f4 SWAP1
0x1f5 DUP6
0x1f6 DUP6
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP5
0x1fb PUSH4 0xffffffff
0x200 AND
0x201 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x21f MUL
0x220 DUP2
0x221 MSTORE
0x222 PUSH1 0x4
0x224 ADD
0x225 DUP1
0x226 DUP4
0x227 PUSH1 0x0
0x229 NOT
0x22a AND
0x22b PUSH1 0x0
0x22d NOT
0x22e AND
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 DUP3
0x235 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x24e NOT
0x24f AND
0x250 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x269 NOT
0x26a AND
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x20
0x26f ADD
0x270 SWAP3
0x271 POP
0x272 POP
0x273 POP
0x274 PUSH1 0x0
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a DUP4
0x27b SUB
0x27c DUP2
0x27d PUSH1 0x0
0x27f DUP9
0x280 DUP8
0x281 CALL
0x282 SWAP4
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 POP
0x288 POP
0x289 POP
0x28a POP
0x28b JUMP
---
0x171: JUMPDEST 
0x172: V90 = 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0x187: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0x19e: V93 = 0x40
0x1a0: V94 = M[0x40]
0x1a3: V95 = 0x656e74657228627974657333322c627974657338290000000000000000000000
0x1c5: M[V94] = 0x656e74657228627974657333322c627974657338290000000000000000000000
0x1c7: V96 = 0x15
0x1c9: V97 = ADD 0x15 V94
0x1cc: V98 = 0x40
0x1ce: V99 = M[0x40]
0x1d1: V100 = SUB V97 V99
0x1d3: V101 = SHA3 V99 V100
0x1d4: V102 = 0x100000000000000000000000000000000000000000000000000000000
0x1f3: V103 = DIV V101 0x100000000000000000000000000000000000000000000000000000000
0x1f7: V104 = 0x40
0x1f9: V105 = M[0x40]
0x1fb: V106 = 0xffffffff
0x200: V107 = AND 0xffffffff V103
0x201: V108 = 0x100000000000000000000000000000000000000000000000000000000
0x21f: V109 = MUL 0x100000000000000000000000000000000000000000000000000000000 V107
0x221: M[V105] = V109
0x222: V110 = 0x4
0x224: V111 = ADD 0x4 V105
0x227: V112 = 0x0
0x229: V113 = NOT 0x0
0x22a: V114 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V28
0x22b: V115 = 0x0
0x22d: V116 = NOT 0x0
0x22e: V117 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V114
0x230: M[V111] = V117
0x231: V118 = 0x20
0x233: V119 = ADD 0x20 V111
0x235: V120 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x24e: V121 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x24f: V122 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V34
0x250: V123 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x269: V124 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x26a: V125 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V122
0x26c: M[V119] = V125
0x26d: V126 = 0x20
0x26f: V127 = ADD 0x20 V119
0x274: V128 = 0x0
0x276: V129 = 0x40
0x278: V130 = M[0x40]
0x27b: V131 = SUB V127 V130
0x27d: V132 = 0x0
0x281: V133 = CALL V37 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf 0x0 V130 V131 V130 0x0
0x28b: JUMP 0xa3
---
Entry stack: [V11, 0xa3, V28, V34, V37]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x28c
[0x28c:0x2e7]
---
Predecessors: [0xb0]
Successors: [0x2e8, 0x2ec]
---
0x28c JUMPDEST
0x28d PUSH1 0x0
0x28f DUP1
0x290 PUSH1 0x0
0x292 DUP1
0x293 PUSH1 0x0
0x295 SWAP1
0x296 SLOAD
0x297 SWAP1
0x298 PUSH2 0x100
0x29b EXP
0x29c SWAP1
0x29d DIV
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c9 AND
0x2ca CALLER
0x2cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e0 AND
0x2e1 EQ
0x2e2 ISZERO
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x28c: JUMPDEST 
0x28d: V134 = 0x0
0x290: V135 = 0x0
0x293: V136 = 0x0
0x296: V137 = S[0x0]
0x298: V138 = 0x100
0x29b: V139 = EXP 0x100 0x0
0x29d: V140 = DIV V137 0x1
0x29e: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x2b4: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x2ca: V145 = CALLER
0x2cb: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2e1: V148 = EQ V147 V144
0x2e2: V149 = ISZERO V148
0x2e3: V150 = ISZERO V149
0x2e4: V151 = 0x2ec
0x2e7: JUMPI 0x2ec V150
---
Entry stack: [V11, 0x100, V50, V56, V59, V62]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x100, V50, V56, V59, V62, 0x0, 0x0, 0x0]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x28c]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V152 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x100, V50, V56, V59, V62, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x100, V50, V56, V59, V62, 0x0, 0x0, 0x0]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x28c]
Successors: [0x2f0]
---
0x2ec JUMPDEST
0x2ed DUP5
0x2ee SWAP2
0x2ef POP
---
0x2ec: JUMPDEST 
---
Entry stack: [V11, 0x100, V50, V56, V59, V62, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S4, S0]
Exit stack: [V11, 0x100, V50, V56, V59, V62, 0x0, V59, 0x0]

================================

Block 0x2f0
[0x2f0:0x2f8]
---
Predecessors: [0x2ec, 0x2f9]
Successors: [0x2f9, 0x421]
---
0x2f0 JUMPDEST
0x2f1 DUP4
0x2f2 DUP3
0x2f3 LT
0x2f4 ISZERO
0x2f5 PUSH2 0x421
0x2f8 JUMPI
---
0x2f0: JUMPDEST 
0x2f3: V153 = LT S1 V62
0x2f4: V154 = ISZERO V153
0x2f5: V155 = 0x421
0x2f8: JUMPI 0x421 V154
---
Entry stack: [V11, 0x100, V50, V56, V59, V62, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x100, V50, V56, V59, V62, 0x0, S1, S0]

================================

Block 0x2f9
[0x2f9:0x420]
---
Predecessors: [0x2f0]
Successors: [0x2f0]
---
0x2f9 DUP2
0x2fa PUSH3 0xc7f9c
0x2fe ADD
0x2ff SWAP1
0x300 POP
0x301 PUSH20 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0x316 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32b AND
0x32c DUP2
0x32d PUSH1 0x40
0x32f MLOAD
0x330 DUP1
0x331 DUP1
0x332 PUSH32 0x656e74657228627974657333322c627974657338290000000000000000000000
0x353 DUP2
0x354 MSTORE
0x355 POP
0x356 PUSH1 0x15
0x358 ADD
0x359 SWAP1
0x35a POP
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f SWAP2
0x360 SUB
0x361 SWAP1
0x362 SHA3
0x363 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x381 SWAP1
0x382 DIV
0x383 SWAP1
0x384 DUP10
0x385 DUP10
0x386 PUSH1 0x40
0x388 MLOAD
0x389 DUP5
0x38a PUSH4 0xffffffff
0x38f AND
0x390 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3ae MUL
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x4
0x3b3 ADD
0x3b4 DUP1
0x3b5 DUP4
0x3b6 PUSH1 0x0
0x3b8 NOT
0x3b9 AND
0x3ba PUSH1 0x0
0x3bc NOT
0x3bd AND
0x3be DUP2
0x3bf MSTORE
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 DUP3
0x3c4 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3dd NOT
0x3de AND
0x3df PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3f8 NOT
0x3f9 AND
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff SWAP3
0x400 POP
0x401 POP
0x402 POP
0x403 PUSH1 0x0
0x405 PUSH1 0x40
0x407 MLOAD
0x408 DUP1
0x409 DUP4
0x40a SUB
0x40b DUP2
0x40c PUSH1 0x0
0x40e DUP9
0x40f DUP8
0x410 CALL
0x411 SWAP4
0x412 POP
0x413 POP
0x414 POP
0x415 POP
0x416 POP
0x417 DUP2
0x418 PUSH1 0x1
0x41a ADD
0x41b SWAP2
0x41c POP
0x41d PUSH2 0x2f0
0x420 JUMP
---
0x2fa: V156 = 0xc7f9c
0x2fe: V157 = ADD 0xc7f9c S1
0x301: V158 = 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0x316: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf
0x32d: V161 = 0x40
0x32f: V162 = M[0x40]
0x332: V163 = 0x656e74657228627974657333322c627974657338290000000000000000000000
0x354: M[V162] = 0x656e74657228627974657333322c627974657338290000000000000000000000
0x356: V164 = 0x15
0x358: V165 = ADD 0x15 V162
0x35b: V166 = 0x40
0x35d: V167 = M[0x40]
0x360: V168 = SUB V165 V167
0x362: V169 = SHA3 V167 V168
0x363: V170 = 0x100000000000000000000000000000000000000000000000000000000
0x382: V171 = DIV V169 0x100000000000000000000000000000000000000000000000000000000
0x386: V172 = 0x40
0x388: V173 = M[0x40]
0x38a: V174 = 0xffffffff
0x38f: V175 = AND 0xffffffff V171
0x390: V176 = 0x100000000000000000000000000000000000000000000000000000000
0x3ae: V177 = MUL 0x100000000000000000000000000000000000000000000000000000000 V175
0x3b0: M[V173] = V177
0x3b1: V178 = 0x4
0x3b3: V179 = ADD 0x4 V173
0x3b6: V180 = 0x0
0x3b8: V181 = NOT 0x0
0x3b9: V182 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V50
0x3ba: V183 = 0x0
0x3bc: V184 = NOT 0x0
0x3bd: V185 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V182
0x3bf: M[V179] = V185
0x3c0: V186 = 0x20
0x3c2: V187 = ADD 0x20 V179
0x3c4: V188 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3dd: V189 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3de: V190 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V56
0x3df: V191 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3f8: V192 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0x3f9: V193 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V190
0x3fb: M[V187] = V193
0x3fc: V194 = 0x20
0x3fe: V195 = ADD 0x20 V187
0x403: V196 = 0x0
0x405: V197 = 0x40
0x407: V198 = M[0x40]
0x40a: V199 = SUB V195 V198
0x40c: V200 = 0x0
0x410: V201 = CALL V157 0x44919b8026f38d70437a8eb3be47b06ab1c3e4bf 0x0 V198 V199 V198 0x0
0x418: V202 = 0x1
0x41a: V203 = ADD 0x1 S1
0x41d: V204 = 0x2f0
0x420: JUMP 0x2f0
---
Entry stack: [V11, 0x100, V50, V56, V59, V62, 0x0, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V203, V157]
Exit stack: [V11, 0x100, V50, V56, V59, V62, 0x0, V203, V157]

================================

Block 0x421
[0x421:0x42d]
---
Predecessors: [0x2f0]
Successors: [0x100]
---
0x421 JUMPDEST
0x422 DUP2
0x423 SWAP3
0x424 POP
0x425 POP
0x426 POP
0x427 SWAP5
0x428 SWAP4
0x429 POP
0x42a POP
0x42b POP
0x42c POP
0x42d JUMP
---
0x421: JUMPDEST 
0x42d: JUMP 0x100
---
Entry stack: [V11, 0x100, V50, V56, V59, V62, 0x0, S1, S0]
Stack pops: 8
Stack additions: [S1]
Exit stack: [V11, S1]

================================

Block 0x42e
[0x42e:0x459]
---
Predecessors: []
Successors: []
---
0x42e STOP
0x42f LOG1
0x430 PUSH6 0x627a7a723058
0x437 SHA3
0x438 GT
0x439 MISSING 0xe9
0x43a MOD
0x43b MISSING 0xe3
0x43c MISSING 0xa6
0x43d MISSING 0xc3
0x43e DUP13
0x43f MISSING 0xe7
0x440 MISSING 0xf9
0x441 GAS
0x442 REVERT
0x443 MISSING 0xca
0x444 ORIGIN
0x445 MISSING 0x5c
0x446 BALANCE
0x447 MISSING 0xb9
0x448 ADDMOD
0x449 SHR
0x44a MISSING 0x4e
0x44b LOG0
0x44c MISSING 0xba
0x44d AND
0x44e DUP9
0x44f MISSING 0xd3
0x450 MISSING 0xb5
0x451 MISSING 0xcc
0x452 ADD
0x453 MISSING 0xf8
0x454 MISSING 0xe3
0x455 CODECOPY
0x456 SWAP7
0x457 CALLER
0x458 STOP
0x459 MISSING 0x29
---
0x42e: STOP 
0x42f: LOG S0 S1 S2
0x430: V205 = 0x627a7a723058
0x437: V206 = SHA3 0x627a7a723058 S3
0x438: V207 = GT V206 S4
0x439: MISSING 0xe9
0x43a: V208 = MOD S0 S1
0x43b: MISSING 0xe3
0x43c: MISSING 0xa6
0x43d: MISSING 0xc3
0x43f: MISSING 0xe7
0x440: MISSING 0xf9
0x441: V209 = GAS
0x442: REVERT V209 S0
0x443: MISSING 0xca
0x444: V210 = ORIGIN
0x445: MISSING 0x5c
0x446: V211 = BALANCE S0
0x447: MISSING 0xb9
0x448: V212 = ADDMOD S0 S1 S2
0x449: V213 = SHR V212 S3
0x44a: MISSING 0x4e
0x44b: LOG S0 S1
0x44c: MISSING 0xba
0x44d: V214 = AND S0 S1
0x44f: MISSING 0xd3
0x450: MISSING 0xb5
0x451: MISSING 0xcc
0x452: V215 = ADD S0 S1
0x453: MISSING 0xf8
0x454: MISSING 0xe3
0x455: CODECOPY S0 S1 S2
0x457: V216 = CALLER
0x458: STOP 
0x459: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V207, V208, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V210, V211, V213, S9, V214, S2, S3, S4, S5, S6, S7, S8, S9, V215, V216, S10, S4, S5, S6, S7, S8, S9, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x4c54fee1
Entry block: 0x51
Exit block: 0xa3
Body: 0x51, 0x58, 0x5c, 0xa3, 0x116, 0x16d, 0x171

Function 1:
Public function signature: 0x80a448e1
Entry block: 0xa5
Exit block: 0x100
Body: 0xa5, 0xac, 0xb0, 0x100, 0x28c, 0x2e8, 0x2ec, 0x2f0, 0x2f9, 0x421

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

