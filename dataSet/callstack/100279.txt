Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xba2ee65c
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xba2ee65c
0x3c: V13 = EQ 0xba2ee65c V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4d]
---
Predecessors: [0xd]
Successors: [0x50]
---
0x46 JUMPDEST
0x47 PUSH2 0x4e
0x4a PUSH2 0x50
0x4d JUMP
---
0x46: JUMPDEST 
0x47: V16 = 0x4e
0x4a: V17 = 0x50
0x4d: JUMP 0x50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4e]
Exit stack: [V11, 0x4e]

================================

Block 0x4e
[0x4e:0x4f]
---
Predecessors: [0x296, 0x10ef, 0x1174]
Successors: []
---
0x4e JUMPDEST
0x4f STOP
---
0x4e: JUMPDEST 
0x4f: STOP 
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x50
[0x50:0xab]
---
Predecessors: [0x46]
Successors: [0xac, 0xb0]
---
0x50 JUMPDEST
0x51 PUSH1 0x0
0x53 DUP1
0x54 PUSH1 0x0
0x56 CALLER
0x57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c AND
0x6d PUSH1 0x0
0x6f DUP1
0x70 SWAP1
0x71 SLOAD
0x72 SWAP1
0x73 PUSH2 0x100
0x76 EXP
0x77 SWAP1
0x78 DIV
0x79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e AND
0x8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4 AND
0xa5 EQ
0xa6 ISZERO
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0x50: JUMPDEST 
0x51: V18 = 0x0
0x54: V19 = 0x0
0x56: V20 = CALLER
0x57: V21 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x6d: V23 = 0x0
0x71: V24 = S[0x0]
0x73: V25 = 0x100
0x76: V26 = EXP 0x100 0x0
0x78: V27 = DIV V24 0x1
0x79: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x8f: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0xa5: V32 = EQ V31 V22
0xa6: V33 = ISZERO V32
0xa7: V34 = ISZERO V33
0xa8: V35 = 0xb0
0xab: JUMPI 0xb0 V34
---
Entry stack: [V11, 0x4e]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x4e, 0x0, 0x0, 0x0]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0x50]
Successors: []
---
0xac PUSH1 0x0
0xae DUP1
0xaf REVERT
---
0xac: V36 = 0x0
0xaf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e, 0x0, 0x0, 0x0]

================================

Block 0xb0
[0xb0:0xb8]
---
Predecessors: [0x50]
Successors: [0xb9]
---
0xb0 JUMPDEST
0xb1 PUSH1 0x1
0xb3 SWAP2
0xb4 POP
0xb5 PUSH1 0x0
0xb7 SWAP1
0xb8 POP
---
0xb0: JUMPDEST 
0xb1: V37 = 0x1
0xb5: V38 = 0x0
---
Entry stack: [V11, 0x4e, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x1, 0x0]
Exit stack: [V11, 0x4e, 0x0, 0x1, 0x0]

================================

Block 0xb9
[0xb9:0xc2]
---
Predecessors: [0xb0, 0x1e4]
Successors: [0xc3, 0x1fb]
---
0xb9 JUMPDEST
0xba PUSH1 0x64
0xbc DUP2
0xbd LT
0xbe ISZERO
0xbf PUSH2 0x1fb
0xc2 JUMPI
---
0xb9: JUMPDEST 
0xba: V39 = 0x64
0xbd: V40 = LT S0 0x64
0xbe: V41 = ISZERO V40
0xbf: V42 = 0x1fb
0xc2: JUMPI 0x1fb V41
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc3
[0xc3:0xcb]
---
Predecessors: [0xb9]
Successors: [0x29b]
---
0xc3 PUSH2 0xcc
0xc6 ADDRESS
0xc7 DUP4
0xc8 PUSH2 0x29b
0xcb JUMP
---
0xc3: V43 = 0xcc
0xc6: V44 = ADDRESS
0xc8: V45 = 0x29b
0xcb: JUMP 0x29b
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xcc, V44, S1]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xcc, V44, S1]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xd87]
Successors: [0xd8d]
---
0xcc JUMPDEST
0xcd SWAP3
0xce POP
0xcf PUSH2 0xd7
0xd2 DUP4
0xd3 PUSH2 0xd8d
0xd6 JUMP
---
0xcc: JUMPDEST 
0xcf: V46 = 0xd7
0xd3: V47 = 0xd8d
0xd6: JUMP 0xd8d
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1, 0xd7, S0]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0, S2, S1, 0xd7, S0]

================================

Block 0xd7
[0xd7:0xdc]
---
Predecessors: [0x296, 0x10ef, 0x1174]
Successors: [0xdd, 0x1c0]
---
0xd7 JUMPDEST
0xd8 ISZERO
0xd9 PUSH2 0x1c0
0xdc JUMPI
---
0xd7: JUMPDEST 
0xd8: V48 = ISZERO S0
0xd9: V49 = 0x1c0
0xdc: JUMPI 0x1c0 V48
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xdd
[0xdd:0x107]
---
Predecessors: [0xd7]
Successors: [0x117d]
---
0xdd CALLVALUE
0xde PUSH1 0x1
0xe0 PUSH1 0x0
0xe2 SWAP1
0xe3 SLOAD
0xe4 SWAP1
0xe5 PUSH2 0x100
0xe8 EXP
0xe9 SWAP1
0xea DIV
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 PUSH2 0x108
0x104 PUSH2 0x117d
0x107 JUMP
---
0xdd: V50 = CALLVALUE
0xde: V51 = 0x1
0xe0: V52 = 0x0
0xe3: V53 = S[0x1]
0xe5: V54 = 0x100
0xe8: V55 = EXP 0x100 0x0
0xea: V56 = DIV V53 0x1
0xeb: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x101: V59 = 0x108
0x104: V60 = 0x117d
0x107: JUMP 0x117d
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V50, V58, 0x108]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V50, V58, 0x108]

================================

Block 0x108
[0x108:0x14f]
---
Predecessors: [0x117d]
Successors: [0x150, 0x159]
---
0x108 JUMPDEST
0x109 DUP1
0x10a DUP3
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 AND
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP2
0x13d POP
0x13e POP
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP1
0x143 SWAP2
0x144 SUB
0x145 SWAP1
0x146 DUP3
0x147 CREATE
0x148 DUP1
0x149 ISZERO
0x14a DUP1
0x14b ISZERO
0x14c PUSH2 0x159
0x14f JUMPI
---
0x108: JUMPDEST 
0x10b: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x121: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x138: M[V796] = V64
0x139: V65 = 0x20
0x13b: V66 = ADD 0x20 V796
0x13f: V67 = 0x40
0x141: V68 = M[0x40]
0x144: V69 = SUB V66 V68
0x147: V70 = CREATE S2 V68 V69
0x149: V71 = ISZERO V70
0x14b: V72 = ISZERO V71
0x14c: V73 = 0x159
0x14f: JUMPI 0x159 V72
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V796]
Stack pops: 3
Stack additions: [S2, V70, V71]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V70, V71]

================================

Block 0x150
[0x150:0x158]
---
Predecessors: [0x108]
Successors: []
---
0x150 RETURNDATASIZE
0x151 PUSH1 0x0
0x153 DUP1
0x154 RETURNDATACOPY
0x155 RETURNDATASIZE
0x156 PUSH1 0x0
0x158 REVERT
---
0x150: V74 = RETURNDATASIZE
0x151: V75 = 0x0
0x154: RETURNDATACOPY 0x0 0x0 V74
0x155: V76 = RETURNDATASIZE
0x156: V77 = 0x0
0x158: REVERT 0x0 V76
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V70, V71]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V70, V71]

================================

Block 0x159
[0x159:0x1b0]
---
Predecessors: [0x108]
Successors: [0x1b1, 0x1ba]
---
0x159 JUMPDEST
0x15a POP
0x15b SWAP1
0x15c POP
0x15d POP
0x15e CALLER
0x15f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x174 AND
0x175 PUSH2 0x8fc
0x178 ADDRESS
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f BALANCE
0x190 SWAP1
0x191 DUP2
0x192 ISZERO
0x193 MUL
0x194 SWAP1
0x195 PUSH1 0x40
0x197 MLOAD
0x198 PUSH1 0x0
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e DUP4
0x19f SUB
0x1a0 DUP2
0x1a1 DUP6
0x1a2 DUP9
0x1a3 DUP9
0x1a4 CALL
0x1a5 SWAP4
0x1a6 POP
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa ISZERO
0x1ab DUP1
0x1ac ISZERO
0x1ad PUSH2 0x1ba
0x1b0 JUMPI
---
0x159: JUMPDEST 
0x15e: V78 = CALLER
0x15f: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x174: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x175: V81 = 0x8fc
0x178: V82 = ADDRESS
0x179: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x18f: V85 = BALANCE V84
0x192: V86 = ISZERO V85
0x193: V87 = MUL V86 0x8fc
0x195: V88 = 0x40
0x197: V89 = M[0x40]
0x198: V90 = 0x0
0x19a: V91 = 0x40
0x19c: V92 = M[0x40]
0x19f: V93 = SUB V89 V92
0x1a4: V94 = CALL V87 V80 V85 V92 V93 V92 0x0
0x1aa: V95 = ISZERO V94
0x1ac: V96 = ISZERO V95
0x1ad: V97 = 0x1ba
0x1b0: JUMPI 0x1ba V96
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V70, V71]
Stack pops: 3
Stack additions: [V95]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V95]

================================

Block 0x1b1
[0x1b1:0x1b9]
---
Predecessors: [0x159]
Successors: []
---
0x1b1 RETURNDATASIZE
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 RETURNDATACOPY
0x1b6 RETURNDATASIZE
0x1b7 PUSH1 0x0
0x1b9 REVERT
---
0x1b1: V98 = RETURNDATASIZE
0x1b2: V99 = 0x0
0x1b5: RETURNDATACOPY 0x0 0x0 V98
0x1b6: V100 = RETURNDATASIZE
0x1b7: V101 = 0x0
0x1b9: REVERT 0x0 V100
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V95]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V95]

================================

Block 0x1ba
[0x1ba:0x1bf]
---
Predecessors: [0x159]
Successors: [0x296]
---
0x1ba JUMPDEST
0x1bb POP
0x1bc PUSH2 0x296
0x1bf JUMP
---
0x1ba: JUMPDEST 
0x1bc: V102 = 0x296
0x1bf: JUMP 0x296
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V95]
Stack pops: 1
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1c0
[0x1c0:0x1c7]
---
Predecessors: [0xd7]
Successors: [0x118d]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0x1c8
0x1c4 PUSH2 0x118d
0x1c7 JUMP
---
0x1c0: JUMPDEST 
0x1c1: V103 = 0x1c8
0x1c4: V104 = 0x118d
0x1c7: JUMP 0x118d
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x1c8]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1c8]

================================

Block 0x1c8
[0x1c8:0x1da]
---
Predecessors: [0x118d]
Successors: [0x1db, 0x1e4]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc DUP1
0x1cd SWAP2
0x1ce SUB
0x1cf SWAP1
0x1d0 PUSH1 0x0
0x1d2 CREATE
0x1d3 DUP1
0x1d4 ISZERO
0x1d5 DUP1
0x1d6 ISZERO
0x1d7 PUSH2 0x1e4
0x1da JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V105 = 0x40
0x1cb: V106 = M[0x40]
0x1ce: V107 = SUB V801 V106
0x1d0: V108 = 0x0
0x1d2: V109 = CREATE 0x0 V106 V107
0x1d4: V110 = ISZERO V109
0x1d6: V111 = ISZERO V110
0x1d7: V112 = 0x1e4
0x1da: JUMPI 0x1e4 V111
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V801]
Stack pops: 1
Stack additions: [V109, V110]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V109, V110]

================================

Block 0x1db
[0x1db:0x1e3]
---
Predecessors: [0x1c8]
Successors: []
---
0x1db RETURNDATASIZE
0x1dc PUSH1 0x0
0x1de DUP1
0x1df RETURNDATACOPY
0x1e0 RETURNDATASIZE
0x1e1 PUSH1 0x0
0x1e3 REVERT
---
0x1db: V113 = RETURNDATASIZE
0x1dc: V114 = 0x0
0x1df: RETURNDATACOPY 0x0 0x0 V113
0x1e0: V115 = RETURNDATASIZE
0x1e1: V116 = 0x0
0x1e3: REVERT 0x0 V115
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V109, V110]
Stack pops: 0
Stack additions: []
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V109, V110]

================================

Block 0x1e4
[0x1e4:0x1fa]
---
Predecessors: [0x1c8]
Successors: [0xb9]
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 POP
0x1e7 DUP2
0x1e8 DUP1
0x1e9 PUSH1 0x1
0x1eb ADD
0x1ec SWAP3
0x1ed POP
0x1ee POP
0x1ef DUP1
0x1f0 DUP1
0x1f1 PUSH1 0x1
0x1f3 ADD
0x1f4 SWAP2
0x1f5 POP
0x1f6 POP
0x1f7 PUSH2 0xb9
0x1fa JUMP
---
0x1e4: JUMPDEST 
0x1e9: V117 = 0x1
0x1eb: V118 = ADD 0x1 S3
0x1f1: V119 = 0x1
0x1f3: V120 = ADD 0x1 S2
0x1f7: V121 = 0xb9
0x1fa: JUMP 0xb9
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V109, V110]
Stack pops: 4
Stack additions: [V118, V120]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V118, V120]

================================

Block 0x1fb
[0x1fb:0x24e]
---
Predecessors: [0xb9]
Successors: [0x24f, 0x258]
---
0x1fb JUMPDEST
0x1fc CALLER
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 PUSH2 0x8fc
0x216 ADDRESS
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d BALANCE
0x22e SWAP1
0x22f DUP2
0x230 ISZERO
0x231 MUL
0x232 SWAP1
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x0
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d SUB
0x23e DUP2
0x23f DUP6
0x240 DUP9
0x241 DUP9
0x242 CALL
0x243 SWAP4
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 ISZERO
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x258
0x24e JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V122 = CALLER
0x1fd: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x213: V125 = 0x8fc
0x216: V126 = ADDRESS
0x217: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x22d: V129 = BALANCE V128
0x230: V130 = ISZERO V129
0x231: V131 = MUL V130 0x8fc
0x233: V132 = 0x40
0x235: V133 = M[0x40]
0x236: V134 = 0x0
0x238: V135 = 0x40
0x23a: V136 = M[0x40]
0x23d: V137 = SUB V133 V136
0x242: V138 = CALL V131 V124 V129 V136 V137 V136 0x0
0x248: V139 = ISZERO V138
0x24a: V140 = ISZERO V139
0x24b: V141 = 0x258
0x24e: JUMPI 0x258 V140
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V139]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V139]

================================

Block 0x24f
[0x24f:0x257]
---
Predecessors: [0x1fb]
Successors: []
---
0x24f RETURNDATASIZE
0x250 PUSH1 0x0
0x252 DUP1
0x253 RETURNDATACOPY
0x254 RETURNDATASIZE
0x255 PUSH1 0x0
0x257 REVERT
---
0x24f: V142 = RETURNDATASIZE
0x250: V143 = 0x0
0x253: RETURNDATACOPY 0x0 0x0 V142
0x254: V144 = RETURNDATASIZE
0x255: V145 = 0x0
0x257: REVERT 0x0 V144
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V139]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V139]

================================

Block 0x258
[0x258:0x295]
---
Predecessors: [0x1fb]
Successors: []
---
0x258 JUMPDEST
0x259 POP
0x25a PUSH32 0xc4dfb4b03fee32d84cf97d54de26a312aa77e6c3e61bb64c17a35b197197d4a2
0x27b PUSH1 0x0
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 DUP3
0x282 DUP2
0x283 MSTORE
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP2
0x288 POP
0x289 POP
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e SWAP2
0x28f SUB
0x290 SWAP1
0x291 LOG1
0x292 PUSH1 0x0
0x294 DUP1
0x295 REVERT
---
0x258: JUMPDEST 
0x25a: V146 = 0xc4dfb4b03fee32d84cf97d54de26a312aa77e6c3e61bb64c17a35b197197d4a2
0x27b: V147 = 0x0
0x27d: V148 = 0x40
0x27f: V149 = M[0x40]
0x283: M[V149] = 0x0
0x284: V150 = 0x20
0x286: V151 = ADD 0x20 V149
0x28a: V152 = 0x40
0x28c: V153 = M[0x40]
0x28f: V154 = SUB V151 V153
0x291: LOG V153 V154 0xc4dfb4b03fee32d84cf97d54de26a312aa77e6c3e61bb64c17a35b197197d4a2
0x292: V155 = 0x0
0x295: REVERT 0x0 0x0
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V139]
Stack pops: 1
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x296
[0x296:0x29a]
---
Predecessors: [0x1ba]
Successors: [0x4e, 0xd7, 0xf65, 0xf73, 0xf81]
---
0x296 JUMPDEST
0x297 POP
0x298 POP
0x299 POP
0x29a JUMP
---
0x296: JUMPDEST 
0x29a: JUMP S3
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x29b
[0x29b:0x2a5]
---
Predecessors: [0xc3]
Successors: [0x2a6, 0x44e]
---
0x29b JUMPDEST
0x29c PUSH1 0x0
0x29e DUP1
0x29f DUP3
0x2a0 EQ
0x2a1 ISZERO
0x2a2 PUSH2 0x44e
0x2a5 JUMPI
---
0x29b: JUMPDEST 
0x29c: V156 = 0x0
0x2a0: V157 = EQ S0 0x0
0x2a1: V158 = ISZERO V157
0x2a2: V159 = 0x44e
0x2a5: JUMPI 0x44e V158
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xcc, V44, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xcc, V44, S0, 0x0]

================================

Block 0x2a6
[0x2a6:0x44d]
---
Predecessors: [0x29b]
Successors: [0xd87]
---
0x2a6 PUSH1 0xd6
0x2a8 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x2c9 MUL
0x2ca PUSH1 0x94
0x2cc PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x2ed MUL
0x2ee DUP5
0x2ef PUSH1 0x80
0x2f1 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x312 MUL
0x313 PUSH1 0x40
0x315 MLOAD
0x316 DUP1
0x317 DUP6
0x318 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x338 NOT
0x339 AND
0x33a PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x35a NOT
0x35b AND
0x35c DUP2
0x35d MSTORE
0x35e PUSH1 0x1
0x360 ADD
0x361 DUP5
0x362 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x382 NOT
0x383 AND
0x384 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3a4 NOT
0x3a5 AND
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x1
0x3aa ADD
0x3ab DUP4
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d7 AND
0x3d8 PUSH13 0x1000000000000000000000000
0x3e6 MUL
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x14
0x3eb ADD
0x3ec DUP3
0x3ed PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x40d NOT
0x40e AND
0x40f PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x42f NOT
0x430 AND
0x431 DUP2
0x432 MSTORE
0x433 PUSH1 0x1
0x435 ADD
0x436 SWAP5
0x437 POP
0x438 POP
0x439 POP
0x43a POP
0x43b POP
0x43c PUSH1 0x40
0x43e MLOAD
0x43f DUP1
0x440 SWAP2
0x441 SUB
0x442 SWAP1
0x443 SHA3
0x444 PUSH1 0x1
0x446 SWAP1
0x447 DIV
0x448 SWAP1
0x449 POP
0x44a PUSH2 0xd87
0x44d JUMP
---
0x2a6: V160 = 0xd6
0x2a8: V161 = 0x100000000000000000000000000000000000000000000000000000000000000
0x2c9: V162 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x2ca: V163 = 0x94
0x2cc: V164 = 0x100000000000000000000000000000000000000000000000000000000000000
0x2ed: V165 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x2ef: V166 = 0x80
0x2f1: V167 = 0x100000000000000000000000000000000000000000000000000000000000000
0x312: V168 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x80
0x313: V169 = 0x40
0x315: V170 = M[0x40]
0x318: V171 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x338: V172 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x339: V173 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd600000000000000000000000000000000000000000000000000000000000000
0x33a: V174 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x35a: V175 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x35b: V176 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd600000000000000000000000000000000000000000000000000000000000000
0x35d: M[V170] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x35e: V177 = 0x1
0x360: V178 = ADD 0x1 V170
0x362: V179 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x382: V180 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x383: V181 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x384: V182 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3a4: V183 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3a5: V184 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x3a7: M[V178] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x3a8: V185 = 0x1
0x3aa: V186 = ADD 0x1 V178
0x3ac: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x3c2: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x3d8: V191 = 0x1000000000000000000000000
0x3e6: V192 = MUL 0x1000000000000000000000000 V190
0x3e8: M[V186] = V192
0x3e9: V193 = 0x14
0x3eb: V194 = ADD 0x14 V186
0x3ed: V195 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x40d: V196 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x40e: V197 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8000000000000000000000000000000000000000000000000000000000000000
0x40f: V198 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x42f: V199 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x430: V200 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8000000000000000000000000000000000000000000000000000000000000000
0x432: M[V194] = 0x8000000000000000000000000000000000000000000000000000000000000000
0x433: V201 = 0x1
0x435: V202 = ADD 0x1 V194
0x43c: V203 = 0x40
0x43e: V204 = M[0x40]
0x441: V205 = SUB V202 V204
0x443: V206 = SHA3 V204 V205
0x444: V207 = 0x1
0x447: V208 = DIV V206 0x1
0x44a: V209 = 0xd87
0x44d: JUMP 0xd87
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V208]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, V208]

================================

Block 0x44e
[0x44e:0x458]
---
Predecessors: [0x29b]
Successors: [0x459, 0x600]
---
0x44e JUMPDEST
0x44f PUSH1 0x7f
0x451 DUP3
0x452 GT
0x453 ISZERO
0x454 ISZERO
0x455 PUSH2 0x600
0x458 JUMPI
---
0x44e: JUMPDEST 
0x44f: V210 = 0x7f
0x452: V211 = GT S1 0x7f
0x453: V212 = ISZERO V211
0x454: V213 = ISZERO V212
0x455: V214 = 0x600
0x458: JUMPI 0x600 V213
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]

================================

Block 0x459
[0x459:0x5ff]
---
Predecessors: [0x44e]
Successors: [0xd87]
---
0x459 PUSH1 0xd6
0x45b PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x47c MUL
0x47d PUSH1 0x94
0x47f PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x4a0 MUL
0x4a1 DUP5
0x4a2 DUP5
0x4a3 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x4c4 MUL
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 DUP1
0x4c9 DUP6
0x4ca PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4ea NOT
0x4eb AND
0x4ec PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x50c NOT
0x50d AND
0x50e DUP2
0x50f MSTORE
0x510 PUSH1 0x1
0x512 ADD
0x513 DUP5
0x514 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x534 NOT
0x535 AND
0x536 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x556 NOT
0x557 AND
0x558 DUP2
0x559 MSTORE
0x55a PUSH1 0x1
0x55c ADD
0x55d DUP4
0x55e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x573 AND
0x574 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x589 AND
0x58a PUSH13 0x1000000000000000000000000
0x598 MUL
0x599 DUP2
0x59a MSTORE
0x59b PUSH1 0x14
0x59d ADD
0x59e DUP3
0x59f PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5bf NOT
0x5c0 AND
0x5c1 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5e1 NOT
0x5e2 AND
0x5e3 DUP2
0x5e4 MSTORE
0x5e5 PUSH1 0x1
0x5e7 ADD
0x5e8 SWAP5
0x5e9 POP
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee PUSH1 0x40
0x5f0 MLOAD
0x5f1 DUP1
0x5f2 SWAP2
0x5f3 SUB
0x5f4 SWAP1
0x5f5 SHA3
0x5f6 PUSH1 0x1
0x5f8 SWAP1
0x5f9 DIV
0x5fa SWAP1
0x5fb POP
0x5fc PUSH2 0xd87
0x5ff JUMP
---
0x459: V215 = 0xd6
0x45b: V216 = 0x100000000000000000000000000000000000000000000000000000000000000
0x47c: V217 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd6
0x47d: V218 = 0x94
0x47f: V219 = 0x100000000000000000000000000000000000000000000000000000000000000
0x4a0: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x4a3: V221 = 0x100000000000000000000000000000000000000000000000000000000000000
0x4c4: V222 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S1
0x4c5: V223 = 0x40
0x4c7: V224 = M[0x40]
0x4ca: V225 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4ea: V226 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4eb: V227 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd600000000000000000000000000000000000000000000000000000000000000
0x4ec: V228 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x50c: V229 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x50d: V230 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd600000000000000000000000000000000000000000000000000000000000000
0x50f: M[V224] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x510: V231 = 0x1
0x512: V232 = ADD 0x1 V224
0x514: V233 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x534: V234 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x535: V235 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x536: V236 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x556: V237 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x557: V238 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x559: M[V232] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x55a: V239 = 0x1
0x55c: V240 = ADD 0x1 V232
0x55e: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x573: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x574: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x589: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x58a: V245 = 0x1000000000000000000000000
0x598: V246 = MUL 0x1000000000000000000000000 V244
0x59a: M[V240] = V246
0x59b: V247 = 0x14
0x59d: V248 = ADD 0x14 V240
0x59f: V249 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5bf: V250 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5c0: V251 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V222
0x5c1: V252 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5e1: V253 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x5e2: V254 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V251
0x5e4: M[V248] = V254
0x5e5: V255 = 0x1
0x5e7: V256 = ADD 0x1 V248
0x5ee: V257 = 0x40
0x5f0: V258 = M[0x40]
0x5f3: V259 = SUB V256 V258
0x5f5: V260 = SHA3 V258 V259
0x5f6: V261 = 0x1
0x5f9: V262 = DIV V260 0x1
0x5fc: V263 = 0xd87
0x5ff: JUMP 0xd87
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V262]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, V262]

================================

Block 0x600
[0x600:0x60a]
---
Predecessors: [0x44e]
Successors: [0x60b, 0x7e3]
---
0x600 JUMPDEST
0x601 PUSH1 0xff
0x603 DUP3
0x604 GT
0x605 ISZERO
0x606 ISZERO
0x607 PUSH2 0x7e3
0x60a JUMPI
---
0x600: JUMPDEST 
0x601: V264 = 0xff
0x604: V265 = GT S1 0xff
0x605: V266 = ISZERO V265
0x606: V267 = ISZERO V266
0x607: V268 = 0x7e3
0x60a: JUMPI 0x7e3 V267
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]

================================

Block 0x60b
[0x60b:0x7e2]
---
Predecessors: [0x600]
Successors: [0xd87]
---
0x60b PUSH1 0xd7
0x60d PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x62e MUL
0x62f PUSH1 0x94
0x631 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x652 MUL
0x653 DUP5
0x654 PUSH1 0x81
0x656 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x677 MUL
0x678 DUP6
0x679 PUSH1 0x40
0x67b MLOAD
0x67c DUP1
0x67d DUP7
0x67e PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x69e NOT
0x69f AND
0x6a0 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6c0 NOT
0x6c1 AND
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x1
0x6c6 ADD
0x6c7 DUP6
0x6c8 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6e8 NOT
0x6e9 AND
0x6ea PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x70a NOT
0x70b AND
0x70c DUP2
0x70d MSTORE
0x70e PUSH1 0x1
0x710 ADD
0x711 DUP5
0x712 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x727 AND
0x728 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73d AND
0x73e PUSH13 0x1000000000000000000000000
0x74c MUL
0x74d DUP2
0x74e MSTORE
0x74f PUSH1 0x14
0x751 ADD
0x752 DUP4
0x753 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x773 NOT
0x774 AND
0x775 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x795 NOT
0x796 AND
0x797 DUP2
0x798 MSTORE
0x799 PUSH1 0x1
0x79b ADD
0x79c DUP3
0x79d PUSH1 0xff
0x79f AND
0x7a0 PUSH1 0xff
0x7a2 AND
0x7a3 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x7c4 MUL
0x7c5 DUP2
0x7c6 MSTORE
0x7c7 PUSH1 0x1
0x7c9 ADD
0x7ca SWAP6
0x7cb POP
0x7cc POP
0x7cd POP
0x7ce POP
0x7cf POP
0x7d0 POP
0x7d1 PUSH1 0x40
0x7d3 MLOAD
0x7d4 DUP1
0x7d5 SWAP2
0x7d6 SUB
0x7d7 SWAP1
0x7d8 SHA3
0x7d9 PUSH1 0x1
0x7db SWAP1
0x7dc DIV
0x7dd SWAP1
0x7de POP
0x7df PUSH2 0xd87
0x7e2 JUMP
---
0x60b: V269 = 0xd7
0x60d: V270 = 0x100000000000000000000000000000000000000000000000000000000000000
0x62e: V271 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd7
0x62f: V272 = 0x94
0x631: V273 = 0x100000000000000000000000000000000000000000000000000000000000000
0x652: V274 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x654: V275 = 0x81
0x656: V276 = 0x100000000000000000000000000000000000000000000000000000000000000
0x677: V277 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x81
0x679: V278 = 0x40
0x67b: V279 = M[0x40]
0x67e: V280 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x69e: V281 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x69f: V282 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd700000000000000000000000000000000000000000000000000000000000000
0x6a0: V283 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6c0: V284 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6c1: V285 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd700000000000000000000000000000000000000000000000000000000000000
0x6c3: M[V279] = 0xd700000000000000000000000000000000000000000000000000000000000000
0x6c4: V286 = 0x1
0x6c6: V287 = ADD 0x1 V279
0x6c8: V288 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6e8: V289 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6e9: V290 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x6ea: V291 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x70a: V292 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x70b: V293 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x70d: M[V287] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x70e: V294 = 0x1
0x710: V295 = ADD 0x1 V287
0x712: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x727: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x728: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x73e: V300 = 0x1000000000000000000000000
0x74c: V301 = MUL 0x1000000000000000000000000 V299
0x74e: M[V295] = V301
0x74f: V302 = 0x14
0x751: V303 = ADD 0x14 V295
0x753: V304 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x773: V305 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x774: V306 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8100000000000000000000000000000000000000000000000000000000000000
0x775: V307 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x795: V308 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x796: V309 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8100000000000000000000000000000000000000000000000000000000000000
0x798: M[V303] = 0x8100000000000000000000000000000000000000000000000000000000000000
0x799: V310 = 0x1
0x79b: V311 = ADD 0x1 V303
0x79d: V312 = 0xff
0x79f: V313 = AND 0xff S1
0x7a0: V314 = 0xff
0x7a2: V315 = AND 0xff V313
0x7a3: V316 = 0x100000000000000000000000000000000000000000000000000000000000000
0x7c4: V317 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V315
0x7c6: M[V311] = V317
0x7c7: V318 = 0x1
0x7c9: V319 = ADD 0x1 V311
0x7d1: V320 = 0x40
0x7d3: V321 = M[0x40]
0x7d6: V322 = SUB V319 V321
0x7d8: V323 = SHA3 V321 V322
0x7d9: V324 = 0x1
0x7dc: V325 = DIV V323 0x1
0x7df: V326 = 0xd87
0x7e2: JUMP 0xd87
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V325]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, V325]

================================

Block 0x7e3
[0x7e3:0x7ee]
---
Predecessors: [0x600]
Successors: [0x7ef, 0x9c8]
---
0x7e3 JUMPDEST
0x7e4 PUSH2 0xffff
0x7e7 DUP3
0x7e8 GT
0x7e9 ISZERO
0x7ea ISZERO
0x7eb PUSH2 0x9c8
0x7ee JUMPI
---
0x7e3: JUMPDEST 
0x7e4: V327 = 0xffff
0x7e8: V328 = GT S1 0xffff
0x7e9: V329 = ISZERO V328
0x7ea: V330 = ISZERO V329
0x7eb: V331 = 0x9c8
0x7ee: JUMPI 0x9c8 V330
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]

================================

Block 0x7ef
[0x7ef:0x9c7]
---
Predecessors: [0x7e3]
Successors: [0xd87]
---
0x7ef PUSH1 0xd8
0x7f1 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x812 MUL
0x813 PUSH1 0x94
0x815 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x836 MUL
0x837 DUP5
0x838 PUSH1 0x82
0x83a PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x85b MUL
0x85c DUP6
0x85d PUSH1 0x40
0x85f MLOAD
0x860 DUP1
0x861 DUP7
0x862 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x882 NOT
0x883 AND
0x884 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8a4 NOT
0x8a5 AND
0x8a6 DUP2
0x8a7 MSTORE
0x8a8 PUSH1 0x1
0x8aa ADD
0x8ab DUP6
0x8ac PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8cc NOT
0x8cd AND
0x8ce PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8ee NOT
0x8ef AND
0x8f0 DUP2
0x8f1 MSTORE
0x8f2 PUSH1 0x1
0x8f4 ADD
0x8f5 DUP5
0x8f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90b AND
0x90c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x921 AND
0x922 PUSH13 0x1000000000000000000000000
0x930 MUL
0x931 DUP2
0x932 MSTORE
0x933 PUSH1 0x14
0x935 ADD
0x936 DUP4
0x937 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x957 NOT
0x958 AND
0x959 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x979 NOT
0x97a AND
0x97b DUP2
0x97c MSTORE
0x97d PUSH1 0x1
0x97f ADD
0x980 DUP3
0x981 PUSH2 0xffff
0x984 AND
0x985 PUSH2 0xffff
0x988 AND
0x989 PUSH31 0x1000000000000000000000000000000000000000000000000000000000000
0x9a9 MUL
0x9aa DUP2
0x9ab MSTORE
0x9ac PUSH1 0x2
0x9ae ADD
0x9af SWAP6
0x9b0 POP
0x9b1 POP
0x9b2 POP
0x9b3 POP
0x9b4 POP
0x9b5 POP
0x9b6 PUSH1 0x40
0x9b8 MLOAD
0x9b9 DUP1
0x9ba SWAP2
0x9bb SUB
0x9bc SWAP1
0x9bd SHA3
0x9be PUSH1 0x1
0x9c0 SWAP1
0x9c1 DIV
0x9c2 SWAP1
0x9c3 POP
0x9c4 PUSH2 0xd87
0x9c7 JUMP
---
0x7ef: V332 = 0xd8
0x7f1: V333 = 0x100000000000000000000000000000000000000000000000000000000000000
0x812: V334 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd8
0x813: V335 = 0x94
0x815: V336 = 0x100000000000000000000000000000000000000000000000000000000000000
0x836: V337 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0x838: V338 = 0x82
0x83a: V339 = 0x100000000000000000000000000000000000000000000000000000000000000
0x85b: V340 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x82
0x85d: V341 = 0x40
0x85f: V342 = M[0x40]
0x862: V343 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x882: V344 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x883: V345 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd800000000000000000000000000000000000000000000000000000000000000
0x884: V346 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8a4: V347 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8a5: V348 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd800000000000000000000000000000000000000000000000000000000000000
0x8a7: M[V342] = 0xd800000000000000000000000000000000000000000000000000000000000000
0x8a8: V349 = 0x1
0x8aa: V350 = ADD 0x1 V342
0x8ac: V351 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8cc: V352 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8cd: V353 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x8ce: V354 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8ee: V355 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8ef: V356 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0x8f1: M[V350] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x8f2: V357 = 0x1
0x8f4: V358 = ADD 0x1 V350
0x8f6: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x90b: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x90c: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x921: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x922: V363 = 0x1000000000000000000000000
0x930: V364 = MUL 0x1000000000000000000000000 V362
0x932: M[V358] = V364
0x933: V365 = 0x14
0x935: V366 = ADD 0x14 V358
0x937: V367 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x957: V368 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x958: V369 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8200000000000000000000000000000000000000000000000000000000000000
0x959: V370 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x979: V371 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x97a: V372 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8200000000000000000000000000000000000000000000000000000000000000
0x97c: M[V366] = 0x8200000000000000000000000000000000000000000000000000000000000000
0x97d: V373 = 0x1
0x97f: V374 = ADD 0x1 V366
0x981: V375 = 0xffff
0x984: V376 = AND 0xffff S1
0x985: V377 = 0xffff
0x988: V378 = AND 0xffff V376
0x989: V379 = 0x1000000000000000000000000000000000000000000000000000000000000
0x9a9: V380 = MUL 0x1000000000000000000000000000000000000000000000000000000000000 V378
0x9ab: M[V374] = V380
0x9ac: V381 = 0x2
0x9ae: V382 = ADD 0x2 V374
0x9b6: V383 = 0x40
0x9b8: V384 = M[0x40]
0x9bb: V385 = SUB V382 V384
0x9bd: V386 = SHA3 V384 V385
0x9be: V387 = 0x1
0x9c1: V388 = DIV V386 0x1
0x9c4: V389 = 0xd87
0x9c7: JUMP 0xd87
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V388]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, V388]

================================

Block 0x9c8
[0x9c8:0x9d4]
---
Predecessors: [0x7e3]
Successors: [0x9d5, 0xbaf]
---
0x9c8 JUMPDEST
0x9c9 PUSH3 0xffffff
0x9cd DUP3
0x9ce GT
0x9cf ISZERO
0x9d0 ISZERO
0x9d1 PUSH2 0xbaf
0x9d4 JUMPI
---
0x9c8: JUMPDEST 
0x9c9: V390 = 0xffffff
0x9ce: V391 = GT S1 0xffffff
0x9cf: V392 = ISZERO V391
0x9d0: V393 = ISZERO V392
0x9d1: V394 = 0xbaf
0x9d4: JUMPI 0xbaf V393
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]

================================

Block 0x9d5
[0x9d5:0xbae]
---
Predecessors: [0x9c8]
Successors: [0xd87]
---
0x9d5 PUSH1 0xd9
0x9d7 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x9f8 MUL
0x9f9 PUSH1 0x94
0x9fb PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xa1c MUL
0xa1d DUP5
0xa1e PUSH1 0x83
0xa20 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xa41 MUL
0xa42 DUP6
0xa43 PUSH1 0x40
0xa45 MLOAD
0xa46 DUP1
0xa47 DUP7
0xa48 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa68 NOT
0xa69 AND
0xa6a PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa8a NOT
0xa8b AND
0xa8c DUP2
0xa8d MSTORE
0xa8e PUSH1 0x1
0xa90 ADD
0xa91 DUP6
0xa92 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xab2 NOT
0xab3 AND
0xab4 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xad4 NOT
0xad5 AND
0xad6 DUP2
0xad7 MSTORE
0xad8 PUSH1 0x1
0xada ADD
0xadb DUP5
0xadc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf1 AND
0xaf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb07 AND
0xb08 PUSH13 0x1000000000000000000000000
0xb16 MUL
0xb17 DUP2
0xb18 MSTORE
0xb19 PUSH1 0x14
0xb1b ADD
0xb1c DUP4
0xb1d PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb3d NOT
0xb3e AND
0xb3f PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb5f NOT
0xb60 AND
0xb61 DUP2
0xb62 MSTORE
0xb63 PUSH1 0x1
0xb65 ADD
0xb66 DUP3
0xb67 PUSH3 0xffffff
0xb6b AND
0xb6c PUSH3 0xffffff
0xb70 AND
0xb71 PUSH30 0x10000000000000000000000000000000000000000000000000000000000
0xb90 MUL
0xb91 DUP2
0xb92 MSTORE
0xb93 PUSH1 0x3
0xb95 ADD
0xb96 SWAP6
0xb97 POP
0xb98 POP
0xb99 POP
0xb9a POP
0xb9b POP
0xb9c POP
0xb9d PUSH1 0x40
0xb9f MLOAD
0xba0 DUP1
0xba1 SWAP2
0xba2 SUB
0xba3 SWAP1
0xba4 SHA3
0xba5 PUSH1 0x1
0xba7 SWAP1
0xba8 DIV
0xba9 SWAP1
0xbaa POP
0xbab PUSH2 0xd87
0xbae JUMP
---
0x9d5: V395 = 0xd9
0x9d7: V396 = 0x100000000000000000000000000000000000000000000000000000000000000
0x9f8: V397 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xd9
0x9f9: V398 = 0x94
0x9fb: V399 = 0x100000000000000000000000000000000000000000000000000000000000000
0xa1c: V400 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0xa1e: V401 = 0x83
0xa20: V402 = 0x100000000000000000000000000000000000000000000000000000000000000
0xa41: V403 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x83
0xa43: V404 = 0x40
0xa45: V405 = M[0x40]
0xa48: V406 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa68: V407 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa69: V408 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd900000000000000000000000000000000000000000000000000000000000000
0xa6a: V409 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa8a: V410 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa8b: V411 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xd900000000000000000000000000000000000000000000000000000000000000
0xa8d: M[V405] = 0xd900000000000000000000000000000000000000000000000000000000000000
0xa8e: V412 = 0x1
0xa90: V413 = ADD 0x1 V405
0xa92: V414 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xab2: V415 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xab3: V416 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0xab4: V417 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xad4: V418 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xad5: V419 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0xad7: M[V413] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xad8: V420 = 0x1
0xada: V421 = ADD 0x1 V413
0xadc: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf1: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xaf2: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0xb07: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0xb08: V426 = 0x1000000000000000000000000
0xb16: V427 = MUL 0x1000000000000000000000000 V425
0xb18: M[V421] = V427
0xb19: V428 = 0x14
0xb1b: V429 = ADD 0x14 V421
0xb1d: V430 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb3d: V431 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb3e: V432 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8300000000000000000000000000000000000000000000000000000000000000
0xb3f: V433 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb5f: V434 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb60: V435 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8300000000000000000000000000000000000000000000000000000000000000
0xb62: M[V429] = 0x8300000000000000000000000000000000000000000000000000000000000000
0xb63: V436 = 0x1
0xb65: V437 = ADD 0x1 V429
0xb67: V438 = 0xffffff
0xb6b: V439 = AND 0xffffff S1
0xb6c: V440 = 0xffffff
0xb70: V441 = AND 0xffffff V439
0xb71: V442 = 0x10000000000000000000000000000000000000000000000000000000000
0xb90: V443 = MUL 0x10000000000000000000000000000000000000000000000000000000000 V441
0xb92: M[V437] = V443
0xb93: V444 = 0x3
0xb95: V445 = ADD 0x3 V437
0xb9d: V446 = 0x40
0xb9f: V447 = M[0x40]
0xba2: V448 = SUB V445 V447
0xba4: V449 = SHA3 V447 V448
0xba5: V450 = 0x1
0xba8: V451 = DIV V449 0x1
0xbab: V452 = 0xd87
0xbae: JUMP 0xd87
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V451]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, V451]

================================

Block 0xbaf
[0xbaf:0xd86]
---
Predecessors: [0x9c8]
Successors: [0xd87]
---
0xbaf JUMPDEST
0xbb0 PUSH1 0xda
0xbb2 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xbd3 MUL
0xbd4 PUSH1 0x94
0xbd6 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xbf7 MUL
0xbf8 DUP5
0xbf9 PUSH1 0x84
0xbfb PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0xc1c MUL
0xc1d DUP6
0xc1e PUSH1 0x40
0xc20 MLOAD
0xc21 DUP1
0xc22 DUP7
0xc23 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc43 NOT
0xc44 AND
0xc45 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc65 NOT
0xc66 AND
0xc67 DUP2
0xc68 MSTORE
0xc69 PUSH1 0x1
0xc6b ADD
0xc6c DUP6
0xc6d PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc8d NOT
0xc8e AND
0xc8f PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcaf NOT
0xcb0 AND
0xcb1 DUP2
0xcb2 MSTORE
0xcb3 PUSH1 0x1
0xcb5 ADD
0xcb6 DUP5
0xcb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccc AND
0xccd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce2 AND
0xce3 PUSH13 0x1000000000000000000000000
0xcf1 MUL
0xcf2 DUP2
0xcf3 MSTORE
0xcf4 PUSH1 0x14
0xcf6 ADD
0xcf7 DUP4
0xcf8 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd18 NOT
0xd19 AND
0xd1a PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd3a NOT
0xd3b AND
0xd3c DUP2
0xd3d MSTORE
0xd3e PUSH1 0x1
0xd40 ADD
0xd41 DUP3
0xd42 PUSH4 0xffffffff
0xd47 AND
0xd48 PUSH4 0xffffffff
0xd4d AND
0xd4e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd6c MUL
0xd6d DUP2
0xd6e MSTORE
0xd6f PUSH1 0x4
0xd71 ADD
0xd72 SWAP6
0xd73 POP
0xd74 POP
0xd75 POP
0xd76 POP
0xd77 POP
0xd78 POP
0xd79 PUSH1 0x40
0xd7b MLOAD
0xd7c DUP1
0xd7d SWAP2
0xd7e SUB
0xd7f SWAP1
0xd80 SHA3
0xd81 PUSH1 0x1
0xd83 SWAP1
0xd84 DIV
0xd85 SWAP1
0xd86 POP
---
0xbaf: JUMPDEST 
0xbb0: V453 = 0xda
0xbb2: V454 = 0x100000000000000000000000000000000000000000000000000000000000000
0xbd3: V455 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0xda
0xbd4: V456 = 0x94
0xbd6: V457 = 0x100000000000000000000000000000000000000000000000000000000000000
0xbf7: V458 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x94
0xbf9: V459 = 0x84
0xbfb: V460 = 0x100000000000000000000000000000000000000000000000000000000000000
0xc1c: V461 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x84
0xc1e: V462 = 0x40
0xc20: V463 = M[0x40]
0xc23: V464 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc43: V465 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc44: V466 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xda00000000000000000000000000000000000000000000000000000000000000
0xc45: V467 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc65: V468 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc66: V469 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0xda00000000000000000000000000000000000000000000000000000000000000
0xc68: M[V463] = 0xda00000000000000000000000000000000000000000000000000000000000000
0xc69: V470 = 0x1
0xc6b: V471 = ADD 0x1 V463
0xc6d: V472 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc8d: V473 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xc8e: V474 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0xc8f: V475 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcaf: V476 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xcb0: V477 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x9400000000000000000000000000000000000000000000000000000000000000
0xcb2: M[V471] = 0x9400000000000000000000000000000000000000000000000000000000000000
0xcb3: V478 = 0x1
0xcb5: V479 = ADD 0x1 V471
0xcb7: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0xccc: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0xccd: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0xce2: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0xce3: V484 = 0x1000000000000000000000000
0xcf1: V485 = MUL 0x1000000000000000000000000 V483
0xcf3: M[V479] = V485
0xcf4: V486 = 0x14
0xcf6: V487 = ADD 0x14 V479
0xcf8: V488 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd18: V489 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd19: V490 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8400000000000000000000000000000000000000000000000000000000000000
0xd1a: V491 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd3a: V492 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd3b: V493 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 0x8400000000000000000000000000000000000000000000000000000000000000
0xd3d: M[V487] = 0x8400000000000000000000000000000000000000000000000000000000000000
0xd3e: V494 = 0x1
0xd40: V495 = ADD 0x1 V487
0xd42: V496 = 0xffffffff
0xd47: V497 = AND 0xffffffff S1
0xd48: V498 = 0xffffffff
0xd4d: V499 = AND 0xffffffff V497
0xd4e: V500 = 0x100000000000000000000000000000000000000000000000000000000
0xd6c: V501 = MUL 0x100000000000000000000000000000000000000000000000000000000 V499
0xd6e: M[V495] = V501
0xd6f: V502 = 0x4
0xd71: V503 = ADD 0x4 V495
0xd79: V504 = 0x40
0xd7b: V505 = M[0x40]
0xd7e: V506 = SUB V503 V505
0xd80: V507 = SHA3 V505 V506
0xd81: V508 = 0x1
0xd84: V509 = DIV V507 0x1
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V509]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, V509]

================================

Block 0xd87
[0xd87:0xd8c]
---
Predecessors: [0x2a6, 0x459, 0x60b, 0x7ef, 0x9d5, 0xbaf]
Successors: [0xcc]
---
0xd87 JUMPDEST
0xd88 SWAP3
0xd89 SWAP2
0xd8a POP
0xd8b POP
0xd8c JUMP
---
0xd87: JUMPDEST 
0xd8c: JUMP 0xcc
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0xcc, V44, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0xd8d
[0xd8d:0xe02]
---
Predecessors: [0xcc]
Successors: [0xe03]
---
0xd8d JUMPDEST
0xd8e PUSH1 0x0
0xd90 DUP1
0xd91 PUSH2 0xf81
0xd94 NUMBER
0xd95 PUSH2 0xf73
0xd98 TIMESTAMP
0xd99 DUP7
0xd9a PUSH1 0x40
0xd9c MLOAD
0xd9d PUSH1 0x20
0xd9f ADD
0xda0 DUP1
0xda1 DUP3
0xda2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb7 AND
0xdb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcd AND
0xdce PUSH13 0x1000000000000000000000000
0xddc MUL
0xddd DUP2
0xdde MSTORE
0xddf PUSH1 0x14
0xde1 ADD
0xde2 SWAP2
0xde3 POP
0xde4 POP
0xde5 PUSH1 0x40
0xde7 MLOAD
0xde8 PUSH1 0x20
0xdea DUP2
0xdeb DUP4
0xdec SUB
0xded SUB
0xdee DUP2
0xdef MSTORE
0xdf0 SWAP1
0xdf1 PUSH1 0x40
0xdf3 MSTORE
0xdf4 PUSH1 0x40
0xdf6 MLOAD
0xdf7 DUP1
0xdf8 DUP3
0xdf9 DUP1
0xdfa MLOAD
0xdfb SWAP1
0xdfc PUSH1 0x20
0xdfe ADD
0xdff SWAP1
0xe00 DUP1
0xe01 DUP4
0xe02 DUP4
---
0xd8d: JUMPDEST 
0xd8e: V510 = 0x0
0xd91: V511 = 0xf81
0xd94: V512 = NUMBER
0xd95: V513 = 0xf73
0xd98: V514 = TIMESTAMP
0xd9a: V515 = 0x40
0xd9c: V516 = M[0x40]
0xd9d: V517 = 0x20
0xd9f: V518 = ADD 0x20 V516
0xda2: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb7: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xdb8: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcd: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0xdce: V523 = 0x1000000000000000000000000
0xddc: V524 = MUL 0x1000000000000000000000000 V522
0xdde: M[V518] = V524
0xddf: V525 = 0x14
0xde1: V526 = ADD 0x14 V518
0xde5: V527 = 0x40
0xde7: V528 = M[0x40]
0xde8: V529 = 0x20
0xdec: V530 = SUB V526 V528
0xded: V531 = SUB V530 0x20
0xdef: M[V528] = V531
0xdf1: V532 = 0x40
0xdf3: M[0x40] = V526
0xdf4: V533 = 0x40
0xdf6: V534 = M[0x40]
0xdfa: V535 = M[V528]
0xdfc: V536 = 0x20
0xdfe: V537 = ADD 0x20 V528
---
Entry stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xd7, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V528, V534, V534, V537, V535, V535, V534, V537]
Exit stack: [S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xd7, S0, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V528, V534, V534, V537, V535, V535, V534, V537]

================================

Block 0xe03
[0xe03:0xe0d]
---
Predecessors: [0xd8d, 0xe0e]
Successors: [0xe0e, 0xe28]
---
0xe03 JUMPDEST
0xe04 PUSH1 0x20
0xe06 DUP4
0xe07 LT
0xe08 ISZERO
0xe09 ISZERO
0xe0a PUSH2 0xe28
0xe0d JUMPI
---
0xe03: JUMPDEST 
0xe04: V538 = 0x20
0xe07: V539 = LT S2 0x20
0xe08: V540 = ISZERO V539
0xe09: V541 = ISZERO V540
0xe0a: V542 = 0xe28
0xe0d: JUMPI 0xe28 V541
---
Entry stack: [S20, S19, S18, S17, S16, 0xd7, S14, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V528, V534, V534, V537, V535, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S20, S19, S18, S17, S16, 0xd7, S14, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V528, V534, V534, V537, V535, S2, S1, S0]

================================

Block 0xe0e
[0xe0e:0xe27]
---
Predecessors: [0xe03]
Successors: [0xe03]
---
0xe0e DUP1
0xe0f MLOAD
0xe10 DUP3
0xe11 MSTORE
0xe12 PUSH1 0x20
0xe14 DUP3
0xe15 ADD
0xe16 SWAP2
0xe17 POP
0xe18 PUSH1 0x20
0xe1a DUP2
0xe1b ADD
0xe1c SWAP1
0xe1d POP
0xe1e PUSH1 0x20
0xe20 DUP4
0xe21 SUB
0xe22 SWAP3
0xe23 POP
0xe24 PUSH2 0xe03
0xe27 JUMP
---
0xe0f: V543 = M[S0]
0xe11: M[S1] = V543
0xe12: V544 = 0x20
0xe15: V545 = ADD S1 0x20
0xe18: V546 = 0x20
0xe1b: V547 = ADD S0 0x20
0xe1e: V548 = 0x20
0xe21: V549 = SUB S2 0x20
0xe24: V550 = 0xe03
0xe27: JUMP 0xe03
---
Entry stack: [S20, S19, S18, S17, S16, 0xd7, S14, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V528, V534, V534, V537, V535, S2, S1, S0]
Stack pops: 3
Stack additions: [V549, V545, V547]
Exit stack: [S20, S19, S18, S17, S16, 0xd7, S14, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V528, V534, V534, V537, V535, V549, V545, V547]

================================

Block 0xe28
[0xe28:0xe60]
---
Predecessors: [0xe03]
Successors: [0xe61, 0xe62]
---
0xe28 JUMPDEST
0xe29 PUSH1 0x1
0xe2b DUP4
0xe2c PUSH1 0x20
0xe2e SUB
0xe2f PUSH2 0x100
0xe32 EXP
0xe33 SUB
0xe34 DUP1
0xe35 NOT
0xe36 DUP3
0xe37 MLOAD
0xe38 AND
0xe39 DUP2
0xe3a DUP5
0xe3b MLOAD
0xe3c AND
0xe3d DUP1
0xe3e DUP3
0xe3f OR
0xe40 DUP6
0xe41 MSTORE
0xe42 POP
0xe43 POP
0xe44 POP
0xe45 POP
0xe46 POP
0xe47 POP
0xe48 SWAP1
0xe49 POP
0xe4a ADD
0xe4b SWAP2
0xe4c POP
0xe4d POP
0xe4e PUSH1 0x40
0xe50 MLOAD
0xe51 DUP1
0xe52 SWAP2
0xe53 SUB
0xe54 SWAP1
0xe55 SHA3
0xe56 PUSH1 0x1
0xe58 SWAP1
0xe59 DIV
0xe5a DUP2
0xe5b ISZERO
0xe5c ISZERO
0xe5d PUSH2 0xe62
0xe60 JUMPI
---
0xe28: JUMPDEST 
0xe29: V551 = 0x1
0xe2c: V552 = 0x20
0xe2e: V553 = SUB 0x20 S2
0xe2f: V554 = 0x100
0xe32: V555 = EXP 0x100 V553
0xe33: V556 = SUB V555 0x1
0xe35: V557 = NOT V556
0xe37: V558 = M[S0]
0xe38: V559 = AND V558 V557
0xe3b: V560 = M[S1]
0xe3c: V561 = AND V560 V556
0xe3f: V562 = OR V559 V561
0xe41: M[S1] = V562
0xe4a: V563 = ADD V535 V534
0xe4e: V564 = 0x40
0xe50: V565 = M[0x40]
0xe53: V566 = SUB V563 V565
0xe55: V567 = SHA3 V565 V566
0xe56: V568 = 0x1
0xe59: V569 = DIV V567 0x1
0xe5b: V570 = ISZERO V514
0xe5c: V571 = ISZERO V570
0xe5d: V572 = 0xe62
0xe60: JUMPI 0xe62 V571
---
Entry stack: [S20, S19, S18, S17, S16, 0xd7, S14, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V528, V534, V534, V537, V535, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V569]
Exit stack: [S20, S19, S18, S17, S16, 0xd7, S14, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V569]

================================

Block 0xe61
[0xe61:0xe61]
---
Predecessors: [0xe28]
Successors: []
---
0xe61 INVALID
---
0xe61: INVALID 
---
Entry stack: [S13, S12, S11, S10, S9, 0xd7, S7, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V569]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, 0xd7, S7, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V569]

================================

Block 0xe62
[0xe62:0xed5]
---
Predecessors: [0xe28]
Successors: [0xed6]
---
0xe62 JUMPDEST
0xe63 DIV
0xe64 PUSH2 0xf65
0xe67 GASLIMIT
0xe68 PUSH2 0xf57
0xe6b TIMESTAMP
0xe6c COINBASE
0xe6d PUSH1 0x40
0xe6f MLOAD
0xe70 PUSH1 0x20
0xe72 ADD
0xe73 DUP1
0xe74 DUP3
0xe75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8a AND
0xe8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea0 AND
0xea1 PUSH13 0x1000000000000000000000000
0xeaf MUL
0xeb0 DUP2
0xeb1 MSTORE
0xeb2 PUSH1 0x14
0xeb4 ADD
0xeb5 SWAP2
0xeb6 POP
0xeb7 POP
0xeb8 PUSH1 0x40
0xeba MLOAD
0xebb PUSH1 0x20
0xebd DUP2
0xebe DUP4
0xebf SUB
0xec0 SUB
0xec1 DUP2
0xec2 MSTORE
0xec3 SWAP1
0xec4 PUSH1 0x40
0xec6 MSTORE
0xec7 PUSH1 0x40
0xec9 MLOAD
0xeca DUP1
0xecb DUP3
0xecc DUP1
0xecd MLOAD
0xece SWAP1
0xecf PUSH1 0x20
0xed1 ADD
0xed2 SWAP1
0xed3 DUP1
0xed4 DUP4
0xed5 DUP4
---
0xe62: JUMPDEST 
0xe63: V573 = DIV V569 V514
0xe64: V574 = 0xf65
0xe67: V575 = GASLIMIT
0xe68: V576 = 0xf57
0xe6b: V577 = TIMESTAMP
0xe6c: V578 = COINBASE
0xe6d: V579 = 0x40
0xe6f: V580 = M[0x40]
0xe70: V581 = 0x20
0xe72: V582 = ADD 0x20 V580
0xe75: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8a: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V578
0xe8b: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0xea0: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0xea1: V587 = 0x1000000000000000000000000
0xeaf: V588 = MUL 0x1000000000000000000000000 V586
0xeb1: M[V582] = V588
0xeb2: V589 = 0x14
0xeb4: V590 = ADD 0x14 V582
0xeb8: V591 = 0x40
0xeba: V592 = M[0x40]
0xebb: V593 = 0x20
0xebf: V594 = SUB V590 V592
0xec0: V595 = SUB V594 0x20
0xec2: M[V592] = V595
0xec4: V596 = 0x40
0xec6: M[0x40] = V590
0xec7: V597 = 0x40
0xec9: V598 = M[0x40]
0xecd: V599 = M[V592]
0xecf: V600 = 0x20
0xed1: V601 = ADD 0x20 V592
---
Entry stack: [S13, S12, S11, S10, S9, 0xd7, S7, 0x0, 0x0, 0xf81, V512, 0xf73, V514, V569]
Stack pops: 2
Stack additions: [V573, 0xf65, V575, 0xf57, V577, V592, V598, V598, V601, V599, V599, V598, V601]
Exit stack: [S13, S12, S11, S10, S9, 0xd7, S7, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V592, V598, V598, V601, V599, V599, V598, V601]

================================

Block 0xed6
[0xed6:0xee0]
---
Predecessors: [0xe62, 0xee1]
Successors: [0xee1, 0xefb]
---
0xed6 JUMPDEST
0xed7 PUSH1 0x20
0xed9 DUP4
0xeda LT
0xedb ISZERO
0xedc ISZERO
0xedd PUSH2 0xefb
0xee0 JUMPI
---
0xed6: JUMPDEST 
0xed7: V602 = 0x20
0xeda: V603 = LT S2 0x20
0xedb: V604 = ISZERO V603
0xedc: V605 = ISZERO V604
0xedd: V606 = 0xefb
0xee0: JUMPI 0xefb V605
---
Entry stack: [S24, S23, S22, S21, S20, 0xd7, S18, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V592, V598, V598, V601, V599, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S24, S23, S22, S21, S20, 0xd7, S18, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V592, V598, V598, V601, V599, S2, S1, S0]

================================

Block 0xee1
[0xee1:0xefa]
---
Predecessors: [0xed6]
Successors: [0xed6]
---
0xee1 DUP1
0xee2 MLOAD
0xee3 DUP3
0xee4 MSTORE
0xee5 PUSH1 0x20
0xee7 DUP3
0xee8 ADD
0xee9 SWAP2
0xeea POP
0xeeb PUSH1 0x20
0xeed DUP2
0xeee ADD
0xeef SWAP1
0xef0 POP
0xef1 PUSH1 0x20
0xef3 DUP4
0xef4 SUB
0xef5 SWAP3
0xef6 POP
0xef7 PUSH2 0xed6
0xefa JUMP
---
0xee2: V607 = M[S0]
0xee4: M[S1] = V607
0xee5: V608 = 0x20
0xee8: V609 = ADD S1 0x20
0xeeb: V610 = 0x20
0xeee: V611 = ADD S0 0x20
0xef1: V612 = 0x20
0xef4: V613 = SUB S2 0x20
0xef7: V614 = 0xed6
0xefa: JUMP 0xed6
---
Entry stack: [S24, S23, S22, S21, S20, 0xd7, S18, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V592, V598, V598, V601, V599, S2, S1, S0]
Stack pops: 3
Stack additions: [V613, V609, V611]
Exit stack: [S24, S23, S22, S21, S20, 0xd7, S18, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V592, V598, V598, V601, V599, V613, V609, V611]

================================

Block 0xefb
[0xefb:0xf33]
---
Predecessors: [0xed6]
Successors: [0xf34, 0xf35]
---
0xefb JUMPDEST
0xefc PUSH1 0x1
0xefe DUP4
0xeff PUSH1 0x20
0xf01 SUB
0xf02 PUSH2 0x100
0xf05 EXP
0xf06 SUB
0xf07 DUP1
0xf08 NOT
0xf09 DUP3
0xf0a MLOAD
0xf0b AND
0xf0c DUP2
0xf0d DUP5
0xf0e MLOAD
0xf0f AND
0xf10 DUP1
0xf11 DUP3
0xf12 OR
0xf13 DUP6
0xf14 MSTORE
0xf15 POP
0xf16 POP
0xf17 POP
0xf18 POP
0xf19 POP
0xf1a POP
0xf1b SWAP1
0xf1c POP
0xf1d ADD
0xf1e SWAP2
0xf1f POP
0xf20 POP
0xf21 PUSH1 0x40
0xf23 MLOAD
0xf24 DUP1
0xf25 SWAP2
0xf26 SUB
0xf27 SWAP1
0xf28 SHA3
0xf29 PUSH1 0x1
0xf2b SWAP1
0xf2c DIV
0xf2d DUP2
0xf2e ISZERO
0xf2f ISZERO
0xf30 PUSH2 0xf35
0xf33 JUMPI
---
0xefb: JUMPDEST 
0xefc: V615 = 0x1
0xeff: V616 = 0x20
0xf01: V617 = SUB 0x20 S2
0xf02: V618 = 0x100
0xf05: V619 = EXP 0x100 V617
0xf06: V620 = SUB V619 0x1
0xf08: V621 = NOT V620
0xf0a: V622 = M[S0]
0xf0b: V623 = AND V622 V621
0xf0e: V624 = M[S1]
0xf0f: V625 = AND V624 V620
0xf12: V626 = OR V623 V625
0xf14: M[S1] = V626
0xf1d: V627 = ADD V599 V598
0xf21: V628 = 0x40
0xf23: V629 = M[0x40]
0xf26: V630 = SUB V627 V629
0xf28: V631 = SHA3 V629 V630
0xf29: V632 = 0x1
0xf2c: V633 = DIV V631 0x1
0xf2e: V634 = ISZERO V577
0xf2f: V635 = ISZERO V634
0xf30: V636 = 0xf35
0xf33: JUMPI 0xf35 V635
---
Entry stack: [S24, S23, S22, S21, S20, 0xd7, S18, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V592, V598, V598, V601, V599, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V633]
Exit stack: [S24, S23, S22, S21, S20, 0xd7, S18, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V633]

================================

Block 0xf34
[0xf34:0xf34]
---
Predecessors: [0xefb]
Successors: []
---
0xf34 INVALID
---
0xf34: INVALID 
---
Entry stack: [S17, S16, S15, S14, S13, 0xd7, S11, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V633]
Stack pops: 0
Stack additions: []
Exit stack: [S17, S16, S15, S14, S13, 0xd7, S11, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V633]

================================

Block 0xf35
[0xf35:0xf48]
---
Predecessors: [0xefb]
Successors: [0x10f5]
---
0xf35 JUMPDEST
0xf36 DIV
0xf37 PUSH2 0xf49
0xf3a DIFFICULTY
0xf3b TIMESTAMP
0xf3c PUSH2 0x10f5
0xf3f SWAP1
0xf40 SWAP2
0xf41 SWAP1
0xf42 PUSH4 0xffffffff
0xf47 AND
0xf48 JUMP
---
0xf35: JUMPDEST 
0xf36: V637 = DIV V633 V577
0xf37: V638 = 0xf49
0xf3a: V639 = DIFFICULTY
0xf3b: V640 = TIMESTAMP
0xf3c: V641 = 0x10f5
0xf42: V642 = 0xffffffff
0xf47: V643 = AND 0xffffffff 0x10f5
0xf48: JUMP 0x10f5
---
Entry stack: [S17, S16, S15, S14, S13, 0xd7, S11, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V577, V633]
Stack pops: 2
Stack additions: [V637, 0xf49, V640, V639]
Exit stack: [S17, S16, S15, S14, S13, 0xd7, S11, 0x0, 0x0, 0xf81, V512, 0xf73, V573, 0xf65, V575, 0xf57, V637, 0xf49, V640, V639]

================================

Block 0xf49
[0xf49:0xf56]
---
Predecessors: [0x1174]
Successors: [0x10f5]
---
0xf49 JUMPDEST
0xf4a PUSH2 0x10f5
0xf4d SWAP1
0xf4e SWAP2
0xf4f SWAP1
0xf50 PUSH4 0xffffffff
0xf55 AND
0xf56 JUMP
---
0xf49: JUMPDEST 
0xf4a: V644 = 0x10f5
0xf50: V645 = 0xffffffff
0xf55: V646 = AND 0xffffffff 0x10f5
0xf56: JUMP 0x10f5
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0xf57
[0xf57:0xf64]
---
Predecessors: [0x1174]
Successors: [0x10f5]
---
0xf57 JUMPDEST
0xf58 PUSH2 0x10f5
0xf5b SWAP1
0xf5c SWAP2
0xf5d SWAP1
0xf5e PUSH4 0xffffffff
0xf63 AND
0xf64 JUMP
---
0xf57: JUMPDEST 
0xf58: V647 = 0x10f5
0xf5e: V648 = 0xffffffff
0xf63: V649 = AND 0xffffffff 0x10f5
0xf64: JUMP 0x10f5
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0xf65
[0xf65:0xf72]
---
Predecessors: [0x296, 0x10ef, 0x1174]
Successors: [0x10f5]
---
0xf65 JUMPDEST
0xf66 PUSH2 0x10f5
0xf69 SWAP1
0xf6a SWAP2
0xf6b SWAP1
0xf6c PUSH4 0xffffffff
0xf71 AND
0xf72 JUMP
---
0xf65: JUMPDEST 
0xf66: V650 = 0x10f5
0xf6c: V651 = 0xffffffff
0xf71: V652 = AND 0xffffffff 0x10f5
0xf72: JUMP 0x10f5
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0xf73
[0xf73:0xf80]
---
Predecessors: [0x296, 0x10ef, 0x1174]
Successors: [0x10f5]
---
0xf73 JUMPDEST
0xf74 PUSH2 0x10f5
0xf77 SWAP1
0xf78 SWAP2
0xf79 SWAP1
0xf7a PUSH4 0xffffffff
0xf7f AND
0xf80 JUMP
---
0xf73: JUMPDEST 
0xf74: V653 = 0x10f5
0xf7a: V654 = 0xffffffff
0xf7f: V655 = AND 0xffffffff 0x10f5
0xf80: JUMP 0x10f5
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S1]

================================

Block 0xf81
[0xf81:0xfaf]
---
Predecessors: [0x296, 0x10ef, 0x1174]
Successors: [0xfb0]
---
0xf81 JUMPDEST
0xf82 PUSH1 0x40
0xf84 MLOAD
0xf85 PUSH1 0x20
0xf87 ADD
0xf88 DUP1
0xf89 DUP3
0xf8a DUP2
0xf8b MSTORE
0xf8c PUSH1 0x20
0xf8e ADD
0xf8f SWAP2
0xf90 POP
0xf91 POP
0xf92 PUSH1 0x40
0xf94 MLOAD
0xf95 PUSH1 0x20
0xf97 DUP2
0xf98 DUP4
0xf99 SUB
0xf9a SUB
0xf9b DUP2
0xf9c MSTORE
0xf9d SWAP1
0xf9e PUSH1 0x40
0xfa0 MSTORE
0xfa1 PUSH1 0x40
0xfa3 MLOAD
0xfa4 DUP1
0xfa5 DUP3
0xfa6 DUP1
0xfa7 MLOAD
0xfa8 SWAP1
0xfa9 PUSH1 0x20
0xfab ADD
0xfac SWAP1
0xfad DUP1
0xfae DUP4
0xfaf DUP4
---
0xf81: JUMPDEST 
0xf82: V656 = 0x40
0xf84: V657 = M[0x40]
0xf85: V658 = 0x20
0xf87: V659 = ADD 0x20 V657
0xf8b: M[V659] = S0
0xf8c: V660 = 0x20
0xf8e: V661 = ADD 0x20 V659
0xf92: V662 = 0x40
0xf94: V663 = M[0x40]
0xf95: V664 = 0x20
0xf99: V665 = SUB V661 V663
0xf9a: V666 = SUB V665 0x20
0xf9c: M[V663] = V666
0xf9e: V667 = 0x40
0xfa0: M[0x40] = V661
0xfa1: V668 = 0x40
0xfa3: V669 = M[0x40]
0xfa7: V670 = M[V663]
0xfa9: V671 = 0x20
0xfab: V672 = ADD 0x20 V663
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V663, V669, V669, V672, V670, V670, V669, V672]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V663, V669, V669, V672, V670, V670, V669, V672]

================================

Block 0xfb0
[0xfb0:0xfba]
---
Predecessors: [0xf81, 0xfbb]
Successors: [0xfbb, 0xfd5]
---
0xfb0 JUMPDEST
0xfb1 PUSH1 0x20
0xfb3 DUP4
0xfb4 LT
0xfb5 ISZERO
0xfb6 ISZERO
0xfb7 PUSH2 0xfd5
0xfba JUMPI
---
0xfb0: JUMPDEST 
0xfb1: V673 = 0x20
0xfb4: V674 = LT S2 0x20
0xfb5: V675 = ISZERO V674
0xfb6: V676 = ISZERO V675
0xfb7: V677 = 0xfd5
0xfba: JUMPI 0xfd5 V676
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V663, V669, V669, V672, V670, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V663, V669, V669, V672, V670, S2, S1, S0]

================================

Block 0xfbb
[0xfbb:0xfd4]
---
Predecessors: [0xfb0]
Successors: [0xfb0]
---
0xfbb DUP1
0xfbc MLOAD
0xfbd DUP3
0xfbe MSTORE
0xfbf PUSH1 0x20
0xfc1 DUP3
0xfc2 ADD
0xfc3 SWAP2
0xfc4 POP
0xfc5 PUSH1 0x20
0xfc7 DUP2
0xfc8 ADD
0xfc9 SWAP1
0xfca POP
0xfcb PUSH1 0x20
0xfcd DUP4
0xfce SUB
0xfcf SWAP3
0xfd0 POP
0xfd1 PUSH2 0xfb0
0xfd4 JUMP
---
0xfbc: V678 = M[S0]
0xfbe: M[S1] = V678
0xfbf: V679 = 0x20
0xfc2: V680 = ADD S1 0x20
0xfc5: V681 = 0x20
0xfc8: V682 = ADD S0 0x20
0xfcb: V683 = 0x20
0xfce: V684 = SUB S2 0x20
0xfd1: V685 = 0xfb0
0xfd4: JUMP 0xfb0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V663, V669, V669, V672, V670, S2, S1, S0]
Stack pops: 3
Stack additions: [V684, V680, V682]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V663, V669, V669, V672, V670, V684, V680, V682]

================================

Block 0xfd5
[0xfd5:0x1089]
---
Predecessors: [0xfb0]
Successors: [0x108a, 0x108e]
---
0xfd5 JUMPDEST
0xfd6 PUSH1 0x1
0xfd8 DUP4
0xfd9 PUSH1 0x20
0xfdb SUB
0xfdc PUSH2 0x100
0xfdf EXP
0xfe0 SUB
0xfe1 DUP1
0xfe2 NOT
0xfe3 DUP3
0xfe4 MLOAD
0xfe5 AND
0xfe6 DUP2
0xfe7 DUP5
0xfe8 MLOAD
0xfe9 AND
0xfea DUP1
0xfeb DUP3
0xfec OR
0xfed DUP6
0xfee MSTORE
0xfef POP
0xff0 POP
0xff1 POP
0xff2 POP
0xff3 POP
0xff4 POP
0xff5 SWAP1
0xff6 POP
0xff7 ADD
0xff8 SWAP2
0xff9 POP
0xffa POP
0xffb PUSH1 0x40
0xffd MLOAD
0xffe DUP1
0xfff SWAP2
0x1000 SUB
0x1001 SWAP1
0x1002 SHA3
0x1003 PUSH1 0x1
0x1005 SWAP1
0x1006 DIV
0x1007 SWAP1
0x1008 POP
0x1009 PUSH1 0x1
0x100b PUSH1 0x0
0x100d SWAP1
0x100e SLOAD
0x100f SWAP1
0x1010 PUSH2 0x100
0x1013 EXP
0x1014 SWAP1
0x1015 DIV
0x1016 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102b AND
0x102c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1041 AND
0x1042 PUSH4 0x11a09ae7
0x1047 PUSH1 0x40
0x1049 MLOAD
0x104a DUP2
0x104b PUSH4 0xffffffff
0x1050 AND
0x1051 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x106f MUL
0x1070 DUP2
0x1071 MSTORE
0x1072 PUSH1 0x4
0x1074 ADD
0x1075 PUSH1 0x20
0x1077 PUSH1 0x40
0x1079 MLOAD
0x107a DUP1
0x107b DUP4
0x107c SUB
0x107d DUP2
0x107e PUSH1 0x0
0x1080 DUP8
0x1081 DUP1
0x1082 EXTCODESIZE
0x1083 ISZERO
0x1084 DUP1
0x1085 ISZERO
0x1086 PUSH2 0x108e
0x1089 JUMPI
---
0xfd5: JUMPDEST 
0xfd6: V686 = 0x1
0xfd9: V687 = 0x20
0xfdb: V688 = SUB 0x20 S2
0xfdc: V689 = 0x100
0xfdf: V690 = EXP 0x100 V688
0xfe0: V691 = SUB V690 0x1
0xfe2: V692 = NOT V691
0xfe4: V693 = M[S0]
0xfe5: V694 = AND V693 V692
0xfe8: V695 = M[S1]
0xfe9: V696 = AND V695 V691
0xfec: V697 = OR V694 V696
0xfee: M[S1] = V697
0xff7: V698 = ADD V670 V669
0xffb: V699 = 0x40
0xffd: V700 = M[0x40]
0x1000: V701 = SUB V698 V700
0x1002: V702 = SHA3 V700 V701
0x1003: V703 = 0x1
0x1006: V704 = DIV V702 0x1
0x1009: V705 = 0x1
0x100b: V706 = 0x0
0x100e: V707 = S[0x1]
0x1010: V708 = 0x100
0x1013: V709 = EXP 0x100 0x0
0x1015: V710 = DIV V707 0x1
0x1016: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0x102b: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0x102c: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0x1041: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0x1042: V715 = 0x11a09ae7
0x1047: V716 = 0x40
0x1049: V717 = M[0x40]
0x104b: V718 = 0xffffffff
0x1050: V719 = AND 0xffffffff 0x11a09ae7
0x1051: V720 = 0x100000000000000000000000000000000000000000000000000000000
0x106f: V721 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x1071: M[V717] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x1072: V722 = 0x4
0x1074: V723 = ADD 0x4 V717
0x1075: V724 = 0x20
0x1077: V725 = 0x40
0x1079: V726 = M[0x40]
0x107c: V727 = SUB V723 V726
0x107e: V728 = 0x0
0x1082: V729 = EXTCODESIZE V714
0x1083: V730 = ISZERO V729
0x1085: V731 = ISZERO V730
0x1086: V732 = 0x108e
0x1089: JUMPI 0x108e V731
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V663, V669, V669, V672, V670, S2, S1, S0]
Stack pops: 9
Stack additions: [V704, V714, 0x11a09ae7, V723, 0x20, V726, V727, V726, 0x0, V714, V730]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V704, V714, 0x11a09ae7, V723, 0x20, V726, V727, V726, 0x0, V714, V730]

================================

Block 0x108a
[0x108a:0x108d]
---
Predecessors: [0xfd5]
Successors: []
---
0x108a PUSH1 0x0
0x108c DUP1
0x108d REVERT
---
0x108a: V733 = 0x0
0x108d: REVERT 0x0 0x0
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V704, V714, 0x11a09ae7, V723, 0x20, V726, V727, V726, 0x0, V714, V730]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V704, V714, 0x11a09ae7, V723, 0x20, V726, V727, V726, 0x0, V714, V730]

================================

Block 0x108e
[0x108e:0x1098]
---
Predecessors: [0xfd5]
Successors: [0x1099, 0x10a2]
---
0x108e JUMPDEST
0x108f POP
0x1090 GAS
0x1091 CALL
0x1092 ISZERO
0x1093 DUP1
0x1094 ISZERO
0x1095 PUSH2 0x10a2
0x1098 JUMPI
---
0x108e: JUMPDEST 
0x1090: V734 = GAS
0x1091: V735 = CALL V734 V714 0x0 V726 V727 V726 0x20
0x1092: V736 = ISZERO V735
0x1094: V737 = ISZERO V736
0x1095: V738 = 0x10a2
0x1098: JUMPI 0x10a2 V737
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V704, V714, 0x11a09ae7, V723, 0x20, V726, V727, V726, 0x0, V714, V730]
Stack pops: 7
Stack additions: [V736]
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, V704, V714, 0x11a09ae7, V723, V736]

================================

Block 0x1099
[0x1099:0x10a1]
---
Predecessors: [0x108e]
Successors: []
---
0x1099 RETURNDATASIZE
0x109a PUSH1 0x0
0x109c DUP1
0x109d RETURNDATACOPY
0x109e RETURNDATASIZE
0x109f PUSH1 0x0
0x10a1 REVERT
---
0x1099: V739 = RETURNDATASIZE
0x109a: V740 = 0x0
0x109d: RETURNDATACOPY 0x0 0x0 V739
0x109e: V741 = RETURNDATASIZE
0x109f: V742 = 0x0
0x10a1: REVERT 0x0 V741
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x11a09ae7, S1, V736]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x11a09ae7, S1, V736]

================================

Block 0x10a2
[0x10a2:0x10b3]
---
Predecessors: [0x108e]
Successors: [0x10b4, 0x10b8]
---
0x10a2 JUMPDEST
0x10a3 POP
0x10a4 POP
0x10a5 POP
0x10a6 POP
0x10a7 PUSH1 0x40
0x10a9 MLOAD
0x10aa RETURNDATASIZE
0x10ab PUSH1 0x20
0x10ad DUP2
0x10ae LT
0x10af ISZERO
0x10b0 PUSH2 0x10b8
0x10b3 JUMPI
---
0x10a2: JUMPDEST 
0x10a7: V743 = 0x40
0x10a9: V744 = M[0x40]
0x10aa: V745 = RETURNDATASIZE
0x10ab: V746 = 0x20
0x10ae: V747 = LT V745 0x20
0x10af: V748 = ISZERO V747
0x10b0: V749 = 0x10b8
0x10b3: JUMPI 0x10b8 V748
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x11a09ae7, S1, V736]
Stack pops: 4
Stack additions: [V744, V745]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V744, V745]

================================

Block 0x10b4
[0x10b4:0x10b7]
---
Predecessors: [0x10a2]
Successors: []
---
0x10b4 PUSH1 0x0
0x10b6 DUP1
0x10b7 REVERT
---
0x10b4: V750 = 0x0
0x10b7: REVERT 0x0 0x0
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V744, V745]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V744, V745]

================================

Block 0x10b8
[0x10b8:0x10d5]
---
Predecessors: [0x10a2]
Successors: [0x10d6, 0x10d7]
---
0x10b8 JUMPDEST
0x10b9 DUP2
0x10ba ADD
0x10bb SWAP1
0x10bc DUP1
0x10bd DUP1
0x10be MLOAD
0x10bf SWAP1
0x10c0 PUSH1 0x20
0x10c2 ADD
0x10c3 SWAP1
0x10c4 SWAP3
0x10c5 SWAP2
0x10c6 SWAP1
0x10c7 POP
0x10c8 POP
0x10c9 POP
0x10ca PUSH2 0x3e8
0x10cd DUP1
0x10ce DUP4
0x10cf DUP2
0x10d0 ISZERO
0x10d1 ISZERO
0x10d2 PUSH2 0x10d7
0x10d5 JUMPI
---
0x10b8: JUMPDEST 
0x10ba: V751 = ADD V744 V745
0x10be: V752 = M[V744]
0x10c0: V753 = 0x20
0x10c2: V754 = ADD 0x20 V744
0x10ca: V755 = 0x3e8
0x10d0: V756 = ISZERO 0x3e8
0x10d1: V757 = ISZERO 0x0
0x10d2: V758 = 0x10d7
0x10d5: JUMPI 0x10d7 0x1
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V744, V745]
Stack pops: 3
Stack additions: [S2, V752, 0x3e8, 0x3e8, S2]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V752, 0x3e8, 0x3e8, S2]

================================

Block 0x10d6
[0x10d6:0x10d6]
---
Predecessors: [0x10b8]
Successors: []
---
0x10d6 INVALID
---
0x10d6: INVALID 
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V752, 0x3e8, 0x3e8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V752, 0x3e8, 0x3e8, S0]

================================

Block 0x10d7
[0x10d7:0x10e1]
---
Predecessors: [0x10b8]
Successors: [0x10e2, 0x10ea]
---
0x10d7 JUMPDEST
0x10d8 DIV
0x10d9 MUL
0x10da DUP3
0x10db SUB
0x10dc LT
0x10dd ISZERO
0x10de PUSH2 0x10ea
0x10e1 JUMPI
---
0x10d7: JUMPDEST 
0x10d8: V759 = DIV S0 0x3e8
0x10d9: V760 = MUL V759 0x3e8
0x10db: V761 = SUB S4 V760
0x10dc: V762 = LT V761 V752
0x10dd: V763 = ISZERO V762
0x10de: V764 = 0x10ea
0x10e1: JUMPI 0x10ea V763
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V752, 0x3e8, 0x3e8, S0]
Stack pops: 5
Stack additions: [S4]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x10e2
[0x10e2:0x10e9]
---
Predecessors: [0x10d7]
Successors: [0x10ef]
---
0x10e2 PUSH1 0x1
0x10e4 SWAP2
0x10e5 POP
0x10e6 PUSH2 0x10ef
0x10e9 JUMP
---
0x10e2: V765 = 0x1
0x10e6: V766 = 0x10ef
0x10e9: JUMP 0x10ef
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x1, S0]

================================

Block 0x10ea
[0x10ea:0x10ee]
---
Predecessors: [0x10d7]
Successors: [0x10ef]
---
0x10ea JUMPDEST
0x10eb PUSH1 0x0
0x10ed SWAP2
0x10ee POP
---
0x10ea: JUMPDEST 
0x10eb: V767 = 0x0
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0x10ef
[0x10ef:0x10f4]
---
Predecessors: [0x10e2, 0x10ea]
Successors: [0x4e, 0xd7, 0xf65, 0xf73, 0xf81]
---
0x10ef JUMPDEST
0x10f0 POP
0x10f1 SWAP2
0x10f2 SWAP1
0x10f3 POP
0x10f4 JUMP
---
0x10ef: JUMPDEST 
0x10f4: JUMP S3
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [S11, S10, S9, S8, S7, S6, S5, S4, {0x0, 0x1}]

================================

Block 0x10f5
[0x10f5:0x1106]
---
Predecessors: [0xf35, 0xf49, 0xf57, 0xf65, 0xf73]
Successors: [0x1107, 0x1174]
---
0x10f5 JUMPDEST
0x10f6 PUSH1 0x0
0x10f8 DUP2
0x10f9 DUP4
0x10fa ADD
0x10fb SWAP1
0x10fc POP
0x10fd DUP3
0x10fe DUP2
0x10ff LT
0x1100 ISZERO
0x1101 ISZERO
0x1102 ISZERO
0x1103 PUSH2 0x1174
0x1106 JUMPI
---
0x10f5: JUMPDEST 
0x10f6: V768 = 0x0
0x10fa: V769 = ADD S1 S0
0x10ff: V770 = LT V769 S1
0x1100: V771 = ISZERO V770
0x1101: V772 = ISZERO V771
0x1102: V773 = ISZERO V772
0x1103: V774 = 0x1174
0x1106: JUMPI 0x1174 V773
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V769]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V769]

================================

Block 0x1107
[0x1107:0x1173]
---
Predecessors: [0x10f5]
Successors: []
---
0x1107 PUSH1 0x40
0x1109 MLOAD
0x110a PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x112b DUP2
0x112c MSTORE
0x112d PUSH1 0x4
0x112f ADD
0x1130 DUP1
0x1131 DUP1
0x1132 PUSH1 0x20
0x1134 ADD
0x1135 DUP3
0x1136 DUP2
0x1137 SUB
0x1138 DUP3
0x1139 MSTORE
0x113a PUSH1 0x13
0x113c DUP2
0x113d MSTORE
0x113e PUSH1 0x20
0x1140 ADD
0x1141 DUP1
0x1142 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x1163 DUP2
0x1164 MSTORE
0x1165 POP
0x1166 PUSH1 0x20
0x1168 ADD
0x1169 SWAP2
0x116a POP
0x116b POP
0x116c PUSH1 0x40
0x116e MLOAD
0x116f DUP1
0x1170 SWAP2
0x1171 SUB
0x1172 SWAP1
0x1173 REVERT
---
0x1107: V775 = 0x40
0x1109: V776 = M[0x40]
0x110a: V777 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x112c: M[V776] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x112d: V778 = 0x4
0x112f: V779 = ADD 0x4 V776
0x1132: V780 = 0x20
0x1134: V781 = ADD 0x20 V779
0x1137: V782 = SUB V781 V779
0x1139: M[V779] = V782
0x113a: V783 = 0x13
0x113d: M[V781] = 0x13
0x113e: V784 = 0x20
0x1140: V785 = ADD 0x20 V781
0x1142: V786 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x1164: M[V785] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x1166: V787 = 0x20
0x1168: V788 = ADD 0x20 V785
0x116c: V789 = 0x40
0x116e: V790 = M[0x40]
0x1171: V791 = SUB V788 V790
0x1173: REVERT V790 V791
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 0
Stack additions: []
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]

================================

Block 0x1174
[0x1174:0x117c]
---
Predecessors: [0x10f5]
Successors: [0x4e, 0xd7, 0xf49, 0xf57, 0xf65, 0xf73, 0xf81]
---
0x1174 JUMPDEST
0x1175 DUP1
0x1176 SWAP1
0x1177 POP
0x1178 SWAP3
0x1179 SWAP2
0x117a POP
0x117b POP
0x117c JUMP
---
0x1174: JUMPDEST 
0x117c: JUMP S3
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V769]

================================

Block 0x117d
[0x117d:0x118c]
---
Predecessors: [0xdd]
Successors: [0x108]
---
0x117d JUMPDEST
0x117e PUSH1 0x40
0x1180 MLOAD
0x1181 PUSH2 0x281
0x1184 DUP1
0x1185 PUSH2 0x119d
0x1188 DUP4
0x1189 CODECOPY
0x118a ADD
0x118b SWAP1
0x118c JUMP
---
0x117d: JUMPDEST 
0x117e: V792 = 0x40
0x1180: V793 = M[0x40]
0x1181: V794 = 0x281
0x1185: V795 = 0x119d
0x1189: CODECOPY V793 0x119d 0x281
0x118a: V796 = ADD 0x281 V793
0x118c: JUMP 0x108
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V50, V58, 0x108]
Stack pops: 1
Stack additions: [V796]
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V50, V58, V796]

================================

Block 0x118d
[0x118d:0x119b]
---
Predecessors: [0x1c0]
Successors: [0x1c8]
---
0x118d JUMPDEST
0x118e PUSH1 0x40
0x1190 MLOAD
0x1191 PUSH1 0x52
0x1193 DUP1
0x1194 PUSH2 0x141e
0x1197 DUP4
0x1198 CODECOPY
0x1199 ADD
0x119a SWAP1
0x119b JUMP
---
0x118d: JUMPDEST 
0x118e: V797 = 0x40
0x1190: V798 = M[0x40]
0x1191: V799 = 0x52
0x1194: V800 = 0x141e
0x1198: CODECOPY V798 0x141e 0x52
0x1199: V801 = ADD 0x52 V798
0x119b: JUMP 0x1c8
---
Entry stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1c8]
Stack pops: 1
Stack additions: [V801]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V801]

================================

Block 0x119c
[0x119c:0x13cf]
---
Predecessors: []
Successors: [0x13d0]
---
0x119c STOP
0x119d PUSH1 0x80
0x119f PUSH1 0x40
0x11a1 MSTORE
0x11a2 PUSH1 0x40
0x11a4 MLOAD
0x11a5 PUSH1 0x20
0x11a7 DUP1
0x11a8 PUSH2 0x281
0x11ab DUP4
0x11ac CODECOPY
0x11ad DUP2
0x11ae ADD
0x11af DUP1
0x11b0 PUSH1 0x40
0x11b2 MSTORE
0x11b3 DUP2
0x11b4 ADD
0x11b5 SWAP1
0x11b6 DUP1
0x11b7 DUP1
0x11b8 MLOAD
0x11b9 SWAP1
0x11ba PUSH1 0x20
0x11bc ADD
0x11bd SWAP1
0x11be SWAP3
0x11bf SWAP2
0x11c0 SWAP1
0x11c1 POP
0x11c2 POP
0x11c3 POP
0x11c4 PUSH32 0x40d8a50dcd0773556f525070e07bfcaad1961024d49a0eebb6cdc10471121eaf
0x11e5 CALLVALUE
0x11e6 PUSH1 0x40
0x11e8 MLOAD
0x11e9 DUP1
0x11ea DUP3
0x11eb DUP2
0x11ec MSTORE
0x11ed PUSH1 0x20
0x11ef ADD
0x11f0 SWAP2
0x11f1 POP
0x11f2 POP
0x11f3 PUSH1 0x40
0x11f5 MLOAD
0x11f6 DUP1
0x11f7 SWAP2
0x11f8 SUB
0x11f9 SWAP1
0x11fa LOG1
0x11fb DUP1
0x11fc PUSH1 0x0
0x11fe DUP1
0x11ff PUSH2 0x100
0x1202 EXP
0x1203 DUP2
0x1204 SLOAD
0x1205 DUP2
0x1206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121b MUL
0x121c NOT
0x121d AND
0x121e SWAP1
0x121f DUP4
0x1220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1235 AND
0x1236 MUL
0x1237 OR
0x1238 SWAP1
0x1239 SSTORE
0x123a POP
0x123b PUSH1 0x0
0x123d DUP1
0x123e SWAP1
0x123f SLOAD
0x1240 SWAP1
0x1241 PUSH2 0x100
0x1244 EXP
0x1245 SWAP1
0x1246 DIV
0x1247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125c AND
0x125d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1272 AND
0x1273 CALLVALUE
0x1274 PUSH1 0x40
0x1276 MLOAD
0x1277 DUP1
0x1278 DUP1
0x1279 PUSH32 0x6275795869642875696e743235362c75696e7432353629000000000000000000
0x129a DUP2
0x129b MSTORE
0x129c POP
0x129d PUSH1 0x17
0x129f ADD
0x12a0 SWAP1
0x12a1 POP
0x12a2 PUSH1 0x40
0x12a4 MLOAD
0x12a5 DUP1
0x12a6 SWAP2
0x12a7 SUB
0x12a8 SWAP1
0x12a9 SHA3
0x12aa PUSH1 0x0
0x12ac DUP1
0x12ad PUSH1 0x40
0x12af MLOAD
0x12b0 DUP1
0x12b1 DUP5
0x12b2 PUSH1 0x0
0x12b4 NOT
0x12b5 AND
0x12b6 PUSH1 0x0
0x12b8 NOT
0x12b9 AND
0x12ba DUP2
0x12bb MSTORE
0x12bc PUSH1 0x20
0x12be ADD
0x12bf DUP4
0x12c0 PUSH1 0xff
0x12c2 AND
0x12c3 DUP2
0x12c4 MSTORE
0x12c5 PUSH1 0x20
0x12c7 ADD
0x12c8 DUP3
0x12c9 PUSH1 0xff
0x12cb AND
0x12cc DUP2
0x12cd MSTORE
0x12ce PUSH1 0x20
0x12d0 ADD
0x12d1 SWAP4
0x12d2 POP
0x12d3 POP
0x12d4 POP
0x12d5 POP
0x12d6 PUSH1 0x0
0x12d8 PUSH1 0x40
0x12da MLOAD
0x12db DUP1
0x12dc DUP4
0x12dd SUB
0x12de DUP2
0x12df DUP6
0x12e0 DUP8
0x12e1 GAS
0x12e2 CALL
0x12e3 SWAP3
0x12e4 POP
0x12e5 POP
0x12e6 POP
0x12e7 POP
0x12e8 PUSH1 0x0
0x12ea DUP1
0x12eb SWAP1
0x12ec SLOAD
0x12ed SWAP1
0x12ee PUSH2 0x100
0x12f1 EXP
0x12f2 SWAP1
0x12f3 DIV
0x12f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1309 AND
0x130a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131f AND
0x1320 PUSH1 0x40
0x1322 MLOAD
0x1323 DUP1
0x1324 DUP1
0x1325 PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0x1346 DUP2
0x1347 MSTORE
0x1348 POP
0x1349 PUSH1 0xa
0x134b ADD
0x134c SWAP1
0x134d POP
0x134e PUSH1 0x40
0x1350 MLOAD
0x1351 DUP1
0x1352 SWAP2
0x1353 SUB
0x1354 SWAP1
0x1355 SHA3
0x1356 PUSH1 0x40
0x1358 MLOAD
0x1359 DUP1
0x135a DUP3
0x135b PUSH1 0x0
0x135d NOT
0x135e AND
0x135f PUSH1 0x0
0x1361 NOT
0x1362 AND
0x1363 DUP2
0x1364 MSTORE
0x1365 PUSH1 0x20
0x1367 ADD
0x1368 SWAP2
0x1369 POP
0x136a POP
0x136b PUSH1 0x0
0x136d PUSH1 0x40
0x136f MLOAD
0x1370 DUP1
0x1371 DUP4
0x1372 SUB
0x1373 DUP2
0x1374 PUSH1 0x0
0x1376 DUP7
0x1377 GAS
0x1378 CALL
0x1379 SWAP2
0x137a POP
0x137b POP
0x137c POP
0x137d CALLER
0x137e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1393 AND
0x1394 PUSH2 0x8fc
0x1397 ADDRESS
0x1398 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13ad AND
0x13ae BALANCE
0x13af SWAP1
0x13b0 DUP2
0x13b1 ISZERO
0x13b2 MUL
0x13b3 SWAP1
0x13b4 PUSH1 0x40
0x13b6 MLOAD
0x13b7 PUSH1 0x0
0x13b9 PUSH1 0x40
0x13bb MLOAD
0x13bc DUP1
0x13bd DUP4
0x13be SUB
0x13bf DUP2
0x13c0 DUP6
0x13c1 DUP9
0x13c2 DUP9
0x13c3 CALL
0x13c4 SWAP4
0x13c5 POP
0x13c6 POP
0x13c7 POP
0x13c8 POP
0x13c9 ISZERO
0x13ca DUP1
0x13cb ISZERO
0x13cc PUSH2 0x23c
0x13cf JUMPI
---
0x119c: STOP 
0x119d: V802 = 0x80
0x119f: V803 = 0x40
0x11a1: M[0x40] = 0x80
0x11a2: V804 = 0x40
0x11a4: V805 = M[0x40]
0x11a5: V806 = 0x20
0x11a8: V807 = 0x281
0x11ac: CODECOPY V805 0x281 0x20
0x11ae: V808 = ADD V805 0x20
0x11b0: V809 = 0x40
0x11b2: M[0x40] = V808
0x11b4: V810 = ADD V805 V808
0x11b8: V811 = M[V805]
0x11ba: V812 = 0x20
0x11bc: V813 = ADD 0x20 V805
0x11c4: V814 = 0x40d8a50dcd0773556f525070e07bfcaad1961024d49a0eebb6cdc10471121eaf
0x11e5: V815 = CALLVALUE
0x11e6: V816 = 0x40
0x11e8: V817 = M[0x40]
0x11ec: M[V817] = V815
0x11ed: V818 = 0x20
0x11ef: V819 = ADD 0x20 V817
0x11f3: V820 = 0x40
0x11f5: V821 = M[0x40]
0x11f8: V822 = SUB V819 V821
0x11fa: LOG V821 V822 0x40d8a50dcd0773556f525070e07bfcaad1961024d49a0eebb6cdc10471121eaf
0x11fc: V823 = 0x0
0x11ff: V824 = 0x100
0x1202: V825 = EXP 0x100 0x0
0x1204: V826 = S[0x0]
0x1206: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0x121b: V828 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x121c: V829 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x121d: V830 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V826
0x1220: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0x1235: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V811
0x1236: V833 = MUL V832 0x1
0x1237: V834 = OR V833 V830
0x1239: S[0x0] = V834
0x123b: V835 = 0x0
0x123f: V836 = S[0x0]
0x1241: V837 = 0x100
0x1244: V838 = EXP 0x100 0x0
0x1246: V839 = DIV V836 0x1
0x1247: V840 = 0xffffffffffffffffffffffffffffffffffffffff
0x125c: V841 = AND 0xffffffffffffffffffffffffffffffffffffffff V839
0x125d: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0x1272: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff V841
0x1273: V844 = CALLVALUE
0x1274: V845 = 0x40
0x1276: V846 = M[0x40]
0x1279: V847 = 0x6275795869642875696e743235362c75696e7432353629000000000000000000
0x129b: M[V846] = 0x6275795869642875696e743235362c75696e7432353629000000000000000000
0x129d: V848 = 0x17
0x129f: V849 = ADD 0x17 V846
0x12a2: V850 = 0x40
0x12a4: V851 = M[0x40]
0x12a7: V852 = SUB V849 V851
0x12a9: V853 = SHA3 V851 V852
0x12aa: V854 = 0x0
0x12ad: V855 = 0x40
0x12af: V856 = M[0x40]
0x12b2: V857 = 0x0
0x12b4: V858 = NOT 0x0
0x12b5: V859 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V853
0x12b6: V860 = 0x0
0x12b8: V861 = NOT 0x0
0x12b9: V862 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V859
0x12bb: M[V856] = V862
0x12bc: V863 = 0x20
0x12be: V864 = ADD 0x20 V856
0x12c0: V865 = 0xff
0x12c2: V866 = AND 0xff 0x0
0x12c4: M[V864] = 0x0
0x12c5: V867 = 0x20
0x12c7: V868 = ADD 0x20 V864
0x12c9: V869 = 0xff
0x12cb: V870 = AND 0xff 0x0
0x12cd: M[V868] = 0x0
0x12ce: V871 = 0x20
0x12d0: V872 = ADD 0x20 V868
0x12d6: V873 = 0x0
0x12d8: V874 = 0x40
0x12da: V875 = M[0x40]
0x12dd: V876 = SUB V872 V875
0x12e1: V877 = GAS
0x12e2: V878 = CALL V877 V843 V844 V875 V876 V875 0x0
0x12e8: V879 = 0x0
0x12ec: V880 = S[0x0]
0x12ee: V881 = 0x100
0x12f1: V882 = EXP 0x100 0x0
0x12f3: V883 = DIV V880 0x1
0x12f4: V884 = 0xffffffffffffffffffffffffffffffffffffffff
0x1309: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0x130a: V886 = 0xffffffffffffffffffffffffffffffffffffffff
0x131f: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0x1320: V888 = 0x40
0x1322: V889 = M[0x40]
0x1325: V890 = 0x7769746864726177282900000000000000000000000000000000000000000000
0x1347: M[V889] = 0x7769746864726177282900000000000000000000000000000000000000000000
0x1349: V891 = 0xa
0x134b: V892 = ADD 0xa V889
0x134e: V893 = 0x40
0x1350: V894 = M[0x40]
0x1353: V895 = SUB V892 V894
0x1355: V896 = SHA3 V894 V895
0x1356: V897 = 0x40
0x1358: V898 = M[0x40]
0x135b: V899 = 0x0
0x135d: V900 = NOT 0x0
0x135e: V901 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V896
0x135f: V902 = 0x0
0x1361: V903 = NOT 0x0
0x1362: V904 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V901
0x1364: M[V898] = V904
0x1365: V905 = 0x20
0x1367: V906 = ADD 0x20 V898
0x136b: V907 = 0x0
0x136d: V908 = 0x40
0x136f: V909 = M[0x40]
0x1372: V910 = SUB V906 V909
0x1374: V911 = 0x0
0x1377: V912 = GAS
0x1378: V913 = CALL V912 V887 0x0 V909 V910 V909 0x0
0x137d: V914 = CALLER
0x137e: V915 = 0xffffffffffffffffffffffffffffffffffffffff
0x1393: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0x1394: V917 = 0x8fc
0x1397: V918 = ADDRESS
0x1398: V919 = 0xffffffffffffffffffffffffffffffffffffffff
0x13ad: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0x13ae: V921 = BALANCE V920
0x13b1: V922 = ISZERO V921
0x13b2: V923 = MUL V922 0x8fc
0x13b4: V924 = 0x40
0x13b6: V925 = M[0x40]
0x13b7: V926 = 0x0
0x13b9: V927 = 0x40
0x13bb: V928 = M[0x40]
0x13be: V929 = SUB V925 V928
0x13c3: V930 = CALL V923 V916 V921 V928 V929 V928 0x0
0x13c9: V931 = ISZERO V930
0x13cb: V932 = ISZERO V931
0x13cc: V933 = 0x23c
0x13cf: THROWI V932
---
Entry stack: []
Stack pops: 0
Stack additions: [V931, V811]
Exit stack: []

================================

Block 0x13d0
[0x13d0:0x14a3]
---
Predecessors: [0x119c]
Successors: []
---
0x13d0 RETURNDATASIZE
0x13d1 PUSH1 0x0
0x13d3 DUP1
0x13d4 RETURNDATACOPY
0x13d5 RETURNDATASIZE
0x13d6 PUSH1 0x0
0x13d8 REVERT
0x13d9 JUMPDEST
0x13da POP
0x13db POP
0x13dc PUSH1 0x35
0x13de DUP1
0x13df PUSH2 0x24c
0x13e2 PUSH1 0x0
0x13e4 CODECOPY
0x13e5 PUSH1 0x0
0x13e7 RETURN
0x13e8 STOP
0x13e9 PUSH1 0x80
0x13eb PUSH1 0x40
0x13ed MSTORE
0x13ee PUSH1 0x0
0x13f0 DUP1
0x13f1 REVERT
0x13f2 STOP
0x13f3 LOG1
0x13f4 PUSH6 0x627a7a723058
0x13fb SHA3
0x13fc MISSING 0xaa
0x13fd MISSING 0xd2
0x13fe MISSING 0xcf
0x13ff SMOD
0x1400 SWAP5
0x1401 MISSING 0xe0
0x1402 MISSING 0x23
0x1403 AND
0x1404 MISSING 0x4a
0x1405 PUSH4 0x304b856f
0x140a MISSING 0x5e
0x140b ORIGIN
0x140c MUL
0x140d MISSING 0xa7
0x140e DUP12
0x140f REVERT
0x1410 MISSING 0xab
0x1411 MISSING 0x2e
0x1412 PUSH28 0xa5653d34fd2e2320fc00296080604052348015600f57600080fd5b50
0x142f PUSH1 0x35
0x1431 DUP1
0x1432 PUSH1 0x1d
0x1434 PUSH1 0x0
0x1436 CODECOPY
0x1437 PUSH1 0x0
0x1439 RETURN
0x143a STOP
0x143b PUSH1 0x80
0x143d PUSH1 0x40
0x143f MSTORE
0x1440 PUSH1 0x0
0x1442 DUP1
0x1443 REVERT
0x1444 STOP
0x1445 LOG1
0x1446 PUSH6 0x627a7a723058
0x144d SHA3
0x144e MISSING 0xbb
0x144f PUSH31 0xc9e9ec6595899cc280f75de0bbf0d298da97f548a991887238951eb9feb600
0x146f MISSING 0x29
0x1470 LOG1
0x1471 PUSH6 0x627a7a723058
0x1478 SHA3
0x1479 SWAP5
0x147a ADD
0x147b DUP11
0x147c MISSING 0x2c
0x147d MISSING 0xe8
0x147e DELEGATECALL
0x147f SWAP6
0x1480 MISSING 0xeb
0x1481 MISSING 0xdc
0x1482 SWAP8
0x1483 MISSING 0x2d
0x1484 PUSH5 0x2806a4bbe5
0x148a MISSING 0xa8
0x148b PUSH1 0xc6
0x148d DUP13
0x148e MISSING 0xba
0x148f MISSING 0xac
0x1490 JUMPDEST
0x1491 PUSH18 0xec67c4a0ee6c1f0029
---
0x13d0: V934 = RETURNDATASIZE
0x13d1: V935 = 0x0
0x13d4: RETURNDATACOPY 0x0 0x0 V934
0x13d5: V936 = RETURNDATASIZE
0x13d6: V937 = 0x0
0x13d8: REVERT 0x0 V936
0x13d9: JUMPDEST 
0x13dc: V938 = 0x35
0x13df: V939 = 0x24c
0x13e2: V940 = 0x0
0x13e4: CODECOPY 0x0 0x24c 0x35
0x13e5: V941 = 0x0
0x13e7: RETURN 0x0 0x35
0x13e8: STOP 
0x13e9: V942 = 0x80
0x13eb: V943 = 0x40
0x13ed: M[0x40] = 0x80
0x13ee: V944 = 0x0
0x13f1: REVERT 0x0 0x0
0x13f2: STOP 
0x13f3: LOG S0 S1 S2
0x13f4: V945 = 0x627a7a723058
0x13fb: V946 = SHA3 0x627a7a723058 S3
0x13fc: MISSING 0xaa
0x13fd: MISSING 0xd2
0x13fe: MISSING 0xcf
0x13ff: V947 = SMOD S0 S1
0x1401: MISSING 0xe0
0x1402: MISSING 0x23
0x1403: V948 = AND S0 S1
0x1404: MISSING 0x4a
0x1405: V949 = 0x304b856f
0x140a: MISSING 0x5e
0x140b: V950 = ORIGIN
0x140c: V951 = MUL V950 S0
0x140d: MISSING 0xa7
0x140f: REVERT S11 S0
0x1410: MISSING 0xab
0x1411: MISSING 0x2e
0x1412: V952 = 0xa5653d34fd2e2320fc00296080604052348015600f57600080fd5b50
0x142f: V953 = 0x35
0x1432: V954 = 0x1d
0x1434: V955 = 0x0
0x1436: CODECOPY 0x0 0x1d 0x35
0x1437: V956 = 0x0
0x1439: RETURN 0x0 0x35
0x143a: STOP 
0x143b: V957 = 0x80
0x143d: V958 = 0x40
0x143f: M[0x40] = 0x80
0x1440: V959 = 0x0
0x1443: REVERT 0x0 0x0
0x1444: STOP 
0x1445: LOG S0 S1 S2
0x1446: V960 = 0x627a7a723058
0x144d: V961 = SHA3 0x627a7a723058 S3
0x144e: MISSING 0xbb
0x144f: V962 = 0xc9e9ec6595899cc280f75de0bbf0d298da97f548a991887238951eb9feb600
0x146f: MISSING 0x29
0x1470: LOG S0 S1 S2
0x1471: V963 = 0x627a7a723058
0x1478: V964 = SHA3 0x627a7a723058 S3
0x147a: V965 = ADD S8 S4
0x147c: MISSING 0x2c
0x147d: MISSING 0xe8
0x147e: V966 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x1480: MISSING 0xeb
0x1481: MISSING 0xdc
0x1483: MISSING 0x2d
0x1484: V967 = 0x2806a4bbe5
0x148a: MISSING 0xa8
0x148b: V968 = 0xc6
0x148e: MISSING 0xba
0x148f: MISSING 0xac
0x1490: JUMPDEST 
0x1491: V969 = 0xec67c4a0ee6c1f0029
---
Entry stack: [V811, V931]
Stack pops: 0
Stack additions: [V946, S6, S2, S3, S4, S5, V947, V948, 0x304b856f, V951, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xa5653d34fd2e2320fc00296080604052348015600f57600080fd5b50, V961, 0xc9e9ec6595899cc280f75de0bbf0d298da97f548a991887238951eb9feb600, S14, V965, S5, S6, S7, V964, S9, S10, S11, S12, S13, S14, S11, S6, S7, S8, S9, S10, V966, S8, S1, S2, S3, S4, S5, S6, S7, S0, 0x2806a4bbe5, S11, 0xc6, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xec67c4a0ee6c1f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xba2ee65c
Entry block: 0x46
Exit block: 0x4e
Body: 0x46, 0x4e, 0x50, 0xac, 0xb0, 0xb9, 0xc3, 0xcc, 0xd7, 0xdd, 0x108, 0x150, 0x159, 0x1b1, 0x1ba, 0x1c0, 0x1c8, 0x1db, 0x1e4, 0x1fb, 0x24f, 0x258, 0x296, 0x29b, 0x2a6, 0x44e, 0x459, 0x600, 0x60b, 0x7e3, 0x7ef, 0x9c8, 0x9d5, 0xbaf, 0xd87, 0xd8d, 0xe03, 0xe0e, 0xe28, 0xe61, 0xe62, 0xed6, 0xee1, 0xefb, 0xf34, 0xf35, 0xf49, 0xf57, 0xf65, 0xf73, 0xf81, 0xfb0, 0xfbb, 0xfd5, 0x108a, 0x108e, 0x1099, 0x10a2, 0x10b4, 0x10b8, 0x10d6, 0x10d7, 0x10e2, 0x10ea, 0x10ef, 0x10f5, 0x1107, 0x1174, 0x117d, 0x118d

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

