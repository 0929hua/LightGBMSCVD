Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x77]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13af4035
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x77
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13af4035
0x1a: V12 = EQ V10 0x13af4035
0x1b: V13 = 0x77
0x1e: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xac]
---
0x1f DUP1
0x20 PUSH4 0x35c1d349
0x25 EQ
0x26 PUSH2 0xac
0x29 JUMPI
---
0x20: V14 = 0x35c1d349
0x25: V15 = EQ 0x35c1d349 V10
0x26: V16 = 0xac
0x29: JUMPI 0xac V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xfb]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xfb
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xfb
0x34: JUMPI 0xfb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x10d]
---
0x35 DUP1
0x36 PUSH4 0x9003adfe
0x3b EQ
0x3c PUSH2 0x10d
0x3f JUMPI
---
0x36: V20 = 0x9003adfe
0x3b: V21 = EQ 0x9003adfe V10
0x3c: V22 = 0x10d
0x3f: JUMPI 0x10d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x116]
---
0x40 DUP1
0x41 PUSH4 0xa60f3588
0x46 EQ
0x47 PUSH2 0x116
0x4a JUMPI
---
0x41: V23 = 0xa60f3588
0x46: V24 = EQ 0xa60f3588 V10
0x47: V25 = 0x116
0x4a: JUMPI 0x116 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x11f]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0x11f
0x55 JUMPI
---
0x4c: V26 = 0xb69ef8a8
0x51: V27 = EQ 0xb69ef8a8 V10
0x52: V28 = 0x11f
0x55: JUMPI 0x11f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x128]
---
0x56 DUP1
0x57 PUSH4 0xc8796572
0x5c EQ
0x5d PUSH2 0x128
0x60 JUMPI
---
0x57: V29 = 0xc8796572
0x5c: V30 = EQ 0xc8796572 V10
0x5d: V31 = 0x128
0x60: JUMPI 0x128 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x152]
---
0x61 DUP1
0x62 PUSH4 0xe97dcb62
0x67 EQ
0x68 PUSH2 0x152
0x6b JUMPI
---
0x62: V32 = 0xe97dcb62
0x67: V33 = EQ 0xe97dcb62 V10
0x68: V34 = 0x152
0x6b: JUMPI 0x152 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x0, 0x61]
Successors: [0x156]
---
0x6c JUMPDEST
0x6d PUSH2 0x188
0x70 PUSH2 0x150
0x73 PUSH2 0x156
0x76 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x188
0x70: V36 = 0x150
0x73: V37 = 0x156
0x76: JUMP 0x156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x188, 0x150]
Exit stack: [V10, 0x188, 0x150]

================================

Block 0x77
[0x77:0x96]
---
Predecessors: [0xb]
Successors: [0x97, 0xa9]
---
0x77 JUMPDEST
0x78 PUSH2 0x188
0x7b PUSH1 0x4
0x7d CALLDATALOAD
0x7e PUSH1 0x4
0x80 SLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a DUP2
0x8b AND
0x8c CALLER
0x8d SWAP2
0x8e SWAP1
0x8f SWAP2
0x90 AND
0x91 EQ
0x92 ISZERO
0x93 PUSH2 0xa9
0x96 JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x188
0x7b: V39 = 0x4
0x7d: V40 = CALLDATALOAD 0x4
0x7e: V41 = 0x4
0x80: V42 = S[0x4]
0x81: V43 = 0x1
0x83: V44 = 0xa0
0x85: V45 = 0x2
0x87: V46 = EXP 0x2 0xa0
0x88: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x8c: V49 = CALLER
0x90: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x91: V51 = EQ V50 V48
0x92: V52 = ISZERO V51
0x93: V53 = 0xa9
0x96: JUMPI 0xa9 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x188, V40]
Exit stack: [V10, 0x188, V40]

================================

Block 0x97
[0x97:0xa8]
---
Predecessors: [0x77]
Successors: [0xa9]
---
0x97 PUSH1 0x4
0x99 DUP1
0x9a SLOAD
0x9b PUSH1 0x1
0x9d PUSH1 0xa0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 SUB
0xa3 NOT
0xa4 AND
0xa5 DUP3
0xa6 OR
0xa7 SWAP1
0xa8 SSTORE
---
0x97: V54 = 0x4
0x9a: V55 = S[0x4]
0x9b: V56 = 0x1
0x9d: V57 = 0xa0
0x9f: V58 = 0x2
0xa1: V59 = EXP 0x2 0xa0
0xa2: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V61 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V62 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xa6: V63 = OR V40 V62
0xa8: S[0x4] = V63
---
Entry stack: [V10, 0x188, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x188, V40]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0x77, 0x97]
Successors: [0x188]
---
0xa9 JUMPDEST
0xaa POP
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x188
---
Entry stack: [V10, 0x188, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0x1f]
Successors: [0xc0]
---
0xac JUMPDEST
0xad PUSH2 0x18a
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 SLOAD
0xb7 DUP3
0xb8 SWAP1
0xb9 DUP2
0xba LT
0xbb ISZERO
0xbc PUSH2 0x2
0xbf JUMPI
---
0xac: JUMPDEST 
0xad: V64 = 0x18a
0xb0: V65 = 0x4
0xb2: V66 = CALLDATALOAD 0x4
0xb3: V67 = 0x0
0xb6: V68 = S[0x0]
0xba: V69 = LT V66 V68
0xbb: V70 = ISZERO V69
0xbc: V71 = 0x2
0xbf: THROWI V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18a, V66, 0x0, V66]
Exit stack: [V10, 0x18a, V66, 0x0, V66]

================================

Block 0xc0
[0xc0:0xfa]
---
Predecessors: [0xac]
Successors: [0x18a]
---
0xc0 POP
0xc1 DUP1
0xc2 MSTORE
0xc3 PUSH1 0x2
0xc5 MUL
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 MLOAD
0xca PUSH1 0x20
0xcc PUSH2 0x465
0xcf DUP4
0xd0 CODECOPY
0xd1 DUP2
0xd2 MLOAD
0xd3 SWAP2
0xd4 MSTORE
0xd5 DUP2
0xd6 ADD
0xd7 SLOAD
0xd8 PUSH1 0x0
0xda DUP1
0xdb MLOAD
0xdc PUSH1 0x20
0xde PUSH2 0x485
0xe1 DUP4
0xe2 CODECOPY
0xe3 DUP2
0xe4 MLOAD
0xe5 SWAP2
0xe6 MSTORE
0xe7 SWAP2
0xe8 SWAP1
0xe9 SWAP2
0xea ADD
0xeb SLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 SWAP2
0xf5 SWAP1
0xf6 SWAP2
0xf7 AND
0xf8 SWAP1
0xf9 DUP3
0xfa JUMP
---
0xc2: M[0x0] = 0x0
0xc3: V72 = 0x2
0xc5: V73 = MUL 0x2 V66
0xc6: V74 = 0x0
0xc9: V75 = M[0x0]
0xca: V76 = 0x20
0xcc: V77 = 0x465
0xd0: CODECOPY 0x0 0x465 0x20
0xd2: V78 = M[0x0]
0xd4: M[0x0] = V75
0xd6: V79 = ADD V73 V78
0xd7: V80 = S[V79]
0xd8: V81 = 0x0
0xdb: V82 = M[0x0]
0xdc: V83 = 0x20
0xde: V84 = 0x485
0xe2: CODECOPY 0x0 0x485 0x20
0xe4: V85 = M[0x0]
0xe6: M[0x0] = V82
0xea: V86 = ADD V85 V73
0xeb: V87 = S[V86]
0xec: V88 = 0x1
0xee: V89 = 0xa0
0xf0: V90 = 0x2
0xf2: V91 = EXP 0x2 0xa0
0xf3: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xfa: JUMP 0x18a
---
Entry stack: [V10, 0x18a, V66, 0x0, V66]
Stack pops: 4
Stack additions: [S3, V93, V87]
Exit stack: [V10, 0x18a, V93, V87]

================================

Block 0xfb
[0xfb:0x10c]
---
Predecessors: [0x2a]
Successors: [0x1b0]
---
0xfb JUMPDEST
0xfc PUSH2 0x1b0
0xff PUSH1 0x4
0x101 SLOAD
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a AND
0x10b DUP2
0x10c JUMP
---
0xfb: JUMPDEST 
0xfc: V94 = 0x1b0
0xff: V95 = 0x4
0x101: V96 = S[0x4]
0x102: V97 = 0x1
0x104: V98 = 0xa0
0x106: V99 = 0x2
0x108: V100 = EXP 0x2 0xa0
0x109: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x10c: JUMP 0x1b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b0, V102]
Exit stack: [V10, 0x1b0, V102]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0x35]
Successors: [0x1cd]
---
0x10d JUMPDEST
0x10e PUSH2 0x1cd
0x111 PUSH1 0x2
0x113 SLOAD
0x114 DUP2
0x115 JUMP
---
0x10d: JUMPDEST 
0x10e: V103 = 0x1cd
0x111: V104 = 0x2
0x113: V105 = S[0x2]
0x115: JUMP 0x1cd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cd, V105]
Exit stack: [V10, 0x1cd, V105]

================================

Block 0x116
[0x116:0x11e]
---
Predecessors: [0x40]
Successors: [0x1cd]
---
0x116 JUMPDEST
0x117 PUSH2 0x1cd
0x11a PUSH1 0x1
0x11c SLOAD
0x11d DUP2
0x11e JUMP
---
0x116: JUMPDEST 
0x117: V106 = 0x1cd
0x11a: V107 = 0x1
0x11c: V108 = S[0x1]
0x11e: JUMP 0x1cd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cd, V108]
Exit stack: [V10, 0x1cd, V108]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x4b]
Successors: [0x1cd]
---
0x11f JUMPDEST
0x120 PUSH2 0x1cd
0x123 PUSH1 0x3
0x125 SLOAD
0x126 DUP2
0x127 JUMP
---
0x11f: JUMPDEST 
0x120: V109 = 0x1cd
0x123: V110 = 0x3
0x125: V111 = S[0x3]
0x127: JUMP 0x1cd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1cd, V111]
Exit stack: [V10, 0x1cd, V111]

================================

Block 0x128
[0x128:0x144]
---
Predecessors: [0x56]
Successors: [0x145, 0x150]
---
0x128 JUMPDEST
0x129 PUSH2 0x188
0x12c PUSH1 0x4
0x12e SLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP1
0x138 DUP2
0x139 AND
0x13a CALLER
0x13b SWAP2
0x13c SWAP1
0x13d SWAP2
0x13e AND
0x13f EQ
0x140 ISZERO
0x141 PUSH2 0x150
0x144 JUMPI
---
0x128: JUMPDEST 
0x129: V112 = 0x188
0x12c: V113 = 0x4
0x12e: V114 = S[0x4]
0x12f: V115 = 0x1
0x131: V116 = 0xa0
0x133: V117 = 0x2
0x135: V118 = EXP 0x2 0xa0
0x136: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x13a: V121 = CALLER
0x13e: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V123 = EQ V122 V120
0x140: V124 = ISZERO V123
0x141: V125 = 0x150
0x144: JUMPI 0x150 V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x188]
Exit stack: [V10, 0x188]

================================

Block 0x145
[0x145:0x14f]
---
Predecessors: [0x128]
Successors: [0x150, 0x1df]
---
0x145 PUSH1 0x2
0x147 SLOAD
0x148 PUSH1 0x0
0x14a EQ
0x14b ISZERO
0x14c PUSH2 0x1df
0x14f JUMPI
---
0x145: V126 = 0x2
0x147: V127 = S[0x2]
0x148: V128 = 0x0
0x14a: V129 = EQ 0x0 V127
0x14b: V130 = ISZERO V129
0x14c: V131 = 0x1df
0x14f: JUMPI 0x1df V130
---
Entry stack: [V10, 0x188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x188]

================================

Block 0x150
[0x150:0x151]
---
Predecessors: [0x128, 0x145, 0x461]
Successors: [0x188]
---
0x150 JUMPDEST
0x151 JUMP
---
0x150: JUMPDEST 
0x151: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x61]
Successors: [0x156]
---
0x152 JUMPDEST
0x153 PUSH2 0x188
---
0x152: JUMPDEST 
0x153: V132 = 0x188
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x188]
Exit stack: [V10, 0x188]

================================

Block 0x156
[0x156:0x163]
---
Predecessors: [0x6c, 0x152]
Successors: [0x164, 0x20a]
---
0x156 JUMPDEST
0x157 PUSH1 0x0
0x159 PUSH1 0x0
0x15b PUSH1 0x0
0x15d CALLVALUE
0x15e LT
0x15f ISZERO
0x160 PUSH2 0x20a
0x163 JUMPI
---
0x156: JUMPDEST 
0x157: V133 = 0x0
0x159: V134 = 0x0
0x15b: V135 = 0x0
0x15d: V136 = CALLVALUE
0x15e: V137 = LT V136 0x0
0x15f: V138 = ISZERO V137
0x160: V139 = 0x20a
0x163: JUMPI 0x20a V138
---
Entry stack: [V10, S1, {0x150, 0x188}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, S1, {0x150, 0x188}, 0x0, 0x0]

================================

Block 0x164
[0x164:0x187]
---
Predecessors: [0x156]
Successors: [0x461]
---
0x164 PUSH1 0x40
0x166 MLOAD
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f CALLER
0x170 AND
0x171 SWAP1
0x172 DUP3
0x173 SWAP1
0x174 CALLVALUE
0x175 SWAP1
0x176 DUP3
0x177 DUP2
0x178 DUP2
0x179 DUP2
0x17a DUP6
0x17b DUP9
0x17c DUP4
0x17d CALL
0x17e SWAP4
0x17f POP
0x180 POP
0x181 POP
0x182 POP
0x183 POP
0x184 PUSH2 0x461
0x187 JUMP
---
0x164: V140 = 0x40
0x166: V141 = M[0x40]
0x167: V142 = 0x1
0x169: V143 = 0xa0
0x16b: V144 = 0x2
0x16d: V145 = EXP 0x2 0xa0
0x16e: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V147 = CALLER
0x170: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x174: V149 = CALLVALUE
0x17d: V150 = CALL 0x0 V148 V149 V141 0x0 V141 0x0
0x184: V151 = 0x461
0x187: JUMP 0x461
---
Entry stack: [V10, S3, {0x150, 0x188}, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S3, {0x150, 0x188}, 0x0, 0x0]

================================

Block 0x188
[0x188:0x189]
---
Predecessors: [0xa9, 0x150, 0x1df, 0x461]
Successors: []
---
0x188 JUMPDEST
0x189 STOP
---
0x188: JUMPDEST 
0x189: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x18a
[0x18a:0x1af]
---
Predecessors: [0xc0]
Successors: []
---
0x18a JUMPDEST
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f DUP4
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 AND
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x20
0x19d ADD
0x19e DUP3
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 SWAP3
0x1a5 POP
0x1a6 POP
0x1a7 POP
0x1a8 PUSH1 0x40
0x1aa MLOAD
0x1ab DUP1
0x1ac SWAP2
0x1ad SUB
0x1ae SWAP1
0x1af RETURN
---
0x18a: JUMPDEST 
0x18b: V152 = 0x40
0x18d: V153 = M[0x40]
0x190: V154 = 0x1
0x192: V155 = 0xa0
0x194: V156 = 0x2
0x196: V157 = EXP 0x2 0xa0
0x197: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x19a: M[V153] = V159
0x19b: V160 = 0x20
0x19d: V161 = ADD 0x20 V153
0x1a0: M[V161] = V87
0x1a1: V162 = 0x20
0x1a3: V163 = ADD 0x20 V161
0x1a8: V164 = 0x40
0x1aa: V165 = M[0x40]
0x1ad: V166 = SUB V163 V165
0x1af: RETURN V165 V166
---
Entry stack: [V10, 0x18a, V93, V87]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x18a]

================================

Block 0x1b0
[0x1b0:0x1cc]
---
Predecessors: [0xfb]
Successors: []
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x40
0x1b3 DUP1
0x1b4 MLOAD
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd SWAP3
0x1be SWAP1
0x1bf SWAP3
0x1c0 AND
0x1c1 DUP3
0x1c2 MSTORE
0x1c3 MLOAD
0x1c4 SWAP1
0x1c5 DUP2
0x1c6 SWAP1
0x1c7 SUB
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb SWAP1
0x1cc RETURN
---
0x1b0: JUMPDEST 
0x1b1: V167 = 0x40
0x1b4: V168 = M[0x40]
0x1b5: V169 = 0x1
0x1b7: V170 = 0xa0
0x1b9: V171 = 0x2
0x1bb: V172 = EXP 0x2 0xa0
0x1bc: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c0: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c2: M[V168] = V174
0x1c3: V175 = M[0x40]
0x1c7: V176 = SUB V168 V175
0x1c8: V177 = 0x20
0x1ca: V178 = ADD 0x20 V176
0x1cc: RETURN V175 V178
---
Entry stack: [V10, 0x1b0, V102]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b0]

================================

Block 0x1cd
[0x1cd:0x1de]
---
Predecessors: [0x10d, 0x116, 0x11f]
Successors: []
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 SWAP2
0x1d3 DUP3
0x1d4 MSTORE
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 SWAP1
0x1d9 SUB
0x1da PUSH1 0x20
0x1dc ADD
0x1dd SWAP1
0x1de RETURN
---
0x1cd: JUMPDEST 
0x1ce: V179 = 0x40
0x1d1: V180 = M[0x40]
0x1d4: M[V180] = S0
0x1d5: V181 = M[0x40]
0x1d9: V182 = SUB V180 V181
0x1da: V183 = 0x20
0x1dc: V184 = ADD 0x20 V182
0x1de: RETURN V181 V184
---
Entry stack: [V10, 0x1cd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1cd]

================================

Block 0x1df
[0x1df:0x209]
---
Predecessors: [0x145]
Successors: [0x188]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x4
0x1e2 SLOAD
0x1e3 PUSH1 0x2
0x1e5 SLOAD
0x1e6 PUSH1 0x40
0x1e8 MLOAD
0x1e9 PUSH1 0x1
0x1eb PUSH1 0xa0
0x1ed PUSH1 0x2
0x1ef EXP
0x1f0 SUB
0x1f1 SWAP3
0x1f2 SWAP1
0x1f3 SWAP3
0x1f4 AND
0x1f5 SWAP2
0x1f6 PUSH1 0x0
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa DUP3
0x1fb DUP2
0x1fc DUP2
0x1fd DUP2
0x1fe DUP6
0x1ff DUP9
0x200 DUP4
0x201 CALL
0x202 POP
0x203 POP
0x204 POP
0x205 PUSH1 0x2
0x207 SSTORE
0x208 POP
0x209 JUMP
---
0x1df: JUMPDEST 
0x1e0: V185 = 0x4
0x1e2: V186 = S[0x4]
0x1e3: V187 = 0x2
0x1e5: V188 = S[0x2]
0x1e6: V189 = 0x40
0x1e8: V190 = M[0x40]
0x1e9: V191 = 0x1
0x1eb: V192 = 0xa0
0x1ed: V193 = 0x2
0x1ef: V194 = EXP 0x2 0xa0
0x1f0: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x1f6: V197 = 0x0
0x201: V198 = CALL 0x0 V196 V188 V190 0x0 V190 0x0
0x205: V199 = 0x2
0x207: S[0x2] = 0x0
0x209: JUMP 0x188
---
Entry stack: [V10, 0x188]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x20a
[0x20a:0x21a]
---
Predecessors: [0x156]
Successors: [0x21b, 0x246]
---
0x20a JUMPDEST
0x20b PUSH8 0x8ac7230489e80000
0x214 CALLVALUE
0x215 GT
0x216 ISZERO
0x217 PUSH2 0x246
0x21a JUMPI
---
0x20a: JUMPDEST 
0x20b: V200 = 0x8ac7230489e80000
0x214: V201 = CALLVALUE
0x215: V202 = GT V201 0x8ac7230489e80000
0x216: V203 = ISZERO V202
0x217: V204 = 0x246
0x21a: JUMPI 0x246 V203
---
Entry stack: [V10, S3, {0x150, 0x188}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x150, 0x188}, 0x0, 0x0]

================================

Block 0x21b
[0x21b:0x245]
---
Predecessors: [0x20a]
Successors: [0x461]
---
0x21b PUSH1 0x40
0x21d MLOAD
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 CALLER
0x227 AND
0x228 SWAP1
0x229 PUSH1 0x0
0x22b SWAP1
0x22c PUSH1 0x64
0x22e PUSH1 0x5f
0x230 CALLVALUE
0x231 MUL
0x232 DIV
0x233 SWAP1
0x234 DUP3
0x235 DUP2
0x236 DUP2
0x237 DUP2
0x238 DUP6
0x239 DUP9
0x23a DUP4
0x23b CALL
0x23c SWAP4
0x23d POP
0x23e POP
0x23f POP
0x240 POP
0x241 POP
0x242 PUSH2 0x461
0x245 JUMP
---
0x21b: V205 = 0x40
0x21d: V206 = M[0x40]
0x21e: V207 = 0x1
0x220: V208 = 0xa0
0x222: V209 = 0x2
0x224: V210 = EXP 0x2 0xa0
0x225: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V212 = CALLER
0x227: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x229: V214 = 0x0
0x22c: V215 = 0x64
0x22e: V216 = 0x5f
0x230: V217 = CALLVALUE
0x231: V218 = MUL V217 0x5f
0x232: V219 = DIV V218 0x64
0x23b: V220 = CALL 0x0 V213 V219 V206 0x0 V206 0x0
0x242: V221 = 0x461
0x245: JUMP 0x461
---
Entry stack: [V10, S3, {0x150, 0x188}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x150, 0x188}, 0x0, 0x0]

================================

Block 0x246
[0x246:0x260]
---
Predecessors: [0x20a]
Successors: [0x261, 0x2a1]
---
0x246 JUMPDEST
0x247 PUSH1 0x0
0x249 DUP1
0x24a SLOAD
0x24b PUSH1 0x1
0x24d DUP2
0x24e ADD
0x24f DUP1
0x250 DUP4
0x251 SSTORE
0x252 SWAP1
0x253 SWAP4
0x254 POP
0x255 SWAP1
0x256 DUP2
0x257 DUP5
0x258 DUP1
0x259 ISZERO
0x25a DUP3
0x25b SWAP1
0x25c GT
0x25d PUSH2 0x2a1
0x260 JUMPI
---
0x246: JUMPDEST 
0x247: V222 = 0x0
0x24a: V223 = S[0x0]
0x24b: V224 = 0x1
0x24e: V225 = ADD V223 0x1
0x251: S[0x0] = V225
0x259: V226 = ISZERO V223
0x25c: V227 = GT V226 V225
0x25d: V228 = 0x2a1
0x260: JUMPI 0x2a1 V227
---
Entry stack: [V10, S3, {0x150, 0x188}, 0x0, 0x0]
Stack pops: 2
Stack additions: [V223, S0, V225, 0x0, V225, V223]
Exit stack: [V10, S3, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, V223]

================================

Block 0x261
[0x261:0x27a]
---
Predecessors: [0x246]
Successors: [0x27b]
---
0x261 PUSH1 0x2
0x263 MUL
0x264 DUP2
0x265 PUSH1 0x2
0x267 MUL
0x268 DUP4
0x269 PUSH1 0x0
0x26b MSTORE
0x26c PUSH1 0x20
0x26e PUSH1 0x0
0x270 SHA3
0x271 SWAP2
0x272 DUP3
0x273 ADD
0x274 SWAP2
0x275 ADD
0x276 PUSH2 0x2a1
0x279 SWAP2
0x27a SWAP1
---
0x261: V229 = 0x2
0x263: V230 = MUL 0x2 V223
0x265: V231 = 0x2
0x267: V232 = MUL 0x2 V225
0x269: V233 = 0x0
0x26b: M[0x0] = 0x0
0x26c: V234 = 0x20
0x26e: V235 = 0x0
0x270: V236 = SHA3 0x0 0x20
0x273: V237 = ADD V236 V230
0x275: V238 = ADD V236 V232
0x276: V239 = 0x2a1
---
Entry stack: [V10, S7, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, V223]
Stack pops: 3
Stack additions: [S2, S1, 0x2a1, V237, V238]
Exit stack: [V10, S7, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, 0x2a1, V237, V238]

================================

Block 0x27b
[0x27b:0x283]
---
Predecessors: [0x261, 0x284]
Successors: [0x284, 0x327]
---
0x27b JUMPDEST
0x27c DUP1
0x27d DUP3
0x27e GT
0x27f ISZERO
0x280 PUSH2 0x327
0x283 JUMPI
---
0x27b: JUMPDEST 
0x27e: V240 = GT V237 S0
0x27f: V241 = ISZERO V240
0x280: V242 = 0x327
0x283: JUMPI 0x327 V241
---
Entry stack: [V10, S9, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, 0x2a1, V237, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S9, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, 0x2a1, V237, S0]

================================

Block 0x284
[0x284:0x2a0]
---
Predecessors: [0x27b]
Successors: [0x27b]
---
0x284 DUP1
0x285 SLOAD
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e NOT
0x28f AND
0x290 DUP2
0x291 SSTORE
0x292 PUSH1 0x0
0x294 PUSH1 0x1
0x296 SWAP2
0x297 SWAP1
0x298 SWAP2
0x299 ADD
0x29a SWAP1
0x29b DUP2
0x29c SSTORE
0x29d PUSH2 0x27b
0x2a0 JUMP
---
0x285: V243 = S[S0]
0x286: V244 = 0x1
0x288: V245 = 0xa0
0x28a: V246 = 0x2
0x28c: V247 = EXP 0x2 0xa0
0x28d: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V249 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28f: V250 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V243
0x291: S[S0] = V250
0x292: V251 = 0x0
0x294: V252 = 0x1
0x299: V253 = ADD 0x1 S0
0x29c: S[V253] = 0x0
0x29d: V254 = 0x27b
0x2a0: JUMP 0x27b
---
Entry stack: [V10, S9, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, 0x2a1, V237, S0]
Stack pops: 1
Stack additions: [V253]
Exit stack: [V10, S9, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, 0x2a1, V237, V253]

================================

Block 0x2a1
[0x2a1:0x2b5]
---
Predecessors: [0x246, 0x327]
Successors: [0x2b6]
---
0x2a1 JUMPDEST
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 CALLER
0x2a7 PUSH1 0x0
0x2a9 PUSH1 0x0
0x2ab POP
0x2ac DUP4
0x2ad DUP2
0x2ae SLOAD
0x2af DUP2
0x2b0 LT
0x2b1 ISZERO
0x2b2 PUSH2 0x2
0x2b5 JUMPI
---
0x2a1: JUMPDEST 
0x2a6: V255 = CALLER
0x2a7: V256 = 0x0
0x2a9: V257 = 0x0
0x2ae: V258 = S[0x0]
0x2b0: V259 = LT V223 V258
0x2b1: V260 = ISZERO V259
0x2b2: V261 = 0x2
0x2b5: THROWI V260
---
Entry stack: [V10, S7, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, S0]
Stack pops: 6
Stack additions: [S5, S4, V255, 0x0, S5]
Exit stack: [V10, S7, {0x150, 0x188}, V223, 0x0, V255, 0x0, V223]

================================

Block 0x2b6
[0x2b6:0x2eb]
---
Predecessors: [0x2a1]
Successors: [0x2ec]
---
0x2b6 DUP2
0x2b7 DUP1
0x2b8 MSTORE
0x2b9 PUSH1 0x2
0x2bb MUL
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf MLOAD
0x2c0 PUSH1 0x20
0x2c2 PUSH2 0x465
0x2c5 DUP4
0x2c6 CODECOPY
0x2c7 DUP2
0x2c8 MLOAD
0x2c9 SWAP2
0x2ca MSTORE
0x2cb ADD
0x2cc DUP1
0x2cd SLOAD
0x2ce PUSH1 0x1
0x2d0 PUSH1 0xa0
0x2d2 PUSH1 0x2
0x2d4 EXP
0x2d5 SUB
0x2d6 NOT
0x2d7 AND
0x2d8 SWAP1
0x2d9 SWAP3
0x2da OR
0x2db SWAP1
0x2dc SWAP2
0x2dd SSTORE
0x2de DUP1
0x2df SLOAD
0x2e0 CALLVALUE
0x2e1 SWAP2
0x2e2 SWAP1
0x2e3 DUP5
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 LT
0x2e7 ISZERO
0x2e8 PUSH2 0x2
0x2eb JUMPI
---
0x2b8: M[0x0] = 0x0
0x2b9: V262 = 0x2
0x2bb: V263 = MUL 0x2 V223
0x2bc: V264 = 0x0
0x2bf: V265 = M[0x0]
0x2c0: V266 = 0x20
0x2c2: V267 = 0x465
0x2c6: CODECOPY 0x0 0x465 0x20
0x2c8: V268 = M[0x0]
0x2ca: M[0x0] = V265
0x2cb: V269 = ADD V268 V263
0x2cd: V270 = S[V269]
0x2ce: V271 = 0x1
0x2d0: V272 = 0xa0
0x2d2: V273 = 0x2
0x2d4: V274 = EXP 0x2 0xa0
0x2d5: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d6: V276 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V277 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V270
0x2da: V278 = OR V255 V277
0x2dd: S[V269] = V278
0x2df: V279 = S[0x0]
0x2e0: V280 = CALLVALUE
0x2e6: V281 = LT V223 V279
0x2e7: V282 = ISZERO V281
0x2e8: V283 = 0x2
0x2eb: THROWI V282
---
Entry stack: [V10, S6, {0x150, 0x188}, V223, 0x0, V255, 0x0, V223]
Stack pops: 5
Stack additions: [S4, S3, V280, S1, S4]
Exit stack: [V10, S6, {0x150, 0x188}, V223, 0x0, V280, 0x0, V223]

================================

Block 0x2ec
[0x2ec:0x308]
---
Predecessors: [0x2b6]
Successors: [0x309, 0x32b]
---
0x2ec PUSH1 0x2
0x2ee MUL
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 MLOAD
0x2f3 PUSH1 0x20
0x2f5 PUSH2 0x485
0x2f8 DUP4
0x2f9 CODECOPY
0x2fa DUP2
0x2fb MLOAD
0x2fc SWAP2
0x2fd MSTORE
0x2fe ADD
0x2ff SWAP2
0x300 SWAP1
0x301 SWAP2
0x302 SSTORE
0x303 DUP3
0x304 EQ
0x305 PUSH2 0x32b
0x308 JUMPI
---
0x2ec: V284 = 0x2
0x2ee: V285 = MUL 0x2 V223
0x2ef: V286 = 0x0
0x2f2: V287 = M[0x0]
0x2f3: V288 = 0x20
0x2f5: V289 = 0x485
0x2f9: CODECOPY 0x0 0x485 0x20
0x2fb: V290 = M[0x0]
0x2fd: M[0x0] = V287
0x2fe: V291 = ADD V290 V285
0x302: S[V291] = V280
0x304: V292 = EQ V223 0x0
0x305: V293 = 0x32b
0x308: JUMPI 0x32b V292
---
Entry stack: [V10, S6, {0x150, 0x188}, V223, 0x0, V280, 0x0, V223]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S6, {0x150, 0x188}, V223, 0x0]

================================

Block 0x309
[0x309:0x326]
---
Predecessors: [0x2ec]
Successors: [0x334]
---
0x309 PUSH1 0x2
0x30b DUP1
0x30c SLOAD
0x30d PUSH1 0xa
0x30f CALLVALUE
0x310 SWAP1
0x311 DUP2
0x312 DIV
0x313 SWAP2
0x314 SWAP1
0x315 SWAP2
0x316 ADD
0x317 SWAP1
0x318 SWAP2
0x319 SSTORE
0x31a PUSH1 0x3
0x31c DUP1
0x31d SLOAD
0x31e SWAP1
0x31f SWAP2
0x320 ADD
0x321 SWAP1
0x322 SSTORE
0x323 PUSH2 0x334
0x326 JUMP
---
0x309: V294 = 0x2
0x30c: V295 = S[0x2]
0x30d: V296 = 0xa
0x30f: V297 = CALLVALUE
0x312: V298 = DIV V297 0xa
0x316: V299 = ADD V298 V295
0x319: S[0x2] = V299
0x31a: V300 = 0x3
0x31d: V301 = S[0x3]
0x320: V302 = ADD V297 V301
0x322: S[0x3] = V302
0x323: V303 = 0x334
0x326: JUMP 0x334
---
Entry stack: [V10, S3, {0x150, 0x188}, V223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x150, 0x188}, V223, 0x0]

================================

Block 0x327
[0x327:0x32a]
---
Predecessors: [0x27b]
Successors: [0x2a1]
---
0x327 JUMPDEST
0x328 POP
0x329 SWAP1
0x32a JUMP
---
0x327: JUMPDEST 
0x32a: JUMP 0x2a1
---
Entry stack: [V10, S9, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, 0x2a1, V237, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S9, {0x150, 0x188}, V223, 0x0, V225, 0x0, V225, V237]

================================

Block 0x32b
[0x32b:0x333]
---
Predecessors: [0x2ec]
Successors: [0x334]
---
0x32b JUMPDEST
0x32c PUSH1 0x2
0x32e DUP1
0x32f SLOAD
0x330 CALLVALUE
0x331 ADD
0x332 SWAP1
0x333 SSTORE
---
0x32b: JUMPDEST 
0x32c: V304 = 0x2
0x32f: V305 = S[0x2]
0x330: V306 = CALLVALUE
0x331: V307 = ADD V306 V305
0x333: S[0x2] = V307
---
Entry stack: [V10, S3, {0x150, 0x188}, V223, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x150, 0x188}, V223, 0x0]

================================

Block 0x334
[0x334:0x345]
---
Predecessors: [0x309, 0x32b]
Successors: [0x346]
---
0x334 JUMPDEST
0x335 PUSH1 0x1
0x337 SLOAD
0x338 PUSH1 0x0
0x33a DUP1
0x33b SLOAD
0x33c SWAP1
0x33d SWAP2
0x33e SWAP1
0x33f DUP2
0x340 LT
0x341 ISZERO
0x342 PUSH2 0x2
0x345 JUMPI
---
0x334: JUMPDEST 
0x335: V308 = 0x1
0x337: V309 = S[0x1]
0x338: V310 = 0x0
0x33b: V311 = S[0x0]
0x340: V312 = LT V309 V311
0x341: V313 = ISZERO V312
0x342: V314 = 0x2
0x345: THROWI V313
---
Entry stack: [V10, S3, {0x150, 0x188}, V223, 0x0]
Stack pops: 0
Stack additions: [0x0, V309]
Exit stack: [V10, S3, {0x150, 0x188}, V223, 0x0, 0x0, V309]

================================

Block 0x346
[0x346:0x36a]
---
Predecessors: [0x334]
Successors: [0x36b, 0x461]
---
0x346 SWAP1
0x347 DUP1
0x348 MSTORE
0x349 PUSH1 0x2
0x34b SWAP1
0x34c DUP2
0x34d MUL
0x34e PUSH1 0x0
0x350 DUP1
0x351 MLOAD
0x352 PUSH1 0x20
0x354 PUSH2 0x485
0x357 DUP4
0x358 CODECOPY
0x359 DUP2
0x35a MLOAD
0x35b SWAP2
0x35c MSTORE
0x35d ADD
0x35e SLOAD
0x35f PUSH1 0x3
0x361 SLOAD
0x362 SWAP2
0x363 MUL
0x364 SWAP1
0x365 GT
0x366 ISZERO
0x367 PUSH2 0x461
0x36a JUMPI
---
0x348: M[0x0] = 0x0
0x349: V315 = 0x2
0x34d: V316 = MUL 0x2 V309
0x34e: V317 = 0x0
0x351: V318 = M[0x0]
0x352: V319 = 0x20
0x354: V320 = 0x485
0x358: CODECOPY 0x0 0x485 0x20
0x35a: V321 = M[0x0]
0x35c: M[0x0] = V318
0x35d: V322 = ADD V321 V316
0x35e: V323 = S[V322]
0x35f: V324 = 0x3
0x361: V325 = S[0x3]
0x363: V326 = MUL 0x2 V323
0x365: V327 = GT V325 V326
0x366: V328 = ISZERO V327
0x367: V329 = 0x461
0x36a: JUMPI 0x461 V328
---
Entry stack: [V10, S5, {0x150, 0x188}, V223, 0x0, 0x0, V309]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S5, {0x150, 0x188}, V223, 0x0]

================================

Block 0x36b
[0x36b:0x37c]
---
Predecessors: [0x346]
Successors: [0x37d]
---
0x36b PUSH1 0x1
0x36d SLOAD
0x36e PUSH1 0x0
0x370 DUP1
0x371 SLOAD
0x372 PUSH1 0xa
0x374 SWAP3
0x375 SWAP1
0x376 DUP2
0x377 LT
0x378 ISZERO
0x379 PUSH2 0x2
0x37c JUMPI
---
0x36b: V330 = 0x1
0x36d: V331 = S[0x1]
0x36e: V332 = 0x0
0x371: V333 = S[0x0]
0x372: V334 = 0xa
0x377: V335 = LT V331 V333
0x378: V336 = ISZERO V335
0x379: V337 = 0x2
0x37c: THROWI V336
---
Entry stack: [V10, S3, {0x150, 0x188}, V223, 0x0]
Stack pops: 0
Stack additions: [0xa, 0x0, V331]
Exit stack: [V10, S3, {0x150, 0x188}, V223, 0x0, 0xa, 0x0, V331]

================================

Block 0x37d
[0x37d:0x3b0]
---
Predecessors: [0x36b]
Successors: [0x3b1]
---
0x37d DUP2
0x37e DUP1
0x37f MSTORE
0x380 PUSH1 0x2
0x382 MUL
0x383 PUSH1 0x0
0x385 DUP1
0x386 MLOAD
0x387 PUSH1 0x20
0x389 PUSH2 0x465
0x38c DUP4
0x38d CODECOPY
0x38e DUP2
0x38f MLOAD
0x390 SWAP2
0x391 MSTORE
0x392 ADD
0x393 SWAP1
0x394 POP
0x395 PUSH1 0x1
0x397 ADD
0x398 PUSH1 0x0
0x39a POP
0x39b SLOAD
0x39c DIV
0x39d PUSH1 0x0
0x39f PUSH1 0x0
0x3a1 POP
0x3a2 PUSH1 0x1
0x3a4 PUSH1 0x0
0x3a6 POP
0x3a7 SLOAD
0x3a8 DUP2
0x3a9 SLOAD
0x3aa DUP2
0x3ab LT
0x3ac ISZERO
0x3ad PUSH2 0x2
0x3b0 JUMPI
---
0x37f: M[0x0] = 0x0
0x380: V338 = 0x2
0x382: V339 = MUL 0x2 V331
0x383: V340 = 0x0
0x386: V341 = M[0x0]
0x387: V342 = 0x20
0x389: V343 = 0x465
0x38d: CODECOPY 0x0 0x465 0x20
0x38f: V344 = M[0x0]
0x391: M[0x0] = V341
0x392: V345 = ADD V344 V339
0x395: V346 = 0x1
0x397: V347 = ADD 0x1 V345
0x398: V348 = 0x0
0x39b: V349 = S[V347]
0x39c: V350 = DIV V349 0xa
0x39d: V351 = 0x0
0x39f: V352 = 0x0
0x3a2: V353 = 0x1
0x3a4: V354 = 0x0
0x3a7: V355 = S[0x1]
0x3a9: V356 = S[0x0]
0x3ab: V357 = LT V355 V356
0x3ac: V358 = ISZERO V357
0x3ad: V359 = 0x2
0x3b0: THROWI V358
---
Entry stack: [V10, S6, {0x150, 0x188}, V223, 0x0, 0xa, 0x0, V331]
Stack pops: 3
Stack additions: [V350, 0x0, V355]
Exit stack: [V10, S6, {0x150, 0x188}, V223, 0x0, V350, 0x0, V355]

================================

Block 0x3b1
[0x3b1:0x3e9]
---
Predecessors: [0x37d]
Successors: [0x3ea]
---
0x3b1 DUP2
0x3b2 DUP1
0x3b3 MSTORE
0x3b4 PUSH1 0x2
0x3b6 MUL
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba MLOAD
0x3bb PUSH1 0x20
0x3bd PUSH2 0x465
0x3c0 DUP4
0x3c1 CODECOPY
0x3c2 DUP2
0x3c3 MLOAD
0x3c4 SWAP2
0x3c5 MSTORE
0x3c6 ADD
0x3c7 SWAP1
0x3c8 POP
0x3c9 PUSH1 0x1
0x3cb ADD
0x3cc PUSH1 0x0
0x3ce POP
0x3cf SLOAD
0x3d0 SUB
0x3d1 PUSH1 0x2
0x3d3 MUL
0x3d4 SWAP1
0x3d5 POP
0x3d6 PUSH1 0x0
0x3d8 PUSH1 0x0
0x3da POP
0x3db PUSH1 0x1
0x3dd PUSH1 0x0
0x3df POP
0x3e0 SLOAD
0x3e1 DUP2
0x3e2 SLOAD
0x3e3 DUP2
0x3e4 LT
0x3e5 ISZERO
0x3e6 PUSH2 0x2
0x3e9 JUMPI
---
0x3b3: M[0x0] = 0x0
0x3b4: V360 = 0x2
0x3b6: V361 = MUL 0x2 V355
0x3b7: V362 = 0x0
0x3ba: V363 = M[0x0]
0x3bb: V364 = 0x20
0x3bd: V365 = 0x465
0x3c1: CODECOPY 0x0 0x465 0x20
0x3c3: V366 = M[0x0]
0x3c5: M[0x0] = V363
0x3c6: V367 = ADD V366 V361
0x3c9: V368 = 0x1
0x3cb: V369 = ADD 0x1 V367
0x3cc: V370 = 0x0
0x3cf: V371 = S[V369]
0x3d0: V372 = SUB V371 V350
0x3d1: V373 = 0x2
0x3d3: V374 = MUL 0x2 V372
0x3d6: V375 = 0x0
0x3d8: V376 = 0x0
0x3db: V377 = 0x1
0x3dd: V378 = 0x0
0x3e0: V379 = S[0x1]
0x3e2: V380 = S[0x0]
0x3e4: V381 = LT V379 V380
0x3e5: V382 = ISZERO V381
0x3e6: V383 = 0x2
0x3e9: THROWI V382
---
Entry stack: [V10, S6, {0x150, 0x188}, V223, 0x0, V350, 0x0, V355]
Stack pops: 4
Stack additions: [V374, 0x0, V379]
Exit stack: [V10, S6, {0x150, 0x188}, V223, V374, 0x0, V379]

================================

Block 0x3ea
[0x3ea:0x433]
---
Predecessors: [0x3b1]
Successors: [0x434]
---
0x3ea DUP2
0x3eb DUP1
0x3ec MSTORE
0x3ed PUSH1 0x2
0x3ef MUL
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 MLOAD
0x3f4 PUSH1 0x20
0x3f6 PUSH2 0x465
0x3f9 DUP4
0x3fa CODECOPY
0x3fb DUP2
0x3fc MLOAD
0x3fd SWAP2
0x3fe MSTORE
0x3ff ADD
0x400 SWAP1
0x401 POP
0x402 SLOAD
0x403 PUSH1 0x40
0x405 MLOAD
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e SWAP2
0x40f SWAP1
0x410 SWAP2
0x411 AND
0x412 SWAP1
0x413 PUSH1 0x0
0x415 SWAP1
0x416 DUP4
0x417 SWAP1
0x418 DUP3
0x419 DUP2
0x41a DUP2
0x41b DUP2
0x41c DUP6
0x41d DUP9
0x41e DUP4
0x41f CALL
0x420 POP
0x421 POP
0x422 PUSH1 0x1
0x424 SLOAD
0x425 DUP3
0x426 SLOAD
0x427 SWAP3
0x428 SWAP4
0x429 POP
0x42a SWAP2
0x42b DUP3
0x42c LT
0x42d ISZERO
0x42e SWAP1
0x42f POP
0x430 PUSH2 0x2
0x433 JUMPI
---
0x3ec: M[0x0] = 0x0
0x3ed: V384 = 0x2
0x3ef: V385 = MUL 0x2 V379
0x3f0: V386 = 0x0
0x3f3: V387 = M[0x0]
0x3f4: V388 = 0x20
0x3f6: V389 = 0x465
0x3fa: CODECOPY 0x0 0x465 0x20
0x3fc: V390 = M[0x0]
0x3fe: M[0x0] = V387
0x3ff: V391 = ADD V390 V385
0x402: V392 = S[V391]
0x403: V393 = 0x40
0x405: V394 = M[0x40]
0x406: V395 = 0x1
0x408: V396 = 0xa0
0x40a: V397 = 0x2
0x40c: V398 = EXP 0x2 0xa0
0x40d: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x411: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x413: V401 = 0x0
0x41f: V402 = CALL 0x0 V400 V374 V394 0x0 V394 0x0
0x422: V403 = 0x1
0x424: V404 = S[0x1]
0x426: V405 = S[0x0]
0x42c: V406 = LT V404 V405
0x42d: V407 = ISZERO V406
0x430: V408 = 0x2
0x433: THROWI V407
---
Entry stack: [V10, S5, {0x150, 0x188}, V223, V374, 0x0, V379]
Stack pops: 3
Stack additions: [S2, 0x0, V404]
Exit stack: [V10, S5, {0x150, 0x188}, V223, V374, 0x0, V404]

================================

Block 0x434
[0x434:0x460]
---
Predecessors: [0x3ea]
Successors: [0x461]
---
0x434 SWAP1
0x435 DUP1
0x436 MSTORE
0x437 PUSH1 0x3
0x439 DUP1
0x43a SLOAD
0x43b PUSH1 0x2
0x43d SWAP3
0x43e DUP4
0x43f MUL
0x440 PUSH1 0x0
0x442 DUP1
0x443 MLOAD
0x444 PUSH1 0x20
0x446 PUSH2 0x485
0x449 DUP4
0x44a CODECOPY
0x44b DUP2
0x44c MLOAD
0x44d SWAP2
0x44e MSTORE
0x44f ADD
0x450 SLOAD
0x451 SWAP1
0x452 SWAP3
0x453 MUL
0x454 SWAP1
0x455 SWAP2
0x456 SUB
0x457 SWAP1
0x458 SSTORE
0x459 PUSH1 0x1
0x45b DUP1
0x45c SLOAD
0x45d DUP2
0x45e ADD
0x45f SWAP1
0x460 SSTORE
---
0x436: M[0x0] = 0x0
0x437: V409 = 0x3
0x43a: V410 = S[0x3]
0x43b: V411 = 0x2
0x43f: V412 = MUL 0x2 V404
0x440: V413 = 0x0
0x443: V414 = M[0x0]
0x444: V415 = 0x20
0x446: V416 = 0x485
0x44a: CODECOPY 0x0 0x485 0x20
0x44c: V417 = M[0x0]
0x44e: M[0x0] = V414
0x44f: V418 = ADD V417 V412
0x450: V419 = S[V418]
0x453: V420 = MUL 0x2 V419
0x456: V421 = SUB V410 V420
0x458: S[0x3] = V421
0x459: V422 = 0x1
0x45c: V423 = S[0x1]
0x45e: V424 = ADD 0x1 V423
0x460: S[0x1] = V424
---
Entry stack: [V10, S5, {0x150, 0x188}, V223, V374, 0x0, V404]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S5, {0x150, 0x188}, V223, V374]

================================

Block 0x461
[0x461:0x464]
---
Predecessors: [0x164, 0x21b, 0x346, 0x434]
Successors: [0x150, 0x188]
---
0x461 JUMPDEST
0x462 POP
0x463 POP
0x464 JUMP
---
0x461: JUMPDEST 
0x464: JUMP {0x150, 0x188}
---
Entry stack: [V10, S3, {0x150, 0x188}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0x465
[0x465:0x4a9]
---
Predecessors: []
Successors: []
---
0x465 MISSING 0x29
0x466 MISSING 0xd
0x467 MISSING 0xec
0x468 MISSING 0xd9
0x469 SLOAD
0x46a DUP12
0x46b PUSH3 0xa8d603
0x46f GASLIMIT
0x470 MISSING 0xa9
0x471 DUP9
0x472 CODESIZE
0x473 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x484 PUSH4 0x290decd9
0x489 SLOAD
0x48a DUP12
0x48b PUSH3 0xa8d603
0x48f GASLIMIT
0x490 MISSING 0xa9
0x491 DUP9
0x492 CODESIZE
0x493 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x4a4 PUSH5 0x0
---
0x465: MISSING 0x29
0x466: MISSING 0xd
0x467: MISSING 0xec
0x468: MISSING 0xd9
0x469: V425 = S[S0]
0x46b: V426 = 0xa8d603
0x46f: V427 = GASLIMIT
0x470: MISSING 0xa9
0x472: V428 = CODESIZE
0x473: V429 = 0xc84ba6bc95484008f6362f93160ef3e5
0x484: V430 = 0x290decd9
0x489: V431 = S[0x290decd9]
0x48b: V432 = 0xa8d603
0x48f: V433 = GASLIMIT
0x490: MISSING 0xa9
0x492: V434 = CODESIZE
0x493: V435 = 0xc84ba6bc95484008f6362f93160ef3e5
0x4a4: V436 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V427, 0xa8d603, S11, V425, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V433, 0xa8d603, S7, V431, 0xc84ba6bc95484008f6362f93160ef3e5, V428, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V434, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x77
Exit block: 0x188
Body: 0x77, 0x97, 0xa9, 0x188

Function 1:
Public function signature: 0x35c1d349
Entry block: 0xac
Exit block: 0x18a
Body: 0xac, 0xc0, 0x18a

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xfb
Exit block: 0x1b0
Body: 0xfb, 0x1b0

Function 3:
Public function signature: 0x9003adfe
Entry block: 0x10d
Exit block: 0x1cd
Body: 0x10d, 0x1cd

Function 4:
Public function signature: 0xa60f3588
Entry block: 0x116
Exit block: 0x1cd
Body: 0x116, 0x1cd

Function 5:
Public function signature: 0xb69ef8a8
Entry block: 0x11f
Exit block: 0x1cd
Body: 0x11f, 0x1cd

Function 6:
Public function signature: 0xc8796572
Entry block: 0x128
Exit block: 0x188
Body: 0x128, 0x145, 0x150, 0x188, 0x1df

Function 7:
Public function signature: 0xe97dcb62
Entry block: 0x152
Exit block: 0x188
Body: 0x150, 0x152, 0x156, 0x164, 0x188, 0x20a, 0x21b, 0x246, 0x261, 0x27b, 0x284, 0x2a1, 0x2b6, 0x2ec, 0x309, 0x327, 0x32b, 0x334, 0x346, 0x36b, 0x37d, 0x3b1, 0x3ea, 0x434, 0x461

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x188
Body: 0x6c, 0x150, 0x156, 0x164, 0x188, 0x20a, 0x21b, 0x246, 0x261, 0x27b, 0x284, 0x2a1, 0x2b6, 0x2ec, 0x309, 0x327, 0x32b, 0x334, 0x346, 0x36b, 0x37d, 0x3b1, 0x3ea, 0x434, 0x461

