Block 0x0
[0x0:0x18]
---
Predecessors: []
Successors: [0x19, 0x47]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x27e235e3
0x13 DUP2
0x14 EQ
0x15 PUSH2 0x47
0x18 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x27e235e3
0x14: V9 = EQ V7 0x27e235e3
0x15: V10 = 0x47
0x18: JUMPI 0x47 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x19
[0x19:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x5f]
---
0x19 DUP1
0x1a PUSH4 0x6d4ce63c
0x1f EQ
0x20 PUSH2 0x5f
0x23 JUMPI
---
0x1a: V11 = 0x6d4ce63c
0x1f: V12 = EQ 0x6d4ce63c V7
0x20: V13 = 0x5f
0x23: JUMPI 0x5f V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0x19]
Successors: [0x2f, 0x8b]
---
0x24 DUP1
0x25 PUSH4 0x6f7bc9be
0x2a EQ
0x2b PUSH2 0x8b
0x2e JUMPI
---
0x25: V14 = 0x6f7bc9be
0x2a: V15 = EQ 0x6f7bc9be V7
0x2b: V16 = 0x8b
0x2e: JUMPI 0x8b V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0xa3]
---
0x2f DUP1
0x30 PUSH4 0x89ac5d13
0x35 EQ
0x36 PUSH2 0xa3
0x39 JUMPI
---
0x30: V17 = 0x89ac5d13
0x35: V18 = EQ 0x89ac5d13 V7
0x36: V19 = 0xa3
0x39: JUMPI 0xa3 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0x105]
---
0x3a DUP1
0x3b PUSH4 0xe8b5e51f
0x40 EQ
0x41 PUSH2 0x105
0x44 JUMPI
---
0x3b: V20 = 0xe8b5e51f
0x40: V21 = EQ 0xe8b5e51f V7
0x41: V22 = 0x105
0x44: JUMPI 0x105 V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x45
[0x45:0x46]
---
Predecessors: [0x3a, 0x161]
Successors: []
---
0x45 JUMPDEST
0x46 STOP
---
0x45: JUMPDEST 
0x46: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x47
[0x47:0x5e]
---
Predecessors: [0x0]
Successors: [0x79]
---
0x47 JUMPDEST
0x48 PUSH2 0x79
0x4b PUSH1 0x4
0x4d CALLDATALOAD
0x4e PUSH1 0x5
0x50 PUSH1 0x20
0x52 MSTORE
0x53 PUSH1 0x0
0x55 SWAP1
0x56 DUP2
0x57 MSTORE
0x58 PUSH1 0x40
0x5a SWAP1
0x5b SHA3
0x5c SLOAD
0x5d DUP2
0x5e JUMP
---
0x47: JUMPDEST 
0x48: V23 = 0x79
0x4b: V24 = 0x4
0x4d: V25 = CALLDATALOAD 0x4
0x4e: V26 = 0x5
0x50: V27 = 0x20
0x52: M[0x20] = 0x5
0x53: V28 = 0x0
0x57: M[0x0] = V25
0x58: V29 = 0x40
0x5b: V30 = SHA3 0x0 0x40
0x5c: V31 = S[V30]
0x5e: JUMP 0x79
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x79, V31]
Exit stack: [V7, 0x79, V31]

================================

Block 0x5f
[0x5f:0x78]
---
Predecessors: [0x19]
Successors: [0x79]
---
0x5f JUMPDEST
0x60 CALLER
0x61 PUSH1 0x1
0x63 PUSH1 0xa0
0x65 PUSH1 0x2
0x67 EXP
0x68 SUB
0x69 AND
0x6a PUSH1 0x0
0x6c SWAP1
0x6d DUP2
0x6e MSTORE
0x6f PUSH1 0x5
0x71 PUSH1 0x20
0x73 MSTORE
0x74 PUSH1 0x40
0x76 SWAP1
0x77 SHA3
0x78 SLOAD
---
0x5f: JUMPDEST 
0x60: V32 = CALLER
0x61: V33 = 0x1
0x63: V34 = 0xa0
0x65: V35 = 0x2
0x67: V36 = EXP 0x2 0xa0
0x68: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x6a: V39 = 0x0
0x6e: M[0x0] = V38
0x6f: V40 = 0x5
0x71: V41 = 0x20
0x73: M[0x20] = 0x5
0x74: V42 = 0x40
0x77: V43 = SHA3 0x0 0x40
0x78: V44 = S[V43]
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V7, V44]

================================

Block 0x79
[0x79:0x8a]
---
Predecessors: [0x47, 0x5f, 0x8b, 0x1bb]
Successors: []
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c DUP1
0x7d MLOAD
0x7e SWAP2
0x7f DUP3
0x80 MSTORE
0x81 MLOAD
0x82 SWAP1
0x83 DUP2
0x84 SWAP1
0x85 SUB
0x86 PUSH1 0x20
0x88 ADD
0x89 SWAP1
0x8a RETURN
---
0x79: JUMPDEST 
0x7a: V45 = 0x40
0x7d: V46 = M[0x40]
0x80: M[V46] = S0
0x81: V47 = M[0x40]
0x85: V48 = SUB V46 V47
0x86: V49 = 0x20
0x88: V50 = ADD 0x20 V48
0x8a: RETURN V47 V50
---
Entry stack: [V7, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, S1]

================================

Block 0x8b
[0x8b:0xa2]
---
Predecessors: [0x24]
Successors: [0x79]
---
0x8b JUMPDEST
0x8c PUSH2 0x79
0x8f PUSH1 0x4
0x91 CALLDATALOAD
0x92 PUSH1 0xb
0x94 PUSH1 0x20
0x96 MSTORE
0x97 PUSH1 0x0
0x99 SWAP1
0x9a DUP2
0x9b MSTORE
0x9c PUSH1 0x40
0x9e SWAP1
0x9f SHA3
0xa0 SLOAD
0xa1 DUP2
0xa2 JUMP
---
0x8b: JUMPDEST 
0x8c: V51 = 0x79
0x8f: V52 = 0x4
0x91: V53 = CALLDATALOAD 0x4
0x92: V54 = 0xb
0x94: V55 = 0x20
0x96: M[0x20] = 0xb
0x97: V56 = 0x0
0x9b: M[0x0] = V53
0x9c: V57 = 0x40
0x9f: V58 = SHA3 0x0 0x40
0xa0: V59 = S[V58]
0xa2: JUMP 0x79
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x79, V59]
Exit stack: [V7, 0x79, V59]

================================

Block 0xa3
[0xa3:0x100]
---
Predecessors: [0x2f]
Successors: [0x101, 0x1c3]
---
0xa3 JUMPDEST
0xa4 PUSH1 0x4
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 DUP2
0xaa ADD
0xab CALLDATALOAD
0xac PUSH1 0x20
0xae DUP2
0xaf MUL
0xb0 PUSH1 0x80
0xb2 DUP2
0xb3 DUP2
0xb4 ADD
0xb5 PUSH1 0x40
0xb7 MSTORE
0xb8 PUSH1 0x60
0xba DUP4
0xbb DUP2
0xbc MSTORE
0xbd PUSH2 0x79
0xc0 SWAP5
0xc1 PUSH1 0x24
0xc3 SWAP5
0xc4 SWAP2
0xc5 SWAP4
0xc6 SWAP1
0xc7 DUP6
0xc8 ADD
0xc9 SWAP3
0xca DUP3
0xcb SWAP2
0xcc DUP5
0xcd SWAP1
0xce DUP1
0xcf DUP3
0xd0 DUP5
0xd1 CALLDATACOPY
0xd2 POP
0xd3 SWAP5
0xd4 SWAP6
0xd5 CALLDATALOAD
0xd6 SWAP5
0xd7 POP
0xd8 POP
0xd9 POP
0xda POP
0xdb POP
0xdc PUSH1 0x1
0xde PUSH1 0xa0
0xe0 PUSH1 0x2
0xe2 EXP
0xe3 SUB
0xe4 CALLER
0xe5 AND
0xe6 PUSH1 0x0
0xe8 SWAP1
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x5
0xed PUSH1 0x20
0xef MSTORE
0xf0 PUSH1 0x40
0xf2 DUP2
0xf3 SHA3
0xf4 SLOAD
0xf5 DUP2
0xf6 SWAP1
0xf7 DUP2
0xf8 SWAP1
0xf9 DUP2
0xfa SWAP1
0xfb GT
0xfc ISZERO
0xfd PUSH2 0x1c3
0x100 JUMPI
---
0xa3: JUMPDEST 
0xa4: V60 = 0x4
0xa7: V61 = CALLDATALOAD 0x4
0xaa: V62 = ADD V61 0x4
0xab: V63 = CALLDATALOAD V62
0xac: V64 = 0x20
0xaf: V65 = MUL V63 0x20
0xb0: V66 = 0x80
0xb4: V67 = ADD 0x80 V65
0xb5: V68 = 0x40
0xb7: M[0x40] = V67
0xb8: V69 = 0x60
0xbc: M[0x60] = V63
0xbd: V70 = 0x79
0xc1: V71 = 0x24
0xc8: V72 = ADD 0x24 V61
0xd1: CALLDATACOPY 0x80 V72 V65
0xd5: V73 = CALLDATALOAD 0x24
0xdc: V74 = 0x1
0xde: V75 = 0xa0
0xe0: V76 = 0x2
0xe2: V77 = EXP 0x2 0xa0
0xe3: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V79 = CALLER
0xe5: V80 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V81 = 0x0
0xea: M[0x0] = V80
0xeb: V82 = 0x5
0xed: V83 = 0x20
0xef: M[0x20] = 0x5
0xf0: V84 = 0x40
0xf3: V85 = SHA3 0x0 0x40
0xf4: V86 = S[V85]
0xfb: V87 = GT V86 0x0
0xfc: V88 = ISZERO V87
0xfd: V89 = 0x1c3
0x100: JUMPI 0x1c3 V88
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x79, 0x60, V73, 0x0, 0x0, 0x0]
Exit stack: [V7, 0x79, 0x60, V73, 0x0, 0x0, 0x0]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0xa3]
Successors: [0x1bb]
---
0x101 PUSH2 0x1bb
0x104 JUMP
---
0x101: V90 = 0x1bb
0x104: JUMP 0x1bb
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x79, 0x60, V73, 0x0, 0x0, 0x0]

================================

Block 0x105
[0x105:0x127]
---
Predecessors: [0x3a]
Successors: [0x128, 0x161]
---
0x105 JUMPDEST
0x106 PUSH2 0x45
0x109 PUSH1 0x1
0x10b PUSH1 0xa0
0x10d PUSH1 0x2
0x10f EXP
0x110 SUB
0x111 CALLER
0x112 AND
0x113 PUSH1 0x0
0x115 SWAP1
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0xb
0x11a PUSH1 0x20
0x11c MSTORE
0x11d PUSH1 0x40
0x11f DUP2
0x120 SHA3
0x121 SLOAD
0x122 EQ
0x123 ISZERO
0x124 PUSH2 0x161
0x127 JUMPI
---
0x105: JUMPDEST 
0x106: V91 = 0x45
0x109: V92 = 0x1
0x10b: V93 = 0xa0
0x10d: V94 = 0x2
0x10f: V95 = EXP 0x2 0xa0
0x110: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x111: V97 = CALLER
0x112: V98 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x113: V99 = 0x0
0x117: M[0x0] = V98
0x118: V100 = 0xb
0x11a: V101 = 0x20
0x11c: M[0x20] = 0xb
0x11d: V102 = 0x40
0x120: V103 = SHA3 0x0 0x40
0x121: V104 = S[V103]
0x122: V105 = EQ V104 0x0
0x123: V106 = ISZERO V105
0x124: V107 = 0x161
0x127: JUMPI 0x161 V106
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x45]
Exit stack: [V7, 0x45]

================================

Block 0x128
[0x128:0x138]
---
Predecessors: [0x105]
Successors: [0x139]
---
0x128 PUSH1 0xd
0x12a SLOAD
0x12b CALLER
0x12c SWAP1
0x12d PUSH1 0x6
0x12f SWAP1
0x130 PUSH1 0x5
0x132 DUP2
0x133 LT
0x134 ISZERO
0x135 PUSH2 0x2
0x138 JUMPI
---
0x128: V108 = 0xd
0x12a: V109 = S[0xd]
0x12b: V110 = CALLER
0x12d: V111 = 0x6
0x130: V112 = 0x5
0x133: V113 = LT V109 0x5
0x134: V114 = ISZERO V113
0x135: V115 = 0x2
0x138: THROWI V114
---
Entry stack: [V7, 0x45]
Stack pops: 0
Stack additions: [V110, 0x6, V109]
Exit stack: [V7, 0x45, V110, 0x6, V109]

================================

Block 0x139
[0x139:0x160]
---
Predecessors: [0x128]
Successors: [0x161]
---
0x139 ADD
0x13a DUP1
0x13b SLOAD
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 NOT
0x152 AND
0x153 SWAP1
0x154 SWAP2
0x155 OR
0x156 SWAP1
0x157 SSTORE
0x158 PUSH1 0xd
0x15a DUP1
0x15b SLOAD
0x15c PUSH1 0x1
0x15e ADD
0x15f SWAP1
0x160 SSTORE
---
0x139: V116 = ADD V109 0x6
0x13b: V117 = S[V116]
0x13c: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V119 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x152: V120 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V117
0x155: V121 = OR V110 V120
0x157: S[V116] = V121
0x158: V122 = 0xd
0x15b: V123 = S[0xd]
0x15c: V124 = 0x1
0x15e: V125 = ADD 0x1 V123
0x160: S[0xd] = V125
---
Entry stack: [V7, 0x45, V110, 0x6, V109]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x45]

================================

Block 0x161
[0x161:0x16d]
---
Predecessors: [0x105, 0x139]
Successors: [0x45]
---
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 PUSH1 0x0
0x166 SHA3
0x167 DUP1
0x168 SLOAD
0x169 CALLVALUE
0x16a ADD
0x16b SWAP1
0x16c SSTORE
0x16d JUMP
---
0x161: JUMPDEST 
0x162: V126 = 0x40
0x164: V127 = 0x0
0x166: V128 = SHA3 0x0 0x40
0x168: V129 = S[V128]
0x169: V130 = CALLVALUE
0x16a: V131 = ADD V130 V129
0x16c: S[V128] = V131
0x16d: JUMP 0x45
---
Entry stack: [V7, 0x45]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x16e
[0x16e:0x191]
---
Predecessors: [0x1fb]
Successors: [0x192]
---
0x16e JUMPDEST
0x16f PUSH1 0x40
0x171 DUP4
0x172 SHA3
0x173 CALLER
0x174 PUSH1 0x1
0x176 PUSH1 0xa0
0x178 PUSH1 0x2
0x17a EXP
0x17b SUB
0x17c DUP2
0x17d AND
0x17e DUP6
0x17f MSTORE
0x180 CALLVALUE
0x181 SWAP1
0x182 SWAP2
0x183 SSTORE
0x184 PUSH1 0xc
0x186 SLOAD
0x187 DUP5
0x188 SWAP1
0x189 PUSH1 0x5
0x18b DUP2
0x18c LT
0x18d ISZERO
0x18e PUSH2 0x2
0x191 JUMPI
---
0x16e: JUMPDEST 
0x16f: V132 = 0x40
0x172: V133 = SHA3 0x0 0x40
0x173: V134 = CALLER
0x174: V135 = 0x1
0x176: V136 = 0xa0
0x178: V137 = 0x2
0x17a: V138 = EXP 0x2 0xa0
0x17b: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17d: V140 = AND V134 0xffffffffffffffffffffffffffffffffffffffff
0x17f: M[0x0] = V140
0x180: V141 = CALLVALUE
0x183: S[V133] = V141
0x184: V142 = 0xc
0x186: V143 = S[0xc]
0x189: V144 = 0x5
0x18c: V145 = LT V143 0x5
0x18d: V146 = ISZERO V145
0x18e: V147 = 0x2
0x191: THROWI V146
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V134, S2, V143]
Exit stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0, V134, 0x0, V143]

================================

Block 0x192
[0x192:0x1ba]
---
Predecessors: [0x16e]
Successors: [0x1bb]
---
0x192 DUP1
0x193 SLOAD
0x194 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a9 NOT
0x1aa AND
0x1ab SWAP1
0x1ac SWAP3
0x1ad OR
0x1ae SWAP1
0x1af SWAP2
0x1b0 SSTORE
0x1b1 POP
0x1b2 PUSH1 0xc
0x1b4 DUP1
0x1b5 SLOAD
0x1b6 PUSH1 0x1
0x1b8 ADD
0x1b9 SWAP1
0x1ba SSTORE
---
0x193: V148 = S[V143]
0x194: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V150 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V151 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V148
0x1ad: V152 = OR V134 V151
0x1b0: S[V143] = V152
0x1b2: V153 = 0xc
0x1b5: V154 = S[0xc]
0x1b6: V155 = 0x1
0x1b8: V156 = ADD 0x1 V154
0x1ba: S[0xc] = V156
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S4, S3, V134, 0x0, V143]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x79, 0x60, V73, 0x0, S4, S3]

================================

Block 0x1bb
[0x1bb:0x1c2]
---
Predecessors: [0x101, 0x192, 0x213]
Successors: [0x79]
---
0x1bb JUMPDEST
0x1bc POP
0x1bd POP
0x1be SWAP3
0x1bf SWAP2
0x1c0 POP
0x1c1 POP
0x1c2 JUMP
---
0x1bb: JUMPDEST 
0x1c2: JUMP 0x79
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]
Stack pops: 6
Stack additions: [S2]
Exit stack: [V7, 0x0]

================================

Block 0x1c3
[0x1c3:0x1c3]
---
Predecessors: [0xa3]
Successors: [0x1c4]
---
0x1c3 JUMPDEST
---
0x1c3: JUMPDEST 
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x79, 0x60, V73, 0x0, 0x0, 0x0]

================================

Block 0x1c4
[0x1c4:0x1ce]
---
Predecessors: [0x1c3, 0x1dc]
Successors: [0x1cf, 0x1fb]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0xc
0x1c7 SLOAD
0x1c8 DUP2
0x1c9 LT
0x1ca ISZERO
0x1cb PUSH2 0x1fb
0x1ce JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V157 = 0xc
0x1c7: V158 = S[0xc]
0x1c9: V159 = LT S0 V158
0x1ca: V160 = ISZERO V159
0x1cb: V161 = 0x1fb
0x1ce: JUMPI 0x1fb V160
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]

================================

Block 0x1cf
[0x1cf:0x1db]
---
Predecessors: [0x1c4]
Successors: [0x1dc]
---
0x1cf PUSH1 0x5
0x1d1 DUP4
0x1d2 DUP1
0x1d3 DUP4
0x1d4 DUP4
0x1d5 DUP2
0x1d6 LT
0x1d7 ISZERO
0x1d8 PUSH2 0x2
0x1db JUMPI
---
0x1cf: V162 = 0x5
0x1d6: V163 = LT S0 0x5
0x1d7: V164 = ISZERO V163
0x1d8: V165 = 0x2
0x1db: THROWI V164
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x5, S2, S2, S0]
Exit stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0, 0x5, 0x0, 0x0, S0]

================================

Block 0x1dc
[0x1dc:0x1fa]
---
Predecessors: [0x1cf]
Successors: [0x1c4]
---
0x1dc SLOAD
0x1dd PUSH1 0x1
0x1df PUSH1 0xa0
0x1e1 PUSH1 0x2
0x1e3 EXP
0x1e4 SUB
0x1e5 AND
0x1e6 SWAP1
0x1e7 MSTORE
0x1e8 POP
0x1e9 PUSH1 0x40
0x1eb DUP5
0x1ec SHA3
0x1ed SLOAD
0x1ee MUL
0x1ef SWAP2
0x1f0 SWAP1
0x1f1 SWAP2
0x1f2 ADD
0x1f3 SWAP1
0x1f4 PUSH1 0x1
0x1f6 ADD
0x1f7 PUSH2 0x1c4
0x1fa JUMP
---
0x1dc: V166 = S[S0]
0x1dd: V167 = 0x1
0x1df: V168 = 0xa0
0x1e1: V169 = 0x2
0x1e3: V170 = EXP 0x2 0xa0
0x1e4: V171 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1e7: M[0x0] = V172
0x1e9: V173 = 0x40
0x1ec: V174 = SHA3 0x0 0x40
0x1ed: V175 = S[V174]
0x1ee: V176 = MUL V175 0x5
0x1f2: V177 = ADD V176 S5
0x1f4: V178 = 0x1
0x1f6: V179 = ADD 0x1 S4
0x1f7: V180 = 0x1c4
0x1fa: JUMP 0x1c4
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S5, S4, 0x5, 0x0, 0x0, S0]
Stack pops: 7
Stack additions: [S6, V177, V179]
Exit stack: [V7, 0x79, 0x60, V73, 0x0, V177, V179]

================================

Block 0x1fb
[0x1fb:0x212]
---
Predecessors: [0x1c4]
Successors: [0x16e, 0x213]
---
0x1fb JUMPDEST
0x1fc CALLVALUE
0x1fd PUSH1 0x5
0x1ff MUL
0x200 DUP3
0x201 ADDRESS
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a AND
0x20b BALANCE
0x20c SUB
0x20d LT
0x20e ISZERO
0x20f PUSH2 0x16e
0x212 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V181 = CALLVALUE
0x1fd: V182 = 0x5
0x1ff: V183 = MUL 0x5 V181
0x201: V184 = ADDRESS
0x202: V185 = 0x1
0x204: V186 = 0xa0
0x206: V187 = 0x2
0x208: V188 = EXP 0x2 0xa0
0x209: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x20b: V191 = BALANCE V190
0x20c: V192 = SUB V191 S1
0x20d: V193 = LT V192 V183
0x20e: V194 = ISZERO V193
0x20f: V195 = 0x16e
0x212: JUMPI 0x16e V194
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]

================================

Block 0x213
[0x213:0x236]
---
Predecessors: [0x1fb]
Successors: [0x1bb]
---
0x213 PUSH1 0x40
0x215 MLOAD
0x216 PUSH1 0x1
0x218 PUSH1 0xa0
0x21a PUSH1 0x2
0x21c EXP
0x21d SUB
0x21e CALLER
0x21f AND
0x220 SWAP1
0x221 DUP5
0x222 SWAP1
0x223 CALLVALUE
0x224 SWAP1
0x225 DUP3
0x226 DUP2
0x227 DUP2
0x228 DUP2
0x229 DUP6
0x22a DUP9
0x22b DUP4
0x22c CALL
0x22d SWAP4
0x22e POP
0x22f POP
0x230 POP
0x231 POP
0x232 POP
0x233 PUSH2 0x1bb
0x236 JUMP
---
0x213: V196 = 0x40
0x215: V197 = M[0x40]
0x216: V198 = 0x1
0x218: V199 = 0xa0
0x21a: V200 = 0x2
0x21c: V201 = EXP 0x2 0xa0
0x21d: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21e: V203 = CALLER
0x21f: V204 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x223: V205 = CALLVALUE
0x22c: V206 = CALL 0x0 V204 V205 V197 0x0 V197 0x0
0x233: V207 = 0x1bb
0x236: JUMP 0x1bb
---
Entry stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x79, 0x60, V73, 0x0, S1, S0]

================================

Function 0:
Public function signature: 0x27e235e3
Entry block: 0x47
Exit block: 0x79
Body: 0x47, 0x79

Function 1:
Public function signature: 0x6d4ce63c
Entry block: 0x5f
Exit block: 0x79
Body: 0x5f, 0x79

Function 2:
Public function signature: 0x6f7bc9be
Entry block: 0x8b
Exit block: 0x79
Body: 0x79, 0x8b

Function 3:
Public function signature: 0x89ac5d13
Entry block: 0xa3
Exit block: 0x79
Body: 0x79, 0xa3, 0x101, 0x16e, 0x192, 0x1bb, 0x1c3, 0x1c4, 0x1cf, 0x1dc, 0x1fb, 0x213

Function 4:
Public function signature: 0xe8b5e51f
Entry block: 0x105
Exit block: 0x45
Body: 0x45, 0x105, 0x128, 0x139, 0x161

Function 5:
Public fallback function
Entry block: 0x45
Exit block: 0x45
Body: 0x45

