Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x451ac008
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x451ac008
0x3c: V13 = EQ 0x451ac008 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb7]
---
0x41 DUP1
0x42 PUSH4 0xdaac00f0
0x47 EQ
0x48 PUSH2 0xb7
0x4b JUMPI
---
0x42: V15 = 0xdaac00f0
0x47: V16 = EQ 0xdaac00f0 V11
0x48: V17 = 0xb7
0x4b: JUMPI 0xb7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0xb4]
---
Predecessors: [0x51]
Successors: [0x147]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0xb5
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d SWAP1
0x6e PUSH1 0x20
0x70 ADD
0x71 SWAP1
0x72 DUP3
0x73 ADD
0x74 DUP1
0x75 CALLDATALOAD
0x76 SWAP1
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP1
0x7b DUP1
0x7c DUP1
0x7d PUSH1 0x20
0x7f MUL
0x80 PUSH1 0x20
0x82 ADD
0x83 PUSH1 0x40
0x85 MLOAD
0x86 SWAP1
0x87 DUP2
0x88 ADD
0x89 PUSH1 0x40
0x8b MSTORE
0x8c DUP1
0x8d SWAP4
0x8e SWAP3
0x8f SWAP2
0x90 SWAP1
0x91 DUP2
0x92 DUP2
0x93 MSTORE
0x94 PUSH1 0x20
0x96 ADD
0x97 DUP4
0x98 DUP4
0x99 PUSH1 0x20
0x9b MUL
0x9c DUP1
0x9d DUP3
0x9e DUP5
0x9f CALLDATACOPY
0xa0 DUP3
0xa1 ADD
0xa2 SWAP2
0xa3 POP
0xa4 POP
0xa5 POP
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 SWAP2
0xaa SWAP3
0xab SWAP2
0xac SWAP3
0xad SWAP1
0xae POP
0xaf POP
0xb0 POP
0xb1 PUSH2 0x147
0xb4 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0xb5
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6e: V29 = 0x20
0x70: V30 = ADD 0x20 0x4
0x73: V31 = ADD 0x4 V28
0x75: V32 = CALLDATALOAD V31
0x77: V33 = 0x20
0x79: V34 = ADD 0x20 V31
0x7d: V35 = 0x20
0x7f: V36 = MUL 0x20 V32
0x80: V37 = 0x20
0x82: V38 = ADD 0x20 V36
0x83: V39 = 0x40
0x85: V40 = M[0x40]
0x88: V41 = ADD V40 V38
0x89: V42 = 0x40
0x8b: M[0x40] = V41
0x93: M[V40] = V32
0x94: V43 = 0x20
0x96: V44 = ADD 0x20 V40
0x99: V45 = 0x20
0x9b: V46 = MUL 0x20 V32
0x9f: CALLDATACOPY V44 V34 V46
0xa1: V47 = ADD V44 V46
0xb1: V48 = 0x147
0xb4: JUMP 0x147
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0xb5, V40]
Exit stack: [V11, 0xb5, V40]

================================

Block 0xb5
[0xb5:0xb6]
---
Predecessors: [0x22d]
Successors: []
---
0xb5 JUMPDEST
0xb6 STOP
---
0xb5: JUMPDEST 
0xb6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7
[0xb7:0xbe]
---
Predecessors: [0x41]
Successors: [0xbf, 0xc3]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 DUP1
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb7: JUMPDEST 
0xb8: V49 = CALLVALUE
0xba: V50 = ISZERO V49
0xbb: V51 = 0xc3
0xbe: JUMPI 0xc3 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb7]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V52 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xc3
[0xc3:0x144]
---
Predecessors: [0xb7]
Successors: [0x232]
---
0xc3 JUMPDEST
0xc4 POP
0xc5 PUSH2 0x145
0xc8 PUSH1 0x4
0xca DUP1
0xcb CALLDATASIZE
0xcc SUB
0xcd DUP2
0xce ADD
0xcf SWAP1
0xd0 DUP1
0xd1 DUP1
0xd2 CALLDATALOAD
0xd3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8 AND
0xe9 SWAP1
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee SWAP3
0xef SWAP2
0xf0 SWAP1
0xf1 DUP1
0xf2 CALLDATALOAD
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 DUP3
0xf9 ADD
0xfa DUP1
0xfb CALLDATALOAD
0xfc SWAP1
0xfd PUSH1 0x20
0xff ADD
0x100 SWAP1
0x101 DUP1
0x102 DUP1
0x103 PUSH1 0x20
0x105 MUL
0x106 PUSH1 0x20
0x108 ADD
0x109 PUSH1 0x40
0x10b MLOAD
0x10c SWAP1
0x10d DUP2
0x10e ADD
0x10f PUSH1 0x40
0x111 MSTORE
0x112 DUP1
0x113 SWAP4
0x114 SWAP3
0x115 SWAP2
0x116 SWAP1
0x117 DUP2
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d DUP4
0x11e DUP4
0x11f PUSH1 0x20
0x121 MUL
0x122 DUP1
0x123 DUP3
0x124 DUP5
0x125 CALLDATACOPY
0x126 DUP3
0x127 ADD
0x128 SWAP2
0x129 POP
0x12a POP
0x12b POP
0x12c POP
0x12d POP
0x12e POP
0x12f SWAP2
0x130 SWAP3
0x131 SWAP2
0x132 SWAP3
0x133 SWAP1
0x134 DUP1
0x135 CALLDATALOAD
0x136 SWAP1
0x137 PUSH1 0x20
0x139 ADD
0x13a SWAP1
0x13b SWAP3
0x13c SWAP2
0x13d SWAP1
0x13e POP
0x13f POP
0x140 POP
0x141 PUSH2 0x232
0x144 JUMP
---
0xc3: JUMPDEST 
0xc5: V53 = 0x145
0xc8: V54 = 0x4
0xcb: V55 = CALLDATASIZE
0xcc: V56 = SUB V55 0x4
0xce: V57 = ADD 0x4 V56
0xd2: V58 = CALLDATALOAD 0x4
0xd3: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xea: V61 = 0x20
0xec: V62 = ADD 0x20 0x4
0xf2: V63 = CALLDATALOAD 0x24
0xf4: V64 = 0x20
0xf6: V65 = ADD 0x20 0x24
0xf9: V66 = ADD 0x4 V63
0xfb: V67 = CALLDATALOAD V66
0xfd: V68 = 0x20
0xff: V69 = ADD 0x20 V66
0x103: V70 = 0x20
0x105: V71 = MUL 0x20 V67
0x106: V72 = 0x20
0x108: V73 = ADD 0x20 V71
0x109: V74 = 0x40
0x10b: V75 = M[0x40]
0x10e: V76 = ADD V75 V73
0x10f: V77 = 0x40
0x111: M[0x40] = V76
0x119: M[V75] = V67
0x11a: V78 = 0x20
0x11c: V79 = ADD 0x20 V75
0x11f: V80 = 0x20
0x121: V81 = MUL 0x20 V67
0x125: CALLDATACOPY V79 V69 V81
0x127: V82 = ADD V79 V81
0x135: V83 = CALLDATALOAD 0x44
0x137: V84 = 0x20
0x139: V85 = ADD 0x20 0x44
0x141: V86 = 0x232
0x144: JUMP 0x232
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0x145, V60, V75, V83]
Exit stack: [V11, 0x145, V60, V75, V83]

================================

Block 0x145
[0x145:0x146]
---
Predecessors: [0x35d]
Successors: []
---
0x145 JUMPDEST
0x146 STOP
---
0x145: JUMPDEST 
0x146: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x147
[0x147:0x19c]
---
Predecessors: [0x5d]
Successors: [0x19d, 0x1a1]
---
0x147 JUMPDEST
0x148 PUSH1 0x0
0x14a DUP1
0x14b PUSH1 0x0
0x14d DUP1
0x14e CALLER
0x14f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164 AND
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b DUP2
0x17c MSTORE
0x17d PUSH1 0x20
0x17f ADD
0x180 SWAP1
0x181 DUP2
0x182 MSTORE
0x183 PUSH1 0x20
0x185 ADD
0x186 PUSH1 0x0
0x188 SHA3
0x189 PUSH1 0x0
0x18b SWAP1
0x18c SLOAD
0x18d SWAP1
0x18e PUSH2 0x100
0x191 EXP
0x192 SWAP1
0x193 DIV
0x194 PUSH1 0xff
0x196 AND
0x197 ISZERO
0x198 ISZERO
0x199 PUSH2 0x1a1
0x19c JUMPI
---
0x147: JUMPDEST 
0x148: V87 = 0x0
0x14b: V88 = 0x0
0x14e: V89 = CALLER
0x14f: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x164: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x165: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x17c: M[0x0] = V93
0x17d: V94 = 0x20
0x17f: V95 = ADD 0x20 0x0
0x182: M[0x20] = 0x0
0x183: V96 = 0x20
0x185: V97 = ADD 0x20 0x20
0x186: V98 = 0x0
0x188: V99 = SHA3 0x0 0x40
0x189: V100 = 0x0
0x18c: V101 = S[V99]
0x18e: V102 = 0x100
0x191: V103 = EXP 0x100 0x0
0x193: V104 = DIV V101 0x1
0x194: V105 = 0xff
0x196: V106 = AND 0xff V104
0x197: V107 = ISZERO V106
0x198: V108 = ISZERO V107
0x199: V109 = 0x1a1
0x19c: JUMPI 0x1a1 V108
---
Entry stack: [V11, 0xb5, V40]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xb5, V40, 0x0, 0x0]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x147]
Successors: []
---
0x19d PUSH1 0x0
0x19f DUP1
0x1a0 REVERT
---
0x19d: V110 = 0x0
0x1a0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb5, V40, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb5, V40, 0x0, 0x0]

================================

Block 0x1a1
[0x1a1:0x1a9]
---
Predecessors: [0x147]
Successors: [0x1aa]
---
0x1a1 JUMPDEST
0x1a2 DUP3
0x1a3 MLOAD
0x1a4 SWAP2
0x1a5 POP
0x1a6 PUSH1 0x0
0x1a8 SWAP1
0x1a9 POP
---
0x1a1: JUMPDEST 
0x1a3: V111 = M[V40]
0x1a6: V112 = 0x0
---
Entry stack: [V11, 0xb5, V40, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, V111, 0x0]
Exit stack: [V11, 0xb5, V40, V111, 0x0]

================================

Block 0x1aa
[0x1aa:0x1b2]
---
Predecessors: [0x1a1, 0x1c5]
Successors: [0x1b3, 0x22d]
---
0x1aa JUMPDEST
0x1ab DUP2
0x1ac DUP2
0x1ad LT
0x1ae ISZERO
0x1af PUSH2 0x22d
0x1b2 JUMPI
---
0x1aa: JUMPDEST 
0x1ad: V113 = LT S0 V111
0x1ae: V114 = ISZERO V113
0x1af: V115 = 0x22d
0x1b2: JUMPI 0x22d V114
---
Entry stack: [V11, 0xb5, V40, V111, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb5, V40, V111, S0]

================================

Block 0x1b3
[0x1b3:0x1c3]
---
Predecessors: [0x1aa]
Successors: [0x1c4, 0x1c5]
---
0x1b3 PUSH1 0x1
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 DUP6
0x1b9 DUP5
0x1ba DUP2
0x1bb MLOAD
0x1bc DUP2
0x1bd LT
0x1be ISZERO
0x1bf ISZERO
0x1c0 PUSH2 0x1c5
0x1c3 JUMPI
---
0x1b3: V116 = 0x1
0x1b5: V117 = 0x0
0x1bb: V118 = M[V40]
0x1bd: V119 = LT S0 V118
0x1be: V120 = ISZERO V119
0x1bf: V121 = ISZERO V120
0x1c0: V122 = 0x1c5
0x1c3: JUMPI 0x1c5 V121
---
Entry stack: [V11, 0xb5, V40, V111, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, 0x0, 0x0, S2, S0]
Exit stack: [V11, 0xb5, V40, V111, S0, 0x1, 0x0, 0x0, V40, S0]

================================

Block 0x1c4
[0x1c4:0x1c4]
---
Predecessors: [0x1b3]
Successors: []
---
0x1c4 INVALID
---
0x1c4: INVALID 
---
Entry stack: [V11, 0xb5, V40, V111, S5, 0x1, 0x0, 0x0, V40, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb5, V40, V111, S5, 0x1, 0x0, 0x0, V40, S0]

================================

Block 0x1c5
[0x1c5:0x22c]
---
Predecessors: [0x1b3]
Successors: [0x1aa]
---
0x1c5 JUMPDEST
0x1c6 SWAP1
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP1
0x1cb PUSH1 0x20
0x1cd MUL
0x1ce ADD
0x1cf MLOAD
0x1d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e5 AND
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc DUP2
0x1fd MSTORE
0x1fe PUSH1 0x20
0x200 ADD
0x201 SWAP1
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 PUSH1 0x0
0x209 SHA3
0x20a PUSH1 0x0
0x20c PUSH2 0x100
0x20f EXP
0x210 DUP2
0x211 SLOAD
0x212 DUP2
0x213 PUSH1 0xff
0x215 MUL
0x216 NOT
0x217 AND
0x218 SWAP1
0x219 DUP4
0x21a ISZERO
0x21b ISZERO
0x21c MUL
0x21d OR
0x21e SWAP1
0x21f SSTORE
0x220 POP
0x221 DUP1
0x222 DUP1
0x223 PUSH1 0x1
0x225 ADD
0x226 SWAP2
0x227 POP
0x228 POP
0x229 PUSH2 0x1aa
0x22c JUMP
---
0x1c5: JUMPDEST 
0x1c7: V123 = 0x20
0x1c9: V124 = ADD 0x20 V40
0x1cb: V125 = 0x20
0x1cd: V126 = MUL 0x20 S0
0x1ce: V127 = ADD V126 V124
0x1cf: V128 = M[V127]
0x1d0: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1e6: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1fd: M[0x0] = V132
0x1fe: V133 = 0x20
0x200: V134 = ADD 0x20 0x0
0x203: M[0x20] = 0x0
0x204: V135 = 0x20
0x206: V136 = ADD 0x20 0x20
0x207: V137 = 0x0
0x209: V138 = SHA3 0x0 0x40
0x20a: V139 = 0x0
0x20c: V140 = 0x100
0x20f: V141 = EXP 0x100 0x0
0x211: V142 = S[V138]
0x213: V143 = 0xff
0x215: V144 = MUL 0xff 0x1
0x216: V145 = NOT 0xff
0x217: V146 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V142
0x21a: V147 = ISZERO 0x1
0x21b: V148 = ISZERO 0x0
0x21c: V149 = MUL 0x1 0x1
0x21d: V150 = OR 0x1 V146
0x21f: S[V138] = V150
0x223: V151 = 0x1
0x225: V152 = ADD 0x1 S5
0x229: V153 = 0x1aa
0x22c: JUMP 0x1aa
---
Entry stack: [V11, 0xb5, V40, V111, S5, 0x1, 0x0, 0x0, V40, S0]
Stack pops: 6
Stack additions: [V152]
Exit stack: [V11, 0xb5, V40, V111, V152]

================================

Block 0x22d
[0x22d:0x231]
---
Predecessors: [0x1aa]
Successors: [0xb5]
---
0x22d JUMPDEST
0x22e POP
0x22f POP
0x230 POP
0x231 JUMP
---
0x22d: JUMPDEST 
0x231: JUMP 0xb5
---
Entry stack: [V11, 0xb5, V40, V111, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x232
[0x232:0x287]
---
Predecessors: [0xc3]
Successors: [0x288, 0x28c]
---
0x232 JUMPDEST
0x233 PUSH1 0x0
0x235 DUP1
0x236 PUSH1 0x0
0x238 DUP1
0x239 CALLER
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 AND
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b SWAP1
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 PUSH1 0x0
0x273 SHA3
0x274 PUSH1 0x0
0x276 SWAP1
0x277 SLOAD
0x278 SWAP1
0x279 PUSH2 0x100
0x27c EXP
0x27d SWAP1
0x27e DIV
0x27f PUSH1 0xff
0x281 AND
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x232: JUMPDEST 
0x233: V154 = 0x0
0x236: V155 = 0x0
0x239: V156 = CALLER
0x23a: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x250: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x267: M[0x0] = V160
0x268: V161 = 0x20
0x26a: V162 = ADD 0x20 0x0
0x26d: M[0x20] = 0x0
0x26e: V163 = 0x20
0x270: V164 = ADD 0x20 0x20
0x271: V165 = 0x0
0x273: V166 = SHA3 0x0 0x40
0x274: V167 = 0x0
0x277: V168 = S[V166]
0x279: V169 = 0x100
0x27c: V170 = EXP 0x100 0x0
0x27e: V171 = DIV V168 0x1
0x27f: V172 = 0xff
0x281: V173 = AND 0xff V171
0x282: V174 = ISZERO V173
0x283: V175 = ISZERO V174
0x284: V176 = 0x28c
0x287: JUMPI 0x28c V175
---
Entry stack: [V11, 0x145, V60, V75, V83]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x145, V60, V75, V83, 0x0, 0x0]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x232]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V177 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x145, V60, V75, V83, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, V60, V75, V83, 0x0, 0x0]

================================

Block 0x28c
[0x28c:0x294]
---
Predecessors: [0x232]
Successors: [0x295]
---
0x28c JUMPDEST
0x28d DUP4
0x28e MLOAD
0x28f SWAP2
0x290 POP
0x291 PUSH1 0x0
0x293 SWAP1
0x294 POP
---
0x28c: JUMPDEST 
0x28e: V178 = M[V75]
0x291: V179 = 0x0
---
Entry stack: [V11, 0x145, V60, V75, V83, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V178, 0x0]
Exit stack: [V11, 0x145, V60, V75, V83, V178, 0x0]

================================

Block 0x295
[0x295:0x29d]
---
Predecessors: [0x28c, 0x2c7]
Successors: [0x29e, 0x35d]
---
0x295 JUMPDEST
0x296 DUP2
0x297 DUP2
0x298 LT
0x299 ISZERO
0x29a PUSH2 0x35d
0x29d JUMPI
---
0x295: JUMPDEST 
0x298: V180 = LT S0 V178
0x299: V181 = ISZERO V180
0x29a: V182 = 0x35d
0x29d: JUMPI 0x35d V181
---
Entry stack: [V11, 0x145, V60, V75, V83, V178, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x145, V60, V75, V83, V178, S0]

================================

Block 0x29e
[0x29e:0x2c5]
---
Predecessors: [0x295]
Successors: [0x2c6, 0x2c7]
---
0x29e DUP5
0x29f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b4 AND
0x2b5 PUSH4 0xa9059cbb
0x2ba DUP6
0x2bb DUP4
0x2bc DUP2
0x2bd MLOAD
0x2be DUP2
0x2bf LT
0x2c0 ISZERO
0x2c1 ISZERO
0x2c2 PUSH2 0x2c7
0x2c5 JUMPI
---
0x29f: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b4: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x2b5: V185 = 0xa9059cbb
0x2bd: V186 = M[V75]
0x2bf: V187 = LT S0 V186
0x2c0: V188 = ISZERO V187
0x2c1: V189 = ISZERO V188
0x2c2: V190 = 0x2c7
0x2c5: JUMPI 0x2c7 V189
---
Entry stack: [V11, 0x145, V60, V75, V83, V178, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V184, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x145, V60, V75, V83, V178, S0, V184, 0xa9059cbb, V75, S0]

================================

Block 0x2c6
[0x2c6:0x2c6]
---
Predecessors: [0x29e]
Successors: []
---
0x2c6 INVALID
---
0x2c6: INVALID 
---
Entry stack: [V11, 0x145, V60, V75, V83, V178, S4, V184, 0xa9059cbb, V75, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, V60, V75, V83, V178, S4, V184, 0xa9059cbb, V75, S0]

================================

Block 0x2c7
[0x2c7:0x35c]
---
Predecessors: [0x29e]
Successors: [0x295]
---
0x2c7 JUMPDEST
0x2c8 SWAP1
0x2c9 PUSH1 0x20
0x2cb ADD
0x2cc SWAP1
0x2cd PUSH1 0x20
0x2cf MUL
0x2d0 ADD
0x2d1 MLOAD
0x2d2 DUP6
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP4
0x2d7 PUSH4 0xffffffff
0x2dc AND
0x2dd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2fb MUL
0x2fc DUP2
0x2fd MSTORE
0x2fe PUSH1 0x4
0x300 ADD
0x301 DUP1
0x302 DUP4
0x303 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x318 AND
0x319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32e AND
0x32f DUP2
0x330 MSTORE
0x331 PUSH1 0x20
0x333 ADD
0x334 DUP3
0x335 DUP2
0x336 MSTORE
0x337 PUSH1 0x20
0x339 ADD
0x33a SWAP3
0x33b POP
0x33c POP
0x33d POP
0x33e PUSH1 0x0
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 DUP4
0x345 SUB
0x346 DUP2
0x347 PUSH1 0x0
0x349 DUP8
0x34a GAS
0x34b CALL
0x34c SWAP3
0x34d POP
0x34e POP
0x34f POP
0x350 POP
0x351 DUP1
0x352 DUP1
0x353 PUSH1 0x1
0x355 ADD
0x356 SWAP2
0x357 POP
0x358 POP
0x359 PUSH2 0x295
0x35c JUMP
---
0x2c7: JUMPDEST 
0x2c9: V191 = 0x20
0x2cb: V192 = ADD 0x20 V75
0x2cd: V193 = 0x20
0x2cf: V194 = MUL 0x20 S0
0x2d0: V195 = ADD V194 V192
0x2d1: V196 = M[V195]
0x2d3: V197 = 0x40
0x2d5: V198 = M[0x40]
0x2d7: V199 = 0xffffffff
0x2dc: V200 = AND 0xffffffff 0xa9059cbb
0x2dd: V201 = 0x100000000000000000000000000000000000000000000000000000000
0x2fb: V202 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2fd: M[V198] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2fe: V203 = 0x4
0x300: V204 = ADD 0x4 V198
0x303: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x318: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x319: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x330: M[V204] = V208
0x331: V209 = 0x20
0x333: V210 = ADD 0x20 V204
0x336: M[V210] = V83
0x337: V211 = 0x20
0x339: V212 = ADD 0x20 V210
0x33e: V213 = 0x0
0x340: V214 = 0x40
0x342: V215 = M[0x40]
0x345: V216 = SUB V212 V215
0x347: V217 = 0x0
0x34a: V218 = GAS
0x34b: V219 = CALL V218 V184 0x0 V215 V216 V215 0x0
0x353: V220 = 0x1
0x355: V221 = ADD 0x1 S4
0x359: V222 = 0x295
0x35c: JUMP 0x295
---
Entry stack: [V11, 0x145, V60, V75, V83, V178, S4, V184, 0xa9059cbb, V75, S0]
Stack pops: 7
Stack additions: [S6, S5, V221]
Exit stack: [V11, 0x145, V60, V75, V83, V178, V221]

================================

Block 0x35d
[0x35d:0x363]
---
Predecessors: [0x295]
Successors: [0x145]
---
0x35d JUMPDEST
0x35e POP
0x35f POP
0x360 POP
0x361 POP
0x362 POP
0x363 JUMP
---
0x35d: JUMPDEST 
0x363: JUMP 0x145
---
Entry stack: [V11, 0x145, V60, V75, V83, V178, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x364
[0x364:0x38f]
---
Predecessors: []
Successors: []
---
0x364 STOP
0x365 LOG1
0x366 PUSH6 0x627a7a723058
0x36d SHA3
0x36e SWAP8
0x36f MISSING 0xc5
0x370 MISSING 0xb0
0x371 MISSING 0xc6
0x372 MISSING 0xa6
0x373 SGT
0x374 MISSING 0xc6
0x375 MISSING 0x5c
0x376 MISSING 0x1f
0x377 PUSH15 0xdcc0989866e4b88e9cc78e40610002
0x387 MUL
0x388 MISSING 0xb2
0x389 MISSING 0xc
0x38a MISSING 0xde
0x38b MISSING 0x47
0x38c DUP6
0x38d MISSING 0xaf
0x38e STOP
0x38f MISSING 0x29
---
0x364: STOP 
0x365: LOG S0 S1 S2
0x366: V223 = 0x627a7a723058
0x36d: V224 = SHA3 0x627a7a723058 S3
0x36f: MISSING 0xc5
0x370: MISSING 0xb0
0x371: MISSING 0xc6
0x372: MISSING 0xa6
0x373: V225 = SGT S0 S1
0x374: MISSING 0xc6
0x375: MISSING 0x5c
0x376: MISSING 0x1f
0x377: V226 = 0xdcc0989866e4b88e9cc78e40610002
0x387: V227 = MUL 0xdcc0989866e4b88e9cc78e40610002 S0
0x388: MISSING 0xb2
0x389: MISSING 0xc
0x38a: MISSING 0xde
0x38b: MISSING 0x47
0x38d: MISSING 0xaf
0x38e: STOP 
0x38f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, S4, S5, S6, S7, S8, S9, S10, V224, V225, V227, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x451ac008
Entry block: 0x51
Exit block: 0x1c4
Body: 0x51, 0x59, 0x5d, 0xb5, 0x147, 0x19d, 0x1a1, 0x1aa, 0x1b3, 0x1c4, 0x1c5, 0x22d

Function 1:
Public function signature: 0xdaac00f0
Entry block: 0xb7
Exit block: 0x145
Body: 0xb7, 0xbf, 0xc3, 0x145, 0x232, 0x288, 0x28c, 0x295, 0x29e, 0x2c6, 0x2c7, 0x35d

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

