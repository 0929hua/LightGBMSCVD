Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x73]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x73
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x73
0x4b: JUMPI 0x73 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xca]
---
0x4c DUP1
0x4d PUSH4 0xb6fa3b5a
0x52 EQ
0x53 PUSH2 0xca
0x56 JUMPI
---
0x4d: V18 = 0xb6fa3b5a
0x52: V19 = EQ 0xb6fa3b5a V11
0x53: V20 = 0xca
0x56: JUMPI 0xca V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd, 0x278]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S0]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V147, V150, V153, 0x54, V147, V150, S0, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S1, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V147, V150, V153, 0x54, V147, V150, S1, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x114]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x114
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x114
0x70: JUMP 0x114
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S1, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V147, V150, V153, 0x54, V147, V150, S1, 0x71]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: [0x1cc]
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V147, V150, V153, 0x54, V147, V150, S0]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0x41]
Successors: [0x7b, 0x7f]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x73: JUMPDEST 
0x74: V28 = CALLVALUE
0x76: V29 = ISZERO V28
0x77: V30 = 0x7f
0x7a: JUMPI 0x7f V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x73]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V31 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7f
[0x7f:0x87]
---
Predecessors: [0x73]
Successors: [0x1cf]
---
0x7f JUMPDEST
0x80 POP
0x81 PUSH2 0x88
0x84 PUSH2 0x1cf
0x87 JUMP
---
0x7f: JUMPDEST 
0x81: V32 = 0x88
0x84: V33 = 0x1cf
0x87: JUMP 0x1cf
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x88]
Exit stack: [V11, 0x88]

================================

Block 0x88
[0x88:0xc9]
---
Predecessors: [0x1cf]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d DUP3
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0x88: JUMPDEST 
0x89: V34 = 0x40
0x8b: V35 = M[0x40]
0x8e: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0xa4: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbb: M[V35] = V39
0xbc: V40 = 0x20
0xbe: V41 = ADD 0x20 V35
0xc2: V42 = 0x40
0xc4: V43 = M[0x40]
0xc7: V44 = SUB V41 V43
0xc9: RETURN V43 V44
---
Entry stack: [V11, 0x88, V109]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x88]

================================

Block 0xca
[0xca:0x111]
---
Predecessors: [0x4c]
Successors: [0x1f4]
---
0xca JUMPDEST
0xcb PUSH2 0x112
0xce PUSH1 0x4
0xd0 DUP1
0xd1 CALLDATASIZE
0xd2 SUB
0xd3 DUP2
0xd4 ADD
0xd5 SWAP1
0xd6 DUP1
0xd7 DUP1
0xd8 CALLDATALOAD
0xd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee AND
0xef SWAP1
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP1
0xf4 SWAP3
0xf5 SWAP2
0xf6 SWAP1
0xf7 DUP1
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe SWAP3
0xff SWAP2
0x100 SWAP1
0x101 DUP1
0x102 CALLDATALOAD
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 SWAP3
0x109 SWAP2
0x10a SWAP1
0x10b POP
0x10c POP
0x10d POP
0x10e PUSH2 0x1f4
0x111 JUMP
---
0xca: JUMPDEST 
0xcb: V45 = 0x112
0xce: V46 = 0x4
0xd1: V47 = CALLDATASIZE
0xd2: V48 = SUB V47 0x4
0xd4: V49 = ADD 0x4 V48
0xd8: V50 = CALLDATALOAD 0x4
0xd9: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xee: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xf0: V53 = 0x20
0xf2: V54 = ADD 0x20 0x4
0xf8: V55 = CALLDATALOAD 0x24
0xfa: V56 = 0x20
0xfc: V57 = ADD 0x20 0x24
0x102: V58 = CALLDATALOAD 0x44
0x104: V59 = 0x20
0x106: V60 = ADD 0x20 0x44
0x10e: V61 = 0x1f4
0x111: JUMP 0x1f4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x112, V52, V55, V58]
Exit stack: [V11, 0x112, V52, V55, V58]

================================

Block 0x112
[0x112:0x113]
---
Predecessors: [0x25f]
Successors: []
---
0x112 JUMPDEST
0x113 STOP
---
0x112: JUMPDEST 
0x113: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x114
[0x114:0x16a]
---
Predecessors: [0x68]
Successors: [0x16b, 0x16f]
---
0x114 JUMPDEST
0x115 PUSH1 0x0
0x117 DUP1
0x118 SWAP1
0x119 SLOAD
0x11a SWAP1
0x11b PUSH2 0x100
0x11e EXP
0x11f SWAP1
0x120 DIV
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d CALLER
0x14e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x163 AND
0x164 EQ
0x165 ISZERO
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x114: JUMPDEST 
0x115: V62 = 0x0
0x119: V63 = S[0x0]
0x11b: V64 = 0x100
0x11e: V65 = EXP 0x100 0x0
0x120: V66 = DIV V63 0x1
0x121: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x137: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x14d: V71 = CALLER
0x14e: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x163: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x164: V74 = EQ V73 V70
0x165: V75 = ISZERO V74
0x166: V76 = ISZERO V75
0x167: V77 = 0x16f
0x16a: JUMPI 0x16f V76
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S1, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V147, V150, V153, 0x54, V147, V150, S1, 0x71]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x114]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V78 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S1, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V147, V150, V153, 0x54, V147, V150, S1, 0x71]

================================

Block 0x16f
[0x16f:0x1c2]
---
Predecessors: [0x114]
Successors: [0x1c3, 0x1cc]
---
0x16f JUMPDEST
0x170 CALLER
0x171 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x186 AND
0x187 PUSH2 0x8fc
0x18a ADDRESS
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 BALANCE
0x1a2 SWAP1
0x1a3 DUP2
0x1a4 ISZERO
0x1a5 MUL
0x1a6 SWAP1
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa PUSH1 0x0
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 DUP4
0x1b1 SUB
0x1b2 DUP2
0x1b3 DUP6
0x1b4 DUP9
0x1b5 DUP9
0x1b6 CALL
0x1b7 SWAP4
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc ISZERO
0x1bd DUP1
0x1be ISZERO
0x1bf PUSH2 0x1cc
0x1c2 JUMPI
---
0x16f: JUMPDEST 
0x170: V79 = CALLER
0x171: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x186: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x187: V82 = 0x8fc
0x18a: V83 = ADDRESS
0x18b: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a1: V86 = BALANCE V85
0x1a4: V87 = ISZERO V86
0x1a5: V88 = MUL V87 0x8fc
0x1a7: V89 = 0x40
0x1a9: V90 = M[0x40]
0x1aa: V91 = 0x0
0x1ac: V92 = 0x40
0x1ae: V93 = M[0x40]
0x1b1: V94 = SUB V90 V93
0x1b6: V95 = CALL V88 V81 V86 V93 V94 V93 0x0
0x1bc: V96 = ISZERO V95
0x1be: V97 = ISZERO V96
0x1bf: V98 = 0x1cc
0x1c2: JUMPI 0x1cc V97
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S1, 0x71]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V147, V150, V153, 0x54, V147, V150, S1, 0x71, V96]

================================

Block 0x1c3
[0x1c3:0x1cb]
---
Predecessors: [0x16f]
Successors: []
---
0x1c3 RETURNDATASIZE
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 RETURNDATACOPY
0x1c8 RETURNDATASIZE
0x1c9 PUSH1 0x0
0x1cb REVERT
---
0x1c3: V99 = RETURNDATASIZE
0x1c4: V100 = 0x0
0x1c7: RETURNDATACOPY 0x0 0x0 V99
0x1c8: V101 = RETURNDATASIZE
0x1c9: V102 = 0x0
0x1cb: REVERT 0x0 V101
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S2, 0x71, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V147, V150, V153, 0x54, V147, V150, S2, 0x71, V96]

================================

Block 0x1cc
[0x1cc:0x1ce]
---
Predecessors: [0x16f]
Successors: [0x71]
---
0x1cc JUMPDEST
0x1cd POP
0x1ce JUMP
---
0x1cc: JUMPDEST 
0x1ce: JUMP 0x71
---
Entry stack: [V147, V150, V153, 0x54, V147, V150, S2, 0x71, V96]
Stack pops: 2
Stack additions: []
Exit stack: [V147, V150, V153, 0x54, V147, V150, S2]

================================

Block 0x1cf
[0x1cf:0x1f3]
---
Predecessors: [0x7f]
Successors: [0x88]
---
0x1cf JUMPDEST
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 SWAP1
0x1d4 SLOAD
0x1d5 SWAP1
0x1d6 PUSH2 0x100
0x1d9 EXP
0x1da SWAP1
0x1db DIV
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 DUP2
0x1f3 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V103 = 0x0
0x1d4: V104 = S[0x0]
0x1d6: V105 = 0x100
0x1d9: V106 = EXP 0x100 0x0
0x1db: V107 = DIV V104 0x1
0x1dc: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1f3: JUMP 0x88
---
Entry stack: [V11, 0x88]
Stack pops: 1
Stack additions: [S0, V109]
Exit stack: [V11, 0x88, V109]

================================

Block 0x1f4
[0x1f4:0x1ff]
---
Predecessors: [0xca]
Successors: [0x268]
---
0x1f4 JUMPDEST
0x1f5 DUP2
0x1f6 DUP4
0x1f7 DUP4
0x1f8 DUP4
0x1f9 PUSH2 0x200
0x1fc PUSH2 0x268
0x1ff JUMP
---
0x1f4: JUMPDEST 
0x1f9: V110 = 0x200
0x1fc: V111 = 0x268
0x1ff: JUMP 0x268
---
Entry stack: [V11, 0x112, V52, V55, V58]
Stack pops: 3
Stack additions: [S2, S1, S0, S1, S2, S1, S0, 0x200]
Exit stack: [V11, 0x112, V52, V55, V58, V55, V52, V55, V58, 0x200]

================================

Block 0x200
[0x200:0x255]
---
Predecessors: [0x268]
Successors: [0x256, 0x25f]
---
0x200 JUMPDEST
0x201 DUP1
0x202 DUP5
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 AND
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f DUP2
0x230 MSTORE
0x231 PUSH1 0x20
0x233 ADD
0x234 DUP4
0x235 DUP2
0x236 MSTORE
0x237 PUSH1 0x20
0x239 ADD
0x23a DUP3
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP4
0x241 POP
0x242 POP
0x243 POP
0x244 POP
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 SWAP2
0x24a SUB
0x24b SWAP1
0x24c DUP3
0x24d CREATE
0x24e DUP1
0x24f ISZERO
0x250 DUP1
0x251 ISZERO
0x252 PUSH2 0x25f
0x255 JUMPI
---
0x200: JUMPDEST 
0x203: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x219: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x230: M[V137] = V115
0x231: V116 = 0x20
0x233: V117 = ADD 0x20 V137
0x236: M[V117] = V55
0x237: V118 = 0x20
0x239: V119 = ADD 0x20 V117
0x23c: M[V119] = V58
0x23d: V120 = 0x20
0x23f: V121 = ADD 0x20 V119
0x245: V122 = 0x40
0x247: V123 = M[0x40]
0x24a: V124 = SUB V121 V123
0x24d: V125 = CREATE V55 V123 V124
0x24f: V126 = ISZERO V125
0x251: V127 = ISZERO V126
0x252: V128 = 0x25f
0x255: JUMPI 0x25f V127
---
Entry stack: [V11, 0x112, V52, V55, V58, V55, V52, V55, V58, V137]
Stack pops: 5
Stack additions: [S4, V125, V126]
Exit stack: [V11, 0x112, V52, V55, V58, V55, V125, V126]

================================

Block 0x256
[0x256:0x25e]
---
Predecessors: [0x200]
Successors: []
---
0x256 RETURNDATASIZE
0x257 PUSH1 0x0
0x259 DUP1
0x25a RETURNDATACOPY
0x25b RETURNDATASIZE
0x25c PUSH1 0x0
0x25e REVERT
---
0x256: V129 = RETURNDATASIZE
0x257: V130 = 0x0
0x25a: RETURNDATACOPY 0x0 0x0 V129
0x25b: V131 = RETURNDATASIZE
0x25c: V132 = 0x0
0x25e: REVERT 0x0 V131
---
Entry stack: [V11, 0x112, V52, V55, V58, V55, V125, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V52, V55, V58, V55, V125, V126]

================================

Block 0x25f
[0x25f:0x267]
---
Predecessors: [0x200]
Successors: [0x112]
---
0x25f JUMPDEST
0x260 POP
0x261 SWAP1
0x262 POP
0x263 POP
0x264 POP
0x265 POP
0x266 POP
0x267 JUMP
---
0x25f: JUMPDEST 
0x267: JUMP 0x112
---
Entry stack: [V11, 0x112, V52, V55, V58, V55, V125, V126]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x268
[0x268:0x277]
---
Predecessors: [0x1f4]
Successors: [0x200]
---
0x268 JUMPDEST
0x269 PUSH1 0x40
0x26b MLOAD
0x26c PUSH2 0xa07
0x26f DUP1
0x270 PUSH2 0x279
0x273 DUP4
0x274 CODECOPY
0x275 ADD
0x276 SWAP1
0x277 JUMP
---
0x268: JUMPDEST 
0x269: V133 = 0x40
0x26b: V134 = M[0x40]
0x26c: V135 = 0xa07
0x270: V136 = 0x279
0x274: CODECOPY V134 0x279 0xa07
0x275: V137 = ADD 0xa07 V134
0x277: JUMP 0x200
---
Entry stack: [V11, 0x112, V52, V55, V58, V55, V52, V55, V58, 0x200]
Stack pops: 1
Stack additions: [V137]
Exit stack: [V11, 0x112, V52, V55, V58, V55, V52, V55, V58, V137]

================================

Block 0x278
[0x278:0x2cc]
---
Predecessors: []
Successors: [0x5c]
---
0x278 STOP
0x279 PUSH1 0x80
0x27b PUSH1 0x40
0x27d MSTORE
0x27e PUSH1 0x40
0x280 MLOAD
0x281 PUSH1 0x60
0x283 DUP1
0x284 PUSH2 0xa07
0x287 DUP4
0x288 CODECOPY
0x289 DUP2
0x28a ADD
0x28b DUP1
0x28c PUSH1 0x40
0x28e MSTORE
0x28f DUP2
0x290 ADD
0x291 SWAP1
0x292 DUP1
0x293 DUP1
0x294 MLOAD
0x295 SWAP1
0x296 PUSH1 0x20
0x298 ADD
0x299 SWAP1
0x29a SWAP3
0x29b SWAP2
0x29c SWAP1
0x29d DUP1
0x29e MLOAD
0x29f SWAP1
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 SWAP1
0x2a4 SWAP3
0x2a5 SWAP2
0x2a6 SWAP1
0x2a7 DUP1
0x2a8 MLOAD
0x2a9 SWAP1
0x2aa PUSH1 0x20
0x2ac ADD
0x2ad SWAP1
0x2ae SWAP3
0x2af SWAP2
0x2b0 SWAP1
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 PUSH2 0x54
0x2b7 DUP4
0x2b8 DUP4
0x2b9 DUP4
0x2ba PUSH2 0x5c
0x2bd PUSH5 0x100000000
0x2c3 MUL
0x2c4 PUSH5 0x100000000
0x2ca SWAP1
0x2cb DIV
0x2cc JUMP
---
0x278: STOP 
0x279: V138 = 0x80
0x27b: V139 = 0x40
0x27d: M[0x40] = 0x80
0x27e: V140 = 0x40
0x280: V141 = M[0x40]
0x281: V142 = 0x60
0x284: V143 = 0xa07
0x288: CODECOPY V141 0xa07 0x60
0x28a: V144 = ADD V141 0x60
0x28c: V145 = 0x40
0x28e: M[0x40] = V144
0x290: V146 = ADD V141 V144
0x294: V147 = M[V141]
0x296: V148 = 0x20
0x298: V149 = ADD 0x20 V141
0x29e: V150 = M[V149]
0x2a0: V151 = 0x20
0x2a2: V152 = ADD 0x20 V149
0x2a8: V153 = M[V152]
0x2aa: V154 = 0x20
0x2ac: V155 = ADD 0x20 V152
0x2b4: V156 = 0x54
0x2ba: V157 = 0x5c
0x2bd: V158 = 0x100000000
0x2c3: V159 = MUL 0x100000000 0x5c
0x2c4: V160 = 0x100000000
0x2cb: V161 = DIV 0x5c00000000 0x100000000
0x2cc: JUMP 0x5c
---
Entry stack: []
Stack pops: 0
Stack additions: [V153, V150, V147, 0x54, V153, V150, V147]
Exit stack: []

================================

Block 0x2cd
[0x2cd:0x2fa]
---
Predecessors: []
Successors: [0x2fb]
---
0x2cd JUMPDEST
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 PUSH2 0x4ef
0x2d4 JUMP
0x2d5 JUMPDEST
0x2d6 PUSH1 0x0
0x2d8 PUSH2 0x76
0x2db DUP3
0x2dc PUSH2 0x17f
0x2df PUSH5 0x100000000
0x2e5 MUL
0x2e6 PUSH5 0x100000000
0x2ec SWAP1
0x2ed DIV
0x2ee JUMP
0x2ef JUMPDEST
0x2f0 SWAP1
0x2f1 POP
0x2f2 PUSH1 0x0
0x2f4 DUP2
0x2f5 GT
0x2f6 ISZERO
0x2f7 PUSH2 0x17a
0x2fa JUMPI
---
0x2cd: JUMPDEST 
0x2d1: V162 = 0x4ef
0x2d4: THROW 
0x2d5: JUMPDEST 
0x2d6: V163 = 0x0
0x2d8: V164 = 0x76
0x2dc: V165 = 0x17f
0x2df: V166 = 0x100000000
0x2e5: V167 = MUL 0x100000000 0x17f
0x2e6: V168 = 0x100000000
0x2ed: V169 = DIV 0x17f00000000 0x100000000
0x2ee: THROW 
0x2ef: JUMPDEST 
0x2f2: V170 = 0x0
0x2f5: V171 = GT S0 0x0
0x2f6: V172 = ISZERO V171
0x2f7: V173 = 0x17a
0x2fa: THROWI V172
---
Entry stack: []
Stack pops: 8
Stack additions: [S0]
Exit stack: []

================================

Block 0x2fb
[0x2fb:0x46d]
---
Predecessors: [0x2cd]
Successors: [0x46e]
---
0x2fb DUP4
0x2fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x311 AND
0x312 PUSH3 0x1e8480
0x316 DUP5
0x317 PUSH1 0x40
0x319 MLOAD
0x31a PUSH1 0x0
0x31c PUSH1 0x40
0x31e MLOAD
0x31f DUP1
0x320 DUP4
0x321 SUB
0x322 DUP2
0x323 DUP6
0x324 DUP9
0x325 DUP9
0x326 CALL
0x327 SWAP4
0x328 POP
0x329 POP
0x32a POP
0x32b POP
0x32c POP
0x32d DUP4
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP1
0x349 PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0x36a DUP2
0x36b MSTORE
0x36c POP
0x36d PUSH1 0xa
0x36f ADD
0x370 SWAP1
0x371 POP
0x372 PUSH1 0x40
0x374 MLOAD
0x375 DUP1
0x376 SWAP2
0x377 SUB
0x378 SWAP1
0x379 SHA3
0x37a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x398 SWAP1
0x399 DIV
0x39a PUSH1 0x40
0x39c MLOAD
0x39d DUP2
0x39e PUSH4 0xffffffff
0x3a3 AND
0x3a4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3c2 MUL
0x3c3 DUP2
0x3c4 MSTORE
0x3c5 PUSH1 0x4
0x3c7 ADD
0x3c8 PUSH1 0x0
0x3ca PUSH1 0x40
0x3cc MLOAD
0x3cd DUP1
0x3ce DUP4
0x3cf SUB
0x3d0 DUP2
0x3d1 PUSH1 0x0
0x3d3 DUP8
0x3d4 GAS
0x3d5 CALL
0x3d6 SWAP3
0x3d7 POP
0x3d8 POP
0x3d9 POP
0x3da POP
0x3db CALLER
0x3dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f1 AND
0x3f2 SELFDESTRUCT
0x3f3 JUMPDEST
0x3f4 PUSH1 0x0
0x3f6 DUP1
0x3f7 REVERT
0x3f8 JUMPDEST
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc PUSH2 0x3b4
0x3ff NUMBER
0x400 PUSH2 0x399
0x403 TIMESTAMP
0x404 ADDRESS
0x405 PUSH1 0x40
0x407 MLOAD
0x408 PUSH1 0x20
0x40a ADD
0x40b DUP1
0x40c DUP3
0x40d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x422 AND
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 PUSH13 0x1000000000000000000000000
0x447 MUL
0x448 DUP2
0x449 MSTORE
0x44a PUSH1 0x14
0x44c ADD
0x44d SWAP2
0x44e POP
0x44f POP
0x450 PUSH1 0x40
0x452 MLOAD
0x453 PUSH1 0x20
0x455 DUP2
0x456 DUP4
0x457 SUB
0x458 SUB
0x459 DUP2
0x45a MSTORE
0x45b SWAP1
0x45c PUSH1 0x40
0x45e MSTORE
0x45f PUSH1 0x40
0x461 MLOAD
0x462 DUP1
0x463 DUP3
0x464 DUP1
0x465 MLOAD
0x466 SWAP1
0x467 PUSH1 0x20
0x469 ADD
0x46a SWAP1
0x46b DUP1
0x46c DUP4
0x46d DUP4
---
0x2fc: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x311: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x312: V176 = 0x1e8480
0x317: V177 = 0x40
0x319: V178 = M[0x40]
0x31a: V179 = 0x0
0x31c: V180 = 0x40
0x31e: V181 = M[0x40]
0x321: V182 = SUB V178 V181
0x326: V183 = CALL 0x1e8480 V175 S2 V181 V182 V181 0x0
0x32e: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x344: V186 = 0x40
0x346: V187 = M[0x40]
0x349: V188 = 0x7769746864726177282900000000000000000000000000000000000000000000
0x36b: M[V187] = 0x7769746864726177282900000000000000000000000000000000000000000000
0x36d: V189 = 0xa
0x36f: V190 = ADD 0xa V187
0x372: V191 = 0x40
0x374: V192 = M[0x40]
0x377: V193 = SUB V190 V192
0x379: V194 = SHA3 V192 V193
0x37a: V195 = 0x100000000000000000000000000000000000000000000000000000000
0x399: V196 = DIV V194 0x100000000000000000000000000000000000000000000000000000000
0x39a: V197 = 0x40
0x39c: V198 = M[0x40]
0x39e: V199 = 0xffffffff
0x3a3: V200 = AND 0xffffffff V196
0x3a4: V201 = 0x100000000000000000000000000000000000000000000000000000000
0x3c2: V202 = MUL 0x100000000000000000000000000000000000000000000000000000000 V200
0x3c4: M[V198] = V202
0x3c5: V203 = 0x4
0x3c7: V204 = ADD 0x4 V198
0x3c8: V205 = 0x0
0x3ca: V206 = 0x40
0x3cc: V207 = M[0x40]
0x3cf: V208 = SUB V204 V207
0x3d1: V209 = 0x0
0x3d4: V210 = GAS
0x3d5: V211 = CALL V210 V185 0x0 V207 V208 V207 0x0
0x3db: V212 = CALLER
0x3dc: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x3f2: SELFDESTRUCT V214
0x3f3: JUMPDEST 
0x3f4: V215 = 0x0
0x3f7: REVERT 0x0 0x0
0x3f8: JUMPDEST 
0x3f9: V216 = 0x0
0x3fc: V217 = 0x3b4
0x3ff: V218 = NUMBER
0x400: V219 = 0x399
0x403: V220 = TIMESTAMP
0x404: V221 = ADDRESS
0x405: V222 = 0x40
0x407: V223 = M[0x40]
0x408: V224 = 0x20
0x40a: V225 = ADD 0x20 V223
0x40d: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x422: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x423: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x439: V230 = 0x1000000000000000000000000
0x447: V231 = MUL 0x1000000000000000000000000 V229
0x449: M[V225] = V231
0x44a: V232 = 0x14
0x44c: V233 = ADD 0x14 V225
0x450: V234 = 0x40
0x452: V235 = M[0x40]
0x453: V236 = 0x20
0x457: V237 = SUB V233 V235
0x458: V238 = SUB V237 0x20
0x45a: M[V235] = V238
0x45c: V239 = 0x40
0x45e: M[0x40] = V233
0x45f: V240 = 0x40
0x461: V241 = M[0x40]
0x465: V242 = M[V235]
0x467: V243 = 0x20
0x469: V244 = ADD 0x20 V235
---
Entry stack: [S0]
Stack pops: 8
Stack additions: [V244, V241, V242, V242, V244, V241, V241, V235, V220, 0x399, V218, 0x3b4, 0x0, 0x0]
Exit stack: []

================================

Block 0x46e
[0x46e:0x478]
---
Predecessors: [0x2fb]
Successors: [0x479]
---
0x46e JUMPDEST
0x46f PUSH1 0x20
0x471 DUP4
0x472 LT
0x473 ISZERO
0x474 ISZERO
0x475 PUSH2 0x21a
0x478 JUMPI
---
0x46e: JUMPDEST 
0x46f: V245 = 0x20
0x472: V246 = LT V242 0x20
0x473: V247 = ISZERO V246
0x474: V248 = ISZERO V247
0x475: V249 = 0x21a
0x478: THROWI V248
---
Entry stack: [0x0, 0x0, 0x3b4, V218, 0x399, V220, V235, V241, V241, V244, V242, V242, V241, V244]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [0x0, 0x0, 0x3b4, V218, 0x399, V220, V235, V241, V241, V244, V242, V242, V241, V244]

================================

Block 0x479
[0x479:0x4cb]
---
Predecessors: [0x46e]
Successors: [0x4cc]
---
0x479 DUP1
0x47a MLOAD
0x47b DUP3
0x47c MSTORE
0x47d PUSH1 0x20
0x47f DUP3
0x480 ADD
0x481 SWAP2
0x482 POP
0x483 PUSH1 0x20
0x485 DUP2
0x486 ADD
0x487 SWAP1
0x488 POP
0x489 PUSH1 0x20
0x48b DUP4
0x48c SUB
0x48d SWAP3
0x48e POP
0x48f PUSH2 0x1f5
0x492 JUMP
0x493 JUMPDEST
0x494 PUSH1 0x1
0x496 DUP4
0x497 PUSH1 0x20
0x499 SUB
0x49a PUSH2 0x100
0x49d EXP
0x49e SUB
0x49f DUP1
0x4a0 NOT
0x4a1 DUP3
0x4a2 MLOAD
0x4a3 AND
0x4a4 DUP2
0x4a5 DUP5
0x4a6 MLOAD
0x4a7 AND
0x4a8 DUP1
0x4a9 DUP3
0x4aa OR
0x4ab DUP6
0x4ac MSTORE
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 POP
0x4b1 POP
0x4b2 POP
0x4b3 SWAP1
0x4b4 POP
0x4b5 ADD
0x4b6 SWAP2
0x4b7 POP
0x4b8 POP
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd SWAP2
0x4be SUB
0x4bf SWAP1
0x4c0 SHA3
0x4c1 PUSH1 0x1
0x4c3 SWAP1
0x4c4 DIV
0x4c5 DUP2
0x4c6 ISZERO
0x4c7 ISZERO
0x4c8 PUSH2 0x254
0x4cb JUMPI
---
0x47a: V250 = M[V244]
0x47c: M[V241] = V250
0x47d: V251 = 0x20
0x480: V252 = ADD V241 0x20
0x483: V253 = 0x20
0x486: V254 = ADD V244 0x20
0x489: V255 = 0x20
0x48c: V256 = SUB V242 0x20
0x48f: V257 = 0x1f5
0x492: THROW 
0x493: JUMPDEST 
0x494: V258 = 0x1
0x497: V259 = 0x20
0x499: V260 = SUB 0x20 S2
0x49a: V261 = 0x100
0x49d: V262 = EXP 0x100 V260
0x49e: V263 = SUB V262 0x1
0x4a0: V264 = NOT V263
0x4a2: V265 = M[S0]
0x4a3: V266 = AND V265 V264
0x4a6: V267 = M[S1]
0x4a7: V268 = AND V267 V263
0x4aa: V269 = OR V266 V268
0x4ac: M[S1] = V269
0x4b5: V270 = ADD S3 S5
0x4b9: V271 = 0x40
0x4bb: V272 = M[0x40]
0x4be: V273 = SUB V270 V272
0x4c0: V274 = SHA3 V272 V273
0x4c1: V275 = 0x1
0x4c4: V276 = DIV V274 0x1
0x4c6: V277 = ISZERO S8
0x4c7: V278 = ISZERO V277
0x4c8: V279 = 0x254
0x4cb: THROWI V278
---
Entry stack: [0x0, 0x0, 0x3b4, V218, 0x399, V220, V235, V241, V241, V244, V242, V242, V241, V244]
Stack pops: 3
Stack additions: [V276, S8]
Exit stack: []

================================

Block 0x4cc
[0x4cc:0x540]
---
Predecessors: [0x479]
Successors: [0x541]
---
0x4cc INVALID
0x4cd JUMPDEST
0x4ce DIV
0x4cf PUSH2 0x37e
0x4d2 GASLIMIT
0x4d3 PUSH2 0x363
0x4d6 TIMESTAMP
0x4d7 COINBASE
0x4d8 PUSH1 0x40
0x4da MLOAD
0x4db PUSH1 0x20
0x4dd ADD
0x4de DUP1
0x4df DUP3
0x4e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f5 AND
0x4f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50b AND
0x50c PUSH13 0x1000000000000000000000000
0x51a MUL
0x51b DUP2
0x51c MSTORE
0x51d PUSH1 0x14
0x51f ADD
0x520 SWAP2
0x521 POP
0x522 POP
0x523 PUSH1 0x40
0x525 MLOAD
0x526 PUSH1 0x20
0x528 DUP2
0x529 DUP4
0x52a SUB
0x52b SUB
0x52c DUP2
0x52d MSTORE
0x52e SWAP1
0x52f PUSH1 0x40
0x531 MSTORE
0x532 PUSH1 0x40
0x534 MLOAD
0x535 DUP1
0x536 DUP3
0x537 DUP1
0x538 MLOAD
0x539 SWAP1
0x53a PUSH1 0x20
0x53c ADD
0x53d SWAP1
0x53e DUP1
0x53f DUP4
0x540 DUP4
---
0x4cc: INVALID 
0x4cd: JUMPDEST 
0x4ce: V280 = DIV S0 S1
0x4cf: V281 = 0x37e
0x4d2: V282 = GASLIMIT
0x4d3: V283 = 0x363
0x4d6: V284 = TIMESTAMP
0x4d7: V285 = COINBASE
0x4d8: V286 = 0x40
0x4da: V287 = M[0x40]
0x4db: V288 = 0x20
0x4dd: V289 = ADD 0x20 V287
0x4e0: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f5: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x4f6: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x50c: V294 = 0x1000000000000000000000000
0x51a: V295 = MUL 0x1000000000000000000000000 V293
0x51c: M[V289] = V295
0x51d: V296 = 0x14
0x51f: V297 = ADD 0x14 V289
0x523: V298 = 0x40
0x525: V299 = M[0x40]
0x526: V300 = 0x20
0x52a: V301 = SUB V297 V299
0x52b: V302 = SUB V301 0x20
0x52d: M[V299] = V302
0x52f: V303 = 0x40
0x531: M[0x40] = V297
0x532: V304 = 0x40
0x534: V305 = M[0x40]
0x538: V306 = M[V299]
0x53a: V307 = 0x20
0x53c: V308 = ADD 0x20 V299
---
Entry stack: [S1, V276]
Stack pops: 0
Stack additions: [V308, V305, V306, V306, V308, V305, V305, V299, V284, 0x363, V282, 0x37e, V280]
Exit stack: []

================================

Block 0x541
[0x541:0x54b]
---
Predecessors: [0x4cc]
Successors: [0x54c]
---
0x541 JUMPDEST
0x542 PUSH1 0x20
0x544 DUP4
0x545 LT
0x546 ISZERO
0x547 ISZERO
0x548 PUSH2 0x2ed
0x54b JUMPI
---
0x541: JUMPDEST 
0x542: V309 = 0x20
0x545: V310 = LT V306 0x20
0x546: V311 = ISZERO V310
0x547: V312 = ISZERO V311
0x548: V313 = 0x2ed
0x54b: THROWI V312
---
Entry stack: [V280, 0x37e, V282, 0x363, V284, V299, V305, V305, V308, V306, V306, V305, V308]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V280, 0x37e, V282, 0x363, V284, V299, V305, V305, V308, V306, V306, V305, V308]

================================

Block 0x54c
[0x54c:0x59e]
---
Predecessors: [0x541]
Successors: [0x59f]
---
0x54c DUP1
0x54d MLOAD
0x54e DUP3
0x54f MSTORE
0x550 PUSH1 0x20
0x552 DUP3
0x553 ADD
0x554 SWAP2
0x555 POP
0x556 PUSH1 0x20
0x558 DUP2
0x559 ADD
0x55a SWAP1
0x55b POP
0x55c PUSH1 0x20
0x55e DUP4
0x55f SUB
0x560 SWAP3
0x561 POP
0x562 PUSH2 0x2c8
0x565 JUMP
0x566 JUMPDEST
0x567 PUSH1 0x1
0x569 DUP4
0x56a PUSH1 0x20
0x56c SUB
0x56d PUSH2 0x100
0x570 EXP
0x571 SUB
0x572 DUP1
0x573 NOT
0x574 DUP3
0x575 MLOAD
0x576 AND
0x577 DUP2
0x578 DUP5
0x579 MLOAD
0x57a AND
0x57b DUP1
0x57c DUP3
0x57d OR
0x57e DUP6
0x57f MSTORE
0x580 POP
0x581 POP
0x582 POP
0x583 POP
0x584 POP
0x585 POP
0x586 SWAP1
0x587 POP
0x588 ADD
0x589 SWAP2
0x58a POP
0x58b POP
0x58c PUSH1 0x40
0x58e MLOAD
0x58f DUP1
0x590 SWAP2
0x591 SUB
0x592 SWAP1
0x593 SHA3
0x594 PUSH1 0x1
0x596 SWAP1
0x597 DIV
0x598 DUP2
0x599 ISZERO
0x59a ISZERO
0x59b PUSH2 0x327
0x59e JUMPI
---
0x54d: V314 = M[V308]
0x54f: M[V305] = V314
0x550: V315 = 0x20
0x553: V316 = ADD V305 0x20
0x556: V317 = 0x20
0x559: V318 = ADD V308 0x20
0x55c: V319 = 0x20
0x55f: V320 = SUB V306 0x20
0x562: V321 = 0x2c8
0x565: THROW 
0x566: JUMPDEST 
0x567: V322 = 0x1
0x56a: V323 = 0x20
0x56c: V324 = SUB 0x20 S2
0x56d: V325 = 0x100
0x570: V326 = EXP 0x100 V324
0x571: V327 = SUB V326 0x1
0x573: V328 = NOT V327
0x575: V329 = M[S0]
0x576: V330 = AND V329 V328
0x579: V331 = M[S1]
0x57a: V332 = AND V331 V327
0x57d: V333 = OR V330 V332
0x57f: M[S1] = V333
0x588: V334 = ADD S3 S5
0x58c: V335 = 0x40
0x58e: V336 = M[0x40]
0x591: V337 = SUB V334 V336
0x593: V338 = SHA3 V336 V337
0x594: V339 = 0x1
0x597: V340 = DIV V338 0x1
0x599: V341 = ISZERO S8
0x59a: V342 = ISZERO V341
0x59b: V343 = 0x327
0x59e: THROWI V342
---
Entry stack: [V280, 0x37e, V282, 0x363, V284, V299, V305, V305, V308, V306, V306, V305, V308]
Stack pops: 3
Stack additions: [V340, S8]
Exit stack: []

================================

Block 0x59f
[0x59f:0x65b]
---
Predecessors: [0x54c]
Successors: [0x65c]
---
0x59f INVALID
0x5a0 JUMPDEST
0x5a1 DIV
0x5a2 PUSH2 0x348
0x5a5 DIFFICULTY
0x5a6 TIMESTAMP
0x5a7 PUSH2 0x467
0x5aa PUSH5 0x100000000
0x5b0 MUL
0x5b1 PUSH2 0x455
0x5b4 OR
0x5b5 SWAP1
0x5b6 SWAP2
0x5b7 SWAP1
0x5b8 PUSH5 0x100000000
0x5be SWAP1
0x5bf DIV
0x5c0 JUMP
0x5c1 JUMPDEST
0x5c2 PUSH2 0x467
0x5c5 PUSH5 0x100000000
0x5cb MUL
0x5cc PUSH2 0x455
0x5cf OR
0x5d0 SWAP1
0x5d1 SWAP2
0x5d2 SWAP1
0x5d3 PUSH5 0x100000000
0x5d9 SWAP1
0x5da DIV
0x5db JUMP
0x5dc JUMPDEST
0x5dd PUSH2 0x467
0x5e0 PUSH5 0x100000000
0x5e6 MUL
0x5e7 PUSH2 0x455
0x5ea OR
0x5eb SWAP1
0x5ec SWAP2
0x5ed SWAP1
0x5ee PUSH5 0x100000000
0x5f4 SWAP1
0x5f5 DIV
0x5f6 JUMP
0x5f7 JUMPDEST
0x5f8 PUSH2 0x467
0x5fb PUSH5 0x100000000
0x601 MUL
0x602 PUSH2 0x455
0x605 OR
0x606 SWAP1
0x607 SWAP2
0x608 SWAP1
0x609 PUSH5 0x100000000
0x60f SWAP1
0x610 DIV
0x611 JUMP
0x612 JUMPDEST
0x613 PUSH2 0x467
0x616 PUSH5 0x100000000
0x61c MUL
0x61d PUSH2 0x455
0x620 OR
0x621 SWAP1
0x622 SWAP2
0x623 SWAP1
0x624 PUSH5 0x100000000
0x62a SWAP1
0x62b DIV
0x62c JUMP
0x62d JUMPDEST
0x62e PUSH1 0x40
0x630 MLOAD
0x631 PUSH1 0x20
0x633 ADD
0x634 DUP1
0x635 DUP3
0x636 DUP2
0x637 MSTORE
0x638 PUSH1 0x20
0x63a ADD
0x63b SWAP2
0x63c POP
0x63d POP
0x63e PUSH1 0x40
0x640 MLOAD
0x641 PUSH1 0x20
0x643 DUP2
0x644 DUP4
0x645 SUB
0x646 SUB
0x647 DUP2
0x648 MSTORE
0x649 SWAP1
0x64a PUSH1 0x40
0x64c MSTORE
0x64d PUSH1 0x40
0x64f MLOAD
0x650 DUP1
0x651 DUP3
0x652 DUP1
0x653 MLOAD
0x654 SWAP1
0x655 PUSH1 0x20
0x657 ADD
0x658 SWAP1
0x659 DUP1
0x65a DUP4
0x65b DUP4
---
0x59f: INVALID 
0x5a0: JUMPDEST 
0x5a1: V344 = DIV S0 S1
0x5a2: V345 = 0x348
0x5a5: V346 = DIFFICULTY
0x5a6: V347 = TIMESTAMP
0x5a7: V348 = 0x467
0x5aa: V349 = 0x100000000
0x5b0: V350 = MUL 0x100000000 0x467
0x5b1: V351 = 0x455
0x5b4: V352 = OR 0x455 0x46700000000
0x5b8: V353 = 0x100000000
0x5bf: V354 = DIV 0x46700000455 0x100000000
0x5c0: THROW 
0x5c1: JUMPDEST 
0x5c2: V355 = 0x467
0x5c5: V356 = 0x100000000
0x5cb: V357 = MUL 0x100000000 0x467
0x5cc: V358 = 0x455
0x5cf: V359 = OR 0x455 0x46700000000
0x5d3: V360 = 0x100000000
0x5da: V361 = DIV 0x46700000455 0x100000000
0x5db: THROW 
0x5dc: JUMPDEST 
0x5dd: V362 = 0x467
0x5e0: V363 = 0x100000000
0x5e6: V364 = MUL 0x100000000 0x467
0x5e7: V365 = 0x455
0x5ea: V366 = OR 0x455 0x46700000000
0x5ee: V367 = 0x100000000
0x5f5: V368 = DIV 0x46700000455 0x100000000
0x5f6: THROW 
0x5f7: JUMPDEST 
0x5f8: V369 = 0x467
0x5fb: V370 = 0x100000000
0x601: V371 = MUL 0x100000000 0x467
0x602: V372 = 0x455
0x605: V373 = OR 0x455 0x46700000000
0x609: V374 = 0x100000000
0x610: V375 = DIV 0x46700000455 0x100000000
0x611: THROW 
0x612: JUMPDEST 
0x613: V376 = 0x467
0x616: V377 = 0x100000000
0x61c: V378 = MUL 0x100000000 0x467
0x61d: V379 = 0x455
0x620: V380 = OR 0x455 0x46700000000
0x624: V381 = 0x100000000
0x62b: V382 = DIV 0x46700000455 0x100000000
0x62c: THROW 
0x62d: JUMPDEST 
0x62e: V383 = 0x40
0x630: V384 = M[0x40]
0x631: V385 = 0x20
0x633: V386 = ADD 0x20 V384
0x637: M[V386] = S0
0x638: V387 = 0x20
0x63a: V388 = ADD 0x20 V386
0x63e: V389 = 0x40
0x640: V390 = M[0x40]
0x641: V391 = 0x20
0x645: V392 = SUB V388 V390
0x646: V393 = SUB V392 0x20
0x648: M[V390] = V393
0x64a: V394 = 0x40
0x64c: M[0x40] = V388
0x64d: V395 = 0x40
0x64f: V396 = M[0x40]
0x653: V397 = M[V390]
0x655: V398 = 0x20
0x657: V399 = ADD 0x20 V390
---
Entry stack: [S1, V340]
Stack pops: 0
Stack additions: [V346, V347, 0x348, V344, S1, S0, S1, S0, S1, S0, S1, S0, V399, V396, V397, V397, V399, V396, V396, V390]
Exit stack: []

================================

Block 0x65c
[0x65c:0x666]
---
Predecessors: [0x59f]
Successors: [0x667]
---
0x65c JUMPDEST
0x65d PUSH1 0x20
0x65f DUP4
0x660 LT
0x661 ISZERO
0x662 ISZERO
0x663 PUSH2 0x408
0x666 JUMPI
---
0x65c: JUMPDEST 
0x65d: V400 = 0x20
0x660: V401 = LT V397 0x20
0x661: V402 = ISZERO V401
0x662: V403 = ISZERO V402
0x663: V404 = 0x408
0x666: THROWI V403
---
Entry stack: [V390, V396, V396, V399, V397, V397, V396, V399]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V390, V396, V396, V399, V397, V397, V396, V399]

================================

Block 0x667
[0x667:0x6c1]
---
Predecessors: [0x65c]
Successors: [0x6c2]
---
0x667 DUP1
0x668 MLOAD
0x669 DUP3
0x66a MSTORE
0x66b PUSH1 0x20
0x66d DUP3
0x66e ADD
0x66f SWAP2
0x670 POP
0x671 PUSH1 0x20
0x673 DUP2
0x674 ADD
0x675 SWAP1
0x676 POP
0x677 PUSH1 0x20
0x679 DUP4
0x67a SUB
0x67b SWAP3
0x67c POP
0x67d PUSH2 0x3e3
0x680 JUMP
0x681 JUMPDEST
0x682 PUSH1 0x1
0x684 DUP4
0x685 PUSH1 0x20
0x687 SUB
0x688 PUSH2 0x100
0x68b EXP
0x68c SUB
0x68d DUP1
0x68e NOT
0x68f DUP3
0x690 MLOAD
0x691 AND
0x692 DUP2
0x693 DUP5
0x694 MLOAD
0x695 AND
0x696 DUP1
0x697 DUP3
0x698 OR
0x699 DUP6
0x69a MSTORE
0x69b POP
0x69c POP
0x69d POP
0x69e POP
0x69f POP
0x6a0 POP
0x6a1 SWAP1
0x6a2 POP
0x6a3 ADD
0x6a4 SWAP2
0x6a5 POP
0x6a6 POP
0x6a7 PUSH1 0x40
0x6a9 MLOAD
0x6aa DUP1
0x6ab SWAP2
0x6ac SUB
0x6ad SWAP1
0x6ae SHA3
0x6af PUSH1 0x1
0x6b1 SWAP1
0x6b2 DIV
0x6b3 SWAP1
0x6b4 POP
0x6b5 DUP3
0x6b6 PUSH2 0x3e8
0x6b9 DUP1
0x6ba DUP4
0x6bb DUP2
0x6bc ISZERO
0x6bd ISZERO
0x6be PUSH2 0x44a
0x6c1 JUMPI
---
0x668: V405 = M[V399]
0x66a: M[V396] = V405
0x66b: V406 = 0x20
0x66e: V407 = ADD V396 0x20
0x671: V408 = 0x20
0x674: V409 = ADD V399 0x20
0x677: V410 = 0x20
0x67a: V411 = SUB V397 0x20
0x67d: V412 = 0x3e3
0x680: THROW 
0x681: JUMPDEST 
0x682: V413 = 0x1
0x685: V414 = 0x20
0x687: V415 = SUB 0x20 S2
0x688: V416 = 0x100
0x68b: V417 = EXP 0x100 V415
0x68c: V418 = SUB V417 0x1
0x68e: V419 = NOT V418
0x690: V420 = M[S0]
0x691: V421 = AND V420 V419
0x694: V422 = M[S1]
0x695: V423 = AND V422 V418
0x698: V424 = OR V421 V423
0x69a: M[S1] = V424
0x6a3: V425 = ADD S3 S5
0x6a7: V426 = 0x40
0x6a9: V427 = M[0x40]
0x6ac: V428 = SUB V425 V427
0x6ae: V429 = SHA3 V427 V428
0x6af: V430 = 0x1
0x6b2: V431 = DIV V429 0x1
0x6b6: V432 = 0x3e8
0x6bc: V433 = ISZERO 0x3e8
0x6bd: V434 = ISZERO 0x0
0x6be: V435 = 0x44a
0x6c1: THROWI 0x1
---
Entry stack: [V390, V396, V396, V399, V397, V397, V396, V399]
Stack pops: 3
Stack additions: [V431, 0x3e8, 0x3e8, S10, V431, S9, S10]
Exit stack: []

================================

Block 0x6c2
[0x6c2:0x6cd]
---
Predecessors: [0x667]
Successors: [0x6ce]
---
0x6c2 INVALID
0x6c3 JUMPDEST
0x6c4 DIV
0x6c5 MUL
0x6c6 DUP3
0x6c7 SUB
0x6c8 LT
0x6c9 ISZERO
0x6ca PUSH2 0x45c
0x6cd JUMPI
---
0x6c2: INVALID 
0x6c3: JUMPDEST 
0x6c4: V436 = DIV S0 S1
0x6c5: V437 = MUL V436 S2
0x6c7: V438 = SUB S4 V437
0x6c8: V439 = LT V438 S3
0x6c9: V440 = ISZERO V439
0x6ca: V441 = 0x45c
0x6cd: THROWI V440
---
Entry stack: [S6, S5, V431, S3, 0x3e8, 0x3e8, V431]
Stack pops: 0
Stack additions: [S4]
Exit stack: []

================================

Block 0x6ce
[0x6ce:0x6d9]
---
Predecessors: [0x6c2]
Successors: [0x6da]
---
0x6ce DUP1
0x6cf SWAP2
0x6d0 POP
0x6d1 PUSH2 0x461
0x6d4 JUMP
0x6d5 JUMPDEST
0x6d6 PUSH1 0x0
0x6d8 SWAP2
0x6d9 POP
---
0x6d1: V442 = 0x461
0x6d4: THROW 
0x6d5: JUMPDEST 
0x6d6: V443 = 0x0
---
Entry stack: [S0]
Stack pops: 2
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0x6da
[0x6da:0x6f1]
---
Predecessors: [0x6ce]
Successors: [0x6f2]
---
0x6da JUMPDEST
0x6db POP
0x6dc SWAP2
0x6dd SWAP1
0x6de POP
0x6df JUMP
0x6e0 JUMPDEST
0x6e1 PUSH1 0x0
0x6e3 DUP2
0x6e4 DUP4
0x6e5 ADD
0x6e6 SWAP1
0x6e7 POP
0x6e8 DUP3
0x6e9 DUP2
0x6ea LT
0x6eb ISZERO
0x6ec ISZERO
0x6ed ISZERO
0x6ee PUSH2 0x4e6
0x6f1 JUMPI
---
0x6da: JUMPDEST 
0x6df: JUMP S3
0x6e0: JUMPDEST 
0x6e1: V444 = 0x0
0x6e5: V445 = ADD S1 S0
0x6ea: V446 = LT V445 S1
0x6eb: V447 = ISZERO V446
0x6ec: V448 = ISZERO V447
0x6ed: V449 = ISZERO V448
0x6ee: V450 = 0x4e6
0x6f1: THROWI V449
---
Entry stack: [0x0, S0]
Stack pops: 7
Stack additions: [V445, S0, S1]
Exit stack: []

================================

Block 0x6f2
[0x6f2:0x783]
---
Predecessors: [0x6da]
Successors: [0x784]
---
0x6f2 PUSH1 0x40
0x6f4 MLOAD
0x6f5 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x716 DUP2
0x717 MSTORE
0x718 PUSH1 0x4
0x71a ADD
0x71b DUP1
0x71c DUP1
0x71d PUSH1 0x20
0x71f ADD
0x720 DUP3
0x721 DUP2
0x722 SUB
0x723 DUP3
0x724 MSTORE
0x725 PUSH1 0x13
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c DUP1
0x72d PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0x74e DUP2
0x74f MSTORE
0x750 POP
0x751 PUSH1 0x20
0x753 ADD
0x754 SWAP2
0x755 POP
0x756 POP
0x757 PUSH1 0x40
0x759 MLOAD
0x75a DUP1
0x75b SWAP2
0x75c SUB
0x75d SWAP1
0x75e REVERT
0x75f JUMPDEST
0x760 DUP1
0x761 SWAP1
0x762 POP
0x763 SWAP3
0x764 SWAP2
0x765 POP
0x766 POP
0x767 JUMP
0x768 JUMPDEST
0x769 PUSH2 0x509
0x76c DUP1
0x76d PUSH2 0x4fe
0x770 PUSH1 0x0
0x772 CODECOPY
0x773 PUSH1 0x0
0x775 RETURN
0x776 STOP
0x777 PUSH1 0x80
0x779 PUSH1 0x40
0x77b MSTORE
0x77c PUSH1 0x4
0x77e CALLDATASIZE
0x77f LT
0x780 PUSH2 0x41
0x783 JUMPI
---
0x6f2: V451 = 0x40
0x6f4: V452 = M[0x40]
0x6f5: V453 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x717: M[V452] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x718: V454 = 0x4
0x71a: V455 = ADD 0x4 V452
0x71d: V456 = 0x20
0x71f: V457 = ADD 0x20 V455
0x722: V458 = SUB V457 V455
0x724: M[V455] = V458
0x725: V459 = 0x13
0x728: M[V457] = 0x13
0x729: V460 = 0x20
0x72b: V461 = ADD 0x20 V457
0x72d: V462 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x74f: M[V461] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0x751: V463 = 0x20
0x753: V464 = ADD 0x20 V461
0x757: V465 = 0x40
0x759: V466 = M[0x40]
0x75c: V467 = SUB V464 V466
0x75e: REVERT V466 V467
0x75f: JUMPDEST 
0x767: JUMP S3
0x768: JUMPDEST 
0x769: V468 = 0x509
0x76d: V469 = 0x4fe
0x770: V470 = 0x0
0x772: CODECOPY 0x0 0x4fe 0x509
0x773: V471 = 0x0
0x775: RETURN 0x0 0x509
0x776: STOP 
0x777: V472 = 0x80
0x779: V473 = 0x40
0x77b: M[0x40] = 0x80
0x77c: V474 = 0x4
0x77e: V475 = CALLDATASIZE
0x77f: V476 = LT V475 0x4
0x780: V477 = 0x41
0x783: THROWI V476
---
Entry stack: [S2, S1, V445]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x784
[0x784:0x7b7]
---
Predecessors: [0x6f2]
Successors: [0x7b8]
---
0x784 PUSH1 0x0
0x786 CALLDATALOAD
0x787 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a5 SWAP1
0x7a6 DIV
0x7a7 PUSH4 0xffffffff
0x7ac AND
0x7ad DUP1
0x7ae PUSH4 0x4aef081a
0x7b3 EQ
0x7b4 PUSH2 0x43
0x7b7 JUMPI
---
0x784: V478 = 0x0
0x786: V479 = CALLDATALOAD 0x0
0x787: V480 = 0x100000000000000000000000000000000000000000000000000000000
0x7a6: V481 = DIV V479 0x100000000000000000000000000000000000000000000000000000000
0x7a7: V482 = 0xffffffff
0x7ac: V483 = AND 0xffffffff V481
0x7ae: V484 = 0x4aef081a
0x7b3: V485 = EQ 0x4aef081a V483
0x7b4: V486 = 0x43
0x7b7: THROWI V485
---
Entry stack: []
Stack pops: 0
Stack additions: [V483]
Exit stack: [V483]

================================

Block 0x7b8
[0x7b8:0x7c1]
---
Predecessors: [0x784]
Successors: [0x7c2]
---
0x7b8 JUMPDEST
0x7b9 STOP
0x7ba JUMPDEST
0x7bb CALLVALUE
0x7bc DUP1
0x7bd ISZERO
0x7be PUSH2 0x4f
0x7c1 JUMPI
---
0x7b8: JUMPDEST 
0x7b9: STOP 
0x7ba: JUMPDEST 
0x7bb: V487 = CALLVALUE
0x7bd: V488 = ISZERO V487
0x7be: V489 = 0x4f
0x7c1: THROWI V488
---
Entry stack: [V483]
Stack pops: 0
Stack additions: [V487]
Exit stack: []

================================

Block 0x7c2
[0x7c2:0x827]
---
Predecessors: [0x7b8]
Successors: [0x828]
---
0x7c2 PUSH1 0x0
0x7c4 DUP1
0x7c5 REVERT
0x7c6 JUMPDEST
0x7c7 POP
0x7c8 PUSH2 0x98
0x7cb PUSH1 0x4
0x7cd DUP1
0x7ce CALLDATASIZE
0x7cf SUB
0x7d0 DUP2
0x7d1 ADD
0x7d2 SWAP1
0x7d3 DUP1
0x7d4 DUP1
0x7d5 CALLDATALOAD
0x7d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7eb AND
0x7ec SWAP1
0x7ed PUSH1 0x20
0x7ef ADD
0x7f0 SWAP1
0x7f1 SWAP3
0x7f2 SWAP2
0x7f3 SWAP1
0x7f4 DUP1
0x7f5 CALLDATALOAD
0x7f6 SWAP1
0x7f7 PUSH1 0x20
0x7f9 ADD
0x7fa SWAP1
0x7fb SWAP3
0x7fc SWAP2
0x7fd SWAP1
0x7fe DUP1
0x7ff CALLDATALOAD
0x800 SWAP1
0x801 PUSH1 0x20
0x803 ADD
0x804 SWAP1
0x805 SWAP3
0x806 SWAP2
0x807 SWAP1
0x808 POP
0x809 POP
0x80a POP
0x80b PUSH2 0x9a
0x80e JUMP
0x80f JUMPDEST
0x810 STOP
0x811 JUMPDEST
0x812 PUSH1 0x0
0x814 PUSH2 0xa5
0x817 DUP3
0x818 PUSH2 0x1ae
0x81b JUMP
0x81c JUMPDEST
0x81d SWAP1
0x81e POP
0x81f PUSH1 0x0
0x821 DUP2
0x822 GT
0x823 ISZERO
0x824 PUSH2 0x1a9
0x827 JUMPI
---
0x7c2: V490 = 0x0
0x7c5: REVERT 0x0 0x0
0x7c6: JUMPDEST 
0x7c8: V491 = 0x98
0x7cb: V492 = 0x4
0x7ce: V493 = CALLDATASIZE
0x7cf: V494 = SUB V493 0x4
0x7d1: V495 = ADD 0x4 V494
0x7d5: V496 = CALLDATALOAD 0x4
0x7d6: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x7eb: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x7ed: V499 = 0x20
0x7ef: V500 = ADD 0x20 0x4
0x7f5: V501 = CALLDATALOAD 0x24
0x7f7: V502 = 0x20
0x7f9: V503 = ADD 0x20 0x24
0x7ff: V504 = CALLDATALOAD 0x44
0x801: V505 = 0x20
0x803: V506 = ADD 0x20 0x44
0x80b: V507 = 0x9a
0x80e: THROW 
0x80f: JUMPDEST 
0x810: STOP 
0x811: JUMPDEST 
0x812: V508 = 0x0
0x814: V509 = 0xa5
0x818: V510 = 0x1ae
0x81b: THROW 
0x81c: JUMPDEST 
0x81f: V511 = 0x0
0x822: V512 = GT S0 0x0
0x823: V513 = ISZERO V512
0x824: V514 = 0x1a9
0x827: THROWI V513
---
Entry stack: [V487]
Stack pops: 0
Stack additions: [V504, V501, V498, 0x98, S0, 0xa5, 0x0, S0, S0]
Exit stack: []

================================

Block 0x828
[0x828:0x99a]
---
Predecessors: [0x7c2]
Successors: [0x99b]
---
0x828 DUP4
0x829 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83e AND
0x83f PUSH3 0x1e8480
0x843 DUP5
0x844 PUSH1 0x40
0x846 MLOAD
0x847 PUSH1 0x0
0x849 PUSH1 0x40
0x84b MLOAD
0x84c DUP1
0x84d DUP4
0x84e SUB
0x84f DUP2
0x850 DUP6
0x851 DUP9
0x852 DUP9
0x853 CALL
0x854 SWAP4
0x855 POP
0x856 POP
0x857 POP
0x858 POP
0x859 POP
0x85a DUP4
0x85b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x870 AND
0x871 PUSH1 0x40
0x873 MLOAD
0x874 DUP1
0x875 DUP1
0x876 PUSH32 0x7769746864726177282900000000000000000000000000000000000000000000
0x897 DUP2
0x898 MSTORE
0x899 POP
0x89a PUSH1 0xa
0x89c ADD
0x89d SWAP1
0x89e POP
0x89f PUSH1 0x40
0x8a1 MLOAD
0x8a2 DUP1
0x8a3 SWAP2
0x8a4 SUB
0x8a5 SWAP1
0x8a6 SHA3
0x8a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8c5 SWAP1
0x8c6 DIV
0x8c7 PUSH1 0x40
0x8c9 MLOAD
0x8ca DUP2
0x8cb PUSH4 0xffffffff
0x8d0 AND
0x8d1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8ef MUL
0x8f0 DUP2
0x8f1 MSTORE
0x8f2 PUSH1 0x4
0x8f4 ADD
0x8f5 PUSH1 0x0
0x8f7 PUSH1 0x40
0x8f9 MLOAD
0x8fa DUP1
0x8fb DUP4
0x8fc SUB
0x8fd DUP2
0x8fe PUSH1 0x0
0x900 DUP8
0x901 GAS
0x902 CALL
0x903 SWAP3
0x904 POP
0x905 POP
0x906 POP
0x907 POP
0x908 CALLER
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e AND
0x91f SELFDESTRUCT
0x920 JUMPDEST
0x921 PUSH1 0x0
0x923 DUP1
0x924 REVERT
0x925 JUMPDEST
0x926 PUSH1 0x0
0x928 DUP1
0x929 PUSH2 0x3a2
0x92c NUMBER
0x92d PUSH2 0x394
0x930 TIMESTAMP
0x931 ADDRESS
0x932 PUSH1 0x40
0x934 MLOAD
0x935 PUSH1 0x20
0x937 ADD
0x938 DUP1
0x939 DUP3
0x93a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94f AND
0x950 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x965 AND
0x966 PUSH13 0x1000000000000000000000000
0x974 MUL
0x975 DUP2
0x976 MSTORE
0x977 PUSH1 0x14
0x979 ADD
0x97a SWAP2
0x97b POP
0x97c POP
0x97d PUSH1 0x40
0x97f MLOAD
0x980 PUSH1 0x20
0x982 DUP2
0x983 DUP4
0x984 SUB
0x985 SUB
0x986 DUP2
0x987 MSTORE
0x988 SWAP1
0x989 PUSH1 0x40
0x98b MSTORE
0x98c PUSH1 0x40
0x98e MLOAD
0x98f DUP1
0x990 DUP3
0x991 DUP1
0x992 MLOAD
0x993 SWAP1
0x994 PUSH1 0x20
0x996 ADD
0x997 SWAP1
0x998 DUP1
0x999 DUP4
0x99a DUP4
---
0x829: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x83e: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x83f: V517 = 0x1e8480
0x844: V518 = 0x40
0x846: V519 = M[0x40]
0x847: V520 = 0x0
0x849: V521 = 0x40
0x84b: V522 = M[0x40]
0x84e: V523 = SUB V519 V522
0x853: V524 = CALL 0x1e8480 V516 S2 V522 V523 V522 0x0
0x85b: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x870: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x871: V527 = 0x40
0x873: V528 = M[0x40]
0x876: V529 = 0x7769746864726177282900000000000000000000000000000000000000000000
0x898: M[V528] = 0x7769746864726177282900000000000000000000000000000000000000000000
0x89a: V530 = 0xa
0x89c: V531 = ADD 0xa V528
0x89f: V532 = 0x40
0x8a1: V533 = M[0x40]
0x8a4: V534 = SUB V531 V533
0x8a6: V535 = SHA3 V533 V534
0x8a7: V536 = 0x100000000000000000000000000000000000000000000000000000000
0x8c6: V537 = DIV V535 0x100000000000000000000000000000000000000000000000000000000
0x8c7: V538 = 0x40
0x8c9: V539 = M[0x40]
0x8cb: V540 = 0xffffffff
0x8d0: V541 = AND 0xffffffff V537
0x8d1: V542 = 0x100000000000000000000000000000000000000000000000000000000
0x8ef: V543 = MUL 0x100000000000000000000000000000000000000000000000000000000 V541
0x8f1: M[V539] = V543
0x8f2: V544 = 0x4
0x8f4: V545 = ADD 0x4 V539
0x8f5: V546 = 0x0
0x8f7: V547 = 0x40
0x8f9: V548 = M[0x40]
0x8fc: V549 = SUB V545 V548
0x8fe: V550 = 0x0
0x901: V551 = GAS
0x902: V552 = CALL V551 V526 0x0 V548 V549 V548 0x0
0x908: V553 = CALLER
0x909: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x91f: SELFDESTRUCT V555
0x920: JUMPDEST 
0x921: V556 = 0x0
0x924: REVERT 0x0 0x0
0x925: JUMPDEST 
0x926: V557 = 0x0
0x929: V558 = 0x3a2
0x92c: V559 = NUMBER
0x92d: V560 = 0x394
0x930: V561 = TIMESTAMP
0x931: V562 = ADDRESS
0x932: V563 = 0x40
0x934: V564 = M[0x40]
0x935: V565 = 0x20
0x937: V566 = ADD 0x20 V564
0x93a: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x94f: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x950: V569 = 0xffffffffffffffffffffffffffffffffffffffff
0x965: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x966: V571 = 0x1000000000000000000000000
0x974: V572 = MUL 0x1000000000000000000000000 V570
0x976: M[V566] = V572
0x977: V573 = 0x14
0x979: V574 = ADD 0x14 V566
0x97d: V575 = 0x40
0x97f: V576 = M[0x40]
0x980: V577 = 0x20
0x984: V578 = SUB V574 V576
0x985: V579 = SUB V578 0x20
0x987: M[V576] = V579
0x989: V580 = 0x40
0x98b: M[0x40] = V574
0x98c: V581 = 0x40
0x98e: V582 = M[0x40]
0x992: V583 = M[V576]
0x994: V584 = 0x20
0x996: V585 = ADD 0x20 V576
---
Entry stack: [S0]
Stack pops: 8
Stack additions: [V585, V582, V583, V583, V585, V582, V582, V576, V561, 0x394, V559, 0x3a2, 0x0, 0x0]
Exit stack: []

================================

Block 0x99b
[0x99b:0x9a5]
---
Predecessors: [0x828]
Successors: [0x9a6]
---
0x99b JUMPDEST
0x99c PUSH1 0x20
0x99e DUP4
0x99f LT
0x9a0 ISZERO
0x9a1 ISZERO
0x9a2 PUSH2 0x249
0x9a5 JUMPI
---
0x99b: JUMPDEST 
0x99c: V586 = 0x20
0x99f: V587 = LT V583 0x20
0x9a0: V588 = ISZERO V587
0x9a1: V589 = ISZERO V588
0x9a2: V590 = 0x249
0x9a5: THROWI V589
---
Entry stack: [0x0, 0x0, 0x3a2, V559, 0x394, V561, V576, V582, V582, V585, V583, V583, V582, V585]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [0x0, 0x0, 0x3a2, V559, 0x394, V561, V576, V582, V582, V585, V583, V583, V582, V585]

================================

Block 0x9a6
[0x9a6:0x9f8]
---
Predecessors: [0x99b]
Successors: [0x9f9]
---
0x9a6 DUP1
0x9a7 MLOAD
0x9a8 DUP3
0x9a9 MSTORE
0x9aa PUSH1 0x20
0x9ac DUP3
0x9ad ADD
0x9ae SWAP2
0x9af POP
0x9b0 PUSH1 0x20
0x9b2 DUP2
0x9b3 ADD
0x9b4 SWAP1
0x9b5 POP
0x9b6 PUSH1 0x20
0x9b8 DUP4
0x9b9 SUB
0x9ba SWAP3
0x9bb POP
0x9bc PUSH2 0x224
0x9bf JUMP
0x9c0 JUMPDEST
0x9c1 PUSH1 0x1
0x9c3 DUP4
0x9c4 PUSH1 0x20
0x9c6 SUB
0x9c7 PUSH2 0x100
0x9ca EXP
0x9cb SUB
0x9cc DUP1
0x9cd NOT
0x9ce DUP3
0x9cf MLOAD
0x9d0 AND
0x9d1 DUP2
0x9d2 DUP5
0x9d3 MLOAD
0x9d4 AND
0x9d5 DUP1
0x9d6 DUP3
0x9d7 OR
0x9d8 DUP6
0x9d9 MSTORE
0x9da POP
0x9db POP
0x9dc POP
0x9dd POP
0x9de POP
0x9df POP
0x9e0 SWAP1
0x9e1 POP
0x9e2 ADD
0x9e3 SWAP2
0x9e4 POP
0x9e5 POP
0x9e6 PUSH1 0x40
0x9e8 MLOAD
0x9e9 DUP1
0x9ea SWAP2
0x9eb SUB
0x9ec SWAP1
0x9ed SHA3
0x9ee PUSH1 0x1
0x9f0 SWAP1
0x9f1 DIV
0x9f2 DUP2
0x9f3 ISZERO
0x9f4 ISZERO
0x9f5 PUSH2 0x283
0x9f8 JUMPI
---
0x9a7: V591 = M[V585]
0x9a9: M[V582] = V591
0x9aa: V592 = 0x20
0x9ad: V593 = ADD V582 0x20
0x9b0: V594 = 0x20
0x9b3: V595 = ADD V585 0x20
0x9b6: V596 = 0x20
0x9b9: V597 = SUB V583 0x20
0x9bc: V598 = 0x224
0x9bf: THROW 
0x9c0: JUMPDEST 
0x9c1: V599 = 0x1
0x9c4: V600 = 0x20
0x9c6: V601 = SUB 0x20 S2
0x9c7: V602 = 0x100
0x9ca: V603 = EXP 0x100 V601
0x9cb: V604 = SUB V603 0x1
0x9cd: V605 = NOT V604
0x9cf: V606 = M[S0]
0x9d0: V607 = AND V606 V605
0x9d3: V608 = M[S1]
0x9d4: V609 = AND V608 V604
0x9d7: V610 = OR V607 V609
0x9d9: M[S1] = V610
0x9e2: V611 = ADD S3 S5
0x9e6: V612 = 0x40
0x9e8: V613 = M[0x40]
0x9eb: V614 = SUB V611 V613
0x9ed: V615 = SHA3 V613 V614
0x9ee: V616 = 0x1
0x9f1: V617 = DIV V615 0x1
0x9f3: V618 = ISZERO S8
0x9f4: V619 = ISZERO V618
0x9f5: V620 = 0x283
0x9f8: THROWI V619
---
Entry stack: [0x0, 0x0, 0x3a2, V559, 0x394, V561, V576, V582, V582, V585, V583, V583, V582, V585]
Stack pops: 3
Stack additions: [V617, S8]
Exit stack: []

================================

Block 0x9f9
[0x9f9:0xa6d]
---
Predecessors: [0x9a6]
Successors: [0xa6e]
---
0x9f9 INVALID
0x9fa JUMPDEST
0x9fb DIV
0x9fc PUSH2 0x386
0x9ff GASLIMIT
0xa00 PUSH2 0x378
0xa03 TIMESTAMP
0xa04 COINBASE
0xa05 PUSH1 0x40
0xa07 MLOAD
0xa08 PUSH1 0x20
0xa0a ADD
0xa0b DUP1
0xa0c DUP3
0xa0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa22 AND
0xa23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa38 AND
0xa39 PUSH13 0x1000000000000000000000000
0xa47 MUL
0xa48 DUP2
0xa49 MSTORE
0xa4a PUSH1 0x14
0xa4c ADD
0xa4d SWAP2
0xa4e POP
0xa4f POP
0xa50 PUSH1 0x40
0xa52 MLOAD
0xa53 PUSH1 0x20
0xa55 DUP2
0xa56 DUP4
0xa57 SUB
0xa58 SUB
0xa59 DUP2
0xa5a MSTORE
0xa5b SWAP1
0xa5c PUSH1 0x40
0xa5e MSTORE
0xa5f PUSH1 0x40
0xa61 MLOAD
0xa62 DUP1
0xa63 DUP3
0xa64 DUP1
0xa65 MLOAD
0xa66 SWAP1
0xa67 PUSH1 0x20
0xa69 ADD
0xa6a SWAP1
0xa6b DUP1
0xa6c DUP4
0xa6d DUP4
---
0x9f9: INVALID 
0x9fa: JUMPDEST 
0x9fb: V621 = DIV S0 S1
0x9fc: V622 = 0x386
0x9ff: V623 = GASLIMIT
0xa00: V624 = 0x378
0xa03: V625 = TIMESTAMP
0xa04: V626 = COINBASE
0xa05: V627 = 0x40
0xa07: V628 = M[0x40]
0xa08: V629 = 0x20
0xa0a: V630 = ADD 0x20 V628
0xa0d: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xa22: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V626
0xa23: V633 = 0xffffffffffffffffffffffffffffffffffffffff
0xa38: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0xa39: V635 = 0x1000000000000000000000000
0xa47: V636 = MUL 0x1000000000000000000000000 V634
0xa49: M[V630] = V636
0xa4a: V637 = 0x14
0xa4c: V638 = ADD 0x14 V630
0xa50: V639 = 0x40
0xa52: V640 = M[0x40]
0xa53: V641 = 0x20
0xa57: V642 = SUB V638 V640
0xa58: V643 = SUB V642 0x20
0xa5a: M[V640] = V643
0xa5c: V644 = 0x40
0xa5e: M[0x40] = V638
0xa5f: V645 = 0x40
0xa61: V646 = M[0x40]
0xa65: V647 = M[V640]
0xa67: V648 = 0x20
0xa69: V649 = ADD 0x20 V640
---
Entry stack: [S1, V617]
Stack pops: 0
Stack additions: [V649, V646, V647, V647, V649, V646, V646, V640, V625, 0x378, V623, 0x386, V621]
Exit stack: []

================================

Block 0xa6e
[0xa6e:0xa78]
---
Predecessors: [0x9f9]
Successors: [0xa79]
---
0xa6e JUMPDEST
0xa6f PUSH1 0x20
0xa71 DUP4
0xa72 LT
0xa73 ISZERO
0xa74 ISZERO
0xa75 PUSH2 0x31c
0xa78 JUMPI
---
0xa6e: JUMPDEST 
0xa6f: V650 = 0x20
0xa72: V651 = LT V647 0x20
0xa73: V652 = ISZERO V651
0xa74: V653 = ISZERO V652
0xa75: V654 = 0x31c
0xa78: THROWI V653
---
Entry stack: [V621, 0x386, V623, 0x378, V625, V640, V646, V646, V649, V647, V647, V646, V649]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V621, 0x386, V623, 0x378, V625, V640, V646, V646, V649, V647, V647, V646, V649]

================================

Block 0xa79
[0xa79:0xacb]
---
Predecessors: [0xa6e]
Successors: [0xacc]
---
0xa79 DUP1
0xa7a MLOAD
0xa7b DUP3
0xa7c MSTORE
0xa7d PUSH1 0x20
0xa7f DUP3
0xa80 ADD
0xa81 SWAP2
0xa82 POP
0xa83 PUSH1 0x20
0xa85 DUP2
0xa86 ADD
0xa87 SWAP1
0xa88 POP
0xa89 PUSH1 0x20
0xa8b DUP4
0xa8c SUB
0xa8d SWAP3
0xa8e POP
0xa8f PUSH2 0x2f7
0xa92 JUMP
0xa93 JUMPDEST
0xa94 PUSH1 0x1
0xa96 DUP4
0xa97 PUSH1 0x20
0xa99 SUB
0xa9a PUSH2 0x100
0xa9d EXP
0xa9e SUB
0xa9f DUP1
0xaa0 NOT
0xaa1 DUP3
0xaa2 MLOAD
0xaa3 AND
0xaa4 DUP2
0xaa5 DUP5
0xaa6 MLOAD
0xaa7 AND
0xaa8 DUP1
0xaa9 DUP3
0xaaa OR
0xaab DUP6
0xaac MSTORE
0xaad POP
0xaae POP
0xaaf POP
0xab0 POP
0xab1 POP
0xab2 POP
0xab3 SWAP1
0xab4 POP
0xab5 ADD
0xab6 SWAP2
0xab7 POP
0xab8 POP
0xab9 PUSH1 0x40
0xabb MLOAD
0xabc DUP1
0xabd SWAP2
0xabe SUB
0xabf SWAP1
0xac0 SHA3
0xac1 PUSH1 0x1
0xac3 SWAP1
0xac4 DIV
0xac5 DUP2
0xac6 ISZERO
0xac7 ISZERO
0xac8 PUSH2 0x356
0xacb JUMPI
---
0xa7a: V655 = M[V649]
0xa7c: M[V646] = V655
0xa7d: V656 = 0x20
0xa80: V657 = ADD V646 0x20
0xa83: V658 = 0x20
0xa86: V659 = ADD V649 0x20
0xa89: V660 = 0x20
0xa8c: V661 = SUB V647 0x20
0xa8f: V662 = 0x2f7
0xa92: THROW 
0xa93: JUMPDEST 
0xa94: V663 = 0x1
0xa97: V664 = 0x20
0xa99: V665 = SUB 0x20 S2
0xa9a: V666 = 0x100
0xa9d: V667 = EXP 0x100 V665
0xa9e: V668 = SUB V667 0x1
0xaa0: V669 = NOT V668
0xaa2: V670 = M[S0]
0xaa3: V671 = AND V670 V669
0xaa6: V672 = M[S1]
0xaa7: V673 = AND V672 V668
0xaaa: V674 = OR V671 V673
0xaac: M[S1] = V674
0xab5: V675 = ADD S3 S5
0xab9: V676 = 0x40
0xabb: V677 = M[0x40]
0xabe: V678 = SUB V675 V677
0xac0: V679 = SHA3 V677 V678
0xac1: V680 = 0x1
0xac4: V681 = DIV V679 0x1
0xac6: V682 = ISZERO S8
0xac7: V683 = ISZERO V682
0xac8: V684 = 0x356
0xacb: THROWI V683
---
Entry stack: [V621, 0x386, V623, 0x378, V625, V640, V646, V646, V649, V647, V647, V646, V649]
Stack pops: 3
Stack additions: [V681, S8]
Exit stack: []

================================

Block 0xacc
[0xacc:0xb47]
---
Predecessors: [0xa79]
Successors: [0xb48]
---
0xacc INVALID
0xacd JUMPDEST
0xace DIV
0xacf PUSH2 0x36a
0xad2 DIFFICULTY
0xad3 TIMESTAMP
0xad4 PUSH2 0x455
0xad7 SWAP1
0xad8 SWAP2
0xad9 SWAP1
0xada PUSH4 0xffffffff
0xadf AND
0xae0 JUMP
0xae1 JUMPDEST
0xae2 PUSH2 0x455
0xae5 SWAP1
0xae6 SWAP2
0xae7 SWAP1
0xae8 PUSH4 0xffffffff
0xaed AND
0xaee JUMP
0xaef JUMPDEST
0xaf0 PUSH2 0x455
0xaf3 SWAP1
0xaf4 SWAP2
0xaf5 SWAP1
0xaf6 PUSH4 0xffffffff
0xafb AND
0xafc JUMP
0xafd JUMPDEST
0xafe PUSH2 0x455
0xb01 SWAP1
0xb02 SWAP2
0xb03 SWAP1
0xb04 PUSH4 0xffffffff
0xb09 AND
0xb0a JUMP
0xb0b JUMPDEST
0xb0c PUSH2 0x455
0xb0f SWAP1
0xb10 SWAP2
0xb11 SWAP1
0xb12 PUSH4 0xffffffff
0xb17 AND
0xb18 JUMP
0xb19 JUMPDEST
0xb1a PUSH1 0x40
0xb1c MLOAD
0xb1d PUSH1 0x20
0xb1f ADD
0xb20 DUP1
0xb21 DUP3
0xb22 DUP2
0xb23 MSTORE
0xb24 PUSH1 0x20
0xb26 ADD
0xb27 SWAP2
0xb28 POP
0xb29 POP
0xb2a PUSH1 0x40
0xb2c MLOAD
0xb2d PUSH1 0x20
0xb2f DUP2
0xb30 DUP4
0xb31 SUB
0xb32 SUB
0xb33 DUP2
0xb34 MSTORE
0xb35 SWAP1
0xb36 PUSH1 0x40
0xb38 MSTORE
0xb39 PUSH1 0x40
0xb3b MLOAD
0xb3c DUP1
0xb3d DUP3
0xb3e DUP1
0xb3f MLOAD
0xb40 SWAP1
0xb41 PUSH1 0x20
0xb43 ADD
0xb44 SWAP1
0xb45 DUP1
0xb46 DUP4
0xb47 DUP4
---
0xacc: INVALID 
0xacd: JUMPDEST 
0xace: V685 = DIV S0 S1
0xacf: V686 = 0x36a
0xad2: V687 = DIFFICULTY
0xad3: V688 = TIMESTAMP
0xad4: V689 = 0x455
0xada: V690 = 0xffffffff
0xadf: V691 = AND 0xffffffff 0x455
0xae0: THROW 
0xae1: JUMPDEST 
0xae2: V692 = 0x455
0xae8: V693 = 0xffffffff
0xaed: V694 = AND 0xffffffff 0x455
0xaee: THROW 
0xaef: JUMPDEST 
0xaf0: V695 = 0x455
0xaf6: V696 = 0xffffffff
0xafb: V697 = AND 0xffffffff 0x455
0xafc: THROW 
0xafd: JUMPDEST 
0xafe: V698 = 0x455
0xb04: V699 = 0xffffffff
0xb09: V700 = AND 0xffffffff 0x455
0xb0a: THROW 
0xb0b: JUMPDEST 
0xb0c: V701 = 0x455
0xb12: V702 = 0xffffffff
0xb17: V703 = AND 0xffffffff 0x455
0xb18: THROW 
0xb19: JUMPDEST 
0xb1a: V704 = 0x40
0xb1c: V705 = M[0x40]
0xb1d: V706 = 0x20
0xb1f: V707 = ADD 0x20 V705
0xb23: M[V707] = S0
0xb24: V708 = 0x20
0xb26: V709 = ADD 0x20 V707
0xb2a: V710 = 0x40
0xb2c: V711 = M[0x40]
0xb2d: V712 = 0x20
0xb31: V713 = SUB V709 V711
0xb32: V714 = SUB V713 0x20
0xb34: M[V711] = V714
0xb36: V715 = 0x40
0xb38: M[0x40] = V709
0xb39: V716 = 0x40
0xb3b: V717 = M[0x40]
0xb3f: V718 = M[V711]
0xb41: V719 = 0x20
0xb43: V720 = ADD 0x20 V711
---
Entry stack: [S1, V681]
Stack pops: 0
Stack additions: [V687, V688, 0x36a, V685, S1, S0, S1, S0, S1, S0, S1, S0, V720, V717, V718, V718, V720, V717, V717, V711]
Exit stack: []

================================

Block 0xb48
[0xb48:0xb52]
---
Predecessors: [0xacc]
Successors: [0xb53]
---
0xb48 JUMPDEST
0xb49 PUSH1 0x20
0xb4b DUP4
0xb4c LT
0xb4d ISZERO
0xb4e ISZERO
0xb4f PUSH2 0x3f6
0xb52 JUMPI
---
0xb48: JUMPDEST 
0xb49: V721 = 0x20
0xb4c: V722 = LT V718 0x20
0xb4d: V723 = ISZERO V722
0xb4e: V724 = ISZERO V723
0xb4f: V725 = 0x3f6
0xb52: THROWI V724
---
Entry stack: [V711, V717, V717, V720, V718, V718, V717, V720]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V711, V717, V717, V720, V718, V718, V717, V720]

================================

Block 0xb53
[0xb53:0xbad]
---
Predecessors: [0xb48]
Successors: [0xbae]
---
0xb53 DUP1
0xb54 MLOAD
0xb55 DUP3
0xb56 MSTORE
0xb57 PUSH1 0x20
0xb59 DUP3
0xb5a ADD
0xb5b SWAP2
0xb5c POP
0xb5d PUSH1 0x20
0xb5f DUP2
0xb60 ADD
0xb61 SWAP1
0xb62 POP
0xb63 PUSH1 0x20
0xb65 DUP4
0xb66 SUB
0xb67 SWAP3
0xb68 POP
0xb69 PUSH2 0x3d1
0xb6c JUMP
0xb6d JUMPDEST
0xb6e PUSH1 0x1
0xb70 DUP4
0xb71 PUSH1 0x20
0xb73 SUB
0xb74 PUSH2 0x100
0xb77 EXP
0xb78 SUB
0xb79 DUP1
0xb7a NOT
0xb7b DUP3
0xb7c MLOAD
0xb7d AND
0xb7e DUP2
0xb7f DUP5
0xb80 MLOAD
0xb81 AND
0xb82 DUP1
0xb83 DUP3
0xb84 OR
0xb85 DUP6
0xb86 MSTORE
0xb87 POP
0xb88 POP
0xb89 POP
0xb8a POP
0xb8b POP
0xb8c POP
0xb8d SWAP1
0xb8e POP
0xb8f ADD
0xb90 SWAP2
0xb91 POP
0xb92 POP
0xb93 PUSH1 0x40
0xb95 MLOAD
0xb96 DUP1
0xb97 SWAP2
0xb98 SUB
0xb99 SWAP1
0xb9a SHA3
0xb9b PUSH1 0x1
0xb9d SWAP1
0xb9e DIV
0xb9f SWAP1
0xba0 POP
0xba1 DUP3
0xba2 PUSH2 0x3e8
0xba5 DUP1
0xba6 DUP4
0xba7 DUP2
0xba8 ISZERO
0xba9 ISZERO
0xbaa PUSH2 0x438
0xbad JUMPI
---
0xb54: V726 = M[V720]
0xb56: M[V717] = V726
0xb57: V727 = 0x20
0xb5a: V728 = ADD V717 0x20
0xb5d: V729 = 0x20
0xb60: V730 = ADD V720 0x20
0xb63: V731 = 0x20
0xb66: V732 = SUB V718 0x20
0xb69: V733 = 0x3d1
0xb6c: THROW 
0xb6d: JUMPDEST 
0xb6e: V734 = 0x1
0xb71: V735 = 0x20
0xb73: V736 = SUB 0x20 S2
0xb74: V737 = 0x100
0xb77: V738 = EXP 0x100 V736
0xb78: V739 = SUB V738 0x1
0xb7a: V740 = NOT V739
0xb7c: V741 = M[S0]
0xb7d: V742 = AND V741 V740
0xb80: V743 = M[S1]
0xb81: V744 = AND V743 V739
0xb84: V745 = OR V742 V744
0xb86: M[S1] = V745
0xb8f: V746 = ADD S3 S5
0xb93: V747 = 0x40
0xb95: V748 = M[0x40]
0xb98: V749 = SUB V746 V748
0xb9a: V750 = SHA3 V748 V749
0xb9b: V751 = 0x1
0xb9e: V752 = DIV V750 0x1
0xba2: V753 = 0x3e8
0xba8: V754 = ISZERO 0x3e8
0xba9: V755 = ISZERO 0x0
0xbaa: V756 = 0x438
0xbad: THROWI 0x1
---
Entry stack: [V711, V717, V717, V720, V718, V718, V717, V720]
Stack pops: 3
Stack additions: [V752, 0x3e8, 0x3e8, S10, V752, S9, S10]
Exit stack: []

================================

Block 0xbae
[0xbae:0xbb9]
---
Predecessors: [0xb53]
Successors: [0xbba]
---
0xbae INVALID
0xbaf JUMPDEST
0xbb0 DIV
0xbb1 MUL
0xbb2 DUP3
0xbb3 SUB
0xbb4 LT
0xbb5 ISZERO
0xbb6 PUSH2 0x44a
0xbb9 JUMPI
---
0xbae: INVALID 
0xbaf: JUMPDEST 
0xbb0: V757 = DIV S0 S1
0xbb1: V758 = MUL V757 S2
0xbb3: V759 = SUB S4 V758
0xbb4: V760 = LT V759 S3
0xbb5: V761 = ISZERO V760
0xbb6: V762 = 0x44a
0xbb9: THROWI V761
---
Entry stack: [S6, S5, V752, S3, 0x3e8, 0x3e8, V752]
Stack pops: 0
Stack additions: [S4]
Exit stack: []

================================

Block 0xbba
[0xbba:0xbc5]
---
Predecessors: [0xbae]
Successors: [0xbc6]
---
0xbba DUP1
0xbbb SWAP2
0xbbc POP
0xbbd PUSH2 0x44f
0xbc0 JUMP
0xbc1 JUMPDEST
0xbc2 PUSH1 0x0
0xbc4 SWAP2
0xbc5 POP
---
0xbbd: V763 = 0x44f
0xbc0: THROW 
0xbc1: JUMPDEST 
0xbc2: V764 = 0x0
---
Entry stack: [S0]
Stack pops: 2
Stack additions: [S0, 0x0]
Exit stack: []

================================

Block 0xbc6
[0xbc6:0xbdd]
---
Predecessors: [0xbba]
Successors: [0xbde]
---
0xbc6 JUMPDEST
0xbc7 POP
0xbc8 SWAP2
0xbc9 SWAP1
0xbca POP
0xbcb JUMP
0xbcc JUMPDEST
0xbcd PUSH1 0x0
0xbcf DUP2
0xbd0 DUP4
0xbd1 ADD
0xbd2 SWAP1
0xbd3 POP
0xbd4 DUP3
0xbd5 DUP2
0xbd6 LT
0xbd7 ISZERO
0xbd8 ISZERO
0xbd9 ISZERO
0xbda PUSH2 0x4d4
0xbdd JUMPI
---
0xbc6: JUMPDEST 
0xbcb: JUMP S3
0xbcc: JUMPDEST 
0xbcd: V765 = 0x0
0xbd1: V766 = ADD S1 S0
0xbd6: V767 = LT V766 S1
0xbd7: V768 = ISZERO V767
0xbd8: V769 = ISZERO V768
0xbd9: V770 = ISZERO V769
0xbda: V771 = 0x4d4
0xbdd: THROWI V770
---
Entry stack: [0x0, S0]
Stack pops: 7
Stack additions: [V766, S0, S1]
Exit stack: []

================================

Block 0xbde
[0xbde:0xcb3]
---
Predecessors: [0xbc6]
Successors: []
---
0xbde PUSH1 0x40
0xbe0 MLOAD
0xbe1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc02 DUP2
0xc03 MSTORE
0xc04 PUSH1 0x4
0xc06 ADD
0xc07 DUP1
0xc08 DUP1
0xc09 PUSH1 0x20
0xc0b ADD
0xc0c DUP3
0xc0d DUP2
0xc0e SUB
0xc0f DUP3
0xc10 MSTORE
0xc11 PUSH1 0x13
0xc13 DUP2
0xc14 MSTORE
0xc15 PUSH1 0x20
0xc17 ADD
0xc18 DUP1
0xc19 PUSH32 0x536166654d61746820616464206661696c656400000000000000000000000000
0xc3a DUP2
0xc3b MSTORE
0xc3c POP
0xc3d PUSH1 0x20
0xc3f ADD
0xc40 SWAP2
0xc41 POP
0xc42 POP
0xc43 PUSH1 0x40
0xc45 MLOAD
0xc46 DUP1
0xc47 SWAP2
0xc48 SUB
0xc49 SWAP1
0xc4a REVERT
0xc4b JUMPDEST
0xc4c DUP1
0xc4d SWAP1
0xc4e POP
0xc4f SWAP3
0xc50 SWAP2
0xc51 POP
0xc52 POP
0xc53 JUMP
0xc54 STOP
0xc55 LOG1
0xc56 PUSH6 0x627a7a723058
0xc5d SHA3
0xc5e DUP10
0xc5f NOT
0xc60 PUSH12 0x3b14602bf86b7dc95a0687fc
0xc6d PC
0xc6e DUP2
0xc6f PUSH32 0x14231a5237400a86b58495f219000029a165627a7a723058204885760da97d16
0xc90 MISSING 0x29
0xc91 AND
0xc92 MISSING 0xcd
0xc93 PUSH32 0x110b2ee043d46e459dd9c51de582e24725319c5b3e0029
---
0xbde: V772 = 0x40
0xbe0: V773 = M[0x40]
0xbe1: V774 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc03: M[V773] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc04: V775 = 0x4
0xc06: V776 = ADD 0x4 V773
0xc09: V777 = 0x20
0xc0b: V778 = ADD 0x20 V776
0xc0e: V779 = SUB V778 V776
0xc10: M[V776] = V779
0xc11: V780 = 0x13
0xc14: M[V778] = 0x13
0xc15: V781 = 0x20
0xc17: V782 = ADD 0x20 V778
0xc19: V783 = 0x536166654d61746820616464206661696c656400000000000000000000000000
0xc3b: M[V782] = 0x536166654d61746820616464206661696c656400000000000000000000000000
0xc3d: V784 = 0x20
0xc3f: V785 = ADD 0x20 V782
0xc43: V786 = 0x40
0xc45: V787 = M[0x40]
0xc48: V788 = SUB V785 V787
0xc4a: REVERT V787 V788
0xc4b: JUMPDEST 
0xc53: JUMP S3
0xc54: STOP 
0xc55: LOG S0 S1 S2
0xc56: V789 = 0x627a7a723058
0xc5d: V790 = SHA3 0x627a7a723058 S3
0xc5f: V791 = NOT S12
0xc60: V792 = 0x3b14602bf86b7dc95a0687fc
0xc6d: V793 = PC
0xc6f: V794 = 0x14231a5237400a86b58495f219000029a165627a7a723058204885760da97d16
0xc90: MISSING 0x29
0xc91: V795 = AND S0 S1
0xc92: MISSING 0xcd
0xc93: V796 = 0x110b2ee043d46e459dd9c51de582e24725319c5b3e0029
---
Entry stack: [S2, S1, V766]
Stack pops: 0
Stack additions: [S0, 0x14231a5237400a86b58495f219000029a165627a7a723058204885760da97d16, 0x3b14602bf86b7dc95a0687fc, V793, 0x3b14602bf86b7dc95a0687fc, V791, V790, S4, S5, S6, S7, S8, S9, S10, S11, S12, V795, 0x110b2ee043d46e459dd9c51de582e24725319c5b3e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x114, 0x16b, 0x16f, 0x1c3, 0x1cc

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x73
Exit block: 0x88
Body: 0x73, 0x7b, 0x7f, 0x88, 0x1cf

Function 2:
Public function signature: 0xb6fa3b5a
Entry block: 0xca
Exit block: 0x112
Body: 0xca, 0x112, 0x1f4, 0x200, 0x256, 0x25f, 0x268

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

