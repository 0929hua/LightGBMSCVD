Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x5d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x5de01497
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x5d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x5de01497
0x1a: V12 = EQ V10 0x5de01497
0x1b: V13 = 0x5d
0x1e: JUMPI 0x5d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x84]
---
0x1f DUP1
0x20 PUSH4 0x63a9c3d7
0x25 EQ
0x26 PUSH2 0x84
0x29 JUMPI
---
0x20: V14 = 0x63a9c3d7
0x25: V15 = EQ 0x63a9c3d7 V10
0x26: V16 = 0x84
0x29: JUMPI 0x84 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xd5]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xd5
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xd5
0x34: JUMPI 0xd5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xfe]
---
0x35 DUP1
0x36 PUSH4 0xc5e412e5
0x3b EQ
0x3c PUSH2 0xfe
0x3f JUMPI
---
0x36: V20 = 0xc5e412e5
0x3b: V21 = EQ 0xc5e412e5 V10
0x3c: V22 = 0xfe
0x3f: JUMPI 0xfe V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x133]
---
0x40 DUP1
0x41 PUSH4 0xf2fde38b
0x46 EQ
0x47 PUSH2 0x133
0x4a JUMPI
---
0x41: V23 = 0xf2fde38b
0x46: V24 = EQ 0xf2fde38b V10
0x47: V25 = 0x133
0x4a: JUMPI 0x133 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x50]
---
Predecessors: [0x0, 0x40]
Successors: [0x51]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d PUSH2 0x0
0x50 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = CALLVALUE
0x4d: V27 = 0x0
0x50: THROWI V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51
[0x51:0x53]
---
Predecessors: [0x4b]
Successors: [0x54]
---
0x51 PUSH2 0x5b
---
0x51: V28 = 0x5b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b]
Exit stack: [V10, 0x5b]

================================

Block 0x54
[0x54:0x58]
---
Predecessors: [0x51]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH2 0x0
0x58 JUMP
---
0x54: JUMPDEST 
0x55: V29 = 0x0
0x58: THROW 
---
Entry stack: [V10, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b]

================================

Block 0x59
[0x59:0x5a]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x59 JUMPDEST
0x5a JUMP
---
0x59: JUMPDEST 
0x5a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x5ff]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d
[0x5d:0x62]
---
Predecessors: [0xb]
Successors: [0x63]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f PUSH2 0x0
0x62 JUMPI
---
0x5d: JUMPDEST 
0x5e: V30 = CALLVALUE
0x5f: V31 = 0x0
0x62: THROWI V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x6f]
---
Predecessors: [0x5d]
Successors: [0x145]
---
0x63 PUSH2 0x70
0x66 PUSH1 0x4
0x68 CALLDATALOAD
0x69 PUSH1 0x24
0x6b CALLDATALOAD
0x6c PUSH2 0x145
0x6f JUMP
---
0x63: V32 = 0x70
0x66: V33 = 0x4
0x68: V34 = CALLDATALOAD 0x4
0x69: V35 = 0x24
0x6b: V36 = CALLDATALOAD 0x24
0x6c: V37 = 0x145
0x6f: JUMP 0x145
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x70, V34, V36]
Exit stack: [V10, 0x70, V34, V36]

================================

Block 0x70
[0x70:0x83]
---
Predecessors: [0x225]
Successors: []
---
0x70 JUMPDEST
0x71 PUSH1 0x40
0x73 DUP1
0x74 MLOAD
0x75 SWAP2
0x76 ISZERO
0x77 ISZERO
0x78 DUP3
0x79 MSTORE
0x7a MLOAD
0x7b SWAP1
0x7c DUP2
0x7d SWAP1
0x7e SUB
0x7f PUSH1 0x20
0x81 ADD
0x82 SWAP1
0x83 RETURN
---
0x70: JUMPDEST 
0x71: V38 = 0x40
0x74: V39 = M[0x40]
0x76: V40 = ISZERO V186
0x77: V41 = ISZERO V40
0x79: M[V39] = V41
0x7a: V42 = M[0x40]
0x7e: V43 = SUB V39 V42
0x7f: V44 = 0x20
0x81: V45 = ADD 0x20 V43
0x83: RETURN V42 V45
---
Entry stack: [V10, V186]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x84
[0x84:0x89]
---
Predecessors: [0x1f]
Successors: [0x8a]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 PUSH2 0x0
0x89 JUMPI
---
0x84: JUMPDEST 
0x85: V46 = CALLVALUE
0x86: V47 = 0x0
0x89: THROWI V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8a
[0x8a:0x93]
---
Predecessors: [0x84]
Successors: [0x22b]
---
0x8a PUSH2 0x94
0x8d PUSH1 0x4
0x8f CALLDATALOAD
0x90 PUSH2 0x22b
0x93 JUMP
---
0x8a: V48 = 0x94
0x8d: V49 = 0x4
0x8f: V50 = CALLDATALOAD 0x4
0x90: V51 = 0x22b
0x93: JUMP 0x22b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x94, V50]
Exit stack: [V10, 0x94, V50]

================================

Block 0x94
[0x94:0xd4]
---
Predecessors: [0x400]
Successors: []
---
0x94 JUMPDEST
0x95 PUSH1 0x40
0x97 DUP1
0x98 MLOAD
0x99 SWAP7
0x9a ISZERO
0x9b ISZERO
0x9c DUP8
0x9d MSTORE
0x9e PUSH1 0x1
0xa0 PUSH1 0xa0
0xa2 PUSH1 0x2
0xa4 EXP
0xa5 SUB
0xa6 SWAP6
0xa7 DUP7
0xa8 AND
0xa9 PUSH1 0x20
0xab DUP9
0xac ADD
0xad MSTORE
0xae SWAP4
0xaf SWAP1
0xb0 SWAP5
0xb1 AND
0xb2 DUP6
0xb3 DUP5
0xb4 ADD
0xb5 MSTORE
0xb6 PUSH1 0x60
0xb8 DUP6
0xb9 ADD
0xba SWAP2
0xbb SWAP1
0xbc SWAP2
0xbd MSTORE
0xbe PUSH1 0x80
0xc0 DUP5
0xc1 ADD
0xc2 MSTORE
0xc3 SWAP1
0xc4 ISZERO
0xc5 ISZERO
0xc6 PUSH1 0xa0
0xc8 DUP4
0xc9 ADD
0xca MSTORE
0xcb MLOAD
0xcc SWAP1
0xcd DUP2
0xce SWAP1
0xcf SUB
0xd0 PUSH1 0xc0
0xd2 ADD
0xd3 SWAP1
0xd4 RETURN
---
0x94: JUMPDEST 
0x95: V52 = 0x40
0x98: V53 = M[0x40]
0x9a: V54 = ISZERO V200
0x9b: V55 = ISZERO V54
0x9d: M[V53] = V55
0x9e: V56 = 0x1
0xa0: V57 = 0xa0
0xa2: V58 = 0x2
0xa4: V59 = EXP 0x2 0xa0
0xa5: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xa9: V62 = 0x20
0xac: V63 = ADD V53 0x20
0xad: M[V63] = V61
0xb1: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb4: V65 = ADD 0x40 V53
0xb5: M[V65] = V64
0xb6: V66 = 0x60
0xb9: V67 = ADD V53 0x60
0xbd: M[V67] = S2
0xbe: V68 = 0x80
0xc1: V69 = ADD V53 0x80
0xc2: M[V69] = S1
0xc4: V70 = ISZERO S0
0xc5: V71 = ISZERO V70
0xc6: V72 = 0xa0
0xc9: V73 = ADD V53 0xa0
0xca: M[V73] = V71
0xcb: V74 = M[0x40]
0xcf: V75 = SUB V53 V74
0xd0: V76 = 0xc0
0xd2: V77 = ADD 0xc0 V75
0xd4: RETURN V74 V77
---
Entry stack: [V10, V200, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5
[0xd5:0xda]
---
Predecessors: [0x2a]
Successors: [0xdb]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 PUSH2 0x0
0xda JUMPI
---
0xd5: JUMPDEST 
0xd6: V78 = CALLVALUE
0xd7: V79 = 0x0
0xda: THROWI V78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xe1]
---
Predecessors: [0xd5]
Successors: [0x40a]
---
0xdb PUSH2 0xe2
0xde PUSH2 0x40a
0xe1 JUMP
---
0xdb: V80 = 0xe2
0xde: V81 = 0x40a
0xe1: JUMP 0x40a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe2]
Exit stack: [V10, 0xe2]

================================

Block 0xe2
[0xe2:0xfd]
---
Predecessors: [0x40a, 0x571]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x40
0xe5 DUP1
0xe6 MLOAD
0xe7 PUSH1 0x1
0xe9 PUSH1 0xa0
0xeb PUSH1 0x2
0xed EXP
0xee SUB
0xef SWAP1
0xf0 SWAP3
0xf1 AND
0xf2 DUP3
0xf3 MSTORE
0xf4 MLOAD
0xf5 SWAP1
0xf6 DUP2
0xf7 SWAP1
0xf8 SUB
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP1
0xfd RETURN
---
0xe2: JUMPDEST 
0xe3: V82 = 0x40
0xe6: V83 = M[0x40]
0xe7: V84 = 0x1
0xe9: V85 = 0xa0
0xeb: V86 = 0x2
0xed: V87 = EXP 0x2 0xa0
0xee: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf1: V89 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf3: M[V83] = V89
0xf4: V90 = M[0x40]
0xf8: V91 = SUB V83 V90
0xf9: V92 = 0x20
0xfb: V93 = ADD 0x20 V91
0xfd: RETURN V90 V93
---
Entry stack: [S3, S2, V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S3, S2, V10]

================================

Block 0xfe
[0xfe:0x103]
---
Predecessors: [0x35]
Successors: [0x104]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 PUSH2 0x0
0x103 JUMPI
---
0xfe: JUMPDEST 
0xff: V94 = CALLVALUE
0x100: V95 = 0x0
0x103: THROWI V94
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x104
[0x104:0x116]
---
Predecessors: [0xfe]
Successors: [0x419]
---
0x104 PUSH2 0xe2
0x107 PUSH1 0x4
0x109 CALLDATALOAD
0x10a PUSH1 0x24
0x10c CALLDATALOAD
0x10d PUSH1 0x44
0x10f CALLDATALOAD
0x110 PUSH1 0x64
0x112 CALLDATALOAD
0x113 PUSH2 0x419
0x116 JUMP
---
0x104: V96 = 0xe2
0x107: V97 = 0x4
0x109: V98 = CALLDATALOAD 0x4
0x10a: V99 = 0x24
0x10c: V100 = CALLDATALOAD 0x24
0x10d: V101 = 0x44
0x10f: V102 = CALLDATALOAD 0x44
0x110: V103 = 0x64
0x112: V104 = CALLDATALOAD 0x64
0x113: V105 = 0x419
0x116: JUMP 0x419
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe2, V98, V100, V102, V104]
Exit stack: [V10, 0xe2, V98, V100, V102, V104]

================================

Block 0x117
[0x117:0x132]
---
Predecessors: []
Successors: []
---
0x117 JUMPDEST
0x118 PUSH1 0x40
0x11a DUP1
0x11b MLOAD
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 SWAP1
0x125 SWAP3
0x126 AND
0x127 DUP3
0x128 MSTORE
0x129 MLOAD
0x12a SWAP1
0x12b DUP2
0x12c SWAP1
0x12d SUB
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 RETURN
---
0x117: JUMPDEST 
0x118: V106 = 0x40
0x11b: V107 = M[0x40]
0x11c: V108 = 0x1
0x11e: V109 = 0xa0
0x120: V110 = 0x2
0x122: V111 = EXP 0x2 0xa0
0x123: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x126: V113 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x128: M[V107] = V113
0x129: V114 = M[0x40]
0x12d: V115 = SUB V107 V114
0x12e: V116 = 0x20
0x130: V117 = ADD 0x20 V115
0x132: RETURN V114 V117
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x133
[0x133:0x138]
---
Predecessors: [0x40]
Successors: [0x139]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 PUSH2 0x0
0x138 JUMPI
---
0x133: JUMPDEST 
0x134: V118 = CALLVALUE
0x135: V119 = 0x0
0x138: THROWI V118
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x139
[0x139:0x142]
---
Predecessors: [0x133]
Successors: [0x579]
---
0x139 PUSH2 0x5b
0x13c PUSH1 0x4
0x13e CALLDATALOAD
0x13f PUSH2 0x579
0x142 JUMP
---
0x139: V120 = 0x5b
0x13c: V121 = 0x4
0x13e: V122 = CALLDATALOAD 0x4
0x13f: V123 = 0x579
0x142: JUMP 0x579
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5b, V122]
Exit stack: [V10, 0x5b, V122]

================================

Block 0x143
[0x143:0x144]
---
Predecessors: []
Successors: []
---
0x143 JUMPDEST
0x144 STOP
---
0x143: JUMPDEST 
0x144: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x145
[0x145:0x15c]
---
Predecessors: [0x63]
Successors: [0x15d, 0x161]
---
0x145 JUMPDEST
0x146 PUSH1 0x0
0x148 DUP1
0x149 SLOAD
0x14a CALLER
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 DUP2
0x155 AND
0x156 SWAP2
0x157 AND
0x158 EQ
0x159 PUSH2 0x161
0x15c JUMPI
---
0x145: JUMPDEST 
0x146: V124 = 0x0
0x149: V125 = S[0x0]
0x14a: V126 = CALLER
0x14b: V127 = 0x1
0x14d: V128 = 0xa0
0x14f: V129 = 0x2
0x151: V130 = EXP 0x2 0xa0
0x152: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x157: V133 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x158: V134 = EQ V133 V132
0x159: V135 = 0x161
0x15c: JUMPI 0x161 V134
---
Entry stack: [V10, 0x70, V34, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x70, V34, V36, 0x0]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x145]
Successors: []
---
0x15d PUSH2 0x0
0x160 JUMP
---
0x15d: V136 = 0x0
0x160: THROW 
---
Entry stack: [V10, 0x70, V34, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70, V34, V36, 0x0]

================================

Block 0x161
[0x161:0x210]
---
Predecessors: [0x145]
Successors: [0x211]
---
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 DUP1
0x165 MLOAD
0x166 DUP4
0x167 DUP2
0x168 MSTORE
0x169 SWAP1
0x16a MLOAD
0x16b PUSH1 0x1
0x16d PUSH1 0xa0
0x16f PUSH1 0x2
0x171 EXP
0x172 SUB
0x173 DUP6
0x174 AND
0x175 SWAP2
0x176 PUSH32 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x197 SWAP2
0x198 SWAP1
0x199 DUP2
0x19a SWAP1
0x19b SUB
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 LOG2
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 SLOAD
0x1a5 PUSH1 0x40
0x1a7 DUP1
0x1a8 MLOAD
0x1a9 PUSH1 0x20
0x1ab SWAP1
0x1ac DUP2
0x1ad ADD
0x1ae DUP5
0x1af SWAP1
0x1b0 MSTORE
0x1b1 DUP2
0x1b2 MLOAD
0x1b3 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x1
0x1d8 PUSH1 0xa0
0x1da PUSH1 0x2
0x1dc EXP
0x1dd SUB
0x1de SWAP4
0x1df DUP5
0x1e0 AND
0x1e1 PUSH1 0x4
0x1e3 DUP3
0x1e4 ADD
0x1e5 MSTORE
0x1e6 PUSH1 0x24
0x1e8 DUP2
0x1e9 ADD
0x1ea DUP8
0x1eb SWAP1
0x1ec MSTORE
0x1ed SWAP2
0x1ee MLOAD
0x1ef SWAP3
0x1f0 DUP8
0x1f1 AND
0x1f2 SWAP4
0x1f3 PUSH4 0xa9059cbb
0x1f8 SWAP4
0x1f9 PUSH1 0x44
0x1fb DUP1
0x1fc DUP6
0x1fd ADD
0x1fe SWAP5
0x1ff SWAP2
0x200 SWAP3
0x201 SWAP2
0x202 DUP4
0x203 SWAP1
0x204 SUB
0x205 ADD
0x206 SWAP1
0x207 DUP3
0x208 SWAP1
0x209 DUP8
0x20a DUP1
0x20b EXTCODESIZE
0x20c ISZERO
0x20d PUSH2 0x0
0x210 JUMPI
---
0x161: JUMPDEST 
0x162: V137 = 0x40
0x165: V138 = M[0x40]
0x168: M[V138] = V36
0x16a: V139 = M[0x40]
0x16b: V140 = 0x1
0x16d: V141 = 0xa0
0x16f: V142 = 0x2
0x171: V143 = EXP 0x2 0xa0
0x172: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x174: V145 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x176: V146 = 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x19b: V147 = SUB V138 V139
0x19c: V148 = 0x20
0x19e: V149 = ADD 0x20 V147
0x1a0: LOG V139 V149 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba V145
0x1a1: V150 = 0x0
0x1a4: V151 = S[0x0]
0x1a5: V152 = 0x40
0x1a8: V153 = M[0x40]
0x1a9: V154 = 0x20
0x1ad: V155 = ADD 0x20 V153
0x1b0: M[V155] = 0x0
0x1b2: V156 = M[0x40]
0x1b3: V157 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d5: M[V156] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1d6: V158 = 0x1
0x1d8: V159 = 0xa0
0x1da: V160 = 0x2
0x1dc: V161 = EXP 0x2 0xa0
0x1dd: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e0: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x1e1: V164 = 0x4
0x1e4: V165 = ADD V156 0x4
0x1e5: M[V165] = V163
0x1e6: V166 = 0x24
0x1e9: V167 = ADD V156 0x24
0x1ec: M[V167] = V36
0x1ee: V168 = M[0x40]
0x1f1: V169 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V170 = 0xa9059cbb
0x1f9: V171 = 0x44
0x1fd: V172 = ADD V156 0x44
0x204: V173 = SUB V156 V168
0x205: V174 = ADD V173 0x44
0x20b: V175 = EXTCODESIZE V169
0x20c: V176 = ISZERO V175
0x20d: V177 = 0x0
0x210: THROWI V176
---
Entry stack: [V10, 0x70, V34, V36, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]
Exit stack: [V10, 0x70, V34, V36, 0x0, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]

================================

Block 0x211
[0x211:0x21a]
---
Predecessors: [0x161]
Successors: [0x21b]
---
0x211 PUSH1 0x32
0x213 GAS
0x214 SUB
0x215 CALL
0x216 ISZERO
0x217 PUSH2 0x0
0x21a JUMPI
---
0x211: V178 = 0x32
0x213: V179 = GAS
0x214: V180 = SUB V179 0x32
0x215: V181 = CALL V180 V169 0x0 V168 V174 V168 0x20
0x216: V182 = ISZERO V181
0x217: V183 = 0x0
0x21a: THROWI V182
---
Entry stack: [V10, 0x70, V34, V36, 0x0, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x70, V34, V36, 0x0, V169, 0xa9059cbb, V172]

================================

Block 0x21b
[0x21b:0x223]
---
Predecessors: [0x211]
Successors: [0x224]
---
0x21b POP
0x21c POP
0x21d PUSH1 0x40
0x21f MLOAD
0x220 MLOAD
0x221 SWAP2
0x222 POP
0x223 POP
---
0x21d: V184 = 0x40
0x21f: V185 = M[0x40]
0x220: V186 = M[V185]
---
Entry stack: [V10, 0x70, V34, V36, 0x0, V169, 0xa9059cbb, V172]
Stack pops: 4
Stack additions: [V186]
Exit stack: [V10, 0x70, V34, V36, V186]

================================

Block 0x224
[0x224:0x224]
---
Predecessors: [0x21b]
Successors: [0x225]
---
0x224 JUMPDEST
---
0x224: JUMPDEST 
---
Entry stack: [V10, 0x70, V34, V36, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x70, V34, V36, V186]

================================

Block 0x225
[0x225:0x22a]
---
Predecessors: [0x224]
Successors: [0x70]
---
0x225 JUMPDEST
0x226 SWAP3
0x227 SWAP2
0x228 POP
0x229 POP
0x22a JUMP
---
0x225: JUMPDEST 
0x22a: JUMP 0x70
---
Entry stack: [V10, 0x70, V34, V36, V186]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V186]

================================

Block 0x22b
[0x22b:0x253]
---
Predecessors: [0x8a]
Successors: [0x254, 0x3ff]
---
0x22b JUMPDEST
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 DUP2
0x235 AND
0x236 PUSH1 0x0
0x238 SWAP1
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x1
0x23d PUSH1 0x20
0x23f MSTORE
0x240 PUSH1 0x40
0x242 DUP2
0x243 SHA3
0x244 SLOAD
0x245 PUSH1 0xff
0x247 AND
0x248 SWAP1
0x249 DUP1
0x24a DUP1
0x24b DUP1
0x24c DUP1
0x24d DUP1
0x24e DUP7
0x24f ISZERO
0x250 PUSH2 0x3ff
0x253 JUMPI
---
0x22b: JUMPDEST 
0x22c: V187 = 0x1
0x22e: V188 = 0xa0
0x230: V189 = 0x2
0x232: V190 = EXP 0x2 0xa0
0x233: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V192 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0x236: V193 = 0x0
0x23a: M[0x0] = V192
0x23b: V194 = 0x1
0x23d: V195 = 0x20
0x23f: M[0x20] = 0x1
0x240: V196 = 0x40
0x243: V197 = SHA3 0x0 0x40
0x244: V198 = S[V197]
0x245: V199 = 0xff
0x247: V200 = AND 0xff V198
0x24f: V201 = ISZERO V200
0x250: V202 = 0x3ff
0x253: JUMPI 0x3ff V201
---
Entry stack: [V10, 0x94, V50]
Stack pops: 1
Stack additions: [S0, V200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x94, V50, V200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x254
[0x254:0x293]
---
Predecessors: [0x22b]
Successors: [0x294]
---
0x254 DUP8
0x255 SWAP1
0x256 POP
0x257 DUP1
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 AND
0x261 PUSH4 0x8da5cb5b
0x266 PUSH1 0x0
0x268 PUSH1 0x40
0x26a MLOAD
0x26b PUSH1 0x20
0x26d ADD
0x26e MSTORE
0x26f PUSH1 0x40
0x271 MLOAD
0x272 DUP2
0x273 PUSH1 0xe0
0x275 PUSH1 0x2
0x277 EXP
0x278 MUL
0x279 DUP2
0x27a MSTORE
0x27b PUSH1 0x4
0x27d ADD
0x27e DUP1
0x27f SWAP1
0x280 POP
0x281 PUSH1 0x20
0x283 PUSH1 0x40
0x285 MLOAD
0x286 DUP1
0x287 DUP4
0x288 SUB
0x289 DUP2
0x28a PUSH1 0x0
0x28c DUP8
0x28d DUP1
0x28e EXTCODESIZE
0x28f ISZERO
0x290 PUSH2 0x0
0x293 JUMPI
---
0x258: V203 = 0x1
0x25a: V204 = 0xa0
0x25c: V205 = 0x2
0x25e: V206 = EXP 0x2 0xa0
0x25f: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x260: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x261: V209 = 0x8da5cb5b
0x266: V210 = 0x0
0x268: V211 = 0x40
0x26a: V212 = M[0x40]
0x26b: V213 = 0x20
0x26d: V214 = ADD 0x20 V212
0x26e: M[V214] = 0x0
0x26f: V215 = 0x40
0x271: V216 = M[0x40]
0x273: V217 = 0xe0
0x275: V218 = 0x2
0x277: V219 = EXP 0x2 0xe0
0x278: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x27a: M[V216] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x27b: V221 = 0x4
0x27d: V222 = ADD 0x4 V216
0x281: V223 = 0x20
0x283: V224 = 0x40
0x285: V225 = M[0x40]
0x288: V226 = SUB V222 V225
0x28a: V227 = 0x0
0x28e: V228 = EXTCODESIZE V208
0x28f: V229 = ISZERO V228
0x290: V230 = 0x0
0x293: THROWI V229
---
Entry stack: [V10, 0x94, V50, V200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S7, V208, 0x8da5cb5b, V222, 0x20, V225, V226, V225, 0x0, V208]
Exit stack: [V10, 0x94, V50, V200, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V208, 0x8da5cb5b, V222, 0x20, V225, V226, V225, 0x0, V208]

================================

Block 0x294
[0x294:0x29d]
---
Predecessors: [0x254]
Successors: [0x29e]
---
0x294 PUSH1 0x32
0x296 GAS
0x297 SUB
0x298 CALL
0x299 ISZERO
0x29a PUSH2 0x0
0x29d JUMPI
---
0x294: V231 = 0x32
0x296: V232 = GAS
0x297: V233 = SUB V232 0x32
0x298: V234 = CALL V233 V208 0x0 V225 V226 V225 0x20
0x299: V235 = ISZERO V234
0x29a: V236 = 0x0
0x29d: THROWI V235
---
Entry stack: [V10, 0x94, V50, V200, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V208, 0x8da5cb5b, V222, 0x20, V225, V226, V225, 0x0, V208]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V200, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V208, 0x8da5cb5b, V222]

================================

Block 0x29e
[0x29e:0x2e9]
---
Predecessors: [0x294]
Successors: [0x2ea]
---
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 DUP1
0x2a5 MLOAD
0x2a6 SWAP1
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa POP
0x2ab SWAP6
0x2ac POP
0x2ad DUP1
0x2ae PUSH1 0x1
0x2b0 PUSH1 0xa0
0x2b2 PUSH1 0x2
0x2b4 EXP
0x2b5 SUB
0x2b6 AND
0x2b7 PUSH4 0x38d52e0f
0x2bc PUSH1 0x0
0x2be PUSH1 0x40
0x2c0 MLOAD
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 MSTORE
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP2
0x2c9 PUSH1 0xe0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce MUL
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x4
0x2d3 ADD
0x2d4 DUP1
0x2d5 SWAP1
0x2d6 POP
0x2d7 PUSH1 0x20
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc DUP1
0x2dd DUP4
0x2de SUB
0x2df DUP2
0x2e0 PUSH1 0x0
0x2e2 DUP8
0x2e3 DUP1
0x2e4 EXTCODESIZE
0x2e5 ISZERO
0x2e6 PUSH2 0x0
0x2e9 JUMPI
---
0x2a1: V237 = 0x40
0x2a3: V238 = M[0x40]
0x2a5: V239 = M[V238]
0x2a7: V240 = 0x20
0x2a9: V241 = ADD 0x20 V238
0x2ae: V242 = 0x1
0x2b0: V243 = 0xa0
0x2b2: V244 = 0x2
0x2b4: V245 = EXP 0x2 0xa0
0x2b5: V246 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b6: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x2b7: V248 = 0x38d52e0f
0x2bc: V249 = 0x0
0x2be: V250 = 0x40
0x2c0: V251 = M[0x40]
0x2c1: V252 = 0x20
0x2c3: V253 = ADD 0x20 V251
0x2c4: M[V253] = 0x0
0x2c5: V254 = 0x40
0x2c7: V255 = M[0x40]
0x2c9: V256 = 0xe0
0x2cb: V257 = 0x2
0x2cd: V258 = EXP 0x2 0xe0
0x2ce: V259 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x2d0: M[V255] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x2d1: V260 = 0x4
0x2d3: V261 = ADD 0x4 V255
0x2d7: V262 = 0x20
0x2d9: V263 = 0x40
0x2db: V264 = M[0x40]
0x2de: V265 = SUB V261 V264
0x2e0: V266 = 0x0
0x2e4: V267 = EXTCODESIZE V247
0x2e5: V268 = ISZERO V267
0x2e6: V269 = 0x0
0x2e9: THROWI V268
---
Entry stack: [V10, 0x94, V50, V200, 0x0, 0x0, 0x0, 0x0, 0x0, V50, V208, 0x8da5cb5b, V222]
Stack pops: 9
Stack additions: [V239, S7, S6, S5, S4, S3, V247, 0x38d52e0f, V261, 0x20, V264, V265, V264, 0x0, V247]
Exit stack: [V10, 0x94, V50, V200, V239, 0x0, 0x0, 0x0, 0x0, V50, V247, 0x38d52e0f, V261, 0x20, V264, V265, V264, 0x0, V247]

================================

Block 0x2ea
[0x2ea:0x2f3]
---
Predecessors: [0x29e]
Successors: [0x2f4]
---
0x2ea PUSH1 0x32
0x2ec GAS
0x2ed SUB
0x2ee CALL
0x2ef ISZERO
0x2f0 PUSH2 0x0
0x2f3 JUMPI
---
0x2ea: V270 = 0x32
0x2ec: V271 = GAS
0x2ed: V272 = SUB V271 0x32
0x2ee: V273 = CALL V272 V247 0x0 V264 V265 V264 0x20
0x2ef: V274 = ISZERO V273
0x2f0: V275 = 0x0
0x2f3: THROWI V274
---
Entry stack: [V10, 0x94, V50, V200, V239, 0x0, 0x0, 0x0, 0x0, V50, V247, 0x38d52e0f, V261, 0x20, V264, V265, V264, 0x0, V247]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V200, V239, 0x0, 0x0, 0x0, 0x0, V50, V247, 0x38d52e0f, V261]

================================

Block 0x2f4
[0x2f4:0x33f]
---
Predecessors: [0x2ea]
Successors: [0x340]
---
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb MLOAD
0x2fc SWAP1
0x2fd PUSH1 0x20
0x2ff ADD
0x300 POP
0x301 SWAP5
0x302 POP
0x303 DUP1
0x304 PUSH1 0x1
0x306 PUSH1 0xa0
0x308 PUSH1 0x2
0x30a EXP
0x30b SUB
0x30c AND
0x30d PUSH4 0x4b750334
0x312 PUSH1 0x0
0x314 PUSH1 0x40
0x316 MLOAD
0x317 PUSH1 0x20
0x319 ADD
0x31a MSTORE
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP2
0x31f PUSH1 0xe0
0x321 PUSH1 0x2
0x323 EXP
0x324 MUL
0x325 DUP2
0x326 MSTORE
0x327 PUSH1 0x4
0x329 ADD
0x32a DUP1
0x32b SWAP1
0x32c POP
0x32d PUSH1 0x20
0x32f PUSH1 0x40
0x331 MLOAD
0x332 DUP1
0x333 DUP4
0x334 SUB
0x335 DUP2
0x336 PUSH1 0x0
0x338 DUP8
0x339 DUP1
0x33a EXTCODESIZE
0x33b ISZERO
0x33c PUSH2 0x0
0x33f JUMPI
---
0x2f7: V276 = 0x40
0x2f9: V277 = M[0x40]
0x2fb: V278 = M[V277]
0x2fd: V279 = 0x20
0x2ff: V280 = ADD 0x20 V277
0x304: V281 = 0x1
0x306: V282 = 0xa0
0x308: V283 = 0x2
0x30a: V284 = EXP 0x2 0xa0
0x30b: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30c: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x30d: V287 = 0x4b750334
0x312: V288 = 0x0
0x314: V289 = 0x40
0x316: V290 = M[0x40]
0x317: V291 = 0x20
0x319: V292 = ADD 0x20 V290
0x31a: M[V292] = 0x0
0x31b: V293 = 0x40
0x31d: V294 = M[0x40]
0x31f: V295 = 0xe0
0x321: V296 = 0x2
0x323: V297 = EXP 0x2 0xe0
0x324: V298 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4b750334
0x326: M[V294] = 0x4b75033400000000000000000000000000000000000000000000000000000000
0x327: V299 = 0x4
0x329: V300 = ADD 0x4 V294
0x32d: V301 = 0x20
0x32f: V302 = 0x40
0x331: V303 = M[0x40]
0x334: V304 = SUB V300 V303
0x336: V305 = 0x0
0x33a: V306 = EXTCODESIZE V286
0x33b: V307 = ISZERO V306
0x33c: V308 = 0x0
0x33f: THROWI V307
---
Entry stack: [V10, 0x94, V50, V200, V239, 0x0, 0x0, 0x0, 0x0, V50, V247, 0x38d52e0f, V261]
Stack pops: 8
Stack additions: [V278, S6, S5, S4, S3, V286, 0x4b750334, V300, 0x20, V303, V304, V303, 0x0, V286]
Exit stack: [V10, 0x94, V50, V200, V239, V278, 0x0, 0x0, 0x0, V50, V286, 0x4b750334, V300, 0x20, V303, V304, V303, 0x0, V286]

================================

Block 0x340
[0x340:0x349]
---
Predecessors: [0x2f4]
Successors: [0x34a]
---
0x340 PUSH1 0x32
0x342 GAS
0x343 SUB
0x344 CALL
0x345 ISZERO
0x346 PUSH2 0x0
0x349 JUMPI
---
0x340: V309 = 0x32
0x342: V310 = GAS
0x343: V311 = SUB V310 0x32
0x344: V312 = CALL V311 V286 0x0 V303 V304 V303 0x20
0x345: V313 = ISZERO V312
0x346: V314 = 0x0
0x349: THROWI V313
---
Entry stack: [V10, 0x94, V50, V200, V239, V278, 0x0, 0x0, 0x0, V50, V286, 0x4b750334, V300, 0x20, V303, V304, V303, 0x0, V286]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V200, V239, V278, 0x0, 0x0, 0x0, V50, V286, 0x4b750334, V300]

================================

Block 0x34a
[0x34a:0x395]
---
Predecessors: [0x340]
Successors: [0x396]
---
0x34a POP
0x34b POP
0x34c POP
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 MLOAD
0x352 SWAP1
0x353 PUSH1 0x20
0x355 ADD
0x356 POP
0x357 SWAP4
0x358 POP
0x359 DUP1
0x35a PUSH1 0x1
0x35c PUSH1 0xa0
0x35e PUSH1 0x2
0x360 EXP
0x361 SUB
0x362 AND
0x363 PUSH4 0x976a8435
0x368 PUSH1 0x0
0x36a PUSH1 0x40
0x36c MLOAD
0x36d PUSH1 0x20
0x36f ADD
0x370 MSTORE
0x371 PUSH1 0x40
0x373 MLOAD
0x374 DUP2
0x375 PUSH1 0xe0
0x377 PUSH1 0x2
0x379 EXP
0x37a MUL
0x37b DUP2
0x37c MSTORE
0x37d PUSH1 0x4
0x37f ADD
0x380 DUP1
0x381 SWAP1
0x382 POP
0x383 PUSH1 0x20
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 DUP4
0x38a SUB
0x38b DUP2
0x38c PUSH1 0x0
0x38e DUP8
0x38f DUP1
0x390 EXTCODESIZE
0x391 ISZERO
0x392 PUSH2 0x0
0x395 JUMPI
---
0x34d: V315 = 0x40
0x34f: V316 = M[0x40]
0x351: V317 = M[V316]
0x353: V318 = 0x20
0x355: V319 = ADD 0x20 V316
0x35a: V320 = 0x1
0x35c: V321 = 0xa0
0x35e: V322 = 0x2
0x360: V323 = EXP 0x2 0xa0
0x361: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x362: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x363: V326 = 0x976a8435
0x368: V327 = 0x0
0x36a: V328 = 0x40
0x36c: V329 = M[0x40]
0x36d: V330 = 0x20
0x36f: V331 = ADD 0x20 V329
0x370: M[V331] = 0x0
0x371: V332 = 0x40
0x373: V333 = M[0x40]
0x375: V334 = 0xe0
0x377: V335 = 0x2
0x379: V336 = EXP 0x2 0xe0
0x37a: V337 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x976a8435
0x37c: M[V333] = 0x976a843500000000000000000000000000000000000000000000000000000000
0x37d: V338 = 0x4
0x37f: V339 = ADD 0x4 V333
0x383: V340 = 0x20
0x385: V341 = 0x40
0x387: V342 = M[0x40]
0x38a: V343 = SUB V339 V342
0x38c: V344 = 0x0
0x390: V345 = EXTCODESIZE V325
0x391: V346 = ISZERO V345
0x392: V347 = 0x0
0x395: THROWI V346
---
Entry stack: [V10, 0x94, V50, V200, V239, V278, 0x0, 0x0, 0x0, V50, V286, 0x4b750334, V300]
Stack pops: 7
Stack additions: [V317, S5, S4, S3, V325, 0x976a8435, V339, 0x20, V342, V343, V342, 0x0, V325]
Exit stack: [V10, 0x94, V50, V200, V239, V278, V317, 0x0, 0x0, V50, V325, 0x976a8435, V339, 0x20, V342, V343, V342, 0x0, V325]

================================

Block 0x396
[0x396:0x39f]
---
Predecessors: [0x34a]
Successors: [0x3a0]
---
0x396 PUSH1 0x32
0x398 GAS
0x399 SUB
0x39a CALL
0x39b ISZERO
0x39c PUSH2 0x0
0x39f JUMPI
---
0x396: V348 = 0x32
0x398: V349 = GAS
0x399: V350 = SUB V349 0x32
0x39a: V351 = CALL V350 V325 0x0 V342 V343 V342 0x20
0x39b: V352 = ISZERO V351
0x39c: V353 = 0x0
0x39f: THROWI V352
---
Entry stack: [V10, 0x94, V50, V200, V239, V278, V317, 0x0, 0x0, V50, V325, 0x976a8435, V339, 0x20, V342, V343, V342, 0x0, V325]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V200, V239, V278, V317, 0x0, 0x0, V50, V325, 0x976a8435, V339]

================================

Block 0x3a0
[0x3a0:0x3eb]
---
Predecessors: [0x396]
Successors: [0x3ec]
---
0x3a0 POP
0x3a1 POP
0x3a2 POP
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 MLOAD
0x3a8 SWAP1
0x3a9 PUSH1 0x20
0x3ab ADD
0x3ac POP
0x3ad SWAP3
0x3ae POP
0x3af DUP1
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 AND
0x3b9 PUSH4 0x4ca50f59
0x3be PUSH1 0x0
0x3c0 PUSH1 0x40
0x3c2 MLOAD
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 MSTORE
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca DUP2
0x3cb PUSH1 0xe0
0x3cd PUSH1 0x2
0x3cf EXP
0x3d0 MUL
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x4
0x3d5 ADD
0x3d6 DUP1
0x3d7 SWAP1
0x3d8 POP
0x3d9 PUSH1 0x20
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de DUP1
0x3df DUP4
0x3e0 SUB
0x3e1 DUP2
0x3e2 PUSH1 0x0
0x3e4 DUP8
0x3e5 DUP1
0x3e6 EXTCODESIZE
0x3e7 ISZERO
0x3e8 PUSH2 0x0
0x3eb JUMPI
---
0x3a3: V354 = 0x40
0x3a5: V355 = M[0x40]
0x3a7: V356 = M[V355]
0x3a9: V357 = 0x20
0x3ab: V358 = ADD 0x20 V355
0x3b0: V359 = 0x1
0x3b2: V360 = 0xa0
0x3b4: V361 = 0x2
0x3b6: V362 = EXP 0x2 0xa0
0x3b7: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b8: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x3b9: V365 = 0x4ca50f59
0x3be: V366 = 0x0
0x3c0: V367 = 0x40
0x3c2: V368 = M[0x40]
0x3c3: V369 = 0x20
0x3c5: V370 = ADD 0x20 V368
0x3c6: M[V370] = 0x0
0x3c7: V371 = 0x40
0x3c9: V372 = M[0x40]
0x3cb: V373 = 0xe0
0x3cd: V374 = 0x2
0x3cf: V375 = EXP 0x2 0xe0
0x3d0: V376 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4ca50f59
0x3d2: M[V372] = 0x4ca50f5900000000000000000000000000000000000000000000000000000000
0x3d3: V377 = 0x4
0x3d5: V378 = ADD 0x4 V372
0x3d9: V379 = 0x20
0x3db: V380 = 0x40
0x3dd: V381 = M[0x40]
0x3e0: V382 = SUB V378 V381
0x3e2: V383 = 0x0
0x3e6: V384 = EXTCODESIZE V364
0x3e7: V385 = ISZERO V384
0x3e8: V386 = 0x0
0x3eb: THROWI V385
---
Entry stack: [V10, 0x94, V50, V200, V239, V278, V317, 0x0, 0x0, V50, V325, 0x976a8435, V339]
Stack pops: 6
Stack additions: [V356, S4, S3, V364, 0x4ca50f59, V378, 0x20, V381, V382, V381, 0x0, V364]
Exit stack: [V10, 0x94, V50, V200, V239, V278, V317, V356, 0x0, V50, V364, 0x4ca50f59, V378, 0x20, V381, V382, V381, 0x0, V364]

================================

Block 0x3ec
[0x3ec:0x3f5]
---
Predecessors: [0x3a0]
Successors: [0x3f6]
---
0x3ec PUSH1 0x32
0x3ee GAS
0x3ef SUB
0x3f0 CALL
0x3f1 ISZERO
0x3f2 PUSH2 0x0
0x3f5 JUMPI
---
0x3ec: V387 = 0x32
0x3ee: V388 = GAS
0x3ef: V389 = SUB V388 0x32
0x3f0: V390 = CALL V389 V364 0x0 V381 V382 V381 0x20
0x3f1: V391 = ISZERO V390
0x3f2: V392 = 0x0
0x3f5: THROWI V391
---
Entry stack: [V10, 0x94, V50, V200, V239, V278, V317, V356, 0x0, V50, V364, 0x4ca50f59, V378, 0x20, V381, V382, V381, 0x0, V364]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x94, V50, V200, V239, V278, V317, V356, 0x0, V50, V364, 0x4ca50f59, V378]

================================

Block 0x3f6
[0x3f6:0x3fe]
---
Predecessors: [0x3ec]
Successors: [0x3ff]
---
0x3f6 POP
0x3f7 POP
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb MLOAD
0x3fc SWAP3
0x3fd POP
0x3fe POP
---
0x3f8: V393 = 0x40
0x3fa: V394 = M[0x40]
0x3fb: V395 = M[V394]
---
Entry stack: [V10, 0x94, V50, V200, V239, V278, V317, V356, 0x0, V50, V364, 0x4ca50f59, V378]
Stack pops: 5
Stack additions: [V395, S3]
Exit stack: [V10, 0x94, V50, V200, V239, V278, V317, V356, V395, V50]

================================

Block 0x3ff
[0x3ff:0x3ff]
---
Predecessors: [0x22b, 0x3f6]
Successors: [0x400]
---
0x3ff JUMPDEST
---
0x3ff: JUMPDEST 
---
Entry stack: [V10, 0x94, V50, V200, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x94, V50, V200, S5, S4, S3, S2, S1, S0]

================================

Block 0x400
[0x400:0x409]
---
Predecessors: [0x3ff]
Successors: [0x94]
---
0x400 JUMPDEST
0x401 POP
0x402 SWAP2
0x403 SWAP4
0x404 SWAP6
0x405 POP
0x406 SWAP2
0x407 SWAP4
0x408 SWAP6
0x409 JUMP
---
0x400: JUMPDEST 
0x409: JUMP 0x94
---
Entry stack: [V10, 0x94, V50, V200, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V10, V200, S5, S4, S3, S2, S1]

================================

Block 0x40a
[0x40a:0x418]
---
Predecessors: [0xdb, 0xa8a, 0xade]
Successors: [0xe2]
---
0x40a JUMPDEST
0x40b PUSH1 0x0
0x40d SLOAD
0x40e PUSH1 0x1
0x410 PUSH1 0xa0
0x412 PUSH1 0x2
0x414 EXP
0x415 SUB
0x416 AND
0x417 DUP2
0x418 JUMP
---
0x40a: JUMPDEST 
0x40b: V396 = 0x0
0x40d: V397 = S[0x0]
0x40e: V398 = 0x1
0x410: V399 = 0xa0
0x412: V400 = 0x2
0x414: V401 = EXP 0x2 0xa0
0x415: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x416: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x418: JUMP 0xe2
---
Entry stack: [S2, V10, 0xe2]
Stack pops: 1
Stack additions: [S0, V403]
Exit stack: [S2, V10, 0xe2, V403]

================================

Block 0x419
[0x419:0x42b]
---
Predecessors: [0x104]
Successors: [0x42c, 0x430]
---
0x419 JUMPDEST
0x41a PUSH1 0x0
0x41c PUSH1 0x1
0x41e PUSH1 0xa0
0x420 PUSH1 0x2
0x422 EXP
0x423 SUB
0x424 DUP6
0x425 AND
0x426 ISZERO
0x427 ISZERO
0x428 PUSH2 0x430
0x42b JUMPI
---
0x419: JUMPDEST 
0x41a: V404 = 0x0
0x41c: V405 = 0x1
0x41e: V406 = 0xa0
0x420: V407 = 0x2
0x422: V408 = EXP 0x2 0xa0
0x423: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x425: V410 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x426: V411 = ISZERO V410
0x427: V412 = ISZERO V411
0x428: V413 = 0x430
0x42b: JUMPI 0x430 V412
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x42c
[0x42c:0x42f]
---
Predecessors: [0x419]
Successors: []
---
0x42c PUSH2 0x0
0x42f JUMP
---
0x42c: V414 = 0x0
0x42f: THROW 
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x430
[0x430:0x438]
---
Predecessors: [0x419]
Successors: [0x439, 0x43d]
---
0x430 JUMPDEST
0x431 PUSH1 0x0
0x433 DUP5
0x434 GT
0x435 PUSH2 0x43d
0x438 JUMPI
---
0x430: JUMPDEST 
0x431: V415 = 0x0
0x434: V416 = GT V100 0x0
0x435: V417 = 0x43d
0x438: JUMPI 0x43d V416
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x439
[0x439:0x43c]
---
Predecessors: [0x430]
Successors: []
---
0x439 PUSH2 0x0
0x43c JUMP
---
0x439: V418 = 0x0
0x43c: THROW 
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x43d
[0x43d:0x445]
---
Predecessors: [0x430]
Successors: [0x446, 0x44a]
---
0x43d JUMPDEST
0x43e PUSH1 0x0
0x440 DUP4
0x441 GT
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x43d: JUMPDEST 
0x43e: V419 = 0x0
0x441: V420 = GT V102 0x0
0x442: V421 = 0x44a
0x445: JUMPI 0x44a V420
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x43d]
Successors: []
---
0x446 PUSH2 0x0
0x449 JUMP
---
0x446: V422 = 0x0
0x449: THROW 
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]

================================

Block 0x44a
[0x44a:0x495]
---
Predecessors: [0x43d]
Successors: [0x496]
---
0x44a JUMPDEST
0x44b DUP5
0x44c DUP5
0x44d DUP5
0x44e DUP5
0x44f PUSH1 0x40
0x451 MLOAD
0x452 PUSH2 0x86a
0x455 DUP1
0x456 PUSH2 0x602
0x459 DUP4
0x45a CODECOPY
0x45b ADD
0x45c DUP1
0x45d DUP6
0x45e PUSH1 0x1
0x460 PUSH1 0xa0
0x462 PUSH1 0x2
0x464 EXP
0x465 SUB
0x466 AND
0x467 DUP2
0x468 MSTORE
0x469 PUSH1 0x20
0x46b ADD
0x46c DUP5
0x46d DUP2
0x46e MSTORE
0x46f PUSH1 0x20
0x471 ADD
0x472 DUP4
0x473 DUP2
0x474 MSTORE
0x475 PUSH1 0x20
0x477 ADD
0x478 DUP3
0x479 ISZERO
0x47a ISZERO
0x47b DUP2
0x47c MSTORE
0x47d PUSH1 0x20
0x47f ADD
0x480 SWAP5
0x481 POP
0x482 POP
0x483 POP
0x484 POP
0x485 POP
0x486 PUSH1 0x40
0x488 MLOAD
0x489 DUP1
0x48a SWAP2
0x48b SUB
0x48c SWAP1
0x48d PUSH1 0x0
0x48f CREATE
0x490 DUP1
0x491 ISZERO
0x492 PUSH2 0x0
0x495 JUMPI
---
0x44a: JUMPDEST 
0x44f: V423 = 0x40
0x451: V424 = M[0x40]
0x452: V425 = 0x86a
0x456: V426 = 0x602
0x45a: CODECOPY V424 0x602 0x86a
0x45b: V427 = ADD 0x86a V424
0x45e: V428 = 0x1
0x460: V429 = 0xa0
0x462: V430 = 0x2
0x464: V431 = EXP 0x2 0xa0
0x465: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x466: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x468: M[V427] = V433
0x469: V434 = 0x20
0x46b: V435 = ADD 0x20 V427
0x46e: M[V435] = V100
0x46f: V436 = 0x20
0x471: V437 = ADD 0x20 V435
0x474: M[V437] = V102
0x475: V438 = 0x20
0x477: V439 = ADD 0x20 V437
0x479: V440 = ISZERO V104
0x47a: V441 = ISZERO V440
0x47c: M[V439] = V441
0x47d: V442 = 0x20
0x47f: V443 = ADD 0x20 V439
0x486: V444 = 0x40
0x488: V445 = M[0x40]
0x48b: V446 = SUB V443 V445
0x48d: V447 = 0x0
0x48f: V448 = CREATE 0x0 V445 V446
0x491: V449 = ISZERO V448
0x492: V450 = 0x0
0x495: THROWI V449
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V448]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, 0x0, V448]

================================

Block 0x496
[0x496:0x50d]
---
Predecessors: [0x44a]
Successors: [0x50e]
---
0x496 PUSH1 0x1
0x498 PUSH1 0xa0
0x49a PUSH1 0x2
0x49c EXP
0x49d SUB
0x49e DUP1
0x49f DUP3
0x4a0 AND
0x4a1 PUSH1 0x0
0x4a3 DUP2
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x1
0x4a8 PUSH1 0x20
0x4aa DUP2
0x4ab SWAP1
0x4ac MSTORE
0x4ad PUSH1 0x40
0x4af DUP1
0x4b0 DUP4
0x4b1 SHA3
0x4b2 DUP1
0x4b3 SLOAD
0x4b4 PUSH1 0xff
0x4b6 NOT
0x4b7 AND
0x4b8 SWAP1
0x4b9 SWAP3
0x4ba OR
0x4bb SWAP1
0x4bc SWAP2
0x4bd SSTORE
0x4be DUP1
0x4bf MLOAD
0x4c0 PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4e1 DUP2
0x4e2 MSTORE
0x4e3 CALLER
0x4e4 SWAP1
0x4e5 SWAP5
0x4e6 AND
0x4e7 PUSH1 0x4
0x4e9 DUP6
0x4ea ADD
0x4eb MSTORE
0x4ec MLOAD
0x4ed SWAP4
0x4ee SWAP5
0x4ef POP
0x4f0 SWAP1
0x4f1 SWAP3
0x4f2 PUSH4 0xf2fde38b
0x4f7 SWAP3
0x4f8 PUSH1 0x24
0x4fa DUP1
0x4fb DUP3
0x4fc ADD
0x4fd SWAP4
0x4fe SWAP3
0x4ff SWAP2
0x500 DUP3
0x501 SWAP1
0x502 SUB
0x503 ADD
0x504 DUP2
0x505 DUP4
0x506 DUP8
0x507 DUP1
0x508 EXTCODESIZE
0x509 ISZERO
0x50a PUSH2 0x0
0x50d JUMPI
---
0x496: V451 = 0x1
0x498: V452 = 0xa0
0x49a: V453 = 0x2
0x49c: V454 = EXP 0x2 0xa0
0x49d: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a0: V456 = AND V448 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V457 = 0x0
0x4a5: M[0x0] = V456
0x4a6: V458 = 0x1
0x4a8: V459 = 0x20
0x4ac: M[0x20] = 0x1
0x4ad: V460 = 0x40
0x4b1: V461 = SHA3 0x0 0x40
0x4b3: V462 = S[V461]
0x4b4: V463 = 0xff
0x4b6: V464 = NOT 0xff
0x4b7: V465 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V462
0x4ba: V466 = OR 0x1 V465
0x4bd: S[V461] = V466
0x4bf: V467 = M[0x40]
0x4c0: V468 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4e2: M[V467] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4e3: V469 = CALLER
0x4e6: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x4e7: V471 = 0x4
0x4ea: V472 = ADD V467 0x4
0x4eb: M[V472] = V470
0x4ec: V473 = M[0x40]
0x4f2: V474 = 0xf2fde38b
0x4f8: V475 = 0x24
0x4fc: V476 = ADD V467 0x24
0x502: V477 = SUB V467 V473
0x503: V478 = ADD V477 0x24
0x508: V479 = EXTCODESIZE V456
0x509: V480 = ISZERO V479
0x50a: V481 = 0x0
0x50d: THROWI V480
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, 0x0, V448]
Stack pops: 2
Stack additions: [S0, V456, 0xf2fde38b, V476, 0x0, V473, V478, V473, 0x0, V456]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, V448, V456, 0xf2fde38b, V476, 0x0, V473, V478, V473, 0x0, V456]

================================

Block 0x50e
[0x50e:0x517]
---
Predecessors: [0x496]
Successors: [0x518]
---
0x50e PUSH1 0x32
0x510 GAS
0x511 SUB
0x512 CALL
0x513 ISZERO
0x514 PUSH2 0x0
0x517 JUMPI
---
0x50e: V482 = 0x32
0x510: V483 = GAS
0x511: V484 = SUB V483 0x32
0x512: V485 = CALL V484 V456 0x0 V473 V478 V473 0x0
0x513: V486 = ISZERO V485
0x514: V487 = 0x0
0x517: THROWI V486
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, V448, V456, 0xf2fde38b, V476, 0x0, V473, V478, V473, 0x0, V456]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xe2, V98, V100, V102, V104, V448, V456, 0xf2fde38b, V476]

================================

Block 0x518
[0x518:0x570]
---
Predecessors: [0x50e]
Successors: [0x571]
---
0x518 POP
0x519 POP
0x51a PUSH1 0x40
0x51c DUP1
0x51d MLOAD
0x51e DUP7
0x51f DUP2
0x520 MSTORE
0x521 PUSH1 0x20
0x523 DUP2
0x524 ADD
0x525 DUP7
0x526 SWAP1
0x527 MSTORE
0x528 DUP5
0x529 ISZERO
0x52a ISZERO
0x52b DUP2
0x52c DUP4
0x52d ADD
0x52e MSTORE
0x52f SWAP1
0x530 MLOAD
0x531 PUSH1 0x1
0x533 PUSH1 0xa0
0x535 PUSH1 0x2
0x537 EXP
0x538 SUB
0x539 DUP1
0x53a DUP10
0x53b AND
0x53c SWAP4
0x53d POP
0x53e DUP5
0x53f DUP2
0x540 AND
0x541 SWAP3
0x542 CALLER
0x543 SWAP1
0x544 SWAP2
0x545 AND
0x546 SWAP2
0x547 PUSH32 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5
0x568 SWAP2
0x569 DUP2
0x56a SWAP1
0x56b SUB
0x56c PUSH1 0x60
0x56e ADD
0x56f SWAP1
0x570 LOG4
---
0x51a: V488 = 0x40
0x51d: V489 = M[0x40]
0x520: M[V489] = V100
0x521: V490 = 0x20
0x524: V491 = ADD V489 0x20
0x527: M[V491] = V102
0x529: V492 = ISZERO V104
0x52a: V493 = ISZERO V492
0x52d: V494 = ADD 0x40 V489
0x52e: M[V494] = V493
0x530: V495 = M[0x40]
0x531: V496 = 0x1
0x533: V497 = 0xa0
0x535: V498 = 0x2
0x537: V499 = EXP 0x2 0xa0
0x538: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53b: V501 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x540: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x542: V503 = CALLER
0x545: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x547: V505 = 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5
0x56b: V506 = SUB V489 V495
0x56c: V507 = 0x60
0x56e: V508 = ADD 0x60 V506
0x570: LOG V495 V508 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5 V504 V502 V501
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, V448, V456, 0xf2fde38b, V476]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3]
Exit stack: [V10, 0xe2, V98, V100, V102, V104, V448]

================================

Block 0x571
[0x571:0x578]
---
Predecessors: [0x518]
Successors: [0xe2]
---
0x571 JUMPDEST
0x572 SWAP5
0x573 SWAP4
0x574 POP
0x575 POP
0x576 POP
0x577 POP
0x578 JUMP
---
0x571: JUMPDEST 
0x578: JUMP 0xe2
---
Entry stack: [V10, 0xe2, V98, V100, V102, V104, V448]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V10, V448]

================================

Block 0x579
[0x579:0x58f]
---
Predecessors: [0x139]
Successors: [0x590, 0x594]
---
0x579 JUMPDEST
0x57a PUSH1 0x0
0x57c SLOAD
0x57d CALLER
0x57e PUSH1 0x1
0x580 PUSH1 0xa0
0x582 PUSH1 0x2
0x584 EXP
0x585 SUB
0x586 SWAP1
0x587 DUP2
0x588 AND
0x589 SWAP2
0x58a AND
0x58b EQ
0x58c PUSH2 0x594
0x58f JUMPI
---
0x579: JUMPDEST 
0x57a: V509 = 0x0
0x57c: V510 = S[0x0]
0x57d: V511 = CALLER
0x57e: V512 = 0x1
0x580: V513 = 0xa0
0x582: V514 = 0x2
0x584: V515 = EXP 0x2 0xa0
0x585: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x588: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x58a: V518 = AND V510 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V519 = EQ V518 V517
0x58c: V520 = 0x594
0x58f: JUMPI 0x594 V519
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V122]

================================

Block 0x590
[0x590:0x593]
---
Predecessors: [0x579]
Successors: []
---
0x590 PUSH2 0x0
0x593 JUMP
---
0x590: V521 = 0x0
0x593: THROW 
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V122]

================================

Block 0x594
[0x594:0x5fd]
---
Predecessors: [0x579]
Successors: [0x5fe]
---
0x594 JUMPDEST
0x595 PUSH1 0x0
0x597 DUP1
0x598 SLOAD
0x599 PUSH1 0x40
0x59b MLOAD
0x59c PUSH1 0x1
0x59e PUSH1 0xa0
0x5a0 PUSH1 0x2
0x5a2 EXP
0x5a3 SUB
0x5a4 DUP1
0x5a5 DUP6
0x5a6 AND
0x5a7 SWAP4
0x5a8 SWAP3
0x5a9 AND
0x5aa SWAP2
0x5ab PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5cc SWAP2
0x5cd LOG3
0x5ce PUSH1 0x0
0x5d0 DUP1
0x5d1 SLOAD
0x5d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e7 NOT
0x5e8 AND
0x5e9 PUSH13 0x1000000000000000000000000
0x5f7 DUP4
0x5f8 DUP2
0x5f9 MUL
0x5fa DIV
0x5fb OR
0x5fc SWAP1
0x5fd SSTORE
---
0x594: JUMPDEST 
0x595: V522 = 0x0
0x598: V523 = S[0x0]
0x599: V524 = 0x40
0x59b: V525 = M[0x40]
0x59c: V526 = 0x1
0x59e: V527 = 0xa0
0x5a0: V528 = 0x2
0x5a2: V529 = EXP 0x2 0xa0
0x5a3: V530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a6: V531 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x5a9: V532 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x5ab: V533 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5cd: LOG V525 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V532 V531
0x5ce: V534 = 0x0
0x5d1: V535 = S[0x0]
0x5d2: V536 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V537 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V538 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V535
0x5e9: V539 = 0x1000000000000000000000000
0x5f9: V540 = MUL 0x1000000000000000000000000 V122
0x5fa: V541 = DIV V540 0x1000000000000000000000000
0x5fb: V542 = OR V541 V538
0x5fd: S[0x0] = V542
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x5b, V122]

================================

Block 0x5fe
[0x5fe:0x5fe]
---
Predecessors: [0x594]
Successors: [0x5ff]
---
0x5fe JUMPDEST
---
0x5fe: JUMPDEST 
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x5b, V122]

================================

Block 0x5ff
[0x5ff:0x601]
---
Predecessors: [0x5fe]
Successors: [0x5b]
---
0x5ff JUMPDEST
0x600 POP
0x601 JUMP
---
0x5ff: JUMPDEST 
0x601: JUMP 0x5b
---
Entry stack: [V10, 0x5b, V122]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x602
[0x602:0x60b]
---
Predecessors: []
Successors: [0x60c]
---
0x602 PUSH1 0x60
0x604 PUSH1 0x40
0x606 MSTORE
0x607 CALLVALUE
0x608 PUSH2 0x0
0x60b JUMPI
---
0x602: V543 = 0x60
0x604: V544 = 0x40
0x606: M[0x40] = 0x60
0x607: V545 = CALLVALUE
0x608: V546 = 0x0
0x60b: THROWI V545
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x60c
[0x60c:0x631]
---
Predecessors: [0x602]
Successors: [0x632]
---
0x60c PUSH1 0x40
0x60e MLOAD
0x60f PUSH1 0x80
0x611 DUP1
0x612 PUSH2 0x86a
0x615 DUP4
0x616 CODECOPY
0x617 DUP2
0x618 ADD
0x619 PUSH1 0x40
0x61b SWAP1
0x61c DUP2
0x61d MSTORE
0x61e DUP2
0x61f MLOAD
0x620 PUSH1 0x20
0x622 DUP4
0x623 ADD
0x624 MLOAD
0x625 SWAP2
0x626 DUP4
0x627 ADD
0x628 MLOAD
0x629 PUSH1 0x60
0x62b SWAP1
0x62c SWAP4
0x62d ADD
0x62e MLOAD
0x62f SWAP1
0x630 SWAP3
0x631 SWAP1
---
0x60c: V547 = 0x40
0x60e: V548 = M[0x40]
0x60f: V549 = 0x80
0x612: V550 = 0x86a
0x616: CODECOPY V548 0x86a 0x80
0x618: V551 = ADD V548 0x80
0x619: V552 = 0x40
0x61d: M[0x40] = V551
0x61f: V553 = M[V548]
0x620: V554 = 0x20
0x623: V555 = ADD V548 0x20
0x624: V556 = M[V555]
0x627: V557 = ADD V548 0x40
0x628: V558 = M[V557]
0x629: V559 = 0x60
0x62d: V560 = ADD V548 0x60
0x62e: V561 = M[V560]
---
Entry stack: []
Stack pops: 0
Stack additions: [V553, V556, V558, V561]
Exit stack: [V553, V556, V558, V561]

================================

Block 0x632
[0x632:0x632]
---
Predecessors: [0x60c]
Successors: [0x633]
---
0x632 JUMPDEST
---
0x632: JUMPDEST 
---
Entry stack: [V553, V556, V558, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V553, V556, V558, V561]

================================

Block 0x633
[0x633:0x656]
---
Predecessors: [0x632]
Successors: [0x657]
---
0x633 JUMPDEST
0x634 PUSH1 0x0
0x636 DUP1
0x637 SLOAD
0x638 PUSH1 0x1
0x63a PUSH1 0xa0
0x63c PUSH1 0x2
0x63e EXP
0x63f SUB
0x640 NOT
0x641 AND
0x642 PUSH13 0x1000000000000000000000000
0x650 CALLER
0x651 DUP2
0x652 MUL
0x653 DIV
0x654 OR
0x655 SWAP1
0x656 SSTORE
---
0x633: JUMPDEST 
0x634: V562 = 0x0
0x637: V563 = S[0x0]
0x638: V564 = 0x1
0x63a: V565 = 0xa0
0x63c: V566 = 0x2
0x63e: V567 = EXP 0x2 0xa0
0x63f: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x640: V569 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x641: V570 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V563
0x642: V571 = 0x1000000000000000000000000
0x650: V572 = CALLER
0x652: V573 = MUL 0x1000000000000000000000000 V572
0x653: V574 = DIV V573 0x1000000000000000000000000
0x654: V575 = OR V574 V570
0x656: S[0x0] = V575
---
Entry stack: [V553, V556, V558, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V553, V556, V558, V561]

================================

Block 0x657
[0x657:0x6ef]
---
Predecessors: [0x633]
Successors: [0x6f0]
---
0x657 JUMPDEST
0x658 PUSH1 0x1
0x65a DUP1
0x65b SLOAD
0x65c PUSH1 0x1
0x65e PUSH1 0xa0
0x660 PUSH1 0x2
0x662 EXP
0x663 SUB
0x664 NOT
0x665 AND
0x666 PUSH13 0x1000000000000000000000000
0x674 DUP7
0x675 DUP2
0x676 MUL
0x677 DIV
0x678 OR
0x679 SWAP1
0x67a SSTORE
0x67b PUSH1 0x2
0x67d DUP4
0x67e SWAP1
0x67f SSTORE
0x680 PUSH1 0x3
0x682 DUP3
0x683 SWAP1
0x684 SSTORE
0x685 PUSH1 0x4
0x687 DUP1
0x688 SLOAD
0x689 PUSH1 0xff
0x68b NOT
0x68c AND
0x68d PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x6ae DUP4
0x6af DUP2
0x6b0 MUL
0x6b1 DIV
0x6b2 OR
0x6b3 SWAP1
0x6b4 DUP2
0x6b5 SWAP1
0x6b6 SSTORE
0x6b7 PUSH1 0x40
0x6b9 DUP1
0x6ba MLOAD
0x6bb PUSH1 0xff
0x6bd SWAP1
0x6be SWAP3
0x6bf AND
0x6c0 ISZERO
0x6c1 ISZERO
0x6c2 DUP3
0x6c3 MSTORE
0x6c4 MLOAD
0x6c5 PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6e6 SWAP2
0x6e7 PUSH1 0x20
0x6e9 SWAP1
0x6ea DUP3
0x6eb SWAP1
0x6ec SUB
0x6ed ADD
0x6ee SWAP1
0x6ef LOG1
---
0x657: JUMPDEST 
0x658: V576 = 0x1
0x65b: V577 = S[0x1]
0x65c: V578 = 0x1
0x65e: V579 = 0xa0
0x660: V580 = 0x2
0x662: V581 = EXP 0x2 0xa0
0x663: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x664: V583 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x665: V584 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V577
0x666: V585 = 0x1000000000000000000000000
0x676: V586 = MUL 0x1000000000000000000000000 V553
0x677: V587 = DIV V586 0x1000000000000000000000000
0x678: V588 = OR V587 V584
0x67a: S[0x1] = V588
0x67b: V589 = 0x2
0x67f: S[0x2] = V556
0x680: V590 = 0x3
0x684: S[0x3] = V558
0x685: V591 = 0x4
0x688: V592 = S[0x4]
0x689: V593 = 0xff
0x68b: V594 = NOT 0xff
0x68c: V595 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V592
0x68d: V596 = 0x100000000000000000000000000000000000000000000000000000000000000
0x6b0: V597 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V561
0x6b1: V598 = DIV V597 0x100000000000000000000000000000000000000000000000000000000000000
0x6b2: V599 = OR V598 V595
0x6b6: S[0x4] = V599
0x6b7: V600 = 0x40
0x6ba: V601 = M[0x40]
0x6bb: V602 = 0xff
0x6bf: V603 = AND V599 0xff
0x6c0: V604 = ISZERO V603
0x6c1: V605 = ISZERO V604
0x6c3: M[V601] = V605
0x6c4: V606 = M[0x40]
0x6c5: V607 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6e7: V608 = 0x20
0x6ec: V609 = SUB V601 V606
0x6ed: V610 = ADD V609 0x20
0x6ef: LOG V606 V610 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
---
Entry stack: [V553, V556, V558, V561]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V553, V556, V558, V561]

================================

Block 0x6f0
[0x6f0:0x6f4]
---
Predecessors: [0x657]
Successors: [0x6f5]
---
0x6f0 JUMPDEST
0x6f1 POP
0x6f2 POP
0x6f3 POP
0x6f4 POP
---
0x6f0: JUMPDEST 
---
Entry stack: [V553, V556, V558, V561]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x6f5
[0x6f5:0x70d]
---
Predecessors: [0x6f0]
Successors: [0x70e]
---
0x6f5 JUMPDEST
0x6f6 PUSH2 0x769
0x6f9 DUP1
0x6fa PUSH2 0x101
0x6fd PUSH1 0x0
0x6ff CODECOPY
0x700 PUSH1 0x0
0x702 RETURN
0x703 PUSH1 0x60
0x705 PUSH1 0x40
0x707 MSTORE
0x708 CALLDATASIZE
0x709 ISZERO
0x70a PUSH2 0x8d
0x70d JUMPI
---
0x6f5: JUMPDEST 
0x6f6: V611 = 0x769
0x6fa: V612 = 0x101
0x6fd: V613 = 0x0
0x6ff: CODECOPY 0x0 0x101 0x769
0x700: V614 = 0x0
0x702: RETURN 0x0 0x769
0x703: V615 = 0x60
0x705: V616 = 0x40
0x707: M[0x40] = 0x60
0x708: V617 = CALLDATASIZE
0x709: V618 = ISZERO V617
0x70a: V619 = 0x8d
0x70d: THROWI V618
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x70e
[0x70e:0x721]
---
Predecessors: [0x6f5]
Successors: [0x722]
---
0x70e PUSH1 0xe0
0x710 PUSH1 0x2
0x712 EXP
0x713 PUSH1 0x0
0x715 CALLDATALOAD
0x716 DIV
0x717 PUSH4 0x2170ebf7
0x71c DUP2
0x71d EQ
0x71e PUSH2 0x9e
0x721 JUMPI
---
0x70e: V620 = 0xe0
0x710: V621 = 0x2
0x712: V622 = EXP 0x2 0xe0
0x713: V623 = 0x0
0x715: V624 = CALLDATALOAD 0x0
0x716: V625 = DIV V624 0x100000000000000000000000000000000000000000000000000000000
0x717: V626 = 0x2170ebf7
0x71d: V627 = EQ V625 0x2170ebf7
0x71e: V628 = 0x9e
0x721: THROWI V627
---
Entry stack: []
Stack pops: 0
Stack additions: [V625]
Exit stack: [V625]

================================

Block 0x722
[0x722:0x72c]
---
Predecessors: [0x70e]
Successors: [0x72d]
---
0x722 DUP1
0x723 PUSH4 0x38d52e0f
0x728 EQ
0x729 PUSH2 0xc2
0x72c JUMPI
---
0x723: V629 = 0x38d52e0f
0x728: V630 = EQ 0x38d52e0f V625
0x729: V631 = 0xc2
0x72c: THROWI V630
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x72d
[0x72d:0x737]
---
Predecessors: [0x722]
Successors: [0x738]
---
0x72d DUP1
0x72e PUSH4 0x4b750334
0x733 EQ
0x734 PUSH2 0xeb
0x737 JUMPI
---
0x72e: V632 = 0x4b750334
0x733: V633 = EQ 0x4b750334 V625
0x734: V634 = 0xeb
0x737: THROWI V633
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x738
[0x738:0x742]
---
Predecessors: [0x72d]
Successors: [0x743]
---
0x738 DUP1
0x739 PUSH4 0x4ca50f59
0x73e EQ
0x73f PUSH2 0x10a
0x742 JUMPI
---
0x739: V635 = 0x4ca50f59
0x73e: V636 = EQ 0x4ca50f59 V625
0x73f: V637 = 0x10a
0x742: THROWI V636
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x743
[0x743:0x74d]
---
Predecessors: [0x738]
Successors: [0x74e]
---
0x743 DUP1
0x744 PUSH4 0x8da5cb5b
0x749 EQ
0x74a PUSH2 0x12b
0x74d JUMPI
---
0x744: V638 = 0x8da5cb5b
0x749: V639 = EQ 0x8da5cb5b V625
0x74a: V640 = 0x12b
0x74d: THROWI V639
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x74e
[0x74e:0x758]
---
Predecessors: [0x743]
Successors: [0x759]
---
0x74e DUP1
0x74f PUSH4 0x976a8435
0x754 EQ
0x755 PUSH2 0x154
0x758 JUMPI
---
0x74f: V641 = 0x976a8435
0x754: V642 = EQ 0x976a8435 V625
0x755: V643 = 0x154
0x758: THROWI V642
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x759
[0x759:0x763]
---
Predecessors: [0x74e]
Successors: [0x764]
---
0x759 DUP1
0x75a PUSH4 0xc34764cf
0x75f EQ
0x760 PUSH2 0x173
0x763 JUMPI
---
0x75a: V644 = 0xc34764cf
0x75f: V645 = EQ 0xc34764cf V625
0x760: V646 = 0x173
0x763: THROWI V645
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x764
[0x764:0x76e]
---
Predecessors: [0x759]
Successors: [0x76f]
---
0x764 DUP1
0x765 PUSH4 0xc60ccb0e
0x76a EQ
0x76b PUSH2 0x19a
0x76e JUMPI
---
0x765: V647 = 0xc60ccb0e
0x76a: V648 = EQ 0xc60ccb0e V625
0x76b: V649 = 0x19a
0x76e: THROWI V648
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x76f
[0x76f:0x779]
---
Predecessors: [0x764]
Successors: [0x77a]
---
0x76f DUP1
0x770 PUSH4 0xcd53a3b7
0x775 EQ
0x776 PUSH2 0x1a4
0x779 JUMPI
---
0x770: V650 = 0xcd53a3b7
0x775: V651 = EQ 0xcd53a3b7 V625
0x776: V652 = 0x1a4
0x779: THROWI V651
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x77a
[0x77a:0x784]
---
Predecessors: [0x76f]
Successors: [0x785]
---
0x77a DUP1
0x77b PUSH4 0xce5e84a3
0x780 EQ
0x781 PUSH2 0x1c8
0x784 JUMPI
---
0x77b: V653 = 0xce5e84a3
0x780: V654 = EQ 0xce5e84a3 V625
0x781: V655 = 0x1c8
0x784: THROWI V654
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x785
[0x785:0x78f]
---
Predecessors: [0x77a]
Successors: [0x790]
---
0x785 DUP1
0x786 PUSH4 0xf2fde38b
0x78b EQ
0x78c PUSH2 0x1da
0x78f JUMPI
---
0x786: V656 = 0xf2fde38b
0x78b: V657 = EQ 0xf2fde38b V625
0x78c: V658 = 0x1da
0x78f: THROWI V657
---
Entry stack: [V625]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V625]

================================

Block 0x790
[0x790:0x793]
---
Predecessors: [0x785]
Successors: [0x794]
---
0x790 JUMPDEST
0x791 PUSH2 0x9c
---
0x790: JUMPDEST 
0x791: V659 = 0x9c
---
Entry stack: [V625]
Stack pops: 0
Stack additions: [0x9c]
Exit stack: [V625, 0x9c]

================================

Block 0x794
[0x794:0x79c]
---
Predecessors: [0x790]
Successors: [0x79d]
---
0x794 JUMPDEST
0x795 PUSH2 0x99
0x798 PUSH2 0x1ec
0x79b JUMP
0x79c JUMPDEST
---
0x794: JUMPDEST 
0x795: V660 = 0x99
0x798: V661 = 0x1ec
0x79b: THROW 
0x79c: JUMPDEST 
---
Entry stack: [V625, 0x9c]
Stack pops: 0
Stack additions: [0x99]
Exit stack: []

================================

Block 0x79d
[0x79d:0x7a6]
---
Predecessors: [0x794]
Successors: [0x7a7]
---
0x79d JUMPDEST
0x79e JUMP
0x79f JUMPDEST
0x7a0 STOP
0x7a1 JUMPDEST
0x7a2 CALLVALUE
0x7a3 PUSH2 0x0
0x7a6 JUMPI
---
0x79d: JUMPDEST 
0x79e: JUMP S0
0x79f: JUMPDEST 
0x7a0: STOP 
0x7a1: JUMPDEST 
0x7a2: V662 = CALLVALUE
0x7a3: V663 = 0x0
0x7a6: THROWI V662
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x7a7
[0x7a7:0x7ca]
---
Predecessors: [0x79d]
Successors: [0x7cb]
---
0x7a7 PUSH2 0xae
0x7aa PUSH1 0x4
0x7ac CALLDATALOAD
0x7ad PUSH2 0x411
0x7b0 JUMP
0x7b1 JUMPDEST
0x7b2 PUSH1 0x40
0x7b4 DUP1
0x7b5 MLOAD
0x7b6 SWAP2
0x7b7 ISZERO
0x7b8 ISZERO
0x7b9 DUP3
0x7ba MSTORE
0x7bb MLOAD
0x7bc SWAP1
0x7bd DUP2
0x7be SWAP1
0x7bf SUB
0x7c0 PUSH1 0x20
0x7c2 ADD
0x7c3 SWAP1
0x7c4 RETURN
0x7c5 JUMPDEST
0x7c6 CALLVALUE
0x7c7 PUSH2 0x0
0x7ca JUMPI
---
0x7a7: V664 = 0xae
0x7aa: V665 = 0x4
0x7ac: V666 = CALLDATALOAD 0x4
0x7ad: V667 = 0x411
0x7b0: THROW 
0x7b1: JUMPDEST 
0x7b2: V668 = 0x40
0x7b5: V669 = M[0x40]
0x7b7: V670 = ISZERO S0
0x7b8: V671 = ISZERO V670
0x7ba: M[V669] = V671
0x7bb: V672 = M[0x40]
0x7bf: V673 = SUB V669 V672
0x7c0: V674 = 0x20
0x7c2: V675 = ADD 0x20 V673
0x7c4: RETURN V672 V675
0x7c5: JUMPDEST 
0x7c6: V676 = CALLVALUE
0x7c7: V677 = 0x0
0x7ca: THROWI V676
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae, V666]
Exit stack: []

================================

Block 0x7cb
[0x7cb:0x7f3]
---
Predecessors: [0x7a7]
Successors: [0x7f4]
---
0x7cb PUSH2 0xcf
0x7ce PUSH2 0x4a3
0x7d1 JUMP
0x7d2 JUMPDEST
0x7d3 PUSH1 0x40
0x7d5 DUP1
0x7d6 MLOAD
0x7d7 PUSH1 0x1
0x7d9 PUSH1 0xa0
0x7db PUSH1 0x2
0x7dd EXP
0x7de SUB
0x7df SWAP1
0x7e0 SWAP3
0x7e1 AND
0x7e2 DUP3
0x7e3 MSTORE
0x7e4 MLOAD
0x7e5 SWAP1
0x7e6 DUP2
0x7e7 SWAP1
0x7e8 SUB
0x7e9 PUSH1 0x20
0x7eb ADD
0x7ec SWAP1
0x7ed RETURN
0x7ee JUMPDEST
0x7ef CALLVALUE
0x7f0 PUSH2 0x0
0x7f3 JUMPI
---
0x7cb: V678 = 0xcf
0x7ce: V679 = 0x4a3
0x7d1: THROW 
0x7d2: JUMPDEST 
0x7d3: V680 = 0x40
0x7d6: V681 = M[0x40]
0x7d7: V682 = 0x1
0x7d9: V683 = 0xa0
0x7db: V684 = 0x2
0x7dd: V685 = EXP 0x2 0xa0
0x7de: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e1: V687 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x7e3: M[V681] = V687
0x7e4: V688 = M[0x40]
0x7e8: V689 = SUB V681 V688
0x7e9: V690 = 0x20
0x7eb: V691 = ADD 0x20 V689
0x7ed: RETURN V688 V691
0x7ee: JUMPDEST 
0x7ef: V692 = CALLVALUE
0x7f0: V693 = 0x0
0x7f3: THROWI V692
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcf]
Exit stack: []

================================

Block 0x7f4
[0x7f4:0x812]
---
Predecessors: [0x7cb]
Successors: [0x813]
---
0x7f4 PUSH2 0xf8
0x7f7 PUSH2 0x4b2
0x7fa JUMP
0x7fb JUMPDEST
0x7fc PUSH1 0x40
0x7fe DUP1
0x7ff MLOAD
0x800 SWAP2
0x801 DUP3
0x802 MSTORE
0x803 MLOAD
0x804 SWAP1
0x805 DUP2
0x806 SWAP1
0x807 SUB
0x808 PUSH1 0x20
0x80a ADD
0x80b SWAP1
0x80c RETURN
0x80d JUMPDEST
0x80e CALLVALUE
0x80f PUSH2 0x0
0x812 JUMPI
---
0x7f4: V694 = 0xf8
0x7f7: V695 = 0x4b2
0x7fa: THROW 
0x7fb: JUMPDEST 
0x7fc: V696 = 0x40
0x7ff: V697 = M[0x40]
0x802: M[V697] = S0
0x803: V698 = M[0x40]
0x807: V699 = SUB V697 V698
0x808: V700 = 0x20
0x80a: V701 = ADD 0x20 V699
0x80c: RETURN V698 V701
0x80d: JUMPDEST 
0x80e: V702 = CALLVALUE
0x80f: V703 = 0x0
0x812: THROWI V702
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf8]
Exit stack: []

================================

Block 0x813
[0x813:0x833]
---
Predecessors: [0x7f4]
Successors: [0x834]
---
0x813 PUSH2 0xae
0x816 PUSH2 0x4b8
0x819 JUMP
0x81a JUMPDEST
0x81b PUSH1 0x40
0x81d DUP1
0x81e MLOAD
0x81f SWAP2
0x820 ISZERO
0x821 ISZERO
0x822 DUP3
0x823 MSTORE
0x824 MLOAD
0x825 SWAP1
0x826 DUP2
0x827 SWAP1
0x828 SUB
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP1
0x82d RETURN
0x82e JUMPDEST
0x82f CALLVALUE
0x830 PUSH2 0x0
0x833 JUMPI
---
0x813: V704 = 0xae
0x816: V705 = 0x4b8
0x819: THROW 
0x81a: JUMPDEST 
0x81b: V706 = 0x40
0x81e: V707 = M[0x40]
0x820: V708 = ISZERO S0
0x821: V709 = ISZERO V708
0x823: M[V707] = V709
0x824: V710 = M[0x40]
0x828: V711 = SUB V707 V710
0x829: V712 = 0x20
0x82b: V713 = ADD 0x20 V711
0x82d: RETURN V710 V713
0x82e: JUMPDEST 
0x82f: V714 = CALLVALUE
0x830: V715 = 0x0
0x833: THROWI V714
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae]
Exit stack: []

================================

Block 0x834
[0x834:0x85c]
---
Predecessors: [0x813]
Successors: [0x85d]
---
0x834 PUSH2 0xcf
0x837 PUSH2 0x4c1
0x83a JUMP
0x83b JUMPDEST
0x83c PUSH1 0x40
0x83e DUP1
0x83f MLOAD
0x840 PUSH1 0x1
0x842 PUSH1 0xa0
0x844 PUSH1 0x2
0x846 EXP
0x847 SUB
0x848 SWAP1
0x849 SWAP3
0x84a AND
0x84b DUP3
0x84c MSTORE
0x84d MLOAD
0x84e SWAP1
0x84f DUP2
0x850 SWAP1
0x851 SUB
0x852 PUSH1 0x20
0x854 ADD
0x855 SWAP1
0x856 RETURN
0x857 JUMPDEST
0x858 CALLVALUE
0x859 PUSH2 0x0
0x85c JUMPI
---
0x834: V716 = 0xcf
0x837: V717 = 0x4c1
0x83a: THROW 
0x83b: JUMPDEST 
0x83c: V718 = 0x40
0x83f: V719 = M[0x40]
0x840: V720 = 0x1
0x842: V721 = 0xa0
0x844: V722 = 0x2
0x846: V723 = EXP 0x2 0xa0
0x847: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84a: V725 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x84c: M[V719] = V725
0x84d: V726 = M[0x40]
0x851: V727 = SUB V719 V726
0x852: V728 = 0x20
0x854: V729 = ADD 0x20 V727
0x856: RETURN V726 V729
0x857: JUMPDEST 
0x858: V730 = CALLVALUE
0x859: V731 = 0x0
0x85c: THROWI V730
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcf]
Exit stack: []

================================

Block 0x85d
[0x85d:0x87b]
---
Predecessors: [0x834]
Successors: [0x87c]
---
0x85d PUSH2 0xf8
0x860 PUSH2 0x4d0
0x863 JUMP
0x864 JUMPDEST
0x865 PUSH1 0x40
0x867 DUP1
0x868 MLOAD
0x869 SWAP2
0x86a DUP3
0x86b MSTORE
0x86c MLOAD
0x86d SWAP1
0x86e DUP2
0x86f SWAP1
0x870 SUB
0x871 PUSH1 0x20
0x873 ADD
0x874 SWAP1
0x875 RETURN
0x876 JUMPDEST
0x877 CALLVALUE
0x878 PUSH2 0x0
0x87b JUMPI
---
0x85d: V732 = 0xf8
0x860: V733 = 0x4d0
0x863: THROW 
0x864: JUMPDEST 
0x865: V734 = 0x40
0x868: V735 = M[0x40]
0x86b: M[V735] = S0
0x86c: V736 = M[0x40]
0x870: V737 = SUB V735 V736
0x871: V738 = 0x20
0x873: V739 = ADD 0x20 V737
0x875: RETURN V736 V739
0x876: JUMPDEST 
0x877: V740 = CALLVALUE
0x878: V741 = 0x0
0x87b: THROWI V740
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf8]
Exit stack: []

================================

Block 0x87c
[0x87c:0x8ac]
---
Predecessors: [0x85d]
Successors: [0x8ad]
---
0x87c PUSH2 0xae
0x87f PUSH1 0x4
0x881 CALLDATALOAD
0x882 PUSH1 0x24
0x884 CALLDATALOAD
0x885 PUSH2 0x4d6
0x888 JUMP
0x889 JUMPDEST
0x88a PUSH1 0x40
0x88c DUP1
0x88d MLOAD
0x88e SWAP2
0x88f ISZERO
0x890 ISZERO
0x891 DUP3
0x892 MSTORE
0x893 MLOAD
0x894 SWAP1
0x895 DUP2
0x896 SWAP1
0x897 SUB
0x898 PUSH1 0x20
0x89a ADD
0x89b SWAP1
0x89c RETURN
0x89d JUMPDEST
0x89e PUSH2 0x9c
0x8a1 PUSH2 0x1ec
0x8a4 JUMP
0x8a5 JUMPDEST
0x8a6 STOP
0x8a7 JUMPDEST
0x8a8 CALLVALUE
0x8a9 PUSH2 0x0
0x8ac JUMPI
---
0x87c: V742 = 0xae
0x87f: V743 = 0x4
0x881: V744 = CALLDATALOAD 0x4
0x882: V745 = 0x24
0x884: V746 = CALLDATALOAD 0x24
0x885: V747 = 0x4d6
0x888: THROW 
0x889: JUMPDEST 
0x88a: V748 = 0x40
0x88d: V749 = M[0x40]
0x88f: V750 = ISZERO S0
0x890: V751 = ISZERO V750
0x892: M[V749] = V751
0x893: V752 = M[0x40]
0x897: V753 = SUB V749 V752
0x898: V754 = 0x20
0x89a: V755 = ADD 0x20 V753
0x89c: RETURN V752 V755
0x89d: JUMPDEST 
0x89e: V756 = 0x9c
0x8a1: V757 = 0x1ec
0x8a4: THROW 
0x8a5: JUMPDEST 
0x8a6: STOP 
0x8a7: JUMPDEST 
0x8a8: V758 = CALLVALUE
0x8a9: V759 = 0x0
0x8ac: THROWI V758
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae, V744, V746, 0x9c]
Exit stack: []

================================

Block 0x8ad
[0x8ad:0x8d0]
---
Predecessors: [0x87c]
Successors: [0x8d1]
---
0x8ad PUSH2 0xae
0x8b0 PUSH1 0x4
0x8b2 CALLDATALOAD
0x8b3 PUSH2 0x5ab
0x8b6 JUMP
0x8b7 JUMPDEST
0x8b8 PUSH1 0x40
0x8ba DUP1
0x8bb MLOAD
0x8bc SWAP2
0x8bd ISZERO
0x8be ISZERO
0x8bf DUP3
0x8c0 MSTORE
0x8c1 MLOAD
0x8c2 SWAP1
0x8c3 DUP2
0x8c4 SWAP1
0x8c5 SUB
0x8c6 PUSH1 0x20
0x8c8 ADD
0x8c9 SWAP1
0x8ca RETURN
0x8cb JUMPDEST
0x8cc CALLVALUE
0x8cd PUSH2 0x0
0x8d0 JUMPI
---
0x8ad: V760 = 0xae
0x8b0: V761 = 0x4
0x8b2: V762 = CALLDATALOAD 0x4
0x8b3: V763 = 0x5ab
0x8b6: THROW 
0x8b7: JUMPDEST 
0x8b8: V764 = 0x40
0x8bb: V765 = M[0x40]
0x8bd: V766 = ISZERO S0
0x8be: V767 = ISZERO V766
0x8c0: M[V765] = V767
0x8c1: V768 = M[0x40]
0x8c5: V769 = SUB V765 V768
0x8c6: V770 = 0x20
0x8c8: V771 = ADD 0x20 V769
0x8ca: RETURN V768 V771
0x8cb: JUMPDEST 
0x8cc: V772 = CALLVALUE
0x8cd: V773 = 0x0
0x8d0: THROWI V772
---
Entry stack: []
Stack pops: 0
Stack additions: [0xae, V762]
Exit stack: []

================================

Block 0x8d1
[0x8d1:0x8e2]
---
Predecessors: [0x8ad]
Successors: [0x8e3]
---
0x8d1 PUSH2 0x9c
0x8d4 PUSH1 0x4
0x8d6 CALLDATALOAD
0x8d7 PUSH2 0x671
0x8da JUMP
0x8db JUMPDEST
0x8dc STOP
0x8dd JUMPDEST
0x8de CALLVALUE
0x8df PUSH2 0x0
0x8e2 JUMPI
---
0x8d1: V774 = 0x9c
0x8d4: V775 = 0x4
0x8d6: V776 = CALLDATALOAD 0x4
0x8d7: V777 = 0x671
0x8da: THROW 
0x8db: JUMPDEST 
0x8dc: STOP 
0x8dd: JUMPDEST 
0x8de: V778 = CALLVALUE
0x8df: V779 = 0x0
0x8e2: THROWI V778
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9c, V776]
Exit stack: []

================================

Block 0x8e3
[0x8e3:0x901]
---
Predecessors: [0x8d1]
Successors: [0x902]
---
0x8e3 PUSH2 0x9c
0x8e6 PUSH1 0x4
0x8e8 CALLDATALOAD
0x8e9 PUSH2 0x6e0
0x8ec JUMP
0x8ed JUMPDEST
0x8ee STOP
0x8ef JUMPDEST
0x8f0 PUSH1 0x4
0x8f2 SLOAD
0x8f3 PUSH1 0x0
0x8f5 SWAP1
0x8f6 DUP2
0x8f7 SWAP1
0x8f8 DUP2
0x8f9 SWAP1
0x8fa PUSH1 0xff
0x8fc AND
0x8fd DUP1
0x8fe PUSH2 0x212
0x901 JUMPI
---
0x8e3: V780 = 0x9c
0x8e6: V781 = 0x4
0x8e8: V782 = CALLDATALOAD 0x4
0x8e9: V783 = 0x6e0
0x8ec: THROW 
0x8ed: JUMPDEST 
0x8ee: STOP 
0x8ef: JUMPDEST 
0x8f0: V784 = 0x4
0x8f2: V785 = S[0x4]
0x8f3: V786 = 0x0
0x8fa: V787 = 0xff
0x8fc: V788 = AND 0xff V785
0x8fe: V789 = 0x212
0x901: THROWI V788
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9c, V782, V788, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x902
[0x902:0x914]
---
Predecessors: [0x8e3]
Successors: [0x915]
---
0x902 POP
0x903 PUSH1 0x0
0x905 SLOAD
0x906 CALLER
0x907 PUSH1 0x1
0x909 PUSH1 0xa0
0x90b PUSH1 0x2
0x90d EXP
0x90e SUB
0x90f SWAP1
0x910 DUP2
0x911 AND
0x912 SWAP2
0x913 AND
0x914 EQ
---
0x903: V790 = 0x0
0x905: V791 = S[0x0]
0x906: V792 = CALLER
0x907: V793 = 0x1
0x909: V794 = 0xa0
0x90b: V795 = 0x2
0x90d: V796 = EXP 0x2 0xa0
0x90e: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x911: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0x913: V799 = AND V791 0xffffffffffffffffffffffffffffffffffffffff
0x914: V800 = EQ V799 V798
---
Entry stack: [0x0, 0x0, 0x0, V788]
Stack pops: 1
Stack additions: [V800]
Exit stack: [0x0, 0x0, 0x0, V800]

================================

Block 0x915
[0x915:0x91a]
---
Predecessors: [0x902]
Successors: [0x91b]
---
0x915 JUMPDEST
0x916 ISZERO
0x917 PUSH2 0x3db
0x91a JUMPI
---
0x915: JUMPDEST 
0x916: V801 = ISZERO V800
0x917: V802 = 0x3db
0x91a: THROWI V801
---
Entry stack: [0x0, 0x0, 0x0, V800]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0, 0x0]

================================

Block 0x91b
[0x91b:0x924]
---
Predecessors: [0x915]
Successors: [0x925]
---
0x91b PUSH1 0x2
0x91d SLOAD
0x91e CALLVALUE
0x91f DUP2
0x920 ISZERO
0x921 PUSH2 0x0
0x924 JUMPI
---
0x91b: V803 = 0x2
0x91d: V804 = S[0x2]
0x91e: V805 = CALLVALUE
0x920: V806 = ISZERO V804
0x921: V807 = 0x0
0x924: THROWI V806
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V804, V805]
Exit stack: [0x0, 0x0, 0x0, V804, V805]

================================

Block 0x925
[0x925:0x98d]
---
Predecessors: [0x91b]
Successors: [0x98e]
---
0x925 DIV
0x926 SWAP3
0x927 POP
0x928 PUSH1 0x3
0x92a SLOAD
0x92b PUSH1 0x1
0x92d PUSH1 0x0
0x92f SWAP1
0x930 SLOAD
0x931 SWAP1
0x932 PUSH2 0x100
0x935 EXP
0x936 SWAP1
0x937 DIV
0x938 PUSH1 0x1
0x93a PUSH1 0xa0
0x93c PUSH1 0x2
0x93e EXP
0x93f SUB
0x940 AND
0x941 PUSH1 0x1
0x943 PUSH1 0xa0
0x945 PUSH1 0x2
0x947 EXP
0x948 SUB
0x949 AND
0x94a PUSH4 0x70a08231
0x94f ADDRESS
0x950 PUSH1 0x0
0x952 PUSH1 0x40
0x954 MLOAD
0x955 PUSH1 0x20
0x957 ADD
0x958 MSTORE
0x959 PUSH1 0x40
0x95b MLOAD
0x95c DUP3
0x95d PUSH1 0xe0
0x95f PUSH1 0x2
0x961 EXP
0x962 MUL
0x963 DUP2
0x964 MSTORE
0x965 PUSH1 0x4
0x967 ADD
0x968 DUP1
0x969 DUP3
0x96a PUSH1 0x1
0x96c PUSH1 0xa0
0x96e PUSH1 0x2
0x970 EXP
0x971 SUB
0x972 AND
0x973 DUP2
0x974 MSTORE
0x975 PUSH1 0x20
0x977 ADD
0x978 SWAP2
0x979 POP
0x97a POP
0x97b PUSH1 0x20
0x97d PUSH1 0x40
0x97f MLOAD
0x980 DUP1
0x981 DUP4
0x982 SUB
0x983 DUP2
0x984 PUSH1 0x0
0x986 DUP8
0x987 DUP1
0x988 EXTCODESIZE
0x989 ISZERO
0x98a PUSH2 0x0
0x98d JUMPI
---
0x925: V808 = DIV V805 V804
0x928: V809 = 0x3
0x92a: V810 = S[0x3]
0x92b: V811 = 0x1
0x92d: V812 = 0x0
0x930: V813 = S[0x1]
0x932: V814 = 0x100
0x935: V815 = EXP 0x100 0x0
0x937: V816 = DIV V813 0x1
0x938: V817 = 0x1
0x93a: V818 = 0xa0
0x93c: V819 = 0x2
0x93e: V820 = EXP 0x2 0xa0
0x93f: V821 = SUB 0x10000000000000000000000000000000000000000 0x1
0x940: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0x941: V823 = 0x1
0x943: V824 = 0xa0
0x945: V825 = 0x2
0x947: V826 = EXP 0x2 0xa0
0x948: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x949: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x94a: V829 = 0x70a08231
0x94f: V830 = ADDRESS
0x950: V831 = 0x0
0x952: V832 = 0x40
0x954: V833 = M[0x40]
0x955: V834 = 0x20
0x957: V835 = ADD 0x20 V833
0x958: M[V835] = 0x0
0x959: V836 = 0x40
0x95b: V837 = M[0x40]
0x95d: V838 = 0xe0
0x95f: V839 = 0x2
0x961: V840 = EXP 0x2 0xe0
0x962: V841 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x964: M[V837] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x965: V842 = 0x4
0x967: V843 = ADD 0x4 V837
0x96a: V844 = 0x1
0x96c: V845 = 0xa0
0x96e: V846 = 0x2
0x970: V847 = EXP 0x2 0xa0
0x971: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x972: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V830
0x974: M[V843] = V849
0x975: V850 = 0x20
0x977: V851 = ADD 0x20 V843
0x97b: V852 = 0x20
0x97d: V853 = 0x40
0x97f: V854 = M[0x40]
0x982: V855 = SUB V851 V854
0x984: V856 = 0x0
0x988: V857 = EXTCODESIZE V828
0x989: V858 = ISZERO V857
0x98a: V859 = 0x0
0x98d: THROWI V858
---
Entry stack: [0x0, 0x0, 0x0, V804, V805]
Stack pops: 5
Stack additions: [V808, S3, S2, V810, V828, 0x70a08231, V851, 0x20, V854, V855, V854, 0x0, V828]
Exit stack: [V808, 0x0, 0x0, V810, V828, 0x70a08231, V851, 0x20, V854, V855, V854, 0x0, V828]

================================

Block 0x98e
[0x98e:0x997]
---
Predecessors: [0x925]
Successors: [0x998]
---
0x98e PUSH1 0x32
0x990 GAS
0x991 SUB
0x992 CALL
0x993 ISZERO
0x994 PUSH2 0x0
0x997 JUMPI
---
0x98e: V860 = 0x32
0x990: V861 = GAS
0x991: V862 = SUB V861 0x32
0x992: V863 = CALL V862 V828 0x0 V854 V855 V854 0x20
0x993: V864 = ISZERO V863
0x994: V865 = 0x0
0x997: THROWI V864
---
Entry stack: [V808, 0x0, 0x0, V810, V828, 0x70a08231, V851, 0x20, V854, V855, V854, 0x0, V828]
Stack pops: 6
Stack additions: []
Exit stack: [V808, 0x0, 0x0, V810, V828, 0x70a08231, V851]

================================

Block 0x998
[0x998:0x9a5]
---
Predecessors: [0x98e]
Successors: [0x9a6]
---
0x998 POP
0x999 POP
0x99a PUSH1 0x40
0x99c MLOAD
0x99d MLOAD
0x99e SWAP1
0x99f POP
0x9a0 DUP2
0x9a1 ISZERO
0x9a2 PUSH2 0x0
0x9a5 JUMPI
---
0x99a: V866 = 0x40
0x99c: V867 = M[0x40]
0x99d: V868 = M[V867]
0x9a1: V869 = ISZERO V810
0x9a2: V870 = 0x0
0x9a5: THROWI V869
---
Entry stack: [V808, 0x0, 0x0, V810, V828, 0x70a08231, V851]
Stack pops: 4
Stack additions: [S3, V868]
Exit stack: [V808, 0x0, 0x0, V810, V868]

================================

Block 0x9a6
[0x9a6:0x9b4]
---
Predecessors: [0x998]
Successors: [0x9b5]
---
0x9a6 DIV
0x9a7 SWAP2
0x9a8 POP
0x9a9 PUSH1 0x0
0x9ab SWAP1
0x9ac POP
0x9ad DUP2
0x9ae DUP4
0x9af GT
0x9b0 ISZERO
0x9b1 PUSH2 0x2f0
0x9b4 JUMPI
---
0x9a6: V871 = DIV V868 V810
0x9a9: V872 = 0x0
0x9af: V873 = GT V808 V871
0x9b0: V874 = ISZERO V873
0x9b1: V875 = 0x2f0
0x9b4: THROWI V874
---
Entry stack: [V808, 0x0, 0x0, V810, V868]
Stack pops: 5
Stack additions: [S4, V871, 0x0]
Exit stack: [V808, V871, 0x0]

================================

Block 0x9b5
[0x9b5:0x9ee]
---
Predecessors: [0x9a6]
Successors: [0x9ef]
---
0x9b5 POP
0x9b6 PUSH1 0x2
0x9b8 SLOAD
0x9b9 PUSH1 0x40
0x9bb MLOAD
0x9bc SWAP2
0x9bd SWAP3
0x9be POP
0x9bf DUP3
0x9c0 SWAP2
0x9c1 SWAP1
0x9c2 DUP3
0x9c3 MUL
0x9c4 CALLVALUE
0x9c5 SUB
0x9c6 SWAP1
0x9c7 PUSH1 0x1
0x9c9 PUSH1 0xa0
0x9cb PUSH1 0x2
0x9cd EXP
0x9ce SUB
0x9cf CALLER
0x9d0 AND
0x9d1 SWAP1
0x9d2 DUP3
0x9d3 ISZERO
0x9d4 PUSH2 0x8fc
0x9d7 MUL
0x9d8 SWAP1
0x9d9 DUP4
0x9da SWAP1
0x9db PUSH1 0x0
0x9dd DUP2
0x9de DUP2
0x9df DUP2
0x9e0 DUP6
0x9e1 DUP9
0x9e2 DUP9
0x9e3 CALL
0x9e4 SWAP4
0x9e5 POP
0x9e6 POP
0x9e7 POP
0x9e8 POP
0x9e9 ISZERO
0x9ea ISZERO
0x9eb PUSH2 0x2f0
0x9ee JUMPI
---
0x9b6: V876 = 0x2
0x9b8: V877 = S[0x2]
0x9b9: V878 = 0x40
0x9bb: V879 = M[0x40]
0x9c3: V880 = MUL V871 V877
0x9c4: V881 = CALLVALUE
0x9c5: V882 = SUB V881 V880
0x9c7: V883 = 0x1
0x9c9: V884 = 0xa0
0x9cb: V885 = 0x2
0x9cd: V886 = EXP 0x2 0xa0
0x9ce: V887 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cf: V888 = CALLER
0x9d0: V889 = AND V888 0xffffffffffffffffffffffffffffffffffffffff
0x9d3: V890 = ISZERO V882
0x9d4: V891 = 0x8fc
0x9d7: V892 = MUL 0x8fc V890
0x9db: V893 = 0x0
0x9e3: V894 = CALL V892 V889 V882 V879 0x0 V879 0x0
0x9e9: V895 = ISZERO V894
0x9ea: V896 = ISZERO V895
0x9eb: V897 = 0x2f0
0x9ee: THROWI V896
---
Entry stack: [V808, V871, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V882]
Exit stack: [V871, V871, V882]

================================

Block 0x9ef
[0x9ef:0x9f3]
---
Predecessors: [0x9b5]
Successors: [0x9f4]
---
0x9ef PUSH2 0x0
0x9f2 JUMP
0x9f3 JUMPDEST
---
0x9ef: V898 = 0x0
0x9f2: THROW 
0x9f3: JUMPDEST 
---
Entry stack: [V871, V871, V882]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9f4
[0x9f4:0x9fd]
---
Predecessors: [0x9ef]
Successors: [0x9fe]
---
0x9f4 JUMPDEST
0x9f5 PUSH1 0x0
0x9f7 DUP4
0x9f8 GT
0x9f9 ISZERO
0x9fa PUSH2 0x386
0x9fd JUMPI
---
0x9f4: JUMPDEST 
0x9f5: V899 = 0x0
0x9f8: V900 = GT S2 0x0
0x9f9: V901 = ISZERO V900
0x9fa: V902 = 0x386
0x9fd: THROWI V901
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0x9fe
[0x9fe:0xa6c]
---
Predecessors: [0x9f4]
Successors: [0xa6d]
---
0x9fe PUSH1 0x1
0xa00 PUSH1 0x0
0xa02 SWAP1
0xa03 SLOAD
0xa04 SWAP1
0xa05 PUSH2 0x100
0xa08 EXP
0xa09 SWAP1
0xa0a DIV
0xa0b PUSH1 0x1
0xa0d PUSH1 0xa0
0xa0f PUSH1 0x2
0xa11 EXP
0xa12 SUB
0xa13 AND
0xa14 PUSH1 0x1
0xa16 PUSH1 0xa0
0xa18 PUSH1 0x2
0xa1a EXP
0xa1b SUB
0xa1c AND
0xa1d PUSH4 0xa9059cbb
0xa22 CALLER
0xa23 PUSH1 0x3
0xa25 SLOAD
0xa26 DUP7
0xa27 MUL
0xa28 PUSH1 0x0
0xa2a PUSH1 0x40
0xa2c MLOAD
0xa2d PUSH1 0x20
0xa2f ADD
0xa30 MSTORE
0xa31 PUSH1 0x40
0xa33 MLOAD
0xa34 DUP4
0xa35 PUSH1 0xe0
0xa37 PUSH1 0x2
0xa39 EXP
0xa3a MUL
0xa3b DUP2
0xa3c MSTORE
0xa3d PUSH1 0x4
0xa3f ADD
0xa40 DUP1
0xa41 DUP4
0xa42 PUSH1 0x1
0xa44 PUSH1 0xa0
0xa46 PUSH1 0x2
0xa48 EXP
0xa49 SUB
0xa4a AND
0xa4b DUP2
0xa4c MSTORE
0xa4d PUSH1 0x20
0xa4f ADD
0xa50 DUP3
0xa51 DUP2
0xa52 MSTORE
0xa53 PUSH1 0x20
0xa55 ADD
0xa56 SWAP3
0xa57 POP
0xa58 POP
0xa59 POP
0xa5a PUSH1 0x20
0xa5c PUSH1 0x40
0xa5e MLOAD
0xa5f DUP1
0xa60 DUP4
0xa61 SUB
0xa62 DUP2
0xa63 PUSH1 0x0
0xa65 DUP8
0xa66 DUP1
0xa67 EXTCODESIZE
0xa68 ISZERO
0xa69 PUSH2 0x0
0xa6c JUMPI
---
0x9fe: V903 = 0x1
0xa00: V904 = 0x0
0xa03: V905 = S[0x1]
0xa05: V906 = 0x100
0xa08: V907 = EXP 0x100 0x0
0xa0a: V908 = DIV V905 0x1
0xa0b: V909 = 0x1
0xa0d: V910 = 0xa0
0xa0f: V911 = 0x2
0xa11: V912 = EXP 0x2 0xa0
0xa12: V913 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa13: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0xa14: V915 = 0x1
0xa16: V916 = 0xa0
0xa18: V917 = 0x2
0xa1a: V918 = EXP 0x2 0xa0
0xa1b: V919 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1c: V920 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0xa1d: V921 = 0xa9059cbb
0xa22: V922 = CALLER
0xa23: V923 = 0x3
0xa25: V924 = S[0x3]
0xa27: V925 = MUL S2 V924
0xa28: V926 = 0x0
0xa2a: V927 = 0x40
0xa2c: V928 = M[0x40]
0xa2d: V929 = 0x20
0xa2f: V930 = ADD 0x20 V928
0xa30: M[V930] = 0x0
0xa31: V931 = 0x40
0xa33: V932 = M[0x40]
0xa35: V933 = 0xe0
0xa37: V934 = 0x2
0xa39: V935 = EXP 0x2 0xe0
0xa3a: V936 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xa3c: M[V932] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa3d: V937 = 0x4
0xa3f: V938 = ADD 0x4 V932
0xa42: V939 = 0x1
0xa44: V940 = 0xa0
0xa46: V941 = 0x2
0xa48: V942 = EXP 0x2 0xa0
0xa49: V943 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4a: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xa4c: M[V938] = V944
0xa4d: V945 = 0x20
0xa4f: V946 = ADD 0x20 V938
0xa52: M[V946] = V925
0xa53: V947 = 0x20
0xa55: V948 = ADD 0x20 V946
0xa5a: V949 = 0x20
0xa5c: V950 = 0x40
0xa5e: V951 = M[0x40]
0xa61: V952 = SUB V948 V951
0xa63: V953 = 0x0
0xa67: V954 = EXTCODESIZE V920
0xa68: V955 = ISZERO V954
0xa69: V956 = 0x0
0xa6c: THROWI V955
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V920, 0xa9059cbb, V948, 0x20, V951, V952, V951, 0x0, V920]
Exit stack: [S2, S1, S0, V920, 0xa9059cbb, V948, 0x20, V951, V952, V951, 0x0, V920]

================================

Block 0xa6d
[0xa6d:0xa76]
---
Predecessors: [0x9fe]
Successors: [0xa77]
---
0xa6d PUSH1 0x32
0xa6f GAS
0xa70 SUB
0xa71 CALL
0xa72 ISZERO
0xa73 PUSH2 0x0
0xa76 JUMPI
---
0xa6d: V957 = 0x32
0xa6f: V958 = GAS
0xa70: V959 = SUB V958 0x32
0xa71: V960 = CALL V959 V920 0x0 V951 V952 V951 0x20
0xa72: V961 = ISZERO V960
0xa73: V962 = 0x0
0xa76: THROWI V961
---
Entry stack: [S11, S10, S9, V920, 0xa9059cbb, V948, 0x20, V951, V952, V951, 0x0, V920]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V920, 0xa9059cbb, V948]

================================

Block 0xa77
[0xa77:0xa84]
---
Predecessors: [0xa6d]
Successors: [0xa85]
---
0xa77 POP
0xa78 POP
0xa79 PUSH1 0x40
0xa7b MLOAD
0xa7c MLOAD
0xa7d ISZERO
0xa7e ISZERO
0xa7f SWAP1
0xa80 POP
0xa81 PUSH2 0x386
0xa84 JUMPI
---
0xa79: V963 = 0x40
0xa7b: V964 = M[0x40]
0xa7c: V965 = M[V964]
0xa7d: V966 = ISZERO V965
0xa7e: V967 = ISZERO V966
0xa81: V968 = 0x386
0xa84: THROWI V967
---
Entry stack: [S5, S4, S3, V920, 0xa9059cbb, V948]
Stack pops: 3
Stack additions: []
Exit stack: [S5, S4, S3]

================================

Block 0xa85
[0xa85:0xa89]
---
Predecessors: [0xa77]
Successors: [0xa8a]
---
0xa85 PUSH2 0x0
0xa88 JUMP
0xa89 JUMPDEST
---
0xa85: V969 = 0x0
0xa88: THROW 
0xa89: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa8a
[0xa8a:0xadd]
---
Predecessors: [0xa85]
Successors: [0x40a]
---
0xa8a JUMPDEST
0xa8b PUSH1 0x3
0xa8d SLOAD
0xa8e PUSH1 0x40
0xa90 DUP1
0xa91 MLOAD
0xa92 CALLVALUE
0xa93 DUP2
0xa94 MSTORE
0xa95 SWAP2
0xa96 DUP6
0xa97 MUL
0xa98 PUSH1 0x20
0xa9a DUP4
0xa9b ADD
0xa9c MSTORE
0xa9d DUP2
0xa9e DUP2
0xa9f ADD
0xaa0 DUP4
0xaa1 SWAP1
0xaa2 MSTORE
0xaa3 MLOAD
0xaa4 PUSH1 0x1
0xaa6 PUSH1 0xa0
0xaa8 PUSH1 0x2
0xaaa EXP
0xaab SUB
0xaac CALLER
0xaad AND
0xaae SWAP2
0xaaf PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xad0 SWAP2
0xad1 SWAP1
0xad2 DUP2
0xad3 SWAP1
0xad4 SUB
0xad5 PUSH1 0x60
0xad7 ADD
0xad8 SWAP1
0xad9 LOG2
0xada PUSH2 0x40a
0xadd JUMP
---
0xa8a: JUMPDEST 
0xa8b: V970 = 0x3
0xa8d: V971 = S[0x3]
0xa8e: V972 = 0x40
0xa91: V973 = M[0x40]
0xa92: V974 = CALLVALUE
0xa94: M[V973] = V974
0xa97: V975 = MUL S2 V971
0xa98: V976 = 0x20
0xa9b: V977 = ADD V973 0x20
0xa9c: M[V977] = V975
0xa9f: V978 = ADD 0x40 V973
0xaa2: M[V978] = S0
0xaa3: V979 = M[0x40]
0xaa4: V980 = 0x1
0xaa6: V981 = 0xa0
0xaa8: V982 = 0x2
0xaaa: V983 = EXP 0x2 0xa0
0xaab: V984 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaac: V985 = CALLER
0xaad: V986 = AND V985 0xffffffffffffffffffffffffffffffffffffffff
0xaaf: V987 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xad4: V988 = SUB V973 V979
0xad5: V989 = 0x60
0xad7: V990 = ADD 0x60 V988
0xad9: LOG V979 V990 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V986
0xada: V991 = 0x40a
0xadd: JUMP 0x40a
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0xade
[0xade:0xb08]
---
Predecessors: []
Successors: [0x40a, 0xb09]
---
0xade JUMPDEST
0xadf PUSH1 0x40
0xae1 MLOAD
0xae2 PUSH1 0x1
0xae4 PUSH1 0xa0
0xae6 PUSH1 0x2
0xae8 EXP
0xae9 SUB
0xaea CALLER
0xaeb AND
0xaec SWAP1
0xaed CALLVALUE
0xaee DUP1
0xaef ISZERO
0xaf0 PUSH2 0x8fc
0xaf3 MUL
0xaf4 SWAP2
0xaf5 PUSH1 0x0
0xaf7 DUP2
0xaf8 DUP2
0xaf9 DUP2
0xafa DUP6
0xafb DUP9
0xafc DUP9
0xafd CALL
0xafe SWAP4
0xaff POP
0xb00 POP
0xb01 POP
0xb02 POP
0xb03 ISZERO
0xb04 ISZERO
0xb05 PUSH2 0x40a
0xb08 JUMPI
---
0xade: JUMPDEST 
0xadf: V992 = 0x40
0xae1: V993 = M[0x40]
0xae2: V994 = 0x1
0xae4: V995 = 0xa0
0xae6: V996 = 0x2
0xae8: V997 = EXP 0x2 0xa0
0xae9: V998 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaea: V999 = CALLER
0xaeb: V1000 = AND V999 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V1001 = CALLVALUE
0xaef: V1002 = ISZERO V1001
0xaf0: V1003 = 0x8fc
0xaf3: V1004 = MUL 0x8fc V1002
0xaf5: V1005 = 0x0
0xafd: V1006 = CALL V1004 V1000 V1001 V993 0x0 V993 0x0
0xb03: V1007 = ISZERO V1006
0xb04: V1008 = ISZERO V1007
0xb05: V1009 = 0x40a
0xb08: JUMPI 0x40a V1008
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb09
[0xb09:0xb0d]
---
Predecessors: [0xade]
Successors: [0xb0e]
---
0xb09 PUSH2 0x0
0xb0c JUMP
0xb0d JUMPDEST
---
0xb09: V1010 = 0x0
0xb0c: THROW 
0xb0d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0e
[0xb0e:0xb0e]
---
Predecessors: [0xb09]
Successors: [0xb0f]
---
0xb0e JUMPDEST
---
0xb0e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb0f
[0xb0f:0xb2b]
---
Predecessors: [0xb0e]
Successors: [0xb2c]
---
0xb0f JUMPDEST
0xb10 POP
0xb11 POP
0xb12 POP
0xb13 JUMP
0xb14 JUMPDEST
0xb15 PUSH1 0x0
0xb17 DUP1
0xb18 SLOAD
0xb19 CALLER
0xb1a PUSH1 0x1
0xb1c PUSH1 0xa0
0xb1e PUSH1 0x2
0xb20 EXP
0xb21 SUB
0xb22 SWAP1
0xb23 DUP2
0xb24 AND
0xb25 SWAP2
0xb26 AND
0xb27 EQ
0xb28 PUSH2 0x42d
0xb2b JUMPI
---
0xb0f: JUMPDEST 
0xb13: JUMP S3
0xb14: JUMPDEST 
0xb15: V1011 = 0x0
0xb18: V1012 = S[0x0]
0xb19: V1013 = CALLER
0xb1a: V1014 = 0x1
0xb1c: V1015 = 0xa0
0xb1e: V1016 = 0x2
0xb20: V1017 = EXP 0x2 0xa0
0xb21: V1018 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb24: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V1013
0xb26: V1020 = AND V1012 0xffffffffffffffffffffffffffffffffffffffff
0xb27: V1021 = EQ V1020 V1019
0xb28: V1022 = 0x42d
0xb2b: THROWI V1021
---
Entry stack: []
Stack pops: 8
Stack additions: [0x0]
Exit stack: []

================================

Block 0xb2c
[0xb2c:0xb42]
---
Predecessors: [0xb0f]
Successors: [0xb43]
---
0xb2c PUSH2 0x0
0xb2f JUMP
0xb30 JUMPDEST
0xb31 PUSH1 0x1
0xb33 PUSH1 0xa0
0xb35 PUSH1 0x2
0xb37 EXP
0xb38 SUB
0xb39 ADDRESS
0xb3a AND
0xb3b BALANCE
0xb3c DUP3
0xb3d SWAP1
0xb3e LT
0xb3f PUSH2 0x49c
0xb42 JUMPI
---
0xb2c: V1023 = 0x0
0xb2f: THROW 
0xb30: JUMPDEST 
0xb31: V1024 = 0x1
0xb33: V1025 = 0xa0
0xb35: V1026 = 0x2
0xb37: V1027 = EXP 0x2 0xa0
0xb38: V1028 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb39: V1029 = ADDRESS
0xb3a: V1030 = AND V1029 0xffffffffffffffffffffffffffffffffffffffff
0xb3b: V1031 = BALANCE V1030
0xb3e: V1032 = LT V1031 S1
0xb3f: V1033 = 0x49c
0xb42: THROWI V1032
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xb43
[0xb43:0xb9e]
---
Predecessors: [0xb2c]
Successors: [0xb9f]
---
0xb43 PUSH1 0x40
0xb45 DUP1
0xb46 MLOAD
0xb47 DUP4
0xb48 DUP2
0xb49 MSTORE
0xb4a SWAP1
0xb4b MLOAD
0xb4c PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb6d SWAP2
0xb6e DUP2
0xb6f SWAP1
0xb70 SUB
0xb71 PUSH1 0x20
0xb73 ADD
0xb74 SWAP1
0xb75 LOG1
0xb76 PUSH1 0x0
0xb78 DUP1
0xb79 SLOAD
0xb7a PUSH1 0x40
0xb7c MLOAD
0xb7d PUSH1 0x1
0xb7f PUSH1 0xa0
0xb81 PUSH1 0x2
0xb83 EXP
0xb84 SUB
0xb85 SWAP1
0xb86 SWAP2
0xb87 AND
0xb88 SWAP2
0xb89 DUP5
0xb8a ISZERO
0xb8b PUSH2 0x8fc
0xb8e MUL
0xb8f SWAP2
0xb90 DUP6
0xb91 SWAP2
0xb92 DUP2
0xb93 DUP2
0xb94 DUP2
0xb95 DUP6
0xb96 DUP9
0xb97 DUP9
0xb98 CALL
0xb99 SWAP5
0xb9a POP
0xb9b POP
0xb9c POP
0xb9d POP
0xb9e POP
---
0xb43: V1034 = 0x40
0xb46: V1035 = M[0x40]
0xb49: M[V1035] = S1
0xb4b: V1036 = M[0x40]
0xb4c: V1037 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb70: V1038 = SUB V1035 V1036
0xb71: V1039 = 0x20
0xb73: V1040 = ADD 0x20 V1038
0xb75: LOG V1036 V1040 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb76: V1041 = 0x0
0xb79: V1042 = S[0x0]
0xb7a: V1043 = 0x40
0xb7c: V1044 = M[0x40]
0xb7d: V1045 = 0x1
0xb7f: V1046 = 0xa0
0xb81: V1047 = 0x2
0xb83: V1048 = EXP 0x2 0xa0
0xb84: V1049 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb87: V1050 = AND V1042 0xffffffffffffffffffffffffffffffffffffffff
0xb8a: V1051 = ISZERO S1
0xb8b: V1052 = 0x8fc
0xb8e: V1053 = MUL 0x8fc V1051
0xb98: V1054 = CALL V1053 V1050 S1 V1044 0x0 V1044 0x0
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, V1054]
Exit stack: [S1, V1054]

================================

Block 0xb9f
[0xb9f:0xb9f]
---
Predecessors: [0xb43]
Successors: [0xba0]
---
0xb9f JUMPDEST
---
0xb9f: JUMPDEST 
---
Entry stack: [S1, V1054]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1054]

================================

Block 0xba0
[0xba0:0xba0]
---
Predecessors: [0xb9f]
Successors: [0xba1]
---
0xba0 JUMPDEST
---
0xba0: JUMPDEST 
---
Entry stack: [S1, V1054]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1054]

================================

Block 0xba1
[0xba1:0xbf0]
---
Predecessors: [0xba0]
Successors: [0xbf1]
---
0xba1 JUMPDEST
0xba2 SWAP2
0xba3 SWAP1
0xba4 POP
0xba5 JUMP
0xba6 JUMPDEST
0xba7 PUSH1 0x1
0xba9 SLOAD
0xbaa PUSH1 0x1
0xbac PUSH1 0xa0
0xbae PUSH1 0x2
0xbb0 EXP
0xbb1 SUB
0xbb2 AND
0xbb3 DUP2
0xbb4 JUMP
0xbb5 JUMPDEST
0xbb6 PUSH1 0x2
0xbb8 SLOAD
0xbb9 DUP2
0xbba JUMP
0xbbb JUMPDEST
0xbbc PUSH1 0x4
0xbbe SLOAD
0xbbf PUSH1 0xff
0xbc1 AND
0xbc2 DUP2
0xbc3 JUMP
0xbc4 JUMPDEST
0xbc5 PUSH1 0x0
0xbc7 SLOAD
0xbc8 PUSH1 0x1
0xbca PUSH1 0xa0
0xbcc PUSH1 0x2
0xbce EXP
0xbcf SUB
0xbd0 AND
0xbd1 DUP2
0xbd2 JUMP
0xbd3 JUMPDEST
0xbd4 PUSH1 0x3
0xbd6 SLOAD
0xbd7 DUP2
0xbd8 JUMP
0xbd9 JUMPDEST
0xbda PUSH1 0x0
0xbdc DUP1
0xbdd SLOAD
0xbde CALLER
0xbdf PUSH1 0x1
0xbe1 PUSH1 0xa0
0xbe3 PUSH1 0x2
0xbe5 EXP
0xbe6 SUB
0xbe7 SWAP1
0xbe8 DUP2
0xbe9 AND
0xbea SWAP2
0xbeb AND
0xbec EQ
0xbed PUSH2 0x4f2
0xbf0 JUMPI
---
0xba1: JUMPDEST 
0xba5: JUMP S2
0xba6: JUMPDEST 
0xba7: V1055 = 0x1
0xba9: V1056 = S[0x1]
0xbaa: V1057 = 0x1
0xbac: V1058 = 0xa0
0xbae: V1059 = 0x2
0xbb0: V1060 = EXP 0x2 0xa0
0xbb1: V1061 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb2: V1062 = AND 0xffffffffffffffffffffffffffffffffffffffff V1056
0xbb4: JUMP S0
0xbb5: JUMPDEST 
0xbb6: V1063 = 0x2
0xbb8: V1064 = S[0x2]
0xbba: JUMP S0
0xbbb: JUMPDEST 
0xbbc: V1065 = 0x4
0xbbe: V1066 = S[0x4]
0xbbf: V1067 = 0xff
0xbc1: V1068 = AND 0xff V1066
0xbc3: JUMP S0
0xbc4: JUMPDEST 
0xbc5: V1069 = 0x0
0xbc7: V1070 = S[0x0]
0xbc8: V1071 = 0x1
0xbca: V1072 = 0xa0
0xbcc: V1073 = 0x2
0xbce: V1074 = EXP 0x2 0xa0
0xbcf: V1075 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd0: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V1070
0xbd2: JUMP S0
0xbd3: JUMPDEST 
0xbd4: V1077 = 0x3
0xbd6: V1078 = S[0x3]
0xbd8: JUMP S0
0xbd9: JUMPDEST 
0xbda: V1079 = 0x0
0xbdd: V1080 = S[0x0]
0xbde: V1081 = CALLER
0xbdf: V1082 = 0x1
0xbe1: V1083 = 0xa0
0xbe3: V1084 = 0x2
0xbe5: V1085 = EXP 0x2 0xa0
0xbe6: V1086 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe9: V1087 = AND 0xffffffffffffffffffffffffffffffffffffffff V1081
0xbeb: V1088 = AND V1080 0xffffffffffffffffffffffffffffffffffffffff
0xbec: V1089 = EQ V1088 V1087
0xbed: V1090 = 0x4f2
0xbf0: THROWI V1089
---
Entry stack: [S1, V1054]
Stack pops: 98
Stack additions: [0x0]
Exit stack: []

================================

Block 0xbf1
[0xbf1:0xc93]
---
Predecessors: [0xba1]
Successors: [0xc94]
---
0xbf1 PUSH2 0x0
0xbf4 JUMP
0xbf5 JUMPDEST
0xbf6 PUSH1 0x40
0xbf8 DUP1
0xbf9 MLOAD
0xbfa PUSH1 0x1
0xbfc PUSH1 0xa0
0xbfe PUSH1 0x2
0xc00 EXP
0xc01 SUB
0xc02 DUP6
0xc03 AND
0xc04 DUP2
0xc05 MSTORE
0xc06 PUSH1 0x20
0xc08 DUP2
0xc09 ADD
0xc0a DUP5
0xc0b SWAP1
0xc0c MSTORE
0xc0d DUP2
0xc0e MLOAD
0xc0f PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc30 SWAP3
0xc31 SWAP2
0xc32 DUP2
0xc33 SWAP1
0xc34 SUB
0xc35 SWAP1
0xc36 SWAP2
0xc37 ADD
0xc38 SWAP1
0xc39 LOG1
0xc3a PUSH1 0x0
0xc3c DUP1
0xc3d SLOAD
0xc3e PUSH1 0x40
0xc40 DUP1
0xc41 MLOAD
0xc42 PUSH1 0x20
0xc44 SWAP1
0xc45 DUP2
0xc46 ADD
0xc47 DUP5
0xc48 SWAP1
0xc49 MSTORE
0xc4a DUP2
0xc4b MLOAD
0xc4c PUSH1 0xe0
0xc4e PUSH1 0x2
0xc50 EXP
0xc51 PUSH4 0xa9059cbb
0xc56 MUL
0xc57 DUP2
0xc58 MSTORE
0xc59 PUSH1 0x1
0xc5b PUSH1 0xa0
0xc5d PUSH1 0x2
0xc5f EXP
0xc60 SUB
0xc61 SWAP4
0xc62 DUP5
0xc63 AND
0xc64 PUSH1 0x4
0xc66 DUP3
0xc67 ADD
0xc68 MSTORE
0xc69 PUSH1 0x24
0xc6b DUP2
0xc6c ADD
0xc6d DUP8
0xc6e SWAP1
0xc6f MSTORE
0xc70 SWAP2
0xc71 MLOAD
0xc72 SWAP3
0xc73 DUP8
0xc74 AND
0xc75 SWAP4
0xc76 PUSH4 0xa9059cbb
0xc7b SWAP4
0xc7c PUSH1 0x44
0xc7e DUP1
0xc7f DUP6
0xc80 ADD
0xc81 SWAP5
0xc82 SWAP2
0xc83 SWAP3
0xc84 SWAP2
0xc85 DUP4
0xc86 SWAP1
0xc87 SUB
0xc88 ADD
0xc89 SWAP1
0xc8a DUP3
0xc8b SWAP1
0xc8c DUP8
0xc8d DUP1
0xc8e EXTCODESIZE
0xc8f ISZERO
0xc90 PUSH2 0x0
0xc93 JUMPI
---
0xbf1: V1091 = 0x0
0xbf4: THROW 
0xbf5: JUMPDEST 
0xbf6: V1092 = 0x40
0xbf9: V1093 = M[0x40]
0xbfa: V1094 = 0x1
0xbfc: V1095 = 0xa0
0xbfe: V1096 = 0x2
0xc00: V1097 = EXP 0x2 0xa0
0xc01: V1098 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc03: V1099 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc05: M[V1093] = V1099
0xc06: V1100 = 0x20
0xc09: V1101 = ADD V1093 0x20
0xc0c: M[V1101] = S1
0xc0e: V1102 = M[0x40]
0xc0f: V1103 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc34: V1104 = SUB V1093 V1102
0xc37: V1105 = ADD 0x40 V1104
0xc39: LOG V1102 V1105 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xc3a: V1106 = 0x0
0xc3d: V1107 = S[0x0]
0xc3e: V1108 = 0x40
0xc41: V1109 = M[0x40]
0xc42: V1110 = 0x20
0xc46: V1111 = ADD 0x20 V1109
0xc49: M[V1111] = 0x0
0xc4b: V1112 = M[0x40]
0xc4c: V1113 = 0xe0
0xc4e: V1114 = 0x2
0xc50: V1115 = EXP 0x2 0xe0
0xc51: V1116 = 0xa9059cbb
0xc56: V1117 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc58: M[V1112] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc59: V1118 = 0x1
0xc5b: V1119 = 0xa0
0xc5d: V1120 = 0x2
0xc5f: V1121 = EXP 0x2 0xa0
0xc60: V1122 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc63: V1123 = AND 0xffffffffffffffffffffffffffffffffffffffff V1107
0xc64: V1124 = 0x4
0xc67: V1125 = ADD V1112 0x4
0xc68: M[V1125] = V1123
0xc69: V1126 = 0x24
0xc6c: V1127 = ADD V1112 0x24
0xc6f: M[V1127] = S1
0xc71: V1128 = M[0x40]
0xc74: V1129 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc76: V1130 = 0xa9059cbb
0xc7c: V1131 = 0x44
0xc80: V1132 = ADD V1112 0x44
0xc87: V1133 = SUB V1112 V1128
0xc88: V1134 = ADD V1133 0x44
0xc8e: V1135 = EXTCODESIZE V1129
0xc8f: V1136 = ISZERO V1135
0xc90: V1137 = 0x0
0xc93: THROWI V1136
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1129, 0x0, V1128, V1134, V1128, 0x20, V1132, 0xa9059cbb, V1129, S0, S1, S2]
Exit stack: []

================================

Block 0xc94
[0xc94:0xc9d]
---
Predecessors: [0xbf1]
Successors: [0xc9e]
---
0xc94 PUSH1 0x32
0xc96 GAS
0xc97 SUB
0xc98 CALL
0xc99 ISZERO
0xc9a PUSH2 0x0
0xc9d JUMPI
---
0xc94: V1138 = 0x32
0xc96: V1139 = GAS
0xc97: V1140 = SUB V1139 0x32
0xc98: V1141 = CALL V1140 V1129 0x0 V1128 V1134 V1128 0x20
0xc99: V1142 = ISZERO V1141
0xc9a: V1143 = 0x0
0xc9d: THROWI V1142
---
Entry stack: [S11, S10, S9, V1129, 0xa9059cbb, V1132, 0x20, V1128, V1134, V1128, 0x0, V1129]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1129, 0xa9059cbb, V1132]

================================

Block 0xc9e
[0xc9e:0xca6]
---
Predecessors: [0xc94]
Successors: [0xca7]
---
0xc9e POP
0xc9f POP
0xca0 PUSH1 0x40
0xca2 MLOAD
0xca3 MLOAD
0xca4 SWAP2
0xca5 POP
0xca6 POP
---
0xca0: V1144 = 0x40
0xca2: V1145 = M[0x40]
0xca3: V1146 = M[V1145]
---
Entry stack: [S5, S4, S3, V1129, 0xa9059cbb, V1132]
Stack pops: 4
Stack additions: [V1146]
Exit stack: [S5, S4, V1146]

================================

Block 0xca7
[0xca7:0xca7]
---
Predecessors: [0xc9e]
Successors: [0xca8]
---
0xca7 JUMPDEST
---
0xca7: JUMPDEST 
---
Entry stack: [S2, S1, V1146]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, V1146]

================================

Block 0xca8
[0xca8:0xcc5]
---
Predecessors: [0xca7]
Successors: [0xcc6]
---
0xca8 JUMPDEST
0xca9 SWAP3
0xcaa SWAP2
0xcab POP
0xcac POP
0xcad JUMP
0xcae JUMPDEST
0xcaf PUSH1 0x0
0xcb1 DUP1
0xcb2 SLOAD
0xcb3 CALLER
0xcb4 PUSH1 0x1
0xcb6 PUSH1 0xa0
0xcb8 PUSH1 0x2
0xcba EXP
0xcbb SUB
0xcbc SWAP1
0xcbd DUP2
0xcbe AND
0xcbf SWAP2
0xcc0 AND
0xcc1 EQ
0xcc2 PUSH2 0x5c7
0xcc5 JUMPI
---
0xca8: JUMPDEST 
0xcad: JUMP S3
0xcae: JUMPDEST 
0xcaf: V1147 = 0x0
0xcb2: V1148 = S[0x0]
0xcb3: V1149 = CALLER
0xcb4: V1150 = 0x1
0xcb6: V1151 = 0xa0
0xcb8: V1152 = 0x2
0xcba: V1153 = EXP 0x2 0xa0
0xcbb: V1154 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcbe: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff V1149
0xcc0: V1156 = AND V1148 0xffffffffffffffffffffffffffffffffffffffff
0xcc1: V1157 = EQ V1156 V1155
0xcc2: V1158 = 0x5c7
0xcc5: THROWI V1157
---
Entry stack: [S2, S1, V1146]
Stack pops: 7
Stack additions: [0x0]
Exit stack: []

================================

Block 0xcc6
[0xcc6:0xd5a]
---
Predecessors: [0xca8]
Successors: [0xd5b]
---
0xcc6 PUSH2 0x0
0xcc9 JUMP
0xcca JUMPDEST
0xccb PUSH1 0x40
0xccd DUP1
0xcce MLOAD
0xccf DUP4
0xcd0 DUP2
0xcd1 MSTORE
0xcd2 SWAP1
0xcd3 MLOAD
0xcd4 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xcf5 SWAP2
0xcf6 DUP2
0xcf7 SWAP1
0xcf8 SUB
0xcf9 PUSH1 0x20
0xcfb ADD
0xcfc SWAP1
0xcfd LOG1
0xcfe PUSH1 0x1
0xd00 SLOAD
0xd01 PUSH1 0x0
0xd03 DUP1
0xd04 SLOAD
0xd05 PUSH1 0x40
0xd07 DUP1
0xd08 MLOAD
0xd09 PUSH1 0x20
0xd0b SWAP1
0xd0c DUP2
0xd0d ADD
0xd0e DUP5
0xd0f SWAP1
0xd10 MSTORE
0xd11 DUP2
0xd12 MLOAD
0xd13 PUSH1 0xe0
0xd15 PUSH1 0x2
0xd17 EXP
0xd18 PUSH4 0xa9059cbb
0xd1d MUL
0xd1e DUP2
0xd1f MSTORE
0xd20 PUSH1 0x1
0xd22 PUSH1 0xa0
0xd24 PUSH1 0x2
0xd26 EXP
0xd27 SUB
0xd28 SWAP4
0xd29 DUP5
0xd2a AND
0xd2b PUSH1 0x4
0xd2d DUP3
0xd2e ADD
0xd2f MSTORE
0xd30 PUSH1 0x24
0xd32 DUP2
0xd33 ADD
0xd34 DUP9
0xd35 SWAP1
0xd36 MSTORE
0xd37 SWAP2
0xd38 MLOAD
0xd39 SWAP3
0xd3a SWAP1
0xd3b SWAP5
0xd3c AND
0xd3d SWAP4
0xd3e PUSH4 0xa9059cbb
0xd43 SWAP4
0xd44 PUSH1 0x44
0xd46 DUP1
0xd47 DUP5
0xd48 ADD
0xd49 SWAP5
0xd4a SWAP3
0xd4b SWAP4
0xd4c DUP4
0xd4d SWAP1
0xd4e SUB
0xd4f ADD
0xd50 SWAP1
0xd51 DUP3
0xd52 SWAP1
0xd53 DUP8
0xd54 DUP1
0xd55 EXTCODESIZE
0xd56 ISZERO
0xd57 PUSH2 0x0
0xd5a JUMPI
---
0xcc6: V1159 = 0x0
0xcc9: THROW 
0xcca: JUMPDEST 
0xccb: V1160 = 0x40
0xcce: V1161 = M[0x40]
0xcd1: M[V1161] = S1
0xcd3: V1162 = M[0x40]
0xcd4: V1163 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xcf8: V1164 = SUB V1161 V1162
0xcf9: V1165 = 0x20
0xcfb: V1166 = ADD 0x20 V1164
0xcfd: LOG V1162 V1166 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xcfe: V1167 = 0x1
0xd00: V1168 = S[0x1]
0xd01: V1169 = 0x0
0xd04: V1170 = S[0x0]
0xd05: V1171 = 0x40
0xd08: V1172 = M[0x40]
0xd09: V1173 = 0x20
0xd0d: V1174 = ADD 0x20 V1172
0xd10: M[V1174] = 0x0
0xd12: V1175 = M[0x40]
0xd13: V1176 = 0xe0
0xd15: V1177 = 0x2
0xd17: V1178 = EXP 0x2 0xe0
0xd18: V1179 = 0xa9059cbb
0xd1d: V1180 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xd1f: M[V1175] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd20: V1181 = 0x1
0xd22: V1182 = 0xa0
0xd24: V1183 = 0x2
0xd26: V1184 = EXP 0x2 0xa0
0xd27: V1185 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2a: V1186 = AND 0xffffffffffffffffffffffffffffffffffffffff V1170
0xd2b: V1187 = 0x4
0xd2e: V1188 = ADD V1175 0x4
0xd2f: M[V1188] = V1186
0xd30: V1189 = 0x24
0xd33: V1190 = ADD V1175 0x24
0xd36: M[V1190] = S1
0xd38: V1191 = M[0x40]
0xd3c: V1192 = AND V1168 0xffffffffffffffffffffffffffffffffffffffff
0xd3e: V1193 = 0xa9059cbb
0xd44: V1194 = 0x44
0xd48: V1195 = ADD V1175 0x44
0xd4e: V1196 = SUB V1175 V1191
0xd4f: V1197 = ADD V1196 0x44
0xd55: V1198 = EXTCODESIZE V1192
0xd56: V1199 = ISZERO V1198
0xd57: V1200 = 0x0
0xd5a: THROWI V1199
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V1192, 0x0, V1191, V1197, V1191, 0x20, V1195, 0xa9059cbb, V1192, S0, S1]
Exit stack: []

================================

Block 0xd5b
[0xd5b:0xd64]
---
Predecessors: [0xcc6]
Successors: [0xd65]
---
0xd5b PUSH1 0x32
0xd5d GAS
0xd5e SUB
0xd5f CALL
0xd60 ISZERO
0xd61 PUSH2 0x0
0xd64 JUMPI
---
0xd5b: V1201 = 0x32
0xd5d: V1202 = GAS
0xd5e: V1203 = SUB V1202 0x32
0xd5f: V1204 = CALL V1203 V1192 0x0 V1191 V1197 V1191 0x20
0xd60: V1205 = ISZERO V1204
0xd61: V1206 = 0x0
0xd64: THROWI V1205
---
Entry stack: [S10, S9, V1192, 0xa9059cbb, V1195, 0x20, V1191, V1197, V1191, 0x0, V1192]
Stack pops: 6
Stack additions: []
Exit stack: [S10, S9, V1192, 0xa9059cbb, V1195]

================================

Block 0xd65
[0xd65:0xd6d]
---
Predecessors: [0xd5b]
Successors: [0xd6e]
---
0xd65 POP
0xd66 POP
0xd67 PUSH1 0x40
0xd69 MLOAD
0xd6a MLOAD
0xd6b SWAP2
0xd6c POP
0xd6d POP
---
0xd67: V1207 = 0x40
0xd69: V1208 = M[0x40]
0xd6a: V1209 = M[V1208]
---
Entry stack: [S4, S3, V1192, 0xa9059cbb, V1195]
Stack pops: 4
Stack additions: [V1209]
Exit stack: [S4, V1209]

================================

Block 0xd6e
[0xd6e:0xd6e]
---
Predecessors: [0xd65]
Successors: [0xd6f]
---
0xd6e JUMPDEST
---
0xd6e: JUMPDEST 
---
Entry stack: [S1, V1209]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V1209]

================================

Block 0xd6f
[0xd6f:0xd8a]
---
Predecessors: [0xd6e]
Successors: [0xd8b]
---
0xd6f JUMPDEST
0xd70 SWAP2
0xd71 SWAP1
0xd72 POP
0xd73 JUMP
0xd74 JUMPDEST
0xd75 PUSH1 0x0
0xd77 SLOAD
0xd78 CALLER
0xd79 PUSH1 0x1
0xd7b PUSH1 0xa0
0xd7d PUSH1 0x2
0xd7f EXP
0xd80 SUB
0xd81 SWAP1
0xd82 DUP2
0xd83 AND
0xd84 SWAP2
0xd85 AND
0xd86 EQ
0xd87 PUSH2 0x68c
0xd8a JUMPI
---
0xd6f: JUMPDEST 
0xd73: JUMP S2
0xd74: JUMPDEST 
0xd75: V1210 = 0x0
0xd77: V1211 = S[0x0]
0xd78: V1212 = CALLER
0xd79: V1213 = 0x1
0xd7b: V1214 = 0xa0
0xd7d: V1215 = 0x2
0xd7f: V1216 = EXP 0x2 0xa0
0xd80: V1217 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd83: V1218 = AND 0xffffffffffffffffffffffffffffffffffffffff V1212
0xd85: V1219 = AND V1211 0xffffffffffffffffffffffffffffffffffffffff
0xd86: V1220 = EQ V1219 V1218
0xd87: V1221 = 0x68c
0xd8a: THROWI V1220
---
Entry stack: [S1, V1209]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xd8b
[0xd8b:0xdde]
---
Predecessors: [0xd6f]
Successors: [0xddf]
---
0xd8b PUSH2 0x0
0xd8e JUMP
0xd8f JUMPDEST
0xd90 PUSH1 0x4
0xd92 DUP1
0xd93 SLOAD
0xd94 PUSH1 0xff
0xd96 NOT
0xd97 AND
0xd98 PUSH1 0xf8
0xd9a PUSH1 0x2
0xd9c EXP
0xd9d DUP4
0xd9e DUP2
0xd9f MUL
0xda0 DIV
0xda1 OR
0xda2 SWAP1
0xda3 DUP2
0xda4 SWAP1
0xda5 SSTORE
0xda6 PUSH1 0x40
0xda8 DUP1
0xda9 MLOAD
0xdaa PUSH1 0xff
0xdac SWAP1
0xdad SWAP3
0xdae AND
0xdaf ISZERO
0xdb0 ISZERO
0xdb1 DUP3
0xdb2 MSTORE
0xdb3 MLOAD
0xdb4 PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0xdd5 SWAP2
0xdd6 PUSH1 0x20
0xdd8 SWAP1
0xdd9 DUP3
0xdda SWAP1
0xddb SUB
0xddc ADD
0xddd SWAP1
0xdde LOG1
---
0xd8b: V1222 = 0x0
0xd8e: THROW 
0xd8f: JUMPDEST 
0xd90: V1223 = 0x4
0xd93: V1224 = S[0x4]
0xd94: V1225 = 0xff
0xd96: V1226 = NOT 0xff
0xd97: V1227 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1224
0xd98: V1228 = 0xf8
0xd9a: V1229 = 0x2
0xd9c: V1230 = EXP 0x2 0xf8
0xd9f: V1231 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S0
0xda0: V1232 = DIV V1231 0x100000000000000000000000000000000000000000000000000000000000000
0xda1: V1233 = OR V1232 V1227
0xda5: S[0x4] = V1233
0xda6: V1234 = 0x40
0xda9: V1235 = M[0x40]
0xdaa: V1236 = 0xff
0xdae: V1237 = AND V1233 0xff
0xdaf: V1238 = ISZERO V1237
0xdb0: V1239 = ISZERO V1238
0xdb2: M[V1235] = V1239
0xdb3: V1240 = M[0x40]
0xdb4: V1241 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0xdd6: V1242 = 0x20
0xddb: V1243 = SUB V1235 V1240
0xddc: V1244 = ADD V1243 0x20
0xdde: LOG V1240 V1244 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xddf
[0xddf:0xddf]
---
Predecessors: [0xd8b]
Successors: [0xde0]
---
0xddf JUMPDEST
---
0xddf: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xde0
[0xde0:0xdf9]
---
Predecessors: [0xddf]
Successors: [0xdfa]
---
0xde0 JUMPDEST
0xde1 POP
0xde2 JUMP
0xde3 JUMPDEST
0xde4 PUSH1 0x0
0xde6 SLOAD
0xde7 CALLER
0xde8 PUSH1 0x1
0xdea PUSH1 0xa0
0xdec PUSH1 0x2
0xdee EXP
0xdef SUB
0xdf0 SWAP1
0xdf1 DUP2
0xdf2 AND
0xdf3 SWAP2
0xdf4 AND
0xdf5 EQ
0xdf6 PUSH2 0x6fb
0xdf9 JUMPI
---
0xde0: JUMPDEST 
0xde2: JUMP S1
0xde3: JUMPDEST 
0xde4: V1245 = 0x0
0xde6: V1246 = S[0x0]
0xde7: V1247 = CALLER
0xde8: V1248 = 0x1
0xdea: V1249 = 0xa0
0xdec: V1250 = 0x2
0xdee: V1251 = EXP 0x2 0xa0
0xdef: V1252 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf2: V1253 = AND 0xffffffffffffffffffffffffffffffffffffffff V1247
0xdf4: V1254 = AND V1246 0xffffffffffffffffffffffffffffffffffffffff
0xdf5: V1255 = EQ V1254 V1253
0xdf6: V1256 = 0x6fb
0xdf9: THROWI V1255
---
Entry stack: [S0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xdfa
[0xdfa:0xe67]
---
Predecessors: [0xde0]
Successors: [0xe68]
---
0xdfa PUSH2 0x0
0xdfd JUMP
0xdfe JUMPDEST
0xdff PUSH1 0x0
0xe01 DUP1
0xe02 SLOAD
0xe03 PUSH1 0x40
0xe05 MLOAD
0xe06 PUSH1 0x1
0xe08 PUSH1 0xa0
0xe0a PUSH1 0x2
0xe0c EXP
0xe0d SUB
0xe0e DUP1
0xe0f DUP6
0xe10 AND
0xe11 SWAP4
0xe12 SWAP3
0xe13 AND
0xe14 SWAP2
0xe15 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe36 SWAP2
0xe37 LOG3
0xe38 PUSH1 0x0
0xe3a DUP1
0xe3b SLOAD
0xe3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe51 NOT
0xe52 AND
0xe53 PUSH13 0x1000000000000000000000000
0xe61 DUP4
0xe62 DUP2
0xe63 MUL
0xe64 DIV
0xe65 OR
0xe66 SWAP1
0xe67 SSTORE
---
0xdfa: V1257 = 0x0
0xdfd: THROW 
0xdfe: JUMPDEST 
0xdff: V1258 = 0x0
0xe02: V1259 = S[0x0]
0xe03: V1260 = 0x40
0xe05: V1261 = M[0x40]
0xe06: V1262 = 0x1
0xe08: V1263 = 0xa0
0xe0a: V1264 = 0x2
0xe0c: V1265 = EXP 0x2 0xa0
0xe0d: V1266 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe10: V1267 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe13: V1268 = AND V1259 0xffffffffffffffffffffffffffffffffffffffff
0xe15: V1269 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe37: LOG V1261 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1268 V1267
0xe38: V1270 = 0x0
0xe3b: V1271 = S[0x0]
0xe3c: V1272 = 0xffffffffffffffffffffffffffffffffffffffff
0xe51: V1273 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe52: V1274 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1271
0xe53: V1275 = 0x1000000000000000000000000
0xe63: V1276 = MUL 0x1000000000000000000000000 S0
0xe64: V1277 = DIV V1276 0x1000000000000000000000000
0xe65: V1278 = OR V1277 V1274
0xe67: S[0x0] = V1278
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xe68
[0xe68:0xe68]
---
Predecessors: [0xdfa]
Successors: [0xe69]
---
0xe68 JUMPDEST
---
0xe68: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xe69
[0xe69:0xe6b]
---
Predecessors: [0xe68]
Successors: []
Has unresolved jump.
---
0xe69 JUMPDEST
0xe6a POP
0xe6b JUMP
---
0xe69: JUMPDEST 
0xe6b: JUMP S1
---
Entry stack: [S0]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x5de01497
Entry block: 0x5d
Exit block: 0x70
Body: 0x5d, 0x63, 0x70, 0x145, 0x15d, 0x161, 0x211, 0x21b, 0x224, 0x225

Function 1:
Public function signature: 0x63a9c3d7
Entry block: 0x84
Exit block: 0x94
Body: 0x84, 0x8a, 0x94, 0x22b, 0x254, 0x294, 0x29e, 0x2ea, 0x2f4, 0x340, 0x34a, 0x396, 0x3a0, 0x3ec, 0x3f6, 0x3ff, 0x400

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xd5
Exit block: 0xe2
Body: 0xd5, 0xdb, 0xe2, 0x40a

Function 3:
Public function signature: 0xc5e412e5
Entry block: 0xfe
Exit block: 0xe2
Body: 0xe2, 0xfe, 0x104, 0x419, 0x42c, 0x430, 0x439, 0x43d, 0x446, 0x44a, 0x496, 0x50e, 0x518, 0x571

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x133
Exit block: 0x5b
Body: 0x5b, 0x133, 0x139, 0x579, 0x590, 0x594, 0x5fe, 0x5ff

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x54
Body: 0x4b, 0x51, 0x54

