Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xbd]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x33e4ca13
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xbd
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x33e4ca13
0x1a: V12 = EQ V10 0x33e4ca13
0x1b: V13 = 0xbd
0x1e: JUMPI 0xbd V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xf1]
---
0x1f DUP1
0x20 PUSH4 0x3ccfd60b
0x25 EQ
0x26 PUSH2 0xf1
0x29 JUMPI
---
0x20: V14 = 0x3ccfd60b
0x25: V15 = EQ 0x3ccfd60b V10
0x26: V16 = 0xf1
0x29: JUMPI 0xf1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x12a]
---
0x2a DUP1
0x2b PUSH4 0x882d2b09
0x30 EQ
0x31 PUSH2 0x12a
0x34 JUMPI
---
0x2b: V17 = 0x882d2b09
0x30: V18 = EQ 0x882d2b09 V10
0x31: V19 = 0x12a
0x34: JUMPI 0x12a V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x14d]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x14d
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x14d
0x3f: JUMPI 0x14d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x15f]
---
0x40 DUP1
0x41 PUSH4 0x99e51e1c
0x46 EQ
0x47 PUSH2 0x15f
0x4a JUMPI
---
0x41: V23 = 0x99e51e1c
0x46: V24 = EQ 0x99e51e1c V10
0x47: V25 = 0x15f
0x4a: JUMPI 0x15f V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x171]
---
0x4b DUP1
0x4c PUSH4 0xb9944dc9
0x51 EQ
0x52 PUSH2 0x171
0x55 JUMPI
---
0x4c: V26 = 0xb9944dc9
0x51: V27 = EQ 0xb9944dc9 V10
0x52: V28 = 0x171
0x55: JUMPI 0x171 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x183]
---
0x56 DUP1
0x57 PUSH4 0xcef7cfa9
0x5c EQ
0x5d PUSH2 0x183
0x60 JUMPI
---
0x57: V29 = 0xcef7cfa9
0x5c: V30 = EQ 0xcef7cfa9 V10
0x5d: V31 = 0x183
0x60: JUMPI 0x183 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1e9]
---
0x61 DUP1
0x62 PUSH4 0xec556889
0x67 EQ
0x68 PUSH2 0x1e9
0x6b JUMPI
---
0x62: V32 = 0xec556889
0x67: V33 = EQ 0xec556889 V10
0x68: V34 = 0x1e9
0x6b: JUMPI 0x1e9 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0xba]
---
Predecessors: [0x0, 0x61]
Successors: [0xbb]
---
0x6c JUMPDEST
0x6d PUSH1 0x1
0x6f SLOAD
0x70 PUSH1 0x40
0x72 MLOAD
0x73 PUSH2 0x1fb
0x76 SWAP2
0x77 PUSH1 0x1
0x79 PUSH1 0xa0
0x7b PUSH1 0x2
0x7d EXP
0x7e SUB
0x7f AND
0x80 SWAP1
0x81 PUSH1 0x5b
0x83 DUP1
0x84 PUSH2 0x267
0x87 DUP4
0x88 CODECOPY
0x89 ADD
0x8a DUP1
0x8b DUP3
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 AND
0x95 DUP2
0x96 MSTORE
0x97 PUSH1 0x20
0x99 ADD
0x9a SWAP2
0x9b POP
0x9c POP
0x9d PUSH1 0x40
0x9f MLOAD
0xa0 DUP1
0xa1 SWAP2
0xa2 SUB
0xa3 SWAP1
0xa4 PUSH1 0x0
0xa6 CREATE
0xa7 PUSH1 0x1
0xa9 DUP1
0xaa SLOAD
0xab PUSH1 0x1
0xad PUSH1 0xa0
0xaf PUSH1 0x2
0xb1 EXP
0xb2 SUB
0xb3 NOT
0xb4 AND
0xb5 SWAP2
0xb6 SWAP1
0xb7 SWAP2
0xb8 OR
0xb9 SWAP1
0xba SSTORE
---
0x6c: JUMPDEST 
0x6d: V35 = 0x1
0x6f: V36 = S[0x1]
0x70: V37 = 0x40
0x72: V38 = M[0x40]
0x73: V39 = 0x1fb
0x77: V40 = 0x1
0x79: V41 = 0xa0
0x7b: V42 = 0x2
0x7d: V43 = EXP 0x2 0xa0
0x7e: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x81: V46 = 0x5b
0x84: V47 = 0x267
0x88: CODECOPY V38 0x267 0x5b
0x89: V48 = ADD 0x5b V38
0x8c: V49 = 0x1
0x8e: V50 = 0xa0
0x90: V51 = 0x2
0x92: V52 = EXP 0x2 0xa0
0x93: V53 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0x96: M[V48] = V54
0x97: V55 = 0x20
0x99: V56 = ADD 0x20 V48
0x9d: V57 = 0x40
0x9f: V58 = M[0x40]
0xa2: V59 = SUB V56 V58
0xa4: V60 = 0x0
0xa6: V61 = CREATE 0x0 V58 V59
0xa7: V62 = 0x1
0xaa: V63 = S[0x1]
0xab: V64 = 0x1
0xad: V65 = 0xa0
0xaf: V66 = 0x2
0xb1: V67 = EXP 0x2 0xa0
0xb2: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V69 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb4: V70 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V63
0xb8: V71 = OR V70 V61
0xba: S[0x1] = V71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb]
Exit stack: [V10, 0x1fb]

================================

Block 0xbb
[0xbb:0xbc]
---
Predecessors: [0x6c, 0xf1]
Successors: [0x1fb]
---
0xbb JUMPDEST
0xbc JUMP
---
0xbb: JUMPDEST 
0xbc: JUMP 0x1fb
---
Entry stack: [V10, 0x1fb]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xf0]
---
Predecessors: [0xb]
Successors: [0x131]
---
0xbd JUMPDEST
0xbe PUSH1 0x1
0xc0 DUP1
0xc1 SLOAD
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 PUSH2 0x1fb
0xc8 SWAP3
0xc9 PUSH1 0x4
0xcb CALLDATALOAD
0xcc SWAP3
0xcd PUSH1 0x1
0xcf PUSH1 0xa0
0xd1 PUSH1 0x2
0xd3 EXP
0xd4 SUB
0xd5 AND
0xd6 SWAP2
0xd7 PUSH1 0x0
0xd9 DUP2
0xda DUP2
0xdb DUP2
0xdc DUP6
0xdd DUP8
0xde PUSH2 0x8502
0xe1 GAS
0xe2 SUB
0xe3 CALL
0xe4 SWAP3
0xe5 POP
0xe6 POP
0xe7 POP
0xe8 POP
0xe9 PUSH2 0x21a
0xec DUP2
0xed PUSH2 0x131
0xf0 JUMP
---
0xbd: JUMPDEST 
0xbe: V72 = 0x1
0xc1: V73 = S[0x1]
0xc2: V74 = 0x40
0xc4: V75 = M[0x40]
0xc5: V76 = 0x1fb
0xc9: V77 = 0x4
0xcb: V78 = CALLDATALOAD 0x4
0xcd: V79 = 0x1
0xcf: V80 = 0xa0
0xd1: V81 = 0x2
0xd3: V82 = EXP 0x2 0xa0
0xd4: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0xd7: V85 = 0x0
0xde: V86 = 0x8502
0xe1: V87 = GAS
0xe2: V88 = SUB V87 0x8502
0xe3: V89 = CALL V88 V84 0x1 V75 0x0 V75 0x0
0xe9: V90 = 0x21a
0xed: V91 = 0x131
0xf0: JUMP 0x131
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb, V78, 0x21a, V78]
Exit stack: [V10, 0x1fb, V78, 0x21a, V78]

================================

Block 0xf1
[0xf1:0x125]
---
Predecessors: [0x1f]
Successors: [0xbb, 0x126]
---
0xf1 JUMPDEST
0xf2 PUSH1 0x3
0xf4 SLOAD
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 PUSH2 0x1fb
0xfb SWAP2
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 SWAP1
0x105 DUP2
0x106 AND
0x107 SWAP2
0x108 PUSH1 0x0
0x10a SWAP2
0x10b ADDRESS
0x10c AND
0x10d BALANCE
0x10e PUSH1 0x0
0x110 NOT
0x111 ADD
0x112 SWAP1
0x113 DUP3
0x114 DUP2
0x115 DUP2
0x116 DUP2
0x117 DUP6
0x118 DUP9
0x119 DUP4
0x11a CALL
0x11b SWAP4
0x11c POP
0x11d POP
0x11e POP
0x11f POP
0x120 ISZERO
0x121 ISZERO
0x122 PUSH2 0xbb
0x125 JUMPI
---
0xf1: JUMPDEST 
0xf2: V92 = 0x3
0xf4: V93 = S[0x3]
0xf5: V94 = 0x40
0xf7: V95 = M[0x40]
0xf8: V96 = 0x1fb
0xfc: V97 = 0x1
0xfe: V98 = 0xa0
0x100: V99 = 0x2
0x102: V100 = EXP 0x2 0xa0
0x103: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x106: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x108: V103 = 0x0
0x10b: V104 = ADDRESS
0x10c: V105 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V106 = BALANCE V105
0x10e: V107 = 0x0
0x110: V108 = NOT 0x0
0x111: V109 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V106
0x11a: V110 = CALL 0x0 V102 V109 V95 0x0 V95 0x0
0x120: V111 = ISZERO V110
0x121: V112 = ISZERO V111
0x122: V113 = 0xbb
0x125: JUMPI 0xbb V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb]
Exit stack: [V10, 0x1fb]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0xf1]
Successors: []
---
0x126 PUSH2 0x2
0x129 JUMP
---
0x126: V114 = 0x2
0x129: THROW 
---
Entry stack: [V10, 0x1fb]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1fb]

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x2a]
Successors: [0x131]
---
0x12a JUMPDEST
0x12b PUSH2 0x1fb
0x12e PUSH1 0x4
0x130 CALLDATALOAD
---
0x12a: JUMPDEST 
0x12b: V115 = 0x1fb
0x12e: V116 = 0x4
0x130: V117 = CALLDATALOAD 0x4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb, V117]
Exit stack: [V10, 0x1fb, V117]

================================

Block 0x131
[0x131:0x148]
---
Predecessors: [0xbd, 0x12a]
Successors: [0x149, 0x21d]
---
0x131 JUMPDEST
0x132 PUSH1 0x0
0x134 SLOAD
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d SWAP1
0x13e DUP2
0x13f AND
0x140 CALLER
0x141 SWAP1
0x142 SWAP2
0x143 AND
0x144 EQ
0x145 PUSH2 0x21d
0x148 JUMPI
---
0x131: JUMPDEST 
0x132: V118 = 0x0
0x134: V119 = S[0x0]
0x135: V120 = 0x1
0x137: V121 = 0xa0
0x139: V122 = 0x2
0x13b: V123 = EXP 0x2 0xa0
0x13c: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x140: V126 = CALLER
0x143: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x144: V128 = EQ V127 V125
0x145: V129 = 0x21d
0x148: JUMPI 0x21d V128
---
Entry stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x131]
Successors: []
---
0x149 PUSH2 0x2
0x14c JUMP
---
0x149: V130 = 0x2
0x14c: THROW 
---
Entry stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]

================================

Block 0x14d
[0x14d:0x15e]
---
Predecessors: [0x35]
Successors: [0x1fd]
---
0x14d JUMPDEST
0x14e PUSH2 0x1fd
0x151 PUSH1 0x0
0x153 SLOAD
0x154 PUSH1 0x1
0x156 PUSH1 0xa0
0x158 PUSH1 0x2
0x15a EXP
0x15b SUB
0x15c AND
0x15d DUP2
0x15e JUMP
---
0x14d: JUMPDEST 
0x14e: V131 = 0x1fd
0x151: V132 = 0x0
0x153: V133 = S[0x0]
0x154: V134 = 0x1
0x156: V135 = 0xa0
0x158: V136 = 0x2
0x15a: V137 = EXP 0x2 0xa0
0x15b: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15c: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x15e: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V139]
Exit stack: [V10, 0x1fd, V139]

================================

Block 0x15f
[0x15f:0x170]
---
Predecessors: [0x40]
Successors: [0x1fd]
---
0x15f JUMPDEST
0x160 PUSH2 0x1fd
0x163 PUSH1 0x2
0x165 SLOAD
0x166 PUSH1 0x1
0x168 PUSH1 0xa0
0x16a PUSH1 0x2
0x16c EXP
0x16d SUB
0x16e AND
0x16f DUP2
0x170 JUMP
---
0x15f: JUMPDEST 
0x160: V140 = 0x1fd
0x163: V141 = 0x2
0x165: V142 = S[0x2]
0x166: V143 = 0x1
0x168: V144 = 0xa0
0x16a: V145 = 0x2
0x16c: V146 = EXP 0x2 0xa0
0x16d: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16e: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x170: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V148]
Exit stack: [V10, 0x1fd, V148]

================================

Block 0x171
[0x171:0x182]
---
Predecessors: [0x4b]
Successors: [0x1fd]
---
0x171 JUMPDEST
0x172 PUSH2 0x1fd
0x175 PUSH1 0x1
0x177 SLOAD
0x178 PUSH1 0x1
0x17a PUSH1 0xa0
0x17c PUSH1 0x2
0x17e EXP
0x17f SUB
0x180 AND
0x181 DUP2
0x182 JUMP
---
0x171: JUMPDEST 
0x172: V149 = 0x1fd
0x175: V150 = 0x1
0x177: V151 = S[0x1]
0x178: V152 = 0x1
0x17a: V153 = 0xa0
0x17c: V154 = 0x2
0x17e: V155 = EXP 0x2 0xa0
0x17f: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x180: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x182: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V157]
Exit stack: [V10, 0x1fd, V157]

================================

Block 0x183
[0x183:0x189]
---
Predecessors: [0x56]
Successors: [0x18a]
---
0x183 JUMPDEST
0x184 PUSH2 0x1fb
0x187 PUSH1 0x4
0x189 CALLDATALOAD
---
0x183: JUMPDEST 
0x184: V158 = 0x1fb
0x187: V159 = 0x4
0x189: V160 = CALLDATALOAD 0x4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fb, V160]
Exit stack: [V10, 0x1fb, V160]

================================

Block 0x18a
[0x18a:0x193]
---
Predecessors: [0x183, 0x194]
Successors: [0x194, 0x21a]
---
0x18a JUMPDEST
0x18b PUSH1 0x0
0x18d DUP2
0x18e GT
0x18f ISZERO
0x190 PUSH2 0x21a
0x193 JUMPI
---
0x18a: JUMPDEST 
0x18b: V161 = 0x0
0x18e: V162 = GT S0 0x0
0x18f: V163 = ISZERO V162
0x190: V164 = 0x21a
0x193: JUMPI 0x21a V163
---
Entry stack: [V10, 0x1fb, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1fb, S0]

================================

Block 0x194
[0x194:0x1e8]
---
Predecessors: [0x18a]
Successors: [0x18a]
---
0x194 PUSH1 0x1
0x196 SLOAD
0x197 PUSH1 0x40
0x199 MLOAD
0x19a PUSH1 0x1
0x19c PUSH1 0xa0
0x19e PUSH1 0x2
0x1a0 EXP
0x1a1 SUB
0x1a2 SWAP2
0x1a3 SWAP1
0x1a4 SWAP2
0x1a5 AND
0x1a6 SWAP1
0x1a7 PUSH1 0x5b
0x1a9 DUP1
0x1aa PUSH2 0x2c2
0x1ad DUP4
0x1ae CODECOPY
0x1af ADD
0x1b0 DUP1
0x1b1 DUP3
0x1b2 PUSH1 0x1
0x1b4 PUSH1 0xa0
0x1b6 PUSH1 0x2
0x1b8 EXP
0x1b9 SUB
0x1ba AND
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP2
0x1c1 POP
0x1c2 POP
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca PUSH1 0x0
0x1cc CREATE
0x1cd PUSH1 0x1
0x1cf DUP1
0x1d0 SLOAD
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 NOT
0x1da AND
0x1db SWAP2
0x1dc SWAP1
0x1dd SWAP2
0x1de OR
0x1df SWAP1
0x1e0 SSTORE
0x1e1 PUSH1 0x0
0x1e3 NOT
0x1e4 ADD
0x1e5 PUSH2 0x18a
0x1e8 JUMP
---
0x194: V165 = 0x1
0x196: V166 = S[0x1]
0x197: V167 = 0x40
0x199: V168 = M[0x40]
0x19a: V169 = 0x1
0x19c: V170 = 0xa0
0x19e: V171 = 0x2
0x1a0: V172 = EXP 0x2 0xa0
0x1a1: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a5: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1a7: V175 = 0x5b
0x1aa: V176 = 0x2c2
0x1ae: CODECOPY V168 0x2c2 0x5b
0x1af: V177 = ADD 0x5b V168
0x1b2: V178 = 0x1
0x1b4: V179 = 0xa0
0x1b6: V180 = 0x2
0x1b8: V181 = EXP 0x2 0xa0
0x1b9: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ba: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x1bc: M[V177] = V183
0x1bd: V184 = 0x20
0x1bf: V185 = ADD 0x20 V177
0x1c3: V186 = 0x40
0x1c5: V187 = M[0x40]
0x1c8: V188 = SUB V185 V187
0x1ca: V189 = 0x0
0x1cc: V190 = CREATE 0x0 V187 V188
0x1cd: V191 = 0x1
0x1d0: V192 = S[0x1]
0x1d1: V193 = 0x1
0x1d3: V194 = 0xa0
0x1d5: V195 = 0x2
0x1d7: V196 = EXP 0x2 0xa0
0x1d8: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V198 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V199 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V192
0x1de: V200 = OR V199 V190
0x1e0: S[0x1] = V200
0x1e1: V201 = 0x0
0x1e3: V202 = NOT 0x0
0x1e4: V203 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0x1e5: V204 = 0x18a
0x1e8: JUMP 0x18a
---
Entry stack: [V10, 0x1fb, S0]
Stack pops: 1
Stack additions: [V203]
Exit stack: [V10, 0x1fb, V203]

================================

Block 0x1e9
[0x1e9:0x1fa]
---
Predecessors: [0x61]
Successors: [0x1fd]
---
0x1e9 JUMPDEST
0x1ea PUSH2 0x1fd
0x1ed PUSH1 0x3
0x1ef SLOAD
0x1f0 PUSH1 0x1
0x1f2 PUSH1 0xa0
0x1f4 PUSH1 0x2
0x1f6 EXP
0x1f7 SUB
0x1f8 AND
0x1f9 DUP2
0x1fa JUMP
---
0x1e9: JUMPDEST 
0x1ea: V205 = 0x1fd
0x1ed: V206 = 0x3
0x1ef: V207 = S[0x3]
0x1f0: V208 = 0x1
0x1f2: V209 = 0xa0
0x1f4: V210 = 0x2
0x1f6: V211 = EXP 0x2 0xa0
0x1f7: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f8: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x1fa: JUMP 0x1fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V213]
Exit stack: [V10, 0x1fd, V213]

================================

Block 0x1fb
[0x1fb:0x1fc]
---
Predecessors: [0xbb, 0x21a, 0x241]
Successors: []
---
0x1fb JUMPDEST
0x1fc STOP
---
0x1fb: JUMPDEST 
0x1fc: STOP 
---
Entry stack: [V10, 0x1fb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1fb, S0]

================================

Block 0x1fd
[0x1fd:0x219]
---
Predecessors: [0x14d, 0x15f, 0x171, 0x1e9]
Successors: []
---
0x1fd JUMPDEST
0x1fe PUSH1 0x40
0x200 DUP1
0x201 MLOAD
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a SWAP3
0x20b SWAP1
0x20c SWAP3
0x20d AND
0x20e DUP3
0x20f MSTORE
0x210 MLOAD
0x211 SWAP1
0x212 DUP2
0x213 SWAP1
0x214 SUB
0x215 PUSH1 0x20
0x217 ADD
0x218 SWAP1
0x219 RETURN
---
0x1fd: JUMPDEST 
0x1fe: V214 = 0x40
0x201: V215 = M[0x40]
0x202: V216 = 0x1
0x204: V217 = 0xa0
0x206: V218 = 0x2
0x208: V219 = EXP 0x2 0xa0
0x209: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20d: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x20f: M[V215] = V221
0x210: V222 = M[0x40]
0x214: V223 = SUB V215 V222
0x215: V224 = 0x20
0x217: V225 = ADD 0x20 V223
0x219: RETURN V222 V225
---
Entry stack: [V10, 0x1fd, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fd]

================================

Block 0x21a
[0x21a:0x21c]
---
Predecessors: [0x18a, 0x241]
Successors: [0x1fb]
---
0x21a JUMPDEST
0x21b POP
0x21c JUMP
---
0x21a: JUMPDEST 
0x21c: JUMP 0x1fb
---
Entry stack: [V10, 0x1fb, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x21d
[0x21d:0x22e]
---
Predecessors: [0x131]
Successors: [0x22f, 0x241]
---
0x21d JUMPDEST
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 DUP2
0x227 AND
0x228 PUSH1 0x0
0x22a EQ
0x22b PUSH2 0x241
0x22e JUMPI
---
0x21d: JUMPDEST 
0x21e: V226 = 0x1
0x220: V227 = 0xa0
0x222: V228 = 0x2
0x224: V229 = EXP 0x2 0xa0
0x225: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V231 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x228: V232 = 0x0
0x22a: V233 = EQ 0x0 V231
0x22b: V234 = 0x241
0x22e: JUMPI 0x241 V233
---
Entry stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]

================================

Block 0x22f
[0x22f:0x240]
---
Predecessors: [0x21d]
Successors: [0x241]
---
0x22f PUSH1 0x2
0x231 DUP1
0x232 SLOAD
0x233 PUSH1 0x1
0x235 PUSH1 0xa0
0x237 PUSH1 0x2
0x239 EXP
0x23a SUB
0x23b NOT
0x23c AND
0x23d DUP3
0x23e OR
0x23f SWAP1
0x240 SSTORE
---
0x22f: V235 = 0x2
0x232: V236 = S[0x2]
0x233: V237 = 0x1
0x235: V238 = 0xa0
0x237: V239 = 0x2
0x239: V240 = EXP 0x2 0xa0
0x23a: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V242 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x23c: V243 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V236
0x23e: V244 = OR S0 V243
0x240: S[0x2] = V244
---
Entry stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]

================================

Block 0x241
[0x241:0x266]
---
Predecessors: [0x21d, 0x22f]
Successors: [0x1fb, 0x21a]
---
0x241 JUMPDEST
0x242 PUSH1 0x2
0x244 SLOAD
0x245 PUSH1 0x1
0x247 DUP1
0x248 SLOAD
0x249 PUSH1 0x1
0x24b PUSH1 0xa0
0x24d PUSH1 0x2
0x24f EXP
0x250 SUB
0x251 NOT
0x252 AND
0x253 PUSH1 0x1
0x255 PUSH1 0xa0
0x257 PUSH1 0x2
0x259 EXP
0x25a SUB
0x25b SWAP3
0x25c SWAP1
0x25d SWAP3
0x25e AND
0x25f SWAP2
0x260 SWAP1
0x261 SWAP2
0x262 OR
0x263 SWAP1
0x264 SSTORE
0x265 POP
0x266 JUMP
---
0x241: JUMPDEST 
0x242: V245 = 0x2
0x244: V246 = S[0x2]
0x245: V247 = 0x1
0x248: V248 = S[0x1]
0x249: V249 = 0x1
0x24b: V250 = 0xa0
0x24d: V251 = 0x2
0x24f: V252 = EXP 0x2 0xa0
0x250: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V254 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x252: V255 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V248
0x253: V256 = 0x1
0x255: V257 = 0xa0
0x257: V258 = 0x2
0x259: V259 = EXP 0x2 0xa0
0x25a: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x262: V262 = OR V261 V255
0x264: S[0x1] = V262
0x266: JUMP {0x1fb, 0x21a}
---
Entry stack: [V10, 0x1fb, S2, {0x1fb, 0x21a}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x1fb, S2]

================================

Block 0x267
[0x267:0x2a4]
---
Predecessors: []
Successors: [0x2a5]
---
0x267 PUSH1 0x60
0x269 PUSH1 0x40
0x26b MSTORE
0x26c PUSH1 0x40
0x26e MLOAD
0x26f PUSH1 0x20
0x271 DUP1
0x272 PUSH1 0x5b
0x274 DUP4
0x275 CODECOPY
0x276 POP
0x277 PUSH1 0x80
0x279 PUSH1 0x40
0x27b MSTORE
0x27c MLOAD
0x27d PUSH1 0x0
0x27f DUP1
0x280 SLOAD
0x281 PUSH1 0x1
0x283 PUSH1 0xa0
0x285 PUSH1 0x2
0x287 EXP
0x288 SUB
0x289 NOT
0x28a AND
0x28b DUP3
0x28c OR
0x28d SWAP1
0x28e SSTORE
0x28f POP
0x290 PUSH1 0x27
0x292 DUP1
0x293 PUSH1 0x34
0x295 PUSH1 0x0
0x297 CODECOPY
0x298 PUSH1 0x0
0x29a RETURN
0x29b PUSH1 0x60
0x29d PUSH1 0x40
0x29f MSTORE
0x2a0 CALLDATASIZE
0x2a1 ISZERO
0x2a2 PUSH1 0xa
0x2a4 JUMPI
---
0x267: V263 = 0x60
0x269: V264 = 0x40
0x26b: M[0x40] = 0x60
0x26c: V265 = 0x40
0x26e: V266 = M[0x40]
0x26f: V267 = 0x20
0x272: V268 = 0x5b
0x275: CODECOPY V266 0x5b 0x20
0x277: V269 = 0x80
0x279: V270 = 0x40
0x27b: M[0x40] = 0x80
0x27c: V271 = M[V266]
0x27d: V272 = 0x0
0x280: V273 = S[0x0]
0x281: V274 = 0x1
0x283: V275 = 0xa0
0x285: V276 = 0x2
0x287: V277 = EXP 0x2 0xa0
0x288: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V279 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V280 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V273
0x28c: V281 = OR V271 V280
0x28e: S[0x0] = V281
0x290: V282 = 0x27
0x293: V283 = 0x34
0x295: V284 = 0x0
0x297: CODECOPY 0x0 0x34 0x27
0x298: V285 = 0x0
0x29a: RETURN 0x0 0x27
0x29b: V286 = 0x60
0x29d: V287 = 0x40
0x29f: M[0x40] = 0x60
0x2a0: V288 = CALLDATASIZE
0x2a1: V289 = ISZERO V288
0x2a2: V290 = 0xa
0x2a4: THROWI V289
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a5
[0x2a5:0x2ff]
---
Predecessors: [0x267]
Successors: [0x300]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x0
0x2a8 PUSH1 0x0
0x2aa SLOAD
0x2ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c0 AND
0x2c1 SELFDESTRUCT
0x2c2 PUSH1 0x60
0x2c4 PUSH1 0x40
0x2c6 MSTORE
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca PUSH1 0x20
0x2cc DUP1
0x2cd PUSH1 0x5b
0x2cf DUP4
0x2d0 CODECOPY
0x2d1 POP
0x2d2 PUSH1 0x80
0x2d4 PUSH1 0x40
0x2d6 MSTORE
0x2d7 MLOAD
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db SLOAD
0x2dc PUSH1 0x1
0x2de PUSH1 0xa0
0x2e0 PUSH1 0x2
0x2e2 EXP
0x2e3 SUB
0x2e4 NOT
0x2e5 AND
0x2e6 DUP3
0x2e7 OR
0x2e8 SWAP1
0x2e9 SSTORE
0x2ea POP
0x2eb PUSH1 0x27
0x2ed DUP1
0x2ee PUSH1 0x34
0x2f0 PUSH1 0x0
0x2f2 CODECOPY
0x2f3 PUSH1 0x0
0x2f5 RETURN
0x2f6 PUSH1 0x60
0x2f8 PUSH1 0x40
0x2fa MSTORE
0x2fb CALLDATASIZE
0x2fc ISZERO
0x2fd PUSH1 0xa
0x2ff JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V291 = 0x0
0x2a8: V292 = 0x0
0x2aa: V293 = S[0x0]
0x2ab: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c0: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x2c1: SELFDESTRUCT V295
0x2c2: V296 = 0x60
0x2c4: V297 = 0x40
0x2c6: M[0x40] = 0x60
0x2c7: V298 = 0x40
0x2c9: V299 = M[0x40]
0x2ca: V300 = 0x20
0x2cd: V301 = 0x5b
0x2d0: CODECOPY V299 0x5b 0x20
0x2d2: V302 = 0x80
0x2d4: V303 = 0x40
0x2d6: M[0x40] = 0x80
0x2d7: V304 = M[V299]
0x2d8: V305 = 0x0
0x2db: V306 = S[0x0]
0x2dc: V307 = 0x1
0x2de: V308 = 0xa0
0x2e0: V309 = 0x2
0x2e2: V310 = EXP 0x2 0xa0
0x2e3: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e4: V312 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V313 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V306
0x2e7: V314 = OR V304 V313
0x2e9: S[0x0] = V314
0x2eb: V315 = 0x27
0x2ee: V316 = 0x34
0x2f0: V317 = 0x0
0x2f2: CODECOPY 0x0 0x34 0x27
0x2f3: V318 = 0x0
0x2f5: RETURN 0x0 0x27
0x2f6: V319 = 0x60
0x2f8: V320 = 0x40
0x2fa: M[0x40] = 0x60
0x2fb: V321 = CALLDATASIZE
0x2fc: V322 = ISZERO V321
0x2fd: V323 = 0xa
0x2ff: THROWI V322
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x300
[0x300:0x31c]
---
Predecessors: [0x2a5]
Successors: []
---
0x300 JUMPDEST
0x301 PUSH1 0x0
0x303 PUSH1 0x0
0x305 SLOAD
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c SELFDESTRUCT
---
0x300: JUMPDEST 
0x301: V324 = 0x0
0x303: V325 = 0x0
0x305: V326 = S[0x0]
0x306: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x31c: SELFDESTRUCT V328
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: [0x0]

================================

Function 0:
Public function signature: 0x33e4ca13
Entry block: 0xbd
Exit block: 0x1fb
Body: 0xbd, 0x1fb, 0x21a

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xf1
Exit block: 0x1fb
Body: 0xf1, 0x1fb

Function 2:
Public function signature: 0x882d2b09
Entry block: 0x12a
Exit block: 0x1fb
Body: 0x12a, 0x1fb

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x14d
Exit block: 0x1fd
Body: 0x14d, 0x1fd

Function 4:
Public function signature: 0x99e51e1c
Entry block: 0x15f
Exit block: 0x1fd
Body: 0x15f, 0x1fd

Function 5:
Public function signature: 0xb9944dc9
Entry block: 0x171
Exit block: 0x1fd
Body: 0x171, 0x1fd

Function 6:
Public function signature: 0xcef7cfa9
Entry block: 0x183
Exit block: 0x1fb
Body: 0x183, 0x18a, 0x194, 0x1fb, 0x21a

Function 7:
Public function signature: 0xec556889
Entry block: 0x1e9
Exit block: 0x1fd
Body: 0x1e9, 0x1fd

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x1fb
Body: 0x6c, 0x1fb

Function 9:
Private function
Entry block: 0x131
Exit block: 0x241
Body: 0x131, 0x21d, 0x22f, 0x241

