Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4b
0xa: JUMPI 0x4b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x58]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x5de01497
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x58
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x5de01497
0x1a: V12 = EQ V10 0x5de01497
0x1b: V13 = 0x58
0x1e: JUMPI 0x58 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x82]
---
0x1f DUP1
0x20 PUSH4 0x63a9c3d7
0x25 EQ
0x26 PUSH2 0x82
0x29 JUMPI
---
0x20: V14 = 0x63a9c3d7
0x25: V15 = EQ 0x63a9c3d7 V10
0x26: V16 = 0x82
0x29: JUMPI 0x82 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x273]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0x273
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0x273
0x34: JUMPI 0x273 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x28a]
---
0x35 DUP1
0x36 PUSH4 0xc5e412e5
0x3b EQ
0x3c PUSH2 0x28a
0x3f JUMPI
---
0x36: V20 = 0xc5e412e5
0x3b: V21 = EQ 0xc5e412e5 V10
0x3c: V22 = 0x28a
0x3f: JUMPI 0x28a V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x2b5]
---
0x40 DUP1
0x41 PUSH4 0xf2fde38b
0x46 EQ
0x47 PUSH2 0x2b5
0x4a JUMPI
---
0x41: V23 = 0xf2fde38b
0x46: V24 = EQ 0xf2fde38b V10
0x47: V25 = 0x2b5
0x4a: JUMPI 0x2b5 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x50]
---
Predecessors: [0x0, 0x40]
Successors: [0x51]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d PUSH2 0x2
0x50 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = CALLVALUE
0x4d: V27 = 0x2
0x50: THROWI V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0x4b]
Successors: []
---
0x51 PUSH2 0x2db
0x54 PUSH2 0x2
0x57 JUMP
---
0x51: V28 = 0x2db
0x54: V29 = 0x2
0x57: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2db]
Exit stack: [V10, 0x2db]

================================

Block 0x58
[0x58:0x5d]
---
Predecessors: [0xb]
Successors: [0x5e]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a PUSH2 0x2
0x5d JUMPI
---
0x58: JUMPDEST 
0x59: V30 = CALLVALUE
0x5a: V31 = 0x2
0x5d: THROWI V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x7d]
---
Predecessors: [0x58]
Successors: [0x7e, 0x34e]
---
0x5e PUSH2 0x2dd
0x61 PUSH1 0x4
0x63 CALLDATALOAD
0x64 PUSH1 0x24
0x66 CALLDATALOAD
0x67 PUSH1 0x0
0x69 DUP1
0x6a SLOAD
0x6b CALLER
0x6c PUSH1 0x1
0x6e PUSH1 0xa0
0x70 PUSH1 0x2
0x72 EXP
0x73 SUB
0x74 SWAP1
0x75 DUP2
0x76 AND
0x77 SWAP2
0x78 AND
0x79 EQ
0x7a PUSH2 0x34e
0x7d JUMPI
---
0x5e: V32 = 0x2dd
0x61: V33 = 0x4
0x63: V34 = CALLDATALOAD 0x4
0x64: V35 = 0x24
0x66: V36 = CALLDATALOAD 0x24
0x67: V37 = 0x0
0x6a: V38 = S[0x0]
0x6b: V39 = CALLER
0x6c: V40 = 0x1
0x6e: V41 = 0xa0
0x70: V42 = 0x2
0x72: V43 = EXP 0x2 0xa0
0x73: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x76: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x78: V46 = AND V38 0xffffffffffffffffffffffffffffffffffffffff
0x79: V47 = EQ V46 V45
0x7a: V48 = 0x34e
0x7d: JUMPI 0x34e V47
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2dd, V34, V36, 0x0]
Exit stack: [V10, 0x2dd, V34, V36, 0x0]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x5e]
Successors: []
---
0x7e PUSH2 0x2
0x81 JUMP
---
0x7e: V49 = 0x2
0x81: THROW 
---
Entry stack: [V10, 0x2dd, V34, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2dd, V34, V36, 0x0]

================================

Block 0x82
[0x82:0x87]
---
Predecessors: [0x1f]
Successors: [0x88]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 PUSH2 0x2
0x87 JUMPI
---
0x82: JUMPDEST 
0x83: V50 = CALLVALUE
0x84: V51 = 0x2
0x87: THROWI V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x88
[0x88:0xb5]
---
Predecessors: [0x82]
Successors: [0xb6, 0x269]
---
0x88 PUSH2 0x2f1
0x8b PUSH1 0x4
0x8d CALLDATALOAD
0x8e PUSH1 0x1
0x90 PUSH1 0xa0
0x92 PUSH1 0x2
0x94 EXP
0x95 SUB
0x96 DUP2
0x97 AND
0x98 PUSH1 0x0
0x9a SWAP1
0x9b DUP2
0x9c MSTORE
0x9d PUSH1 0x1
0x9f PUSH1 0x20
0xa1 MSTORE
0xa2 PUSH1 0x40
0xa4 DUP2
0xa5 SHA3
0xa6 SLOAD
0xa7 PUSH1 0xff
0xa9 AND
0xaa SWAP1
0xab DUP1
0xac DUP1
0xad DUP1
0xae DUP1
0xaf DUP1
0xb0 DUP7
0xb1 ISZERO
0xb2 PUSH2 0x269
0xb5 JUMPI
---
0x88: V52 = 0x2f1
0x8b: V53 = 0x4
0x8d: V54 = CALLDATALOAD 0x4
0x8e: V55 = 0x1
0x90: V56 = 0xa0
0x92: V57 = 0x2
0x94: V58 = EXP 0x2 0xa0
0x95: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97: V60 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0x98: V61 = 0x0
0x9c: M[0x0] = V60
0x9d: V62 = 0x1
0x9f: V63 = 0x20
0xa1: M[0x20] = 0x1
0xa2: V64 = 0x40
0xa5: V65 = SHA3 0x0 0x40
0xa6: V66 = S[V65]
0xa7: V67 = 0xff
0xa9: V68 = AND 0xff V66
0xb1: V69 = ISZERO V68
0xb2: V70 = 0x269
0xb5: JUMPI 0x269 V69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2f1, V54, V68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x2f1, V54, V68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xb6
[0xb6:0xf5]
---
Predecessors: [0x88]
Successors: [0xf6]
---
0xb6 DUP8
0xb7 SWAP1
0xb8 POP
0xb9 DUP1
0xba PUSH1 0x1
0xbc PUSH1 0xa0
0xbe PUSH1 0x2
0xc0 EXP
0xc1 SUB
0xc2 AND
0xc3 PUSH4 0x8da5cb5b
0xc8 PUSH1 0x0
0xca PUSH1 0x40
0xcc MLOAD
0xcd PUSH1 0x20
0xcf ADD
0xd0 MSTORE
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP2
0xd5 PUSH1 0xe0
0xd7 PUSH1 0x2
0xd9 EXP
0xda MUL
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x4
0xdf ADD
0xe0 DUP1
0xe1 SWAP1
0xe2 POP
0xe3 PUSH1 0x20
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP4
0xea SUB
0xeb DUP2
0xec PUSH1 0x0
0xee DUP8
0xef DUP1
0xf0 EXTCODESIZE
0xf1 ISZERO
0xf2 PUSH2 0x2
0xf5 JUMPI
---
0xba: V71 = 0x1
0xbc: V72 = 0xa0
0xbe: V73 = 0x2
0xc0: V74 = EXP 0x2 0xa0
0xc1: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xc3: V77 = 0x8da5cb5b
0xc8: V78 = 0x0
0xca: V79 = 0x40
0xcc: V80 = M[0x40]
0xcd: V81 = 0x20
0xcf: V82 = ADD 0x20 V80
0xd0: M[V82] = 0x0
0xd1: V83 = 0x40
0xd3: V84 = M[0x40]
0xd5: V85 = 0xe0
0xd7: V86 = 0x2
0xd9: V87 = EXP 0x2 0xe0
0xda: V88 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xdc: M[V84] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xdd: V89 = 0x4
0xdf: V90 = ADD 0x4 V84
0xe3: V91 = 0x20
0xe5: V92 = 0x40
0xe7: V93 = M[0x40]
0xea: V94 = SUB V90 V93
0xec: V95 = 0x0
0xf0: V96 = EXTCODESIZE V76
0xf1: V97 = ISZERO V96
0xf2: V98 = 0x2
0xf5: THROWI V97
---
Entry stack: [V10, 0x2f1, V54, V68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S7, V76, 0x8da5cb5b, V90, 0x20, V93, V94, V93, 0x0, V76]
Exit stack: [V10, 0x2f1, V54, V68, 0x0, 0x0, 0x0, 0x0, 0x0, V54, V76, 0x8da5cb5b, V90, 0x20, V93, V94, V93, 0x0, V76]

================================

Block 0xf6
[0xf6:0xff]
---
Predecessors: [0xb6]
Successors: [0x100]
---
0xf6 PUSH1 0x32
0xf8 GAS
0xf9 SUB
0xfa CALL
0xfb ISZERO
0xfc PUSH2 0x2
0xff JUMPI
---
0xf6: V99 = 0x32
0xf8: V100 = GAS
0xf9: V101 = SUB V100 0x32
0xfa: V102 = CALL V101 V76 0x0 V93 V94 V93 0x20
0xfb: V103 = ISZERO V102
0xfc: V104 = 0x2
0xff: THROWI V103
---
Entry stack: [V10, 0x2f1, V54, V68, 0x0, 0x0, 0x0, 0x0, 0x0, V54, V76, 0x8da5cb5b, V90, 0x20, V93, V94, V93, 0x0, V76]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2f1, V54, V68, 0x0, 0x0, 0x0, 0x0, 0x0, V54, V76, 0x8da5cb5b, V90]

================================

Block 0x100
[0x100:0x14d]
---
Predecessors: [0xf6]
Successors: [0x14e]
---
0x100 POP
0x101 POP
0x102 POP
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 MLOAD
0x108 SWAP1
0x109 PUSH1 0x20
0x10b ADD
0x10c POP
0x10d SWAP6
0x10e POP
0x10f DUP6
0x110 POP
0x111 DUP1
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a AND
0x11b PUSH4 0x38d52e0f
0x120 PUSH1 0x0
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x20
0x127 ADD
0x128 MSTORE
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP2
0x12d PUSH1 0xe0
0x12f PUSH1 0x2
0x131 EXP
0x132 MUL
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x4
0x137 ADD
0x138 DUP1
0x139 SWAP1
0x13a POP
0x13b PUSH1 0x20
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 DUP4
0x142 SUB
0x143 DUP2
0x144 PUSH1 0x0
0x146 DUP8
0x147 DUP1
0x148 EXTCODESIZE
0x149 ISZERO
0x14a PUSH2 0x2
0x14d JUMPI
---
0x103: V105 = 0x40
0x105: V106 = M[0x40]
0x107: V107 = M[V106]
0x109: V108 = 0x20
0x10b: V109 = ADD 0x20 V106
0x112: V110 = 0x1
0x114: V111 = 0xa0
0x116: V112 = 0x2
0x118: V113 = EXP 0x2 0xa0
0x119: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x11b: V116 = 0x38d52e0f
0x120: V117 = 0x0
0x122: V118 = 0x40
0x124: V119 = M[0x40]
0x125: V120 = 0x20
0x127: V121 = ADD 0x20 V119
0x128: M[V121] = 0x0
0x129: V122 = 0x40
0x12b: V123 = M[0x40]
0x12d: V124 = 0xe0
0x12f: V125 = 0x2
0x131: V126 = EXP 0x2 0xe0
0x132: V127 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x134: M[V123] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x135: V128 = 0x4
0x137: V129 = ADD 0x4 V123
0x13b: V130 = 0x20
0x13d: V131 = 0x40
0x13f: V132 = M[0x40]
0x142: V133 = SUB V129 V132
0x144: V134 = 0x0
0x148: V135 = EXTCODESIZE V115
0x149: V136 = ISZERO V135
0x14a: V137 = 0x2
0x14d: THROWI V136
---
Entry stack: [V10, 0x2f1, V54, V68, 0x0, 0x0, 0x0, 0x0, 0x0, V54, V76, 0x8da5cb5b, V90]
Stack pops: 9
Stack additions: [V107, S7, S6, S5, S4, S3, V115, 0x38d52e0f, V129, 0x20, V132, V133, V132, 0x0, V115]
Exit stack: [V10, 0x2f1, V54, V68, V107, 0x0, 0x0, 0x0, 0x0, V54, V115, 0x38d52e0f, V129, 0x20, V132, V133, V132, 0x0, V115]

================================

Block 0x14e
[0x14e:0x157]
---
Predecessors: [0x100]
Successors: [0x158]
---
0x14e PUSH1 0x32
0x150 GAS
0x151 SUB
0x152 CALL
0x153 ISZERO
0x154 PUSH2 0x2
0x157 JUMPI
---
0x14e: V138 = 0x32
0x150: V139 = GAS
0x151: V140 = SUB V139 0x32
0x152: V141 = CALL V140 V115 0x0 V132 V133 V132 0x20
0x153: V142 = ISZERO V141
0x154: V143 = 0x2
0x157: THROWI V142
---
Entry stack: [V10, 0x2f1, V54, V68, V107, 0x0, 0x0, 0x0, 0x0, V54, V115, 0x38d52e0f, V129, 0x20, V132, V133, V132, 0x0, V115]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2f1, V54, V68, V107, 0x0, 0x0, 0x0, 0x0, V54, V115, 0x38d52e0f, V129]

================================

Block 0x158
[0x158:0x1a5]
---
Predecessors: [0x14e]
Successors: [0x1a6]
---
0x158 POP
0x159 POP
0x15a POP
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f MLOAD
0x160 SWAP1
0x161 PUSH1 0x20
0x163 ADD
0x164 POP
0x165 SWAP5
0x166 POP
0x167 DUP5
0x168 POP
0x169 DUP1
0x16a PUSH1 0x1
0x16c PUSH1 0xa0
0x16e PUSH1 0x2
0x170 EXP
0x171 SUB
0x172 AND
0x173 PUSH4 0x4b750334
0x178 PUSH1 0x0
0x17a PUSH1 0x40
0x17c MLOAD
0x17d PUSH1 0x20
0x17f ADD
0x180 MSTORE
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP2
0x185 PUSH1 0xe0
0x187 PUSH1 0x2
0x189 EXP
0x18a MUL
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x4
0x18f ADD
0x190 DUP1
0x191 SWAP1
0x192 POP
0x193 PUSH1 0x20
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 DUP4
0x19a SUB
0x19b DUP2
0x19c PUSH1 0x0
0x19e DUP8
0x19f DUP1
0x1a0 EXTCODESIZE
0x1a1 ISZERO
0x1a2 PUSH2 0x2
0x1a5 JUMPI
---
0x15b: V144 = 0x40
0x15d: V145 = M[0x40]
0x15f: V146 = M[V145]
0x161: V147 = 0x20
0x163: V148 = ADD 0x20 V145
0x16a: V149 = 0x1
0x16c: V150 = 0xa0
0x16e: V151 = 0x2
0x170: V152 = EXP 0x2 0xa0
0x171: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x172: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x173: V155 = 0x4b750334
0x178: V156 = 0x0
0x17a: V157 = 0x40
0x17c: V158 = M[0x40]
0x17d: V159 = 0x20
0x17f: V160 = ADD 0x20 V158
0x180: M[V160] = 0x0
0x181: V161 = 0x40
0x183: V162 = M[0x40]
0x185: V163 = 0xe0
0x187: V164 = 0x2
0x189: V165 = EXP 0x2 0xe0
0x18a: V166 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4b750334
0x18c: M[V162] = 0x4b75033400000000000000000000000000000000000000000000000000000000
0x18d: V167 = 0x4
0x18f: V168 = ADD 0x4 V162
0x193: V169 = 0x20
0x195: V170 = 0x40
0x197: V171 = M[0x40]
0x19a: V172 = SUB V168 V171
0x19c: V173 = 0x0
0x1a0: V174 = EXTCODESIZE V154
0x1a1: V175 = ISZERO V174
0x1a2: V176 = 0x2
0x1a5: THROWI V175
---
Entry stack: [V10, 0x2f1, V54, V68, V107, 0x0, 0x0, 0x0, 0x0, V54, V115, 0x38d52e0f, V129]
Stack pops: 8
Stack additions: [V146, S6, S5, S4, S3, V154, 0x4b750334, V168, 0x20, V171, V172, V171, 0x0, V154]
Exit stack: [V10, 0x2f1, V54, V68, V107, V146, 0x0, 0x0, 0x0, V54, V154, 0x4b750334, V168, 0x20, V171, V172, V171, 0x0, V154]

================================

Block 0x1a6
[0x1a6:0x1af]
---
Predecessors: [0x158]
Successors: [0x1b0]
---
0x1a6 PUSH1 0x32
0x1a8 GAS
0x1a9 SUB
0x1aa CALL
0x1ab ISZERO
0x1ac PUSH2 0x2
0x1af JUMPI
---
0x1a6: V177 = 0x32
0x1a8: V178 = GAS
0x1a9: V179 = SUB V178 0x32
0x1aa: V180 = CALL V179 V154 0x0 V171 V172 V171 0x20
0x1ab: V181 = ISZERO V180
0x1ac: V182 = 0x2
0x1af: THROWI V181
---
Entry stack: [V10, 0x2f1, V54, V68, V107, V146, 0x0, 0x0, 0x0, V54, V154, 0x4b750334, V168, 0x20, V171, V172, V171, 0x0, V154]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2f1, V54, V68, V107, V146, 0x0, 0x0, 0x0, V54, V154, 0x4b750334, V168]

================================

Block 0x1b0
[0x1b0:0x1fd]
---
Predecessors: [0x1a6]
Successors: [0x1fe]
---
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 MLOAD
0x1b8 SWAP1
0x1b9 PUSH1 0x20
0x1bb ADD
0x1bc POP
0x1bd SWAP4
0x1be POP
0x1bf DUP4
0x1c0 POP
0x1c1 DUP1
0x1c2 PUSH1 0x1
0x1c4 PUSH1 0xa0
0x1c6 PUSH1 0x2
0x1c8 EXP
0x1c9 SUB
0x1ca AND
0x1cb PUSH4 0x976a8435
0x1d0 PUSH1 0x0
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 MSTORE
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP2
0x1dd PUSH1 0xe0
0x1df PUSH1 0x2
0x1e1 EXP
0x1e2 MUL
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x4
0x1e7 ADD
0x1e8 DUP1
0x1e9 SWAP1
0x1ea POP
0x1eb PUSH1 0x20
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 DUP4
0x1f2 SUB
0x1f3 DUP2
0x1f4 PUSH1 0x0
0x1f6 DUP8
0x1f7 DUP1
0x1f8 EXTCODESIZE
0x1f9 ISZERO
0x1fa PUSH2 0x2
0x1fd JUMPI
---
0x1b3: V183 = 0x40
0x1b5: V184 = M[0x40]
0x1b7: V185 = M[V184]
0x1b9: V186 = 0x20
0x1bb: V187 = ADD 0x20 V184
0x1c2: V188 = 0x1
0x1c4: V189 = 0xa0
0x1c6: V190 = 0x2
0x1c8: V191 = EXP 0x2 0xa0
0x1c9: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ca: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x1cb: V194 = 0x976a8435
0x1d0: V195 = 0x0
0x1d2: V196 = 0x40
0x1d4: V197 = M[0x40]
0x1d5: V198 = 0x20
0x1d7: V199 = ADD 0x20 V197
0x1d8: M[V199] = 0x0
0x1d9: V200 = 0x40
0x1db: V201 = M[0x40]
0x1dd: V202 = 0xe0
0x1df: V203 = 0x2
0x1e1: V204 = EXP 0x2 0xe0
0x1e2: V205 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x976a8435
0x1e4: M[V201] = 0x976a843500000000000000000000000000000000000000000000000000000000
0x1e5: V206 = 0x4
0x1e7: V207 = ADD 0x4 V201
0x1eb: V208 = 0x20
0x1ed: V209 = 0x40
0x1ef: V210 = M[0x40]
0x1f2: V211 = SUB V207 V210
0x1f4: V212 = 0x0
0x1f8: V213 = EXTCODESIZE V193
0x1f9: V214 = ISZERO V213
0x1fa: V215 = 0x2
0x1fd: THROWI V214
---
Entry stack: [V10, 0x2f1, V54, V68, V107, V146, 0x0, 0x0, 0x0, V54, V154, 0x4b750334, V168]
Stack pops: 7
Stack additions: [V185, S5, S4, S3, V193, 0x976a8435, V207, 0x20, V210, V211, V210, 0x0, V193]
Exit stack: [V10, 0x2f1, V54, V68, V107, V146, V185, 0x0, 0x0, V54, V193, 0x976a8435, V207, 0x20, V210, V211, V210, 0x0, V193]

================================

Block 0x1fe
[0x1fe:0x207]
---
Predecessors: [0x1b0]
Successors: [0x208]
---
0x1fe PUSH1 0x32
0x200 GAS
0x201 SUB
0x202 CALL
0x203 ISZERO
0x204 PUSH2 0x2
0x207 JUMPI
---
0x1fe: V216 = 0x32
0x200: V217 = GAS
0x201: V218 = SUB V217 0x32
0x202: V219 = CALL V218 V193 0x0 V210 V211 V210 0x20
0x203: V220 = ISZERO V219
0x204: V221 = 0x2
0x207: THROWI V220
---
Entry stack: [V10, 0x2f1, V54, V68, V107, V146, V185, 0x0, 0x0, V54, V193, 0x976a8435, V207, 0x20, V210, V211, V210, 0x0, V193]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2f1, V54, V68, V107, V146, V185, 0x0, 0x0, V54, V193, 0x976a8435, V207]

================================

Block 0x208
[0x208:0x255]
---
Predecessors: [0x1fe]
Successors: [0x256]
---
0x208 POP
0x209 POP
0x20a POP
0x20b PUSH1 0x40
0x20d MLOAD
0x20e DUP1
0x20f MLOAD
0x210 SWAP1
0x211 PUSH1 0x20
0x213 ADD
0x214 POP
0x215 SWAP3
0x216 POP
0x217 DUP3
0x218 POP
0x219 DUP1
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 AND
0x223 PUSH4 0x4ca50f59
0x228 PUSH1 0x0
0x22a PUSH1 0x40
0x22c MLOAD
0x22d PUSH1 0x20
0x22f ADD
0x230 MSTORE
0x231 PUSH1 0x40
0x233 MLOAD
0x234 DUP2
0x235 PUSH1 0xe0
0x237 PUSH1 0x2
0x239 EXP
0x23a MUL
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x4
0x23f ADD
0x240 DUP1
0x241 SWAP1
0x242 POP
0x243 PUSH1 0x20
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 DUP4
0x24a SUB
0x24b DUP2
0x24c PUSH1 0x0
0x24e DUP8
0x24f DUP1
0x250 EXTCODESIZE
0x251 ISZERO
0x252 PUSH2 0x2
0x255 JUMPI
---
0x20b: V222 = 0x40
0x20d: V223 = M[0x40]
0x20f: V224 = M[V223]
0x211: V225 = 0x20
0x213: V226 = ADD 0x20 V223
0x21a: V227 = 0x1
0x21c: V228 = 0xa0
0x21e: V229 = 0x2
0x220: V230 = EXP 0x2 0xa0
0x221: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x223: V233 = 0x4ca50f59
0x228: V234 = 0x0
0x22a: V235 = 0x40
0x22c: V236 = M[0x40]
0x22d: V237 = 0x20
0x22f: V238 = ADD 0x20 V236
0x230: M[V238] = 0x0
0x231: V239 = 0x40
0x233: V240 = M[0x40]
0x235: V241 = 0xe0
0x237: V242 = 0x2
0x239: V243 = EXP 0x2 0xe0
0x23a: V244 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4ca50f59
0x23c: M[V240] = 0x4ca50f5900000000000000000000000000000000000000000000000000000000
0x23d: V245 = 0x4
0x23f: V246 = ADD 0x4 V240
0x243: V247 = 0x20
0x245: V248 = 0x40
0x247: V249 = M[0x40]
0x24a: V250 = SUB V246 V249
0x24c: V251 = 0x0
0x250: V252 = EXTCODESIZE V232
0x251: V253 = ISZERO V252
0x252: V254 = 0x2
0x255: THROWI V253
---
Entry stack: [V10, 0x2f1, V54, V68, V107, V146, V185, 0x0, 0x0, V54, V193, 0x976a8435, V207]
Stack pops: 6
Stack additions: [V224, S4, S3, V232, 0x4ca50f59, V246, 0x20, V249, V250, V249, 0x0, V232]
Exit stack: [V10, 0x2f1, V54, V68, V107, V146, V185, V224, 0x0, V54, V232, 0x4ca50f59, V246, 0x20, V249, V250, V249, 0x0, V232]

================================

Block 0x256
[0x256:0x25f]
---
Predecessors: [0x208]
Successors: [0x260]
---
0x256 PUSH1 0x32
0x258 GAS
0x259 SUB
0x25a CALL
0x25b ISZERO
0x25c PUSH2 0x2
0x25f JUMPI
---
0x256: V255 = 0x32
0x258: V256 = GAS
0x259: V257 = SUB V256 0x32
0x25a: V258 = CALL V257 V232 0x0 V249 V250 V249 0x20
0x25b: V259 = ISZERO V258
0x25c: V260 = 0x2
0x25f: THROWI V259
---
Entry stack: [V10, 0x2f1, V54, V68, V107, V146, V185, V224, 0x0, V54, V232, 0x4ca50f59, V246, 0x20, V249, V250, V249, 0x0, V232]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2f1, V54, V68, V107, V146, V185, V224, 0x0, V54, V232, 0x4ca50f59, V246]

================================

Block 0x260
[0x260:0x268]
---
Predecessors: [0x256]
Successors: [0x269]
---
0x260 POP
0x261 POP
0x262 PUSH1 0x40
0x264 MLOAD
0x265 MLOAD
0x266 SWAP3
0x267 POP
0x268 POP
---
0x262: V261 = 0x40
0x264: V262 = M[0x40]
0x265: V263 = M[V262]
---
Entry stack: [V10, 0x2f1, V54, V68, V107, V146, V185, V224, 0x0, V54, V232, 0x4ca50f59, V246]
Stack pops: 5
Stack additions: [V263, S3]
Exit stack: [V10, 0x2f1, V54, V68, V107, V146, V185, V224, V263, V54]

================================

Block 0x269
[0x269:0x272]
---
Predecessors: [0x88, 0x260]
Successors: [0x2f1]
---
0x269 JUMPDEST
0x26a POP
0x26b SWAP2
0x26c SWAP4
0x26d SWAP6
0x26e POP
0x26f SWAP2
0x270 SWAP4
0x271 SWAP6
0x272 JUMP
---
0x269: JUMPDEST 
0x272: JUMP 0x2f1
---
Entry stack: [V10, 0x2f1, V54, V68, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V10, V68, S5, S4, S3, S2, S1]

================================

Block 0x273
[0x273:0x278]
---
Predecessors: [0x2a]
Successors: [0x279]
---
0x273 JUMPDEST
0x274 CALLVALUE
0x275 PUSH2 0x2
0x278 JUMPI
---
0x273: JUMPDEST 
0x274: V264 = CALLVALUE
0x275: V265 = 0x2
0x278: THROWI V264
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x279
[0x279:0x289]
---
Predecessors: [0x273]
Successors: [0x332]
---
0x279 PUSH2 0x332
0x27c PUSH1 0x0
0x27e SLOAD
0x27f PUSH1 0x1
0x281 PUSH1 0xa0
0x283 PUSH1 0x2
0x285 EXP
0x286 SUB
0x287 AND
0x288 DUP2
0x289 JUMP
---
0x279: V266 = 0x332
0x27c: V267 = 0x0
0x27e: V268 = S[0x0]
0x27f: V269 = 0x1
0x281: V270 = 0xa0
0x283: V271 = 0x2
0x285: V272 = EXP 0x2 0xa0
0x286: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x287: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x289: JUMP 0x332
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x332, V274]
Exit stack: [V10, 0x332, V274]

================================

Block 0x28a
[0x28a:0x28f]
---
Predecessors: [0x35]
Successors: [0x290]
---
0x28a JUMPDEST
0x28b CALLVALUE
0x28c PUSH2 0x2
0x28f JUMPI
---
0x28a: JUMPDEST 
0x28b: V275 = CALLVALUE
0x28c: V276 = 0x2
0x28f: THROWI V275
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x290
[0x290:0x2b0]
---
Predecessors: [0x28a]
Successors: [0x2b1, 0x415]
---
0x290 PUSH2 0x332
0x293 PUSH1 0x4
0x295 CALLDATALOAD
0x296 PUSH1 0x24
0x298 CALLDATALOAD
0x299 PUSH1 0x44
0x29b CALLDATALOAD
0x29c PUSH1 0x64
0x29e CALLDATALOAD
0x29f PUSH1 0x0
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 DUP6
0x2aa AND
0x2ab ISZERO
0x2ac ISZERO
0x2ad PUSH2 0x415
0x2b0 JUMPI
---
0x290: V277 = 0x332
0x293: V278 = 0x4
0x295: V279 = CALLDATALOAD 0x4
0x296: V280 = 0x24
0x298: V281 = CALLDATALOAD 0x24
0x299: V282 = 0x44
0x29b: V283 = CALLDATALOAD 0x44
0x29c: V284 = 0x64
0x29e: V285 = CALLDATALOAD 0x64
0x29f: V286 = 0x0
0x2a1: V287 = 0x1
0x2a3: V288 = 0xa0
0x2a5: V289 = 0x2
0x2a7: V290 = EXP 0x2 0xa0
0x2a8: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V292 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V293 = ISZERO V292
0x2ac: V294 = ISZERO V293
0x2ad: V295 = 0x415
0x2b0: JUMPI 0x415 V294
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x332, V279, V281, V283, V285, 0x0]
Exit stack: [V10, 0x332, V279, V281, V283, V285, 0x0]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x290]
Successors: []
---
0x2b1 PUSH2 0x2
0x2b4 JUMP
---
0x2b1: V296 = 0x2
0x2b4: THROW 
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x332, V279, V281, V283, V285, 0x0]

================================

Block 0x2b5
[0x2b5:0x2ba]
---
Predecessors: [0x40]
Successors: [0x2bb]
---
0x2b5 JUMPDEST
0x2b6 CALLVALUE
0x2b7 PUSH2 0x2
0x2ba JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V297 = CALLVALUE
0x2b7: V298 = 0x2
0x2ba: THROWI V297
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bb
[0x2bb:0x2d6]
---
Predecessors: [0x2b5]
Successors: [0x2d7, 0x55d]
---
0x2bb PUSH2 0x2db
0x2be PUSH1 0x4
0x2c0 CALLDATALOAD
0x2c1 PUSH1 0x0
0x2c3 SLOAD
0x2c4 CALLER
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd SWAP1
0x2ce DUP2
0x2cf AND
0x2d0 SWAP2
0x2d1 AND
0x2d2 EQ
0x2d3 PUSH2 0x55d
0x2d6 JUMPI
---
0x2bb: V299 = 0x2db
0x2be: V300 = 0x4
0x2c0: V301 = CALLDATALOAD 0x4
0x2c1: V302 = 0x0
0x2c3: V303 = S[0x0]
0x2c4: V304 = CALLER
0x2c5: V305 = 0x1
0x2c7: V306 = 0xa0
0x2c9: V307 = 0x2
0x2cb: V308 = EXP 0x2 0xa0
0x2cc: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cf: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x2d1: V311 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V312 = EQ V311 V310
0x2d3: V313 = 0x55d
0x2d6: JUMPI 0x55d V312
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2db, V301]
Exit stack: [V10, 0x2db, V301]

================================

Block 0x2d7
[0x2d7:0x2da]
---
Predecessors: [0x2bb]
Successors: []
---
0x2d7 PUSH2 0x2
0x2da JUMP
---
0x2d7: V314 = 0x2
0x2da: THROW 
---
Entry stack: [V10, 0x2db, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2db, V301]

================================

Block 0x2db
[0x2db:0x2dc]
---
Predecessors: [0x55d]
Successors: []
---
0x2db JUMPDEST
0x2dc STOP
---
0x2db: JUMPDEST 
0x2dc: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2dd
[0x2dd:0x2f0]
---
Predecessors: [0x408]
Successors: []
---
0x2dd JUMPDEST
0x2de PUSH1 0x40
0x2e0 DUP1
0x2e1 MLOAD
0x2e2 SWAP2
0x2e3 ISZERO
0x2e4 ISZERO
0x2e5 DUP3
0x2e6 MSTORE
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 DUP2
0x2ea SWAP1
0x2eb SUB
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP1
0x2f0 RETURN
---
0x2dd: JUMPDEST 
0x2de: V315 = 0x40
0x2e1: V316 = M[0x40]
0x2e3: V317 = ISZERO V410
0x2e4: V318 = ISZERO V317
0x2e6: M[V316] = V318
0x2e7: V319 = M[0x40]
0x2eb: V320 = SUB V316 V319
0x2ec: V321 = 0x20
0x2ee: V322 = ADD 0x20 V320
0x2f0: RETURN V319 V322
---
Entry stack: [V10, V410]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f1
[0x2f1:0x331]
---
Predecessors: [0x269]
Successors: []
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x40
0x2f4 DUP1
0x2f5 MLOAD
0x2f6 SWAP7
0x2f7 ISZERO
0x2f8 ISZERO
0x2f9 DUP8
0x2fa MSTORE
0x2fb PUSH1 0x1
0x2fd PUSH1 0xa0
0x2ff PUSH1 0x2
0x301 EXP
0x302 SUB
0x303 SWAP6
0x304 DUP7
0x305 AND
0x306 PUSH1 0x20
0x308 DUP9
0x309 ADD
0x30a MSTORE
0x30b SWAP4
0x30c SWAP1
0x30d SWAP5
0x30e AND
0x30f DUP6
0x310 DUP5
0x311 ADD
0x312 MSTORE
0x313 PUSH1 0x60
0x315 DUP6
0x316 ADD
0x317 SWAP2
0x318 SWAP1
0x319 SWAP2
0x31a MSTORE
0x31b PUSH1 0x80
0x31d DUP5
0x31e ADD
0x31f MSTORE
0x320 SWAP1
0x321 ISZERO
0x322 ISZERO
0x323 PUSH1 0xa0
0x325 DUP4
0x326 ADD
0x327 MSTORE
0x328 MLOAD
0x329 SWAP1
0x32a DUP2
0x32b SWAP1
0x32c SUB
0x32d PUSH1 0xc0
0x32f ADD
0x330 SWAP1
0x331 RETURN
---
0x2f1: JUMPDEST 
0x2f2: V323 = 0x40
0x2f5: V324 = M[0x40]
0x2f7: V325 = ISZERO V68
0x2f8: V326 = ISZERO V325
0x2fa: M[V324] = V326
0x2fb: V327 = 0x1
0x2fd: V328 = 0xa0
0x2ff: V329 = 0x2
0x301: V330 = EXP 0x2 0xa0
0x302: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x305: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x306: V333 = 0x20
0x309: V334 = ADD V324 0x20
0x30a: M[V334] = V332
0x30e: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x311: V336 = ADD 0x40 V324
0x312: M[V336] = V335
0x313: V337 = 0x60
0x316: V338 = ADD V324 0x60
0x31a: M[V338] = S2
0x31b: V339 = 0x80
0x31e: V340 = ADD V324 0x80
0x31f: M[V340] = S1
0x321: V341 = ISZERO S0
0x322: V342 = ISZERO V341
0x323: V343 = 0xa0
0x326: V344 = ADD V324 0xa0
0x327: M[V344] = V342
0x328: V345 = M[0x40]
0x32c: V346 = SUB V324 V345
0x32d: V347 = 0xc0
0x32f: V348 = ADD 0xc0 V346
0x331: RETURN V345 V348
---
Entry stack: [V10, V68, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10]

================================

Block 0x332
[0x332:0x34d]
---
Predecessors: [0x279, 0x4fd]
Successors: []
---
0x332 JUMPDEST
0x333 PUSH1 0x40
0x335 DUP1
0x336 MLOAD
0x337 PUSH1 0x1
0x339 PUSH1 0xa0
0x33b PUSH1 0x2
0x33d EXP
0x33e SUB
0x33f SWAP1
0x340 SWAP3
0x341 AND
0x342 DUP3
0x343 MSTORE
0x344 MLOAD
0x345 SWAP1
0x346 DUP2
0x347 SWAP1
0x348 SUB
0x349 PUSH1 0x20
0x34b ADD
0x34c SWAP1
0x34d RETURN
---
0x332: JUMPDEST 
0x333: V349 = 0x40
0x336: V350 = M[0x40]
0x337: V351 = 0x1
0x339: V352 = 0xa0
0x33b: V353 = 0x2
0x33d: V354 = EXP 0x2 0xa0
0x33e: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V356 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x343: M[V350] = V356
0x344: V357 = M[0x40]
0x348: V358 = SUB V350 V357
0x349: V359 = 0x20
0x34b: V360 = ADD 0x20 V358
0x34d: RETURN V357 V360
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x34e
[0x34e:0x3fd]
---
Predecessors: [0x5e]
Successors: [0x3fe]
---
0x34e JUMPDEST
0x34f PUSH1 0x40
0x351 DUP1
0x352 MLOAD
0x353 DUP4
0x354 DUP2
0x355 MSTORE
0x356 SWAP1
0x357 MLOAD
0x358 PUSH1 0x1
0x35a PUSH1 0xa0
0x35c PUSH1 0x2
0x35e EXP
0x35f SUB
0x360 DUP6
0x361 AND
0x362 SWAP2
0x363 PUSH32 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x384 SWAP2
0x385 SWAP1
0x386 DUP2
0x387 SWAP1
0x388 SUB
0x389 PUSH1 0x20
0x38b ADD
0x38c SWAP1
0x38d LOG2
0x38e PUSH1 0x40
0x390 DUP1
0x391 MLOAD
0x392 PUSH1 0x0
0x394 DUP1
0x395 SLOAD
0x396 PUSH1 0x20
0x398 SWAP3
0x399 DUP4
0x39a ADD
0x39b DUP3
0x39c SWAP1
0x39d MSTORE
0x39e DUP4
0x39f MLOAD
0x3a0 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 PUSH1 0x1
0x3c5 PUSH1 0xa0
0x3c7 PUSH1 0x2
0x3c9 EXP
0x3ca SUB
0x3cb SWAP2
0x3cc DUP3
0x3cd AND
0x3ce PUSH1 0x4
0x3d0 DUP3
0x3d1 ADD
0x3d2 MSTORE
0x3d3 PUSH1 0x24
0x3d5 DUP2
0x3d6 ADD
0x3d7 DUP8
0x3d8 SWAP1
0x3d9 MSTORE
0x3da SWAP4
0x3db MLOAD
0x3dc SWAP1
0x3dd DUP8
0x3de AND
0x3df SWAP4
0x3e0 PUSH4 0xa9059cbb
0x3e5 SWAP4
0x3e6 PUSH1 0x44
0x3e8 DUP1
0x3e9 DUP4
0x3ea ADD
0x3eb SWAP5
0x3ec SWAP2
0x3ed SWAP4
0x3ee SWAP3
0x3ef DUP4
0x3f0 SWAP1
0x3f1 SUB
0x3f2 ADD
0x3f3 SWAP1
0x3f4 DUP3
0x3f5 SWAP1
0x3f6 DUP8
0x3f7 DUP1
0x3f8 EXTCODESIZE
0x3f9 ISZERO
0x3fa PUSH2 0x2
0x3fd JUMPI
---
0x34e: JUMPDEST 
0x34f: V361 = 0x40
0x352: V362 = M[0x40]
0x355: M[V362] = V36
0x357: V363 = M[0x40]
0x358: V364 = 0x1
0x35a: V365 = 0xa0
0x35c: V366 = 0x2
0x35e: V367 = EXP 0x2 0xa0
0x35f: V368 = SUB 0x10000000000000000000000000000000000000000 0x1
0x361: V369 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x363: V370 = 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba
0x388: V371 = SUB V362 V363
0x389: V372 = 0x20
0x38b: V373 = ADD 0x20 V371
0x38d: LOG V363 V373 0x168656e1968a1165ef7fd3f1006847fcfba4cac97672bc70ccbcffb66bc080ba V369
0x38e: V374 = 0x40
0x391: V375 = M[0x40]
0x392: V376 = 0x0
0x395: V377 = S[0x0]
0x396: V378 = 0x20
0x39a: V379 = ADD 0x20 V375
0x39d: M[V379] = 0x0
0x39f: V380 = M[0x40]
0x3a0: V381 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c2: M[V380] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c3: V382 = 0x1
0x3c5: V383 = 0xa0
0x3c7: V384 = 0x2
0x3c9: V385 = EXP 0x2 0xa0
0x3ca: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cd: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x3ce: V388 = 0x4
0x3d1: V389 = ADD V380 0x4
0x3d2: M[V389] = V387
0x3d3: V390 = 0x24
0x3d6: V391 = ADD V380 0x24
0x3d9: M[V391] = V36
0x3db: V392 = M[0x40]
0x3de: V393 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V394 = 0xa9059cbb
0x3e6: V395 = 0x44
0x3ea: V396 = ADD V380 0x44
0x3f1: V397 = SUB V380 V392
0x3f2: V398 = ADD V397 0x44
0x3f8: V399 = EXTCODESIZE V393
0x3f9: V400 = ISZERO V399
0x3fa: V401 = 0x2
0x3fd: THROWI V400
---
Entry stack: [V10, 0x2dd, V34, V36, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Exit stack: [V10, 0x2dd, V34, V36, 0x0, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]

================================

Block 0x3fe
[0x3fe:0x407]
---
Predecessors: [0x34e]
Successors: [0x408]
---
0x3fe PUSH1 0x32
0x400 GAS
0x401 SUB
0x402 CALL
0x403 ISZERO
0x404 PUSH2 0x2
0x407 JUMPI
---
0x3fe: V402 = 0x32
0x400: V403 = GAS
0x401: V404 = SUB V403 0x32
0x402: V405 = CALL V404 V393 0x0 V392 V398 V392 0x20
0x403: V406 = ISZERO V405
0x404: V407 = 0x2
0x407: THROWI V406
---
Entry stack: [V10, 0x2dd, V34, V36, 0x0, V393, 0xa9059cbb, V396, 0x20, V392, V398, V392, 0x0, V393]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2dd, V34, V36, 0x0, V393, 0xa9059cbb, V396]

================================

Block 0x408
[0x408:0x414]
---
Predecessors: [0x3fe]
Successors: [0x2dd]
---
0x408 POP
0x409 POP
0x40a PUSH1 0x40
0x40c MLOAD
0x40d MLOAD
0x40e SWAP5
0x40f SWAP4
0x410 POP
0x411 POP
0x412 POP
0x413 POP
0x414 JUMP
---
0x40a: V408 = 0x40
0x40c: V409 = M[0x40]
0x40d: V410 = M[V409]
0x414: JUMP 0x2dd
---
Entry stack: [V10, 0x2dd, V34, V36, 0x0, V393, 0xa9059cbb, V396]
Stack pops: 7
Stack additions: [V410]
Exit stack: [V10, V410]

================================

Block 0x415
[0x415:0x41d]
---
Predecessors: [0x290]
Successors: [0x41e, 0x422]
---
0x415 JUMPDEST
0x416 PUSH1 0x0
0x418 DUP5
0x419 GT
0x41a PUSH2 0x422
0x41d JUMPI
---
0x415: JUMPDEST 
0x416: V411 = 0x0
0x419: V412 = GT V281 0x0
0x41a: V413 = 0x422
0x41d: JUMPI 0x422 V412
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x332, V279, V281, V283, V285, 0x0]

================================

Block 0x41e
[0x41e:0x421]
---
Predecessors: [0x415]
Successors: []
---
0x41e PUSH2 0x2
0x421 JUMP
---
0x41e: V414 = 0x2
0x421: THROW 
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x332, V279, V281, V283, V285, 0x0]

================================

Block 0x422
[0x422:0x42a]
---
Predecessors: [0x415]
Successors: [0x42b, 0x42f]
---
0x422 JUMPDEST
0x423 PUSH1 0x0
0x425 DUP4
0x426 GT
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x422: JUMPDEST 
0x423: V415 = 0x0
0x426: V416 = GT V283 0x0
0x427: V417 = 0x42f
0x42a: JUMPI 0x42f V416
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x332, V279, V281, V283, V285, 0x0]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x422]
Successors: []
---
0x42b PUSH2 0x2
0x42e JUMP
---
0x42b: V418 = 0x2
0x42e: THROW 
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x332, V279, V281, V283, V285, 0x0]

================================

Block 0x42f
[0x42f:0x47a]
---
Predecessors: [0x422]
Successors: [0x47b]
---
0x42f JUMPDEST
0x430 DUP5
0x431 DUP5
0x432 DUP5
0x433 DUP5
0x434 PUSH1 0x40
0x436 MLOAD
0x437 PUSH2 0x976
0x43a DUP1
0x43b PUSH2 0x5cb
0x43e DUP4
0x43f CODECOPY
0x440 ADD
0x441 DUP1
0x442 DUP6
0x443 PUSH1 0x1
0x445 PUSH1 0xa0
0x447 PUSH1 0x2
0x449 EXP
0x44a SUB
0x44b AND
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x20
0x450 ADD
0x451 DUP5
0x452 DUP2
0x453 MSTORE
0x454 PUSH1 0x20
0x456 ADD
0x457 DUP4
0x458 DUP2
0x459 MSTORE
0x45a PUSH1 0x20
0x45c ADD
0x45d DUP3
0x45e ISZERO
0x45f ISZERO
0x460 DUP2
0x461 MSTORE
0x462 PUSH1 0x20
0x464 ADD
0x465 SWAP5
0x466 POP
0x467 POP
0x468 POP
0x469 POP
0x46a POP
0x46b PUSH1 0x40
0x46d MLOAD
0x46e DUP1
0x46f SWAP2
0x470 SUB
0x471 SWAP1
0x472 PUSH1 0x0
0x474 CREATE
0x475 DUP1
0x476 ISZERO
0x477 PUSH2 0x2
0x47a JUMPI
---
0x42f: JUMPDEST 
0x434: V419 = 0x40
0x436: V420 = M[0x40]
0x437: V421 = 0x976
0x43b: V422 = 0x5cb
0x43f: CODECOPY V420 0x5cb 0x976
0x440: V423 = ADD 0x976 V420
0x443: V424 = 0x1
0x445: V425 = 0xa0
0x447: V426 = 0x2
0x449: V427 = EXP 0x2 0xa0
0x44a: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44b: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x44d: M[V423] = V429
0x44e: V430 = 0x20
0x450: V431 = ADD 0x20 V423
0x453: M[V431] = V281
0x454: V432 = 0x20
0x456: V433 = ADD 0x20 V431
0x459: M[V433] = V283
0x45a: V434 = 0x20
0x45c: V435 = ADD 0x20 V433
0x45e: V436 = ISZERO V285
0x45f: V437 = ISZERO V436
0x461: M[V435] = V437
0x462: V438 = 0x20
0x464: V439 = ADD 0x20 V435
0x46b: V440 = 0x40
0x46d: V441 = M[0x40]
0x470: V442 = SUB V439 V441
0x472: V443 = 0x0
0x474: V444 = CREATE 0x0 V441 V442
0x476: V445 = ISZERO V444
0x477: V446 = 0x2
0x47a: THROWI V445
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V444]
Exit stack: [V10, 0x332, V279, V281, V283, V285, 0x0, V444]

================================

Block 0x47b
[0x47b:0x4f2]
---
Predecessors: [0x42f]
Successors: [0x4f3]
---
0x47b PUSH1 0x1
0x47d PUSH1 0xa0
0x47f PUSH1 0x2
0x481 EXP
0x482 SUB
0x483 DUP1
0x484 DUP3
0x485 AND
0x486 PUSH1 0x0
0x488 DUP2
0x489 DUP2
0x48a MSTORE
0x48b PUSH1 0x1
0x48d PUSH1 0x20
0x48f DUP2
0x490 SWAP1
0x491 MSTORE
0x492 PUSH1 0x40
0x494 DUP1
0x495 DUP4
0x496 SHA3
0x497 DUP1
0x498 SLOAD
0x499 PUSH1 0xff
0x49b NOT
0x49c AND
0x49d SWAP1
0x49e SWAP3
0x49f OR
0x4a0 SWAP1
0x4a1 SWAP2
0x4a2 SSTORE
0x4a3 DUP1
0x4a4 MLOAD
0x4a5 PUSH32 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4c6 DUP2
0x4c7 MSTORE
0x4c8 CALLER
0x4c9 SWAP1
0x4ca SWAP5
0x4cb AND
0x4cc PUSH1 0x4
0x4ce DUP6
0x4cf ADD
0x4d0 MSTORE
0x4d1 MLOAD
0x4d2 SWAP4
0x4d3 SWAP5
0x4d4 POP
0x4d5 SWAP1
0x4d6 SWAP3
0x4d7 PUSH4 0xf2fde38b
0x4dc SWAP3
0x4dd PUSH1 0x24
0x4df DUP1
0x4e0 DUP3
0x4e1 ADD
0x4e2 SWAP4
0x4e3 SWAP3
0x4e4 SWAP2
0x4e5 DUP3
0x4e6 SWAP1
0x4e7 SUB
0x4e8 ADD
0x4e9 DUP2
0x4ea DUP4
0x4eb DUP8
0x4ec DUP1
0x4ed EXTCODESIZE
0x4ee ISZERO
0x4ef PUSH2 0x2
0x4f2 JUMPI
---
0x47b: V447 = 0x1
0x47d: V448 = 0xa0
0x47f: V449 = 0x2
0x481: V450 = EXP 0x2 0xa0
0x482: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V452 = AND V444 0xffffffffffffffffffffffffffffffffffffffff
0x486: V453 = 0x0
0x48a: M[0x0] = V452
0x48b: V454 = 0x1
0x48d: V455 = 0x20
0x491: M[0x20] = 0x1
0x492: V456 = 0x40
0x496: V457 = SHA3 0x0 0x40
0x498: V458 = S[V457]
0x499: V459 = 0xff
0x49b: V460 = NOT 0xff
0x49c: V461 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V458
0x49f: V462 = OR 0x1 V461
0x4a2: S[V457] = V462
0x4a4: V463 = M[0x40]
0x4a5: V464 = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4c7: M[V463] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x4c8: V465 = CALLER
0x4cb: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x4cc: V467 = 0x4
0x4cf: V468 = ADD V463 0x4
0x4d0: M[V468] = V466
0x4d1: V469 = M[0x40]
0x4d7: V470 = 0xf2fde38b
0x4dd: V471 = 0x24
0x4e1: V472 = ADD V463 0x24
0x4e7: V473 = SUB V463 V469
0x4e8: V474 = ADD V473 0x24
0x4ed: V475 = EXTCODESIZE V452
0x4ee: V476 = ISZERO V475
0x4ef: V477 = 0x2
0x4f2: THROWI V476
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, 0x0, V444]
Stack pops: 2
Stack additions: [S0, V452, 0xf2fde38b, V472, 0x0, V469, V474, V469, 0x0, V452]
Exit stack: [V10, 0x332, V279, V281, V283, V285, V444, V452, 0xf2fde38b, V472, 0x0, V469, V474, V469, 0x0, V452]

================================

Block 0x4f3
[0x4f3:0x4fc]
---
Predecessors: [0x47b]
Successors: [0x4fd]
---
0x4f3 PUSH1 0x32
0x4f5 GAS
0x4f6 SUB
0x4f7 CALL
0x4f8 ISZERO
0x4f9 PUSH2 0x2
0x4fc JUMPI
---
0x4f3: V478 = 0x32
0x4f5: V479 = GAS
0x4f6: V480 = SUB V479 0x32
0x4f7: V481 = CALL V480 V452 0x0 V469 V474 V469 0x0
0x4f8: V482 = ISZERO V481
0x4f9: V483 = 0x2
0x4fc: THROWI V482
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, V444, V452, 0xf2fde38b, V472, 0x0, V469, V474, V469, 0x0, V452]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x332, V279, V281, V283, V285, V444, V452, 0xf2fde38b, V472]

================================

Block 0x4fd
[0x4fd:0x55c]
---
Predecessors: [0x4f3]
Successors: [0x332]
---
0x4fd POP
0x4fe POP
0x4ff PUSH1 0x40
0x501 DUP1
0x502 MLOAD
0x503 DUP7
0x504 DUP2
0x505 MSTORE
0x506 PUSH1 0x20
0x508 DUP2
0x509 ADD
0x50a DUP7
0x50b SWAP1
0x50c MSTORE
0x50d DUP5
0x50e ISZERO
0x50f ISZERO
0x510 DUP2
0x511 DUP4
0x512 ADD
0x513 MSTORE
0x514 SWAP1
0x515 MLOAD
0x516 PUSH1 0x1
0x518 PUSH1 0xa0
0x51a PUSH1 0x2
0x51c EXP
0x51d SUB
0x51e DUP1
0x51f DUP10
0x520 AND
0x521 SWAP4
0x522 POP
0x523 DUP5
0x524 DUP2
0x525 AND
0x526 SWAP3
0x527 CALLER
0x528 SWAP1
0x529 SWAP2
0x52a AND
0x52b SWAP2
0x52c PUSH32 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5
0x54d SWAP2
0x54e DUP2
0x54f SWAP1
0x550 SUB
0x551 PUSH1 0x60
0x553 ADD
0x554 SWAP1
0x555 LOG4
0x556 SWAP5
0x557 SWAP4
0x558 POP
0x559 POP
0x55a POP
0x55b POP
0x55c JUMP
---
0x4ff: V484 = 0x40
0x502: V485 = M[0x40]
0x505: M[V485] = V281
0x506: V486 = 0x20
0x509: V487 = ADD V485 0x20
0x50c: M[V487] = V283
0x50e: V488 = ISZERO V285
0x50f: V489 = ISZERO V488
0x512: V490 = ADD 0x40 V485
0x513: M[V490] = V489
0x515: V491 = M[0x40]
0x516: V492 = 0x1
0x518: V493 = 0xa0
0x51a: V494 = 0x2
0x51c: V495 = EXP 0x2 0xa0
0x51d: V496 = SUB 0x10000000000000000000000000000000000000000 0x1
0x520: V497 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x525: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x527: V499 = CALLER
0x52a: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x52c: V501 = 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5
0x550: V502 = SUB V485 V491
0x551: V503 = 0x60
0x553: V504 = ADD 0x60 V502
0x555: LOG V491 V504 0x95883871899e33394289953f74bb83c1b73d35af75cbff5548be3a0d6c52b3b5 V500 V498 V497
0x55c: JUMP 0x332
---
Entry stack: [V10, 0x332, V279, V281, V283, V285, V444, V452, 0xf2fde38b, V472]
Stack pops: 9
Stack additions: [S3]
Exit stack: [V10, V444]

================================

Block 0x55d
[0x55d:0x5ca]
---
Predecessors: [0x2bb]
Successors: [0x2db]
---
0x55d JUMPDEST
0x55e PUSH1 0x0
0x560 DUP1
0x561 SLOAD
0x562 PUSH1 0x40
0x564 MLOAD
0x565 PUSH1 0x1
0x567 PUSH1 0xa0
0x569 PUSH1 0x2
0x56b EXP
0x56c SUB
0x56d DUP1
0x56e DUP6
0x56f AND
0x570 SWAP4
0x571 SWAP3
0x572 AND
0x573 SWAP2
0x574 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x595 SWAP2
0x596 LOG3
0x597 PUSH1 0x0
0x599 DUP1
0x59a SLOAD
0x59b PUSH13 0x1000000000000000000000000
0x5a9 DUP1
0x5aa DUP5
0x5ab MUL
0x5ac DIV
0x5ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c2 NOT
0x5c3 SWAP1
0x5c4 SWAP2
0x5c5 AND
0x5c6 OR
0x5c7 SWAP1
0x5c8 SSTORE
0x5c9 POP
0x5ca JUMP
---
0x55d: JUMPDEST 
0x55e: V505 = 0x0
0x561: V506 = S[0x0]
0x562: V507 = 0x40
0x564: V508 = M[0x40]
0x565: V509 = 0x1
0x567: V510 = 0xa0
0x569: V511 = 0x2
0x56b: V512 = EXP 0x2 0xa0
0x56c: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56f: V514 = AND V301 0xffffffffffffffffffffffffffffffffffffffff
0x572: V515 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x574: V516 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x596: LOG V508 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V515 V514
0x597: V517 = 0x0
0x59a: V518 = S[0x0]
0x59b: V519 = 0x1000000000000000000000000
0x5ab: V520 = MUL V301 0x1000000000000000000000000
0x5ac: V521 = DIV V520 0x1000000000000000000000000
0x5ad: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V523 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: V524 = AND V518 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x5c6: V525 = OR V524 V521
0x5c8: S[0x0] = V525
0x5ca: JUMP 0x2db
---
Entry stack: [V10, 0x2db, V301]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x5cb
[0x5cb:0x6c6]
---
Predecessors: []
Successors: [0x6c7]
---
0x5cb PUSH1 0x60
0x5cd PUSH1 0x40
0x5cf MSTORE
0x5d0 PUSH1 0x40
0x5d2 MLOAD
0x5d3 PUSH1 0x80
0x5d5 DUP1
0x5d6 PUSH2 0x976
0x5d9 DUP4
0x5da CODECOPY
0x5db PUSH1 0xe0
0x5dd PUSH1 0x40
0x5df MSTORE
0x5e0 SWAP1
0x5e1 MLOAD
0x5e2 SWAP1
0x5e3 MLOAD
0x5e4 PUSH1 0xa0
0x5e6 MLOAD
0x5e7 PUSH1 0xc0
0x5e9 MLOAD
0x5ea PUSH1 0x0
0x5ec DUP1
0x5ed SLOAD
0x5ee PUSH13 0x1000000000000000000000000
0x5fc CALLER
0x5fd DUP2
0x5fe MUL
0x5ff DIV
0x600 PUSH1 0x1
0x602 PUSH1 0xa0
0x604 PUSH1 0x2
0x606 EXP
0x607 SUB
0x608 NOT
0x609 SWAP1
0x60a SWAP2
0x60b AND
0x60c OR
0x60d SWAP1
0x60e SSTORE
0x60f PUSH1 0x1
0x611 DUP1
0x612 SLOAD
0x613 PUSH13 0x1000000000000000000000000
0x621 DUP1
0x622 DUP8
0x623 MUL
0x624 DIV
0x625 PUSH1 0x1
0x627 PUSH1 0xa0
0x629 PUSH1 0x2
0x62b EXP
0x62c SUB
0x62d NOT
0x62e SWAP1
0x62f SWAP2
0x630 AND
0x631 OR
0x632 SWAP1
0x633 SSTORE
0x634 PUSH1 0x2
0x636 DUP4
0x637 SWAP1
0x638 SSTORE
0x639 PUSH1 0x3
0x63b DUP3
0x63c SWAP1
0x63d SSTORE
0x63e PUSH1 0x4
0x640 DUP1
0x641 SLOAD
0x642 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x663 DUP1
0x664 DUP5
0x665 MUL
0x666 DIV
0x667 PUSH1 0xff
0x669 NOT
0x66a SWAP1
0x66b SWAP2
0x66c AND
0x66d OR
0x66e SWAP1
0x66f DUP2
0x670 SWAP1
0x671 SSTORE
0x672 PUSH1 0x40
0x674 DUP1
0x675 MLOAD
0x676 PUSH1 0xff
0x678 SWAP3
0x679 SWAP1
0x67a SWAP3
0x67b AND
0x67c ISZERO
0x67d ISZERO
0x67e DUP3
0x67f MSTORE
0x680 MLOAD
0x681 PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6a2 SWAP2
0x6a3 DUP2
0x6a4 SWAP1
0x6a5 SUB
0x6a6 PUSH1 0x20
0x6a8 ADD
0x6a9 SWAP1
0x6aa LOG1
0x6ab POP
0x6ac POP
0x6ad POP
0x6ae POP
0x6af PUSH2 0x885
0x6b2 DUP1
0x6b3 PUSH2 0xf1
0x6b6 PUSH1 0x0
0x6b8 CODECOPY
0x6b9 PUSH1 0x0
0x6bb RETURN
0x6bc PUSH1 0x60
0x6be PUSH1 0x40
0x6c0 MSTORE
0x6c1 CALLDATASIZE
0x6c2 ISZERO
0x6c3 PUSH2 0x98
0x6c6 JUMPI
---
0x5cb: V526 = 0x60
0x5cd: V527 = 0x40
0x5cf: M[0x40] = 0x60
0x5d0: V528 = 0x40
0x5d2: V529 = M[0x40]
0x5d3: V530 = 0x80
0x5d6: V531 = 0x976
0x5da: CODECOPY V529 0x976 0x80
0x5db: V532 = 0xe0
0x5dd: V533 = 0x40
0x5df: M[0x40] = 0xe0
0x5e1: V534 = M[V529]
0x5e3: V535 = M[0x80]
0x5e4: V536 = 0xa0
0x5e6: V537 = M[0xa0]
0x5e7: V538 = 0xc0
0x5e9: V539 = M[0xc0]
0x5ea: V540 = 0x0
0x5ed: V541 = S[0x0]
0x5ee: V542 = 0x1000000000000000000000000
0x5fc: V543 = CALLER
0x5fe: V544 = MUL 0x1000000000000000000000000 V543
0x5ff: V545 = DIV V544 0x1000000000000000000000000
0x600: V546 = 0x1
0x602: V547 = 0xa0
0x604: V548 = 0x2
0x606: V549 = EXP 0x2 0xa0
0x607: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x608: V551 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x60b: V552 = AND V541 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x60c: V553 = OR V552 V545
0x60e: S[0x0] = V553
0x60f: V554 = 0x1
0x612: V555 = S[0x1]
0x613: V556 = 0x1000000000000000000000000
0x623: V557 = MUL V534 0x1000000000000000000000000
0x624: V558 = DIV V557 0x1000000000000000000000000
0x625: V559 = 0x1
0x627: V560 = 0xa0
0x629: V561 = 0x2
0x62b: V562 = EXP 0x2 0xa0
0x62c: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62d: V564 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x630: V565 = AND V555 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x631: V566 = OR V565 V558
0x633: S[0x1] = V566
0x634: V567 = 0x2
0x638: S[0x2] = V535
0x639: V568 = 0x3
0x63d: S[0x3] = V537
0x63e: V569 = 0x4
0x641: V570 = S[0x4]
0x642: V571 = 0x100000000000000000000000000000000000000000000000000000000000000
0x665: V572 = MUL V539 0x100000000000000000000000000000000000000000000000000000000000000
0x666: V573 = DIV V572 0x100000000000000000000000000000000000000000000000000000000000000
0x667: V574 = 0xff
0x669: V575 = NOT 0xff
0x66c: V576 = AND V570 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x66d: V577 = OR V576 V573
0x671: S[0x4] = V577
0x672: V578 = 0x40
0x675: V579 = M[0x40]
0x676: V580 = 0xff
0x67b: V581 = AND 0xff V577
0x67c: V582 = ISZERO V581
0x67d: V583 = ISZERO V582
0x67f: M[V579] = V583
0x680: V584 = M[0x40]
0x681: V585 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6a5: V586 = SUB V579 V584
0x6a6: V587 = 0x20
0x6a8: V588 = ADD 0x20 V586
0x6aa: LOG V584 V588 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x6af: V589 = 0x885
0x6b3: V590 = 0xf1
0x6b6: V591 = 0x0
0x6b8: CODECOPY 0x0 0xf1 0x885
0x6b9: V592 = 0x0
0x6bb: RETURN 0x0 0x885
0x6bc: V593 = 0x60
0x6be: V594 = 0x40
0x6c0: M[0x40] = 0x60
0x6c1: V595 = CALLDATASIZE
0x6c2: V596 = ISZERO V595
0x6c3: V597 = 0x98
0x6c6: THROWI V596
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6c7
[0x6c7:0x6da]
---
Predecessors: [0x5cb]
Successors: [0x6db]
---
0x6c7 PUSH1 0xe0
0x6c9 PUSH1 0x2
0x6cb EXP
0x6cc PUSH1 0x0
0x6ce CALLDATALOAD
0x6cf DIV
0x6d0 PUSH4 0x2170ebf7
0x6d5 DUP2
0x6d6 EQ
0x6d7 PUSH2 0xa3
0x6da JUMPI
---
0x6c7: V598 = 0xe0
0x6c9: V599 = 0x2
0x6cb: V600 = EXP 0x2 0xe0
0x6cc: V601 = 0x0
0x6ce: V602 = CALLDATALOAD 0x0
0x6cf: V603 = DIV V602 0x100000000000000000000000000000000000000000000000000000000
0x6d0: V604 = 0x2170ebf7
0x6d6: V605 = EQ V603 0x2170ebf7
0x6d7: V606 = 0xa3
0x6da: THROWI V605
---
Entry stack: []
Stack pops: 0
Stack additions: [V603]
Exit stack: [V603]

================================

Block 0x6db
[0x6db:0x6e5]
---
Predecessors: [0x6c7]
Successors: [0x6e6]
---
0x6db DUP1
0x6dc PUSH4 0x38d52e0f
0x6e1 EQ
0x6e2 PUSH2 0xca
0x6e5 JUMPI
---
0x6dc: V607 = 0x38d52e0f
0x6e1: V608 = EQ 0x38d52e0f V603
0x6e2: V609 = 0xca
0x6e5: THROWI V608
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x6e6
[0x6e6:0x6f0]
---
Predecessors: [0x6db]
Successors: [0x6f1]
---
0x6e6 DUP1
0x6e7 PUSH4 0x4b750334
0x6ec EQ
0x6ed PUSH2 0xe1
0x6f0 JUMPI
---
0x6e7: V610 = 0x4b750334
0x6ec: V611 = EQ 0x4b750334 V603
0x6ed: V612 = 0xe1
0x6f0: THROWI V611
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x6f1
[0x6f1:0x6fb]
---
Predecessors: [0x6e6]
Successors: [0x6fc]
---
0x6f1 DUP1
0x6f2 PUSH4 0x4ca50f59
0x6f7 EQ
0x6f8 PUSH2 0xef
0x6fb JUMPI
---
0x6f2: V613 = 0x4ca50f59
0x6f7: V614 = EQ 0x4ca50f59 V603
0x6f8: V615 = 0xef
0x6fb: THROWI V614
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x6fc
[0x6fc:0x706]
---
Predecessors: [0x6f1]
Successors: [0x707]
---
0x6fc DUP1
0x6fd PUSH4 0x52954e5a
0x702 EQ
0x703 PUSH2 0x100
0x706 JUMPI
---
0x6fd: V616 = 0x52954e5a
0x702: V617 = EQ 0x52954e5a V603
0x703: V618 = 0x100
0x706: THROWI V617
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x707
[0x707:0x711]
---
Predecessors: [0x6fc]
Successors: [0x712]
---
0x707 DUP1
0x708 PUSH4 0x8da5cb5b
0x70d EQ
0x70e PUSH2 0x12a
0x711 JUMPI
---
0x708: V619 = 0x8da5cb5b
0x70d: V620 = EQ 0x8da5cb5b V603
0x70e: V621 = 0x12a
0x711: THROWI V620
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x712
[0x712:0x71c]
---
Predecessors: [0x707]
Successors: [0x71d]
---
0x712 DUP1
0x713 PUSH4 0x976a8435
0x718 EQ
0x719 PUSH2 0x141
0x71c JUMPI
---
0x713: V622 = 0x976a8435
0x718: V623 = EQ 0x976a8435 V603
0x719: V624 = 0x141
0x71c: THROWI V623
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x71d
[0x71d:0x727]
---
Predecessors: [0x712]
Successors: [0x728]
---
0x71d DUP1
0x71e PUSH4 0xc34764cf
0x723 EQ
0x724 PUSH2 0x14f
0x727 JUMPI
---
0x71e: V625 = 0xc34764cf
0x723: V626 = EQ 0xc34764cf V603
0x724: V627 = 0x14f
0x727: THROWI V626
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x728
[0x728:0x732]
---
Predecessors: [0x71d]
Successors: [0x733]
---
0x728 DUP1
0x729 PUSH4 0xc60ccb0e
0x72e EQ
0x72f PUSH2 0x179
0x732 JUMPI
---
0x729: V628 = 0xc60ccb0e
0x72e: V629 = EQ 0xc60ccb0e V603
0x72f: V630 = 0x179
0x732: THROWI V629
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x733
[0x733:0x73d]
---
Predecessors: [0x728]
Successors: [0x73e]
---
0x733 DUP1
0x734 PUSH4 0xcd53a3b7
0x739 EQ
0x73a PUSH2 0x293
0x73d JUMPI
---
0x734: V631 = 0xcd53a3b7
0x739: V632 = EQ 0xcd53a3b7 V603
0x73a: V633 = 0x293
0x73d: THROWI V632
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x73e
[0x73e:0x748]
---
Predecessors: [0x733]
Successors: [0x749]
---
0x73e DUP1
0x73f PUSH4 0xce5e84a3
0x744 EQ
0x745 PUSH2 0x2ba
0x748 JUMPI
---
0x73f: V634 = 0xce5e84a3
0x744: V635 = EQ 0xce5e84a3 V603
0x745: V636 = 0x2ba
0x748: THROWI V635
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x749
[0x749:0x753]
---
Predecessors: [0x73e]
Successors: [0x754]
---
0x749 DUP1
0x74a PUSH4 0xf2fde38b
0x74f EQ
0x750 PUSH2 0x2e0
0x753 JUMPI
---
0x74a: V637 = 0xf2fde38b
0x74f: V638 = EQ 0xf2fde38b V603
0x750: V639 = 0x2e0
0x753: THROWI V638
---
Entry stack: [V603]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V603]

================================

Block 0x754
[0x754:0x764]
---
Predecessors: [0x749]
Successors: [0x765]
---
0x754 JUMPDEST
0x755 PUSH2 0x306
0x758 PUSH2 0x308
0x75b PUSH2 0x17d
0x75e JUMP
0x75f JUMPDEST
0x760 CALLVALUE
0x761 PUSH2 0x2
0x764 JUMPI
---
0x754: JUMPDEST 
0x755: V640 = 0x306
0x758: V641 = 0x308
0x75b: V642 = 0x17d
0x75e: THROW 
0x75f: JUMPDEST 
0x760: V643 = CALLVALUE
0x761: V644 = 0x2
0x764: THROWI V643
---
Entry stack: [V603]
Stack pops: 0
Stack additions: [0x306, 0x308]
Exit stack: []

================================

Block 0x765
[0x765:0x781]
---
Predecessors: [0x754]
Successors: [0x782]
---
0x765 PUSH2 0x30a
0x768 PUSH1 0x4
0x76a CALLDATALOAD
0x76b PUSH1 0x0
0x76d DUP1
0x76e SLOAD
0x76f CALLER
0x770 PUSH1 0x1
0x772 PUSH1 0xa0
0x774 PUSH1 0x2
0x776 EXP
0x777 SUB
0x778 SWAP1
0x779 DUP2
0x77a AND
0x77b SWAP2
0x77c AND
0x77d EQ
0x77e PUSH2 0x456
0x781 JUMPI
---
0x765: V645 = 0x30a
0x768: V646 = 0x4
0x76a: V647 = CALLDATALOAD 0x4
0x76b: V648 = 0x0
0x76e: V649 = S[0x0]
0x76f: V650 = CALLER
0x770: V651 = 0x1
0x772: V652 = 0xa0
0x774: V653 = 0x2
0x776: V654 = EXP 0x2 0xa0
0x777: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77a: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x77c: V657 = AND V649 0xffffffffffffffffffffffffffffffffffffffff
0x77d: V658 = EQ V657 V656
0x77e: V659 = 0x456
0x781: THROWI V658
---
Entry stack: []
Stack pops: 0
Stack additions: [0x30a, V647, 0x0]
Exit stack: [0x30a, V647, 0x0]

================================

Block 0x782
[0x782:0x78b]
---
Predecessors: [0x765]
Successors: [0x78c]
---
0x782 PUSH2 0x2
0x785 JUMP
0x786 JUMPDEST
0x787 CALLVALUE
0x788 PUSH2 0x2
0x78b JUMPI
---
0x782: V660 = 0x2
0x785: THROW 
0x786: JUMPDEST 
0x787: V661 = CALLVALUE
0x788: V662 = 0x2
0x78b: THROWI V661
---
Entry stack: [0x30a, V647, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x78c
[0x78c:0x7a2]
---
Predecessors: [0x782]
Successors: [0x7a3]
---
0x78c PUSH2 0x31e
0x78f PUSH1 0x1
0x791 SLOAD
0x792 PUSH1 0x1
0x794 PUSH1 0xa0
0x796 PUSH1 0x2
0x798 EXP
0x799 SUB
0x79a AND
0x79b DUP2
0x79c JUMP
0x79d JUMPDEST
0x79e CALLVALUE
0x79f PUSH2 0x2
0x7a2 JUMPI
---
0x78c: V663 = 0x31e
0x78f: V664 = 0x1
0x791: V665 = S[0x1]
0x792: V666 = 0x1
0x794: V667 = 0xa0
0x796: V668 = 0x2
0x798: V669 = EXP 0x2 0xa0
0x799: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79a: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x79c: THROW 
0x79d: JUMPDEST 
0x79e: V672 = CALLVALUE
0x79f: V673 = 0x2
0x7a2: THROWI V672
---
Entry stack: []
Stack pops: 0
Stack additions: [0x31e, V671]
Exit stack: []

================================

Block 0x7a3
[0x7a3:0x7b0]
---
Predecessors: [0x78c]
Successors: [0x7b1]
---
0x7a3 PUSH2 0x33a
0x7a6 PUSH1 0x2
0x7a8 SLOAD
0x7a9 DUP2
0x7aa JUMP
0x7ab JUMPDEST
0x7ac CALLVALUE
0x7ad PUSH2 0x2
0x7b0 JUMPI
---
0x7a3: V674 = 0x33a
0x7a6: V675 = 0x2
0x7a8: V676 = S[0x2]
0x7aa: THROW 
0x7ab: JUMPDEST 
0x7ac: V677 = CALLVALUE
0x7ad: V678 = 0x2
0x7b0: THROWI V677
---
Entry stack: []
Stack pops: 0
Stack additions: [0x33a, V676]
Exit stack: []

================================

Block 0x7b1
[0x7b1:0x7c1]
---
Predecessors: [0x7a3]
Successors: [0x7c2]
---
0x7b1 PUSH2 0x30a
0x7b4 PUSH1 0x4
0x7b6 SLOAD
0x7b7 PUSH1 0xff
0x7b9 AND
0x7ba DUP2
0x7bb JUMP
0x7bc JUMPDEST
0x7bd CALLVALUE
0x7be PUSH2 0x2
0x7c1 JUMPI
---
0x7b1: V679 = 0x30a
0x7b4: V680 = 0x4
0x7b6: V681 = S[0x4]
0x7b7: V682 = 0xff
0x7b9: V683 = AND 0xff V681
0x7bb: THROW 
0x7bc: JUMPDEST 
0x7bd: V684 = CALLVALUE
0x7be: V685 = 0x2
0x7c1: THROWI V684
---
Entry stack: []
Stack pops: 0
Stack additions: [0x30a, V683]
Exit stack: []

================================

Block 0x7c2
[0x7c2:0x7e1]
---
Predecessors: [0x7b1]
Successors: [0x7e2]
---
0x7c2 PUSH2 0x30a
0x7c5 PUSH1 0x4
0x7c7 CALLDATALOAD
0x7c8 PUSH1 0x24
0x7ca CALLDATALOAD
0x7cb PUSH1 0x0
0x7cd DUP1
0x7ce SLOAD
0x7cf CALLER
0x7d0 PUSH1 0x1
0x7d2 PUSH1 0xa0
0x7d4 PUSH1 0x2
0x7d6 EXP
0x7d7 SUB
0x7d8 SWAP1
0x7d9 DUP2
0x7da AND
0x7db SWAP2
0x7dc AND
0x7dd EQ
0x7de PUSH2 0x4c9
0x7e1 JUMPI
---
0x7c2: V686 = 0x30a
0x7c5: V687 = 0x4
0x7c7: V688 = CALLDATALOAD 0x4
0x7c8: V689 = 0x24
0x7ca: V690 = CALLDATALOAD 0x24
0x7cb: V691 = 0x0
0x7ce: V692 = S[0x0]
0x7cf: V693 = CALLER
0x7d0: V694 = 0x1
0x7d2: V695 = 0xa0
0x7d4: V696 = 0x2
0x7d6: V697 = EXP 0x2 0xa0
0x7d7: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7da: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x7dc: V700 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x7dd: V701 = EQ V700 V699
0x7de: V702 = 0x4c9
0x7e1: THROWI V701
---
Entry stack: []
Stack pops: 0
Stack additions: [0x30a, V688, V690, 0x0]
Exit stack: [0x30a, V688, V690, 0x0]

================================

Block 0x7e2
[0x7e2:0x7eb]
---
Predecessors: [0x7c2]
Successors: [0x7ec]
---
0x7e2 PUSH2 0x2
0x7e5 JUMP
0x7e6 JUMPDEST
0x7e7 CALLVALUE
0x7e8 PUSH2 0x2
0x7eb JUMPI
---
0x7e2: V703 = 0x2
0x7e5: THROW 
0x7e6: JUMPDEST 
0x7e7: V704 = CALLVALUE
0x7e8: V705 = 0x2
0x7eb: THROWI V704
---
Entry stack: [0x30a, V688, V690, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7ec
[0x7ec:0x802]
---
Predecessors: [0x7e2]
Successors: [0x803]
---
0x7ec PUSH2 0x31e
0x7ef PUSH1 0x0
0x7f1 SLOAD
0x7f2 PUSH1 0x1
0x7f4 PUSH1 0xa0
0x7f6 PUSH1 0x2
0x7f8 EXP
0x7f9 SUB
0x7fa AND
0x7fb DUP2
0x7fc JUMP
0x7fd JUMPDEST
0x7fe CALLVALUE
0x7ff PUSH2 0x2
0x802 JUMPI
---
0x7ec: V706 = 0x31e
0x7ef: V707 = 0x0
0x7f1: V708 = S[0x0]
0x7f2: V709 = 0x1
0x7f4: V710 = 0xa0
0x7f6: V711 = 0x2
0x7f8: V712 = EXP 0x2 0xa0
0x7f9: V713 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fa: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0x7fc: THROW 
0x7fd: JUMPDEST 
0x7fe: V715 = CALLVALUE
0x7ff: V716 = 0x2
0x802: THROWI V715
---
Entry stack: []
Stack pops: 0
Stack additions: [0x31e, V714]
Exit stack: []

================================

Block 0x803
[0x803:0x810]
---
Predecessors: [0x7ec]
Successors: [0x811]
---
0x803 PUSH2 0x33a
0x806 PUSH1 0x3
0x808 SLOAD
0x809 DUP2
0x80a JUMP
0x80b JUMPDEST
0x80c CALLVALUE
0x80d PUSH2 0x2
0x810 JUMPI
---
0x803: V717 = 0x33a
0x806: V718 = 0x3
0x808: V719 = S[0x3]
0x80a: THROW 
0x80b: JUMPDEST 
0x80c: V720 = CALLVALUE
0x80d: V721 = 0x2
0x810: THROWI V720
---
Entry stack: []
Stack pops: 0
Stack additions: [0x33a, V719]
Exit stack: []

================================

Block 0x811
[0x811:0x830]
---
Predecessors: [0x803]
Successors: [0x831]
---
0x811 PUSH2 0x30a
0x814 PUSH1 0x4
0x816 CALLDATALOAD
0x817 PUSH1 0x24
0x819 CALLDATALOAD
0x81a PUSH1 0x0
0x81c DUP1
0x81d SLOAD
0x81e CALLER
0x81f PUSH1 0x1
0x821 PUSH1 0xa0
0x823 PUSH1 0x2
0x825 EXP
0x826 SUB
0x827 SWAP1
0x828 DUP2
0x829 AND
0x82a SWAP2
0x82b AND
0x82c EQ
0x82d PUSH2 0x665
0x830 JUMPI
---
0x811: V722 = 0x30a
0x814: V723 = 0x4
0x816: V724 = CALLDATALOAD 0x4
0x817: V725 = 0x24
0x819: V726 = CALLDATALOAD 0x24
0x81a: V727 = 0x0
0x81d: V728 = S[0x0]
0x81e: V729 = CALLER
0x81f: V730 = 0x1
0x821: V731 = 0xa0
0x823: V732 = 0x2
0x825: V733 = EXP 0x2 0xa0
0x826: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x829: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0x82b: V736 = AND V728 0xffffffffffffffffffffffffffffffffffffffff
0x82c: V737 = EQ V736 V735
0x82d: V738 = 0x665
0x830: THROWI V737
---
Entry stack: []
Stack pops: 0
Stack additions: [0x30a, V724, V726, 0x0]
Exit stack: [0x30a, V724, V726, 0x0]

================================

Block 0x831
[0x831:0x838]
---
Predecessors: [0x811]
Successors: [0x839]
---
0x831 PUSH2 0x2
0x834 JUMP
0x835 JUMPDEST
0x836 PUSH2 0x306
---
0x831: V739 = 0x2
0x834: THROW 
0x835: JUMPDEST 
0x836: V740 = 0x306
---
Entry stack: [0x30a, V724, V726, 0x0]
Stack pops: 0
Stack additions: [0x306]
Exit stack: []

================================

Block 0x839
[0x839:0x84b]
---
Predecessors: [0x831]
Successors: [0x84c]
---
0x839 JUMPDEST
0x83a PUSH1 0x4
0x83c SLOAD
0x83d PUSH1 0x0
0x83f SWAP1
0x840 DUP2
0x841 SWAP1
0x842 DUP2
0x843 SWAP1
0x844 PUSH1 0xff
0x846 AND
0x847 DUP1
0x848 PUSH2 0x1a3
0x84b JUMPI
---
0x839: JUMPDEST 
0x83a: V741 = 0x4
0x83c: V742 = S[0x4]
0x83d: V743 = 0x0
0x844: V744 = 0xff
0x846: V745 = AND 0xff V742
0x848: V746 = 0x1a3
0x84b: THROWI V745
---
Entry stack: [0x306]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V745]
Exit stack: [0x306, 0x0, 0x0, 0x0, V745]

================================

Block 0x84c
[0x84c:0x85e]
---
Predecessors: [0x839]
Successors: [0x85f]
---
0x84c POP
0x84d PUSH1 0x0
0x84f SLOAD
0x850 CALLER
0x851 PUSH1 0x1
0x853 PUSH1 0xa0
0x855 PUSH1 0x2
0x857 EXP
0x858 SUB
0x859 SWAP1
0x85a DUP2
0x85b AND
0x85c SWAP2
0x85d AND
0x85e EQ
---
0x84d: V747 = 0x0
0x84f: V748 = S[0x0]
0x850: V749 = CALLER
0x851: V750 = 0x1
0x853: V751 = 0xa0
0x855: V752 = 0x2
0x857: V753 = EXP 0x2 0xa0
0x858: V754 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85b: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0x85d: V756 = AND V748 0xffffffffffffffffffffffffffffffffffffffff
0x85e: V757 = EQ V756 V755
---
Entry stack: [0x306, 0x0, 0x0, 0x0, V745]
Stack pops: 1
Stack additions: [V757]
Exit stack: [0x306, 0x0, 0x0, 0x0, V757]

================================

Block 0x85f
[0x85f:0x864]
---
Predecessors: [0x84c]
Successors: [0x865]
---
0x85f JUMPDEST
0x860 ISZERO
0x861 PUSH2 0x34c
0x864 JUMPI
---
0x85f: JUMPDEST 
0x860: V758 = ISZERO V757
0x861: V759 = 0x34c
0x864: THROWI V758
---
Entry stack: [0x306, 0x0, 0x0, 0x0, V757]
Stack pops: 1
Stack additions: []
Exit stack: [0x306, 0x0, 0x0, 0x0]

================================

Block 0x865
[0x865:0x86e]
---
Predecessors: [0x85f]
Successors: [0x86f]
---
0x865 PUSH1 0x2
0x867 SLOAD
0x868 CALLVALUE
0x869 DUP2
0x86a ISZERO
0x86b PUSH2 0x2
0x86e JUMPI
---
0x865: V760 = 0x2
0x867: V761 = S[0x2]
0x868: V762 = CALLVALUE
0x86a: V763 = ISZERO V761
0x86b: V764 = 0x2
0x86e: THROWI V763
---
Entry stack: [0x306, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V761, V762]
Exit stack: [0x306, 0x0, 0x0, 0x0, V761, V762]

================================

Block 0x86f
[0x86f:0x8da]
---
Predecessors: [0x865]
Successors: [0x8db]
---
0x86f DIV
0x870 SWAP3
0x871 POP
0x872 PUSH1 0x3
0x874 PUSH1 0x0
0x876 POP
0x877 SLOAD
0x878 PUSH1 0x1
0x87a PUSH1 0x0
0x87c SWAP1
0x87d SLOAD
0x87e SWAP1
0x87f PUSH2 0x100
0x882 EXP
0x883 SWAP1
0x884 DIV
0x885 PUSH1 0x1
0x887 PUSH1 0xa0
0x889 PUSH1 0x2
0x88b EXP
0x88c SUB
0x88d AND
0x88e PUSH1 0x1
0x890 PUSH1 0xa0
0x892 PUSH1 0x2
0x894 EXP
0x895 SUB
0x896 AND
0x897 PUSH4 0x70a08231
0x89c ADDRESS
0x89d PUSH1 0x0
0x89f PUSH1 0x40
0x8a1 MLOAD
0x8a2 PUSH1 0x20
0x8a4 ADD
0x8a5 MSTORE
0x8a6 PUSH1 0x40
0x8a8 MLOAD
0x8a9 DUP3
0x8aa PUSH1 0xe0
0x8ac PUSH1 0x2
0x8ae EXP
0x8af MUL
0x8b0 DUP2
0x8b1 MSTORE
0x8b2 PUSH1 0x4
0x8b4 ADD
0x8b5 DUP1
0x8b6 DUP3
0x8b7 PUSH1 0x1
0x8b9 PUSH1 0xa0
0x8bb PUSH1 0x2
0x8bd EXP
0x8be SUB
0x8bf AND
0x8c0 DUP2
0x8c1 MSTORE
0x8c2 PUSH1 0x20
0x8c4 ADD
0x8c5 SWAP2
0x8c6 POP
0x8c7 POP
0x8c8 PUSH1 0x20
0x8ca PUSH1 0x40
0x8cc MLOAD
0x8cd DUP1
0x8ce DUP4
0x8cf SUB
0x8d0 DUP2
0x8d1 PUSH1 0x0
0x8d3 DUP8
0x8d4 DUP1
0x8d5 EXTCODESIZE
0x8d6 ISZERO
0x8d7 PUSH2 0x2
0x8da JUMPI
---
0x86f: V765 = DIV V762 V761
0x872: V766 = 0x3
0x874: V767 = 0x0
0x877: V768 = S[0x3]
0x878: V769 = 0x1
0x87a: V770 = 0x0
0x87d: V771 = S[0x1]
0x87f: V772 = 0x100
0x882: V773 = EXP 0x100 0x0
0x884: V774 = DIV V771 0x1
0x885: V775 = 0x1
0x887: V776 = 0xa0
0x889: V777 = 0x2
0x88b: V778 = EXP 0x2 0xa0
0x88c: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88d: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V774
0x88e: V781 = 0x1
0x890: V782 = 0xa0
0x892: V783 = 0x2
0x894: V784 = EXP 0x2 0xa0
0x895: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x896: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0x897: V787 = 0x70a08231
0x89c: V788 = ADDRESS
0x89d: V789 = 0x0
0x89f: V790 = 0x40
0x8a1: V791 = M[0x40]
0x8a2: V792 = 0x20
0x8a4: V793 = ADD 0x20 V791
0x8a5: M[V793] = 0x0
0x8a6: V794 = 0x40
0x8a8: V795 = M[0x40]
0x8aa: V796 = 0xe0
0x8ac: V797 = 0x2
0x8ae: V798 = EXP 0x2 0xe0
0x8af: V799 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x8b1: M[V795] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x8b2: V800 = 0x4
0x8b4: V801 = ADD 0x4 V795
0x8b7: V802 = 0x1
0x8b9: V803 = 0xa0
0x8bb: V804 = 0x2
0x8bd: V805 = EXP 0x2 0xa0
0x8be: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bf: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V788
0x8c1: M[V801] = V807
0x8c2: V808 = 0x20
0x8c4: V809 = ADD 0x20 V801
0x8c8: V810 = 0x20
0x8ca: V811 = 0x40
0x8cc: V812 = M[0x40]
0x8cf: V813 = SUB V809 V812
0x8d1: V814 = 0x0
0x8d5: V815 = EXTCODESIZE V786
0x8d6: V816 = ISZERO V815
0x8d7: V817 = 0x2
0x8da: THROWI V816
---
Entry stack: [0x306, 0x0, 0x0, 0x0, V761, V762]
Stack pops: 5
Stack additions: [V765, S3, S2, V768, V786, 0x70a08231, V809, 0x20, V812, V813, V812, 0x0, V786]
Exit stack: [0x306, V765, 0x0, 0x0, V768, V786, 0x70a08231, V809, 0x20, V812, V813, V812, 0x0, V786]

================================

Block 0x8db
[0x8db:0x8e4]
---
Predecessors: [0x86f]
Successors: [0x8e5]
---
0x8db PUSH1 0x32
0x8dd GAS
0x8de SUB
0x8df CALL
0x8e0 ISZERO
0x8e1 PUSH2 0x2
0x8e4 JUMPI
---
0x8db: V818 = 0x32
0x8dd: V819 = GAS
0x8de: V820 = SUB V819 0x32
0x8df: V821 = CALL V820 V786 0x0 V812 V813 V812 0x20
0x8e0: V822 = ISZERO V821
0x8e1: V823 = 0x2
0x8e4: THROWI V822
---
Entry stack: [0x306, V765, 0x0, 0x0, V768, V786, 0x70a08231, V809, 0x20, V812, V813, V812, 0x0, V786]
Stack pops: 6
Stack additions: []
Exit stack: [0x306, V765, 0x0, 0x0, V768, V786, 0x70a08231, V809]

================================

Block 0x8e5
[0x8e5:0x8f2]
---
Predecessors: [0x8db]
Successors: [0x8f3]
---
0x8e5 POP
0x8e6 POP
0x8e7 PUSH1 0x40
0x8e9 MLOAD
0x8ea MLOAD
0x8eb SWAP1
0x8ec POP
0x8ed DUP2
0x8ee ISZERO
0x8ef PUSH2 0x2
0x8f2 JUMPI
---
0x8e7: V824 = 0x40
0x8e9: V825 = M[0x40]
0x8ea: V826 = M[V825]
0x8ee: V827 = ISZERO V768
0x8ef: V828 = 0x2
0x8f2: THROWI V827
---
Entry stack: [0x306, V765, 0x0, 0x0, V768, V786, 0x70a08231, V809]
Stack pops: 4
Stack additions: [S3, V826]
Exit stack: [0x306, V765, 0x0, 0x0, V768, V826]

================================

Block 0x8f3
[0x8f3:0x908]
---
Predecessors: [0x8e5]
Successors: [0x909]
---
0x8f3 DIV
0x8f4 SWAP2
0x8f5 POP
0x8f6 PUSH1 0x0
0x8f8 SWAP1
0x8f9 POP
0x8fa PUSH1 0x2
0x8fc PUSH1 0x0
0x8fe POP
0x8ff SLOAD
0x900 DUP3
0x901 MUL
0x902 CALLVALUE
0x903 GT
0x904 ISZERO
0x905 PUSH2 0x25a
0x908 JUMPI
---
0x8f3: V829 = DIV V826 V768
0x8f6: V830 = 0x0
0x8fa: V831 = 0x2
0x8fc: V832 = 0x0
0x8ff: V833 = S[0x2]
0x901: V834 = MUL V829 V833
0x902: V835 = CALLVALUE
0x903: V836 = GT V835 V834
0x904: V837 = ISZERO V836
0x905: V838 = 0x25a
0x908: THROWI V837
---
Entry stack: [0x306, V765, 0x0, 0x0, V768, V826]
Stack pops: 4
Stack additions: [V829, 0x0]
Exit stack: [0x306, V765, V829, 0x0]

================================

Block 0x909
[0x909:0x915]
---
Predecessors: [0x8f3]
Successors: [0x916]
---
0x909 POP
0x90a PUSH1 0x2
0x90c SLOAD
0x90d SWAP1
0x90e SWAP2
0x90f POP
0x910 DUP2
0x911 SWAP1
0x912 DUP2
0x913 MUL
0x914 CALLVALUE
0x915 SUB
---
0x90a: V839 = 0x2
0x90c: V840 = S[0x2]
0x913: V841 = MUL V829 V840
0x914: V842 = CALLVALUE
0x915: V843 = SUB V842 V841
---
Entry stack: [0x306, V765, V829, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V843]
Exit stack: [0x306, V829, V829, V843]

================================

Block 0x916
[0x916:0x91f]
---
Predecessors: [0x909]
Successors: [0x920]
---
0x916 JUMPDEST
0x917 PUSH1 0x0
0x919 DUP2
0x91a GT
0x91b ISZERO
0x91c PUSH2 0x37b
0x91f JUMPI
---
0x916: JUMPDEST 
0x917: V844 = 0x0
0x91a: V845 = GT V843 0x0
0x91b: V846 = ISZERO V845
0x91c: V847 = 0x37b
0x91f: THROWI V846
---
Entry stack: [0x306, V829, V829, V843]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x306, V829, V829, V843]

================================

Block 0x920
[0x920:0x94a]
---
Predecessors: [0x916]
Successors: [0x94b]
---
0x920 PUSH1 0x40
0x922 MLOAD
0x923 PUSH1 0x1
0x925 PUSH1 0xa0
0x927 PUSH1 0x2
0x929 EXP
0x92a SUB
0x92b CALLER
0x92c AND
0x92d SWAP1
0x92e DUP3
0x92f ISZERO
0x930 PUSH2 0x8fc
0x933 MUL
0x934 SWAP1
0x935 DUP4
0x936 SWAP1
0x937 PUSH1 0x0
0x939 DUP2
0x93a DUP2
0x93b DUP2
0x93c DUP6
0x93d DUP9
0x93e DUP9
0x93f CALL
0x940 SWAP4
0x941 POP
0x942 POP
0x943 POP
0x944 POP
0x945 ISZERO
0x946 ISZERO
0x947 PUSH2 0x37b
0x94a JUMPI
---
0x920: V848 = 0x40
0x922: V849 = M[0x40]
0x923: V850 = 0x1
0x925: V851 = 0xa0
0x927: V852 = 0x2
0x929: V853 = EXP 0x2 0xa0
0x92a: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92b: V855 = CALLER
0x92c: V856 = AND V855 0xffffffffffffffffffffffffffffffffffffffff
0x92f: V857 = ISZERO V843
0x930: V858 = 0x8fc
0x933: V859 = MUL 0x8fc V857
0x937: V860 = 0x0
0x93f: V861 = CALL V859 V856 V843 V849 0x0 V849 0x0
0x945: V862 = ISZERO V861
0x946: V863 = ISZERO V862
0x947: V864 = 0x37b
0x94a: THROWI V863
---
Entry stack: [0x306, V829, V829, V843]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x306, V829, V829, V843]

================================

Block 0x94b
[0x94b:0x954]
---
Predecessors: [0x920]
Successors: [0x955]
---
0x94b PUSH2 0x2
0x94e JUMP
0x94f JUMPDEST
0x950 CALLVALUE
0x951 PUSH2 0x2
0x954 JUMPI
---
0x94b: V865 = 0x2
0x94e: THROW 
0x94f: JUMPDEST 
0x950: V866 = CALLVALUE
0x951: V867 = 0x2
0x954: THROWI V866
---
Entry stack: [0x306, V829, V829, V843]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x955
[0x955:0x971]
---
Predecessors: [0x94b]
Successors: [0x972]
---
0x955 PUSH2 0x30a
0x958 PUSH1 0x4
0x95a CALLDATALOAD
0x95b PUSH1 0x0
0x95d DUP1
0x95e SLOAD
0x95f CALLER
0x960 PUSH1 0x1
0x962 PUSH1 0xa0
0x964 PUSH1 0x2
0x966 EXP
0x967 SUB
0x968 SWAP1
0x969 DUP2
0x96a AND
0x96b SWAP2
0x96c AND
0x96d EQ
0x96e PUSH2 0x71c
0x971 JUMPI
---
0x955: V868 = 0x30a
0x958: V869 = 0x4
0x95a: V870 = CALLDATALOAD 0x4
0x95b: V871 = 0x0
0x95e: V872 = S[0x0]
0x95f: V873 = CALLER
0x960: V874 = 0x1
0x962: V875 = 0xa0
0x964: V876 = 0x2
0x966: V877 = EXP 0x2 0xa0
0x967: V878 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96a: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0x96c: V880 = AND V872 0xffffffffffffffffffffffffffffffffffffffff
0x96d: V881 = EQ V880 V879
0x96e: V882 = 0x71c
0x971: THROWI V881
---
Entry stack: []
Stack pops: 0
Stack additions: [0x30a, V870, 0x0]
Exit stack: [0x30a, V870, 0x0]

================================

Block 0x972
[0x972:0x97b]
---
Predecessors: [0x955]
Successors: [0x97c]
---
0x972 PUSH2 0x2
0x975 JUMP
0x976 JUMPDEST
0x977 CALLVALUE
0x978 PUSH2 0x2
0x97b JUMPI
---
0x972: V883 = 0x2
0x975: THROW 
0x976: JUMPDEST 
0x977: V884 = CALLVALUE
0x978: V885 = 0x2
0x97b: THROWI V884
---
Entry stack: [0x30a, V870, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x97c
[0x97c:0x997]
---
Predecessors: [0x972]
Successors: [0x998]
---
0x97c PUSH2 0x306
0x97f PUSH1 0x4
0x981 CALLDATALOAD
0x982 PUSH1 0x0
0x984 SLOAD
0x985 CALLER
0x986 PUSH1 0x1
0x988 PUSH1 0xa0
0x98a PUSH1 0x2
0x98c EXP
0x98d SUB
0x98e SWAP1
0x98f DUP2
0x990 AND
0x991 SWAP2
0x992 AND
0x993 EQ
0x994 PUSH2 0x7c5
0x997 JUMPI
---
0x97c: V886 = 0x306
0x97f: V887 = 0x4
0x981: V888 = CALLDATALOAD 0x4
0x982: V889 = 0x0
0x984: V890 = S[0x0]
0x985: V891 = CALLER
0x986: V892 = 0x1
0x988: V893 = 0xa0
0x98a: V894 = 0x2
0x98c: V895 = EXP 0x2 0xa0
0x98d: V896 = SUB 0x10000000000000000000000000000000000000000 0x1
0x990: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff V891
0x992: V898 = AND V890 0xffffffffffffffffffffffffffffffffffffffff
0x993: V899 = EQ V898 V897
0x994: V900 = 0x7c5
0x997: THROWI V899
---
Entry stack: []
Stack pops: 0
Stack additions: [0x306, V888]
Exit stack: [0x306, V888]

================================

Block 0x998
[0x998:0x9a1]
---
Predecessors: [0x97c]
Successors: [0x9a2]
---
0x998 PUSH2 0x2
0x99b JUMP
0x99c JUMPDEST
0x99d CALLVALUE
0x99e PUSH2 0x2
0x9a1 JUMPI
---
0x998: V901 = 0x2
0x99b: THROW 
0x99c: JUMPDEST 
0x99d: V902 = CALLVALUE
0x99e: V903 = 0x2
0x9a1: THROWI V902
---
Entry stack: [0x306, V888]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9a2
[0x9a2:0x9bd]
---
Predecessors: [0x998]
Successors: [0x9be]
---
0x9a2 PUSH2 0x306
0x9a5 PUSH1 0x4
0x9a7 CALLDATALOAD
0x9a8 PUSH1 0x0
0x9aa SLOAD
0x9ab CALLER
0x9ac PUSH1 0x1
0x9ae PUSH1 0xa0
0x9b0 PUSH1 0x2
0x9b2 EXP
0x9b3 SUB
0x9b4 SWAP1
0x9b5 DUP2
0x9b6 AND
0x9b7 SWAP2
0x9b8 AND
0x9b9 EQ
0x9ba PUSH2 0x817
0x9bd JUMPI
---
0x9a2: V904 = 0x306
0x9a5: V905 = 0x4
0x9a7: V906 = CALLDATALOAD 0x4
0x9a8: V907 = 0x0
0x9aa: V908 = S[0x0]
0x9ab: V909 = CALLER
0x9ac: V910 = 0x1
0x9ae: V911 = 0xa0
0x9b0: V912 = 0x2
0x9b2: V913 = EXP 0x2 0xa0
0x9b3: V914 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b6: V915 = AND 0xffffffffffffffffffffffffffffffffffffffff V909
0x9b8: V916 = AND V908 0xffffffffffffffffffffffffffffffffffffffff
0x9b9: V917 = EQ V916 V915
0x9ba: V918 = 0x817
0x9bd: THROWI V917
---
Entry stack: []
Stack pops: 0
Stack additions: [0x306, V906]
Exit stack: [0x306, V906]

================================

Block 0x9be
[0x9be:0xa32]
---
Predecessors: [0x9a2]
Successors: [0xa33]
---
0x9be PUSH2 0x2
0x9c1 JUMP
0x9c2 JUMPDEST
0x9c3 STOP
0x9c4 JUMPDEST
0x9c5 JUMP
0x9c6 JUMPDEST
0x9c7 PUSH1 0x40
0x9c9 DUP1
0x9ca MLOAD
0x9cb SWAP2
0x9cc ISZERO
0x9cd ISZERO
0x9ce DUP3
0x9cf MSTORE
0x9d0 MLOAD
0x9d1 SWAP1
0x9d2 DUP2
0x9d3 SWAP1
0x9d4 SUB
0x9d5 PUSH1 0x20
0x9d7 ADD
0x9d8 SWAP1
0x9d9 RETURN
0x9da JUMPDEST
0x9db PUSH1 0x40
0x9dd DUP1
0x9de MLOAD
0x9df PUSH1 0x1
0x9e1 PUSH1 0xa0
0x9e3 PUSH1 0x2
0x9e5 EXP
0x9e6 SUB
0x9e7 SWAP1
0x9e8 SWAP3
0x9e9 AND
0x9ea DUP3
0x9eb MSTORE
0x9ec MLOAD
0x9ed SWAP1
0x9ee DUP2
0x9ef SWAP1
0x9f0 SUB
0x9f1 PUSH1 0x20
0x9f3 ADD
0x9f4 SWAP1
0x9f5 RETURN
0x9f6 JUMPDEST
0x9f7 PUSH1 0x40
0x9f9 DUP1
0x9fa MLOAD
0x9fb SWAP2
0x9fc DUP3
0x9fd MSTORE
0x9fe MLOAD
0x9ff SWAP1
0xa00 DUP2
0xa01 SWAP1
0xa02 SUB
0xa03 PUSH1 0x20
0xa05 ADD
0xa06 SWAP1
0xa07 RETURN
0xa08 JUMPDEST
0xa09 PUSH1 0x40
0xa0b MLOAD
0xa0c PUSH1 0x1
0xa0e PUSH1 0xa0
0xa10 PUSH1 0x2
0xa12 EXP
0xa13 SUB
0xa14 CALLER
0xa15 AND
0xa16 SWAP1
0xa17 CALLVALUE
0xa18 DUP1
0xa19 ISZERO
0xa1a PUSH2 0x8fc
0xa1d MUL
0xa1e SWAP2
0xa1f PUSH1 0x0
0xa21 DUP2
0xa22 DUP2
0xa23 DUP2
0xa24 DUP6
0xa25 DUP9
0xa26 DUP9
0xa27 CALL
0xa28 SWAP4
0xa29 POP
0xa2a POP
0xa2b POP
0xa2c POP
0xa2d ISZERO
0xa2e ISZERO
0xa2f PUSH2 0x451
0xa32 JUMPI
---
0x9be: V919 = 0x2
0x9c1: THROW 
0x9c2: JUMPDEST 
0x9c3: STOP 
0x9c4: JUMPDEST 
0x9c5: JUMP S0
0x9c6: JUMPDEST 
0x9c7: V920 = 0x40
0x9ca: V921 = M[0x40]
0x9cc: V922 = ISZERO S0
0x9cd: V923 = ISZERO V922
0x9cf: M[V921] = V923
0x9d0: V924 = M[0x40]
0x9d4: V925 = SUB V921 V924
0x9d5: V926 = 0x20
0x9d7: V927 = ADD 0x20 V925
0x9d9: RETURN V924 V927
0x9da: JUMPDEST 
0x9db: V928 = 0x40
0x9de: V929 = M[0x40]
0x9df: V930 = 0x1
0x9e1: V931 = 0xa0
0x9e3: V932 = 0x2
0x9e5: V933 = EXP 0x2 0xa0
0x9e6: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e9: V935 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x9eb: M[V929] = V935
0x9ec: V936 = M[0x40]
0x9f0: V937 = SUB V929 V936
0x9f1: V938 = 0x20
0x9f3: V939 = ADD 0x20 V937
0x9f5: RETURN V936 V939
0x9f6: JUMPDEST 
0x9f7: V940 = 0x40
0x9fa: V941 = M[0x40]
0x9fd: M[V941] = S0
0x9fe: V942 = M[0x40]
0xa02: V943 = SUB V941 V942
0xa03: V944 = 0x20
0xa05: V945 = ADD 0x20 V943
0xa07: RETURN V942 V945
0xa08: JUMPDEST 
0xa09: V946 = 0x40
0xa0b: V947 = M[0x40]
0xa0c: V948 = 0x1
0xa0e: V949 = 0xa0
0xa10: V950 = 0x2
0xa12: V951 = EXP 0x2 0xa0
0xa13: V952 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa14: V953 = CALLER
0xa15: V954 = AND V953 0xffffffffffffffffffffffffffffffffffffffff
0xa17: V955 = CALLVALUE
0xa19: V956 = ISZERO V955
0xa1a: V957 = 0x8fc
0xa1d: V958 = MUL 0x8fc V956
0xa1f: V959 = 0x0
0xa27: V960 = CALL V958 V954 V955 V947 0x0 V947 0x0
0xa2d: V961 = ISZERO V960
0xa2e: V962 = ISZERO V961
0xa2f: V963 = 0x451
0xa32: THROWI V962
---
Entry stack: [0x306, V906]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa33
[0xa33:0xa40]
---
Predecessors: [0x9be]
Successors: [0xa41]
---
0xa33 PUSH2 0x2
0xa36 JUMP
0xa37 JUMPDEST
0xa38 PUSH1 0x0
0xa3a DUP4
0xa3b GT
0xa3c ISZERO
0xa3d PUSH2 0x401
0xa40 JUMPI
---
0xa33: V964 = 0x2
0xa36: THROW 
0xa37: JUMPDEST 
0xa38: V965 = 0x0
0xa3b: V966 = GT S2 0x0
0xa3c: V967 = ISZERO V966
0xa3d: V968 = 0x401
0xa40: THROWI V967
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xa41
[0xa41:0xaa0]
---
Predecessors: [0xa33]
Successors: [0xaa1]
---
0xa41 PUSH1 0x1
0xa43 SLOAD
0xa44 PUSH1 0x3
0xa46 SLOAD
0xa47 PUSH1 0x40
0xa49 DUP1
0xa4a MLOAD
0xa4b PUSH1 0x0
0xa4d PUSH1 0x20
0xa4f SWAP2
0xa50 DUP3
0xa51 ADD
0xa52 DUP2
0xa53 SWAP1
0xa54 MSTORE
0xa55 DUP3
0xa56 MLOAD
0xa57 PUSH1 0xe0
0xa59 PUSH1 0x2
0xa5b EXP
0xa5c PUSH4 0xa9059cbb
0xa61 MUL
0xa62 DUP2
0xa63 MSTORE
0xa64 PUSH1 0x1
0xa66 PUSH1 0xa0
0xa68 PUSH1 0x2
0xa6a EXP
0xa6b SUB
0xa6c CALLER
0xa6d DUP2
0xa6e AND
0xa6f PUSH1 0x4
0xa71 DUP4
0xa72 ADD
0xa73 MSTORE
0xa74 SWAP5
0xa75 DUP10
0xa76 MUL
0xa77 PUSH1 0x24
0xa79 DUP3
0xa7a ADD
0xa7b MSTORE
0xa7c SWAP3
0xa7d MLOAD
0xa7e SWAP4
0xa7f SWAP1
0xa80 SWAP5
0xa81 AND
0xa82 SWAP4
0xa83 PUSH4 0xa9059cbb
0xa88 SWAP4
0xa89 PUSH1 0x44
0xa8b DUP1
0xa8c DUP6
0xa8d ADD
0xa8e SWAP5
0xa8f SWAP2
0xa90 SWAP3
0xa91 SWAP2
0xa92 DUP4
0xa93 SWAP1
0xa94 SUB
0xa95 ADD
0xa96 SWAP1
0xa97 DUP3
0xa98 SWAP1
0xa99 DUP8
0xa9a DUP1
0xa9b EXTCODESIZE
0xa9c ISZERO
0xa9d PUSH2 0x2
0xaa0 JUMPI
---
0xa41: V969 = 0x1
0xa43: V970 = S[0x1]
0xa44: V971 = 0x3
0xa46: V972 = S[0x3]
0xa47: V973 = 0x40
0xa4a: V974 = M[0x40]
0xa4b: V975 = 0x0
0xa4d: V976 = 0x20
0xa51: V977 = ADD 0x20 V974
0xa54: M[V977] = 0x0
0xa56: V978 = M[0x40]
0xa57: V979 = 0xe0
0xa59: V980 = 0x2
0xa5b: V981 = EXP 0x2 0xe0
0xa5c: V982 = 0xa9059cbb
0xa61: V983 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa63: M[V978] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa64: V984 = 0x1
0xa66: V985 = 0xa0
0xa68: V986 = 0x2
0xa6a: V987 = EXP 0x2 0xa0
0xa6b: V988 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6c: V989 = CALLER
0xa6e: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0xa6f: V991 = 0x4
0xa72: V992 = ADD V978 0x4
0xa73: M[V992] = V990
0xa76: V993 = MUL S2 V972
0xa77: V994 = 0x24
0xa7a: V995 = ADD V978 0x24
0xa7b: M[V995] = V993
0xa7d: V996 = M[0x40]
0xa81: V997 = AND V970 0xffffffffffffffffffffffffffffffffffffffff
0xa83: V998 = 0xa9059cbb
0xa89: V999 = 0x44
0xa8d: V1000 = ADD V978 0x44
0xa94: V1001 = SUB V978 V996
0xa95: V1002 = ADD V1001 0x44
0xa9b: V1003 = EXTCODESIZE V997
0xa9c: V1004 = ISZERO V1003
0xa9d: V1005 = 0x2
0xaa0: THROWI V1004
---
Entry stack: [S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V997, 0xa9059cbb, V1000, 0x20, V996, V1002, V996, 0x0, V997]
Exit stack: [S2, S1, S0, V997, 0xa9059cbb, V1000, 0x20, V996, V1002, V996, 0x0, V997]

================================

Block 0xaa1
[0xaa1:0xaaa]
---
Predecessors: [0xa41]
Successors: [0xaab]
---
0xaa1 PUSH1 0x32
0xaa3 GAS
0xaa4 SUB
0xaa5 CALL
0xaa6 ISZERO
0xaa7 PUSH2 0x2
0xaaa JUMPI
---
0xaa1: V1006 = 0x32
0xaa3: V1007 = GAS
0xaa4: V1008 = SUB V1007 0x32
0xaa5: V1009 = CALL V1008 V997 0x0 V996 V1002 V996 0x20
0xaa6: V1010 = ISZERO V1009
0xaa7: V1011 = 0x2
0xaaa: THROWI V1010
---
Entry stack: [S11, S10, S9, V997, 0xa9059cbb, V1000, 0x20, V996, V1002, V996, 0x0, V997]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V997, 0xa9059cbb, V1000]

================================

Block 0xaab
[0xaab:0xab8]
---
Predecessors: [0xaa1]
Successors: [0xab9]
---
0xaab POP
0xaac POP
0xaad PUSH1 0x40
0xaaf MLOAD
0xab0 MLOAD
0xab1 ISZERO
0xab2 ISZERO
0xab3 SWAP1
0xab4 POP
0xab5 PUSH2 0x401
0xab8 JUMPI
---
0xaad: V1012 = 0x40
0xaaf: V1013 = M[0x40]
0xab0: V1014 = M[V1013]
0xab1: V1015 = ISZERO V1014
0xab2: V1016 = ISZERO V1015
0xab5: V1017 = 0x401
0xab8: THROWI V1016
---
Entry stack: [S5, S4, S3, V997, 0xa9059cbb, V1000]
Stack pops: 3
Stack additions: []
Exit stack: [S5, S4, S3]

================================

Block 0xab9
[0xab9:0xb0c]
---
Predecessors: [0xaab]
Successors: [0xb0d]
---
0xab9 PUSH2 0x2
0xabc JUMP
0xabd JUMPDEST
0xabe PUSH1 0x3
0xac0 SLOAD
0xac1 PUSH1 0x40
0xac3 DUP1
0xac4 MLOAD
0xac5 CALLVALUE
0xac6 DUP2
0xac7 MSTORE
0xac8 PUSH1 0x20
0xaca DUP2
0xacb ADD
0xacc DUP5
0xacd SWAP1
0xace MSTORE
0xacf SWAP2
0xad0 DUP6
0xad1 MUL
0xad2 DUP3
0xad3 DUP3
0xad4 ADD
0xad5 MSTORE
0xad6 MLOAD
0xad7 PUSH1 0x1
0xad9 PUSH1 0xa0
0xadb PUSH1 0x2
0xadd EXP
0xade SUB
0xadf CALLER
0xae0 AND
0xae1 SWAP2
0xae2 PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xb03 SWAP2
0xb04 SWAP1
0xb05 DUP2
0xb06 SWAP1
0xb07 SUB
0xb08 PUSH1 0x60
0xb0a ADD
0xb0b SWAP1
0xb0c LOG2
---
0xab9: V1018 = 0x2
0xabc: THROW 
0xabd: JUMPDEST 
0xabe: V1019 = 0x3
0xac0: V1020 = S[0x3]
0xac1: V1021 = 0x40
0xac4: V1022 = M[0x40]
0xac5: V1023 = CALLVALUE
0xac7: M[V1022] = V1023
0xac8: V1024 = 0x20
0xacb: V1025 = ADD V1022 0x20
0xace: M[V1025] = S0
0xad1: V1026 = MUL S2 V1020
0xad4: V1027 = ADD 0x40 V1022
0xad5: M[V1027] = V1026
0xad6: V1028 = M[0x40]
0xad7: V1029 = 0x1
0xad9: V1030 = 0xa0
0xadb: V1031 = 0x2
0xadd: V1032 = EXP 0x2 0xa0
0xade: V1033 = SUB 0x10000000000000000000000000000000000000000 0x1
0xadf: V1034 = CALLER
0xae0: V1035 = AND V1034 0xffffffffffffffffffffffffffffffffffffffff
0xae2: V1036 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0xb07: V1037 = SUB V1022 V1028
0xb08: V1038 = 0x60
0xb0a: V1039 = ADD 0x60 V1037
0xb0c: LOG V1028 V1039 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V1035
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xb0d
[0xb0d:0xb24]
---
Predecessors: [0xab9]
Successors: [0xb25]
---
0xb0d JUMPDEST
0xb0e POP
0xb0f POP
0xb10 POP
0xb11 JUMP
0xb12 JUMPDEST
0xb13 PUSH1 0x1
0xb15 PUSH1 0xa0
0xb17 PUSH1 0x2
0xb19 EXP
0xb1a SUB
0xb1b ADDRESS
0xb1c AND
0xb1d BALANCE
0xb1e DUP3
0xb1f SWAP1
0xb20 LT
0xb21 PUSH2 0x4c4
0xb24 JUMPI
---
0xb0d: JUMPDEST 
0xb11: JUMP S3
0xb12: JUMPDEST 
0xb13: V1040 = 0x1
0xb15: V1041 = 0xa0
0xb17: V1042 = 0x2
0xb19: V1043 = EXP 0x2 0xa0
0xb1a: V1044 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1b: V1045 = ADDRESS
0xb1c: V1046 = AND V1045 0xffffffffffffffffffffffffffffffffffffffff
0xb1d: V1047 = BALANCE V1046
0xb20: V1048 = LT V1047 S1
0xb21: V1049 = 0x4c4
0xb24: THROWI V1048
---
Entry stack: [S2, S1, S0]
Stack pops: 8
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xb25
[0xb25:0xb7f]
---
Predecessors: [0xb0d]
Successors: [0xb80]
---
0xb25 PUSH1 0x40
0xb27 DUP1
0xb28 MLOAD
0xb29 DUP4
0xb2a DUP2
0xb2b MSTORE
0xb2c SWAP1
0xb2d MLOAD
0xb2e PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb4f SWAP2
0xb50 DUP2
0xb51 SWAP1
0xb52 SUB
0xb53 PUSH1 0x20
0xb55 ADD
0xb56 SWAP1
0xb57 LOG1
0xb58 PUSH1 0x40
0xb5a MLOAD
0xb5b PUSH1 0x0
0xb5d DUP1
0xb5e SLOAD
0xb5f PUSH1 0x1
0xb61 PUSH1 0xa0
0xb63 PUSH1 0x2
0xb65 EXP
0xb66 SUB
0xb67 AND
0xb68 SWAP2
0xb69 DUP5
0xb6a ISZERO
0xb6b PUSH2 0x8fc
0xb6e MUL
0xb6f SWAP2
0xb70 DUP6
0xb71 SWAP2
0xb72 SWAP1
0xb73 DUP2
0xb74 DUP2
0xb75 DUP2
0xb76 DUP6
0xb77 DUP9
0xb78 DUP9
0xb79 CALL
0xb7a SWAP5
0xb7b POP
0xb7c POP
0xb7d POP
0xb7e POP
0xb7f POP
---
0xb25: V1050 = 0x40
0xb28: V1051 = M[0x40]
0xb2b: M[V1051] = S1
0xb2d: V1052 = M[0x40]
0xb2e: V1053 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb52: V1054 = SUB V1051 V1052
0xb53: V1055 = 0x20
0xb55: V1056 = ADD 0x20 V1054
0xb57: LOG V1052 V1056 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0xb58: V1057 = 0x40
0xb5a: V1058 = M[0x40]
0xb5b: V1059 = 0x0
0xb5e: V1060 = S[0x0]
0xb5f: V1061 = 0x1
0xb61: V1062 = 0xa0
0xb63: V1063 = 0x2
0xb65: V1064 = EXP 0x2 0xa0
0xb66: V1065 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb67: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffff V1060
0xb6a: V1067 = ISZERO S1
0xb6b: V1068 = 0x8fc
0xb6e: V1069 = MUL 0x8fc V1067
0xb79: V1070 = CALL V1069 V1066 S1 V1058 0x0 V1058 0x0
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, V1070]
Exit stack: [S1, V1070]

================================

Block 0xb80
[0xb80:0xbc2]
---
Predecessors: [0xb25]
Successors: [0xbc3]
---
0xb80 JUMPDEST
0xb81 SWAP2
0xb82 SWAP1
0xb83 POP
0xb84 JUMP
0xb85 JUMPDEST
0xb86 DUP3
0xb87 PUSH1 0x1
0xb89 PUSH1 0xa0
0xb8b PUSH1 0x2
0xb8d EXP
0xb8e SUB
0xb8f AND
0xb90 PUSH4 0x8da5cb5b
0xb95 PUSH1 0x0
0xb97 PUSH1 0x40
0xb99 MLOAD
0xb9a PUSH1 0x20
0xb9c ADD
0xb9d MSTORE
0xb9e PUSH1 0x40
0xba0 MLOAD
0xba1 DUP2
0xba2 PUSH1 0xe0
0xba4 PUSH1 0x2
0xba6 EXP
0xba7 MUL
0xba8 DUP2
0xba9 MSTORE
0xbaa PUSH1 0x4
0xbac ADD
0xbad DUP1
0xbae SWAP1
0xbaf POP
0xbb0 PUSH1 0x20
0xbb2 PUSH1 0x40
0xbb4 MLOAD
0xbb5 DUP1
0xbb6 DUP4
0xbb7 SUB
0xbb8 DUP2
0xbb9 PUSH1 0x0
0xbbb DUP8
0xbbc DUP1
0xbbd EXTCODESIZE
0xbbe ISZERO
0xbbf PUSH2 0x2
0xbc2 JUMPI
---
0xb80: JUMPDEST 
0xb84: JUMP S2
0xb85: JUMPDEST 
0xb87: V1071 = 0x1
0xb89: V1072 = 0xa0
0xb8b: V1073 = 0x2
0xb8d: V1074 = EXP 0x2 0xa0
0xb8e: V1075 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8f: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xb90: V1077 = 0x8da5cb5b
0xb95: V1078 = 0x0
0xb97: V1079 = 0x40
0xb99: V1080 = M[0x40]
0xb9a: V1081 = 0x20
0xb9c: V1082 = ADD 0x20 V1080
0xb9d: M[V1082] = 0x0
0xb9e: V1083 = 0x40
0xba0: V1084 = M[0x40]
0xba2: V1085 = 0xe0
0xba4: V1086 = 0x2
0xba6: V1087 = EXP 0x2 0xe0
0xba7: V1088 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xba9: M[V1084] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xbaa: V1089 = 0x4
0xbac: V1090 = ADD 0x4 V1084
0xbb0: V1091 = 0x20
0xbb2: V1092 = 0x40
0xbb4: V1093 = M[0x40]
0xbb7: V1094 = SUB V1090 V1093
0xbb9: V1095 = 0x0
0xbbd: V1096 = EXTCODESIZE V1076
0xbbe: V1097 = ISZERO V1096
0xbbf: V1098 = 0x2
0xbc2: THROWI V1097
---
Entry stack: [S1, V1070]
Stack pops: 5
Stack additions: [V1076, 0x0, V1093, V1094, V1093, 0x20, V1090, 0x8da5cb5b, V1076, S0, S1, S2]
Exit stack: []

================================

Block 0xbc3
[0xbc3:0xbcc]
---
Predecessors: [0xb80]
Successors: [0xbcd]
---
0xbc3 PUSH1 0x32
0xbc5 GAS
0xbc6 SUB
0xbc7 CALL
0xbc8 ISZERO
0xbc9 PUSH2 0x2
0xbcc JUMPI
---
0xbc3: V1099 = 0x32
0xbc5: V1100 = GAS
0xbc6: V1101 = SUB V1100 0x32
0xbc7: V1102 = CALL V1101 V1076 0x0 V1093 V1094 V1093 0x20
0xbc8: V1103 = ISZERO V1102
0xbc9: V1104 = 0x2
0xbcc: THROWI V1103
---
Entry stack: [S11, S10, S9, V1076, 0x8da5cb5b, V1090, 0x20, V1093, V1094, V1093, 0x0, V1076]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1076, 0x8da5cb5b, V1090]

================================

Block 0xbcd
[0xbcd:0xbeb]
---
Predecessors: [0xbc3]
Successors: [0xbec]
---
0xbcd POP
0xbce POP
0xbcf PUSH1 0x40
0xbd1 MLOAD
0xbd2 MLOAD
0xbd3 PUSH1 0x0
0xbd5 SLOAD
0xbd6 PUSH1 0x1
0xbd8 PUSH1 0xa0
0xbda PUSH1 0x2
0xbdc EXP
0xbdd SUB
0xbde SWAP1
0xbdf DUP2
0xbe0 AND
0xbe1 SWAP2
0xbe2 AND
0xbe3 EQ
0xbe4 ISZERO
0xbe5 SWAP1
0xbe6 POP
0xbe7 DUP1
0xbe8 PUSH2 0x592
0xbeb JUMPI
---
0xbcf: V1105 = 0x40
0xbd1: V1106 = M[0x40]
0xbd2: V1107 = M[V1106]
0xbd3: V1108 = 0x0
0xbd5: V1109 = S[0x0]
0xbd6: V1110 = 0x1
0xbd8: V1111 = 0xa0
0xbda: V1112 = 0x2
0xbdc: V1113 = EXP 0x2 0xa0
0xbdd: V1114 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe0: V1115 = AND 0xffffffffffffffffffffffffffffffffffffffff V1109
0xbe2: V1116 = AND V1107 0xffffffffffffffffffffffffffffffffffffffff
0xbe3: V1117 = EQ V1116 V1115
0xbe4: V1118 = ISZERO V1117
0xbe8: V1119 = 0x592
0xbeb: THROWI V1118
---
Entry stack: [S5, S4, S3, V1076, 0x8da5cb5b, V1090]
Stack pops: 3
Stack additions: [V1118]
Exit stack: [S5, S4, S3, V1118]

================================

Block 0xbec
[0xbec:0xc29]
---
Predecessors: [0xbcd]
Successors: [0xc2a]
---
0xbec POP
0xbed DUP3
0xbee PUSH1 0x1
0xbf0 PUSH1 0xa0
0xbf2 PUSH1 0x2
0xbf4 EXP
0xbf5 SUB
0xbf6 AND
0xbf7 PUSH4 0x38d52e0f
0xbfc PUSH1 0x0
0xbfe PUSH1 0x40
0xc00 MLOAD
0xc01 PUSH1 0x20
0xc03 ADD
0xc04 MSTORE
0xc05 PUSH1 0x40
0xc07 MLOAD
0xc08 DUP2
0xc09 PUSH1 0xe0
0xc0b PUSH1 0x2
0xc0d EXP
0xc0e MUL
0xc0f DUP2
0xc10 MSTORE
0xc11 PUSH1 0x4
0xc13 ADD
0xc14 DUP1
0xc15 SWAP1
0xc16 POP
0xc17 PUSH1 0x20
0xc19 PUSH1 0x40
0xc1b MLOAD
0xc1c DUP1
0xc1d DUP4
0xc1e SUB
0xc1f DUP2
0xc20 PUSH1 0x0
0xc22 DUP8
0xc23 DUP1
0xc24 EXTCODESIZE
0xc25 ISZERO
0xc26 PUSH2 0x2
0xc29 JUMPI
---
0xbee: V1120 = 0x1
0xbf0: V1121 = 0xa0
0xbf2: V1122 = 0x2
0xbf4: V1123 = EXP 0x2 0xa0
0xbf5: V1124 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf6: V1125 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xbf7: V1126 = 0x38d52e0f
0xbfc: V1127 = 0x0
0xbfe: V1128 = 0x40
0xc00: V1129 = M[0x40]
0xc01: V1130 = 0x20
0xc03: V1131 = ADD 0x20 V1129
0xc04: M[V1131] = 0x0
0xc05: V1132 = 0x40
0xc07: V1133 = M[0x40]
0xc09: V1134 = 0xe0
0xc0b: V1135 = 0x2
0xc0d: V1136 = EXP 0x2 0xe0
0xc0e: V1137 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0xc10: M[V1133] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0xc11: V1138 = 0x4
0xc13: V1139 = ADD 0x4 V1133
0xc17: V1140 = 0x20
0xc19: V1141 = 0x40
0xc1b: V1142 = M[0x40]
0xc1e: V1143 = SUB V1139 V1142
0xc20: V1144 = 0x0
0xc24: V1145 = EXTCODESIZE V1125
0xc25: V1146 = ISZERO V1145
0xc26: V1147 = 0x2
0xc29: THROWI V1146
---
Entry stack: [S3, S2, S1, V1118]
Stack pops: 4
Stack additions: [S3, S2, S1, V1125, 0x38d52e0f, V1139, 0x20, V1142, V1143, V1142, 0x0, V1125]
Exit stack: [S3, S2, S1, V1125, 0x38d52e0f, V1139, 0x20, V1142, V1143, V1142, 0x0, V1125]

================================

Block 0xc2a
[0xc2a:0xc33]
---
Predecessors: [0xbec]
Successors: [0xc34]
---
0xc2a PUSH1 0x32
0xc2c GAS
0xc2d SUB
0xc2e CALL
0xc2f ISZERO
0xc30 PUSH2 0x2
0xc33 JUMPI
---
0xc2a: V1148 = 0x32
0xc2c: V1149 = GAS
0xc2d: V1150 = SUB V1149 0x32
0xc2e: V1151 = CALL V1150 V1125 0x0 V1142 V1143 V1142 0x20
0xc2f: V1152 = ISZERO V1151
0xc30: V1153 = 0x2
0xc33: THROWI V1152
---
Entry stack: [S11, S10, S9, V1125, 0x38d52e0f, V1139, 0x20, V1142, V1143, V1142, 0x0, V1125]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1125, 0x38d52e0f, V1139]

================================

Block 0xc34
[0xc34:0xc4d]
---
Predecessors: [0xc2a]
Successors: [0xc4e]
---
0xc34 POP
0xc35 POP
0xc36 PUSH1 0x40
0xc38 MLOAD
0xc39 MLOAD
0xc3a PUSH1 0x1
0xc3c SLOAD
0xc3d PUSH1 0x1
0xc3f PUSH1 0xa0
0xc41 PUSH1 0x2
0xc43 EXP
0xc44 SUB
0xc45 SWAP1
0xc46 DUP2
0xc47 AND
0xc48 SWAP2
0xc49 AND
0xc4a EQ
0xc4b ISZERO
0xc4c SWAP1
0xc4d POP
---
0xc36: V1154 = 0x40
0xc38: V1155 = M[0x40]
0xc39: V1156 = M[V1155]
0xc3a: V1157 = 0x1
0xc3c: V1158 = S[0x1]
0xc3d: V1159 = 0x1
0xc3f: V1160 = 0xa0
0xc41: V1161 = 0x2
0xc43: V1162 = EXP 0x2 0xa0
0xc44: V1163 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc47: V1164 = AND 0xffffffffffffffffffffffffffffffffffffffff V1158
0xc49: V1165 = AND V1156 0xffffffffffffffffffffffffffffffffffffffff
0xc4a: V1166 = EQ V1165 V1164
0xc4b: V1167 = ISZERO V1166
---
Entry stack: [S5, S4, S3, V1125, 0x38d52e0f, V1139]
Stack pops: 3
Stack additions: [V1167]
Exit stack: [S5, S4, S3, V1167]

================================

Block 0xc4e
[0xc4e:0xc53]
---
Predecessors: [0xc34]
Successors: [0xc54]
---
0xc4e JUMPDEST
0xc4f ISZERO
0xc50 PUSH2 0x59c
0xc53 JUMPI
---
0xc4e: JUMPDEST 
0xc4f: V1168 = ISZERO V1167
0xc50: V1169 = 0x59c
0xc53: THROWI V1168
---
Entry stack: [S3, S2, S1, V1167]
Stack pops: 1
Stack additions: []
Exit stack: [S3, S2, S1]

================================

Block 0xc54
[0xc54:0xd07]
---
Predecessors: [0xc4e]
Successors: [0xd08]
---
0xc54 PUSH2 0x2
0xc57 JUMP
0xc58 JUMPDEST
0xc59 PUSH1 0x40
0xc5b DUP1
0xc5c MLOAD
0xc5d PUSH1 0x1
0xc5f PUSH1 0xa0
0xc61 PUSH1 0x2
0xc63 EXP
0xc64 SUB
0xc65 DUP6
0xc66 AND
0xc67 DUP2
0xc68 MSTORE
0xc69 PUSH1 0x20
0xc6b DUP2
0xc6c ADD
0xc6d DUP5
0xc6e SWAP1
0xc6f MSTORE
0xc70 DUP2
0xc71 MLOAD
0xc72 PUSH32 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0xc93 SWAP3
0xc94 SWAP2
0xc95 DUP2
0xc96 SWAP1
0xc97 SUB
0xc98 SWAP1
0xc99 SWAP2
0xc9a ADD
0xc9b SWAP1
0xc9c LOG1
0xc9d PUSH1 0x1
0xc9f PUSH1 0x0
0xca1 SWAP1
0xca2 SLOAD
0xca3 SWAP1
0xca4 PUSH2 0x100
0xca7 EXP
0xca8 SWAP1
0xca9 DIV
0xcaa PUSH1 0x1
0xcac PUSH1 0xa0
0xcae PUSH1 0x2
0xcb0 EXP
0xcb1 SUB
0xcb2 AND
0xcb3 PUSH1 0x1
0xcb5 PUSH1 0xa0
0xcb7 PUSH1 0x2
0xcb9 EXP
0xcba SUB
0xcbb AND
0xcbc PUSH4 0xa9059cbb
0xcc1 DUP5
0xcc2 DUP5
0xcc3 PUSH1 0x0
0xcc5 PUSH1 0x40
0xcc7 MLOAD
0xcc8 PUSH1 0x20
0xcca ADD
0xccb MSTORE
0xccc PUSH1 0x40
0xcce MLOAD
0xccf DUP4
0xcd0 PUSH1 0xe0
0xcd2 PUSH1 0x2
0xcd4 EXP
0xcd5 MUL
0xcd6 DUP2
0xcd7 MSTORE
0xcd8 PUSH1 0x4
0xcda ADD
0xcdb DUP1
0xcdc DUP4
0xcdd PUSH1 0x1
0xcdf PUSH1 0xa0
0xce1 PUSH1 0x2
0xce3 EXP
0xce4 SUB
0xce5 AND
0xce6 DUP2
0xce7 MSTORE
0xce8 PUSH1 0x20
0xcea ADD
0xceb DUP3
0xcec DUP2
0xced MSTORE
0xcee PUSH1 0x20
0xcf0 ADD
0xcf1 SWAP3
0xcf2 POP
0xcf3 POP
0xcf4 POP
0xcf5 PUSH1 0x20
0xcf7 PUSH1 0x40
0xcf9 MLOAD
0xcfa DUP1
0xcfb DUP4
0xcfc SUB
0xcfd DUP2
0xcfe PUSH1 0x0
0xd00 DUP8
0xd01 DUP1
0xd02 EXTCODESIZE
0xd03 ISZERO
0xd04 PUSH2 0x2
0xd07 JUMPI
---
0xc54: V1170 = 0x2
0xc57: THROW 
0xc58: JUMPDEST 
0xc59: V1171 = 0x40
0xc5c: V1172 = M[0x40]
0xc5d: V1173 = 0x1
0xc5f: V1174 = 0xa0
0xc61: V1175 = 0x2
0xc63: V1176 = EXP 0x2 0xa0
0xc64: V1177 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc66: V1178 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc68: M[V1172] = V1178
0xc69: V1179 = 0x20
0xc6c: V1180 = ADD V1172 0x20
0xc6f: M[V1180] = S1
0xc71: V1181 = M[0x40]
0xc72: V1182 = 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0xc97: V1183 = SUB V1172 V1181
0xc9a: V1184 = ADD 0x40 V1183
0xc9c: LOG V1181 V1184 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0xc9d: V1185 = 0x1
0xc9f: V1186 = 0x0
0xca2: V1187 = S[0x1]
0xca4: V1188 = 0x100
0xca7: V1189 = EXP 0x100 0x0
0xca9: V1190 = DIV V1187 0x1
0xcaa: V1191 = 0x1
0xcac: V1192 = 0xa0
0xcae: V1193 = 0x2
0xcb0: V1194 = EXP 0x2 0xa0
0xcb1: V1195 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb2: V1196 = AND 0xffffffffffffffffffffffffffffffffffffffff V1190
0xcb3: V1197 = 0x1
0xcb5: V1198 = 0xa0
0xcb7: V1199 = 0x2
0xcb9: V1200 = EXP 0x2 0xa0
0xcba: V1201 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcbb: V1202 = AND 0xffffffffffffffffffffffffffffffffffffffff V1196
0xcbc: V1203 = 0xa9059cbb
0xcc3: V1204 = 0x0
0xcc5: V1205 = 0x40
0xcc7: V1206 = M[0x40]
0xcc8: V1207 = 0x20
0xcca: V1208 = ADD 0x20 V1206
0xccb: M[V1208] = 0x0
0xccc: V1209 = 0x40
0xcce: V1210 = M[0x40]
0xcd0: V1211 = 0xe0
0xcd2: V1212 = 0x2
0xcd4: V1213 = EXP 0x2 0xe0
0xcd5: V1214 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xcd7: M[V1210] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xcd8: V1215 = 0x4
0xcda: V1216 = ADD 0x4 V1210
0xcdd: V1217 = 0x1
0xcdf: V1218 = 0xa0
0xce1: V1219 = 0x2
0xce3: V1220 = EXP 0x2 0xa0
0xce4: V1221 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce5: V1222 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xce7: M[V1216] = V1222
0xce8: V1223 = 0x20
0xcea: V1224 = ADD 0x20 V1216
0xced: M[V1224] = S1
0xcee: V1225 = 0x20
0xcf0: V1226 = ADD 0x20 V1224
0xcf5: V1227 = 0x20
0xcf7: V1228 = 0x40
0xcf9: V1229 = M[0x40]
0xcfc: V1230 = SUB V1226 V1229
0xcfe: V1231 = 0x0
0xd02: V1232 = EXTCODESIZE V1202
0xd03: V1233 = ISZERO V1232
0xd04: V1234 = 0x2
0xd07: THROWI V1233
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V1202, 0x0, V1229, V1230, V1229, 0x20, V1226, 0xa9059cbb, V1202, S0, S1, S2]
Exit stack: []

================================

Block 0xd08
[0xd08:0xd11]
---
Predecessors: [0xc54]
Successors: [0xd12]
---
0xd08 PUSH1 0x32
0xd0a GAS
0xd0b SUB
0xd0c CALL
0xd0d ISZERO
0xd0e PUSH2 0x2
0xd11 JUMPI
---
0xd08: V1235 = 0x32
0xd0a: V1236 = GAS
0xd0b: V1237 = SUB V1236 0x32
0xd0c: V1238 = CALL V1237 V1202 0x0 V1229 V1230 V1229 0x20
0xd0d: V1239 = ISZERO V1238
0xd0e: V1240 = 0x2
0xd11: THROWI V1239
---
Entry stack: [S11, S10, S9, V1202, 0xa9059cbb, V1226, 0x20, V1229, V1230, V1229, 0x0, V1202]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1202, 0xa9059cbb, V1226]

================================

Block 0xd12
[0xd12:0xd1a]
---
Predecessors: [0xd08]
Successors: [0xd1b]
---
0xd12 POP
0xd13 POP
0xd14 PUSH1 0x40
0xd16 MLOAD
0xd17 MLOAD
0xd18 SWAP2
0xd19 POP
0xd1a POP
---
0xd14: V1241 = 0x40
0xd16: V1242 = M[0x40]
0xd17: V1243 = M[V1242]
---
Entry stack: [S5, S4, S3, V1202, 0xa9059cbb, V1226]
Stack pops: 4
Stack additions: [V1243]
Exit stack: [S5, S4, V1243]

================================

Block 0xd1b
[0xd1b:0xdbf]
---
Predecessors: [0xd12]
Successors: [0xdc0]
---
0xd1b JUMPDEST
0xd1c SWAP3
0xd1d SWAP2
0xd1e POP
0xd1f POP
0xd20 JUMP
0xd21 JUMPDEST
0xd22 PUSH1 0x40
0xd24 DUP1
0xd25 MLOAD
0xd26 PUSH1 0x1
0xd28 PUSH1 0xa0
0xd2a PUSH1 0x2
0xd2c EXP
0xd2d SUB
0xd2e DUP6
0xd2f AND
0xd30 DUP2
0xd31 MSTORE
0xd32 PUSH1 0x20
0xd34 DUP2
0xd35 ADD
0xd36 DUP5
0xd37 SWAP1
0xd38 MSTORE
0xd39 DUP2
0xd3a MLOAD
0xd3b PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xd5c SWAP3
0xd5d SWAP2
0xd5e DUP2
0xd5f SWAP1
0xd60 SUB
0xd61 SWAP1
0xd62 SWAP2
0xd63 ADD
0xd64 SWAP1
0xd65 LOG1
0xd66 PUSH1 0x40
0xd68 DUP1
0xd69 MLOAD
0xd6a PUSH1 0x0
0xd6c DUP1
0xd6d SLOAD
0xd6e PUSH1 0x20
0xd70 SWAP3
0xd71 DUP4
0xd72 ADD
0xd73 DUP3
0xd74 SWAP1
0xd75 MSTORE
0xd76 DUP4
0xd77 MLOAD
0xd78 PUSH1 0xe0
0xd7a PUSH1 0x2
0xd7c EXP
0xd7d PUSH4 0xa9059cbb
0xd82 MUL
0xd83 DUP2
0xd84 MSTORE
0xd85 PUSH1 0x1
0xd87 PUSH1 0xa0
0xd89 PUSH1 0x2
0xd8b EXP
0xd8c SUB
0xd8d SWAP2
0xd8e DUP3
0xd8f AND
0xd90 PUSH1 0x4
0xd92 DUP3
0xd93 ADD
0xd94 MSTORE
0xd95 PUSH1 0x24
0xd97 DUP2
0xd98 ADD
0xd99 DUP8
0xd9a SWAP1
0xd9b MSTORE
0xd9c SWAP4
0xd9d MLOAD
0xd9e SWAP1
0xd9f DUP8
0xda0 AND
0xda1 SWAP4
0xda2 PUSH4 0xa9059cbb
0xda7 SWAP4
0xda8 PUSH1 0x44
0xdaa DUP1
0xdab DUP4
0xdac ADD
0xdad SWAP5
0xdae SWAP2
0xdaf SWAP4
0xdb0 SWAP3
0xdb1 DUP4
0xdb2 SWAP1
0xdb3 SUB
0xdb4 ADD
0xdb5 SWAP1
0xdb6 DUP3
0xdb7 SWAP1
0xdb8 DUP8
0xdb9 DUP1
0xdba EXTCODESIZE
0xdbb ISZERO
0xdbc PUSH2 0x2
0xdbf JUMPI
---
0xd1b: JUMPDEST 
0xd20: JUMP S3
0xd21: JUMPDEST 
0xd22: V1244 = 0x40
0xd25: V1245 = M[0x40]
0xd26: V1246 = 0x1
0xd28: V1247 = 0xa0
0xd2a: V1248 = 0x2
0xd2c: V1249 = EXP 0x2 0xa0
0xd2d: V1250 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2f: V1251 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xd31: M[V1245] = V1251
0xd32: V1252 = 0x20
0xd35: V1253 = ADD V1245 0x20
0xd38: M[V1253] = S1
0xd3a: V1254 = M[0x40]
0xd3b: V1255 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xd60: V1256 = SUB V1245 V1254
0xd63: V1257 = ADD 0x40 V1256
0xd65: LOG V1254 V1257 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0xd66: V1258 = 0x40
0xd69: V1259 = M[0x40]
0xd6a: V1260 = 0x0
0xd6d: V1261 = S[0x0]
0xd6e: V1262 = 0x20
0xd72: V1263 = ADD 0x20 V1259
0xd75: M[V1263] = 0x0
0xd77: V1264 = M[0x40]
0xd78: V1265 = 0xe0
0xd7a: V1266 = 0x2
0xd7c: V1267 = EXP 0x2 0xe0
0xd7d: V1268 = 0xa9059cbb
0xd82: V1269 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xd84: M[V1264] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd85: V1270 = 0x1
0xd87: V1271 = 0xa0
0xd89: V1272 = 0x2
0xd8b: V1273 = EXP 0x2 0xa0
0xd8c: V1274 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8f: V1275 = AND 0xffffffffffffffffffffffffffffffffffffffff V1261
0xd90: V1276 = 0x4
0xd93: V1277 = ADD V1264 0x4
0xd94: M[V1277] = V1275
0xd95: V1278 = 0x24
0xd98: V1279 = ADD V1264 0x24
0xd9b: M[V1279] = S1
0xd9d: V1280 = M[0x40]
0xda0: V1281 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xda2: V1282 = 0xa9059cbb
0xda8: V1283 = 0x44
0xdac: V1284 = ADD V1264 0x44
0xdb3: V1285 = SUB V1264 V1280
0xdb4: V1286 = ADD V1285 0x44
0xdba: V1287 = EXTCODESIZE V1281
0xdbb: V1288 = ISZERO V1287
0xdbc: V1289 = 0x2
0xdbf: THROWI V1288
---
Entry stack: [S2, S1, V1243]
Stack pops: 7
Stack additions: [V1281, 0x0, V1280, V1286, V1280, 0x20, V1284, 0xa9059cbb, V1281, S0, S1, S2]
Exit stack: []

================================

Block 0xdc0
[0xdc0:0xdc9]
---
Predecessors: [0xd1b]
Successors: [0xdca]
---
0xdc0 PUSH1 0x32
0xdc2 GAS
0xdc3 SUB
0xdc4 CALL
0xdc5 ISZERO
0xdc6 PUSH2 0x2
0xdc9 JUMPI
---
0xdc0: V1290 = 0x32
0xdc2: V1291 = GAS
0xdc3: V1292 = SUB V1291 0x32
0xdc4: V1293 = CALL V1292 V1281 0x0 V1280 V1286 V1280 0x20
0xdc5: V1294 = ISZERO V1293
0xdc6: V1295 = 0x2
0xdc9: THROWI V1294
---
Entry stack: [S11, S10, S9, V1281, 0xa9059cbb, V1284, 0x20, V1280, V1286, V1280, 0x0, V1281]
Stack pops: 6
Stack additions: []
Exit stack: [S11, S10, S9, V1281, 0xa9059cbb, V1284]

================================

Block 0xdca
[0xdca:0xe68]
---
Predecessors: [0xdc0]
Successors: [0xe69]
---
0xdca POP
0xdcb POP
0xdcc PUSH1 0x40
0xdce MLOAD
0xdcf MLOAD
0xdd0 SWAP2
0xdd1 POP
0xdd2 PUSH2 0x65f
0xdd5 SWAP1
0xdd6 POP
0xdd7 JUMP
0xdd8 JUMPDEST
0xdd9 PUSH1 0x40
0xddb DUP1
0xddc MLOAD
0xddd DUP4
0xdde DUP2
0xddf MSTORE
0xde0 SWAP1
0xde1 MLOAD
0xde2 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xe03 SWAP2
0xe04 DUP2
0xe05 SWAP1
0xe06 SUB
0xe07 PUSH1 0x20
0xe09 ADD
0xe0a SWAP1
0xe0b LOG1
0xe0c PUSH1 0x40
0xe0e DUP1
0xe0f MLOAD
0xe10 PUSH1 0x1
0xe12 SLOAD
0xe13 PUSH1 0x0
0xe15 DUP1
0xe16 SLOAD
0xe17 PUSH1 0x20
0xe19 SWAP4
0xe1a DUP5
0xe1b ADD
0xe1c DUP3
0xe1d SWAP1
0xe1e MSTORE
0xe1f DUP5
0xe20 MLOAD
0xe21 PUSH1 0xe0
0xe23 PUSH1 0x2
0xe25 EXP
0xe26 PUSH4 0xa9059cbb
0xe2b MUL
0xe2c DUP2
0xe2d MSTORE
0xe2e PUSH1 0x1
0xe30 PUSH1 0xa0
0xe32 PUSH1 0x2
0xe34 EXP
0xe35 SUB
0xe36 SWAP2
0xe37 DUP3
0xe38 AND
0xe39 PUSH1 0x4
0xe3b DUP3
0xe3c ADD
0xe3d MSTORE
0xe3e PUSH1 0x24
0xe40 DUP2
0xe41 ADD
0xe42 DUP9
0xe43 SWAP1
0xe44 MSTORE
0xe45 SWAP5
0xe46 MLOAD
0xe47 SWAP3
0xe48 AND
0xe49 SWAP4
0xe4a PUSH4 0xa9059cbb
0xe4f SWAP4
0xe50 PUSH1 0x44
0xe52 DUP1
0xe53 DUP4
0xe54 ADD
0xe55 SWAP5
0xe56 SWAP2
0xe57 SWAP4
0xe58 SWAP2
0xe59 SWAP3
0xe5a DUP4
0xe5b SWAP1
0xe5c SUB
0xe5d ADD
0xe5e SWAP1
0xe5f DUP3
0xe60 SWAP1
0xe61 DUP8
0xe62 DUP1
0xe63 EXTCODESIZE
0xe64 ISZERO
0xe65 PUSH2 0x2
0xe68 JUMPI
---
0xdcc: V1296 = 0x40
0xdce: V1297 = M[0x40]
0xdcf: V1298 = M[V1297]
0xdd2: V1299 = 0x65f
0xdd7: THROW 
0xdd8: JUMPDEST 
0xdd9: V1300 = 0x40
0xddc: V1301 = M[0x40]
0xddf: M[V1301] = S1
0xde1: V1302 = M[0x40]
0xde2: V1303 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xe06: V1304 = SUB V1301 V1302
0xe07: V1305 = 0x20
0xe09: V1306 = ADD 0x20 V1304
0xe0b: LOG V1302 V1306 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0xe0c: V1307 = 0x40
0xe0f: V1308 = M[0x40]
0xe10: V1309 = 0x1
0xe12: V1310 = S[0x1]
0xe13: V1311 = 0x0
0xe16: V1312 = S[0x0]
0xe17: V1313 = 0x20
0xe1b: V1314 = ADD 0x20 V1308
0xe1e: M[V1314] = 0x0
0xe20: V1315 = M[0x40]
0xe21: V1316 = 0xe0
0xe23: V1317 = 0x2
0xe25: V1318 = EXP 0x2 0xe0
0xe26: V1319 = 0xa9059cbb
0xe2b: V1320 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xe2d: M[V1315] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xe2e: V1321 = 0x1
0xe30: V1322 = 0xa0
0xe32: V1323 = 0x2
0xe34: V1324 = EXP 0x2 0xa0
0xe35: V1325 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe38: V1326 = AND 0xffffffffffffffffffffffffffffffffffffffff V1312
0xe39: V1327 = 0x4
0xe3c: V1328 = ADD V1315 0x4
0xe3d: M[V1328] = V1326
0xe3e: V1329 = 0x24
0xe41: V1330 = ADD V1315 0x24
0xe44: M[V1330] = S1
0xe46: V1331 = M[0x40]
0xe48: V1332 = AND V1310 0xffffffffffffffffffffffffffffffffffffffff
0xe4a: V1333 = 0xa9059cbb
0xe50: V1334 = 0x44
0xe54: V1335 = ADD V1315 0x44
0xe5c: V1336 = SUB V1315 V1331
0xe5d: V1337 = ADD V1336 0x44
0xe63: V1338 = EXTCODESIZE V1332
0xe64: V1339 = ISZERO V1338
0xe65: V1340 = 0x2
0xe68: THROWI V1339
---
Entry stack: [S5, S4, S3, V1281, 0xa9059cbb, V1284]
Stack pops: 7
Stack additions: [V1332, 0x0, V1331, V1337, V1331, 0x20, V1335, 0xa9059cbb, V1332, S0, S1]
Exit stack: []

================================

Block 0xe69
[0xe69:0xe72]
---
Predecessors: [0xdca]
Successors: [0xe73]
---
0xe69 PUSH1 0x32
0xe6b GAS
0xe6c SUB
0xe6d CALL
0xe6e ISZERO
0xe6f PUSH2 0x2
0xe72 JUMPI
---
0xe69: V1341 = 0x32
0xe6b: V1342 = GAS
0xe6c: V1343 = SUB V1342 0x32
0xe6d: V1344 = CALL V1343 V1332 0x0 V1331 V1337 V1331 0x20
0xe6e: V1345 = ISZERO V1344
0xe6f: V1346 = 0x2
0xe72: THROWI V1345
---
Entry stack: [S10, S9, V1332, 0xa9059cbb, V1335, 0x20, V1331, V1337, V1331, 0x0, V1332]
Stack pops: 6
Stack additions: []
Exit stack: [S10, S9, V1332, 0xa9059cbb, V1335]

================================

Block 0xe73
[0xe73:0xf40]
---
Predecessors: [0xe69]
Successors: []
Has unresolved jump.
---
0xe73 POP
0xe74 POP
0xe75 PUSH1 0x40
0xe77 MLOAD
0xe78 MLOAD
0xe79 SWAP2
0xe7a POP
0xe7b PUSH2 0x4c4
0xe7e SWAP1
0xe7f POP
0xe80 JUMP
0xe81 JUMPDEST
0xe82 PUSH1 0x4
0xe84 DUP1
0xe85 SLOAD
0xe86 PUSH1 0xff
0xe88 NOT
0xe89 AND
0xe8a PUSH1 0xf8
0xe8c PUSH1 0x2
0xe8e EXP
0xe8f DUP4
0xe90 DUP2
0xe91 MUL
0xe92 DIV
0xe93 OR
0xe94 SWAP1
0xe95 DUP2
0xe96 SWAP1
0xe97 SSTORE
0xe98 PUSH1 0x40
0xe9a DUP1
0xe9b MLOAD
0xe9c PUSH1 0xff
0xe9e SWAP1
0xe9f SWAP3
0xea0 AND
0xea1 ISZERO
0xea2 ISZERO
0xea3 DUP3
0xea4 MSTORE
0xea5 MLOAD
0xea6 PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0xec7 SWAP2
0xec8 PUSH1 0x20
0xeca SWAP1
0xecb DUP3
0xecc SWAP1
0xecd SUB
0xece ADD
0xecf SWAP1
0xed0 LOG1
0xed1 POP
0xed2 JUMP
0xed3 JUMPDEST
0xed4 PUSH1 0x0
0xed6 DUP1
0xed7 SLOAD
0xed8 PUSH1 0x40
0xeda MLOAD
0xedb PUSH1 0x1
0xedd PUSH1 0xa0
0xedf PUSH1 0x2
0xee1 EXP
0xee2 SUB
0xee3 DUP1
0xee4 DUP6
0xee5 AND
0xee6 SWAP4
0xee7 SWAP3
0xee8 AND
0xee9 SWAP2
0xeea PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xf0b SWAP2
0xf0c LOG3
0xf0d PUSH1 0x0
0xf0f DUP1
0xf10 SLOAD
0xf11 PUSH13 0x1000000000000000000000000
0xf1f DUP1
0xf20 DUP5
0xf21 MUL
0xf22 DIV
0xf23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf38 NOT
0xf39 SWAP1
0xf3a SWAP2
0xf3b AND
0xf3c OR
0xf3d SWAP1
0xf3e SSTORE
0xf3f POP
0xf40 JUMP
---
0xe75: V1347 = 0x40
0xe77: V1348 = M[0x40]
0xe78: V1349 = M[V1348]
0xe7b: V1350 = 0x4c4
0xe80: THROW 
0xe81: JUMPDEST 
0xe82: V1351 = 0x4
0xe85: V1352 = S[0x4]
0xe86: V1353 = 0xff
0xe88: V1354 = NOT 0xff
0xe89: V1355 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1352
0xe8a: V1356 = 0xf8
0xe8c: V1357 = 0x2
0xe8e: V1358 = EXP 0x2 0xf8
0xe91: V1359 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 S0
0xe92: V1360 = DIV V1359 0x100000000000000000000000000000000000000000000000000000000000000
0xe93: V1361 = OR V1360 V1355
0xe97: S[0x4] = V1361
0xe98: V1362 = 0x40
0xe9b: V1363 = M[0x40]
0xe9c: V1364 = 0xff
0xea0: V1365 = AND V1361 0xff
0xea1: V1366 = ISZERO V1365
0xea2: V1367 = ISZERO V1366
0xea4: M[V1363] = V1367
0xea5: V1368 = M[0x40]
0xea6: V1369 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0xec8: V1370 = 0x20
0xecd: V1371 = SUB V1363 V1368
0xece: V1372 = ADD V1371 0x20
0xed0: LOG V1368 V1372 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0xed2: JUMP S1
0xed3: JUMPDEST 
0xed4: V1373 = 0x0
0xed7: V1374 = S[0x0]
0xed8: V1375 = 0x40
0xeda: V1376 = M[0x40]
0xedb: V1377 = 0x1
0xedd: V1378 = 0xa0
0xedf: V1379 = 0x2
0xee1: V1380 = EXP 0x2 0xa0
0xee2: V1381 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee5: V1382 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xee8: V1383 = AND V1374 0xffffffffffffffffffffffffffffffffffffffff
0xeea: V1384 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xf0c: LOG V1376 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1383 V1382
0xf0d: V1385 = 0x0
0xf10: V1386 = S[0x0]
0xf11: V1387 = 0x1000000000000000000000000
0xf21: V1388 = MUL S0 0x1000000000000000000000000
0xf22: V1389 = DIV V1388 0x1000000000000000000000000
0xf23: V1390 = 0xffffffffffffffffffffffffffffffffffffffff
0xf38: V1391 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf3b: V1392 = AND V1386 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xf3c: V1393 = OR V1392 V1389
0xf3e: S[0x0] = V1393
0xf40: JUMP S1
---
Entry stack: [S4, S3, V1332, 0xa9059cbb, V1335]
Stack pops: 14
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x5de01497
Entry block: 0x58
Exit block: 0x2dd
Body: 0x58, 0x5e, 0x7e, 0x2dd, 0x34e, 0x3fe, 0x408

Function 1:
Public function signature: 0x63a9c3d7
Entry block: 0x82
Exit block: 0x2f1
Body: 0x82, 0x88, 0xb6, 0xf6, 0x100, 0x14e, 0x158, 0x1a6, 0x1b0, 0x1fe, 0x208, 0x256, 0x260, 0x269, 0x2f1

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x273
Exit block: 0x332
Body: 0x273, 0x279, 0x332

Function 3:
Public function signature: 0xc5e412e5
Entry block: 0x28a
Exit block: 0x332
Body: 0x28a, 0x290, 0x2b1, 0x332, 0x415, 0x41e, 0x422, 0x42b, 0x42f, 0x47b, 0x4f3, 0x4fd

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x2b5
Exit block: 0x2db
Body: 0x2b5, 0x2bb, 0x2d7, 0x2db, 0x55d

Function 5:
Public fallback function
Entry block: 0x4b
Exit block: 0x51
Body: 0x4b, 0x51

