Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5e
0xa: JUMPI 0x5e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xeb]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x6dbf2fa0
0x34 EQ
0x35 PUSH2 0xeb
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x6dbf2fa0
0x34: V10 = EQ 0x6dbf2fa0 V8
0x35: V11 = 0xeb
0x38: JUMPI 0xeb V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0x153]
---
0x39 DUP1
0x3a PUSH4 0x8da5cb5b
0x3f EQ
0x40 PUSH2 0x153
0x43 JUMPI
---
0x3a: V12 = 0x8da5cb5b
0x3f: V13 = EQ 0x8da5cb5b V8
0x40: V14 = 0x153
0x43: JUMPI 0x153 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x18c]
---
0x44 DUP1
0x45 PUSH4 0xa6f9dae1
0x4a EQ
0x4b PUSH2 0x18c
0x4e JUMPI
---
0x45: V15 = 0xa6f9dae1
0x4a: V16 = EQ 0xa6f9dae1 V8
0x4b: V17 = 0x18c
0x4e: JUMPI 0x18c V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x1a4]
---
0x4f DUP1
0x50 PUSH4 0xdf32754b
0x55 EQ
0x56 PUSH2 0x1a4
0x59 JUMPI
---
0x50: V18 = 0xdf32754b
0x55: V19 = EQ 0xdf32754b V8
0x56: V20 = 0x1a4
0x59: JUMPI 0x1a4 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x5d]
---
Predecessors: [0x4f]
Successors: [0x5e]
---
0x5a PUSH2 0x5e
0x5d JUMP
---
0x5a: V21 = 0x5e
0x5d: JUMP 0x5e
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x5e
[0x5e:0x61]
---
Predecessors: [0x0, 0x5a]
Successors: [0x62]
---
0x5e JUMPDEST
0x5f PUSH2 0xd3
---
0x5e: JUMPDEST 
0x5f: V22 = 0xd3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V8, 0xd3]

================================

Block 0x62
[0x62:0xcf]
---
Predecessors: [0x5e]
Successors: [0xd0]
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 PUSH1 0x0
0x67 PUSH1 0x0
0x69 SWAP1
0x6a SLOAD
0x6b SWAP1
0x6c PUSH2 0x100
0x6f EXP
0x70 SWAP1
0x71 DIV
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d AND
0x9e CALLVALUE
0x9f PUSH1 0x0
0xa1 CALLDATASIZE
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 DUP1
0xa6 DUP4
0xa7 DUP4
0xa8 DUP1
0xa9 DUP3
0xaa DUP5
0xab CALLDATACOPY
0xac DUP3
0xad ADD
0xae SWAP2
0xaf POP
0xb0 POP
0xb1 SWAP3
0xb2 POP
0xb3 POP
0xb4 POP
0xb5 PUSH1 0x0
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb DUP4
0xbc SUB
0xbd DUP2
0xbe DUP6
0xbf DUP8
0xc0 PUSH2 0x8502
0xc3 GAS
0xc4 SUB
0xc5 CALL
0xc6 SWAP3
0xc7 POP
0xc8 POP
0xc9 POP
0xca SWAP1
0xcb POP
0xcc PUSH2 0xd0
0xcf JUMP
---
0x62: JUMPDEST 
0x63: V23 = 0x0
0x65: V24 = 0x0
0x67: V25 = 0x0
0x6a: V26 = S[0x0]
0x6c: V27 = 0x100
0x6f: V28 = EXP 0x100 0x0
0x71: V29 = DIV V26 0x1
0x72: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x88: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x9e: V34 = CALLVALUE
0x9f: V35 = 0x0
0xa1: V36 = CALLDATASIZE
0xa2: V37 = 0x40
0xa4: V38 = M[0x40]
0xab: CALLDATACOPY V38 0x0 V36
0xad: V39 = ADD V38 V36
0xb5: V40 = 0x0
0xb7: V41 = 0x40
0xb9: V42 = M[0x40]
0xbc: V43 = SUB V39 V42
0xc0: V44 = 0x8502
0xc3: V45 = GAS
0xc4: V46 = SUB V45 0x8502
0xc5: V47 = CALL V46 V33 V34 V42 V43 V42 0x0
0xcc: V48 = 0xd0
0xcf: JUMP 0xd0
---
Entry stack: [V8, 0xd3]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V8, 0xd3, V47]

================================

Block 0xd0
[0xd0:0xd2]
---
Predecessors: [0x62]
Successors: [0xd3]
---
0xd0 JUMPDEST
0xd1 SWAP1
0xd2 JUMP
---
0xd0: JUMPDEST 
0xd2: JUMP 0xd3
---
Entry stack: [V8, 0xd3, V47]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V8, V47]

================================

Block 0xd3
[0xd3:0xea]
---
Predecessors: [0xd0]
Successors: []
---
0xd3 JUMPDEST
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 DUP1
0xd8 DUP3
0xd9 ISZERO
0xda ISZERO
0xdb DUP2
0xdc MSTORE
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP2
0xe1 POP
0xe2 POP
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 SWAP2
0xe8 SUB
0xe9 SWAP1
0xea RETURN
---
0xd3: JUMPDEST 
0xd4: V49 = 0x40
0xd6: V50 = M[0x40]
0xd9: V51 = ISZERO V47
0xda: V52 = ISZERO V51
0xdc: M[V50] = V52
0xdd: V53 = 0x20
0xdf: V54 = ADD 0x20 V50
0xe3: V55 = 0x40
0xe5: V56 = M[0x40]
0xe8: V57 = SUB V54 V56
0xea: RETURN V56 V57
---
Entry stack: [V8, V47]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xeb
[0xeb:0x150]
---
Predecessors: [0xb]
Successors: [0x1b3]
---
0xeb JUMPDEST
0xec PUSH2 0x151
0xef PUSH1 0x4
0xf1 DUP1
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 SWAP1
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 SWAP2
0xfa SWAP1
0xfb DUP1
0xfc CALLDATALOAD
0xfd SWAP1
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 SWAP2
0x103 SWAP1
0x104 DUP1
0x105 CALLDATALOAD
0x106 SWAP1
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP1
0x10b DUP3
0x10c ADD
0x10d DUP1
0x10e CALLDATALOAD
0x10f SWAP1
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP2
0x114 SWAP2
0x115 SWAP1
0x116 DUP1
0x117 DUP1
0x118 PUSH1 0x1f
0x11a ADD
0x11b PUSH1 0x20
0x11d DUP1
0x11e SWAP2
0x11f DIV
0x120 MUL
0x121 PUSH1 0x20
0x123 ADD
0x124 PUSH1 0x40
0x126 MLOAD
0x127 SWAP1
0x128 DUP2
0x129 ADD
0x12a PUSH1 0x40
0x12c MSTORE
0x12d DUP1
0x12e SWAP4
0x12f SWAP3
0x130 SWAP2
0x131 SWAP1
0x132 DUP2
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 DUP4
0x139 DUP4
0x13a DUP1
0x13b DUP3
0x13c DUP5
0x13d CALLDATACOPY
0x13e DUP3
0x13f ADD
0x140 SWAP2
0x141 POP
0x142 POP
0x143 POP
0x144 POP
0x145 POP
0x146 POP
0x147 SWAP1
0x148 SWAP1
0x149 SWAP2
0x14a SWAP1
0x14b POP
0x14c POP
0x14d PUSH2 0x1b3
0x150 JUMP
---
0xeb: JUMPDEST 
0xec: V58 = 0x151
0xef: V59 = 0x4
0xf3: V60 = CALLDATALOAD 0x4
0xf5: V61 = 0x20
0xf7: V62 = ADD 0x20 0x4
0xfc: V63 = CALLDATALOAD 0x24
0xfe: V64 = 0x20
0x100: V65 = ADD 0x20 0x24
0x105: V66 = CALLDATALOAD 0x44
0x107: V67 = 0x20
0x109: V68 = ADD 0x20 0x44
0x10c: V69 = ADD 0x4 V66
0x10e: V70 = CALLDATALOAD V69
0x110: V71 = 0x20
0x112: V72 = ADD 0x20 V69
0x118: V73 = 0x1f
0x11a: V74 = ADD 0x1f V70
0x11b: V75 = 0x20
0x11f: V76 = DIV V74 0x20
0x120: V77 = MUL V76 0x20
0x121: V78 = 0x20
0x123: V79 = ADD 0x20 V77
0x124: V80 = 0x40
0x126: V81 = M[0x40]
0x129: V82 = ADD V81 V79
0x12a: V83 = 0x40
0x12c: M[0x40] = V82
0x134: M[V81] = V70
0x135: V84 = 0x20
0x137: V85 = ADD 0x20 V81
0x13d: CALLDATACOPY V85 V72 V70
0x13f: V86 = ADD V85 V70
0x14d: V87 = 0x1b3
0x150: JUMP 0x1b3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x151, V60, V63, V81]
Exit stack: [V8, 0x151, V60, V63, V81]

================================

Block 0x151
[0x151:0x152]
---
Predecessors: [0x28b]
Successors: []
---
0x151 JUMPDEST
0x152 STOP
---
0x151: JUMPDEST 
0x152: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x153
[0x153:0x15f]
---
Predecessors: [0x39]
Successors: [0x290]
---
0x153 JUMPDEST
0x154 PUSH2 0x160
0x157 PUSH1 0x4
0x159 DUP1
0x15a POP
0x15b POP
0x15c PUSH2 0x290
0x15f JUMP
---
0x153: JUMPDEST 
0x154: V88 = 0x160
0x157: V89 = 0x4
0x15c: V90 = 0x290
0x15f: JUMP 0x290
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x160]
Exit stack: [V8, 0x160]

================================

Block 0x160
[0x160:0x18b]
---
Predecessors: [0x290]
Successors: []
---
0x160 JUMPDEST
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 DUP3
0x166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b AND
0x17c DUP2
0x17d MSTORE
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP2
0x182 POP
0x183 POP
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 SWAP2
0x189 SUB
0x18a SWAP1
0x18b RETURN
---
0x160: JUMPDEST 
0x161: V91 = 0x40
0x163: V92 = M[0x40]
0x166: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x17d: M[V92] = V94
0x17e: V95 = 0x20
0x180: V96 = ADD 0x20 V92
0x184: V97 = 0x40
0x186: V98 = M[0x40]
0x189: V99 = SUB V96 V98
0x18b: RETURN V98 V99
---
Entry stack: [V8, 0x160, V175]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x160]

================================

Block 0x18c
[0x18c:0x1a1]
---
Predecessors: [0x44]
Successors: [0x2b6]
---
0x18c JUMPDEST
0x18d PUSH2 0x1a2
0x190 PUSH1 0x4
0x192 DUP1
0x193 DUP1
0x194 CALLDATALOAD
0x195 SWAP1
0x196 PUSH1 0x20
0x198 ADD
0x199 SWAP1
0x19a SWAP2
0x19b SWAP1
0x19c POP
0x19d POP
0x19e PUSH2 0x2b6
0x1a1 JUMP
---
0x18c: JUMPDEST 
0x18d: V100 = 0x1a2
0x190: V101 = 0x4
0x194: V102 = CALLDATALOAD 0x4
0x196: V103 = 0x20
0x198: V104 = ADD 0x20 0x4
0x19e: V105 = 0x2b6
0x1a1: JUMP 0x2b6
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1a2, V102]
Exit stack: [V8, 0x1a2, V102]

================================

Block 0x1a2
[0x1a2:0x1a3]
---
Predecessors: [0x339]
Successors: []
---
0x1a2 JUMPDEST
0x1a3 STOP
---
0x1a2: JUMPDEST 
0x1a3: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1a4
[0x1a4:0x1b0]
---
Predecessors: [0x4f]
Successors: [0x33c]
---
0x1a4 JUMPDEST
0x1a5 PUSH2 0x1b1
0x1a8 PUSH1 0x4
0x1aa DUP1
0x1ab POP
0x1ac POP
0x1ad PUSH2 0x33c
0x1b0 JUMP
---
0x1a4: JUMPDEST 
0x1a5: V106 = 0x1b1
0x1a8: V107 = 0x4
0x1ad: V108 = 0x33c
0x1b0: JUMP 0x33c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1b1]
Exit stack: [V8, 0x1b1]

================================

Block 0x1b1
[0x1b1:0x1b2]
---
Predecessors: [0x368]
Successors: []
---
0x1b1 JUMPDEST
0x1b2 STOP
---
0x1b1: JUMPDEST 
0x1b2: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1b3
[0x1b3:0x209]
---
Predecessors: [0xeb]
Successors: [0x20a, 0x28a]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x0
0x1b6 PUSH1 0x0
0x1b8 SWAP1
0x1b9 SLOAD
0x1ba SWAP1
0x1bb PUSH2 0x100
0x1be EXP
0x1bf SWAP1
0x1c0 DIV
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed CALLER
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 EQ
0x205 ISZERO
0x206 PUSH2 0x28a
0x209 JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V109 = 0x0
0x1b6: V110 = 0x0
0x1b9: V111 = S[0x0]
0x1bb: V112 = 0x100
0x1be: V113 = EXP 0x100 0x0
0x1c0: V114 = DIV V111 0x1
0x1c1: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1d7: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1ed: V119 = CALLER
0x1ee: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x204: V122 = EQ V121 V118
0x205: V123 = ISZERO V122
0x206: V124 = 0x28a
0x209: JUMPI 0x28a V123
---
Entry stack: [V8, 0x151, V60, V63, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x151, V60, V63, V81]

================================

Block 0x20a
[0x20a:0x255]
---
Predecessors: [0x1b3]
Successors: [0x256, 0x26f]
---
0x20a DUP3
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 DUP3
0x222 DUP3
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 DUP3
0x228 DUP1
0x229 MLOAD
0x22a SWAP1
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f DUP1
0x230 DUP4
0x231 DUP4
0x232 DUP3
0x233 SWAP1
0x234 PUSH1 0x0
0x236 PUSH1 0x4
0x238 PUSH1 0x20
0x23a DUP5
0x23b PUSH1 0x1f
0x23d ADD
0x23e DIV
0x23f PUSH1 0xf
0x241 MUL
0x242 PUSH1 0x3
0x244 ADD
0x245 CALL
0x246 POP
0x247 SWAP1
0x248 POP
0x249 SWAP1
0x24a DUP2
0x24b ADD
0x24c SWAP1
0x24d PUSH1 0x1f
0x24f AND
0x250 DUP1
0x251 ISZERO
0x252 PUSH2 0x26f
0x255 JUMPI
---
0x20b: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x223: V127 = 0x40
0x225: V128 = M[0x40]
0x229: V129 = M[V81]
0x22b: V130 = 0x20
0x22d: V131 = ADD 0x20 V81
0x234: V132 = 0x0
0x236: V133 = 0x4
0x238: V134 = 0x20
0x23b: V135 = 0x1f
0x23d: V136 = ADD 0x1f V129
0x23e: V137 = DIV V136 0x20
0x23f: V138 = 0xf
0x241: V139 = MUL 0xf V137
0x242: V140 = 0x3
0x244: V141 = ADD 0x3 V139
0x245: V142 = CALL V141 0x4 0x0 V131 V129 V128 V129
0x24b: V143 = ADD V129 V128
0x24d: V144 = 0x1f
0x24f: V145 = AND 0x1f V129
0x251: V146 = ISZERO V145
0x252: V147 = 0x26f
0x255: JUMPI 0x26f V146
---
Entry stack: [V8, 0x151, V60, V63, V81]
Stack pops: 3
Stack additions: [S2, S1, S0, V126, S1, S0, V128, V143, V145]
Exit stack: [V8, 0x151, V60, V63, V81, V126, V63, V81, V128, V143, V145]

================================

Block 0x256
[0x256:0x26e]
---
Predecessors: [0x20a]
Successors: [0x26f]
---
0x256 DUP1
0x257 DUP3
0x258 SUB
0x259 DUP1
0x25a MLOAD
0x25b PUSH1 0x1
0x25d DUP4
0x25e PUSH1 0x20
0x260 SUB
0x261 PUSH2 0x100
0x264 EXP
0x265 SUB
0x266 NOT
0x267 AND
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d SWAP2
0x26e POP
---
0x258: V148 = SUB V143 V145
0x25a: V149 = M[V148]
0x25b: V150 = 0x1
0x25e: V151 = 0x20
0x260: V152 = SUB 0x20 V145
0x261: V153 = 0x100
0x264: V154 = EXP 0x100 V152
0x265: V155 = SUB V154 0x1
0x266: V156 = NOT V155
0x267: V157 = AND V156 V149
0x269: M[V148] = V157
0x26a: V158 = 0x20
0x26c: V159 = ADD 0x20 V148
---
Entry stack: [V8, 0x151, V60, V63, V81, V126, V63, V81, V128, V143, V145]
Stack pops: 2
Stack additions: [V159, S0]
Exit stack: [V8, 0x151, V60, V63, V81, V126, V63, V81, V128, V159, V145]

================================

Block 0x26f
[0x26f:0x289]
---
Predecessors: [0x20a, 0x256]
Successors: [0x28a]
---
0x26f JUMPDEST
0x270 POP
0x271 SWAP2
0x272 POP
0x273 POP
0x274 PUSH1 0x0
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a DUP4
0x27b SUB
0x27c DUP2
0x27d DUP6
0x27e DUP8
0x27f PUSH2 0x8502
0x282 GAS
0x283 SUB
0x284 CALL
0x285 SWAP3
0x286 POP
0x287 POP
0x288 POP
0x289 POP
---
0x26f: JUMPDEST 
0x274: V160 = 0x0
0x276: V161 = 0x40
0x278: V162 = M[0x40]
0x27b: V163 = SUB S1 V162
0x27f: V164 = 0x8502
0x282: V165 = GAS
0x283: V166 = SUB V165 0x8502
0x284: V167 = CALL V166 V126 V63 V162 V163 V162 0x0
---
Entry stack: [V8, 0x151, V60, V63, V81, V126, V63, V81, V128, S1, V145]
Stack pops: 6
Stack additions: []
Exit stack: [V8, 0x151, V60, V63, V81]

================================

Block 0x28a
[0x28a:0x28a]
---
Predecessors: [0x1b3, 0x26f]
Successors: [0x28b]
---
0x28a JUMPDEST
---
0x28a: JUMPDEST 
---
Entry stack: [V8, 0x151, V60, V63, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x151, V60, V63, V81]

================================

Block 0x28b
[0x28b:0x28f]
---
Predecessors: [0x28a]
Successors: [0x151]
---
0x28b JUMPDEST
0x28c POP
0x28d POP
0x28e POP
0x28f JUMP
---
0x28b: JUMPDEST 
0x28f: JUMP 0x151
---
Entry stack: [V8, 0x151, V60, V63, V81]
Stack pops: 4
Stack additions: []
Exit stack: [V8]

================================

Block 0x290
[0x290:0x2b5]
---
Predecessors: [0x153]
Successors: [0x160]
---
0x290 JUMPDEST
0x291 PUSH1 0x0
0x293 PUSH1 0x0
0x295 SWAP1
0x296 SLOAD
0x297 SWAP1
0x298 PUSH2 0x100
0x29b EXP
0x29c SWAP1
0x29d DIV
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 DUP2
0x2b5 JUMP
---
0x290: JUMPDEST 
0x291: V168 = 0x0
0x293: V169 = 0x0
0x296: V170 = S[0x0]
0x298: V171 = 0x100
0x29b: V172 = EXP 0x100 0x0
0x29d: V173 = DIV V170 0x1
0x29e: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2b5: JUMP 0x160
---
Entry stack: [V8, 0x160]
Stack pops: 1
Stack additions: [S0, V175]
Exit stack: [V8, 0x160, V175]

================================

Block 0x2b6
[0x2b6:0x30c]
---
Predecessors: [0x18c]
Successors: [0x30d, 0x338]
---
0x2b6 JUMPDEST
0x2b7 PUSH1 0x0
0x2b9 PUSH1 0x0
0x2bb SWAP1
0x2bc SLOAD
0x2bd SWAP1
0x2be PUSH2 0x100
0x2c1 EXP
0x2c2 SWAP1
0x2c3 DIV
0x2c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d9 AND
0x2da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ef AND
0x2f0 CALLER
0x2f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x306 AND
0x307 EQ
0x308 ISZERO
0x309 PUSH2 0x338
0x30c JUMPI
---
0x2b6: JUMPDEST 
0x2b7: V176 = 0x0
0x2b9: V177 = 0x0
0x2bc: V178 = S[0x0]
0x2be: V179 = 0x100
0x2c1: V180 = EXP 0x100 0x0
0x2c3: V181 = DIV V178 0x1
0x2c4: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2da: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ef: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x2f0: V186 = CALLER
0x2f1: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x306: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x307: V189 = EQ V188 V185
0x308: V190 = ISZERO V189
0x309: V191 = 0x338
0x30c: JUMPI 0x338 V190
---
Entry stack: [V8, 0x1a2, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1a2, V102]

================================

Block 0x30d
[0x30d:0x337]
---
Predecessors: [0x2b6]
Successors: [0x338]
---
0x30d DUP1
0x30e PUSH1 0x0
0x310 PUSH1 0x0
0x312 PUSH2 0x100
0x315 EXP
0x316 DUP2
0x317 SLOAD
0x318 DUP2
0x319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32e MUL
0x32f NOT
0x330 AND
0x331 SWAP1
0x332 DUP4
0x333 MUL
0x334 OR
0x335 SWAP1
0x336 SSTORE
0x337 POP
---
0x30e: V192 = 0x0
0x310: V193 = 0x0
0x312: V194 = 0x100
0x315: V195 = EXP 0x100 0x0
0x317: V196 = S[0x0]
0x319: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V198 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x32f: V199 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x330: V200 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V196
0x333: V201 = MUL V102 0x1
0x334: V202 = OR V201 V200
0x336: S[0x0] = V202
---
Entry stack: [V8, 0x1a2, V102]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x1a2, V102]

================================

Block 0x338
[0x338:0x338]
---
Predecessors: [0x2b6, 0x30d]
Successors: [0x339]
---
0x338 JUMPDEST
---
0x338: JUMPDEST 
---
Entry stack: [V8, 0x1a2, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1a2, V102]

================================

Block 0x339
[0x339:0x33b]
---
Predecessors: [0x338]
Successors: [0x1a2]
---
0x339 JUMPDEST
0x33a POP
0x33b JUMP
---
0x339: JUMPDEST 
0x33b: JUMP 0x1a2
---
Entry stack: [V8, 0x1a2, V102]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x33c
[0x33c:0x367]
---
Predecessors: [0x1a4]
Successors: [0x368]
---
0x33c JUMPDEST
0x33d CALLER
0x33e PUSH1 0x0
0x340 PUSH1 0x0
0x342 PUSH2 0x100
0x345 EXP
0x346 DUP2
0x347 SLOAD
0x348 DUP2
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e MUL
0x35f NOT
0x360 AND
0x361 SWAP1
0x362 DUP4
0x363 MUL
0x364 OR
0x365 SWAP1
0x366 SSTORE
0x367 POP
---
0x33c: JUMPDEST 
0x33d: V203 = CALLER
0x33e: V204 = 0x0
0x340: V205 = 0x0
0x342: V206 = 0x100
0x345: V207 = EXP 0x100 0x0
0x347: V208 = S[0x0]
0x349: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V210 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x35f: V211 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x360: V212 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V208
0x363: V213 = MUL V203 0x1
0x364: V214 = OR V213 V212
0x366: S[0x0] = V214
---
Entry stack: [V8, 0x1b1]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1b1]

================================

Block 0x368
[0x368:0x369]
---
Predecessors: [0x33c]
Successors: [0x1b1]
---
0x368 JUMPDEST
0x369 JUMP
---
0x368: JUMPDEST 
0x369: JUMP 0x1b1
---
Entry stack: [V8, 0x1b1]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x6dbf2fa0
Entry block: 0xeb
Exit block: 0x151
Body: 0xeb, 0x151, 0x1b3, 0x20a, 0x256, 0x26f, 0x28a, 0x28b

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x153
Exit block: 0x160
Body: 0x153, 0x160, 0x290

Function 2:
Public function signature: 0xa6f9dae1
Entry block: 0x18c
Exit block: 0x1a2
Body: 0x18c, 0x1a2, 0x2b6, 0x30d, 0x338, 0x339

Function 3:
Public function signature: 0xdf32754b
Entry block: 0x1a4
Exit block: 0x1b1
Body: 0x1a4, 0x1b1, 0x33c, 0x368

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0xd3
Body: 0x5a, 0x5e, 0x62, 0xd0, 0xd3

