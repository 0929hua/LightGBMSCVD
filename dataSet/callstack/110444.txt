Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xbc]
---
0x41 DUP1
0x42 PUSH4 0xabd90f85
0x47 EQ
0x48 PUSH2 0xbc
0x4b JUMPI
---
0x42: V15 = 0xabd90f85
0x47: V16 = EQ 0xabd90f85 V11
0x48: V17 = 0xbc
0x4b: JUMPI 0xbc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x11f]
---
0x4c DUP1
0x4d PUSH4 0xce3f865f
0x52 EQ
0x53 PUSH2 0x11f
0x56 JUMPI
---
0x4d: V18 = 0xce3f865f
0x52: V19 = EQ 0xce3f865f V11
0x53: V20 = 0x11f
0x56: JUMPI 0x11f V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x156]
---
0x57 DUP1
0x58 PUSH4 0xf9850b72
0x5d EQ
0x5e PUSH2 0x156
0x61 JUMPI
---
0x58: V21 = 0xf9850b72
0x5d: V22 = EQ 0xf9850b72 V11
0x5e: V23 = 0x156
0x61: JUMPI 0x156 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x67]
Successors: [0x1ab]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x1ab
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0x7a
0x76: V30 = 0x1ab
0x79: JUMP 0x1ab
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0xbb]
---
Predecessors: [0x1ab]
Successors: []
---
0x7a JUMPDEST
0x7b PUSH1 0x40
0x7d MLOAD
0x7e DUP1
0x7f DUP3
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab AND
0xac DUP2
0xad MSTORE
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP2
0xb2 POP
0xb3 POP
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0x7a: JUMPDEST 
0x7b: V31 = 0x40
0x7d: V32 = M[0x40]
0x80: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x96: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xab: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xad: M[V32] = V36
0xae: V37 = 0x20
0xb0: V38 = ADD 0x20 V32
0xb4: V39 = 0x40
0xb6: V40 = M[0x40]
0xb9: V41 = SUB V38 V40
0xbb: RETURN V40 V41
---
Entry stack: [V11, 0x7a, V103]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x41]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V42 = CALLVALUE
0xbe: V43 = ISZERO V42
0xbf: V44 = 0xc7
0xc2: JUMPI 0xc7 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V45 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xdc]
---
Predecessors: [0xbc]
Successors: [0x1d0]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xdd
0xcb PUSH1 0x4
0xcd DUP1
0xce DUP1
0xcf CALLDATALOAD
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 PUSH2 0x1d0
0xdc JUMP
---
0xc7: JUMPDEST 
0xc8: V46 = 0xdd
0xcb: V47 = 0x4
0xcf: V48 = CALLDATALOAD 0x4
0xd1: V49 = 0x20
0xd3: V50 = ADD 0x20 0x4
0xd9: V51 = 0x1d0
0xdc: JUMP 0x1d0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdd, V48]
Exit stack: [V11, 0xdd, V48]

================================

Block 0xdd
[0xdd:0x11e]
---
Predecessors: [0x1df]
Successors: []
---
0xdd JUMPDEST
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP3
0xe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8 AND
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP2
0x115 POP
0x116 POP
0x117 PUSH1 0x40
0x119 MLOAD
0x11a DUP1
0x11b SWAP2
0x11c SUB
0x11d SWAP1
0x11e RETURN
---
0xdd: JUMPDEST 
0xde: V52 = 0x40
0xe0: V53 = M[0x40]
0xe3: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0xf9: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x110: M[V53] = V57
0x111: V58 = 0x20
0x113: V59 = ADD 0x20 V53
0x117: V60 = 0x40
0x119: V61 = M[0x40]
0x11c: V62 = SUB V59 V61
0x11e: RETURN V61 V62
---
Entry stack: [V11, 0xdd, V121]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xdd]

================================

Block 0x11f
[0x11f:0x125]
---
Predecessors: [0x4c]
Successors: [0x126, 0x12a]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x11f: JUMPDEST 
0x120: V63 = CALLVALUE
0x121: V64 = ISZERO V63
0x122: V65 = 0x12a
0x125: JUMPI 0x12a V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x11f]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V66 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12a
[0x12a:0x13f]
---
Predecessors: [0x11f]
Successors: [0x20f]
---
0x12a JUMPDEST
0x12b PUSH2 0x140
0x12e PUSH1 0x4
0x130 DUP1
0x131 DUP1
0x132 CALLDATALOAD
0x133 SWAP1
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 SWAP2
0x139 SWAP1
0x13a POP
0x13b POP
0x13c PUSH2 0x20f
0x13f JUMP
---
0x12a: JUMPDEST 
0x12b: V67 = 0x140
0x12e: V68 = 0x4
0x132: V69 = CALLDATALOAD 0x4
0x134: V70 = 0x20
0x136: V71 = ADD 0x20 0x4
0x13c: V72 = 0x20f
0x13f: JUMP 0x20f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x140, V69]
Exit stack: [V11, 0x140, V69]

================================

Block 0x140
[0x140:0x155]
---
Predecessors: [0x444]
Successors: []
---
0x140 JUMPDEST
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 DUP3
0x146 DUP2
0x147 MSTORE
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP2
0x14c POP
0x14d POP
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 SWAP2
0x153 SUB
0x154 SWAP1
0x155 RETURN
---
0x140: JUMPDEST 
0x141: V73 = 0x40
0x143: V74 = M[0x40]
0x147: M[V74] = S0
0x148: V75 = 0x20
0x14a: V76 = ADD 0x20 V74
0x14e: V77 = 0x40
0x150: V78 = M[0x40]
0x153: V79 = SUB V76 V78
0x155: RETURN V78 V79
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x156
[0x156:0x15c]
---
Predecessors: [0x57, 0x5f8]
Successors: [0x15d, 0x161]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x156: JUMPDEST 
0x157: V80 = CALLVALUE
0x158: V81 = ISZERO V80
0x159: V82 = 0x161
0x15c: JUMPI 0x161 V81
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x156]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V83 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x168]
---
Predecessors: [0x156]
Successors: [0x450]
---
0x161 JUMPDEST
0x162 PUSH2 0x169
0x165 PUSH2 0x450
0x168 JUMP
---
0x161: JUMPDEST 
0x162: V84 = 0x169
0x165: V85 = 0x450
0x168: JUMP 0x450
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V11, 0x169]

================================

Block 0x169
[0x169:0x1aa]
---
Predecessors: [0x450]
Successors: []
---
0x169 JUMPDEST
0x16a PUSH1 0x40
0x16c MLOAD
0x16d DUP1
0x16e DUP3
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a AND
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 SWAP2
0x1a1 POP
0x1a2 POP
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 SWAP2
0x1a8 SUB
0x1a9 SWAP1
0x1aa RETURN
---
0x169: JUMPDEST 
0x16a: V86 = 0x40
0x16c: V87 = M[0x40]
0x16f: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x185: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x19c: M[V87] = V91
0x19d: V92 = 0x20
0x19f: V93 = ADD 0x20 V87
0x1a3: V94 = 0x40
0x1a5: V95 = M[0x40]
0x1a8: V96 = SUB V93 V95
0x1aa: RETURN V95 V96
---
Entry stack: [V11, 0x169, V243]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x169]

================================

Block 0x1ab
[0x1ab:0x1cf]
---
Predecessors: [0x72]
Successors: [0x7a]
---
0x1ab JUMPDEST
0x1ac PUSH1 0x0
0x1ae DUP1
0x1af SWAP1
0x1b0 SLOAD
0x1b1 SWAP1
0x1b2 PUSH2 0x100
0x1b5 EXP
0x1b6 SWAP1
0x1b7 DIV
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce DUP2
0x1cf JUMP
---
0x1ab: JUMPDEST 
0x1ac: V97 = 0x0
0x1b0: V98 = S[0x0]
0x1b2: V99 = 0x100
0x1b5: V100 = EXP 0x100 0x0
0x1b7: V101 = DIV V98 0x1
0x1b8: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1cf: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: [S0, V103]
Exit stack: [V11, 0x7a, V103]

================================

Block 0x1d0
[0x1d0:0x1dd]
---
Predecessors: [0xc7]
Successors: [0x1de, 0x1df]
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x2
0x1d3 DUP2
0x1d4 DUP2
0x1d5 SLOAD
0x1d6 DUP2
0x1d7 LT
0x1d8 ISZERO
0x1d9 ISZERO
0x1da PUSH2 0x1df
0x1dd JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V104 = 0x2
0x1d5: V105 = S[0x2]
0x1d7: V106 = LT V48 V105
0x1d8: V107 = ISZERO V106
0x1d9: V108 = ISZERO V107
0x1da: V109 = 0x1df
0x1dd: JUMPI 0x1df V108
---
Entry stack: [V11, 0xdd, V48]
Stack pops: 1
Stack additions: [S0, 0x2, S0]
Exit stack: [V11, 0xdd, V48, 0x2, V48]

================================

Block 0x1de
[0x1de:0x1de]
---
Predecessors: [0x1d0]
Successors: []
---
0x1de INVALID
---
0x1de: INVALID 
---
Entry stack: [V11, 0xdd, V48, 0x2, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V48, 0x2, V48]

================================

Block 0x1df
[0x1df:0x20e]
---
Predecessors: [0x1d0]
Successors: [0xdd]
---
0x1df JUMPDEST
0x1e0 SWAP1
0x1e1 PUSH1 0x0
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 PUSH1 0x0
0x1e8 SHA3
0x1e9 SWAP1
0x1ea ADD
0x1eb PUSH1 0x0
0x1ed SWAP2
0x1ee POP
0x1ef SLOAD
0x1f0 SWAP1
0x1f1 PUSH2 0x100
0x1f4 EXP
0x1f5 SWAP1
0x1f6 DIV
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d DUP2
0x20e JUMP
---
0x1df: JUMPDEST 
0x1e1: V110 = 0x0
0x1e3: M[0x0] = 0x2
0x1e4: V111 = 0x20
0x1e6: V112 = 0x0
0x1e8: V113 = SHA3 0x0 0x20
0x1ea: V114 = ADD V48 V113
0x1eb: V115 = 0x0
0x1ef: V116 = S[V114]
0x1f1: V117 = 0x100
0x1f4: V118 = EXP 0x100 0x0
0x1f6: V119 = DIV V116 0x1
0x1f7: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x20e: JUMP 0xdd
---
Entry stack: [V11, 0xdd, V48, 0x2, V48]
Stack pops: 4
Stack additions: [S3, V121]
Exit stack: [V11, 0xdd, V121]

================================

Block 0x20f
[0x20f:0x21e]
---
Predecessors: [0x12a]
Successors: [0x21f]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 PUSH1 0x0
0x215 DUP1
0x216 PUSH1 0x0
0x218 DUP1
0x219 SWAP4
0x21a POP
0x21b PUSH1 0x0
0x21d SWAP3
0x21e POP
---
0x20f: JUMPDEST 
0x210: V122 = 0x0
0x213: V123 = 0x0
0x216: V124 = 0x0
0x21b: V125 = 0x0
---
Entry stack: [V11, 0x140, V69]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x140, V69, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x21f
[0x21f:0x227]
---
Predecessors: [0x20f, 0x3ce]
Successors: [0x228, 0x444]
---
0x21f JUMPDEST
0x220 DUP6
0x221 DUP4
0x222 LT
0x223 ISZERO
0x224 PUSH2 0x444
0x227 JUMPI
---
0x21f: JUMPDEST 
0x222: V126 = LT S2 V69
0x223: V127 = ISZERO V126
0x224: V128 = 0x444
0x227: JUMPI 0x444 V127
---
Entry stack: [V11, 0x140, V69, 0x0, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x140, V69, 0x0, S3, S2, S1, S0]

================================

Block 0x228
[0x228:0x250]
---
Predecessors: [0x21f]
Successors: [0x476]
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b SWAP1
0x22c SLOAD
0x22d SWAP1
0x22e PUSH2 0x100
0x231 EXP
0x232 SWAP1
0x233 DIV
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a PUSH2 0x251
0x24d PUSH2 0x476
0x250 JUMP
---
0x228: V129 = 0x0
0x22c: V130 = S[0x0]
0x22e: V131 = 0x100
0x231: V132 = EXP 0x100 0x0
0x233: V133 = DIV V130 0x1
0x234: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x24a: V136 = 0x251
0x24d: V137 = 0x476
0x250: JUMP 0x476
---
Entry stack: [V11, 0x140, V69, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V135, 0x251]
Exit stack: [V11, 0x140, V69, 0x0, S3, S2, S1, S0, V135, 0x251]

================================

Block 0x251
[0x251:0x298]
---
Predecessors: [0x476]
Successors: [0x299, 0x29d]
---
0x251 JUMPDEST
0x252 DUP1
0x253 DUP3
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 SWAP2
0x286 POP
0x287 POP
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c SWAP2
0x28d SUB
0x28e SWAP1
0x28f PUSH1 0x0
0x291 CREATE
0x292 DUP1
0x293 ISZERO
0x294 ISZERO
0x295 PUSH2 0x29d
0x298 JUMPI
---
0x251: JUMPDEST 
0x254: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x26a: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x281: M[V248] = V141
0x282: V142 = 0x20
0x284: V143 = ADD 0x20 V248
0x288: V144 = 0x40
0x28a: V145 = M[0x40]
0x28d: V146 = SUB V143 V145
0x28f: V147 = 0x0
0x291: V148 = CREATE 0x0 V145 V146
0x293: V149 = ISZERO V148
0x294: V150 = ISZERO V149
0x295: V151 = 0x29d
0x298: JUMPI 0x29d V150
---
Entry stack: [V11, 0x140, V69, 0x0, S5, S4, S3, S2, V135, V248]
Stack pops: 2
Stack additions: [V148]
Exit stack: [V11, 0x140, V69, 0x0, S5, S4, S3, S2, V148]

================================

Block 0x299
[0x299:0x29c]
---
Predecessors: [0x251]
Successors: []
---
0x299 PUSH1 0x0
0x29b DUP1
0x29c REVERT
---
0x299: V152 = 0x0
0x29c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x140, V69, 0x0, S4, S3, S2, S1, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x140, V69, 0x0, S4, S3, S2, S1, V148]

================================

Block 0x29d
[0x29d:0x3a0]
---
Predecessors: [0x251]
Successors: [0x3a1, 0x3a5]
---
0x29d JUMPDEST
0x29e SWAP2
0x29f POP
0x2a0 DUP2
0x2a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b6 AND
0x2b7 PUSH4 0x2692f25a
0x2bc PUSH1 0x1
0x2be PUSH1 0x0
0x2c0 SWAP1
0x2c1 SLOAD
0x2c2 SWAP1
0x2c3 PUSH2 0x100
0x2c6 EXP
0x2c7 SWAP1
0x2c8 DIV
0x2c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2de AND
0x2df PUSH1 0x0
0x2e1 DUP1
0x2e2 PUSH1 0x40
0x2e4 MLOAD
0x2e5 PUSH1 0x20
0x2e7 ADD
0x2e8 MSTORE
0x2e9 PUSH1 0x40
0x2eb MLOAD
0x2ec DUP4
0x2ed PUSH4 0xffffffff
0x2f2 AND
0x2f3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x311 MUL
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x4
0x316 ADD
0x317 DUP1
0x318 DUP4
0x319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32e AND
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x20
0x349 ADD
0x34a DUP3
0x34b DUP2
0x34c MSTORE
0x34d PUSH1 0x20
0x34f ADD
0x350 DUP1
0x351 PUSH1 0x20
0x353 ADD
0x354 DUP3
0x355 DUP2
0x356 SUB
0x357 DUP3
0x358 MSTORE
0x359 PUSH1 0x4
0x35b DUP2
0x35c MSTORE
0x35d PUSH1 0x20
0x35f ADD
0x360 DUP1
0x361 PUSH32 0x705b164f00000000000000000000000000000000000000000000000000000000
0x382 DUP2
0x383 MSTORE
0x384 POP
0x385 PUSH1 0x20
0x387 ADD
0x388 SWAP4
0x389 POP
0x38a POP
0x38b POP
0x38c POP
0x38d PUSH1 0x20
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP1
0x393 DUP4
0x394 SUB
0x395 DUP2
0x396 PUSH1 0x0
0x398 DUP8
0x399 DUP1
0x39a EXTCODESIZE
0x39b ISZERO
0x39c ISZERO
0x39d PUSH2 0x3a5
0x3a0 JUMPI
---
0x29d: JUMPDEST 
0x2a1: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2b7: V155 = 0x2692f25a
0x2bc: V156 = 0x1
0x2be: V157 = 0x0
0x2c1: V158 = S[0x1]
0x2c3: V159 = 0x100
0x2c6: V160 = EXP 0x100 0x0
0x2c8: V161 = DIV V158 0x1
0x2c9: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2df: V164 = 0x0
0x2e2: V165 = 0x40
0x2e4: V166 = M[0x40]
0x2e5: V167 = 0x20
0x2e7: V168 = ADD 0x20 V166
0x2e8: M[V168] = 0x0
0x2e9: V169 = 0x40
0x2eb: V170 = M[0x40]
0x2ed: V171 = 0xffffffff
0x2f2: V172 = AND 0xffffffff 0x2692f25a
0x2f3: V173 = 0x100000000000000000000000000000000000000000000000000000000
0x311: V174 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2692f25a
0x313: M[V170] = 0x2692f25a00000000000000000000000000000000000000000000000000000000
0x314: V175 = 0x4
0x316: V176 = ADD 0x4 V170
0x319: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x32f: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x346: M[V176] = V180
0x347: V181 = 0x20
0x349: V182 = ADD 0x20 V176
0x34c: M[V182] = 0x0
0x34d: V183 = 0x20
0x34f: V184 = ADD 0x20 V182
0x351: V185 = 0x20
0x353: V186 = ADD 0x20 V184
0x356: V187 = SUB V186 V176
0x358: M[V184] = V187
0x359: V188 = 0x4
0x35c: M[V186] = 0x4
0x35d: V189 = 0x20
0x35f: V190 = ADD 0x20 V186
0x361: V191 = 0x705b164f00000000000000000000000000000000000000000000000000000000
0x383: M[V190] = 0x705b164f00000000000000000000000000000000000000000000000000000000
0x385: V192 = 0x20
0x387: V193 = ADD 0x20 V190
0x38d: V194 = 0x20
0x38f: V195 = 0x40
0x391: V196 = M[0x40]
0x394: V197 = SUB V193 V196
0x396: V198 = 0x0
0x39a: V199 = EXTCODESIZE V154
0x39b: V200 = ISZERO V199
0x39c: V201 = ISZERO V200
0x39d: V202 = 0x3a5
0x3a0: JUMPI 0x3a5 V201
---
Entry stack: [V11, 0x140, V69, 0x0, S4, S3, S2, S1, V148]
Stack pops: 3
Stack additions: [S0, S1, V154, 0x2692f25a, V193, 0x20, V196, V197, V196, 0x0, V154]
Exit stack: [V11, 0x140, V69, 0x0, S4, S3, V148, S1, V154, 0x2692f25a, V193, 0x20, V196, V197, V196, 0x0, V154]

================================

Block 0x3a1
[0x3a1:0x3a4]
---
Predecessors: [0x29d]
Successors: []
---
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 REVERT
---
0x3a1: V203 = 0x0
0x3a4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x140, V69, 0x0, S12, S11, V148, S9, V154, 0x2692f25a, V193, 0x20, V196, V197, V196, 0x0, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x140, V69, 0x0, S12, S11, V148, S9, V154, 0x2692f25a, V193, 0x20, V196, V197, V196, 0x0, V154]

================================

Block 0x3a5
[0x3a5:0x3b1]
---
Predecessors: [0x29d]
Successors: [0x3b2, 0x3b6]
---
0x3a5 JUMPDEST
0x3a6 PUSH2 0x2c6
0x3a9 GAS
0x3aa SUB
0x3ab CALL
0x3ac ISZERO
0x3ad ISZERO
0x3ae PUSH2 0x3b6
0x3b1 JUMPI
---
0x3a5: JUMPDEST 
0x3a6: V204 = 0x2c6
0x3a9: V205 = GAS
0x3aa: V206 = SUB V205 0x2c6
0x3ab: V207 = CALL V206 V154 0x0 V196 V197 V196 0x20
0x3ac: V208 = ISZERO V207
0x3ad: V209 = ISZERO V208
0x3ae: V210 = 0x3b6
0x3b1: JUMPI 0x3b6 V209
---
Entry stack: [V11, 0x140, V69, 0x0, S12, S11, V148, S9, V154, 0x2692f25a, V193, 0x20, V196, V197, V196, 0x0, V154]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x140, V69, 0x0, S12, S11, V148, S9, V154, 0x2692f25a, V193]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x3a5]
Successors: []
---
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 REVERT
---
0x3b2: V211 = 0x0
0x3b5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x140, V69, 0x0, S6, S5, V148, S3, V154, 0x2692f25a, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x140, V69, 0x0, S6, S5, V148, S3, V154, 0x2692f25a, V193]

================================

Block 0x3b6
[0x3b6:0x3c9]
---
Predecessors: [0x3a5]
Successors: [0x3ca, 0x3ce]
---
0x3b6 JUMPDEST
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd DUP1
0x3be MLOAD
0x3bf SWAP1
0x3c0 POP
0x3c1 SWAP1
0x3c2 POP
0x3c3 DUP1
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3b6: JUMPDEST 
0x3ba: V212 = 0x40
0x3bc: V213 = M[0x40]
0x3be: V214 = M[V213]
0x3c4: V215 = ISZERO V214
0x3c5: V216 = ISZERO V215
0x3c6: V217 = 0x3ce
0x3c9: JUMPI 0x3ce V216
---
Entry stack: [V11, 0x140, V69, 0x0, S6, S5, V148, S3, V154, 0x2692f25a, V193]
Stack pops: 4
Stack additions: [V214]
Exit stack: [V11, 0x140, V69, 0x0, S6, S5, V148, V214]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3b6]
Successors: [0x444]
---
0x3ca PUSH2 0x444
0x3cd JUMP
---
0x3ca: V218 = 0x444
0x3cd: JUMP 0x444
---
Entry stack: [V11, 0x140, V69, 0x0, S3, S2, V148, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x140, V69, 0x0, S3, S2, V148, V214]

================================

Block 0x3ce
[0x3ce:0x443]
---
Predecessors: [0x3b6]
Successors: [0x21f]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x1
0x3d1 DUP5
0x3d2 ADD
0x3d3 SWAP4
0x3d4 POP
0x3d5 PUSH32 0x7a46f103e0030643418938032b77c1ee3fb4e8089dba972de759fb239246469c
0x3f6 DUP3
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa DUP1
0x3fb DUP3
0x3fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x411 AND
0x412 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x427 AND
0x428 DUP2
0x429 MSTORE
0x42a PUSH1 0x20
0x42c ADD
0x42d SWAP2
0x42e POP
0x42f POP
0x430 PUSH1 0x40
0x432 MLOAD
0x433 DUP1
0x434 SWAP2
0x435 SUB
0x436 SWAP1
0x437 LOG1
0x438 DUP3
0x439 DUP1
0x43a PUSH1 0x1
0x43c ADD
0x43d SWAP4
0x43e POP
0x43f POP
0x440 PUSH2 0x21f
0x443 JUMP
---
0x3ce: JUMPDEST 
0x3cf: V219 = 0x1
0x3d2: V220 = ADD S3 0x1
0x3d5: V221 = 0x7a46f103e0030643418938032b77c1ee3fb4e8089dba972de759fb239246469c
0x3f7: V222 = 0x40
0x3f9: V223 = M[0x40]
0x3fc: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x411: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x412: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x427: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x429: M[V223] = V227
0x42a: V228 = 0x20
0x42c: V229 = ADD 0x20 V223
0x430: V230 = 0x40
0x432: V231 = M[0x40]
0x435: V232 = SUB V229 V231
0x437: LOG V231 V232 0x7a46f103e0030643418938032b77c1ee3fb4e8089dba972de759fb239246469c
0x43a: V233 = 0x1
0x43c: V234 = ADD 0x1 S2
0x440: V235 = 0x21f
0x443: JUMP 0x21f
---
Entry stack: [V11, 0x140, V69, 0x0, S3, S2, V148, V214]
Stack pops: 4
Stack additions: [V220, V234, S1, S0]
Exit stack: [V11, 0x140, V69, 0x0, V220, V234, V148, V214]

================================

Block 0x444
[0x444:0x44f]
---
Predecessors: [0x21f, 0x3ca]
Successors: [0x140]
---
0x444 JUMPDEST
0x445 DUP4
0x446 SWAP5
0x447 POP
0x448 POP
0x449 POP
0x44a POP
0x44b POP
0x44c SWAP2
0x44d SWAP1
0x44e POP
0x44f JUMP
---
0x444: JUMPDEST 
0x44f: JUMP 0x140
---
Entry stack: [V11, 0x140, V69, 0x0, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V11, S3]

================================

Block 0x450
[0x450:0x475]
---
Predecessors: [0x161]
Successors: [0x169]
---
0x450 JUMPDEST
0x451 PUSH1 0x1
0x453 PUSH1 0x0
0x455 SWAP1
0x456 SLOAD
0x457 SWAP1
0x458 PUSH2 0x100
0x45b EXP
0x45c SWAP1
0x45d DIV
0x45e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x473 AND
0x474 DUP2
0x475 JUMP
---
0x450: JUMPDEST 
0x451: V236 = 0x1
0x453: V237 = 0x0
0x456: V238 = S[0x1]
0x458: V239 = 0x100
0x45b: V240 = EXP 0x100 0x0
0x45d: V241 = DIV V238 0x1
0x45e: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x473: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x475: JUMP 0x169
---
Entry stack: [V11, 0x169]
Stack pops: 1
Stack additions: [S0, V243]
Exit stack: [V11, 0x169, V243]

================================

Block 0x476
[0x476:0x485]
---
Predecessors: [0x228]
Successors: [0x251]
---
0x476 JUMPDEST
0x477 PUSH1 0x40
0x479 MLOAD
0x47a PUSH2 0x422
0x47d DUP1
0x47e PUSH2 0x487
0x481 DUP4
0x482 CODECOPY
0x483 ADD
0x484 SWAP1
0x485 JUMP
---
0x476: JUMPDEST 
0x477: V244 = 0x40
0x479: V245 = M[0x40]
0x47a: V246 = 0x422
0x47e: V247 = 0x487
0x482: CODECOPY V245 0x487 0x422
0x483: V248 = ADD 0x422 V245
0x485: JUMP 0x251
---
Entry stack: [V11, 0x140, V69, 0x0, S5, S4, S3, S2, V135, 0x251]
Stack pops: 1
Stack additions: [V248]
Exit stack: [V11, 0x140, V69, 0x0, S5, S4, S3, S2, V135, V248]

================================

Block 0x486
[0x486:0x491]
---
Predecessors: []
Successors: [0x492]
---
0x486 STOP
0x487 PUSH1 0x60
0x489 PUSH1 0x40
0x48b MSTORE
0x48c CALLVALUE
0x48d ISZERO
0x48e PUSH2 0xf
0x491 JUMPI
---
0x486: STOP 
0x487: V249 = 0x60
0x489: V250 = 0x40
0x48b: M[0x40] = 0x60
0x48c: V251 = CALLVALUE
0x48d: V252 = ISZERO V251
0x48e: V253 = 0xf
0x491: THROWI V252
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x492
[0x492:0x54f]
---
Predecessors: [0x486]
Successors: [0x550]
---
0x492 PUSH1 0x0
0x494 DUP1
0x495 REVERT
0x496 JUMPDEST
0x497 PUSH1 0x40
0x499 MLOAD
0x49a PUSH1 0x20
0x49c DUP1
0x49d PUSH2 0x422
0x4a0 DUP4
0x4a1 CODECOPY
0x4a2 DUP2
0x4a3 ADD
0x4a4 PUSH1 0x40
0x4a6 MSTORE
0x4a7 DUP1
0x4a8 DUP1
0x4a9 MLOAD
0x4aa SWAP1
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae SWAP1
0x4af SWAP2
0x4b0 SWAP1
0x4b1 POP
0x4b2 POP
0x4b3 DUP1
0x4b4 PUSH1 0x0
0x4b6 DUP1
0x4b7 PUSH2 0x100
0x4ba EXP
0x4bb DUP2
0x4bc SLOAD
0x4bd DUP2
0x4be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d3 MUL
0x4d4 NOT
0x4d5 AND
0x4d6 SWAP1
0x4d7 DUP4
0x4d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ed AND
0x4ee MUL
0x4ef OR
0x4f0 SWAP1
0x4f1 SSTORE
0x4f2 POP
0x4f3 CALLER
0x4f4 PUSH1 0x1
0x4f6 PUSH1 0x0
0x4f8 PUSH2 0x100
0x4fb EXP
0x4fc DUP2
0x4fd SLOAD
0x4fe DUP2
0x4ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x514 MUL
0x515 NOT
0x516 AND
0x517 SWAP1
0x518 DUP4
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f MUL
0x530 OR
0x531 SWAP1
0x532 SSTORE
0x533 POP
0x534 POP
0x535 PUSH2 0x366
0x538 DUP1
0x539 PUSH2 0xbc
0x53c PUSH1 0x0
0x53e CODECOPY
0x53f PUSH1 0x0
0x541 RETURN
0x542 STOP
0x543 PUSH1 0x60
0x545 PUSH1 0x40
0x547 MSTORE
0x548 PUSH1 0x4
0x54a CALLDATASIZE
0x54b LT
0x54c PUSH2 0x57
0x54f JUMPI
---
0x492: V254 = 0x0
0x495: REVERT 0x0 0x0
0x496: JUMPDEST 
0x497: V255 = 0x40
0x499: V256 = M[0x40]
0x49a: V257 = 0x20
0x49d: V258 = 0x422
0x4a1: CODECOPY V256 0x422 0x20
0x4a3: V259 = ADD V256 0x20
0x4a4: V260 = 0x40
0x4a6: M[0x40] = V259
0x4a9: V261 = M[V256]
0x4ab: V262 = 0x20
0x4ad: V263 = ADD 0x20 V256
0x4b4: V264 = 0x0
0x4b7: V265 = 0x100
0x4ba: V266 = EXP 0x100 0x0
0x4bc: V267 = S[0x0]
0x4be: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: V269 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4d4: V270 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V271 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V267
0x4d8: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ed: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x4ee: V274 = MUL V273 0x1
0x4ef: V275 = OR V274 V271
0x4f1: S[0x0] = V275
0x4f3: V276 = CALLER
0x4f4: V277 = 0x1
0x4f6: V278 = 0x0
0x4f8: V279 = 0x100
0x4fb: V280 = EXP 0x100 0x0
0x4fd: V281 = S[0x1]
0x4ff: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x514: V283 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x515: V284 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x516: V285 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V281
0x519: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x52f: V288 = MUL V287 0x1
0x530: V289 = OR V288 V285
0x532: S[0x1] = V289
0x535: V290 = 0x366
0x539: V291 = 0xbc
0x53c: V292 = 0x0
0x53e: CODECOPY 0x0 0xbc 0x366
0x53f: V293 = 0x0
0x541: RETURN 0x0 0x366
0x542: STOP 
0x543: V294 = 0x60
0x545: V295 = 0x40
0x547: M[0x40] = 0x60
0x548: V296 = 0x4
0x54a: V297 = CALLDATASIZE
0x54b: V298 = LT V297 0x4
0x54c: V299 = 0x57
0x54f: THROWI V298
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x550
[0x550:0x583]
---
Predecessors: [0x492]
Successors: [0x584]
---
0x550 PUSH1 0x0
0x552 CALLDATALOAD
0x553 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x571 SWAP1
0x572 DIV
0x573 PUSH4 0xffffffff
0x578 AND
0x579 DUP1
0x57a PUSH4 0x2d05d3f
0x57f EQ
0x580 PUSH2 0x59
0x583 JUMPI
---
0x550: V300 = 0x0
0x552: V301 = CALLDATALOAD 0x0
0x553: V302 = 0x100000000000000000000000000000000000000000000000000000000
0x572: V303 = DIV V301 0x100000000000000000000000000000000000000000000000000000000
0x573: V304 = 0xffffffff
0x578: V305 = AND 0xffffffff V303
0x57a: V306 = 0x2d05d3f
0x57f: V307 = EQ 0x2d05d3f V305
0x580: V308 = 0x59
0x583: THROWI V307
---
Entry stack: []
Stack pops: 0
Stack additions: [V305]
Exit stack: [V305]

================================

Block 0x584
[0x584:0x58e]
---
Predecessors: [0x550]
Successors: [0x58f]
---
0x584 DUP1
0x585 PUSH4 0x2692f25a
0x58a EQ
0x58b PUSH2 0xae
0x58e JUMPI
---
0x585: V309 = 0x2692f25a
0x58a: V310 = EQ 0x2692f25a V305
0x58b: V311 = 0xae
0x58e: THROWI V310
---
Entry stack: [V305]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V305]

================================

Block 0x58f
[0x58f:0x599]
---
Predecessors: [0x584]
Successors: [0x59a]
---
0x58f DUP1
0x590 PUSH4 0x8da5cb5b
0x595 EQ
0x596 PUSH2 0x14b
0x599 JUMPI
---
0x590: V312 = 0x8da5cb5b
0x595: V313 = EQ 0x8da5cb5b V305
0x596: V314 = 0x14b
0x599: THROWI V313
---
Entry stack: [V305]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V305]

================================

Block 0x59a
[0x59a:0x5a2]
---
Predecessors: [0x58f]
Successors: [0x5a3]
---
0x59a JUMPDEST
0x59b STOP
0x59c JUMPDEST
0x59d CALLVALUE
0x59e ISZERO
0x59f PUSH2 0x64
0x5a2 JUMPI
---
0x59a: JUMPDEST 
0x59b: STOP 
0x59c: JUMPDEST 
0x59d: V315 = CALLVALUE
0x59e: V316 = ISZERO V315
0x59f: V317 = 0x64
0x5a2: THROWI V316
---
Entry stack: [V305]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5a3
[0x5a3:0x5f7]
---
Predecessors: [0x59a]
Successors: [0x5f8]
---
0x5a3 PUSH1 0x0
0x5a5 DUP1
0x5a6 REVERT
0x5a7 JUMPDEST
0x5a8 PUSH2 0x6c
0x5ab PUSH2 0x1a0
0x5ae JUMP
0x5af JUMPDEST
0x5b0 PUSH1 0x40
0x5b2 MLOAD
0x5b3 DUP1
0x5b4 DUP3
0x5b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ca AND
0x5cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e0 AND
0x5e1 DUP2
0x5e2 MSTORE
0x5e3 PUSH1 0x20
0x5e5 ADD
0x5e6 SWAP2
0x5e7 POP
0x5e8 POP
0x5e9 PUSH1 0x40
0x5eb MLOAD
0x5ec DUP1
0x5ed SWAP2
0x5ee SUB
0x5ef SWAP1
0x5f0 RETURN
0x5f1 JUMPDEST
0x5f2 CALLVALUE
0x5f3 ISZERO
0x5f4 PUSH2 0xb9
0x5f7 JUMPI
---
0x5a3: V318 = 0x0
0x5a6: REVERT 0x0 0x0
0x5a7: JUMPDEST 
0x5a8: V319 = 0x6c
0x5ab: V320 = 0x1a0
0x5ae: THROW 
0x5af: JUMPDEST 
0x5b0: V321 = 0x40
0x5b2: V322 = M[0x40]
0x5b5: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5cb: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e0: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x5e2: M[V322] = V326
0x5e3: V327 = 0x20
0x5e5: V328 = ADD 0x20 V322
0x5e9: V329 = 0x40
0x5eb: V330 = M[0x40]
0x5ee: V331 = SUB V328 V330
0x5f0: RETURN V330 V331
0x5f1: JUMPDEST 
0x5f2: V332 = CALLVALUE
0x5f3: V333 = ISZERO V332
0x5f4: V334 = 0xb9
0x5f7: THROWI V333
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6c]
Exit stack: []

================================

Block 0x5f8
[0x5f8:0x694]
---
Predecessors: [0x5a3]
Successors: [0x156, 0x695]
---
0x5f8 PUSH1 0x0
0x5fa DUP1
0x5fb REVERT
0x5fc JUMPDEST
0x5fd PUSH2 0x131
0x600 PUSH1 0x4
0x602 DUP1
0x603 DUP1
0x604 CALLDATALOAD
0x605 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61a AND
0x61b SWAP1
0x61c PUSH1 0x20
0x61e ADD
0x61f SWAP1
0x620 SWAP2
0x621 SWAP1
0x622 DUP1
0x623 CALLDATALOAD
0x624 SWAP1
0x625 PUSH1 0x20
0x627 ADD
0x628 SWAP1
0x629 SWAP2
0x62a SWAP1
0x62b DUP1
0x62c CALLDATALOAD
0x62d SWAP1
0x62e PUSH1 0x20
0x630 ADD
0x631 SWAP1
0x632 DUP3
0x633 ADD
0x634 DUP1
0x635 CALLDATALOAD
0x636 SWAP1
0x637 PUSH1 0x20
0x639 ADD
0x63a SWAP1
0x63b DUP1
0x63c DUP1
0x63d PUSH1 0x1f
0x63f ADD
0x640 PUSH1 0x20
0x642 DUP1
0x643 SWAP2
0x644 DIV
0x645 MUL
0x646 PUSH1 0x20
0x648 ADD
0x649 PUSH1 0x40
0x64b MLOAD
0x64c SWAP1
0x64d DUP2
0x64e ADD
0x64f PUSH1 0x40
0x651 MSTORE
0x652 DUP1
0x653 SWAP4
0x654 SWAP3
0x655 SWAP2
0x656 SWAP1
0x657 DUP2
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x20
0x65c ADD
0x65d DUP4
0x65e DUP4
0x65f DUP1
0x660 DUP3
0x661 DUP5
0x662 CALLDATACOPY
0x663 DUP3
0x664 ADD
0x665 SWAP2
0x666 POP
0x667 POP
0x668 POP
0x669 POP
0x66a POP
0x66b POP
0x66c SWAP2
0x66d SWAP1
0x66e POP
0x66f POP
0x670 PUSH2 0x1c6
0x673 JUMP
0x674 JUMPDEST
0x675 PUSH1 0x40
0x677 MLOAD
0x678 DUP1
0x679 DUP3
0x67a ISZERO
0x67b ISZERO
0x67c ISZERO
0x67d ISZERO
0x67e DUP2
0x67f MSTORE
0x680 PUSH1 0x20
0x682 ADD
0x683 SWAP2
0x684 POP
0x685 POP
0x686 PUSH1 0x40
0x688 MLOAD
0x689 DUP1
0x68a SWAP2
0x68b SUB
0x68c SWAP1
0x68d RETURN
0x68e JUMPDEST
0x68f CALLVALUE
0x690 ISZERO
0x691 PUSH2 0x156
0x694 JUMPI
---
0x5f8: V335 = 0x0
0x5fb: REVERT 0x0 0x0
0x5fc: JUMPDEST 
0x5fd: V336 = 0x131
0x600: V337 = 0x4
0x604: V338 = CALLDATALOAD 0x4
0x605: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x61a: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x61c: V341 = 0x20
0x61e: V342 = ADD 0x20 0x4
0x623: V343 = CALLDATALOAD 0x24
0x625: V344 = 0x20
0x627: V345 = ADD 0x20 0x24
0x62c: V346 = CALLDATALOAD 0x44
0x62e: V347 = 0x20
0x630: V348 = ADD 0x20 0x44
0x633: V349 = ADD 0x4 V346
0x635: V350 = CALLDATALOAD V349
0x637: V351 = 0x20
0x639: V352 = ADD 0x20 V349
0x63d: V353 = 0x1f
0x63f: V354 = ADD 0x1f V350
0x640: V355 = 0x20
0x644: V356 = DIV V354 0x20
0x645: V357 = MUL V356 0x20
0x646: V358 = 0x20
0x648: V359 = ADD 0x20 V357
0x649: V360 = 0x40
0x64b: V361 = M[0x40]
0x64e: V362 = ADD V361 V359
0x64f: V363 = 0x40
0x651: M[0x40] = V362
0x659: M[V361] = V350
0x65a: V364 = 0x20
0x65c: V365 = ADD 0x20 V361
0x662: CALLDATACOPY V365 V352 V350
0x664: V366 = ADD V365 V350
0x670: V367 = 0x1c6
0x673: THROW 
0x674: JUMPDEST 
0x675: V368 = 0x40
0x677: V369 = M[0x40]
0x67a: V370 = ISZERO S0
0x67b: V371 = ISZERO V370
0x67c: V372 = ISZERO V371
0x67d: V373 = ISZERO V372
0x67f: M[V369] = V373
0x680: V374 = 0x20
0x682: V375 = ADD 0x20 V369
0x686: V376 = 0x40
0x688: V377 = M[0x40]
0x68b: V378 = SUB V375 V377
0x68d: RETURN V377 V378
0x68e: JUMPDEST 
0x68f: V379 = CALLVALUE
0x690: V380 = ISZERO V379
0x691: V381 = 0x156
0x694: JUMPI 0x156 V380
---
Entry stack: []
Stack pops: 0
Stack additions: [V361, V343, V340, 0x131]
Exit stack: []

================================

Block 0x695
[0x695:0x762]
---
Predecessors: [0x5f8]
Successors: [0x763]
---
0x695 PUSH1 0x0
0x697 DUP1
0x698 REVERT
0x699 JUMPDEST
0x69a PUSH2 0x15e
0x69d PUSH2 0x315
0x6a0 JUMP
0x6a1 JUMPDEST
0x6a2 PUSH1 0x40
0x6a4 MLOAD
0x6a5 DUP1
0x6a6 DUP3
0x6a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bc AND
0x6bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d2 AND
0x6d3 DUP2
0x6d4 MSTORE
0x6d5 PUSH1 0x20
0x6d7 ADD
0x6d8 SWAP2
0x6d9 POP
0x6da POP
0x6db PUSH1 0x40
0x6dd MLOAD
0x6de DUP1
0x6df SWAP2
0x6e0 SUB
0x6e1 SWAP1
0x6e2 RETURN
0x6e3 JUMPDEST
0x6e4 PUSH1 0x1
0x6e6 PUSH1 0x0
0x6e8 SWAP1
0x6e9 SLOAD
0x6ea SWAP1
0x6eb PUSH2 0x100
0x6ee EXP
0x6ef SWAP1
0x6f0 DIV
0x6f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x706 AND
0x707 DUP2
0x708 JUMP
0x709 JUMPDEST
0x70a PUSH1 0x0
0x70c DUP1
0x70d PUSH1 0x0
0x70f SWAP1
0x710 SLOAD
0x711 SWAP1
0x712 PUSH2 0x100
0x715 EXP
0x716 SWAP1
0x717 DIV
0x718 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72d AND
0x72e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x743 AND
0x744 CALLER
0x745 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75a AND
0x75b EQ
0x75c ISZERO
0x75d DUP1
0x75e ISZERO
0x75f PUSH2 0x273
0x762 JUMPI
---
0x695: V382 = 0x0
0x698: REVERT 0x0 0x0
0x699: JUMPDEST 
0x69a: V383 = 0x15e
0x69d: V384 = 0x315
0x6a0: THROW 
0x6a1: JUMPDEST 
0x6a2: V385 = 0x40
0x6a4: V386 = M[0x40]
0x6a7: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6bd: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x6d4: M[V386] = V390
0x6d5: V391 = 0x20
0x6d7: V392 = ADD 0x20 V386
0x6db: V393 = 0x40
0x6dd: V394 = M[0x40]
0x6e0: V395 = SUB V392 V394
0x6e2: RETURN V394 V395
0x6e3: JUMPDEST 
0x6e4: V396 = 0x1
0x6e6: V397 = 0x0
0x6e9: V398 = S[0x1]
0x6eb: V399 = 0x100
0x6ee: V400 = EXP 0x100 0x0
0x6f0: V401 = DIV V398 0x1
0x6f1: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x706: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x708: JUMP S0
0x709: JUMPDEST 
0x70a: V404 = 0x0
0x70d: V405 = 0x0
0x710: V406 = S[0x0]
0x712: V407 = 0x100
0x715: V408 = EXP 0x100 0x0
0x717: V409 = DIV V406 0x1
0x718: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x72e: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x743: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x744: V414 = CALLER
0x745: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x75a: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x75b: V417 = EQ V416 V413
0x75c: V418 = ISZERO V417
0x75e: V419 = ISZERO V418
0x75f: V420 = 0x273
0x762: THROWI V419
---
Entry stack: []
Stack pops: 0
Stack additions: [0x15e, V403, S0, V418, 0x0]
Exit stack: []

================================

Block 0x763
[0x763:0x7b5]
---
Predecessors: [0x695]
Successors: [0x7b6]
---
0x763 POP
0x764 PUSH1 0x1
0x766 PUSH1 0x0
0x768 SWAP1
0x769 SLOAD
0x76a SWAP1
0x76b PUSH2 0x100
0x76e EXP
0x76f SWAP1
0x770 DIV
0x771 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x786 AND
0x787 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79c AND
0x79d CALLER
0x79e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b3 AND
0x7b4 EQ
0x7b5 ISZERO
---
0x764: V421 = 0x1
0x766: V422 = 0x0
0x769: V423 = S[0x1]
0x76b: V424 = 0x100
0x76e: V425 = EXP 0x100 0x0
0x770: V426 = DIV V423 0x1
0x771: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x786: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x787: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x79d: V431 = CALLER
0x79e: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b3: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x7b4: V434 = EQ V433 V430
0x7b5: V435 = ISZERO V434
---
Entry stack: [0x0, V418]
Stack pops: 1
Stack additions: [V435]
Exit stack: [0x0, V435]

================================

Block 0x7b6
[0x7b6:0x7bb]
---
Predecessors: [0x763]
Successors: [0x7bc]
---
0x7b6 JUMPDEST
0x7b7 ISZERO
0x7b8 PUSH2 0x281
0x7bb JUMPI
---
0x7b6: JUMPDEST 
0x7b7: V436 = ISZERO V435
0x7b8: V437 = 0x281
0x7bb: THROWI V436
---
Entry stack: [0x0, V435]
Stack pops: 1
Stack additions: []
Exit stack: [0x0]

================================

Block 0x7bc
[0x7bc:0x7ef]
---
Predecessors: [0x7b6]
Successors: [0x7f0]
---
0x7bc PUSH1 0x0
0x7be SWAP1
0x7bf POP
0x7c0 PUSH2 0x30e
0x7c3 JUMP
0x7c4 JUMPDEST
0x7c5 DUP4
0x7c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7db AND
0x7dc GAS
0x7dd DUP5
0x7de DUP5
0x7df PUSH1 0x40
0x7e1 MLOAD
0x7e2 DUP1
0x7e3 DUP3
0x7e4 DUP1
0x7e5 MLOAD
0x7e6 SWAP1
0x7e7 PUSH1 0x20
0x7e9 ADD
0x7ea SWAP1
0x7eb DUP1
0x7ec DUP4
0x7ed DUP4
0x7ee PUSH1 0x0
---
0x7bc: V438 = 0x0
0x7c0: V439 = 0x30e
0x7c3: THROW 
0x7c4: JUMPDEST 
0x7c6: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x7db: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7dc: V442 = GAS
0x7df: V443 = 0x40
0x7e1: V444 = M[0x40]
0x7e5: V445 = M[S1]
0x7e7: V446 = 0x20
0x7e9: V447 = ADD 0x20 S1
0x7ee: V448 = 0x0
---
Entry stack: [0x0]
Stack pops: 1
Stack additions: [0x0, V447, V444, V445, V445, V447, V444, V444, S1, S2, V442, V441, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x7f0
[0x7f0:0x7f8]
---
Predecessors: [0x7bc]
Successors: [0x7f9]
---
0x7f0 JUMPDEST
0x7f1 DUP4
0x7f2 DUP2
0x7f3 LT
0x7f4 ISZERO
0x7f5 PUSH2 0x2c8
0x7f8 JUMPI
---
0x7f0: JUMPDEST 
0x7f3: V449 = LT 0x0 V445
0x7f4: V450 = ISZERO V449
0x7f5: V451 = 0x2c8
0x7f8: THROWI V450
---
Entry stack: [S15, S14, S13, S12, V441, V442, S9, S8, V444, V444, V447, V445, V445, V444, V447, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S15, S14, S13, S12, V441, V442, S9, S8, V444, V444, V447, V445, V445, V444, V447, 0x0]

================================

Block 0x7f9
[0x7f9:0x81e]
---
Predecessors: [0x7f0]
Successors: [0x81f]
---
0x7f9 DUP1
0x7fa DUP3
0x7fb ADD
0x7fc MLOAD
0x7fd DUP2
0x7fe DUP5
0x7ff ADD
0x800 MSTORE
0x801 PUSH1 0x20
0x803 DUP2
0x804 ADD
0x805 SWAP1
0x806 POP
0x807 PUSH2 0x2ad
0x80a JUMP
0x80b JUMPDEST
0x80c POP
0x80d POP
0x80e POP
0x80f POP
0x810 SWAP1
0x811 POP
0x812 SWAP1
0x813 DUP2
0x814 ADD
0x815 SWAP1
0x816 PUSH1 0x1f
0x818 AND
0x819 DUP1
0x81a ISZERO
0x81b PUSH2 0x2f5
0x81e JUMPI
---
0x7fb: V452 = ADD V447 0x0
0x7fc: V453 = M[V452]
0x7ff: V454 = ADD V444 0x0
0x800: M[V454] = V453
0x801: V455 = 0x20
0x804: V456 = ADD 0x0 0x20
0x807: V457 = 0x2ad
0x80a: THROW 
0x80b: JUMPDEST 
0x814: V458 = ADD S4 S6
0x816: V459 = 0x1f
0x818: V460 = AND 0x1f S4
0x81a: V461 = ISZERO V460
0x81b: V462 = 0x2f5
0x81e: THROWI V461
---
Entry stack: [S15, S14, S13, S12, V441, V442, S9, S8, V444, V444, V447, V445, V445, V444, V447, 0x0]
Stack pops: 3
Stack additions: [V460, V458]
Exit stack: []

================================

Block 0x81f
[0x81f:0x837]
---
Predecessors: [0x7f9]
Successors: [0x838]
---
0x81f DUP1
0x820 DUP3
0x821 SUB
0x822 DUP1
0x823 MLOAD
0x824 PUSH1 0x1
0x826 DUP4
0x827 PUSH1 0x20
0x829 SUB
0x82a PUSH2 0x100
0x82d EXP
0x82e SUB
0x82f NOT
0x830 AND
0x831 DUP2
0x832 MSTORE
0x833 PUSH1 0x20
0x835 ADD
0x836 SWAP2
0x837 POP
---
0x821: V463 = SUB V458 V460
0x823: V464 = M[V463]
0x824: V465 = 0x1
0x827: V466 = 0x20
0x829: V467 = SUB 0x20 V460
0x82a: V468 = 0x100
0x82d: V469 = EXP 0x100 V467
0x82e: V470 = SUB V469 0x1
0x82f: V471 = NOT V470
0x830: V472 = AND V471 V464
0x832: M[V463] = V472
0x833: V473 = 0x20
0x835: V474 = ADD 0x20 V463
---
Entry stack: [V458, V460]
Stack pops: 2
Stack additions: [V474, S0]
Exit stack: [V474, V460]

================================

Block 0x838
[0x838:0x850]
---
Predecessors: [0x81f]
Successors: [0x851]
---
0x838 JUMPDEST
0x839 POP
0x83a SWAP2
0x83b POP
0x83c POP
0x83d PUSH1 0x0
0x83f PUSH1 0x40
0x841 MLOAD
0x842 DUP1
0x843 DUP4
0x844 SUB
0x845 DUP2
0x846 DUP6
0x847 DUP9
0x848 DUP9
0x849 CALL
0x84a SWAP4
0x84b POP
0x84c POP
0x84d POP
0x84e POP
0x84f SWAP1
0x850 POP
---
0x838: JUMPDEST 
0x83d: V475 = 0x0
0x83f: V476 = 0x40
0x841: V477 = M[0x40]
0x844: V478 = SUB V474 V477
0x849: V479 = CALL S5 S6 S4 V477 V478 V477 0x0
---
Entry stack: [V474, V460]
Stack pops: 8
Stack additions: [V479]
Exit stack: [V479]

================================

Block 0x851
[0x851:0x8d3]
---
Predecessors: [0x838]
Successors: []
---
0x851 JUMPDEST
0x852 SWAP4
0x853 SWAP3
0x854 POP
0x855 POP
0x856 POP
0x857 JUMP
0x858 JUMPDEST
0x859 PUSH1 0x0
0x85b DUP1
0x85c SWAP1
0x85d SLOAD
0x85e SWAP1
0x85f PUSH2 0x100
0x862 EXP
0x863 SWAP1
0x864 DIV
0x865 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87a AND
0x87b DUP2
0x87c JUMP
0x87d STOP
0x87e LOG1
0x87f PUSH6 0x627a7a723058
0x886 SHA3
0x887 TIMESTAMP
0x888 CODECOPY
0x889 MISSING 0xe6
0x88a MISSING 0xc1
0x88b MISSING 0x22
0x88c MISSING 0xe2
0x88d MISSING 0xa5
0x88e PUSH1 0x1
0x890 MISSING 0xae
0x891 PC
0x892 SWAP9
0x893 MISSING 0xbd
0x894 LOG3
0x895 MISSING 0xd1
0x896 MISSING 0x4d
0x897 REVERT
0x898 EQ
0x899 RETURNDATASIZE
0x89a PUSH22 0x5b92d09391f1a2063b0b69550029a165627a7a723058
0x8b1 SHA3
0x8b2 EXTCODEHASH
0x8b3 PUSH32 0xf68faededff3d442194fc4606920d22214abac6eb6f46078604fe5fac1810029
---
0x851: JUMPDEST 
0x857: JUMP S4
0x858: JUMPDEST 
0x859: V480 = 0x0
0x85d: V481 = S[0x0]
0x85f: V482 = 0x100
0x862: V483 = EXP 0x100 0x0
0x864: V484 = DIV V481 0x1
0x865: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x87c: JUMP S0
0x87d: STOP 
0x87e: LOG S0 S1 S2
0x87f: V487 = 0x627a7a723058
0x886: V488 = SHA3 0x627a7a723058 S3
0x887: V489 = TIMESTAMP
0x888: CODECOPY V489 V488 S4
0x889: MISSING 0xe6
0x88a: MISSING 0xc1
0x88b: MISSING 0x22
0x88c: MISSING 0xe2
0x88d: MISSING 0xa5
0x88e: V490 = 0x1
0x890: MISSING 0xae
0x891: V491 = PC
0x893: MISSING 0xbd
0x894: LOG S0 S1 S2 S3 S4
0x895: MISSING 0xd1
0x896: MISSING 0x4d
0x897: REVERT S0 S1
0x898: V492 = EQ S0 S1
0x899: V493 = RETURNDATASIZE
0x89a: V494 = 0x5b92d09391f1a2063b0b69550029a165627a7a723058
0x8b1: V495 = SHA3 0x5b92d09391f1a2063b0b69550029a165627a7a723058 V493
0x8b2: V496 = EXTCODEHASH V495
0x8b3: V497 = 0xf68faededff3d442194fc4606920d22214abac6eb6f46078604fe5fac1810029
---
Entry stack: [V479]
Stack pops: 32672
Stack additions: [0xf68faededff3d442194fc4606920d22214abac6eb6f46078604fe5fac1810029, V496, V492]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x67
Exit block: 0x7a
Body: 0x67, 0x6e, 0x72, 0x7a, 0x1ab

Function 1:
Public function signature: 0xabd90f85
Entry block: 0xbc
Exit block: 0xdd
Body: 0xbc, 0xc3, 0xc7, 0xdd, 0x1d0, 0x1de, 0x1df

Function 2:
Public function signature: 0xce3f865f
Entry block: 0x11f
Exit block: 0x3b2
Body: 0x11f, 0x126, 0x12a, 0x140, 0x20f, 0x21f, 0x228, 0x251, 0x299, 0x29d, 0x3a1, 0x3a5, 0x3b2, 0x3b6, 0x3ca, 0x3ce, 0x444, 0x476

Function 3:
Public function signature: 0xf9850b72
Entry block: 0x156
Exit block: 0x169
Body: 0x156, 0x15d, 0x161, 0x169, 0x450

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

