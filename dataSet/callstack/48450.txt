Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3ccfd60b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x58
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3ccfd60b
0x22: V15 = EQ V13 0x3ccfd60b
0x23: V16 = 0x58
0x26: JUMPI 0x58 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x6f]
---
0x27 DUP1
0x28 PUSH4 0x3d79d1c8
0x2d EQ
0x2e PUSH2 0x6f
0x31 JUMPI
---
0x28: V17 = 0x3d79d1c8
0x2d: V18 = EQ 0x3d79d1c8 V13
0x2e: V19 = 0x6f
0x31: JUMPI 0x6f V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x96]
---
0x32 DUP1
0x33 PUSH4 0xaffed0e0
0x38 EQ
0x39 PUSH2 0x96
0x3c JUMPI
---
0x33: V20 = 0xaffed0e0
0x38: V21 = EQ 0xaffed0e0 V13
0x39: V22 = 0x96
0x3c: JUMPI 0x96 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xab]
---
0x3d DUP1
0x3e PUSH4 0xb26e642b
0x43 EQ
0x44 PUSH2 0xab
0x47 JUMPI
---
0x3e: V23 = 0xb26e642b
0x43: V24 = EQ 0xb26e642b V13
0x44: V25 = 0xab
0x47: JUMPI 0xab V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xdf]
---
0x48 DUP1
0x49 PUSH4 0xc2381296
0x4e EQ
0x4f PUSH2 0xdf
0x52 JUMPI
---
0x49: V26 = 0xc2381296
0x4e: V27 = EQ 0xc2381296 V13
0x4f: V28 = 0xdf
0x52: JUMPI 0xdf V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x57]
---
Predecessors: [0x0, 0x48, 0x410]
Successors: []
---
0x53 JUMPDEST
0x54 PUSH1 0x0
0x56 DUP1
0x57 REVERT
---
0x53: JUMPDEST 
0x54: V29 = 0x0
0x57: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, S0]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a DUP1
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x58: JUMPDEST 
0x59: V30 = CALLVALUE
0x5b: V31 = ISZERO V30
0x5c: V32 = 0x64
0x5f: JUMPI 0x64 V31
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V13, V30]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x58]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V33 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V13, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V30]

================================

Block 0x64
[0x64:0x6c]
---
Predecessors: [0x58]
Successors: [0xe7]
---
0x64 JUMPDEST
0x65 POP
0x66 PUSH2 0x6d
0x69 PUSH2 0xe7
0x6c JUMP
---
0x64: JUMPDEST 
0x66: V34 = 0x6d
0x69: V35 = 0xe7
0x6c: JUMP 0xe7
---
Entry stack: [V13, V30]
Stack pops: 1
Stack additions: [0x6d]
Exit stack: [V13, 0x6d]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x138, 0x617]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x27]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V36 = CALLVALUE
0x72: V37 = ISZERO V36
0x73: V38 = 0x7b
0x76: JUMPI 0x7b V37
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V13, V36]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V39 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V13, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V36]

================================

Block 0x7b
[0x7b:0x83]
---
Predecessors: [0x6f]
Successors: [0x13b]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0x84
0x80 PUSH2 0x13b
0x83 JUMP
---
0x7b: JUMPDEST 
0x7d: V40 = 0x84
0x80: V41 = 0x13b
0x83: JUMP 0x13b
---
Entry stack: [V13, V36]
Stack pops: 1
Stack additions: [0x84]
Exit stack: [V13, 0x84]

================================

Block 0x84
[0x84:0x95]
---
Predecessors: [0x13b, 0x140]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 DUP1
0x88 MLOAD
0x89 SWAP2
0x8a DUP3
0x8b MSTORE
0x8c MLOAD
0x8d SWAP1
0x8e DUP2
0x8f SWAP1
0x90 SUB
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP1
0x95 RETURN
---
0x84: JUMPDEST 
0x85: V42 = 0x40
0x88: V43 = M[0x40]
0x8b: M[V43] = S0
0x8c: V44 = M[0x40]
0x90: V45 = SUB V43 V44
0x91: V46 = 0x20
0x93: V47 = ADD 0x20 V45
0x95: RETURN V44 V47
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0x32]
Successors: [0x9e, 0xa2]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 DUP1
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x96: JUMPDEST 
0x97: V48 = CALLVALUE
0x99: V49 = ISZERO V48
0x9a: V50 = 0xa2
0x9d: JUMPI 0xa2 V49
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V13, V48]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x96]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V51 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V13, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V48]

================================

Block 0xa2
[0xa2:0xaa]
---
Predecessors: [0x96]
Successors: [0x140]
---
0xa2 JUMPDEST
0xa3 POP
0xa4 PUSH2 0x84
0xa7 PUSH2 0x140
0xaa JUMP
---
0xa2: JUMPDEST 
0xa4: V52 = 0x84
0xa7: V53 = 0x140
0xaa: JUMP 0x140
---
Entry stack: [V13, V48]
Stack pops: 1
Stack additions: [0x84]
Exit stack: [V13, 0x84]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0x3d]
Successors: [0xb3, 0xb7]
---
0xab JUMPDEST
0xac CALLVALUE
0xad DUP1
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0xab: JUMPDEST 
0xac: V54 = CALLVALUE
0xae: V55 = ISZERO V54
0xaf: V56 = 0xb7
0xb2: JUMPI 0xb7 V55
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V13, V54]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0xab]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V57 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V13, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V54]

================================

Block 0xb7
[0xb7:0xc2]
---
Predecessors: [0xab]
Successors: [0x146]
---
0xb7 JUMPDEST
0xb8 POP
0xb9 PUSH2 0xc3
0xbc PUSH1 0x4
0xbe CALLDATALOAD
0xbf PUSH2 0x146
0xc2 JUMP
---
0xb7: JUMPDEST 
0xb9: V58 = 0xc3
0xbc: V59 = 0x4
0xbe: V60 = CALLDATALOAD 0x4
0xbf: V61 = 0x146
0xc2: JUMP 0x146
---
Entry stack: [V13, V54]
Stack pops: 1
Stack additions: [0xc3, V60]
Exit stack: [V13, 0xc3, V60]

================================

Block 0xc3
[0xc3:0xde]
---
Predecessors: [0x4a9]
Successors: []
---
0xc3 JUMPDEST
0xc4 PUSH1 0x40
0xc6 DUP1
0xc7 MLOAD
0xc8 PUSH1 0x1
0xca PUSH1 0xa0
0xcc PUSH1 0x2
0xce EXP
0xcf SUB
0xd0 SWAP1
0xd1 SWAP3
0xd2 AND
0xd3 DUP3
0xd4 MSTORE
0xd5 MLOAD
0xd6 SWAP1
0xd7 DUP2
0xd8 SWAP1
0xd9 SUB
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP1
0xde RETURN
---
0xc3: JUMPDEST 
0xc4: V62 = 0x40
0xc7: V63 = M[0x40]
0xc8: V64 = 0x1
0xca: V65 = 0xa0
0xcc: V66 = 0x2
0xce: V67 = EXP 0x2 0xa0
0xcf: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd2: V69 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd4: M[V63] = V69
0xd5: V70 = M[0x40]
0xd9: V71 = SUB V63 V70
0xda: V72 = 0x20
0xdc: V73 = ADD 0x20 V71
0xde: RETURN V70 V73
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0x48]
Successors: [0x4ae]
---
0xdf JUMPDEST
0xe0 PUSH2 0x6d
0xe3 PUSH2 0x4ae
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V74 = 0x6d
0xe3: V75 = 0x4ae
0xe6: JUMP 0x4ae
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x6d]
Exit stack: [V13, 0x6d]

================================

Block 0xe7
[0xe7:0xf9]
---
Predecessors: [0x64]
Successors: [0xfa, 0xfe]
---
0xe7 JUMPDEST
0xe8 PUSH1 0x1
0xea SLOAD
0xeb PUSH1 0x1
0xed PUSH1 0xa0
0xef PUSH1 0x2
0xf1 EXP
0xf2 SUB
0xf3 AND
0xf4 CALLER
0xf5 EQ
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xe7: JUMPDEST 
0xe8: V76 = 0x1
0xea: V77 = S[0x1]
0xeb: V78 = 0x1
0xed: V79 = 0xa0
0xef: V80 = 0x2
0xf1: V81 = EXP 0x2 0xa0
0xf2: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf3: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xf4: V84 = CALLER
0xf5: V85 = EQ V84 V83
0xf6: V86 = 0xfe
0xf9: JUMPI 0xfe V85
---
Entry stack: [V13, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xe7]
Successors: []
---
0xfa PUSH1 0x0
0xfc DUP1
0xfd REVERT
---
0xfa: V87 = 0x0
0xfd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d]

================================

Block 0xfe
[0xfe:0x12e]
---
Predecessors: [0xe7]
Successors: [0x12f, 0x138]
---
0xfe JUMPDEST
0xff PUSH1 0x1
0x101 SLOAD
0x102 PUSH1 0x40
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP2
0x10f AND
0x110 SWAP1
0x111 ADDRESS
0x112 BALANCE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x8fc
0x118 MUL
0x119 SWAP2
0x11a PUSH1 0x0
0x11c DUP2
0x11d DUP2
0x11e DUP2
0x11f DUP6
0x120 DUP9
0x121 DUP9
0x122 CALL
0x123 SWAP4
0x124 POP
0x125 POP
0x126 POP
0x127 POP
0x128 ISZERO
0x129 DUP1
0x12a ISZERO
0x12b PUSH2 0x138
0x12e JUMPI
---
0xfe: JUMPDEST 
0xff: V88 = 0x1
0x101: V89 = S[0x1]
0x102: V90 = 0x40
0x104: V91 = M[0x40]
0x105: V92 = 0x1
0x107: V93 = 0xa0
0x109: V94 = 0x2
0x10b: V95 = EXP 0x2 0xa0
0x10c: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V97 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x111: V98 = ADDRESS
0x112: V99 = BALANCE V98
0x114: V100 = ISZERO V99
0x115: V101 = 0x8fc
0x118: V102 = MUL 0x8fc V100
0x11a: V103 = 0x0
0x122: V104 = CALL V102 V97 V99 V91 0x0 V91 0x0
0x128: V105 = ISZERO V104
0x12a: V106 = ISZERO V105
0x12b: V107 = 0x138
0x12e: JUMPI 0x138 V106
---
Entry stack: [V13, 0x6d]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V13, 0x6d, V105]

================================

Block 0x12f
[0x12f:0x137]
---
Predecessors: [0xfe]
Successors: []
---
0x12f RETURNDATASIZE
0x130 PUSH1 0x0
0x132 DUP1
0x133 RETURNDATACOPY
0x134 RETURNDATASIZE
0x135 PUSH1 0x0
0x137 REVERT
---
0x12f: V108 = RETURNDATASIZE
0x130: V109 = 0x0
0x133: RETURNDATACOPY 0x0 0x0 V108
0x134: V110 = RETURNDATASIZE
0x135: V111 = 0x0
0x137: REVERT 0x0 V110
---
Entry stack: [V13, 0x6d, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, V105]

================================

Block 0x138
[0x138:0x13a]
---
Predecessors: [0xfe]
Successors: [0x6d]
---
0x138 JUMPDEST
0x139 POP
0x13a JUMP
---
0x138: JUMPDEST 
0x13a: JUMP 0x6d
---
Entry stack: [V13, 0x6d, V105]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x13b
[0x13b:0x13f]
---
Predecessors: [0x7b]
Successors: [0x84]
---
0x13b JUMPDEST
0x13c ADDRESS
0x13d BALANCE
0x13e SWAP1
0x13f JUMP
---
0x13b: JUMPDEST 
0x13c: V112 = ADDRESS
0x13d: V113 = BALANCE V112
0x13f: JUMP 0x84
---
Entry stack: [V13, 0x84]
Stack pops: 1
Stack additions: [V113]
Exit stack: [V13, V113]

================================

Block 0x140
[0x140:0x145]
---
Predecessors: [0xa2]
Successors: [0x84]
---
0x140 JUMPDEST
0x141 PUSH1 0x9
0x143 SLOAD
0x144 DUP2
0x145 JUMP
---
0x140: JUMPDEST 
0x141: V114 = 0x9
0x143: V115 = S[0x9]
0x145: JUMP 0x84
---
Entry stack: [V13, 0x84]
Stack pops: 1
Stack additions: [S0, V115]
Exit stack: [V13, 0x84, V115]

================================

Block 0x146
[0x146:0x150]
---
Predecessors: [0xb7, 0x61c, 0x8b4]
Successors: [0x151, 0x1f4]
---
0x146 JUMPDEST
0x147 PUSH1 0x0
0x149 PUSH1 0x7f
0x14b DUP3
0x14c GT
0x14d PUSH2 0x1f4
0x150 JUMPI
---
0x146: JUMPDEST 
0x147: V116 = 0x0
0x149: V117 = 0x7f
0x14c: V118 = GT S0 0x7f
0x14d: V119 = 0x1f4
0x150: JUMPI 0x1f4 V118
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, {0xc3, 0x635, 0x8c7}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, {0xc3, 0x635, 0x8c7}, S0, 0x0]

================================

Block 0x151
[0x151:0x1f3]
---
Predecessors: [0x146]
Successors: [0x4a9]
---
0x151 POP
0x152 PUSH1 0x40
0x154 DUP1
0x155 MLOAD
0x156 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x177 DUP2
0x178 MSTORE
0x179 PUSH1 0xfa
0x17b PUSH1 0x2
0x17d EXP
0x17e PUSH1 0x25
0x180 MUL
0x181 PUSH1 0x1
0x183 DUP3
0x184 ADD
0x185 MSTORE
0x186 PUSH13 0x1000000000000000000000000
0x194 ADDRESS
0x195 MUL
0x196 PUSH1 0x2
0x198 DUP3
0x199 ADD
0x19a MSTORE
0x19b PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x1bc PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x1dd DUP5
0x1de MUL
0x1df AND
0x1e0 PUSH1 0x16
0x1e2 DUP3
0x1e3 ADD
0x1e4 MSTORE
0x1e5 SWAP1
0x1e6 MLOAD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 SWAP1
0x1ea SUB
0x1eb PUSH1 0x17
0x1ed ADD
0x1ee SWAP1
0x1ef SHA3
0x1f0 PUSH2 0x4a9
0x1f3 JUMP
---
0x152: V120 = 0x40
0x155: V121 = M[0x40]
0x156: V122 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x178: M[V121] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x179: V123 = 0xfa
0x17b: V124 = 0x2
0x17d: V125 = EXP 0x2 0xfa
0x17e: V126 = 0x25
0x180: V127 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x181: V128 = 0x1
0x184: V129 = ADD V121 0x1
0x185: M[V129] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x186: V130 = 0x1000000000000000000000000
0x194: V131 = ADDRESS
0x195: V132 = MUL V131 0x1000000000000000000000000
0x196: V133 = 0x2
0x199: V134 = ADD V121 0x2
0x19a: M[V134] = V132
0x19b: V135 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x1bc: V136 = 0x100000000000000000000000000000000000000000000000000000000000000
0x1de: V137 = MUL S1 0x100000000000000000000000000000000000000000000000000000000000000
0x1df: V138 = AND V137 0xff00000000000000000000000000000000000000000000000000000000000000
0x1e0: V139 = 0x16
0x1e3: V140 = ADD V121 0x16
0x1e4: M[V140] = V138
0x1e6: V141 = M[0x40]
0x1ea: V142 = SUB V121 V141
0x1eb: V143 = 0x17
0x1ed: V144 = ADD 0x17 V142
0x1ef: V145 = SHA3 V141 V144
0x1f0: V146 = 0x4a9
0x1f3: JUMP 0x4a9
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V145]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, V145]

================================

Block 0x1f4
[0x1f4:0x1fc]
---
Predecessors: [0x146]
Successors: [0x1fd, 0x2a7]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0xff
0x1f7 DUP3
0x1f8 GT
0x1f9 PUSH2 0x2a7
0x1fc JUMPI
---
0x1f4: JUMPDEST 
0x1f5: V147 = 0xff
0x1f8: V148 = GT S1 0xff
0x1f9: V149 = 0x2a7
0x1fc: JUMPI 0x2a7 V148
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]

================================

Block 0x1fd
[0x1fd:0x2a6]
---
Predecessors: [0x1f4]
Successors: [0x4a9]
---
0x1fd POP
0x1fe PUSH1 0x40
0x200 DUP1
0x201 MLOAD
0x202 PUSH32 0xd700000000000000000000000000000000000000000000000000000000000000
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0xfa
0x227 PUSH1 0x2
0x229 EXP
0x22a PUSH1 0x25
0x22c MUL
0x22d PUSH1 0x1
0x22f DUP3
0x230 ADD
0x231 MSTORE
0x232 PUSH13 0x1000000000000000000000000
0x240 ADDRESS
0x241 MUL
0x242 PUSH1 0x2
0x244 DUP3
0x245 ADD
0x246 MSTORE
0x247 PUSH32 0x8100000000000000000000000000000000000000000000000000000000000000
0x268 PUSH1 0x16
0x26a DUP3
0x26b ADD
0x26c MSTORE
0x26d PUSH1 0xff
0x26f DUP4
0x270 AND
0x271 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x292 MUL
0x293 PUSH1 0x17
0x295 DUP3
0x296 ADD
0x297 MSTORE
0x298 SWAP1
0x299 MLOAD
0x29a SWAP1
0x29b DUP2
0x29c SWAP1
0x29d SUB
0x29e PUSH1 0x18
0x2a0 ADD
0x2a1 SWAP1
0x2a2 SHA3
0x2a3 PUSH2 0x4a9
0x2a6 JUMP
---
0x1fe: V150 = 0x40
0x201: V151 = M[0x40]
0x202: V152 = 0xd700000000000000000000000000000000000000000000000000000000000000
0x224: M[V151] = 0xd700000000000000000000000000000000000000000000000000000000000000
0x225: V153 = 0xfa
0x227: V154 = 0x2
0x229: V155 = EXP 0x2 0xfa
0x22a: V156 = 0x25
0x22c: V157 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x22d: V158 = 0x1
0x230: V159 = ADD V151 0x1
0x231: M[V159] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x232: V160 = 0x1000000000000000000000000
0x240: V161 = ADDRESS
0x241: V162 = MUL V161 0x1000000000000000000000000
0x242: V163 = 0x2
0x245: V164 = ADD V151 0x2
0x246: M[V164] = V162
0x247: V165 = 0x8100000000000000000000000000000000000000000000000000000000000000
0x268: V166 = 0x16
0x26b: V167 = ADD V151 0x16
0x26c: M[V167] = 0x8100000000000000000000000000000000000000000000000000000000000000
0x26d: V168 = 0xff
0x270: V169 = AND S1 0xff
0x271: V170 = 0x100000000000000000000000000000000000000000000000000000000000000
0x292: V171 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V169
0x293: V172 = 0x17
0x296: V173 = ADD V151 0x17
0x297: M[V173] = V171
0x299: V174 = M[0x40]
0x29d: V175 = SUB V151 V174
0x29e: V176 = 0x18
0x2a0: V177 = ADD 0x18 V175
0x2a2: V178 = SHA3 V174 V177
0x2a3: V179 = 0x4a9
0x2a6: JUMP 0x4a9
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V178]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, V178]

================================

Block 0x2a7
[0x2a7:0x2b0]
---
Predecessors: [0x1f4]
Successors: [0x2b1, 0x35b]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0xffff
0x2ab DUP3
0x2ac GT
0x2ad PUSH2 0x35b
0x2b0 JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V180 = 0xffff
0x2ac: V181 = GT S1 0xffff
0x2ad: V182 = 0x35b
0x2b0: JUMPI 0x35b V181
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]

================================

Block 0x2b1
[0x2b1:0x35a]
---
Predecessors: [0x2a7]
Successors: [0x4a9]
---
0x2b1 POP
0x2b2 PUSH1 0x40
0x2b4 DUP1
0x2b5 MLOAD
0x2b6 PUSH32 0xd800000000000000000000000000000000000000000000000000000000000000
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0xfa
0x2db PUSH1 0x2
0x2dd EXP
0x2de PUSH1 0x25
0x2e0 MUL
0x2e1 PUSH1 0x1
0x2e3 DUP3
0x2e4 ADD
0x2e5 MSTORE
0x2e6 PUSH13 0x1000000000000000000000000
0x2f4 ADDRESS
0x2f5 MUL
0x2f6 PUSH1 0x2
0x2f8 DUP3
0x2f9 ADD
0x2fa MSTORE
0x2fb PUSH32 0x8200000000000000000000000000000000000000000000000000000000000000
0x31c PUSH1 0x16
0x31e DUP3
0x31f ADD
0x320 MSTORE
0x321 PUSH31 0x1000000000000000000000000000000000000000000000000000000000000
0x341 PUSH2 0xffff
0x344 DUP5
0x345 AND
0x346 MUL
0x347 PUSH1 0x17
0x349 DUP3
0x34a ADD
0x34b MSTORE
0x34c SWAP1
0x34d MLOAD
0x34e SWAP1
0x34f DUP2
0x350 SWAP1
0x351 SUB
0x352 PUSH1 0x19
0x354 ADD
0x355 SWAP1
0x356 SHA3
0x357 PUSH2 0x4a9
0x35a JUMP
---
0x2b2: V183 = 0x40
0x2b5: V184 = M[0x40]
0x2b6: V185 = 0xd800000000000000000000000000000000000000000000000000000000000000
0x2d8: M[V184] = 0xd800000000000000000000000000000000000000000000000000000000000000
0x2d9: V186 = 0xfa
0x2db: V187 = 0x2
0x2dd: V188 = EXP 0x2 0xfa
0x2de: V189 = 0x25
0x2e0: V190 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x2e1: V191 = 0x1
0x2e4: V192 = ADD V184 0x1
0x2e5: M[V192] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x2e6: V193 = 0x1000000000000000000000000
0x2f4: V194 = ADDRESS
0x2f5: V195 = MUL V194 0x1000000000000000000000000
0x2f6: V196 = 0x2
0x2f9: V197 = ADD V184 0x2
0x2fa: M[V197] = V195
0x2fb: V198 = 0x8200000000000000000000000000000000000000000000000000000000000000
0x31c: V199 = 0x16
0x31f: V200 = ADD V184 0x16
0x320: M[V200] = 0x8200000000000000000000000000000000000000000000000000000000000000
0x321: V201 = 0x1000000000000000000000000000000000000000000000000000000000000
0x341: V202 = 0xffff
0x345: V203 = AND S1 0xffff
0x346: V204 = MUL V203 0x1000000000000000000000000000000000000000000000000000000000000
0x347: V205 = 0x17
0x34a: V206 = ADD V184 0x17
0x34b: M[V206] = V204
0x34d: V207 = M[0x40]
0x351: V208 = SUB V184 V207
0x352: V209 = 0x19
0x354: V210 = ADD 0x19 V208
0x356: V211 = SHA3 V207 V210
0x357: V212 = 0x4a9
0x35a: JUMP 0x4a9
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V211]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, V211]

================================

Block 0x35b
[0x35b:0x365]
---
Predecessors: [0x2a7]
Successors: [0x366, 0x410]
---
0x35b JUMPDEST
0x35c PUSH3 0xffffff
0x360 DUP3
0x361 GT
0x362 PUSH2 0x410
0x365 JUMPI
---
0x35b: JUMPDEST 
0x35c: V213 = 0xffffff
0x361: V214 = GT S1 0xffffff
0x362: V215 = 0x410
0x365: JUMPI 0x410 V214
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]

================================

Block 0x366
[0x366:0x40f]
---
Predecessors: [0x35b]
Successors: [0x4a9]
---
0x366 POP
0x367 PUSH1 0x40
0x369 DUP1
0x36a MLOAD
0x36b PUSH32 0xd900000000000000000000000000000000000000000000000000000000000000
0x38c DUP2
0x38d MSTORE
0x38e PUSH1 0xfa
0x390 PUSH1 0x2
0x392 EXP
0x393 PUSH1 0x25
0x395 MUL
0x396 PUSH1 0x1
0x398 DUP3
0x399 ADD
0x39a MSTORE
0x39b PUSH13 0x1000000000000000000000000
0x3a9 ADDRESS
0x3aa MUL
0x3ab PUSH1 0x2
0x3ad DUP3
0x3ae ADD
0x3af MSTORE
0x3b0 PUSH32 0x8300000000000000000000000000000000000000000000000000000000000000
0x3d1 PUSH1 0x16
0x3d3 DUP3
0x3d4 ADD
0x3d5 MSTORE
0x3d6 PUSH30 0x10000000000000000000000000000000000000000000000000000000000
0x3f5 PUSH3 0xffffff
0x3f9 DUP5
0x3fa AND
0x3fb MUL
0x3fc PUSH1 0x17
0x3fe DUP3
0x3ff ADD
0x400 MSTORE
0x401 SWAP1
0x402 MLOAD
0x403 SWAP1
0x404 DUP2
0x405 SWAP1
0x406 SUB
0x407 PUSH1 0x1a
0x409 ADD
0x40a SWAP1
0x40b SHA3
0x40c PUSH2 0x4a9
0x40f JUMP
---
0x367: V216 = 0x40
0x36a: V217 = M[0x40]
0x36b: V218 = 0xd900000000000000000000000000000000000000000000000000000000000000
0x38d: M[V217] = 0xd900000000000000000000000000000000000000000000000000000000000000
0x38e: V219 = 0xfa
0x390: V220 = 0x2
0x392: V221 = EXP 0x2 0xfa
0x393: V222 = 0x25
0x395: V223 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x396: V224 = 0x1
0x399: V225 = ADD V217 0x1
0x39a: M[V225] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x39b: V226 = 0x1000000000000000000000000
0x3a9: V227 = ADDRESS
0x3aa: V228 = MUL V227 0x1000000000000000000000000
0x3ab: V229 = 0x2
0x3ae: V230 = ADD V217 0x2
0x3af: M[V230] = V228
0x3b0: V231 = 0x8300000000000000000000000000000000000000000000000000000000000000
0x3d1: V232 = 0x16
0x3d4: V233 = ADD V217 0x16
0x3d5: M[V233] = 0x8300000000000000000000000000000000000000000000000000000000000000
0x3d6: V234 = 0x10000000000000000000000000000000000000000000000000000000000
0x3f5: V235 = 0xffffff
0x3fa: V236 = AND S1 0xffffff
0x3fb: V237 = MUL V236 0x10000000000000000000000000000000000000000000000000000000000
0x3fc: V238 = 0x17
0x3ff: V239 = ADD V217 0x17
0x400: M[V239] = V237
0x402: V240 = M[0x40]
0x406: V241 = SUB V217 V240
0x407: V242 = 0x1a
0x409: V243 = ADD 0x1a V241
0x40b: V244 = SHA3 V240 V243
0x40c: V245 = 0x4a9
0x40f: JUMP 0x4a9
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V244]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, V244]

================================

Block 0x410
[0x410:0x41b]
---
Predecessors: [0x35b]
Successors: [0x53, 0x41c]
---
0x410 JUMPDEST
0x411 PUSH4 0xffffffff
0x416 DUP3
0x417 GT
0x418 PUSH2 0x53
0x41b JUMPI
---
0x410: JUMPDEST 
0x411: V246 = 0xffffffff
0x417: V247 = GT S1 0xffffffff
0x418: V248 = 0x53
0x41b: JUMPI 0x53 V247
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]

================================

Block 0x41c
[0x41c:0x4a8]
---
Predecessors: [0x410]
Successors: [0x4a9]
---
0x41c POP
0x41d PUSH1 0x40
0x41f DUP1
0x420 MLOAD
0x421 PUSH32 0xda00000000000000000000000000000000000000000000000000000000000000
0x442 DUP2
0x443 MSTORE
0x444 PUSH1 0xfa
0x446 PUSH1 0x2
0x448 EXP
0x449 PUSH1 0x25
0x44b MUL
0x44c PUSH1 0x1
0x44e DUP3
0x44f ADD
0x450 MSTORE
0x451 PUSH13 0x1000000000000000000000000
0x45f ADDRESS
0x460 MUL
0x461 PUSH1 0x2
0x463 DUP3
0x464 ADD
0x465 MSTORE
0x466 PUSH32 0x8400000000000000000000000000000000000000000000000000000000000000
0x487 PUSH1 0x16
0x489 DUP3
0x48a ADD
0x48b MSTORE
0x48c PUSH1 0xe0
0x48e PUSH1 0x2
0x490 EXP
0x491 PUSH4 0xffffffff
0x496 DUP5
0x497 AND
0x498 MUL
0x499 PUSH1 0x17
0x49b DUP3
0x49c ADD
0x49d MSTORE
0x49e SWAP1
0x49f MLOAD
0x4a0 SWAP1
0x4a1 DUP2
0x4a2 SWAP1
0x4a3 SUB
0x4a4 PUSH1 0x1b
0x4a6 ADD
0x4a7 SWAP1
0x4a8 SHA3
---
0x41d: V249 = 0x40
0x420: V250 = M[0x40]
0x421: V251 = 0xda00000000000000000000000000000000000000000000000000000000000000
0x443: M[V250] = 0xda00000000000000000000000000000000000000000000000000000000000000
0x444: V252 = 0xfa
0x446: V253 = 0x2
0x448: V254 = EXP 0x2 0xfa
0x449: V255 = 0x25
0x44b: V256 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x44c: V257 = 0x1
0x44f: V258 = ADD V250 0x1
0x450: M[V258] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x451: V259 = 0x1000000000000000000000000
0x45f: V260 = ADDRESS
0x460: V261 = MUL V260 0x1000000000000000000000000
0x461: V262 = 0x2
0x464: V263 = ADD V250 0x2
0x465: M[V263] = V261
0x466: V264 = 0x8400000000000000000000000000000000000000000000000000000000000000
0x487: V265 = 0x16
0x48a: V266 = ADD V250 0x16
0x48b: M[V266] = 0x8400000000000000000000000000000000000000000000000000000000000000
0x48c: V267 = 0xe0
0x48e: V268 = 0x2
0x490: V269 = EXP 0x2 0xe0
0x491: V270 = 0xffffffff
0x497: V271 = AND S1 0xffffffff
0x498: V272 = MUL V271 0x100000000000000000000000000000000000000000000000000000000
0x499: V273 = 0x17
0x49c: V274 = ADD V250 0x17
0x49d: M[V274] = V272
0x49f: V275 = M[0x40]
0x4a3: V276 = SUB V250 V275
0x4a4: V277 = 0x1b
0x4a6: V278 = ADD 0x1b V276
0x4a8: V279 = SHA3 V275 V278
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V279]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, V279]

================================

Block 0x4a9
[0x4a9:0x4ad]
---
Predecessors: [0x151, 0x1fd, 0x2b1, 0x366, 0x41c]
Successors: [0xc3, 0x635, 0x8c7]
---
0x4a9 JUMPDEST
0x4aa SWAP2
0x4ab SWAP1
0x4ac POP
0x4ad JUMP
---
0x4a9: JUMPDEST 
0x4ad: JUMP {0xc3, 0x635, 0x8c7}
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, {0xc3, 0x635, 0x8c7}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0x4ae
[0x4ae:0x4c7]
---
Predecessors: [0xdf]
Successors: [0x4c8, 0x4cc]
---
0x4ae JUMPDEST
0x4af PUSH1 0x1
0x4b1 SLOAD
0x4b2 PUSH1 0x0
0x4b4 SWAP1
0x4b5 DUP2
0x4b6 SWAP1
0x4b7 DUP2
0x4b8 SWAP1
0x4b9 PUSH1 0x1
0x4bb PUSH1 0xa0
0x4bd PUSH1 0x2
0x4bf EXP
0x4c0 SUB
0x4c1 AND
0x4c2 CALLER
0x4c3 EQ
0x4c4 PUSH2 0x4cc
0x4c7 JUMPI
---
0x4ae: JUMPDEST 
0x4af: V280 = 0x1
0x4b1: V281 = S[0x1]
0x4b2: V282 = 0x0
0x4b9: V283 = 0x1
0x4bb: V284 = 0xa0
0x4bd: V285 = 0x2
0x4bf: V286 = EXP 0x2 0xa0
0x4c0: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c1: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x4c2: V289 = CALLER
0x4c3: V290 = EQ V289 V288
0x4c4: V291 = 0x4cc
0x4c7: JUMPI 0x4cc V290
---
Entry stack: [V13, 0x6d]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0]

================================

Block 0x4c8
[0x4c8:0x4cb]
---
Predecessors: [0x4ae]
Successors: []
---
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb REVERT
---
0x4c8: V292 = 0x0
0x4cb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0]

================================

Block 0x4cc
[0x4cc:0x522]
---
Predecessors: [0x4ae]
Successors: [0x523, 0x527]
---
0x4cc JUMPDEST
0x4cd PUSH8 0x58d15e176280000
0x4d6 PUSH1 0x0
0x4d8 DUP1
0x4d9 SWAP1
0x4da SLOAD
0x4db SWAP1
0x4dc PUSH2 0x100
0x4df EXP
0x4e0 SWAP1
0x4e1 DIV
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea AND
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 AND
0x4f4 PUSH4 0xd87574e0
0x4f9 PUSH1 0x40
0x4fb MLOAD
0x4fc DUP2
0x4fd PUSH4 0xffffffff
0x502 AND
0x503 PUSH1 0xe0
0x505 PUSH1 0x2
0x507 EXP
0x508 MUL
0x509 DUP2
0x50a MSTORE
0x50b PUSH1 0x4
0x50d ADD
0x50e PUSH1 0x20
0x510 PUSH1 0x40
0x512 MLOAD
0x513 DUP1
0x514 DUP4
0x515 SUB
0x516 DUP2
0x517 PUSH1 0x0
0x519 DUP8
0x51a DUP1
0x51b EXTCODESIZE
0x51c ISZERO
0x51d DUP1
0x51e ISZERO
0x51f PUSH2 0x527
0x522 JUMPI
---
0x4cc: JUMPDEST 
0x4cd: V293 = 0x58d15e176280000
0x4d6: V294 = 0x0
0x4da: V295 = S[0x0]
0x4dc: V296 = 0x100
0x4df: V297 = EXP 0x100 0x0
0x4e1: V298 = DIV V295 0x1
0x4e2: V299 = 0x1
0x4e4: V300 = 0xa0
0x4e6: V301 = 0x2
0x4e8: V302 = EXP 0x2 0xa0
0x4e9: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x4eb: V305 = 0x1
0x4ed: V306 = 0xa0
0x4ef: V307 = 0x2
0x4f1: V308 = EXP 0x2 0xa0
0x4f2: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x4f4: V311 = 0xd87574e0
0x4f9: V312 = 0x40
0x4fb: V313 = M[0x40]
0x4fd: V314 = 0xffffffff
0x502: V315 = AND 0xffffffff 0xd87574e0
0x503: V316 = 0xe0
0x505: V317 = 0x2
0x507: V318 = EXP 0x2 0xe0
0x508: V319 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x50a: M[V313] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x50b: V320 = 0x4
0x50d: V321 = ADD 0x4 V313
0x50e: V322 = 0x20
0x510: V323 = 0x40
0x512: V324 = M[0x40]
0x515: V325 = SUB V321 V324
0x517: V326 = 0x0
0x51b: V327 = EXTCODESIZE V310
0x51c: V328 = ISZERO V327
0x51e: V329 = ISZERO V328
0x51f: V330 = 0x527
0x522: JUMPI 0x527 V329
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x58d15e176280000, V310, 0xd87574e0, V321, 0x20, V324, V325, V324, 0x0, V310, V328]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, 0x20, V324, V325, V324, 0x0, V310, V328]

================================

Block 0x523
[0x523:0x526]
---
Predecessors: [0x4cc]
Successors: []
---
0x523 PUSH1 0x0
0x525 DUP1
0x526 REVERT
---
0x523: V331 = 0x0
0x526: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, 0x20, V324, V325, V324, 0x0, V310, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, 0x20, V324, V325, V324, 0x0, V310, V328]

================================

Block 0x527
[0x527:0x531]
---
Predecessors: [0x4cc]
Successors: [0x532, 0x53b]
---
0x527 JUMPDEST
0x528 POP
0x529 GAS
0x52a CALL
0x52b ISZERO
0x52c DUP1
0x52d ISZERO
0x52e PUSH2 0x53b
0x531 JUMPI
---
0x527: JUMPDEST 
0x529: V332 = GAS
0x52a: V333 = CALL V332 V310 0x0 V324 V325 V324 0x20
0x52b: V334 = ISZERO V333
0x52d: V335 = ISZERO V334
0x52e: V336 = 0x53b
0x531: JUMPI 0x53b V335
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, 0x20, V324, V325, V324, 0x0, V310, V328]
Stack pops: 7
Stack additions: [V334]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, V334]

================================

Block 0x532
[0x532:0x53a]
---
Predecessors: [0x527]
Successors: []
---
0x532 RETURNDATASIZE
0x533 PUSH1 0x0
0x535 DUP1
0x536 RETURNDATACOPY
0x537 RETURNDATASIZE
0x538 PUSH1 0x0
0x53a REVERT
---
0x532: V337 = RETURNDATASIZE
0x533: V338 = 0x0
0x536: RETURNDATACOPY 0x0 0x0 V337
0x537: V339 = RETURNDATASIZE
0x538: V340 = 0x0
0x53a: REVERT 0x0 V339
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, V334]

================================

Block 0x53b
[0x53b:0x54c]
---
Predecessors: [0x527]
Successors: [0x54d, 0x551]
---
0x53b JUMPDEST
0x53c POP
0x53d POP
0x53e POP
0x53f POP
0x540 PUSH1 0x40
0x542 MLOAD
0x543 RETURNDATASIZE
0x544 PUSH1 0x20
0x546 DUP2
0x547 LT
0x548 ISZERO
0x549 PUSH2 0x551
0x54c JUMPI
---
0x53b: JUMPDEST 
0x540: V341 = 0x40
0x542: V342 = M[0x40]
0x543: V343 = RETURNDATASIZE
0x544: V344 = 0x20
0x547: V345 = LT V343 0x20
0x548: V346 = ISZERO V345
0x549: V347 = 0x551
0x54c: JUMPI 0x551 V346
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V310, 0xd87574e0, V321, V334]
Stack pops: 4
Stack additions: [V342, V343]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V342, V343]

================================

Block 0x54d
[0x54d:0x550]
---
Predecessors: [0x53b]
Successors: []
---
0x54d PUSH1 0x0
0x54f DUP1
0x550 REVERT
---
0x54d: V348 = 0x0
0x550: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V342, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V342, V343]

================================

Block 0x551
[0x551:0x559]
---
Predecessors: [0x53b]
Successors: [0x55a, 0x55e]
---
0x551 JUMPDEST
0x552 POP
0x553 MLOAD
0x554 LT
0x555 ISZERO
0x556 PUSH2 0x55e
0x559 JUMPI
---
0x551: JUMPDEST 
0x553: V349 = M[V342]
0x554: V350 = LT V349 0x58d15e176280000
0x555: V351 = ISZERO V350
0x556: V352 = 0x55e
0x559: JUMPI 0x55e V351
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x58d15e176280000, V342, V343]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0]

================================

Block 0x55a
[0x55a:0x55d]
---
Predecessors: [0x551]
Successors: []
---
0x55a PUSH1 0x0
0x55c DUP1
0x55d REVERT
---
0x55a: V353 = 0x0
0x55d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0]

================================

Block 0x55e
[0x55e:0x5ad]
---
Predecessors: [0x551]
Successors: [0x5ae, 0x5b2]
---
0x55e JUMPDEST
0x55f PUSH1 0xa
0x561 PUSH1 0x0
0x563 DUP1
0x564 SWAP1
0x565 SLOAD
0x566 SWAP1
0x567 PUSH2 0x100
0x56a EXP
0x56b SWAP1
0x56c DIV
0x56d PUSH1 0x1
0x56f PUSH1 0xa0
0x571 PUSH1 0x2
0x573 EXP
0x574 SUB
0x575 AND
0x576 PUSH1 0x1
0x578 PUSH1 0xa0
0x57a PUSH1 0x2
0x57c EXP
0x57d SUB
0x57e AND
0x57f PUSH4 0x11a09ae7
0x584 PUSH1 0x40
0x586 MLOAD
0x587 DUP2
0x588 PUSH4 0xffffffff
0x58d AND
0x58e PUSH1 0xe0
0x590 PUSH1 0x2
0x592 EXP
0x593 MUL
0x594 DUP2
0x595 MSTORE
0x596 PUSH1 0x4
0x598 ADD
0x599 PUSH1 0x20
0x59b PUSH1 0x40
0x59d MLOAD
0x59e DUP1
0x59f DUP4
0x5a0 SUB
0x5a1 DUP2
0x5a2 PUSH1 0x0
0x5a4 DUP8
0x5a5 DUP1
0x5a6 EXTCODESIZE
0x5a7 ISZERO
0x5a8 DUP1
0x5a9 ISZERO
0x5aa PUSH2 0x5b2
0x5ad JUMPI
---
0x55e: JUMPDEST 
0x55f: V354 = 0xa
0x561: V355 = 0x0
0x565: V356 = S[0x0]
0x567: V357 = 0x100
0x56a: V358 = EXP 0x100 0x0
0x56c: V359 = DIV V356 0x1
0x56d: V360 = 0x1
0x56f: V361 = 0xa0
0x571: V362 = 0x2
0x573: V363 = EXP 0x2 0xa0
0x574: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x575: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x576: V366 = 0x1
0x578: V367 = 0xa0
0x57a: V368 = 0x2
0x57c: V369 = EXP 0x2 0xa0
0x57d: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57e: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x57f: V372 = 0x11a09ae7
0x584: V373 = 0x40
0x586: V374 = M[0x40]
0x588: V375 = 0xffffffff
0x58d: V376 = AND 0xffffffff 0x11a09ae7
0x58e: V377 = 0xe0
0x590: V378 = 0x2
0x592: V379 = EXP 0x2 0xe0
0x593: V380 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x595: M[V374] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x596: V381 = 0x4
0x598: V382 = ADD 0x4 V374
0x599: V383 = 0x20
0x59b: V384 = 0x40
0x59d: V385 = M[0x40]
0x5a0: V386 = SUB V382 V385
0x5a2: V387 = 0x0
0x5a6: V388 = EXTCODESIZE V371
0x5a7: V389 = ISZERO V388
0x5a9: V390 = ISZERO V389
0x5aa: V391 = 0x5b2
0x5ad: JUMPI 0x5b2 V390
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0xa, V371, 0x11a09ae7, V382, 0x20, V385, V386, V385, 0x0, V371, V389]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, 0x20, V385, V386, V385, 0x0, V371, V389]

================================

Block 0x5ae
[0x5ae:0x5b1]
---
Predecessors: [0x55e]
Successors: []
---
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 REVERT
---
0x5ae: V392 = 0x0
0x5b1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, 0x20, V385, V386, V385, 0x0, V371, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, 0x20, V385, V386, V385, 0x0, V371, V389]

================================

Block 0x5b2
[0x5b2:0x5bc]
---
Predecessors: [0x55e]
Successors: [0x5bd, 0x5c6]
---
0x5b2 JUMPDEST
0x5b3 POP
0x5b4 GAS
0x5b5 CALL
0x5b6 ISZERO
0x5b7 DUP1
0x5b8 ISZERO
0x5b9 PUSH2 0x5c6
0x5bc JUMPI
---
0x5b2: JUMPDEST 
0x5b4: V393 = GAS
0x5b5: V394 = CALL V393 V371 0x0 V385 V386 V385 0x20
0x5b6: V395 = ISZERO V394
0x5b8: V396 = ISZERO V395
0x5b9: V397 = 0x5c6
0x5bc: JUMPI 0x5c6 V396
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, 0x20, V385, V386, V385, 0x0, V371, V389]
Stack pops: 7
Stack additions: [V395]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, V395]

================================

Block 0x5bd
[0x5bd:0x5c5]
---
Predecessors: [0x5b2]
Successors: []
---
0x5bd RETURNDATASIZE
0x5be PUSH1 0x0
0x5c0 DUP1
0x5c1 RETURNDATACOPY
0x5c2 RETURNDATASIZE
0x5c3 PUSH1 0x0
0x5c5 REVERT
---
0x5bd: V398 = RETURNDATASIZE
0x5be: V399 = 0x0
0x5c1: RETURNDATACOPY 0x0 0x0 V398
0x5c2: V400 = RETURNDATASIZE
0x5c3: V401 = 0x0
0x5c5: REVERT 0x0 V400
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, V395]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, V395]

================================

Block 0x5c6
[0x5c6:0x5d7]
---
Predecessors: [0x5b2]
Successors: [0x5d8, 0x5dc]
---
0x5c6 JUMPDEST
0x5c7 POP
0x5c8 POP
0x5c9 POP
0x5ca POP
0x5cb PUSH1 0x40
0x5cd MLOAD
0x5ce RETURNDATASIZE
0x5cf PUSH1 0x20
0x5d1 DUP2
0x5d2 LT
0x5d3 ISZERO
0x5d4 PUSH2 0x5dc
0x5d7 JUMPI
---
0x5c6: JUMPDEST 
0x5cb: V402 = 0x40
0x5cd: V403 = M[0x40]
0x5ce: V404 = RETURNDATASIZE
0x5cf: V405 = 0x20
0x5d2: V406 = LT V404 0x20
0x5d3: V407 = ISZERO V406
0x5d4: V408 = 0x5dc
0x5d7: JUMPI 0x5dc V407
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V371, 0x11a09ae7, V382, V395]
Stack pops: 4
Stack additions: [V403, V404]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V403, V404]

================================

Block 0x5d8
[0x5d8:0x5db]
---
Predecessors: [0x5c6]
Successors: []
---
0x5d8 PUSH1 0x0
0x5da DUP1
0x5db REVERT
---
0x5d8: V409 = 0x0
0x5db: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V403, V404]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V403, V404]

================================

Block 0x5dc
[0x5dc:0x5e4]
---
Predecessors: [0x5c6]
Successors: [0x5e5, 0x5e9]
---
0x5dc JUMPDEST
0x5dd POP
0x5de MLOAD
0x5df LT
0x5e0 ISZERO
0x5e1 PUSH2 0x5e9
0x5e4 JUMPI
---
0x5dc: JUMPDEST 
0x5de: V410 = M[V403]
0x5df: V411 = LT V410 0xa
0x5e0: V412 = ISZERO V411
0x5e1: V413 = 0x5e9
0x5e4: JUMPI 0x5e9 V412
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0xa, V403, V404]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0]

================================

Block 0x5e5
[0x5e5:0x5e8]
---
Predecessors: [0x5dc]
Successors: []
---
0x5e5 PUSH1 0x0
0x5e7 DUP1
0x5e8 REVERT
---
0x5e5: V414 = 0x0
0x5e8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0]

================================

Block 0x5e9
[0x5e9:0x5f0]
---
Predecessors: [0x5dc]
Successors: [0x61c]
---
0x5e9 JUMPDEST
0x5ea PUSH2 0x5f1
0x5ed PUSH2 0x61c
0x5f0 JUMP
---
0x5e9: JUMPDEST 
0x5ea: V415 = 0x5f1
0x5ed: V416 = 0x61c
0x5f0: JUMP 0x61c
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x5f1]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1]

================================

Block 0x5f1
[0x5f1:0x60d]
---
Predecessors: [0x924]
Successors: [0x60e, 0x617]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x8
0x5f4 SLOAD
0x5f5 SWAP3
0x5f6 SWAP6
0x5f7 POP
0x5f8 SWAP1
0x5f9 SWAP4
0x5fa POP
0x5fb SWAP2
0x5fc POP
0x5fd PUSH8 0x16345785d8a0000
0x606 DUP5
0x607 ADD
0x608 LT
0x609 ISZERO
0x60a PUSH2 0x617
0x60d JUMPI
---
0x5f1: JUMPDEST 
0x5f2: V417 = 0x8
0x5f4: V418 = S[0x8]
0x5fd: V419 = 0x16345785d8a0000
0x607: V420 = ADD S2 0x16345785d8a0000
0x608: V421 = LT V420 V418
0x609: V422 = ISZERO V421
0x60a: V423 = 0x617
0x60d: JUMPI 0x617 V422
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x6d, S2, S1, S0]

================================

Block 0x60e
[0x60e:0x616]
---
Predecessors: [0x5f1]
Successors: [0x934]
---
0x60e PUSH2 0x617
0x611 DUP3
0x612 DUP3
0x613 PUSH2 0x934
0x616 JUMP
---
0x60e: V424 = 0x617
0x613: V425 = 0x934
0x616: JUMP 0x934
---
Entry stack: [V13, 0x6d, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x617, S1, S0]
Exit stack: [V13, 0x6d, S2, S1, S0, 0x617, S1, S0]

================================

Block 0x617
[0x617:0x61b]
---
Predecessors: [0x5f1, 0xa4c]
Successors: [0x6d]
---
0x617 JUMPDEST
0x618 POP
0x619 POP
0x61a POP
0x61b JUMP
---
0x617: JUMPDEST 
0x61b: JUMP 0x6d
---
Entry stack: [V13, 0x6d, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x61c
[0x61c:0x634]
---
Predecessors: [0x5e9]
Successors: [0x146]
---
0x61c JUMPDEST
0x61d PUSH1 0x0
0x61f DUP1
0x620 PUSH1 0x0
0x622 DUP1
0x623 PUSH1 0x0
0x625 DUP1
0x626 PUSH1 0x0
0x628 DUP1
0x629 PUSH1 0x0
0x62b PUSH2 0x635
0x62e PUSH1 0x9
0x630 SLOAD
0x631 PUSH2 0x146
0x634 JUMP
---
0x61c: JUMPDEST 
0x61d: V426 = 0x0
0x620: V427 = 0x0
0x623: V428 = 0x0
0x626: V429 = 0x0
0x629: V430 = 0x0
0x62b: V431 = 0x635
0x62e: V432 = 0x9
0x630: V433 = S[0x9]
0x631: V434 = 0x146
0x634: JUMP 0x146
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x635, V433]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x635, V433]

================================

Block 0x635
[0x635:0x690]
---
Predecessors: [0x4a9]
Successors: [0x691, 0x695]
---
0x635 JUMPDEST
0x636 SWAP6
0x637 POP
0x638 PUSH1 0x0
0x63a SWAP5
0x63b POP
0x63c PUSH1 0x0
0x63e SWAP4
0x63f POP
0x640 PUSH1 0x0
0x642 SWAP3
0x643 POP
0x644 PUSH1 0x0
0x646 DUP1
0x647 SWAP1
0x648 SLOAD
0x649 SWAP1
0x64a PUSH2 0x100
0x64d EXP
0x64e SWAP1
0x64f DIV
0x650 PUSH1 0x1
0x652 PUSH1 0xa0
0x654 PUSH1 0x2
0x656 EXP
0x657 SUB
0x658 AND
0x659 PUSH1 0x1
0x65b PUSH1 0xa0
0x65d PUSH1 0x2
0x65f EXP
0x660 SUB
0x661 AND
0x662 PUSH4 0x11a09ae7
0x667 PUSH1 0x40
0x669 MLOAD
0x66a DUP2
0x66b PUSH4 0xffffffff
0x670 AND
0x671 PUSH1 0xe0
0x673 PUSH1 0x2
0x675 EXP
0x676 MUL
0x677 DUP2
0x678 MSTORE
0x679 PUSH1 0x4
0x67b ADD
0x67c PUSH1 0x20
0x67e PUSH1 0x40
0x680 MLOAD
0x681 DUP1
0x682 DUP4
0x683 SUB
0x684 DUP2
0x685 PUSH1 0x0
0x687 DUP8
0x688 DUP1
0x689 EXTCODESIZE
0x68a ISZERO
0x68b DUP1
0x68c ISZERO
0x68d PUSH2 0x695
0x690 JUMPI
---
0x635: JUMPDEST 
0x638: V435 = 0x0
0x63c: V436 = 0x0
0x640: V437 = 0x0
0x644: V438 = 0x0
0x648: V439 = S[0x0]
0x64a: V440 = 0x100
0x64d: V441 = EXP 0x100 0x0
0x64f: V442 = DIV V439 0x1
0x650: V443 = 0x1
0x652: V444 = 0xa0
0x654: V445 = 0x2
0x656: V446 = EXP 0x2 0xa0
0x657: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x658: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x659: V449 = 0x1
0x65b: V450 = 0xa0
0x65d: V451 = 0x2
0x65f: V452 = EXP 0x2 0xa0
0x660: V453 = SUB 0x10000000000000000000000000000000000000000 0x1
0x661: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x662: V455 = 0x11a09ae7
0x667: V456 = 0x40
0x669: V457 = M[0x40]
0x66b: V458 = 0xffffffff
0x670: V459 = AND 0xffffffff 0x11a09ae7
0x671: V460 = 0xe0
0x673: V461 = 0x2
0x675: V462 = EXP 0x2 0xe0
0x676: V463 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x678: M[V457] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x679: V464 = 0x4
0x67b: V465 = ADD 0x4 V457
0x67c: V466 = 0x20
0x67e: V467 = 0x40
0x680: V468 = M[0x40]
0x683: V469 = SUB V465 V468
0x685: V470 = 0x0
0x689: V471 = EXTCODESIZE V454
0x68a: V472 = ISZERO V471
0x68c: V473 = ISZERO V472
0x68d: V474 = 0x695
0x690: JUMPI 0x695 V473
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S0, 0x0, 0x0, 0x0, S2, S1, V454, 0x11a09ae7, V465, 0x20, V468, V469, V468, 0x0, V454, V472]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S0, 0x0, 0x0, 0x0, S2, S1, V454, 0x11a09ae7, V465, 0x20, V468, V469, V468, 0x0, V454, V472]

================================

Block 0x691
[0x691:0x694]
---
Predecessors: [0x635]
Successors: []
---
0x691 PUSH1 0x0
0x693 DUP1
0x694 REVERT
---
0x691: V475 = 0x0
0x694: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, 0x0, 0x0, 0x0, S11, S10, V454, 0x11a09ae7, V465, 0x20, V468, V469, V468, 0x0, V454, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, 0x0, 0x0, 0x0, S11, S10, V454, 0x11a09ae7, V465, 0x20, V468, V469, V468, 0x0, V454, V472]

================================

Block 0x695
[0x695:0x69f]
---
Predecessors: [0x635]
Successors: [0x6a0, 0x6a9]
---
0x695 JUMPDEST
0x696 POP
0x697 GAS
0x698 CALL
0x699 ISZERO
0x69a DUP1
0x69b ISZERO
0x69c PUSH2 0x6a9
0x69f JUMPI
---
0x695: JUMPDEST 
0x697: V476 = GAS
0x698: V477 = CALL V476 V454 0x0 V468 V469 V468 0x20
0x699: V478 = ISZERO V477
0x69b: V479 = ISZERO V478
0x69c: V480 = 0x6a9
0x69f: JUMPI 0x6a9 V479
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, 0x0, 0x0, 0x0, S11, S10, V454, 0x11a09ae7, V465, 0x20, V468, V469, V468, 0x0, V454, V472]
Stack pops: 7
Stack additions: [V478]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, 0x0, 0x0, 0x0, S11, S10, V454, 0x11a09ae7, V465, V478]

================================

Block 0x6a0
[0x6a0:0x6a8]
---
Predecessors: [0x695]
Successors: []
---
0x6a0 RETURNDATASIZE
0x6a1 PUSH1 0x0
0x6a3 DUP1
0x6a4 RETURNDATACOPY
0x6a5 RETURNDATASIZE
0x6a6 PUSH1 0x0
0x6a8 REVERT
---
0x6a0: V481 = RETURNDATASIZE
0x6a1: V482 = 0x0
0x6a4: RETURNDATACOPY 0x0 0x0 V481
0x6a5: V483 = RETURNDATASIZE
0x6a6: V484 = 0x0
0x6a8: REVERT 0x0 V483
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, S5, S4, V454, 0x11a09ae7, V465, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, S5, S4, V454, 0x11a09ae7, V465, V478]

================================

Block 0x6a9
[0x6a9:0x6ba]
---
Predecessors: [0x695]
Successors: [0x6bb, 0x6bf]
---
0x6a9 JUMPDEST
0x6aa POP
0x6ab POP
0x6ac POP
0x6ad POP
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 RETURNDATASIZE
0x6b2 PUSH1 0x20
0x6b4 DUP2
0x6b5 LT
0x6b6 ISZERO
0x6b7 PUSH2 0x6bf
0x6ba JUMPI
---
0x6a9: JUMPDEST 
0x6ae: V485 = 0x40
0x6b0: V486 = M[0x40]
0x6b1: V487 = RETURNDATASIZE
0x6b2: V488 = 0x20
0x6b5: V489 = LT V487 0x20
0x6b6: V490 = ISZERO V489
0x6b7: V491 = 0x6bf
0x6ba: JUMPI 0x6bf V490
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, S5, S4, V454, 0x11a09ae7, V465, V478]
Stack pops: 4
Stack additions: [V486, V487]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S9, 0x0, 0x0, 0x0, S5, S4, V486, V487]

================================

Block 0x6bb
[0x6bb:0x6be]
---
Predecessors: [0x6a9]
Successors: []
---
0x6bb PUSH1 0x0
0x6bd DUP1
0x6be REVERT
---
0x6bb: V492 = 0x0
0x6be: REVERT 0x0 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, S3, S2, V486, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, S3, S2, V486, V487]

================================

Block 0x6bf
[0x6bf:0x6c7]
---
Predecessors: [0x6a9]
Successors: [0x6c8]
---
0x6bf JUMPDEST
0x6c0 POP
0x6c1 MLOAD
0x6c2 SWAP2
0x6c3 POP
0x6c4 PUSH1 0x0
0x6c6 SWAP1
0x6c7 POP
---
0x6bf: JUMPDEST 
0x6c1: V493 = M[V486]
0x6c4: V494 = 0x0
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, S3, S2, V486, V487]
Stack pops: 4
Stack additions: [V493, 0x0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S7, 0x0, 0x0, 0x0, V493, 0x0]

================================

Block 0x6c8
[0x6c8:0x6cf]
---
Predecessors: [0x6bf, 0x91f]
Successors: [0x6d0, 0x924]
---
0x6c8 JUMPDEST
0x6c9 DUP1
0x6ca ISZERO
0x6cb ISZERO
0x6cc PUSH2 0x924
0x6cf JUMPI
---
0x6c8: JUMPDEST 
0x6ca: V495 = ISZERO S0
0x6cb: V496 = ISZERO V495
0x6cc: V497 = 0x924
0x6cf: JUMPI 0x924 V496
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x6d0
[0x6d0:0x721]
---
Predecessors: [0x6c8]
Successors: [0x722]
---
0x6d0 NUMBER
0x6d1 TIMESTAMP
0x6d2 DUP8
0x6d3 PUSH1 0x40
0x6d5 MLOAD
0x6d6 PUSH1 0x20
0x6d8 ADD
0x6d9 DUP1
0x6da DUP3
0x6db PUSH1 0x1
0x6dd PUSH1 0xa0
0x6df PUSH1 0x2
0x6e1 EXP
0x6e2 SUB
0x6e3 AND
0x6e4 PUSH1 0x1
0x6e6 PUSH1 0xa0
0x6e8 PUSH1 0x2
0x6ea EXP
0x6eb SUB
0x6ec AND
0x6ed PUSH13 0x1000000000000000000000000
0x6fb MUL
0x6fc DUP2
0x6fd MSTORE
0x6fe PUSH1 0x14
0x700 ADD
0x701 SWAP2
0x702 POP
0x703 POP
0x704 PUSH1 0x40
0x706 MLOAD
0x707 PUSH1 0x20
0x709 DUP2
0x70a DUP4
0x70b SUB
0x70c SUB
0x70d DUP2
0x70e MSTORE
0x70f SWAP1
0x710 PUSH1 0x40
0x712 MSTORE
0x713 PUSH1 0x40
0x715 MLOAD
0x716 DUP1
0x717 DUP3
0x718 DUP1
0x719 MLOAD
0x71a SWAP1
0x71b PUSH1 0x20
0x71d ADD
0x71e SWAP1
0x71f DUP1
0x720 DUP4
0x721 DUP4
---
0x6d0: V498 = NUMBER
0x6d1: V499 = TIMESTAMP
0x6d3: V500 = 0x40
0x6d5: V501 = M[0x40]
0x6d6: V502 = 0x20
0x6d8: V503 = ADD 0x20 V501
0x6db: V504 = 0x1
0x6dd: V505 = 0xa0
0x6df: V506 = 0x2
0x6e1: V507 = EXP 0x2 0xa0
0x6e2: V508 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e3: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x6e4: V510 = 0x1
0x6e6: V511 = 0xa0
0x6e8: V512 = 0x2
0x6ea: V513 = EXP 0x2 0xa0
0x6eb: V514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ec: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x6ed: V516 = 0x1000000000000000000000000
0x6fb: V517 = MUL 0x1000000000000000000000000 V515
0x6fd: M[V503] = V517
0x6fe: V518 = 0x14
0x700: V519 = ADD 0x14 V503
0x704: V520 = 0x40
0x706: V521 = M[0x40]
0x707: V522 = 0x20
0x70b: V523 = SUB V519 V521
0x70c: V524 = SUB V523 0x20
0x70e: M[V521] = V524
0x710: V525 = 0x40
0x712: M[0x40] = V519
0x713: V526 = 0x40
0x715: V527 = M[0x40]
0x719: V528 = M[V521]
0x71b: V529 = 0x20
0x71d: V530 = ADD 0x20 V521
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V498, V499, V521, V527, V527, V530, V528, V528, V527, V530]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0, V498, V499, V521, V527, V527, V530, V528, V528, V527, V530]

================================

Block 0x722
[0x722:0x72a]
---
Predecessors: [0x6d0, 0x72b]
Successors: [0x72b, 0x741]
---
0x722 JUMPDEST
0x723 PUSH1 0x20
0x725 DUP4
0x726 LT
0x727 PUSH2 0x741
0x72a JUMPI
---
0x722: JUMPDEST 
0x723: V531 = 0x20
0x726: V532 = LT S2 0x20
0x727: V533 = 0x741
0x72a: JUMPI 0x741 V532
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V498, V499, V521, V527, V527, V530, V528, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V498, V499, V521, V527, V527, V530, V528, S2, S1, S0]

================================

Block 0x72b
[0x72b:0x740]
---
Predecessors: [0x722]
Successors: [0x722]
---
0x72b DUP1
0x72c MLOAD
0x72d DUP3
0x72e MSTORE
0x72f PUSH1 0x1f
0x731 NOT
0x732 SWAP1
0x733 SWAP3
0x734 ADD
0x735 SWAP2
0x736 PUSH1 0x20
0x738 SWAP2
0x739 DUP3
0x73a ADD
0x73b SWAP2
0x73c ADD
0x73d PUSH2 0x722
0x740 JUMP
---
0x72c: V534 = M[S0]
0x72e: M[S1] = V534
0x72f: V535 = 0x1f
0x731: V536 = NOT 0x1f
0x734: V537 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x736: V538 = 0x20
0x73a: V539 = ADD 0x20 S1
0x73c: V540 = ADD 0x20 S0
0x73d: V541 = 0x722
0x740: JUMP 0x722
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V498, V499, V521, V527, V527, V530, V528, S2, S1, S0]
Stack pops: 3
Stack additions: [V537, V539, V540]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V498, V499, V521, V527, V527, V530, V528, V537, V539, V540]

================================

Block 0x741
[0x741:0x775]
---
Predecessors: [0x722]
Successors: [0x776, 0x777]
---
0x741 JUMPDEST
0x742 MLOAD
0x743 DUP2
0x744 MLOAD
0x745 PUSH1 0x20
0x747 SWAP4
0x748 SWAP1
0x749 SWAP4
0x74a SUB
0x74b PUSH2 0x100
0x74e EXP
0x74f PUSH1 0x0
0x751 NOT
0x752 ADD
0x753 DUP1
0x754 NOT
0x755 SWAP1
0x756 SWAP2
0x757 AND
0x758 SWAP3
0x759 AND
0x75a SWAP2
0x75b SWAP1
0x75c SWAP2
0x75d OR
0x75e SWAP1
0x75f MSTORE
0x760 PUSH1 0x40
0x762 MLOAD
0x763 SWAP3
0x764 ADD
0x765 DUP3
0x766 SWAP1
0x767 SUB
0x768 SWAP1
0x769 SWAP2
0x76a SHA3
0x76b SWAP3
0x76c POP
0x76d POP
0x76e POP
0x76f DUP2
0x770 ISZERO
0x771 ISZERO
0x772 PUSH2 0x777
0x775 JUMPI
---
0x741: JUMPDEST 
0x742: V542 = M[S0]
0x744: V543 = M[S1]
0x745: V544 = 0x20
0x74a: V545 = SUB 0x20 S2
0x74b: V546 = 0x100
0x74e: V547 = EXP 0x100 V545
0x74f: V548 = 0x0
0x751: V549 = NOT 0x0
0x752: V550 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V547
0x754: V551 = NOT V550
0x757: V552 = AND V542 V551
0x759: V553 = AND V543 V550
0x75d: V554 = OR V553 V552
0x75f: M[S1] = V554
0x760: V555 = 0x40
0x762: V556 = M[0x40]
0x764: V557 = ADD V527 V528
0x767: V558 = SUB V557 V556
0x76a: V559 = SHA3 V556 V558
0x770: V560 = ISZERO V499
0x771: V561 = ISZERO V560
0x772: V562 = 0x777
0x775: JUMPI 0x777 V561
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V498, V499, V521, V527, V527, V530, V528, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V559]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S15, S14, S13, S12, S11, S10, V498, V499, V559]

================================

Block 0x776
[0x776:0x776]
---
Predecessors: [0x741]
Successors: []
---
0x776 INVALID
---
0x776: INVALID 
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V498, V499, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V498, V499, V559]

================================

Block 0x777
[0x777:0x7ca]
---
Predecessors: [0x741]
Successors: [0x7cb]
---
0x777 JUMPDEST
0x778 DIV
0x779 GASLIMIT
0x77a TIMESTAMP
0x77b COINBASE
0x77c PUSH1 0x40
0x77e MLOAD
0x77f PUSH1 0x20
0x781 ADD
0x782 DUP1
0x783 DUP3
0x784 PUSH1 0x1
0x786 PUSH1 0xa0
0x788 PUSH1 0x2
0x78a EXP
0x78b SUB
0x78c AND
0x78d PUSH1 0x1
0x78f PUSH1 0xa0
0x791 PUSH1 0x2
0x793 EXP
0x794 SUB
0x795 AND
0x796 PUSH13 0x1000000000000000000000000
0x7a4 MUL
0x7a5 DUP2
0x7a6 MSTORE
0x7a7 PUSH1 0x14
0x7a9 ADD
0x7aa SWAP2
0x7ab POP
0x7ac POP
0x7ad PUSH1 0x40
0x7af MLOAD
0x7b0 PUSH1 0x20
0x7b2 DUP2
0x7b3 DUP4
0x7b4 SUB
0x7b5 SUB
0x7b6 DUP2
0x7b7 MSTORE
0x7b8 SWAP1
0x7b9 PUSH1 0x40
0x7bb MSTORE
0x7bc PUSH1 0x40
0x7be MLOAD
0x7bf DUP1
0x7c0 DUP3
0x7c1 DUP1
0x7c2 MLOAD
0x7c3 SWAP1
0x7c4 PUSH1 0x20
0x7c6 ADD
0x7c7 SWAP1
0x7c8 DUP1
0x7c9 DUP4
0x7ca DUP4
---
0x777: JUMPDEST 
0x778: V563 = DIV V559 V499
0x779: V564 = GASLIMIT
0x77a: V565 = TIMESTAMP
0x77b: V566 = COINBASE
0x77c: V567 = 0x40
0x77e: V568 = M[0x40]
0x77f: V569 = 0x20
0x781: V570 = ADD 0x20 V568
0x784: V571 = 0x1
0x786: V572 = 0xa0
0x788: V573 = 0x2
0x78a: V574 = EXP 0x2 0xa0
0x78b: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78c: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x78d: V577 = 0x1
0x78f: V578 = 0xa0
0x791: V579 = 0x2
0x793: V580 = EXP 0x2 0xa0
0x794: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x795: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x796: V583 = 0x1000000000000000000000000
0x7a4: V584 = MUL 0x1000000000000000000000000 V582
0x7a6: M[V570] = V584
0x7a7: V585 = 0x14
0x7a9: V586 = ADD 0x14 V570
0x7ad: V587 = 0x40
0x7af: V588 = M[0x40]
0x7b0: V589 = 0x20
0x7b4: V590 = SUB V586 V588
0x7b5: V591 = SUB V590 0x20
0x7b7: M[V588] = V591
0x7b9: V592 = 0x40
0x7bb: M[0x40] = V586
0x7bc: V593 = 0x40
0x7be: V594 = M[0x40]
0x7c2: V595 = M[V588]
0x7c4: V596 = 0x20
0x7c6: V597 = ADD 0x20 V588
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V498, V499, V559]
Stack pops: 2
Stack additions: [V563, V564, V565, V588, V594, V594, V597, V595, V595, V594, V597]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S8, S7, S6, S5, S4, S3, V498, V563, V564, V565, V588, V594, V594, V597, V595, V595, V594, V597]

================================

Block 0x7cb
[0x7cb:0x7d3]
---
Predecessors: [0x777, 0x7d4]
Successors: [0x7d4, 0x7ea]
---
0x7cb JUMPDEST
0x7cc PUSH1 0x20
0x7ce DUP4
0x7cf LT
0x7d0 PUSH2 0x7ea
0x7d3 JUMPI
---
0x7cb: JUMPDEST 
0x7cc: V598 = 0x20
0x7cf: V599 = LT S2 0x20
0x7d0: V600 = 0x7ea
0x7d3: JUMPI 0x7ea V599
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V498, V563, V564, V565, V588, V594, V594, V597, V595, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V498, V563, V564, V565, V588, V594, V594, V597, V595, S2, S1, S0]

================================

Block 0x7d4
[0x7d4:0x7e9]
---
Predecessors: [0x7cb]
Successors: [0x7cb]
---
0x7d4 DUP1
0x7d5 MLOAD
0x7d6 DUP3
0x7d7 MSTORE
0x7d8 PUSH1 0x1f
0x7da NOT
0x7db SWAP1
0x7dc SWAP3
0x7dd ADD
0x7de SWAP2
0x7df PUSH1 0x20
0x7e1 SWAP2
0x7e2 DUP3
0x7e3 ADD
0x7e4 SWAP2
0x7e5 ADD
0x7e6 PUSH2 0x7cb
0x7e9 JUMP
---
0x7d5: V601 = M[S0]
0x7d7: M[S1] = V601
0x7d8: V602 = 0x1f
0x7da: V603 = NOT 0x1f
0x7dd: V604 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7df: V605 = 0x20
0x7e3: V606 = ADD 0x20 S1
0x7e5: V607 = ADD 0x20 S0
0x7e6: V608 = 0x7cb
0x7e9: JUMP 0x7cb
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V498, V563, V564, V565, V588, V594, V594, V597, V595, S2, S1, S0]
Stack pops: 3
Stack additions: [V604, V606, V607]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V498, V563, V564, V565, V588, V594, V594, V597, V595, V604, V606, V607]

================================

Block 0x7ea
[0x7ea:0x81e]
---
Predecessors: [0x7cb]
Successors: [0x81f, 0x820]
---
0x7ea JUMPDEST
0x7eb MLOAD
0x7ec DUP2
0x7ed MLOAD
0x7ee PUSH1 0x20
0x7f0 SWAP4
0x7f1 SWAP1
0x7f2 SWAP4
0x7f3 SUB
0x7f4 PUSH2 0x100
0x7f7 EXP
0x7f8 PUSH1 0x0
0x7fa NOT
0x7fb ADD
0x7fc DUP1
0x7fd NOT
0x7fe SWAP1
0x7ff SWAP2
0x800 AND
0x801 SWAP3
0x802 AND
0x803 SWAP2
0x804 SWAP1
0x805 SWAP2
0x806 OR
0x807 SWAP1
0x808 MSTORE
0x809 PUSH1 0x40
0x80b MLOAD
0x80c SWAP3
0x80d ADD
0x80e DUP3
0x80f SWAP1
0x810 SUB
0x811 SWAP1
0x812 SWAP2
0x813 SHA3
0x814 SWAP3
0x815 POP
0x816 POP
0x817 POP
0x818 DUP2
0x819 ISZERO
0x81a ISZERO
0x81b PUSH2 0x820
0x81e JUMPI
---
0x7ea: JUMPDEST 
0x7eb: V609 = M[S0]
0x7ed: V610 = M[S1]
0x7ee: V611 = 0x20
0x7f3: V612 = SUB 0x20 S2
0x7f4: V613 = 0x100
0x7f7: V614 = EXP 0x100 V612
0x7f8: V615 = 0x0
0x7fa: V616 = NOT 0x0
0x7fb: V617 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V614
0x7fd: V618 = NOT V617
0x800: V619 = AND V609 V618
0x802: V620 = AND V610 V617
0x806: V621 = OR V620 V619
0x808: M[S1] = V621
0x809: V622 = 0x40
0x80b: V623 = M[0x40]
0x80d: V624 = ADD V594 V595
0x810: V625 = SUB V624 V623
0x813: V626 = SHA3 V623 V625
0x819: V627 = ISZERO V565
0x81a: V628 = ISZERO V627
0x81b: V629 = 0x820
0x81e: JUMPI 0x820 V628
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V498, V563, V564, V565, V588, V594, V594, V597, V595, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V626]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S17, S16, S15, S14, S13, S12, V498, V563, V564, V565, V626]

================================

Block 0x81f
[0x81f:0x81f]
---
Predecessors: [0x7ea]
Successors: []
---
0x81f INVALID
---
0x81f: INVALID 
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V498, V563, V564, V565, V626]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V498, V563, V564, V565, V626]

================================

Block 0x820
[0x820:0x856]
---
Predecessors: [0x7ea]
Successors: [0x857]
---
0x820 JUMPDEST
0x821 DIV
0x822 DIFFICULTY
0x823 TIMESTAMP
0x824 ADD
0x825 ADD
0x826 ADD
0x827 ADD
0x828 ADD
0x829 PUSH1 0x40
0x82b MLOAD
0x82c PUSH1 0x20
0x82e ADD
0x82f DUP1
0x830 DUP3
0x831 DUP2
0x832 MSTORE
0x833 PUSH1 0x20
0x835 ADD
0x836 SWAP2
0x837 POP
0x838 POP
0x839 PUSH1 0x40
0x83b MLOAD
0x83c PUSH1 0x20
0x83e DUP2
0x83f DUP4
0x840 SUB
0x841 SUB
0x842 DUP2
0x843 MSTORE
0x844 SWAP1
0x845 PUSH1 0x40
0x847 MSTORE
0x848 PUSH1 0x40
0x84a MLOAD
0x84b DUP1
0x84c DUP3
0x84d DUP1
0x84e MLOAD
0x84f SWAP1
0x850 PUSH1 0x20
0x852 ADD
0x853 SWAP1
0x854 DUP1
0x855 DUP4
0x856 DUP4
---
0x820: JUMPDEST 
0x821: V630 = DIV V626 V565
0x822: V631 = DIFFICULTY
0x823: V632 = TIMESTAMP
0x824: V633 = ADD V632 V631
0x825: V634 = ADD V633 V630
0x826: V635 = ADD V634 V564
0x827: V636 = ADD V635 V563
0x828: V637 = ADD V636 V498
0x829: V638 = 0x40
0x82b: V639 = M[0x40]
0x82c: V640 = 0x20
0x82e: V641 = ADD 0x20 V639
0x832: M[V641] = V637
0x833: V642 = 0x20
0x835: V643 = ADD 0x20 V641
0x839: V644 = 0x40
0x83b: V645 = M[0x40]
0x83c: V646 = 0x20
0x840: V647 = SUB V643 V645
0x841: V648 = SUB V647 0x20
0x843: M[V645] = V648
0x845: V649 = 0x40
0x847: M[0x40] = V643
0x848: V650 = 0x40
0x84a: V651 = M[0x40]
0x84e: V652 = M[V645]
0x850: V653 = 0x20
0x852: V654 = ADD 0x20 V645
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V498, V563, V564, V565, V626]
Stack pops: 5
Stack additions: [V645, V651, V651, V654, V652, V652, V651, V654]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S10, S9, S8, S7, S6, S5, V645, V651, V651, V654, V652, V652, V651, V654]

================================

Block 0x857
[0x857:0x85f]
---
Predecessors: [0x820, 0x860]
Successors: [0x860, 0x876]
---
0x857 JUMPDEST
0x858 PUSH1 0x20
0x85a DUP4
0x85b LT
0x85c PUSH2 0x876
0x85f JUMPI
---
0x857: JUMPDEST 
0x858: V655 = 0x20
0x85b: V656 = LT S2 0x20
0x85c: V657 = 0x876
0x85f: JUMPI 0x876 V656
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V645, V651, V651, V654, V652, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V645, V651, V651, V654, V652, S2, S1, S0]

================================

Block 0x860
[0x860:0x875]
---
Predecessors: [0x857]
Successors: [0x857]
---
0x860 DUP1
0x861 MLOAD
0x862 DUP3
0x863 MSTORE
0x864 PUSH1 0x1f
0x866 NOT
0x867 SWAP1
0x868 SWAP3
0x869 ADD
0x86a SWAP2
0x86b PUSH1 0x20
0x86d SWAP2
0x86e DUP3
0x86f ADD
0x870 SWAP2
0x871 ADD
0x872 PUSH2 0x857
0x875 JUMP
---
0x861: V658 = M[S0]
0x863: M[S1] = V658
0x864: V659 = 0x1f
0x866: V660 = NOT 0x1f
0x869: V661 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x86b: V662 = 0x20
0x86f: V663 = ADD 0x20 S1
0x871: V664 = ADD 0x20 S0
0x872: V665 = 0x857
0x875: JUMP 0x857
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V645, V651, V651, V654, V652, S2, S1, S0]
Stack pops: 3
Stack additions: [V661, V663, V664]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V645, V651, V651, V654, V652, V661, V663, V664]

================================

Block 0x876
[0x876:0x8b3]
---
Predecessors: [0x857]
Successors: [0x8b4, 0x8d5]
---
0x876 JUMPDEST
0x877 MLOAD
0x878 DUP2
0x879 MLOAD
0x87a PUSH1 0x20
0x87c SWAP4
0x87d SWAP1
0x87e SWAP4
0x87f SUB
0x880 PUSH2 0x100
0x883 EXP
0x884 PUSH1 0x0
0x886 NOT
0x887 ADD
0x888 DUP1
0x889 NOT
0x88a SWAP1
0x88b SWAP2
0x88c AND
0x88d SWAP3
0x88e AND
0x88f SWAP2
0x890 SWAP1
0x891 SWAP2
0x892 OR
0x893 SWAP1
0x894 MSTORE
0x895 PUSH1 0x40
0x897 MLOAD
0x898 SWAP3
0x899 ADD
0x89a DUP3
0x89b SWAP1
0x89c SUB
0x89d SWAP1
0x89e SWAP2
0x89f SHA3
0x8a0 SWAP6
0x8a1 POP
0x8a2 POP
0x8a3 POP
0x8a4 POP
0x8a5 PUSH2 0x3e8
0x8a8 DUP1
0x8a9 DUP5
0x8aa DIV
0x8ab MUL
0x8ac DUP4
0x8ad SUB
0x8ae DUP3
0x8af GT
0x8b0 PUSH2 0x8d5
0x8b3 JUMPI
---
0x876: JUMPDEST 
0x877: V666 = M[S0]
0x879: V667 = M[S1]
0x87a: V668 = 0x20
0x87f: V669 = SUB 0x20 S2
0x880: V670 = 0x100
0x883: V671 = EXP 0x100 V669
0x884: V672 = 0x0
0x886: V673 = NOT 0x0
0x887: V674 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V671
0x889: V675 = NOT V674
0x88c: V676 = AND V666 V675
0x88e: V677 = AND V667 V674
0x892: V678 = OR V677 V676
0x894: M[S1] = V678
0x895: V679 = 0x40
0x897: V680 = M[0x40]
0x899: V681 = ADD V651 V652
0x89c: V682 = SUB V681 V680
0x89f: V683 = SHA3 V680 V682
0x8a5: V684 = 0x3e8
0x8aa: V685 = DIV V683 0x3e8
0x8ab: V686 = MUL V685 0x3e8
0x8ad: V687 = SUB V683 V686
0x8af: V688 = GT S9 V687
0x8b0: V689 = 0x8d5
0x8b3: JUMPI 0x8d5 V688
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S13, S12, S11, S10, S9, S8, V645, V651, V651, V654, V652, S2, S1, S0]
Stack pops: 11
Stack additions: [V683, S9, S8]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S13, S12, S11, V683, S9, S8]

================================

Block 0x8b4
[0x8b4:0x8c6]
---
Predecessors: [0x876]
Successors: [0x146]
---
0x8b4 PUSH1 0x9
0x8b6 SLOAD
0x8b7 PUSH1 0x1
0x8b9 DUP1
0x8ba DUP8
0x8bb ADD
0x8bc SWAP7
0x8bd PUSH2 0x8c7
0x8c0 SWAP3
0x8c1 ADD
0x8c2 ADD
0x8c3 PUSH2 0x146
0x8c6 JUMP
---
0x8b4: V690 = 0x9
0x8b6: V691 = S[0x9]
0x8b7: V692 = 0x1
0x8bb: V693 = ADD S4 0x1
0x8bd: V694 = 0x8c7
0x8c1: V695 = ADD V691 S4
0x8c2: V696 = ADD V695 0x1
0x8c3: V697 = 0x146
0x8c6: JUMP 0x146
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, V683, S1, S0]
Stack pops: 5
Stack additions: [V693, S3, S2, S1, S0, 0x8c7, V696]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, V693, S3, V683, S1, S0, 0x8c7, V696]

================================

Block 0x8c7
[0x8c7:0x8d4]
---
Predecessors: [0x4a9]
Successors: [0x91f]
---
0x8c7 JUMPDEST
0x8c8 SWAP6
0x8c9 POP
0x8ca PUSH1 0x6
0x8cc SLOAD
0x8cd DUP5
0x8ce ADD
0x8cf SWAP4
0x8d0 POP
0x8d1 PUSH2 0x91f
0x8d4 JUMP
---
0x8c7: JUMPDEST 
0x8ca: V698 = 0x6
0x8cc: V699 = S[0x6]
0x8ce: V700 = ADD S4 V699
0x8d1: V701 = 0x91f
0x8d4: JUMP 0x91f
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S0, S5, V700, S3, S2, S1]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S0, S5, V700, S3, S2, S1]

================================

Block 0x8d5
[0x8d5:0x91e]
---
Predecessors: [0x876]
Successors: [0x91f]
---
0x8d5 JUMPDEST
0x8d6 POP
0x8d7 PUSH1 0x7
0x8d9 SLOAD
0x8da PUSH1 0x40
0x8dc DUP1
0x8dd MLOAD
0x8de PUSH1 0x1
0x8e0 PUSH1 0xa0
0x8e2 PUSH1 0x2
0x8e4 EXP
0x8e5 SUB
0x8e6 DUP9
0x8e7 AND
0x8e8 DUP2
0x8e9 MSTORE
0x8ea SWAP1
0x8eb MLOAD
0x8ec SWAP5
0x8ed SWAP1
0x8ee SWAP2
0x8ef ADD
0x8f0 SWAP4
0x8f1 PUSH1 0x1
0x8f3 SWAP2
0x8f4 PUSH32 0xf6d57b750c60dc9ffc6ef20997261e398ea1193163d9692f30507858d7584b37
0x915 SWAP2
0x916 SWAP1
0x917 DUP2
0x918 SWAP1
0x919 SUB
0x91a PUSH1 0x20
0x91c ADD
0x91d SWAP1
0x91e LOG1
---
0x8d5: JUMPDEST 
0x8d7: V702 = 0x7
0x8d9: V703 = S[0x7]
0x8da: V704 = 0x40
0x8dd: V705 = M[0x40]
0x8de: V706 = 0x1
0x8e0: V707 = 0xa0
0x8e2: V708 = 0x2
0x8e4: V709 = EXP 0x2 0xa0
0x8e5: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e7: V711 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: M[V705] = V711
0x8eb: V712 = M[0x40]
0x8ef: V713 = ADD V703 S3
0x8f1: V714 = 0x1
0x8f4: V715 = 0xf6d57b750c60dc9ffc6ef20997261e398ea1193163d9692f30507858d7584b37
0x919: V716 = SUB V705 V712
0x91a: V717 = 0x20
0x91c: V718 = ADD 0x20 V716
0x91e: LOG V712 V718 0xf6d57b750c60dc9ffc6ef20997261e398ea1193163d9692f30507858d7584b37
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, V683, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, V713, S2, S1, 0x1]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, V713, V683, S1, 0x1]

================================

Block 0x91f
[0x91f:0x923]
---
Predecessors: [0x8c7, 0x8d5]
Successors: [0x6c8]
---
0x91f JUMPDEST
0x920 PUSH2 0x6c8
0x923 JUMP
---
0x91f: JUMPDEST 
0x920: V719 = 0x6c8
0x923: JUMP 0x6c8
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x924
[0x924:0x933]
---
Predecessors: [0x6c8]
Successors: [0x5f1]
---
0x924 JUMPDEST
0x925 POP
0x926 SWAP2
0x927 SWAP8
0x928 SWAP3
0x929 SWAP7
0x92a POP
0x92b SWAP3
0x92c SWAP5
0x92d POP
0x92e SWAP1
0x92f SWAP3
0x930 POP
0x931 POP
0x932 POP
0x933 JUMP
---
0x924: JUMPDEST 
0x933: JUMP 0x5f1
---
Entry stack: [V13, 0x6d, 0x0, 0x0, 0x0, 0x5f1, 0x0, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S3, S4, S5]
Exit stack: [V13, 0x6d, 0x0, 0x0, 0x0, S3, S4, S5]

================================

Block 0x934
[0x934:0x97e]
---
Predecessors: [0x60e]
Successors: [0x97f]
---
0x934 JUMPDEST
0x935 PUSH1 0x40
0x937 DUP1
0x938 MLOAD
0x939 DUP4
0x93a DUP2
0x93b MSTORE
0x93c PUSH1 0x1
0x93e PUSH1 0xa0
0x940 PUSH1 0x2
0x942 EXP
0x943 SUB
0x944 DUP4
0x945 AND
0x946 PUSH1 0x20
0x948 DUP3
0x949 ADD
0x94a MSTORE
0x94b DUP2
0x94c MLOAD
0x94d PUSH1 0x0
0x94f SWAP3
0x950 DUP4
0x951 SWAP3
0x952 DUP4
0x953 SWAP3
0x954 PUSH32 0x925d278dbd88db5304ce91b64d298d68d4dc60320d99ed84594e7296a5021c8e
0x975 SWAP3
0x976 SWAP2
0x977 DUP2
0x978 SWAP1
0x979 SUB
0x97a SWAP1
0x97b SWAP2
0x97c ADD
0x97d SWAP1
0x97e LOG1
---
0x934: JUMPDEST 
0x935: V720 = 0x40
0x938: V721 = M[0x40]
0x93b: M[V721] = S1
0x93c: V722 = 0x1
0x93e: V723 = 0xa0
0x940: V724 = 0x2
0x942: V725 = EXP 0x2 0xa0
0x943: V726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x945: V727 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x946: V728 = 0x20
0x949: V729 = ADD V721 0x20
0x94a: M[V729] = V727
0x94c: V730 = M[0x40]
0x94d: V731 = 0x0
0x954: V732 = 0x925d278dbd88db5304ce91b64d298d68d4dc60320d99ed84594e7296a5021c8e
0x979: V733 = SUB V721 V730
0x97c: V734 = ADD 0x40 V733
0x97e: LOG V730 V734 0x925d278dbd88db5304ce91b64d298d68d4dc60320d99ed84594e7296a5021c8e
---
Entry stack: [V13, 0x6d, S5, S4, S3, 0x617, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x6d, S5, S4, S3, 0x617, S1, S0, 0x0, 0x0, 0x0]

================================

Block 0x97f
[0x97f:0x987]
---
Predecessors: [0x934, 0x9ab]
Successors: [0x988, 0xa02]
---
0x97f JUMPDEST
0x980 DUP5
0x981 DUP4
0x982 LT
0x983 ISZERO
0x984 PUSH2 0xa02
0x987 JUMPI
---
0x97f: JUMPDEST 
0x982: V735 = LT S2 S4
0x983: V736 = ISZERO V735
0x984: V737 = 0xa02
0x987: JUMPI 0xa02 V736
---
Entry stack: [V13, 0x6d, S8, S7, S6, 0x617, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x6d, S8, S7, S6, 0x617, S4, S3, S2, S1, 0x0]

================================

Block 0x988
[0x988:0x98e]
---
Predecessors: [0x97f]
Successors: [0xa9d]
---
0x988 PUSH2 0x98f
0x98b PUSH2 0xa9d
0x98e JUMP
---
0x988: V738 = 0x98f
0x98b: V739 = 0xa9d
0x98e: JUMP 0xa9d
---
Entry stack: [V13, 0x6d, S8, S7, S6, 0x617, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x98f]
Exit stack: [V13, 0x6d, S8, S7, S6, 0x617, S4, S3, S2, S1, 0x0, 0x98f]

================================

Block 0x98f
[0x98f:0x9a1]
---
Predecessors: [0xa9d]
Successors: [0x9a2, 0x9ab]
---
0x98f JUMPDEST
0x990 PUSH1 0x40
0x992 MLOAD
0x993 DUP1
0x994 SWAP2
0x995 SUB
0x996 SWAP1
0x997 PUSH1 0x0
0x999 CREATE
0x99a DUP1
0x99b ISZERO
0x99c DUP1
0x99d ISZERO
0x99e PUSH2 0x9ab
0x9a1 JUMPI
---
0x98f: JUMPDEST 
0x990: V740 = 0x40
0x992: V741 = M[0x40]
0x995: V742 = SUB V818 V741
0x997: V743 = 0x0
0x999: V744 = CREATE 0x0 V741 V742
0x99b: V745 = ISZERO V744
0x99d: V746 = ISZERO V745
0x99e: V747 = 0x9ab
0x9a1: JUMPI 0x9ab V746
---
Entry stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, V818]
Stack pops: 1
Stack additions: [V744, V745]
Exit stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, V744, V745]

================================

Block 0x9a2
[0x9a2:0x9aa]
---
Predecessors: [0x98f]
Successors: []
---
0x9a2 RETURNDATASIZE
0x9a3 PUSH1 0x0
0x9a5 DUP1
0x9a6 RETURNDATACOPY
0x9a7 RETURNDATASIZE
0x9a8 PUSH1 0x0
0x9aa REVERT
---
0x9a2: V748 = RETURNDATASIZE
0x9a3: V749 = 0x0
0x9a6: RETURNDATACOPY 0x0 0x0 V748
0x9a7: V750 = RETURNDATASIZE
0x9a8: V751 = 0x0
0x9aa: REVERT 0x0 V750
---
Entry stack: [V13, 0x6d, S10, S9, S8, 0x617, S6, S5, S4, S3, 0x0, V744, V745]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, S10, S9, S8, 0x617, S6, S5, S4, S3, 0x0, V744, V745]

================================

Block 0x9ab
[0x9ab:0xa01]
---
Predecessors: [0x98f]
Successors: [0x97f]
---
0x9ab JUMPDEST
0x9ac POP
0x9ad PUSH1 0x40
0x9af DUP1
0x9b0 MLOAD
0x9b1 PUSH1 0x1
0x9b3 PUSH1 0xa0
0x9b5 PUSH1 0x2
0x9b7 EXP
0x9b8 SUB
0x9b9 DUP4
0x9ba AND
0x9bb DUP2
0x9bc MSTORE
0x9bd SWAP1
0x9be MLOAD
0x9bf SWAP2
0x9c0 SWAP4
0x9c1 POP
0x9c2 PUSH32 0x69a3ad0c98b247a6e3cc7349509989b8392a7a0e32959206937d29ebf4437328
0x9e3 SWAP2
0x9e4 SWAP1
0x9e5 DUP2
0x9e6 SWAP1
0x9e7 SUB
0x9e8 PUSH1 0x20
0x9ea ADD
0x9eb SWAP1
0x9ec LOG1
0x9ed PUSH1 0x9
0x9ef DUP1
0x9f0 SLOAD
0x9f1 PUSH1 0x1
0x9f3 SWAP1
0x9f4 DUP2
0x9f5 ADD
0x9f6 SWAP1
0x9f7 SWAP2
0x9f8 SSTORE
0x9f9 SWAP3
0x9fa SWAP1
0x9fb SWAP3
0x9fc ADD
0x9fd SWAP2
0x9fe PUSH2 0x97f
0xa01 JUMP
---
0x9ab: JUMPDEST 
0x9ad: V752 = 0x40
0x9b0: V753 = M[0x40]
0x9b1: V754 = 0x1
0x9b3: V755 = 0xa0
0x9b5: V756 = 0x2
0x9b7: V757 = EXP 0x2 0xa0
0x9b8: V758 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ba: V759 = AND V744 0xffffffffffffffffffffffffffffffffffffffff
0x9bc: M[V753] = V759
0x9be: V760 = M[0x40]
0x9c2: V761 = 0x69a3ad0c98b247a6e3cc7349509989b8392a7a0e32959206937d29ebf4437328
0x9e7: V762 = SUB V753 V760
0x9e8: V763 = 0x20
0x9ea: V764 = ADD 0x20 V762
0x9ec: LOG V760 V764 0x69a3ad0c98b247a6e3cc7349509989b8392a7a0e32959206937d29ebf4437328
0x9ed: V765 = 0x9
0x9f0: V766 = S[0x9]
0x9f1: V767 = 0x1
0x9f5: V768 = ADD 0x1 V766
0x9f8: S[0x9] = V768
0x9fc: V769 = ADD 0x1 S4
0x9fe: V770 = 0x97f
0xa01: JUMP 0x97f
---
Entry stack: [V13, 0x6d, S10, S9, S8, 0x617, S6, S5, S4, S3, 0x0, V744, V745]
Stack pops: 5
Stack additions: [V769, S1, S2]
Exit stack: [V13, 0x6d, S10, S9, S8, 0x617, S6, S5, V769, V744, 0x0]

================================

Block 0xa02
[0xa02:0xa2f]
---
Predecessors: [0x97f]
Successors: [0xaac]
---
0xa02 JUMPDEST
0xa03 PUSH1 0x40
0xa05 MLOAD
0xa06 PUSH1 0x1
0xa08 PUSH1 0xa0
0xa0a PUSH1 0x2
0xa0c EXP
0xa0d SUB
0xa0e DUP6
0xa0f AND
0xa10 SWAP1
0xa11 PUSH8 0x16345785d8a0000
0xa1a SWAP1
0xa1b PUSH1 0x0
0xa1d DUP2
0xa1e DUP2
0xa1f DUP2
0xa20 DUP6
0xa21 DUP8
0xa22 GAS
0xa23 CALL
0xa24 SWAP3
0xa25 POP
0xa26 POP
0xa27 POP
0xa28 POP
0xa29 PUSH2 0xa30
0xa2c PUSH2 0xaac
0xa2f JUMP
---
0xa02: JUMPDEST 
0xa03: V771 = 0x40
0xa05: V772 = M[0x40]
0xa06: V773 = 0x1
0xa08: V774 = 0xa0
0xa0a: V775 = 0x2
0xa0c: V776 = EXP 0x2 0xa0
0xa0d: V777 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0f: V778 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xa11: V779 = 0x16345785d8a0000
0xa1b: V780 = 0x0
0xa22: V781 = GAS
0xa23: V782 = CALL V781 V778 0x16345785d8a0000 V772 0x0 V772 0x0
0xa29: V783 = 0xa30
0xa2c: V784 = 0xaac
0xa2f: JUMP 0xaac
---
Entry stack: [V13, 0x6d, S8, S7, S6, 0x617, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xa30]
Exit stack: [V13, 0x6d, S8, S7, S6, 0x617, S4, S3, S2, S1, 0x0, 0xa30]

================================

Block 0xa30
[0xa30:0xa42]
---
Predecessors: [0xaac]
Successors: [0xa43, 0xa4c]
---
0xa30 JUMPDEST
0xa31 PUSH1 0x40
0xa33 MLOAD
0xa34 DUP1
0xa35 SWAP2
0xa36 SUB
0xa37 SWAP1
0xa38 PUSH1 0x0
0xa3a CREATE
0xa3b DUP1
0xa3c ISZERO
0xa3d DUP1
0xa3e ISZERO
0xa3f PUSH2 0xa4c
0xa42 JUMPI
---
0xa30: JUMPDEST 
0xa31: V785 = 0x40
0xa33: V786 = M[0x40]
0xa36: V787 = SUB V823 V786
0xa38: V788 = 0x0
0xa3a: V789 = CREATE 0x0 V786 V787
0xa3c: V790 = ISZERO V789
0xa3e: V791 = ISZERO V790
0xa3f: V792 = 0xa4c
0xa42: JUMPI 0xa4c V791
---
Entry stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, V823]
Stack pops: 1
Stack additions: [V789, V790]
Exit stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, V789, V790]

================================

Block 0xa43
[0xa43:0xa4b]
---
Predecessors: [0xa30]
Successors: []
---
0xa43 RETURNDATASIZE
0xa44 PUSH1 0x0
0xa46 DUP1
0xa47 RETURNDATACOPY
0xa48 RETURNDATASIZE
0xa49 PUSH1 0x0
0xa4b REVERT
---
0xa43: V793 = RETURNDATASIZE
0xa44: V794 = 0x0
0xa47: RETURNDATACOPY 0x0 0x0 V793
0xa48: V795 = RETURNDATASIZE
0xa49: V796 = 0x0
0xa4b: REVERT 0x0 V795
---
Entry stack: [V13, 0x6d, S10, S9, S8, 0x617, S6, S5, S4, S3, 0x0, V789, V790]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x6d, S10, S9, S8, 0x617, S6, S5, S4, S3, 0x0, V789, V790]

================================

Block 0xa4c
[0xa4c:0xa9c]
---
Predecessors: [0xa30]
Successors: [0x617]
---
0xa4c JUMPDEST
0xa4d POP
0xa4e PUSH1 0x40
0xa50 DUP1
0xa51 MLOAD
0xa52 PUSH1 0x1
0xa54 PUSH1 0xa0
0xa56 PUSH1 0x2
0xa58 EXP
0xa59 SUB
0xa5a DUP4
0xa5b AND
0xa5c DUP2
0xa5d MSTORE
0xa5e SWAP1
0xa5f MLOAD
0xa60 SWAP2
0xa61 SWAP3
0xa62 POP
0xa63 PUSH32 0x69a3ad0c98b247a6e3cc7349509989b8392a7a0e32959206937d29ebf4437328
0xa84 SWAP2
0xa85 SWAP1
0xa86 DUP2
0xa87 SWAP1
0xa88 SUB
0xa89 PUSH1 0x20
0xa8b ADD
0xa8c SWAP1
0xa8d LOG1
0xa8e POP
0xa8f POP
0xa90 PUSH1 0x9
0xa92 DUP1
0xa93 SLOAD
0xa94 PUSH1 0x1
0xa96 ADD
0xa97 SWAP1
0xa98 SSTORE
0xa99 POP
0xa9a POP
0xa9b POP
0xa9c JUMP
---
0xa4c: JUMPDEST 
0xa4e: V797 = 0x40
0xa51: V798 = M[0x40]
0xa52: V799 = 0x1
0xa54: V800 = 0xa0
0xa56: V801 = 0x2
0xa58: V802 = EXP 0x2 0xa0
0xa59: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5b: V804 = AND V789 0xffffffffffffffffffffffffffffffffffffffff
0xa5d: M[V798] = V804
0xa5f: V805 = M[0x40]
0xa63: V806 = 0x69a3ad0c98b247a6e3cc7349509989b8392a7a0e32959206937d29ebf4437328
0xa88: V807 = SUB V798 V805
0xa89: V808 = 0x20
0xa8b: V809 = ADD 0x20 V807
0xa8d: LOG V805 V809 0x69a3ad0c98b247a6e3cc7349509989b8392a7a0e32959206937d29ebf4437328
0xa90: V810 = 0x9
0xa93: V811 = S[0x9]
0xa94: V812 = 0x1
0xa96: V813 = ADD 0x1 V811
0xa98: S[0x9] = V813
0xa9c: JUMP 0x617
---
Entry stack: [V13, 0x6d, S10, S9, S8, 0x617, S6, S5, S4, S3, 0x0, V789, V790]
Stack pops: 8
Stack additions: []
Exit stack: [V13, 0x6d, S10, S9, S8]

================================

Block 0xa9d
[0xa9d:0xaab]
---
Predecessors: [0x988]
Successors: [0x98f]
---
0xa9d JUMPDEST
0xa9e PUSH1 0x40
0xaa0 MLOAD
0xaa1 PUSH1 0x52
0xaa3 DUP1
0xaa4 PUSH2 0xabd
0xaa7 DUP4
0xaa8 CODECOPY
0xaa9 ADD
0xaaa SWAP1
0xaab JUMP
---
0xa9d: JUMPDEST 
0xa9e: V814 = 0x40
0xaa0: V815 = M[0x40]
0xaa1: V816 = 0x52
0xaa4: V817 = 0xabd
0xaa8: CODECOPY V815 0xabd 0x52
0xaa9: V818 = ADD 0x52 V815
0xaab: JUMP 0x98f
---
Entry stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, 0x98f]
Stack pops: 1
Stack additions: [V818]
Exit stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, V818]

================================

Block 0xaac
[0xaac:0xabb]
---
Predecessors: [0xa02]
Successors: [0xa30]
---
0xaac JUMPDEST
0xaad PUSH1 0x40
0xaaf MLOAD
0xab0 PUSH2 0x11b
0xab3 DUP1
0xab4 PUSH2 0xb0f
0xab7 DUP4
0xab8 CODECOPY
0xab9 ADD
0xaba SWAP1
0xabb JUMP
---
0xaac: JUMPDEST 
0xaad: V819 = 0x40
0xaaf: V820 = M[0x40]
0xab0: V821 = 0x11b
0xab4: V822 = 0xb0f
0xab8: CODECOPY V820 0xb0f 0x11b
0xab9: V823 = ADD 0x11b V820
0xabb: JUMP 0xa30
---
Entry stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, 0xa30]
Stack pops: 1
Stack additions: [V823]
Exit stack: [V13, 0x6d, S9, S8, S7, 0x617, S5, S4, S3, S2, 0x0, V823]

================================

Block 0xabc
[0xabc:0xac7]
---
Predecessors: []
Successors: [0xac8]
---
0xabc STOP
0xabd PUSH1 0x80
0xabf PUSH1 0x40
0xac1 MSTORE
0xac2 CALLVALUE
0xac3 DUP1
0xac4 ISZERO
0xac5 PUSH1 0xf
0xac7 JUMPI
---
0xabc: STOP 
0xabd: V824 = 0x80
0xabf: V825 = 0x40
0xac1: M[0x40] = 0x80
0xac2: V826 = CALLVALUE
0xac4: V827 = ISZERO V826
0xac5: V828 = 0xf
0xac7: THROWI V827
---
Entry stack: []
Stack pops: 0
Stack additions: [V826]
Exit stack: []

================================

Block 0xac8
[0xac8:0xb3f]
---
Predecessors: [0xabc]
Successors: [0xb40]
---
0xac8 PUSH1 0x0
0xaca DUP1
0xacb REVERT
0xacc JUMPDEST
0xacd POP
0xace PUSH1 0x35
0xad0 DUP1
0xad1 PUSH1 0x1d
0xad3 PUSH1 0x0
0xad5 CODECOPY
0xad6 PUSH1 0x0
0xad8 RETURN
0xad9 STOP
0xada PUSH1 0x80
0xadc PUSH1 0x40
0xade MSTORE
0xadf PUSH1 0x0
0xae1 DUP1
0xae2 REVERT
0xae3 STOP
0xae4 LOG1
0xae5 PUSH6 0x627a7a723058
0xaec SHA3
0xaed DIV
0xaee MISSING 0xd
0xaef INVALID
0xaf0 MISSING 0xe7
0xaf1 LOG3
0xaf2 SWAP3
0xaf3 SIGNEXTEND
0xaf4 PUSH11 0xb686bed3a6857b11b3dfeb
0xb00 DUP12
0xb01 MUL
0xb02 SLOAD
0xb03 DUP16
0xb04 MISSING 0xf7
0xb05 MISSING 0xb9
0xb06 MISSING 0xd3
0xb07 MISSING 0xec
0xb08 MISSING 0x29
0xb09 POP
0xb0a PUSH21 0x939c0029608060405260008054600160a060020a03
0xb20 NOT
0xb21 AND
0xb22 PUSH20 0x7b20471396cedf00cd1f65eca27fdb3ca1643b6c
0xb37 OR
0xb38 SWAP1
0xb39 SSTORE
0xb3a CALLVALUE
0xb3b DUP1
0xb3c ISZERO
0xb3d PUSH1 0x35
0xb3f JUMPI
---
0xac8: V829 = 0x0
0xacb: REVERT 0x0 0x0
0xacc: JUMPDEST 
0xace: V830 = 0x35
0xad1: V831 = 0x1d
0xad3: V832 = 0x0
0xad5: CODECOPY 0x0 0x1d 0x35
0xad6: V833 = 0x0
0xad8: RETURN 0x0 0x35
0xad9: STOP 
0xada: V834 = 0x80
0xadc: V835 = 0x40
0xade: M[0x40] = 0x80
0xadf: V836 = 0x0
0xae2: REVERT 0x0 0x0
0xae3: STOP 
0xae4: LOG S0 S1 S2
0xae5: V837 = 0x627a7a723058
0xaec: V838 = SHA3 0x627a7a723058 S3
0xaed: V839 = DIV V838 S4
0xaee: MISSING 0xd
0xaef: INVALID 
0xaf0: MISSING 0xe7
0xaf1: LOG S0 S1 S2 S3 S4
0xaf3: V840 = SIGNEXTEND S8 S6
0xaf4: V841 = 0xb686bed3a6857b11b3dfeb
0xb01: V842 = MUL S16 0xb686bed3a6857b11b3dfeb
0xb02: V843 = S[V842]
0xb04: MISSING 0xf7
0xb05: MISSING 0xb9
0xb06: MISSING 0xd3
0xb07: MISSING 0xec
0xb08: MISSING 0x29
0xb0a: V844 = 0x939c0029608060405260008054600160a060020a03
0xb20: V845 = NOT 0x939c0029608060405260008054600160a060020a03
0xb21: V846 = AND 0xffffffffffffffffffffff6c63ffd69f7f9fbfad9fff7fab9ffe9f5f9ffdf5fc S1
0xb22: V847 = 0x7b20471396cedf00cd1f65eca27fdb3ca1643b6c
0xb37: V848 = OR 0x7b20471396cedf00cd1f65eca27fdb3ca1643b6c V846
0xb39: S[S2] = V848
0xb3a: V849 = CALLVALUE
0xb3c: V850 = ISZERO V849
0xb3d: V851 = 0x35
0xb3f: THROWI V850
---
Entry stack: [V826]
Stack pops: 0
Stack additions: [V839, S20, V843, V840, S7, S5, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, V849]
Exit stack: []

================================

Block 0xb40
[0xb40:0xb73]
---
Predecessors: [0xac8]
Successors: [0xb74]
---
0xb40 PUSH1 0x0
0xb42 DUP1
0xb43 REVERT
0xb44 JUMPDEST
0xb45 POP
0xb46 PUSH1 0x0
0xb48 DUP1
0xb49 SLOAD
0xb4a PUSH1 0x40
0xb4c MLOAD
0xb4d PUSH1 0x1
0xb4f PUSH1 0xa0
0xb51 PUSH1 0x2
0xb53 EXP
0xb54 SUB
0xb55 SWAP1
0xb56 SWAP2
0xb57 AND
0xb58 SWAP2
0xb59 PUSH8 0x16345785d8a0000
0xb62 SWAP2
0xb63 SWAP1
0xb64 DUP2
0xb65 DUP2
0xb66 DUP2
0xb67 DUP6
0xb68 DUP8
0xb69 GAS
0xb6a CALL
0xb6b SWAP3
0xb6c POP
0xb6d POP
0xb6e POP
0xb6f ISZERO
0xb70 ISZERO
0xb71 PUSH1 0xd8
0xb73 JUMPI
---
0xb40: V852 = 0x0
0xb43: REVERT 0x0 0x0
0xb44: JUMPDEST 
0xb46: V853 = 0x0
0xb49: V854 = S[0x0]
0xb4a: V855 = 0x40
0xb4c: V856 = M[0x40]
0xb4d: V857 = 0x1
0xb4f: V858 = 0xa0
0xb51: V859 = 0x2
0xb53: V860 = EXP 0x2 0xa0
0xb54: V861 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb57: V862 = AND V854 0xffffffffffffffffffffffffffffffffffffffff
0xb59: V863 = 0x16345785d8a0000
0xb69: V864 = GAS
0xb6a: V865 = CALL V864 V862 0x16345785d8a0000 V856 0x0 V856 0x0
0xb6f: V866 = ISZERO V865
0xb70: V867 = ISZERO V866
0xb71: V868 = 0xd8
0xb73: THROWI V867
---
Entry stack: [V849]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb74
[0xb74:0xbc7]
---
Predecessors: [0xb40]
Successors: [0xbc8]
---
0xb74 PUSH1 0x0
0xb76 DUP1
0xb77 SLOAD
0xb78 PUSH1 0x40
0xb7a DUP1
0xb7b MLOAD
0xb7c PUSH32 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xb9d DUP2
0xb9e MSTORE
0xb9f SWAP1
0xba0 MLOAD
0xba1 PUSH1 0x1
0xba3 PUSH1 0xa0
0xba5 PUSH1 0x2
0xba7 EXP
0xba8 SUB
0xba9 SWAP1
0xbaa SWAP3
0xbab AND
0xbac SWAP3
0xbad PUSH4 0x3ccfd60b
0xbb2 SWAP3
0xbb3 PUSH1 0x4
0xbb5 DUP1
0xbb6 DUP5
0xbb7 ADD
0xbb8 SWAP4
0xbb9 DUP3
0xbba SWAP1
0xbbb SUB
0xbbc ADD
0xbbd DUP2
0xbbe DUP4
0xbbf DUP8
0xbc0 DUP1
0xbc1 EXTCODESIZE
0xbc2 ISZERO
0xbc3 DUP1
0xbc4 ISZERO
0xbc5 PUSH1 0xbd
0xbc7 JUMPI
---
0xb74: V869 = 0x0
0xb77: V870 = S[0x0]
0xb78: V871 = 0x40
0xb7b: V872 = M[0x40]
0xb7c: V873 = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xb9e: M[V872] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xba0: V874 = M[0x40]
0xba1: V875 = 0x1
0xba3: V876 = 0xa0
0xba5: V877 = 0x2
0xba7: V878 = EXP 0x2 0xa0
0xba8: V879 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbab: V880 = AND V870 0xffffffffffffffffffffffffffffffffffffffff
0xbad: V881 = 0x3ccfd60b
0xbb3: V882 = 0x4
0xbb7: V883 = ADD V872 0x4
0xbbb: V884 = SUB V872 V874
0xbbc: V885 = ADD V884 0x4
0xbc1: V886 = EXTCODESIZE V880
0xbc2: V887 = ISZERO V886
0xbc4: V888 = ISZERO V887
0xbc5: V889 = 0xbd
0xbc7: THROWI V888
---
Entry stack: []
Stack pops: 0
Stack additions: [V880, 0x3ccfd60b, V883, 0x0, V874, V885, V874, 0x0, V880, V887]
Exit stack: [V880, 0x3ccfd60b, V883, 0x0, V874, V885, V874, 0x0, V880, V887]

================================

Block 0xbc8
[0xbc8:0xbd5]
---
Predecessors: [0xb74]
Successors: [0xbd6]
---
0xbc8 PUSH1 0x0
0xbca DUP1
0xbcb REVERT
0xbcc JUMPDEST
0xbcd POP
0xbce GAS
0xbcf CALL
0xbd0 ISZERO
0xbd1 DUP1
0xbd2 ISZERO
0xbd3 PUSH1 0xd0
0xbd5 JUMPI
---
0xbc8: V890 = 0x0
0xbcb: REVERT 0x0 0x0
0xbcc: JUMPDEST 
0xbce: V891 = GAS
0xbcf: V892 = CALL V891 S1 S2 S3 S4 S5 S6
0xbd0: V893 = ISZERO V892
0xbd2: V894 = ISZERO V893
0xbd3: V895 = 0xd0
0xbd5: THROWI V894
---
Entry stack: [V880, 0x3ccfd60b, V883, 0x0, V874, V885, V874, 0x0, V880, V887]
Stack pops: 0
Stack additions: [V893]
Exit stack: []

================================

Block 0xbd6
[0xbd6:0xc54]
---
Predecessors: [0xbc8]
Successors: []
---
0xbd6 RETURNDATASIZE
0xbd7 PUSH1 0x0
0xbd9 DUP1
0xbda RETURNDATACOPY
0xbdb RETURNDATASIZE
0xbdc PUSH1 0x0
0xbde REVERT
0xbdf JUMPDEST
0xbe0 POP
0xbe1 CALLER
0xbe2 SWAP3
0xbe3 POP
0xbe4 POP
0xbe5 POP
0xbe6 SELFDESTRUCT
0xbe7 JUMPDEST
0xbe8 PUSH1 0x35
0xbea DUP1
0xbeb PUSH2 0xe6
0xbee PUSH1 0x0
0xbf0 CODECOPY
0xbf1 PUSH1 0x0
0xbf3 RETURN
0xbf4 STOP
0xbf5 PUSH1 0x80
0xbf7 PUSH1 0x40
0xbf9 MSTORE
0xbfa PUSH1 0x0
0xbfc DUP1
0xbfd REVERT
0xbfe STOP
0xbff LOG1
0xc00 PUSH6 0x627a7a723058
0xc07 SHA3
0xc08 MISSING 0xbb
0xc09 MISSING 0xe6
0xc0a SSTORE
0xc0b EXP
0xc0c SHR
0xc0d GAS
0xc0e PUSH13 0xf5c933e9ddb0bd624e6483a678
0xc1c GASLIMIT
0xc1d MISSING 0xa8
0xc1e MISSING 0xac
0xc1f MISSING 0x4e
0xc20 BLOCKHASH
0xc21 LOG3
0xc22 PUSH31 0x58a96dfe450029a165627a7a723058202c188567dec82d34283a707da5aba6
0xc42 MISSING 0x2d
0xc43 DUP1
0xc44 MISSING 0xd7
0xc45 MISSING 0xcf
0xc46 LOG2
0xc47 MISSING 0xbe
0xc48 SWAP8
0xc49 MISSING 0xdd
0xc4a SLT
0xc4b DUP14
0xc4c DUP15
0xc4d MISSING 0x1e
0xc4e REVERT
0xc4f DUP9
0xc50 MISSING 0xd
0xc51 MISSING 0x4d
0xc52 MISSING 0xa9
0xc53 STOP
0xc54 MISSING 0x29
---
0xbd6: V896 = RETURNDATASIZE
0xbd7: V897 = 0x0
0xbda: RETURNDATACOPY 0x0 0x0 V896
0xbdb: V898 = RETURNDATASIZE
0xbdc: V899 = 0x0
0xbde: REVERT 0x0 V898
0xbdf: JUMPDEST 
0xbe1: V900 = CALLER
0xbe6: SELFDESTRUCT V900
0xbe7: JUMPDEST 
0xbe8: V901 = 0x35
0xbeb: V902 = 0xe6
0xbee: V903 = 0x0
0xbf0: CODECOPY 0x0 0xe6 0x35
0xbf1: V904 = 0x0
0xbf3: RETURN 0x0 0x35
0xbf4: STOP 
0xbf5: V905 = 0x80
0xbf7: V906 = 0x40
0xbf9: M[0x40] = 0x80
0xbfa: V907 = 0x0
0xbfd: REVERT 0x0 0x0
0xbfe: STOP 
0xbff: LOG S0 S1 S2
0xc00: V908 = 0x627a7a723058
0xc07: V909 = SHA3 0x627a7a723058 S3
0xc08: MISSING 0xbb
0xc09: MISSING 0xe6
0xc0a: S[S0] = S1
0xc0b: V910 = EXP S2 S3
0xc0c: V911 = SHR V910 S4
0xc0d: V912 = GAS
0xc0e: V913 = 0xf5c933e9ddb0bd624e6483a678
0xc1c: V914 = GASLIMIT
0xc1d: MISSING 0xa8
0xc1e: MISSING 0xac
0xc1f: MISSING 0x4e
0xc20: V915 = BLOCKHASH S0
0xc21: LOG V915 S1 S2 S3 S4
0xc22: V916 = 0x58a96dfe450029a165627a7a723058202c188567dec82d34283a707da5aba6
0xc42: MISSING 0x2d
0xc44: MISSING 0xd7
0xc45: MISSING 0xcf
0xc46: LOG S0 S1 S2 S3
0xc47: MISSING 0xbe
0xc49: MISSING 0xdd
0xc4a: V917 = SLT S0 S1
0xc4d: MISSING 0x1e
0xc4e: REVERT S0 S1
0xc50: MISSING 0xd
0xc51: MISSING 0x4d
0xc52: MISSING 0xa9
0xc53: STOP 
0xc54: MISSING 0x29
---
Entry stack: [V893]
Stack pops: 0
Stack additions: [V909, V914, 0xf5c933e9ddb0bd624e6483a678, V912, V911, 0x58a96dfe450029a165627a7a723058202c188567dec82d34283a707da5aba6, S0, S0, S8, S1, S2, S3, S4, S5, S6, S7, S0, S14, S14, V917, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x58
Exit block: 0x6d
Body: 0x58, 0x60, 0x64, 0x6d, 0xe7, 0xfa, 0xfe, 0x12f, 0x138

Function 1:
Public function signature: 0x3d79d1c8
Entry block: 0x6f
Exit block: 0x84
Body: 0x6f, 0x77, 0x7b, 0x84, 0x13b

Function 2:
Public function signature: 0xaffed0e0
Entry block: 0x96
Exit block: 0x84
Body: 0x84, 0x96, 0x9e, 0xa2, 0x140

Function 3:
Public function signature: 0xb26e642b
Entry block: 0xab
Exit block: 0xb3
Body: 0xab, 0xb3, 0xb7, 0xc3

Function 4:
Public function signature: 0xc2381296
Entry block: 0xdf
Exit block: 0x9a2
Body: 0x6d, 0xdf, 0x4ae, 0x4c8, 0x4cc, 0x523, 0x527, 0x532, 0x53b, 0x54d, 0x551, 0x55a, 0x55e, 0x5ae, 0x5b2, 0x5bd, 0x5c6, 0x5d8, 0x5dc, 0x5e5, 0x5e9, 0x5f1, 0x60e, 0x617, 0x61c, 0x635, 0x691, 0x695, 0x6a0, 0x6a9, 0x6bb, 0x6bf, 0x6c8, 0x6d0, 0x722, 0x72b, 0x741, 0x776, 0x777, 0x7cb, 0x7d4, 0x7ea, 0x81f, 0x820, 0x857, 0x860, 0x876, 0x8b4, 0x8c7, 0x8d5, 0x91f, 0x924, 0x934, 0x97f, 0x988, 0x98f, 0x9a2, 0x9ab, 0xa02, 0xa30, 0xa43, 0xa4c, 0xa9d, 0xaac

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0x53
Body: 0x53

Function 6:
Private function
Entry block: 0x146
Exit block: 0x4a9
Body: 0x146, 0x151, 0x1f4, 0x1fd, 0x2a7, 0x2b1, 0x35b, 0x366, 0x410, 0x41c, 0x4a9

