Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8c
0xa: JUMPI 0x8c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x88a]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x8551a53
0x3a EQ
0x3b PUSH2 0x88a
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x8551a53
0x3a: V12 = EQ 0x8551a53 V10
0x3b: V13 = 0x88a
0x3e: JUMPI 0x88a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x8dc]
---
0x3f DUP1
0x40 PUSH4 0xba75be9
0x45 EQ
0x46 PUSH2 0x8dc
0x49 JUMPI
---
0x40: V14 = 0xba75be9
0x45: V15 = EQ 0xba75be9 V10
0x46: V16 = 0x8dc
0x49: JUMPI 0x8dc V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x92e]
---
0x4a DUP1
0x4b PUSH4 0x14c6861f
0x50 EQ
0x51 PUSH2 0x92e
0x54 JUMPI
---
0x4b: V17 = 0x14c6861f
0x50: V18 = EQ 0x14c6861f V10
0x51: V19 = 0x92e
0x54: JUMPI 0x92e V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x954]
---
0x55 DUP1
0x56 PUSH4 0x66905b19
0x5b EQ
0x5c PUSH2 0x954
0x5f JUMPI
---
0x56: V20 = 0x66905b19
0x5b: V21 = EQ 0x66905b19 V10
0x5c: V22 = 0x954
0x5f: JUMPI 0x954 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x9a6]
---
0x60 DUP1
0x61 PUSH4 0x7150d8ae
0x66 EQ
0x67 PUSH2 0x9a6
0x6a JUMPI
---
0x61: V23 = 0x7150d8ae
0x66: V24 = EQ 0x7150d8ae V10
0x67: V25 = 0x9a6
0x6a: JUMPI 0x9a6 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x9f8]
---
0x6b DUP1
0x6c PUSH4 0x992e096f
0x71 EQ
0x72 PUSH2 0x9f8
0x75 JUMPI
---
0x6c: V26 = 0x992e096f
0x71: V27 = EQ 0x992e096f V10
0x72: V28 = 0x9f8
0x75: JUMPI 0x9f8 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0xa87]
---
0x76 DUP1
0x77 PUSH4 0xa01290c1
0x7c EQ
0x7d PUSH2 0xa87
0x80 JUMPI
---
0x77: V29 = 0xa01290c1
0x7c: V30 = EQ 0xa01290c1 V10
0x7d: V31 = 0xa87
0x80: JUMPI 0xa87 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0xaad]
---
0x81 DUP1
0x82 PUSH4 0xdefd6c5f
0x87 EQ
0x88 PUSH2 0xaad
0x8b JUMPI
---
0x82: V32 = 0xdefd6c5f
0x87: V33 = EQ 0xdefd6c5f V10
0x88: V34 = 0xaad
0x8b: JUMPI 0xaad V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x0, 0x81]
Successors: [0x90]
---
0x8c JUMPDEST
0x8d PUSH2 0x888
---
0x8c: JUMPDEST 
0x8d: V35 = 0x888
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x888]
Exit stack: [V10, 0x888]

================================

Block 0x90
[0x90:0x9b]
---
Predecessors: [0x8c]
Successors: [0x9c, 0x9d]
---
0x90 JUMPDEST
0x91 PUSH1 0x8
0x93 PUSH1 0x8
0x95 DUP2
0x96 GT
0x97 ISZERO
0x98 PUSH2 0x9d
0x9b JUMPI
---
0x90: JUMPDEST 
0x91: V36 = 0x8
0x93: V37 = 0x8
0x96: V38 = GT 0x8 0x8
0x97: V39 = ISZERO 0x0
0x98: V40 = 0x9d
0x9b: JUMPI 0x9d 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x8]
Exit stack: [V10, 0x888, 0x8]

================================

Block 0x9c
[0x9c:0x9c]
---
Predecessors: [0x90]
Successors: []
---
0x9c INVALID
---
0x9c: INVALID 
---
Entry stack: [V10, 0x888, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x8]

================================

Block 0x9d
[0x9d:0xb6]
---
Predecessors: [0x90]
Successors: [0xb7, 0xb8]
---
0x9d JUMPDEST
0x9e PUSH1 0x7
0xa0 PUSH1 0x0
0xa2 SWAP1
0xa3 SLOAD
0xa4 SWAP1
0xa5 PUSH2 0x100
0xa8 EXP
0xa9 SWAP1
0xaa DIV
0xab PUSH1 0xff
0xad AND
0xae PUSH1 0x8
0xb0 DUP2
0xb1 GT
0xb2 ISZERO
0xb3 PUSH2 0xb8
0xb6 JUMPI
---
0x9d: JUMPDEST 
0x9e: V41 = 0x7
0xa0: V42 = 0x0
0xa3: V43 = S[0x7]
0xa5: V44 = 0x100
0xa8: V45 = EXP 0x100 0x0
0xaa: V46 = DIV V43 0x1
0xab: V47 = 0xff
0xad: V48 = AND 0xff V46
0xae: V49 = 0x8
0xb1: V50 = GT V48 0x8
0xb2: V51 = ISZERO V50
0xb3: V52 = 0xb8
0xb6: JUMPI 0xb8 V51
---
Entry stack: [V10, 0x888, 0x8]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V10, 0x888, 0x8, V48]

================================

Block 0xb7
[0xb7:0xb7]
---
Predecessors: [0x9d]
Successors: []
---
0xb7 INVALID
---
0xb7: INVALID 
---
Entry stack: [V10, 0x888, 0x8, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x8, V48]

================================

Block 0xb8
[0xb8:0xbe]
---
Predecessors: [0x9d]
Successors: [0xbf, 0xc4]
---
0xb8 JUMPDEST
0xb9 EQ
0xba ISZERO
0xbb PUSH2 0xc4
0xbe JUMPI
---
0xb8: JUMPDEST 
0xb9: V53 = EQ V48 0x8
0xba: V54 = ISZERO V53
0xbb: V55 = 0xc4
0xbe: JUMPI 0xc4 V54
---
Entry stack: [V10, 0x888, 0x8, V48]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0xbf
[0xbf:0xc3]
---
Predecessors: [0xb8]
Successors: []
---
0xbf PUSH1 0x0
0xc1 PUSH1 0x0
0xc3 REVERT
---
0xbf: V56 = 0x0
0xc1: V57 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0xc4
[0xc4:0x11b]
---
Predecessors: [0xb8]
Successors: [0x11c, 0x147]
---
0xc4 JUMPDEST
0xc5 PUSH1 0x3
0xc7 PUSH1 0x0
0xc9 SWAP1
0xca SLOAD
0xcb SWAP1
0xcc PUSH2 0x100
0xcf EXP
0xd0 SWAP1
0xd1 DIV
0xd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7 AND
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe CALLER
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 EQ
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x147
0x11b JUMPI
---
0xc4: JUMPDEST 
0xc5: V58 = 0x3
0xc7: V59 = 0x0
0xca: V60 = S[0x3]
0xcc: V61 = 0x100
0xcf: V62 = EXP 0x100 0x0
0xd1: V63 = DIV V60 0x1
0xd2: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xe8: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xfe: V68 = CALLER
0xff: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x115: V71 = EQ V70 V67
0x117: V72 = ISZERO V71
0x118: V73 = 0x147
0x11b: JUMPI 0x147 V72
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [V71]
Exit stack: [V10, 0x888, V71]

================================

Block 0x11c
[0x11c:0x127]
---
Predecessors: [0xc4]
Successors: [0x128, 0x129]
---
0x11c POP
0x11d PUSH1 0x0
0x11f PUSH1 0x8
0x121 DUP2
0x122 GT
0x123 ISZERO
0x124 PUSH2 0x129
0x127 JUMPI
---
0x11d: V74 = 0x0
0x11f: V75 = 0x8
0x122: V76 = GT 0x0 0x8
0x123: V77 = ISZERO 0x0
0x124: V78 = 0x129
0x127: JUMPI 0x129 0x1
---
Entry stack: [V10, 0x888, V71]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x888, 0x0]

================================

Block 0x128
[0x128:0x128]
---
Predecessors: [0x11c]
Successors: []
---
0x128 INVALID
---
0x128: INVALID 
---
Entry stack: [V10, 0x888, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x0]

================================

Block 0x129
[0x129:0x142]
---
Predecessors: [0x11c]
Successors: [0x143, 0x144]
---
0x129 JUMPDEST
0x12a PUSH1 0x7
0x12c PUSH1 0x0
0x12e SWAP1
0x12f SLOAD
0x130 SWAP1
0x131 PUSH2 0x100
0x134 EXP
0x135 SWAP1
0x136 DIV
0x137 PUSH1 0xff
0x139 AND
0x13a PUSH1 0x8
0x13c DUP2
0x13d GT
0x13e ISZERO
0x13f PUSH2 0x144
0x142 JUMPI
---
0x129: JUMPDEST 
0x12a: V79 = 0x7
0x12c: V80 = 0x0
0x12f: V81 = S[0x7]
0x131: V82 = 0x100
0x134: V83 = EXP 0x100 0x0
0x136: V84 = DIV V81 0x1
0x137: V85 = 0xff
0x139: V86 = AND 0xff V84
0x13a: V87 = 0x8
0x13d: V88 = GT V86 0x8
0x13e: V89 = ISZERO V88
0x13f: V90 = 0x144
0x142: JUMPI 0x144 V89
---
Entry stack: [V10, 0x888, 0x0]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V10, 0x888, 0x0, V86]

================================

Block 0x143
[0x143:0x143]
---
Predecessors: [0x129]
Successors: []
---
0x143 INVALID
---
0x143: INVALID 
---
Entry stack: [V10, 0x888, 0x0, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x0, V86]

================================

Block 0x144
[0x144:0x146]
---
Predecessors: [0x129]
Successors: [0x147]
---
0x144 JUMPDEST
0x145 EQ
0x146 ISZERO
---
0x144: JUMPDEST 
0x145: V91 = EQ V86 0x0
0x146: V92 = ISZERO V91
---
Entry stack: [V10, 0x888, 0x0, V86]
Stack pops: 2
Stack additions: [V92]
Exit stack: [V10, 0x888, V92]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0xc4, 0x144]
Successors: [0x14e, 0x179]
---
0x147 JUMPDEST
0x148 DUP1
0x149 ISZERO
0x14a PUSH2 0x179
0x14d JUMPI
---
0x147: JUMPDEST 
0x149: V93 = ISZERO S0
0x14a: V94 = 0x179
0x14d: JUMPI 0x179 V93
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x888, S0]

================================

Block 0x14e
[0x14e:0x159]
---
Predecessors: [0x147]
Successors: [0x15a, 0x15b]
---
0x14e POP
0x14f PUSH1 0x7
0x151 PUSH1 0x8
0x153 DUP2
0x154 GT
0x155 ISZERO
0x156 PUSH2 0x15b
0x159 JUMPI
---
0x14f: V95 = 0x7
0x151: V96 = 0x8
0x154: V97 = GT 0x7 0x8
0x155: V98 = ISZERO 0x0
0x156: V99 = 0x15b
0x159: JUMPI 0x15b 0x1
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [0x7]
Exit stack: [V10, 0x888, 0x7]

================================

Block 0x15a
[0x15a:0x15a]
---
Predecessors: [0x14e]
Successors: []
---
0x15a INVALID
---
0x15a: INVALID 
---
Entry stack: [V10, 0x888, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x7]

================================

Block 0x15b
[0x15b:0x174]
---
Predecessors: [0x14e]
Successors: [0x175, 0x176]
---
0x15b JUMPDEST
0x15c PUSH1 0x7
0x15e PUSH1 0x0
0x160 SWAP1
0x161 SLOAD
0x162 SWAP1
0x163 PUSH2 0x100
0x166 EXP
0x167 SWAP1
0x168 DIV
0x169 PUSH1 0xff
0x16b AND
0x16c PUSH1 0x8
0x16e DUP2
0x16f GT
0x170 ISZERO
0x171 PUSH2 0x176
0x174 JUMPI
---
0x15b: JUMPDEST 
0x15c: V100 = 0x7
0x15e: V101 = 0x0
0x161: V102 = S[0x7]
0x163: V103 = 0x100
0x166: V104 = EXP 0x100 0x0
0x168: V105 = DIV V102 0x1
0x169: V106 = 0xff
0x16b: V107 = AND 0xff V105
0x16c: V108 = 0x8
0x16f: V109 = GT V107 0x8
0x170: V110 = ISZERO V109
0x171: V111 = 0x176
0x174: JUMPI 0x176 V110
---
Entry stack: [V10, 0x888, 0x7]
Stack pops: 0
Stack additions: [V107]
Exit stack: [V10, 0x888, 0x7, V107]

================================

Block 0x175
[0x175:0x175]
---
Predecessors: [0x15b]
Successors: []
---
0x175 INVALID
---
0x175: INVALID 
---
Entry stack: [V10, 0x888, 0x7, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x7, V107]

================================

Block 0x176
[0x176:0x178]
---
Predecessors: [0x15b]
Successors: [0x179]
---
0x176 JUMPDEST
0x177 EQ
0x178 ISZERO
---
0x176: JUMPDEST 
0x177: V112 = EQ V107 0x7
0x178: V113 = ISZERO V112
---
Entry stack: [V10, 0x888, 0x7, V107]
Stack pops: 2
Stack additions: [V113]
Exit stack: [V10, 0x888, V113]

================================

Block 0x179
[0x179:0x17e]
---
Predecessors: [0x147, 0x176]
Successors: [0x17f, 0x184]
---
0x179 JUMPDEST
0x17a ISZERO
0x17b PUSH2 0x184
0x17e JUMPI
---
0x179: JUMPDEST 
0x17a: V114 = ISZERO S0
0x17b: V115 = 0x184
0x17e: JUMPI 0x184 V114
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x17f
[0x17f:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x17f PUSH1 0x0
0x181 PUSH1 0x0
0x183 REVERT
---
0x17f: V116 = 0x0
0x181: V117 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x184
[0x184:0x1db]
---
Predecessors: [0x179]
Successors: [0x1dc, 0x207]
---
0x184 JUMPDEST
0x185 PUSH1 0x0
0x187 PUSH1 0x0
0x189 SWAP1
0x18a SLOAD
0x18b SWAP1
0x18c PUSH2 0x100
0x18f EXP
0x190 SWAP1
0x191 DIV
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be CALLER
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 EQ
0x1d6 DUP1
0x1d7 ISZERO
0x1d8 PUSH2 0x207
0x1db JUMPI
---
0x184: JUMPDEST 
0x185: V118 = 0x0
0x187: V119 = 0x0
0x18a: V120 = S[0x0]
0x18c: V121 = 0x100
0x18f: V122 = EXP 0x100 0x0
0x191: V123 = DIV V120 0x1
0x192: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1a8: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1be: V128 = CALLER
0x1bf: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1d5: V131 = EQ V130 V127
0x1d7: V132 = ISZERO V131
0x1d8: V133 = 0x207
0x1db: JUMPI 0x207 V132
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V10, 0x888, V131]

================================

Block 0x1dc
[0x1dc:0x1e7]
---
Predecessors: [0x184]
Successors: [0x1e8, 0x1e9]
---
0x1dc POP
0x1dd PUSH1 0x1
0x1df PUSH1 0x8
0x1e1 DUP2
0x1e2 GT
0x1e3 ISZERO
0x1e4 PUSH2 0x1e9
0x1e7 JUMPI
---
0x1dd: V134 = 0x1
0x1df: V135 = 0x8
0x1e2: V136 = GT 0x1 0x8
0x1e3: V137 = ISZERO 0x0
0x1e4: V138 = 0x1e9
0x1e7: JUMPI 0x1e9 0x1
---
Entry stack: [V10, 0x888, V131]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x888, 0x1]

================================

Block 0x1e8
[0x1e8:0x1e8]
---
Predecessors: [0x1dc]
Successors: []
---
0x1e8 INVALID
---
0x1e8: INVALID 
---
Entry stack: [V10, 0x888, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x1]

================================

Block 0x1e9
[0x1e9:0x202]
---
Predecessors: [0x1dc]
Successors: [0x203, 0x204]
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x7
0x1ec PUSH1 0x0
0x1ee SWAP1
0x1ef SLOAD
0x1f0 SWAP1
0x1f1 PUSH2 0x100
0x1f4 EXP
0x1f5 SWAP1
0x1f6 DIV
0x1f7 PUSH1 0xff
0x1f9 AND
0x1fa PUSH1 0x8
0x1fc DUP2
0x1fd GT
0x1fe ISZERO
0x1ff PUSH2 0x204
0x202 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V139 = 0x7
0x1ec: V140 = 0x0
0x1ef: V141 = S[0x7]
0x1f1: V142 = 0x100
0x1f4: V143 = EXP 0x100 0x0
0x1f6: V144 = DIV V141 0x1
0x1f7: V145 = 0xff
0x1f9: V146 = AND 0xff V144
0x1fa: V147 = 0x8
0x1fd: V148 = GT V146 0x8
0x1fe: V149 = ISZERO V148
0x1ff: V150 = 0x204
0x202: JUMPI 0x204 V149
---
Entry stack: [V10, 0x888, 0x1]
Stack pops: 0
Stack additions: [V146]
Exit stack: [V10, 0x888, 0x1, V146]

================================

Block 0x203
[0x203:0x203]
---
Predecessors: [0x1e9]
Successors: []
---
0x203 INVALID
---
0x203: INVALID 
---
Entry stack: [V10, 0x888, 0x1, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x1, V146]

================================

Block 0x204
[0x204:0x206]
---
Predecessors: [0x1e9]
Successors: [0x207]
---
0x204 JUMPDEST
0x205 EQ
0x206 ISZERO
---
0x204: JUMPDEST 
0x205: V151 = EQ V146 0x1
0x206: V152 = ISZERO V151
---
Entry stack: [V10, 0x888, 0x1, V146]
Stack pops: 2
Stack additions: [V152]
Exit stack: [V10, 0x888, V152]

================================

Block 0x207
[0x207:0x20d]
---
Predecessors: [0x184, 0x204]
Successors: [0x20e, 0x239]
---
0x207 JUMPDEST
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x239
0x20d JUMPI
---
0x207: JUMPDEST 
0x209: V153 = ISZERO S0
0x20a: V154 = 0x239
0x20d: JUMPI 0x239 V153
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x888, S0]

================================

Block 0x20e
[0x20e:0x219]
---
Predecessors: [0x207]
Successors: [0x21a, 0x21b]
---
0x20e POP
0x20f PUSH1 0x2
0x211 PUSH1 0x8
0x213 DUP2
0x214 GT
0x215 ISZERO
0x216 PUSH2 0x21b
0x219 JUMPI
---
0x20f: V155 = 0x2
0x211: V156 = 0x8
0x214: V157 = GT 0x2 0x8
0x215: V158 = ISZERO 0x0
0x216: V159 = 0x21b
0x219: JUMPI 0x21b 0x1
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V10, 0x888, 0x2]

================================

Block 0x21a
[0x21a:0x21a]
---
Predecessors: [0x20e]
Successors: []
---
0x21a INVALID
---
0x21a: INVALID 
---
Entry stack: [V10, 0x888, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x2]

================================

Block 0x21b
[0x21b:0x234]
---
Predecessors: [0x20e]
Successors: [0x235, 0x236]
---
0x21b JUMPDEST
0x21c PUSH1 0x7
0x21e PUSH1 0x0
0x220 SWAP1
0x221 SLOAD
0x222 SWAP1
0x223 PUSH2 0x100
0x226 EXP
0x227 SWAP1
0x228 DIV
0x229 PUSH1 0xff
0x22b AND
0x22c PUSH1 0x8
0x22e DUP2
0x22f GT
0x230 ISZERO
0x231 PUSH2 0x236
0x234 JUMPI
---
0x21b: JUMPDEST 
0x21c: V160 = 0x7
0x21e: V161 = 0x0
0x221: V162 = S[0x7]
0x223: V163 = 0x100
0x226: V164 = EXP 0x100 0x0
0x228: V165 = DIV V162 0x1
0x229: V166 = 0xff
0x22b: V167 = AND 0xff V165
0x22c: V168 = 0x8
0x22f: V169 = GT V167 0x8
0x230: V170 = ISZERO V169
0x231: V171 = 0x236
0x234: JUMPI 0x236 V170
---
Entry stack: [V10, 0x888, 0x2]
Stack pops: 0
Stack additions: [V167]
Exit stack: [V10, 0x888, 0x2, V167]

================================

Block 0x235
[0x235:0x235]
---
Predecessors: [0x21b]
Successors: []
---
0x235 INVALID
---
0x235: INVALID 
---
Entry stack: [V10, 0x888, 0x2, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x2, V167]

================================

Block 0x236
[0x236:0x238]
---
Predecessors: [0x21b]
Successors: [0x239]
---
0x236 JUMPDEST
0x237 EQ
0x238 ISZERO
---
0x236: JUMPDEST 
0x237: V172 = EQ V167 0x2
0x238: V173 = ISZERO V172
---
Entry stack: [V10, 0x888, 0x2, V167]
Stack pops: 2
Stack additions: [V173]
Exit stack: [V10, 0x888, V173]

================================

Block 0x239
[0x239:0x23e]
---
Predecessors: [0x207, 0x236]
Successors: [0x23f, 0x244]
---
0x239 JUMPDEST
0x23a ISZERO
0x23b PUSH2 0x244
0x23e JUMPI
---
0x239: JUMPDEST 
0x23a: V174 = ISZERO S0
0x23b: V175 = 0x244
0x23e: JUMPI 0x244 V174
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x23f
[0x23f:0x243]
---
Predecessors: [0x239]
Successors: []
---
0x23f PUSH1 0x0
0x241 PUSH1 0x0
0x243 REVERT
---
0x23f: V176 = 0x0
0x241: V177 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x244
[0x244:0x29b]
---
Predecessors: [0x239]
Successors: [0x29c, 0x2c7]
---
0x244 JUMPDEST
0x245 PUSH1 0x1
0x247 PUSH1 0x0
0x249 SWAP1
0x24a SLOAD
0x24b SWAP1
0x24c PUSH2 0x100
0x24f EXP
0x250 SWAP1
0x251 DIV
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 AND
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d AND
0x27e CALLER
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 EQ
0x296 DUP1
0x297 ISZERO
0x298 PUSH2 0x2c7
0x29b JUMPI
---
0x244: JUMPDEST 
0x245: V178 = 0x1
0x247: V179 = 0x0
0x24a: V180 = S[0x1]
0x24c: V181 = 0x100
0x24f: V182 = EXP 0x100 0x0
0x251: V183 = DIV V180 0x1
0x252: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x268: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x27e: V188 = CALLER
0x27f: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x295: V191 = EQ V190 V187
0x297: V192 = ISZERO V191
0x298: V193 = 0x2c7
0x29b: JUMPI 0x2c7 V192
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V10, 0x888, V191]

================================

Block 0x29c
[0x29c:0x2a7]
---
Predecessors: [0x244]
Successors: [0x2a8, 0x2a9]
---
0x29c POP
0x29d PUSH1 0x3
0x29f PUSH1 0x8
0x2a1 DUP2
0x2a2 GT
0x2a3 ISZERO
0x2a4 PUSH2 0x2a9
0x2a7 JUMPI
---
0x29d: V194 = 0x3
0x29f: V195 = 0x8
0x2a2: V196 = GT 0x3 0x8
0x2a3: V197 = ISZERO 0x0
0x2a4: V198 = 0x2a9
0x2a7: JUMPI 0x2a9 0x1
---
Entry stack: [V10, 0x888, V191]
Stack pops: 1
Stack additions: [0x3]
Exit stack: [V10, 0x888, 0x3]

================================

Block 0x2a8
[0x2a8:0x2a8]
---
Predecessors: [0x29c]
Successors: []
---
0x2a8 INVALID
---
0x2a8: INVALID 
---
Entry stack: [V10, 0x888, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x3]

================================

Block 0x2a9
[0x2a9:0x2c2]
---
Predecessors: [0x29c]
Successors: [0x2c3, 0x2c4]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x7
0x2ac PUSH1 0x0
0x2ae SWAP1
0x2af SLOAD
0x2b0 SWAP1
0x2b1 PUSH2 0x100
0x2b4 EXP
0x2b5 SWAP1
0x2b6 DIV
0x2b7 PUSH1 0xff
0x2b9 AND
0x2ba PUSH1 0x8
0x2bc DUP2
0x2bd GT
0x2be ISZERO
0x2bf PUSH2 0x2c4
0x2c2 JUMPI
---
0x2a9: JUMPDEST 
0x2aa: V199 = 0x7
0x2ac: V200 = 0x0
0x2af: V201 = S[0x7]
0x2b1: V202 = 0x100
0x2b4: V203 = EXP 0x100 0x0
0x2b6: V204 = DIV V201 0x1
0x2b7: V205 = 0xff
0x2b9: V206 = AND 0xff V204
0x2ba: V207 = 0x8
0x2bd: V208 = GT V206 0x8
0x2be: V209 = ISZERO V208
0x2bf: V210 = 0x2c4
0x2c2: JUMPI 0x2c4 V209
---
Entry stack: [V10, 0x888, 0x3]
Stack pops: 0
Stack additions: [V206]
Exit stack: [V10, 0x888, 0x3, V206]

================================

Block 0x2c3
[0x2c3:0x2c3]
---
Predecessors: [0x2a9]
Successors: []
---
0x2c3 INVALID
---
0x2c3: INVALID 
---
Entry stack: [V10, 0x888, 0x3, V206]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x3, V206]

================================

Block 0x2c4
[0x2c4:0x2c6]
---
Predecessors: [0x2a9]
Successors: [0x2c7]
---
0x2c4 JUMPDEST
0x2c5 EQ
0x2c6 ISZERO
---
0x2c4: JUMPDEST 
0x2c5: V211 = EQ V206 0x3
0x2c6: V212 = ISZERO V211
---
Entry stack: [V10, 0x888, 0x3, V206]
Stack pops: 2
Stack additions: [V212]
Exit stack: [V10, 0x888, V212]

================================

Block 0x2c7
[0x2c7:0x2cd]
---
Predecessors: [0x244, 0x2c4]
Successors: [0x2ce, 0x2f9]
---
0x2c7 JUMPDEST
0x2c8 DUP1
0x2c9 ISZERO
0x2ca PUSH2 0x2f9
0x2cd JUMPI
---
0x2c7: JUMPDEST 
0x2c9: V213 = ISZERO S0
0x2ca: V214 = 0x2f9
0x2cd: JUMPI 0x2f9 V213
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x888, S0]

================================

Block 0x2ce
[0x2ce:0x2d9]
---
Predecessors: [0x2c7]
Successors: [0x2da, 0x2db]
---
0x2ce POP
0x2cf PUSH1 0x4
0x2d1 PUSH1 0x8
0x2d3 DUP2
0x2d4 GT
0x2d5 ISZERO
0x2d6 PUSH2 0x2db
0x2d9 JUMPI
---
0x2cf: V215 = 0x4
0x2d1: V216 = 0x8
0x2d4: V217 = GT 0x4 0x8
0x2d5: V218 = ISZERO 0x0
0x2d6: V219 = 0x2db
0x2d9: JUMPI 0x2db 0x1
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [0x4]
Exit stack: [V10, 0x888, 0x4]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x2ce]
Successors: []
---
0x2da INVALID
---
0x2da: INVALID 
---
Entry stack: [V10, 0x888, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x4]

================================

Block 0x2db
[0x2db:0x2f4]
---
Predecessors: [0x2ce]
Successors: [0x2f5, 0x2f6]
---
0x2db JUMPDEST
0x2dc PUSH1 0x7
0x2de PUSH1 0x0
0x2e0 SWAP1
0x2e1 SLOAD
0x2e2 SWAP1
0x2e3 PUSH2 0x100
0x2e6 EXP
0x2e7 SWAP1
0x2e8 DIV
0x2e9 PUSH1 0xff
0x2eb AND
0x2ec PUSH1 0x8
0x2ee DUP2
0x2ef GT
0x2f0 ISZERO
0x2f1 PUSH2 0x2f6
0x2f4 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V220 = 0x7
0x2de: V221 = 0x0
0x2e1: V222 = S[0x7]
0x2e3: V223 = 0x100
0x2e6: V224 = EXP 0x100 0x0
0x2e8: V225 = DIV V222 0x1
0x2e9: V226 = 0xff
0x2eb: V227 = AND 0xff V225
0x2ec: V228 = 0x8
0x2ef: V229 = GT V227 0x8
0x2f0: V230 = ISZERO V229
0x2f1: V231 = 0x2f6
0x2f4: JUMPI 0x2f6 V230
---
Entry stack: [V10, 0x888, 0x4]
Stack pops: 0
Stack additions: [V227]
Exit stack: [V10, 0x888, 0x4, V227]

================================

Block 0x2f5
[0x2f5:0x2f5]
---
Predecessors: [0x2db]
Successors: []
---
0x2f5 INVALID
---
0x2f5: INVALID 
---
Entry stack: [V10, 0x888, 0x4, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x4, V227]

================================

Block 0x2f6
[0x2f6:0x2f8]
---
Predecessors: [0x2db]
Successors: [0x2f9]
---
0x2f6 JUMPDEST
0x2f7 EQ
0x2f8 ISZERO
---
0x2f6: JUMPDEST 
0x2f7: V232 = EQ V227 0x4
0x2f8: V233 = ISZERO V232
---
Entry stack: [V10, 0x888, 0x4, V227]
Stack pops: 2
Stack additions: [V233]
Exit stack: [V10, 0x888, V233]

================================

Block 0x2f9
[0x2f9:0x2fe]
---
Predecessors: [0x2c7, 0x2f6]
Successors: [0x2ff, 0x304]
---
0x2f9 JUMPDEST
0x2fa ISZERO
0x2fb PUSH2 0x304
0x2fe JUMPI
---
0x2f9: JUMPDEST 
0x2fa: V234 = ISZERO S0
0x2fb: V235 = 0x304
0x2fe: JUMPI 0x304 V234
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x2ff
[0x2ff:0x303]
---
Predecessors: [0x2f9]
Successors: []
---
0x2ff PUSH1 0x0
0x301 PUSH1 0x0
0x303 REVERT
---
0x2ff: V236 = 0x0
0x301: V237 = 0x0
0x303: REVERT 0x0 0x0
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x304
[0x304:0x35b]
---
Predecessors: [0x2f9]
Successors: [0x35c, 0x387]
---
0x304 JUMPDEST
0x305 PUSH1 0x2
0x307 PUSH1 0x0
0x309 SWAP1
0x30a SLOAD
0x30b SWAP1
0x30c PUSH2 0x100
0x30f EXP
0x310 SWAP1
0x311 DIV
0x312 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x327 AND
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d AND
0x33e CALLER
0x33f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x354 AND
0x355 EQ
0x356 DUP1
0x357 ISZERO
0x358 PUSH2 0x387
0x35b JUMPI
---
0x304: JUMPDEST 
0x305: V238 = 0x2
0x307: V239 = 0x0
0x30a: V240 = S[0x2]
0x30c: V241 = 0x100
0x30f: V242 = EXP 0x100 0x0
0x311: V243 = DIV V240 0x1
0x312: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x327: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x328: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x33e: V248 = CALLER
0x33f: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x354: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x355: V251 = EQ V250 V247
0x357: V252 = ISZERO V251
0x358: V253 = 0x387
0x35b: JUMPI 0x387 V252
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [V251]
Exit stack: [V10, 0x888, V251]

================================

Block 0x35c
[0x35c:0x367]
---
Predecessors: [0x304]
Successors: [0x368, 0x369]
---
0x35c POP
0x35d PUSH1 0x5
0x35f PUSH1 0x8
0x361 DUP2
0x362 GT
0x363 ISZERO
0x364 PUSH2 0x369
0x367 JUMPI
---
0x35d: V254 = 0x5
0x35f: V255 = 0x8
0x362: V256 = GT 0x5 0x8
0x363: V257 = ISZERO 0x0
0x364: V258 = 0x369
0x367: JUMPI 0x369 0x1
---
Entry stack: [V10, 0x888, V251]
Stack pops: 1
Stack additions: [0x5]
Exit stack: [V10, 0x888, 0x5]

================================

Block 0x368
[0x368:0x368]
---
Predecessors: [0x35c]
Successors: []
---
0x368 INVALID
---
0x368: INVALID 
---
Entry stack: [V10, 0x888, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x5]

================================

Block 0x369
[0x369:0x382]
---
Predecessors: [0x35c]
Successors: [0x383, 0x384]
---
0x369 JUMPDEST
0x36a PUSH1 0x7
0x36c PUSH1 0x0
0x36e SWAP1
0x36f SLOAD
0x370 SWAP1
0x371 PUSH2 0x100
0x374 EXP
0x375 SWAP1
0x376 DIV
0x377 PUSH1 0xff
0x379 AND
0x37a PUSH1 0x8
0x37c DUP2
0x37d GT
0x37e ISZERO
0x37f PUSH2 0x384
0x382 JUMPI
---
0x369: JUMPDEST 
0x36a: V259 = 0x7
0x36c: V260 = 0x0
0x36f: V261 = S[0x7]
0x371: V262 = 0x100
0x374: V263 = EXP 0x100 0x0
0x376: V264 = DIV V261 0x1
0x377: V265 = 0xff
0x379: V266 = AND 0xff V264
0x37a: V267 = 0x8
0x37d: V268 = GT V266 0x8
0x37e: V269 = ISZERO V268
0x37f: V270 = 0x384
0x382: JUMPI 0x384 V269
---
Entry stack: [V10, 0x888, 0x5]
Stack pops: 0
Stack additions: [V266]
Exit stack: [V10, 0x888, 0x5, V266]

================================

Block 0x383
[0x383:0x383]
---
Predecessors: [0x369]
Successors: []
---
0x383 INVALID
---
0x383: INVALID 
---
Entry stack: [V10, 0x888, 0x5, V266]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x5, V266]

================================

Block 0x384
[0x384:0x386]
---
Predecessors: [0x369]
Successors: [0x387]
---
0x384 JUMPDEST
0x385 EQ
0x386 ISZERO
---
0x384: JUMPDEST 
0x385: V271 = EQ V266 0x5
0x386: V272 = ISZERO V271
---
Entry stack: [V10, 0x888, 0x5, V266]
Stack pops: 2
Stack additions: [V272]
Exit stack: [V10, 0x888, V272]

================================

Block 0x387
[0x387:0x38d]
---
Predecessors: [0x304, 0x384]
Successors: [0x38e, 0x3b9]
---
0x387 JUMPDEST
0x388 DUP1
0x389 ISZERO
0x38a PUSH2 0x3b9
0x38d JUMPI
---
0x387: JUMPDEST 
0x389: V273 = ISZERO S0
0x38a: V274 = 0x3b9
0x38d: JUMPI 0x3b9 V273
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x888, S0]

================================

Block 0x38e
[0x38e:0x399]
---
Predecessors: [0x387]
Successors: [0x39a, 0x39b]
---
0x38e POP
0x38f PUSH1 0x6
0x391 PUSH1 0x8
0x393 DUP2
0x394 GT
0x395 ISZERO
0x396 PUSH2 0x39b
0x399 JUMPI
---
0x38f: V275 = 0x6
0x391: V276 = 0x8
0x394: V277 = GT 0x6 0x8
0x395: V278 = ISZERO 0x0
0x396: V279 = 0x39b
0x399: JUMPI 0x39b 0x1
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: [0x6]
Exit stack: [V10, 0x888, 0x6]

================================

Block 0x39a
[0x39a:0x39a]
---
Predecessors: [0x38e]
Successors: []
---
0x39a INVALID
---
0x39a: INVALID 
---
Entry stack: [V10, 0x888, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x6]

================================

Block 0x39b
[0x39b:0x3b4]
---
Predecessors: [0x38e]
Successors: [0x3b5, 0x3b6]
---
0x39b JUMPDEST
0x39c PUSH1 0x7
0x39e PUSH1 0x0
0x3a0 SWAP1
0x3a1 SLOAD
0x3a2 SWAP1
0x3a3 PUSH2 0x100
0x3a6 EXP
0x3a7 SWAP1
0x3a8 DIV
0x3a9 PUSH1 0xff
0x3ab AND
0x3ac PUSH1 0x8
0x3ae DUP2
0x3af GT
0x3b0 ISZERO
0x3b1 PUSH2 0x3b6
0x3b4 JUMPI
---
0x39b: JUMPDEST 
0x39c: V280 = 0x7
0x39e: V281 = 0x0
0x3a1: V282 = S[0x7]
0x3a3: V283 = 0x100
0x3a6: V284 = EXP 0x100 0x0
0x3a8: V285 = DIV V282 0x1
0x3a9: V286 = 0xff
0x3ab: V287 = AND 0xff V285
0x3ac: V288 = 0x8
0x3af: V289 = GT V287 0x8
0x3b0: V290 = ISZERO V289
0x3b1: V291 = 0x3b6
0x3b4: JUMPI 0x3b6 V290
---
Entry stack: [V10, 0x888, 0x6]
Stack pops: 0
Stack additions: [V287]
Exit stack: [V10, 0x888, 0x6, V287]

================================

Block 0x3b5
[0x3b5:0x3b5]
---
Predecessors: [0x39b]
Successors: []
---
0x3b5 INVALID
---
0x3b5: INVALID 
---
Entry stack: [V10, 0x888, 0x6, V287]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x6, V287]

================================

Block 0x3b6
[0x3b6:0x3b8]
---
Predecessors: [0x39b]
Successors: [0x3b9]
---
0x3b6 JUMPDEST
0x3b7 EQ
0x3b8 ISZERO
---
0x3b6: JUMPDEST 
0x3b7: V292 = EQ V287 0x6
0x3b8: V293 = ISZERO V292
---
Entry stack: [V10, 0x888, 0x6, V287]
Stack pops: 2
Stack additions: [V293]
Exit stack: [V10, 0x888, V293]

================================

Block 0x3b9
[0x3b9:0x3be]
---
Predecessors: [0x387, 0x3b6]
Successors: [0x3bf, 0x3c4]
---
0x3b9 JUMPDEST
0x3ba ISZERO
0x3bb PUSH2 0x3c4
0x3be JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V294 = ISZERO S0
0x3bb: V295 = 0x3c4
0x3be: JUMPI 0x3c4 V294
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x3bf
[0x3bf:0x3c3]
---
Predecessors: [0x3b9]
Successors: []
---
0x3bf PUSH1 0x0
0x3c1 PUSH1 0x0
0x3c3 REVERT
---
0x3bf: V296 = 0x0
0x3c1: V297 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x3c4
[0x3c4:0x3cf]
---
Predecessors: [0x3b9]
Successors: [0x3d0, 0x3d1]
---
0x3c4 JUMPDEST
0x3c5 PUSH1 0x0
0x3c7 PUSH1 0x8
0x3c9 DUP2
0x3ca GT
0x3cb ISZERO
0x3cc PUSH2 0x3d1
0x3cf JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V298 = 0x0
0x3c7: V299 = 0x8
0x3ca: V300 = GT 0x0 0x8
0x3cb: V301 = ISZERO 0x0
0x3cc: V302 = 0x3d1
0x3cf: JUMPI 0x3d1 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x888, 0x0]

================================

Block 0x3d0
[0x3d0:0x3d0]
---
Predecessors: [0x3c4]
Successors: []
---
0x3d0 INVALID
---
0x3d0: INVALID 
---
Entry stack: [V10, 0x888, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x0]

================================

Block 0x3d1
[0x3d1:0x3ea]
---
Predecessors: [0x3c4]
Successors: [0x3eb, 0x3ec]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x7
0x3d4 PUSH1 0x0
0x3d6 SWAP1
0x3d7 SLOAD
0x3d8 SWAP1
0x3d9 PUSH2 0x100
0x3dc EXP
0x3dd SWAP1
0x3de DIV
0x3df PUSH1 0xff
0x3e1 AND
0x3e2 PUSH1 0x8
0x3e4 DUP2
0x3e5 GT
0x3e6 ISZERO
0x3e7 PUSH2 0x3ec
0x3ea JUMPI
---
0x3d1: JUMPDEST 
0x3d2: V303 = 0x7
0x3d4: V304 = 0x0
0x3d7: V305 = S[0x7]
0x3d9: V306 = 0x100
0x3dc: V307 = EXP 0x100 0x0
0x3de: V308 = DIV V305 0x1
0x3df: V309 = 0xff
0x3e1: V310 = AND 0xff V308
0x3e2: V311 = 0x8
0x3e5: V312 = GT V310 0x8
0x3e6: V313 = ISZERO V312
0x3e7: V314 = 0x3ec
0x3ea: JUMPI 0x3ec V313
---
Entry stack: [V10, 0x888, 0x0]
Stack pops: 0
Stack additions: [V310]
Exit stack: [V10, 0x888, 0x0, V310]

================================

Block 0x3eb
[0x3eb:0x3eb]
---
Predecessors: [0x3d1]
Successors: []
---
0x3eb INVALID
---
0x3eb: INVALID 
---
Entry stack: [V10, 0x888, 0x0, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x0, V310]

================================

Block 0x3ec
[0x3ec:0x3f3]
---
Predecessors: [0x3d1]
Successors: [0x3f4, 0x406]
---
0x3ec JUMPDEST
0x3ed EQ
0x3ee DUP1
0x3ef ISZERO
0x3f0 PUSH2 0x406
0x3f3 JUMPI
---
0x3ec: JUMPDEST 
0x3ed: V315 = EQ V310 0x0
0x3ef: V316 = ISZERO V315
0x3f0: V317 = 0x406
0x3f3: JUMPI 0x406 V316
---
Entry stack: [V10, 0x888, 0x0, V310]
Stack pops: 2
Stack additions: [V315]
Exit stack: [V10, 0x888, V315]

================================

Block 0x3f4
[0x3f4:0x405]
---
Predecessors: [0x3ec]
Successors: [0x406]
---
0x3f4 POP
0x3f5 PUSH1 0x6
0x3f7 SLOAD
0x3f8 PUSH1 0x5
0x3fa SLOAD
0x3fb PUSH1 0x4
0x3fd SLOAD
0x3fe PUSH1 0x2
0x400 MUL
0x401 ADD
0x402 ADD
0x403 CALLVALUE
0x404 EQ
0x405 ISZERO
---
0x3f5: V318 = 0x6
0x3f7: V319 = S[0x6]
0x3f8: V320 = 0x5
0x3fa: V321 = S[0x5]
0x3fb: V322 = 0x4
0x3fd: V323 = S[0x4]
0x3fe: V324 = 0x2
0x400: V325 = MUL 0x2 V323
0x401: V326 = ADD V325 V321
0x402: V327 = ADD V326 V319
0x403: V328 = CALLVALUE
0x404: V329 = EQ V328 V327
0x405: V330 = ISZERO V329
---
Entry stack: [V10, 0x888, V315]
Stack pops: 1
Stack additions: [V330]
Exit stack: [V10, 0x888, V330]

================================

Block 0x406
[0x406:0x40b]
---
Predecessors: [0x3ec, 0x3f4]
Successors: [0x40c, 0x411]
---
0x406 JUMPDEST
0x407 ISZERO
0x408 PUSH2 0x411
0x40b JUMPI
---
0x406: JUMPDEST 
0x407: V331 = ISZERO S0
0x408: V332 = 0x411
0x40b: JUMPI 0x411 V331
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x40c
[0x40c:0x410]
---
Predecessors: [0x406]
Successors: []
---
0x40c PUSH1 0x0
0x40e PUSH1 0x0
0x410 REVERT
---
0x40c: V333 = 0x0
0x40e: V334 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x411
[0x411:0x41c]
---
Predecessors: [0x406]
Successors: [0x41d, 0x41e]
---
0x411 JUMPDEST
0x412 PUSH1 0x1
0x414 PUSH1 0x8
0x416 DUP2
0x417 GT
0x418 ISZERO
0x419 PUSH2 0x41e
0x41c JUMPI
---
0x411: JUMPDEST 
0x412: V335 = 0x1
0x414: V336 = 0x8
0x417: V337 = GT 0x1 0x8
0x418: V338 = ISZERO 0x0
0x419: V339 = 0x41e
0x41c: JUMPI 0x41e 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x888, 0x1]

================================

Block 0x41d
[0x41d:0x41d]
---
Predecessors: [0x411]
Successors: []
---
0x41d INVALID
---
0x41d: INVALID 
---
Entry stack: [V10, 0x888, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x1]

================================

Block 0x41e
[0x41e:0x437]
---
Predecessors: [0x411]
Successors: [0x438, 0x439]
---
0x41e JUMPDEST
0x41f PUSH1 0x7
0x421 PUSH1 0x0
0x423 SWAP1
0x424 SLOAD
0x425 SWAP1
0x426 PUSH2 0x100
0x429 EXP
0x42a SWAP1
0x42b DIV
0x42c PUSH1 0xff
0x42e AND
0x42f PUSH1 0x8
0x431 DUP2
0x432 GT
0x433 ISZERO
0x434 PUSH2 0x439
0x437 JUMPI
---
0x41e: JUMPDEST 
0x41f: V340 = 0x7
0x421: V341 = 0x0
0x424: V342 = S[0x7]
0x426: V343 = 0x100
0x429: V344 = EXP 0x100 0x0
0x42b: V345 = DIV V342 0x1
0x42c: V346 = 0xff
0x42e: V347 = AND 0xff V345
0x42f: V348 = 0x8
0x432: V349 = GT V347 0x8
0x433: V350 = ISZERO V349
0x434: V351 = 0x439
0x437: JUMPI 0x439 V350
---
Entry stack: [V10, 0x888, 0x1]
Stack pops: 0
Stack additions: [V347]
Exit stack: [V10, 0x888, 0x1, V347]

================================

Block 0x438
[0x438:0x438]
---
Predecessors: [0x41e]
Successors: []
---
0x438 INVALID
---
0x438: INVALID 
---
Entry stack: [V10, 0x888, 0x1, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x1, V347]

================================

Block 0x439
[0x439:0x440]
---
Predecessors: [0x41e]
Successors: [0x441, 0x448]
---
0x439 JUMPDEST
0x43a EQ
0x43b DUP1
0x43c ISZERO
0x43d PUSH2 0x448
0x440 JUMPI
---
0x439: JUMPDEST 
0x43a: V352 = EQ V347 0x1
0x43c: V353 = ISZERO V352
0x43d: V354 = 0x448
0x440: JUMPI 0x448 V353
---
Entry stack: [V10, 0x888, 0x1, V347]
Stack pops: 2
Stack additions: [V352]
Exit stack: [V10, 0x888, V352]

================================

Block 0x441
[0x441:0x447]
---
Predecessors: [0x439]
Successors: [0x448]
---
0x441 POP
0x442 PUSH1 0x4
0x444 SLOAD
0x445 CALLVALUE
0x446 EQ
0x447 ISZERO
---
0x442: V355 = 0x4
0x444: V356 = S[0x4]
0x445: V357 = CALLVALUE
0x446: V358 = EQ V357 V356
0x447: V359 = ISZERO V358
---
Entry stack: [V10, 0x888, V352]
Stack pops: 1
Stack additions: [V359]
Exit stack: [V10, 0x888, V359]

================================

Block 0x448
[0x448:0x44d]
---
Predecessors: [0x439, 0x441]
Successors: [0x44e, 0x453]
---
0x448 JUMPDEST
0x449 ISZERO
0x44a PUSH2 0x453
0x44d JUMPI
---
0x448: JUMPDEST 
0x449: V360 = ISZERO S0
0x44a: V361 = 0x453
0x44d: JUMPI 0x453 V360
---
Entry stack: [V10, 0x888, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x44e
[0x44e:0x452]
---
Predecessors: [0x448]
Successors: []
---
0x44e PUSH1 0x0
0x450 PUSH1 0x0
0x452 REVERT
---
0x44e: V362 = 0x0
0x450: V363 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x453
[0x453:0x45e]
---
Predecessors: [0x448]
Successors: [0x45f, 0x460]
---
0x453 JUMPDEST
0x454 PUSH1 0x0
0x456 PUSH1 0x8
0x458 DUP2
0x459 GT
0x45a ISZERO
0x45b PUSH2 0x460
0x45e JUMPI
---
0x453: JUMPDEST 
0x454: V364 = 0x0
0x456: V365 = 0x8
0x459: V366 = GT 0x0 0x8
0x45a: V367 = ISZERO 0x0
0x45b: V368 = 0x460
0x45e: JUMPI 0x460 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x888, 0x0]

================================

Block 0x45f
[0x45f:0x45f]
---
Predecessors: [0x453]
Successors: []
---
0x45f INVALID
---
0x45f: INVALID 
---
Entry stack: [V10, 0x888, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x0]

================================

Block 0x460
[0x460:0x479]
---
Predecessors: [0x453]
Successors: [0x47a, 0x47b]
---
0x460 JUMPDEST
0x461 PUSH1 0x7
0x463 PUSH1 0x0
0x465 SWAP1
0x466 SLOAD
0x467 SWAP1
0x468 PUSH2 0x100
0x46b EXP
0x46c SWAP1
0x46d DIV
0x46e PUSH1 0xff
0x470 AND
0x471 PUSH1 0x8
0x473 DUP2
0x474 GT
0x475 ISZERO
0x476 PUSH2 0x47b
0x479 JUMPI
---
0x460: JUMPDEST 
0x461: V369 = 0x7
0x463: V370 = 0x0
0x466: V371 = S[0x7]
0x468: V372 = 0x100
0x46b: V373 = EXP 0x100 0x0
0x46d: V374 = DIV V371 0x1
0x46e: V375 = 0xff
0x470: V376 = AND 0xff V374
0x471: V377 = 0x8
0x474: V378 = GT V376 0x8
0x475: V379 = ISZERO V378
0x476: V380 = 0x47b
0x479: JUMPI 0x47b V379
---
Entry stack: [V10, 0x888, 0x0]
Stack pops: 0
Stack additions: [V376]
Exit stack: [V10, 0x888, 0x0, V376]

================================

Block 0x47a
[0x47a:0x47a]
---
Predecessors: [0x460]
Successors: []
---
0x47a INVALID
---
0x47a: INVALID 
---
Entry stack: [V10, 0x888, 0x0, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x0, V376]

================================

Block 0x47b
[0x47b:0x481]
---
Predecessors: [0x460]
Successors: [0x482, 0x4aa]
---
0x47b JUMPDEST
0x47c EQ
0x47d ISZERO
0x47e PUSH2 0x4aa
0x481 JUMPI
---
0x47b: JUMPDEST 
0x47c: V381 = EQ V376 0x0
0x47d: V382 = ISZERO V381
0x47e: V383 = 0x4aa
0x481: JUMPI 0x4aa V382
---
Entry stack: [V10, 0x888, 0x0, V376]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x482
[0x482:0x49e]
---
Predecessors: [0x47b]
Successors: [0x49f, 0x4a0]
---
0x482 PUSH1 0x1
0x484 PUSH1 0x7
0x486 PUSH1 0x0
0x488 PUSH2 0x100
0x48b EXP
0x48c DUP2
0x48d SLOAD
0x48e DUP2
0x48f PUSH1 0xff
0x491 MUL
0x492 NOT
0x493 AND
0x494 SWAP1
0x495 DUP4
0x496 PUSH1 0x8
0x498 DUP2
0x499 GT
0x49a ISZERO
0x49b PUSH2 0x4a0
0x49e JUMPI
---
0x482: V384 = 0x1
0x484: V385 = 0x7
0x486: V386 = 0x0
0x488: V387 = 0x100
0x48b: V388 = EXP 0x100 0x0
0x48d: V389 = S[0x7]
0x48f: V390 = 0xff
0x491: V391 = MUL 0xff 0x1
0x492: V392 = NOT 0xff
0x493: V393 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V389
0x496: V394 = 0x8
0x499: V395 = GT 0x1 0x8
0x49a: V396 = ISZERO 0x0
0x49b: V397 = 0x4a0
0x49e: JUMPI 0x4a0 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x1, 0x7, V393, 0x1, 0x1]
Exit stack: [V10, 0x888, 0x1, 0x7, V393, 0x1, 0x1]

================================

Block 0x49f
[0x49f:0x49f]
---
Predecessors: [0x482]
Successors: []
---
0x49f INVALID
---
0x49f: INVALID 
---
Entry stack: [V10, 0x888, 0x1, 0x7, V393, 0x1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x1, 0x7, V393, 0x1, 0x1]

================================

Block 0x4a0
[0x4a0:0x4a9]
---
Predecessors: [0x482]
Successors: [0x885]
---
0x4a0 JUMPDEST
0x4a1 MUL
0x4a2 OR
0x4a3 SWAP1
0x4a4 SSTORE
0x4a5 POP
0x4a6 PUSH2 0x885
0x4a9 JUMP
---
0x4a0: JUMPDEST 
0x4a1: V398 = MUL 0x1 0x1
0x4a2: V399 = OR 0x1 V393
0x4a4: S[0x7] = V399
0x4a6: V400 = 0x885
0x4a9: JUMP 0x885
---
Entry stack: [V10, 0x888, 0x1, 0x7, V393, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x4aa
[0x4aa:0x4b5]
---
Predecessors: [0x47b]
Successors: [0x4b6, 0x4b7]
---
0x4aa JUMPDEST
0x4ab PUSH1 0x1
0x4ad PUSH1 0x8
0x4af DUP2
0x4b0 GT
0x4b1 ISZERO
0x4b2 PUSH2 0x4b7
0x4b5 JUMPI
---
0x4aa: JUMPDEST 
0x4ab: V401 = 0x1
0x4ad: V402 = 0x8
0x4b0: V403 = GT 0x1 0x8
0x4b1: V404 = ISZERO 0x0
0x4b2: V405 = 0x4b7
0x4b5: JUMPI 0x4b7 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x888, 0x1]

================================

Block 0x4b6
[0x4b6:0x4b6]
---
Predecessors: [0x4aa]
Successors: []
---
0x4b6 INVALID
---
0x4b6: INVALID 
---
Entry stack: [V10, 0x888, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x1]

================================

Block 0x4b7
[0x4b7:0x4d0]
---
Predecessors: [0x4aa]
Successors: [0x4d1, 0x4d2]
---
0x4b7 JUMPDEST
0x4b8 PUSH1 0x7
0x4ba PUSH1 0x0
0x4bc SWAP1
0x4bd SLOAD
0x4be SWAP1
0x4bf PUSH2 0x100
0x4c2 EXP
0x4c3 SWAP1
0x4c4 DIV
0x4c5 PUSH1 0xff
0x4c7 AND
0x4c8 PUSH1 0x8
0x4ca DUP2
0x4cb GT
0x4cc ISZERO
0x4cd PUSH2 0x4d2
0x4d0 JUMPI
---
0x4b7: JUMPDEST 
0x4b8: V406 = 0x7
0x4ba: V407 = 0x0
0x4bd: V408 = S[0x7]
0x4bf: V409 = 0x100
0x4c2: V410 = EXP 0x100 0x0
0x4c4: V411 = DIV V408 0x1
0x4c5: V412 = 0xff
0x4c7: V413 = AND 0xff V411
0x4c8: V414 = 0x8
0x4cb: V415 = GT V413 0x8
0x4cc: V416 = ISZERO V415
0x4cd: V417 = 0x4d2
0x4d0: JUMPI 0x4d2 V416
---
Entry stack: [V10, 0x888, 0x1]
Stack pops: 0
Stack additions: [V413]
Exit stack: [V10, 0x888, 0x1, V413]

================================

Block 0x4d1
[0x4d1:0x4d1]
---
Predecessors: [0x4b7]
Successors: []
---
0x4d1 INVALID
---
0x4d1: INVALID 
---
Entry stack: [V10, 0x888, 0x1, V413]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x1, V413]

================================

Block 0x4d2
[0x4d2:0x4d8]
---
Predecessors: [0x4b7]
Successors: [0x4d9, 0x501]
---
0x4d2 JUMPDEST
0x4d3 EQ
0x4d4 ISZERO
0x4d5 PUSH2 0x501
0x4d8 JUMPI
---
0x4d2: JUMPDEST 
0x4d3: V418 = EQ V413 0x1
0x4d4: V419 = ISZERO V418
0x4d5: V420 = 0x501
0x4d8: JUMPI 0x501 V419
---
Entry stack: [V10, 0x888, 0x1, V413]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x4d9
[0x4d9:0x4f5]
---
Predecessors: [0x4d2]
Successors: [0x4f6, 0x4f7]
---
0x4d9 PUSH1 0x2
0x4db PUSH1 0x7
0x4dd PUSH1 0x0
0x4df PUSH2 0x100
0x4e2 EXP
0x4e3 DUP2
0x4e4 SLOAD
0x4e5 DUP2
0x4e6 PUSH1 0xff
0x4e8 MUL
0x4e9 NOT
0x4ea AND
0x4eb SWAP1
0x4ec DUP4
0x4ed PUSH1 0x8
0x4ef DUP2
0x4f0 GT
0x4f1 ISZERO
0x4f2 PUSH2 0x4f7
0x4f5 JUMPI
---
0x4d9: V421 = 0x2
0x4db: V422 = 0x7
0x4dd: V423 = 0x0
0x4df: V424 = 0x100
0x4e2: V425 = EXP 0x100 0x0
0x4e4: V426 = S[0x7]
0x4e6: V427 = 0xff
0x4e8: V428 = MUL 0xff 0x1
0x4e9: V429 = NOT 0xff
0x4ea: V430 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V426
0x4ed: V431 = 0x8
0x4f0: V432 = GT 0x2 0x8
0x4f1: V433 = ISZERO 0x0
0x4f2: V434 = 0x4f7
0x4f5: JUMPI 0x4f7 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x2, 0x7, V430, 0x1, 0x2]
Exit stack: [V10, 0x888, 0x2, 0x7, V430, 0x1, 0x2]

================================

Block 0x4f6
[0x4f6:0x4f6]
---
Predecessors: [0x4d9]
Successors: []
---
0x4f6 INVALID
---
0x4f6: INVALID 
---
Entry stack: [V10, 0x888, 0x2, 0x7, V430, 0x1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x2, 0x7, V430, 0x1, 0x2]

================================

Block 0x4f7
[0x4f7:0x500]
---
Predecessors: [0x4d9]
Successors: [0x884]
---
0x4f7 JUMPDEST
0x4f8 MUL
0x4f9 OR
0x4fa SWAP1
0x4fb SSTORE
0x4fc POP
0x4fd PUSH2 0x884
0x500 JUMP
---
0x4f7: JUMPDEST 
0x4f8: V435 = MUL 0x2 0x1
0x4f9: V436 = OR 0x2 V430
0x4fb: S[0x7] = V436
0x4fd: V437 = 0x884
0x500: JUMP 0x884
---
Entry stack: [V10, 0x888, 0x2, 0x7, V430, 0x1, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x501
[0x501:0x50c]
---
Predecessors: [0x4d2]
Successors: [0x50d, 0x50e]
---
0x501 JUMPDEST
0x502 PUSH1 0x2
0x504 PUSH1 0x8
0x506 DUP2
0x507 GT
0x508 ISZERO
0x509 PUSH2 0x50e
0x50c JUMPI
---
0x501: JUMPDEST 
0x502: V438 = 0x2
0x504: V439 = 0x8
0x507: V440 = GT 0x2 0x8
0x508: V441 = ISZERO 0x0
0x509: V442 = 0x50e
0x50c: JUMPI 0x50e 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V10, 0x888, 0x2]

================================

Block 0x50d
[0x50d:0x50d]
---
Predecessors: [0x501]
Successors: []
---
0x50d INVALID
---
0x50d: INVALID 
---
Entry stack: [V10, 0x888, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x2]

================================

Block 0x50e
[0x50e:0x527]
---
Predecessors: [0x501]
Successors: [0x528, 0x529]
---
0x50e JUMPDEST
0x50f PUSH1 0x7
0x511 PUSH1 0x0
0x513 SWAP1
0x514 SLOAD
0x515 SWAP1
0x516 PUSH2 0x100
0x519 EXP
0x51a SWAP1
0x51b DIV
0x51c PUSH1 0xff
0x51e AND
0x51f PUSH1 0x8
0x521 DUP2
0x522 GT
0x523 ISZERO
0x524 PUSH2 0x529
0x527 JUMPI
---
0x50e: JUMPDEST 
0x50f: V443 = 0x7
0x511: V444 = 0x0
0x514: V445 = S[0x7]
0x516: V446 = 0x100
0x519: V447 = EXP 0x100 0x0
0x51b: V448 = DIV V445 0x1
0x51c: V449 = 0xff
0x51e: V450 = AND 0xff V448
0x51f: V451 = 0x8
0x522: V452 = GT V450 0x8
0x523: V453 = ISZERO V452
0x524: V454 = 0x529
0x527: JUMPI 0x529 V453
---
Entry stack: [V10, 0x888, 0x2]
Stack pops: 0
Stack additions: [V450]
Exit stack: [V10, 0x888, 0x2, V450]

================================

Block 0x528
[0x528:0x528]
---
Predecessors: [0x50e]
Successors: []
---
0x528 INVALID
---
0x528: INVALID 
---
Entry stack: [V10, 0x888, 0x2, V450]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x2, V450]

================================

Block 0x529
[0x529:0x52f]
---
Predecessors: [0x50e]
Successors: [0x530, 0x558]
---
0x529 JUMPDEST
0x52a EQ
0x52b ISZERO
0x52c PUSH2 0x558
0x52f JUMPI
---
0x529: JUMPDEST 
0x52a: V455 = EQ V450 0x2
0x52b: V456 = ISZERO V455
0x52c: V457 = 0x558
0x52f: JUMPI 0x558 V456
---
Entry stack: [V10, 0x888, 0x2, V450]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x530
[0x530:0x54c]
---
Predecessors: [0x529]
Successors: [0x54d, 0x54e]
---
0x530 PUSH1 0x3
0x532 PUSH1 0x7
0x534 PUSH1 0x0
0x536 PUSH2 0x100
0x539 EXP
0x53a DUP2
0x53b SLOAD
0x53c DUP2
0x53d PUSH1 0xff
0x53f MUL
0x540 NOT
0x541 AND
0x542 SWAP1
0x543 DUP4
0x544 PUSH1 0x8
0x546 DUP2
0x547 GT
0x548 ISZERO
0x549 PUSH2 0x54e
0x54c JUMPI
---
0x530: V458 = 0x3
0x532: V459 = 0x7
0x534: V460 = 0x0
0x536: V461 = 0x100
0x539: V462 = EXP 0x100 0x0
0x53b: V463 = S[0x7]
0x53d: V464 = 0xff
0x53f: V465 = MUL 0xff 0x1
0x540: V466 = NOT 0xff
0x541: V467 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V463
0x544: V468 = 0x8
0x547: V469 = GT 0x3 0x8
0x548: V470 = ISZERO 0x0
0x549: V471 = 0x54e
0x54c: JUMPI 0x54e 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x3, 0x7, V467, 0x1, 0x3]
Exit stack: [V10, 0x888, 0x3, 0x7, V467, 0x1, 0x3]

================================

Block 0x54d
[0x54d:0x54d]
---
Predecessors: [0x530]
Successors: []
---
0x54d INVALID
---
0x54d: INVALID 
---
Entry stack: [V10, 0x888, 0x3, 0x7, V467, 0x1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x3, 0x7, V467, 0x1, 0x3]

================================

Block 0x54e
[0x54e:0x557]
---
Predecessors: [0x530]
Successors: [0x883]
---
0x54e JUMPDEST
0x54f MUL
0x550 OR
0x551 SWAP1
0x552 SSTORE
0x553 POP
0x554 PUSH2 0x883
0x557 JUMP
---
0x54e: JUMPDEST 
0x54f: V472 = MUL 0x3 0x1
0x550: V473 = OR 0x3 V467
0x552: S[0x7] = V473
0x554: V474 = 0x883
0x557: JUMP 0x883
---
Entry stack: [V10, 0x888, 0x3, 0x7, V467, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x558
[0x558:0x563]
---
Predecessors: [0x529]
Successors: [0x564, 0x565]
---
0x558 JUMPDEST
0x559 PUSH1 0x3
0x55b PUSH1 0x8
0x55d DUP2
0x55e GT
0x55f ISZERO
0x560 PUSH2 0x565
0x563 JUMPI
---
0x558: JUMPDEST 
0x559: V475 = 0x3
0x55b: V476 = 0x8
0x55e: V477 = GT 0x3 0x8
0x55f: V478 = ISZERO 0x0
0x560: V479 = 0x565
0x563: JUMPI 0x565 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V10, 0x888, 0x3]

================================

Block 0x564
[0x564:0x564]
---
Predecessors: [0x558]
Successors: []
---
0x564 INVALID
---
0x564: INVALID 
---
Entry stack: [V10, 0x888, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x3]

================================

Block 0x565
[0x565:0x57e]
---
Predecessors: [0x558]
Successors: [0x57f, 0x580]
---
0x565 JUMPDEST
0x566 PUSH1 0x7
0x568 PUSH1 0x0
0x56a SWAP1
0x56b SLOAD
0x56c SWAP1
0x56d PUSH2 0x100
0x570 EXP
0x571 SWAP1
0x572 DIV
0x573 PUSH1 0xff
0x575 AND
0x576 PUSH1 0x8
0x578 DUP2
0x579 GT
0x57a ISZERO
0x57b PUSH2 0x580
0x57e JUMPI
---
0x565: JUMPDEST 
0x566: V480 = 0x7
0x568: V481 = 0x0
0x56b: V482 = S[0x7]
0x56d: V483 = 0x100
0x570: V484 = EXP 0x100 0x0
0x572: V485 = DIV V482 0x1
0x573: V486 = 0xff
0x575: V487 = AND 0xff V485
0x576: V488 = 0x8
0x579: V489 = GT V487 0x8
0x57a: V490 = ISZERO V489
0x57b: V491 = 0x580
0x57e: JUMPI 0x580 V490
---
Entry stack: [V10, 0x888, 0x3]
Stack pops: 0
Stack additions: [V487]
Exit stack: [V10, 0x888, 0x3, V487]

================================

Block 0x57f
[0x57f:0x57f]
---
Predecessors: [0x565]
Successors: []
---
0x57f INVALID
---
0x57f: INVALID 
---
Entry stack: [V10, 0x888, 0x3, V487]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x3, V487]

================================

Block 0x580
[0x580:0x586]
---
Predecessors: [0x565]
Successors: [0x587, 0x5af]
---
0x580 JUMPDEST
0x581 EQ
0x582 ISZERO
0x583 PUSH2 0x5af
0x586 JUMPI
---
0x580: JUMPDEST 
0x581: V492 = EQ V487 0x3
0x582: V493 = ISZERO V492
0x583: V494 = 0x5af
0x586: JUMPI 0x5af V493
---
Entry stack: [V10, 0x888, 0x3, V487]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x587
[0x587:0x5a3]
---
Predecessors: [0x580]
Successors: [0x5a4, 0x5a5]
---
0x587 PUSH1 0x4
0x589 PUSH1 0x7
0x58b PUSH1 0x0
0x58d PUSH2 0x100
0x590 EXP
0x591 DUP2
0x592 SLOAD
0x593 DUP2
0x594 PUSH1 0xff
0x596 MUL
0x597 NOT
0x598 AND
0x599 SWAP1
0x59a DUP4
0x59b PUSH1 0x8
0x59d DUP2
0x59e GT
0x59f ISZERO
0x5a0 PUSH2 0x5a5
0x5a3 JUMPI
---
0x587: V495 = 0x4
0x589: V496 = 0x7
0x58b: V497 = 0x0
0x58d: V498 = 0x100
0x590: V499 = EXP 0x100 0x0
0x592: V500 = S[0x7]
0x594: V501 = 0xff
0x596: V502 = MUL 0xff 0x1
0x597: V503 = NOT 0xff
0x598: V504 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V500
0x59b: V505 = 0x8
0x59e: V506 = GT 0x4 0x8
0x59f: V507 = ISZERO 0x0
0x5a0: V508 = 0x5a5
0x5a3: JUMPI 0x5a5 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x4, 0x7, V504, 0x1, 0x4]
Exit stack: [V10, 0x888, 0x4, 0x7, V504, 0x1, 0x4]

================================

Block 0x5a4
[0x5a4:0x5a4]
---
Predecessors: [0x587]
Successors: []
---
0x5a4 INVALID
---
0x5a4: INVALID 
---
Entry stack: [V10, 0x888, 0x4, 0x7, V504, 0x1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x4, 0x7, V504, 0x1, 0x4]

================================

Block 0x5a5
[0x5a5:0x5ae]
---
Predecessors: [0x587]
Successors: [0x882]
---
0x5a5 JUMPDEST
0x5a6 MUL
0x5a7 OR
0x5a8 SWAP1
0x5a9 SSTORE
0x5aa POP
0x5ab PUSH2 0x882
0x5ae JUMP
---
0x5a5: JUMPDEST 
0x5a6: V509 = MUL 0x4 0x1
0x5a7: V510 = OR 0x4 V504
0x5a9: S[0x7] = V510
0x5ab: V511 = 0x882
0x5ae: JUMP 0x882
---
Entry stack: [V10, 0x888, 0x4, 0x7, V504, 0x1, 0x4]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x5af
[0x5af:0x5ba]
---
Predecessors: [0x580]
Successors: [0x5bb, 0x5bc]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x4
0x5b2 PUSH1 0x8
0x5b4 DUP2
0x5b5 GT
0x5b6 ISZERO
0x5b7 PUSH2 0x5bc
0x5ba JUMPI
---
0x5af: JUMPDEST 
0x5b0: V512 = 0x4
0x5b2: V513 = 0x8
0x5b5: V514 = GT 0x4 0x8
0x5b6: V515 = ISZERO 0x0
0x5b7: V516 = 0x5bc
0x5ba: JUMPI 0x5bc 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x4]
Exit stack: [V10, 0x888, 0x4]

================================

Block 0x5bb
[0x5bb:0x5bb]
---
Predecessors: [0x5af]
Successors: []
---
0x5bb INVALID
---
0x5bb: INVALID 
---
Entry stack: [V10, 0x888, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x4]

================================

Block 0x5bc
[0x5bc:0x5d5]
---
Predecessors: [0x5af]
Successors: [0x5d6, 0x5d7]
---
0x5bc JUMPDEST
0x5bd PUSH1 0x7
0x5bf PUSH1 0x0
0x5c1 SWAP1
0x5c2 SLOAD
0x5c3 SWAP1
0x5c4 PUSH2 0x100
0x5c7 EXP
0x5c8 SWAP1
0x5c9 DIV
0x5ca PUSH1 0xff
0x5cc AND
0x5cd PUSH1 0x8
0x5cf DUP2
0x5d0 GT
0x5d1 ISZERO
0x5d2 PUSH2 0x5d7
0x5d5 JUMPI
---
0x5bc: JUMPDEST 
0x5bd: V517 = 0x7
0x5bf: V518 = 0x0
0x5c2: V519 = S[0x7]
0x5c4: V520 = 0x100
0x5c7: V521 = EXP 0x100 0x0
0x5c9: V522 = DIV V519 0x1
0x5ca: V523 = 0xff
0x5cc: V524 = AND 0xff V522
0x5cd: V525 = 0x8
0x5d0: V526 = GT V524 0x8
0x5d1: V527 = ISZERO V526
0x5d2: V528 = 0x5d7
0x5d5: JUMPI 0x5d7 V527
---
Entry stack: [V10, 0x888, 0x4]
Stack pops: 0
Stack additions: [V524]
Exit stack: [V10, 0x888, 0x4, V524]

================================

Block 0x5d6
[0x5d6:0x5d6]
---
Predecessors: [0x5bc]
Successors: []
---
0x5d6 INVALID
---
0x5d6: INVALID 
---
Entry stack: [V10, 0x888, 0x4, V524]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x4, V524]

================================

Block 0x5d7
[0x5d7:0x5dd]
---
Predecessors: [0x5bc]
Successors: [0x5de, 0x606]
---
0x5d7 JUMPDEST
0x5d8 EQ
0x5d9 ISZERO
0x5da PUSH2 0x606
0x5dd JUMPI
---
0x5d7: JUMPDEST 
0x5d8: V529 = EQ V524 0x4
0x5d9: V530 = ISZERO V529
0x5da: V531 = 0x606
0x5dd: JUMPI 0x606 V530
---
Entry stack: [V10, 0x888, 0x4, V524]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x5de
[0x5de:0x5fa]
---
Predecessors: [0x5d7]
Successors: [0x5fb, 0x5fc]
---
0x5de PUSH1 0x5
0x5e0 PUSH1 0x7
0x5e2 PUSH1 0x0
0x5e4 PUSH2 0x100
0x5e7 EXP
0x5e8 DUP2
0x5e9 SLOAD
0x5ea DUP2
0x5eb PUSH1 0xff
0x5ed MUL
0x5ee NOT
0x5ef AND
0x5f0 SWAP1
0x5f1 DUP4
0x5f2 PUSH1 0x8
0x5f4 DUP2
0x5f5 GT
0x5f6 ISZERO
0x5f7 PUSH2 0x5fc
0x5fa JUMPI
---
0x5de: V532 = 0x5
0x5e0: V533 = 0x7
0x5e2: V534 = 0x0
0x5e4: V535 = 0x100
0x5e7: V536 = EXP 0x100 0x0
0x5e9: V537 = S[0x7]
0x5eb: V538 = 0xff
0x5ed: V539 = MUL 0xff 0x1
0x5ee: V540 = NOT 0xff
0x5ef: V541 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V537
0x5f2: V542 = 0x8
0x5f5: V543 = GT 0x5 0x8
0x5f6: V544 = ISZERO 0x0
0x5f7: V545 = 0x5fc
0x5fa: JUMPI 0x5fc 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x5, 0x7, V541, 0x1, 0x5]
Exit stack: [V10, 0x888, 0x5, 0x7, V541, 0x1, 0x5]

================================

Block 0x5fb
[0x5fb:0x5fb]
---
Predecessors: [0x5de]
Successors: []
---
0x5fb INVALID
---
0x5fb: INVALID 
---
Entry stack: [V10, 0x888, 0x5, 0x7, V541, 0x1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x5, 0x7, V541, 0x1, 0x5]

================================

Block 0x5fc
[0x5fc:0x605]
---
Predecessors: [0x5de]
Successors: [0x881]
---
0x5fc JUMPDEST
0x5fd MUL
0x5fe OR
0x5ff SWAP1
0x600 SSTORE
0x601 POP
0x602 PUSH2 0x881
0x605 JUMP
---
0x5fc: JUMPDEST 
0x5fd: V546 = MUL 0x5 0x1
0x5fe: V547 = OR 0x5 V541
0x600: S[0x7] = V547
0x602: V548 = 0x881
0x605: JUMP 0x881
---
Entry stack: [V10, 0x888, 0x5, 0x7, V541, 0x1, 0x5]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x606
[0x606:0x611]
---
Predecessors: [0x5d7]
Successors: [0x612, 0x613]
---
0x606 JUMPDEST
0x607 PUSH1 0x5
0x609 PUSH1 0x8
0x60b DUP2
0x60c GT
0x60d ISZERO
0x60e PUSH2 0x613
0x611 JUMPI
---
0x606: JUMPDEST 
0x607: V549 = 0x5
0x609: V550 = 0x8
0x60c: V551 = GT 0x5 0x8
0x60d: V552 = ISZERO 0x0
0x60e: V553 = 0x613
0x611: JUMPI 0x613 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x5]
Exit stack: [V10, 0x888, 0x5]

================================

Block 0x612
[0x612:0x612]
---
Predecessors: [0x606]
Successors: []
---
0x612 INVALID
---
0x612: INVALID 
---
Entry stack: [V10, 0x888, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x5]

================================

Block 0x613
[0x613:0x62c]
---
Predecessors: [0x606]
Successors: [0x62d, 0x62e]
---
0x613 JUMPDEST
0x614 PUSH1 0x7
0x616 PUSH1 0x0
0x618 SWAP1
0x619 SLOAD
0x61a SWAP1
0x61b PUSH2 0x100
0x61e EXP
0x61f SWAP1
0x620 DIV
0x621 PUSH1 0xff
0x623 AND
0x624 PUSH1 0x8
0x626 DUP2
0x627 GT
0x628 ISZERO
0x629 PUSH2 0x62e
0x62c JUMPI
---
0x613: JUMPDEST 
0x614: V554 = 0x7
0x616: V555 = 0x0
0x619: V556 = S[0x7]
0x61b: V557 = 0x100
0x61e: V558 = EXP 0x100 0x0
0x620: V559 = DIV V556 0x1
0x621: V560 = 0xff
0x623: V561 = AND 0xff V559
0x624: V562 = 0x8
0x627: V563 = GT V561 0x8
0x628: V564 = ISZERO V563
0x629: V565 = 0x62e
0x62c: JUMPI 0x62e V564
---
Entry stack: [V10, 0x888, 0x5]
Stack pops: 0
Stack additions: [V561]
Exit stack: [V10, 0x888, 0x5, V561]

================================

Block 0x62d
[0x62d:0x62d]
---
Predecessors: [0x613]
Successors: []
---
0x62d INVALID
---
0x62d: INVALID 
---
Entry stack: [V10, 0x888, 0x5, V561]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x5, V561]

================================

Block 0x62e
[0x62e:0x634]
---
Predecessors: [0x613]
Successors: [0x635, 0x6ba]
---
0x62e JUMPDEST
0x62f EQ
0x630 ISZERO
0x631 PUSH2 0x6ba
0x634 JUMPI
---
0x62e: JUMPDEST 
0x62f: V566 = EQ V561 0x5
0x630: V567 = ISZERO V566
0x631: V568 = 0x6ba
0x634: JUMPI 0x6ba V567
---
Entry stack: [V10, 0x888, 0x5, V561]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x635
[0x635:0x651]
---
Predecessors: [0x62e]
Successors: [0x652, 0x653]
---
0x635 PUSH1 0x6
0x637 PUSH1 0x7
0x639 PUSH1 0x0
0x63b PUSH2 0x100
0x63e EXP
0x63f DUP2
0x640 SLOAD
0x641 DUP2
0x642 PUSH1 0xff
0x644 MUL
0x645 NOT
0x646 AND
0x647 SWAP1
0x648 DUP4
0x649 PUSH1 0x8
0x64b DUP2
0x64c GT
0x64d ISZERO
0x64e PUSH2 0x653
0x651 JUMPI
---
0x635: V569 = 0x6
0x637: V570 = 0x7
0x639: V571 = 0x0
0x63b: V572 = 0x100
0x63e: V573 = EXP 0x100 0x0
0x640: V574 = S[0x7]
0x642: V575 = 0xff
0x644: V576 = MUL 0xff 0x1
0x645: V577 = NOT 0xff
0x646: V578 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V574
0x649: V579 = 0x8
0x64c: V580 = GT 0x6 0x8
0x64d: V581 = ISZERO 0x0
0x64e: V582 = 0x653
0x651: JUMPI 0x653 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x6, 0x7, V578, 0x1, 0x6]
Exit stack: [V10, 0x888, 0x6, 0x7, V578, 0x1, 0x6]

================================

Block 0x652
[0x652:0x652]
---
Predecessors: [0x635]
Successors: []
---
0x652 INVALID
---
0x652: INVALID 
---
Entry stack: [V10, 0x888, 0x6, 0x7, V578, 0x1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x6, 0x7, V578, 0x1, 0x6]

================================

Block 0x653
[0x653:0x6b9]
---
Predecessors: [0x635]
Successors: [0x880]
---
0x653 JUMPDEST
0x654 MUL
0x655 OR
0x656 SWAP1
0x657 SSTORE
0x658 POP
0x659 PUSH1 0x1
0x65b PUSH1 0x0
0x65d SWAP1
0x65e SLOAD
0x65f SWAP1
0x660 PUSH2 0x100
0x663 EXP
0x664 SWAP1
0x665 DIV
0x666 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67b AND
0x67c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x691 AND
0x692 PUSH2 0x8fc
0x695 PUSH1 0x5
0x697 SLOAD
0x698 SWAP1
0x699 DUP2
0x69a ISZERO
0x69b MUL
0x69c SWAP1
0x69d PUSH1 0x40
0x69f MLOAD
0x6a0 DUP1
0x6a1 SWAP1
0x6a2 POP
0x6a3 PUSH1 0x0
0x6a5 PUSH1 0x40
0x6a7 MLOAD
0x6a8 DUP1
0x6a9 DUP4
0x6aa SUB
0x6ab DUP2
0x6ac DUP6
0x6ad DUP9
0x6ae DUP9
0x6af CALL
0x6b0 SWAP4
0x6b1 POP
0x6b2 POP
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 PUSH2 0x880
0x6b9 JUMP
---
0x653: JUMPDEST 
0x654: V583 = MUL 0x6 0x1
0x655: V584 = OR 0x6 V578
0x657: S[0x7] = V584
0x659: V585 = 0x1
0x65b: V586 = 0x0
0x65e: V587 = S[0x1]
0x660: V588 = 0x100
0x663: V589 = EXP 0x100 0x0
0x665: V590 = DIV V587 0x1
0x666: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0x67b: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x67c: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x691: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x692: V595 = 0x8fc
0x695: V596 = 0x5
0x697: V597 = S[0x5]
0x69a: V598 = ISZERO V597
0x69b: V599 = MUL V598 0x8fc
0x69d: V600 = 0x40
0x69f: V601 = M[0x40]
0x6a3: V602 = 0x0
0x6a5: V603 = 0x40
0x6a7: V604 = M[0x40]
0x6aa: V605 = SUB V601 V604
0x6af: V606 = CALL V599 V594 V597 V604 V605 V604 0x0
0x6b6: V607 = 0x880
0x6b9: JUMP 0x880
---
Entry stack: [V10, 0x888, 0x6, 0x7, V578, 0x1, 0x6]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x6ba
[0x6ba:0x6c5]
---
Predecessors: [0x62e]
Successors: [0x6c6, 0x6c7]
---
0x6ba JUMPDEST
0x6bb PUSH1 0x6
0x6bd PUSH1 0x8
0x6bf DUP2
0x6c0 GT
0x6c1 ISZERO
0x6c2 PUSH2 0x6c7
0x6c5 JUMPI
---
0x6ba: JUMPDEST 
0x6bb: V608 = 0x6
0x6bd: V609 = 0x8
0x6c0: V610 = GT 0x6 0x8
0x6c1: V611 = ISZERO 0x0
0x6c2: V612 = 0x6c7
0x6c5: JUMPI 0x6c7 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x6]
Exit stack: [V10, 0x888, 0x6]

================================

Block 0x6c6
[0x6c6:0x6c6]
---
Predecessors: [0x6ba]
Successors: []
---
0x6c6 INVALID
---
0x6c6: INVALID 
---
Entry stack: [V10, 0x888, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x6]

================================

Block 0x6c7
[0x6c7:0x6e0]
---
Predecessors: [0x6ba]
Successors: [0x6e1, 0x6e2]
---
0x6c7 JUMPDEST
0x6c8 PUSH1 0x7
0x6ca PUSH1 0x0
0x6cc SWAP1
0x6cd SLOAD
0x6ce SWAP1
0x6cf PUSH2 0x100
0x6d2 EXP
0x6d3 SWAP1
0x6d4 DIV
0x6d5 PUSH1 0xff
0x6d7 AND
0x6d8 PUSH1 0x8
0x6da DUP2
0x6db GT
0x6dc ISZERO
0x6dd PUSH2 0x6e2
0x6e0 JUMPI
---
0x6c7: JUMPDEST 
0x6c8: V613 = 0x7
0x6ca: V614 = 0x0
0x6cd: V615 = S[0x7]
0x6cf: V616 = 0x100
0x6d2: V617 = EXP 0x100 0x0
0x6d4: V618 = DIV V615 0x1
0x6d5: V619 = 0xff
0x6d7: V620 = AND 0xff V618
0x6d8: V621 = 0x8
0x6db: V622 = GT V620 0x8
0x6dc: V623 = ISZERO V622
0x6dd: V624 = 0x6e2
0x6e0: JUMPI 0x6e2 V623
---
Entry stack: [V10, 0x888, 0x6]
Stack pops: 0
Stack additions: [V620]
Exit stack: [V10, 0x888, 0x6, V620]

================================

Block 0x6e1
[0x6e1:0x6e1]
---
Predecessors: [0x6c7]
Successors: []
---
0x6e1 INVALID
---
0x6e1: INVALID 
---
Entry stack: [V10, 0x888, 0x6, V620]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x6, V620]

================================

Block 0x6e2
[0x6e2:0x6e8]
---
Predecessors: [0x6c7]
Successors: [0x6e9, 0x711]
---
0x6e2 JUMPDEST
0x6e3 EQ
0x6e4 ISZERO
0x6e5 PUSH2 0x711
0x6e8 JUMPI
---
0x6e2: JUMPDEST 
0x6e3: V625 = EQ V620 0x6
0x6e4: V626 = ISZERO V625
0x6e5: V627 = 0x711
0x6e8: JUMPI 0x711 V626
---
Entry stack: [V10, 0x888, 0x6, V620]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x6e9
[0x6e9:0x705]
---
Predecessors: [0x6e2]
Successors: [0x706, 0x707]
---
0x6e9 PUSH1 0x7
0x6eb PUSH1 0x7
0x6ed PUSH1 0x0
0x6ef PUSH2 0x100
0x6f2 EXP
0x6f3 DUP2
0x6f4 SLOAD
0x6f5 DUP2
0x6f6 PUSH1 0xff
0x6f8 MUL
0x6f9 NOT
0x6fa AND
0x6fb SWAP1
0x6fc DUP4
0x6fd PUSH1 0x8
0x6ff DUP2
0x700 GT
0x701 ISZERO
0x702 PUSH2 0x707
0x705 JUMPI
---
0x6e9: V628 = 0x7
0x6eb: V629 = 0x7
0x6ed: V630 = 0x0
0x6ef: V631 = 0x100
0x6f2: V632 = EXP 0x100 0x0
0x6f4: V633 = S[0x7]
0x6f6: V634 = 0xff
0x6f8: V635 = MUL 0xff 0x1
0x6f9: V636 = NOT 0xff
0x6fa: V637 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V633
0x6fd: V638 = 0x8
0x700: V639 = GT 0x7 0x8
0x701: V640 = ISZERO 0x0
0x702: V641 = 0x707
0x705: JUMPI 0x707 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x7, 0x7, V637, 0x1, 0x7]
Exit stack: [V10, 0x888, 0x7, 0x7, V637, 0x1, 0x7]

================================

Block 0x706
[0x706:0x706]
---
Predecessors: [0x6e9]
Successors: []
---
0x706 INVALID
---
0x706: INVALID 
---
Entry stack: [V10, 0x888, 0x7, 0x7, V637, 0x1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x7, 0x7, V637, 0x1, 0x7]

================================

Block 0x707
[0x707:0x710]
---
Predecessors: [0x6e9]
Successors: [0x87f]
---
0x707 JUMPDEST
0x708 MUL
0x709 OR
0x70a SWAP1
0x70b SSTORE
0x70c POP
0x70d PUSH2 0x87f
0x710 JUMP
---
0x707: JUMPDEST 
0x708: V642 = MUL 0x7 0x1
0x709: V643 = OR 0x7 V637
0x70b: S[0x7] = V643
0x70d: V644 = 0x87f
0x710: JUMP 0x87f
---
Entry stack: [V10, 0x888, 0x7, 0x7, V637, 0x1, 0x7]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x711
[0x711:0x71c]
---
Predecessors: [0x6e2]
Successors: [0x71d, 0x71e]
---
0x711 JUMPDEST
0x712 PUSH1 0x7
0x714 PUSH1 0x8
0x716 DUP2
0x717 GT
0x718 ISZERO
0x719 PUSH2 0x71e
0x71c JUMPI
---
0x711: JUMPDEST 
0x712: V645 = 0x7
0x714: V646 = 0x8
0x717: V647 = GT 0x7 0x8
0x718: V648 = ISZERO 0x0
0x719: V649 = 0x71e
0x71c: JUMPI 0x71e 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x7]
Exit stack: [V10, 0x888, 0x7]

================================

Block 0x71d
[0x71d:0x71d]
---
Predecessors: [0x711]
Successors: []
---
0x71d INVALID
---
0x71d: INVALID 
---
Entry stack: [V10, 0x888, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x7]

================================

Block 0x71e
[0x71e:0x737]
---
Predecessors: [0x711]
Successors: [0x738, 0x739]
---
0x71e JUMPDEST
0x71f PUSH1 0x7
0x721 PUSH1 0x0
0x723 SWAP1
0x724 SLOAD
0x725 SWAP1
0x726 PUSH2 0x100
0x729 EXP
0x72a SWAP1
0x72b DIV
0x72c PUSH1 0xff
0x72e AND
0x72f PUSH1 0x8
0x731 DUP2
0x732 GT
0x733 ISZERO
0x734 PUSH2 0x739
0x737 JUMPI
---
0x71e: JUMPDEST 
0x71f: V650 = 0x7
0x721: V651 = 0x0
0x724: V652 = S[0x7]
0x726: V653 = 0x100
0x729: V654 = EXP 0x100 0x0
0x72b: V655 = DIV V652 0x1
0x72c: V656 = 0xff
0x72e: V657 = AND 0xff V655
0x72f: V658 = 0x8
0x732: V659 = GT V657 0x8
0x733: V660 = ISZERO V659
0x734: V661 = 0x739
0x737: JUMPI 0x739 V660
---
Entry stack: [V10, 0x888, 0x7]
Stack pops: 0
Stack additions: [V657]
Exit stack: [V10, 0x888, 0x7, V657]

================================

Block 0x738
[0x738:0x738]
---
Predecessors: [0x71e]
Successors: []
---
0x738 INVALID
---
0x738: INVALID 
---
Entry stack: [V10, 0x888, 0x7, V657]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x7, V657]

================================

Block 0x739
[0x739:0x73f]
---
Predecessors: [0x71e]
Successors: [0x740, 0x87e]
---
0x739 JUMPDEST
0x73a EQ
0x73b ISZERO
0x73c PUSH2 0x87e
0x73f JUMPI
---
0x739: JUMPDEST 
0x73a: V662 = EQ V657 0x7
0x73b: V663 = ISZERO V662
0x73c: V664 = 0x87e
0x73f: JUMPI 0x87e V663
---
Entry stack: [V10, 0x888, 0x7, V657]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x740
[0x740:0x75c]
---
Predecessors: [0x739]
Successors: [0x75d, 0x75e]
---
0x740 PUSH1 0x8
0x742 PUSH1 0x7
0x744 PUSH1 0x0
0x746 PUSH2 0x100
0x749 EXP
0x74a DUP2
0x74b SLOAD
0x74c DUP2
0x74d PUSH1 0xff
0x74f MUL
0x750 NOT
0x751 AND
0x752 SWAP1
0x753 DUP4
0x754 PUSH1 0x8
0x756 DUP2
0x757 GT
0x758 ISZERO
0x759 PUSH2 0x75e
0x75c JUMPI
---
0x740: V665 = 0x8
0x742: V666 = 0x7
0x744: V667 = 0x0
0x746: V668 = 0x100
0x749: V669 = EXP 0x100 0x0
0x74b: V670 = S[0x7]
0x74d: V671 = 0xff
0x74f: V672 = MUL 0xff 0x1
0x750: V673 = NOT 0xff
0x751: V674 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V670
0x754: V675 = 0x8
0x757: V676 = GT 0x8 0x8
0x758: V677 = ISZERO 0x0
0x759: V678 = 0x75e
0x75c: JUMPI 0x75e 0x1
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: [0x8, 0x7, V674, 0x1, 0x8]
Exit stack: [V10, 0x888, 0x8, 0x7, V674, 0x1, 0x8]

================================

Block 0x75d
[0x75d:0x75d]
---
Predecessors: [0x740]
Successors: []
---
0x75d INVALID
---
0x75d: INVALID 
---
Entry stack: [V10, 0x888, 0x8, 0x7, V674, 0x1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888, 0x8, 0x7, V674, 0x1, 0x8]

================================

Block 0x75e
[0x75e:0x87d]
---
Predecessors: [0x740]
Successors: [0x87e]
---
0x75e JUMPDEST
0x75f MUL
0x760 OR
0x761 SWAP1
0x762 SSTORE
0x763 POP
0x764 PUSH1 0x2
0x766 PUSH1 0x0
0x768 SWAP1
0x769 SLOAD
0x76a SWAP1
0x76b PUSH2 0x100
0x76e EXP
0x76f SWAP1
0x770 DIV
0x771 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x786 AND
0x787 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79c AND
0x79d PUSH2 0x8fc
0x7a0 PUSH1 0x6
0x7a2 SLOAD
0x7a3 SWAP1
0x7a4 DUP2
0x7a5 ISZERO
0x7a6 MUL
0x7a7 SWAP1
0x7a8 PUSH1 0x40
0x7aa MLOAD
0x7ab DUP1
0x7ac SWAP1
0x7ad POP
0x7ae PUSH1 0x0
0x7b0 PUSH1 0x40
0x7b2 MLOAD
0x7b3 DUP1
0x7b4 DUP4
0x7b5 SUB
0x7b6 DUP2
0x7b7 DUP6
0x7b8 DUP9
0x7b9 DUP9
0x7ba CALL
0x7bb SWAP4
0x7bc POP
0x7bd POP
0x7be POP
0x7bf POP
0x7c0 POP
0x7c1 PUSH1 0x0
0x7c3 PUSH1 0x0
0x7c5 SWAP1
0x7c6 SLOAD
0x7c7 SWAP1
0x7c8 PUSH2 0x100
0x7cb EXP
0x7cc SWAP1
0x7cd DIV
0x7ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e3 AND
0x7e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f9 AND
0x7fa PUSH2 0x8fc
0x7fd PUSH1 0x4
0x7ff SLOAD
0x800 PUSH1 0x2
0x802 MUL
0x803 SWAP1
0x804 DUP2
0x805 ISZERO
0x806 MUL
0x807 SWAP1
0x808 PUSH1 0x40
0x80a MLOAD
0x80b DUP1
0x80c SWAP1
0x80d POP
0x80e PUSH1 0x0
0x810 PUSH1 0x40
0x812 MLOAD
0x813 DUP1
0x814 DUP4
0x815 SUB
0x816 DUP2
0x817 DUP6
0x818 DUP9
0x819 DUP9
0x81a CALL
0x81b SWAP4
0x81c POP
0x81d POP
0x81e POP
0x81f POP
0x820 POP
0x821 PUSH1 0x3
0x823 PUSH1 0x0
0x825 SWAP1
0x826 SLOAD
0x827 SWAP1
0x828 PUSH2 0x100
0x82b EXP
0x82c SWAP1
0x82d DIV
0x82e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x843 AND
0x844 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x859 AND
0x85a PUSH2 0x8fc
0x85d PUSH1 0x4
0x85f SLOAD
0x860 SWAP1
0x861 DUP2
0x862 ISZERO
0x863 MUL
0x864 SWAP1
0x865 PUSH1 0x40
0x867 MLOAD
0x868 DUP1
0x869 SWAP1
0x86a POP
0x86b PUSH1 0x0
0x86d PUSH1 0x40
0x86f MLOAD
0x870 DUP1
0x871 DUP4
0x872 SUB
0x873 DUP2
0x874 DUP6
0x875 DUP9
0x876 DUP9
0x877 CALL
0x878 SWAP4
0x879 POP
0x87a POP
0x87b POP
0x87c POP
0x87d POP
---
0x75e: JUMPDEST 
0x75f: V679 = MUL 0x8 0x1
0x760: V680 = OR 0x8 V674
0x762: S[0x7] = V680
0x764: V681 = 0x2
0x766: V682 = 0x0
0x769: V683 = S[0x2]
0x76b: V684 = 0x100
0x76e: V685 = EXP 0x100 0x0
0x770: V686 = DIV V683 0x1
0x771: V687 = 0xffffffffffffffffffffffffffffffffffffffff
0x786: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0x787: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0x79d: V691 = 0x8fc
0x7a0: V692 = 0x6
0x7a2: V693 = S[0x6]
0x7a5: V694 = ISZERO V693
0x7a6: V695 = MUL V694 0x8fc
0x7a8: V696 = 0x40
0x7aa: V697 = M[0x40]
0x7ae: V698 = 0x0
0x7b0: V699 = 0x40
0x7b2: V700 = M[0x40]
0x7b5: V701 = SUB V697 V700
0x7ba: V702 = CALL V695 V690 V693 V700 V701 V700 0x0
0x7c1: V703 = 0x0
0x7c3: V704 = 0x0
0x7c6: V705 = S[0x0]
0x7c8: V706 = 0x100
0x7cb: V707 = EXP 0x100 0x0
0x7cd: V708 = DIV V705 0x1
0x7ce: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e3: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0x7e4: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f9: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0x7fa: V713 = 0x8fc
0x7fd: V714 = 0x4
0x7ff: V715 = S[0x4]
0x800: V716 = 0x2
0x802: V717 = MUL 0x2 V715
0x805: V718 = ISZERO V717
0x806: V719 = MUL V718 0x8fc
0x808: V720 = 0x40
0x80a: V721 = M[0x40]
0x80e: V722 = 0x0
0x810: V723 = 0x40
0x812: V724 = M[0x40]
0x815: V725 = SUB V721 V724
0x81a: V726 = CALL V719 V712 V717 V724 V725 V724 0x0
0x821: V727 = 0x3
0x823: V728 = 0x0
0x826: V729 = S[0x3]
0x828: V730 = 0x100
0x82b: V731 = EXP 0x100 0x0
0x82d: V732 = DIV V729 0x1
0x82e: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0x843: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0x844: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0x859: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0x85a: V737 = 0x8fc
0x85d: V738 = 0x4
0x85f: V739 = S[0x4]
0x862: V740 = ISZERO V739
0x863: V741 = MUL V740 0x8fc
0x865: V742 = 0x40
0x867: V743 = M[0x40]
0x86b: V744 = 0x0
0x86d: V745 = 0x40
0x86f: V746 = M[0x40]
0x872: V747 = SUB V743 V746
0x877: V748 = CALL V741 V736 V739 V746 V747 V746 0x0
---
Entry stack: [V10, 0x888, 0x8, 0x7, V674, 0x1, 0x8]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x87e
[0x87e:0x87e]
---
Predecessors: [0x739, 0x75e]
Successors: [0x87f]
---
0x87e JUMPDEST
---
0x87e: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x87f
[0x87f:0x87f]
---
Predecessors: [0x707, 0x87e]
Successors: [0x880]
---
0x87f JUMPDEST
---
0x87f: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x880
[0x880:0x880]
---
Predecessors: [0x653, 0x87f]
Successors: [0x881]
---
0x880 JUMPDEST
---
0x880: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x881
[0x881:0x881]
---
Predecessors: [0x5fc, 0x880]
Successors: [0x882]
---
0x881 JUMPDEST
---
0x881: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x882
[0x882:0x882]
---
Predecessors: [0x5a5, 0x881]
Successors: [0x883]
---
0x882 JUMPDEST
---
0x882: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x883
[0x883:0x883]
---
Predecessors: [0x54e, 0x882]
Successors: [0x884]
---
0x883 JUMPDEST
---
0x883: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x884
[0x884:0x884]
---
Predecessors: [0x4f7, 0x883]
Successors: [0x885]
---
0x884 JUMPDEST
---
0x884: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x885
[0x885:0x885]
---
Predecessors: [0x4a0, 0x884]
Successors: [0x886]
---
0x885 JUMPDEST
---
0x885: JUMPDEST 
---
Entry stack: [V10, 0x888]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x888]

================================

Block 0x886
[0x886:0x887]
---
Predecessors: [0x885]
Successors: [0x888]
---
0x886 JUMPDEST
0x887 JUMP
---
0x886: JUMPDEST 
0x887: JUMP 0x888
---
Entry stack: [V10, 0x888]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x888
[0x888:0x889]
---
Predecessors: [0x886]
Successors: []
---
0x888 JUMPDEST
0x889 STOP
---
0x888: JUMPDEST 
0x889: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x88a
[0x88a:0x890]
---
Predecessors: [0xb]
Successors: [0x891, 0x892]
---
0x88a JUMPDEST
0x88b CALLVALUE
0x88c ISZERO
0x88d PUSH2 0x892
0x890 JUMPI
---
0x88a: JUMPDEST 
0x88b: V749 = CALLVALUE
0x88c: V750 = ISZERO V749
0x88d: V751 = 0x892
0x890: JUMPI 0x892 V750
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x891
[0x891:0x891]
---
Predecessors: [0x88a]
Successors: []
---
0x891 INVALID
---
0x891: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x892
[0x892:0x899]
---
Predecessors: [0x88a]
Successors: [0xad3]
---
0x892 JUMPDEST
0x893 PUSH2 0x89a
0x896 PUSH2 0xad3
0x899 JUMP
---
0x892: JUMPDEST 
0x893: V752 = 0x89a
0x896: V753 = 0xad3
0x899: JUMP 0xad3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x89a]
Exit stack: [V10, 0x89a]

================================

Block 0x89a
[0x89a:0x8db]
---
Predecessors: [0xad3]
Successors: []
---
0x89a JUMPDEST
0x89b PUSH1 0x40
0x89d MLOAD
0x89e DUP1
0x89f DUP3
0x8a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b5 AND
0x8b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cb AND
0x8cc DUP2
0x8cd MSTORE
0x8ce PUSH1 0x20
0x8d0 ADD
0x8d1 SWAP2
0x8d2 POP
0x8d3 POP
0x8d4 PUSH1 0x40
0x8d6 MLOAD
0x8d7 DUP1
0x8d8 SWAP2
0x8d9 SUB
0x8da SWAP1
0x8db RETURN
---
0x89a: JUMPDEST 
0x89b: V754 = 0x40
0x89d: V755 = M[0x40]
0x8a0: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b5: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V886
0x8b6: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cb: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0x8cd: M[V755] = V759
0x8ce: V760 = 0x20
0x8d0: V761 = ADD 0x20 V755
0x8d4: V762 = 0x40
0x8d6: V763 = M[0x40]
0x8d9: V764 = SUB V761 V763
0x8db: RETURN V763 V764
---
Entry stack: [V10, 0x89a, V886]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x89a]

================================

Block 0x8dc
[0x8dc:0x8e2]
---
Predecessors: [0x3f]
Successors: [0x8e3, 0x8e4]
---
0x8dc JUMPDEST
0x8dd CALLVALUE
0x8de ISZERO
0x8df PUSH2 0x8e4
0x8e2 JUMPI
---
0x8dc: JUMPDEST 
0x8dd: V765 = CALLVALUE
0x8de: V766 = ISZERO V765
0x8df: V767 = 0x8e4
0x8e2: JUMPI 0x8e4 V766
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8e3
[0x8e3:0x8e3]
---
Predecessors: [0x8dc]
Successors: []
---
0x8e3 INVALID
---
0x8e3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8e4
[0x8e4:0x8eb]
---
Predecessors: [0x8dc]
Successors: [0xaf9]
---
0x8e4 JUMPDEST
0x8e5 PUSH2 0x8ec
0x8e8 PUSH2 0xaf9
0x8eb JUMP
---
0x8e4: JUMPDEST 
0x8e5: V768 = 0x8ec
0x8e8: V769 = 0xaf9
0x8eb: JUMP 0xaf9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8ec]
Exit stack: [V10, 0x8ec]

================================

Block 0x8ec
[0x8ec:0x92d]
---
Predecessors: [0xaf9]
Successors: []
---
0x8ec JUMPDEST
0x8ed PUSH1 0x40
0x8ef MLOAD
0x8f0 DUP1
0x8f1 DUP3
0x8f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x907 AND
0x908 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91d AND
0x91e DUP2
0x91f MSTORE
0x920 PUSH1 0x20
0x922 ADD
0x923 SWAP2
0x924 POP
0x925 POP
0x926 PUSH1 0x40
0x928 MLOAD
0x929 DUP1
0x92a SWAP2
0x92b SUB
0x92c SWAP1
0x92d RETURN
---
0x8ec: JUMPDEST 
0x8ed: V770 = 0x40
0x8ef: V771 = M[0x40]
0x8f2: V772 = 0xffffffffffffffffffffffffffffffffffffffff
0x907: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V894
0x908: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0x91d: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0x91f: M[V771] = V775
0x920: V776 = 0x20
0x922: V777 = ADD 0x20 V771
0x926: V778 = 0x40
0x928: V779 = M[0x40]
0x92b: V780 = SUB V777 V779
0x92d: RETURN V779 V780
---
Entry stack: [V10, 0x8ec, V894]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x8ec]

================================

Block 0x92e
[0x92e:0x934]
---
Predecessors: [0x4a]
Successors: [0x935, 0x936]
---
0x92e JUMPDEST
0x92f CALLVALUE
0x930 ISZERO
0x931 PUSH2 0x936
0x934 JUMPI
---
0x92e: JUMPDEST 
0x92f: V781 = CALLVALUE
0x930: V782 = ISZERO V781
0x931: V783 = 0x936
0x934: JUMPI 0x936 V782
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x935
[0x935:0x935]
---
Predecessors: [0x92e]
Successors: []
---
0x935 INVALID
---
0x935: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x936
[0x936:0x93d]
---
Predecessors: [0x92e]
Successors: [0xb1f]
---
0x936 JUMPDEST
0x937 PUSH2 0x93e
0x93a PUSH2 0xb1f
0x93d JUMP
---
0x936: JUMPDEST 
0x937: V784 = 0x93e
0x93a: V785 = 0xb1f
0x93d: JUMP 0xb1f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x93e]
Exit stack: [V10, 0x93e]

================================

Block 0x93e
[0x93e:0x953]
---
Predecessors: [0xb1f]
Successors: []
---
0x93e JUMPDEST
0x93f PUSH1 0x40
0x941 MLOAD
0x942 DUP1
0x943 DUP3
0x944 DUP2
0x945 MSTORE
0x946 PUSH1 0x20
0x948 ADD
0x949 SWAP2
0x94a POP
0x94b POP
0x94c PUSH1 0x40
0x94e MLOAD
0x94f DUP1
0x950 SWAP2
0x951 SUB
0x952 SWAP1
0x953 RETURN
---
0x93e: JUMPDEST 
0x93f: V786 = 0x40
0x941: V787 = M[0x40]
0x945: M[V787] = V896
0x946: V788 = 0x20
0x948: V789 = ADD 0x20 V787
0x94c: V790 = 0x40
0x94e: V791 = M[0x40]
0x951: V792 = SUB V789 V791
0x953: RETURN V791 V792
---
Entry stack: [V10, 0x93e, V896]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x93e]

================================

Block 0x954
[0x954:0x95a]
---
Predecessors: [0x55]
Successors: [0x95b, 0x95c]
---
0x954 JUMPDEST
0x955 CALLVALUE
0x956 ISZERO
0x957 PUSH2 0x95c
0x95a JUMPI
---
0x954: JUMPDEST 
0x955: V793 = CALLVALUE
0x956: V794 = ISZERO V793
0x957: V795 = 0x95c
0x95a: JUMPI 0x95c V794
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x95b
[0x95b:0x95b]
---
Predecessors: [0x954]
Successors: []
---
0x95b INVALID
---
0x95b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x95c
[0x95c:0x963]
---
Predecessors: [0x954]
Successors: [0xb25]
---
0x95c JUMPDEST
0x95d PUSH2 0x964
0x960 PUSH2 0xb25
0x963 JUMP
---
0x95c: JUMPDEST 
0x95d: V796 = 0x964
0x960: V797 = 0xb25
0x963: JUMP 0xb25
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x964]
Exit stack: [V10, 0x964]

================================

Block 0x964
[0x964:0x9a5]
---
Predecessors: [0xb25]
Successors: []
---
0x964 JUMPDEST
0x965 PUSH1 0x40
0x967 MLOAD
0x968 DUP1
0x969 DUP3
0x96a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97f AND
0x980 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x995 AND
0x996 DUP2
0x997 MSTORE
0x998 PUSH1 0x20
0x99a ADD
0x99b SWAP2
0x99c POP
0x99d POP
0x99e PUSH1 0x40
0x9a0 MLOAD
0x9a1 DUP1
0x9a2 SWAP2
0x9a3 SUB
0x9a4 SWAP1
0x9a5 RETURN
---
0x964: JUMPDEST 
0x965: V798 = 0x40
0x967: V799 = M[0x40]
0x96a: V800 = 0xffffffffffffffffffffffffffffffffffffffff
0x97f: V801 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0x980: V802 = 0xffffffffffffffffffffffffffffffffffffffff
0x995: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0x997: M[V799] = V803
0x998: V804 = 0x20
0x99a: V805 = ADD 0x20 V799
0x99e: V806 = 0x40
0x9a0: V807 = M[0x40]
0x9a3: V808 = SUB V805 V807
0x9a5: RETURN V807 V808
---
Entry stack: [V10, 0x964, V904]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x964]

================================

Block 0x9a6
[0x9a6:0x9ac]
---
Predecessors: [0x60]
Successors: [0x9ad, 0x9ae]
---
0x9a6 JUMPDEST
0x9a7 CALLVALUE
0x9a8 ISZERO
0x9a9 PUSH2 0x9ae
0x9ac JUMPI
---
0x9a6: JUMPDEST 
0x9a7: V809 = CALLVALUE
0x9a8: V810 = ISZERO V809
0x9a9: V811 = 0x9ae
0x9ac: JUMPI 0x9ae V810
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9ad
[0x9ad:0x9ad]
---
Predecessors: [0x9a6]
Successors: []
---
0x9ad INVALID
---
0x9ad: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9ae
[0x9ae:0x9b5]
---
Predecessors: [0x9a6]
Successors: [0xb4b]
---
0x9ae JUMPDEST
0x9af PUSH2 0x9b6
0x9b2 PUSH2 0xb4b
0x9b5 JUMP
---
0x9ae: JUMPDEST 
0x9af: V812 = 0x9b6
0x9b2: V813 = 0xb4b
0x9b5: JUMP 0xb4b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x9b6]
Exit stack: [V10, 0x9b6]

================================

Block 0x9b6
[0x9b6:0x9f7]
---
Predecessors: [0xb4b]
Successors: []
---
0x9b6 JUMPDEST
0x9b7 PUSH1 0x40
0x9b9 MLOAD
0x9ba DUP1
0x9bb DUP3
0x9bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d1 AND
0x9d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e7 AND
0x9e8 DUP2
0x9e9 MSTORE
0x9ea PUSH1 0x20
0x9ec ADD
0x9ed SWAP2
0x9ee POP
0x9ef POP
0x9f0 PUSH1 0x40
0x9f2 MLOAD
0x9f3 DUP1
0x9f4 SWAP2
0x9f5 SUB
0x9f6 SWAP1
0x9f7 RETURN
---
0x9b6: JUMPDEST 
0x9b7: V814 = 0x40
0x9b9: V815 = M[0x40]
0x9bc: V816 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d1: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0x9d2: V818 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0x9e9: M[V815] = V819
0x9ea: V820 = 0x20
0x9ec: V821 = ADD 0x20 V815
0x9f0: V822 = 0x40
0x9f2: V823 = M[0x40]
0x9f5: V824 = SUB V821 V823
0x9f7: RETURN V823 V824
---
Entry stack: [V10, 0x9b6, V912]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x9b6]

================================

Block 0x9f8
[0x9f8:0x9fe]
---
Predecessors: [0x6b]
Successors: [0x9ff, 0xa00]
---
0x9f8 JUMPDEST
0x9f9 CALLVALUE
0x9fa ISZERO
0x9fb PUSH2 0xa00
0x9fe JUMPI
---
0x9f8: JUMPDEST 
0x9f9: V825 = CALLVALUE
0x9fa: V826 = ISZERO V825
0x9fb: V827 = 0xa00
0x9fe: JUMPI 0xa00 V826
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9ff
[0x9ff:0x9ff]
---
Predecessors: [0x9f8]
Successors: []
---
0x9ff INVALID
---
0x9ff: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa00
[0xa00:0xa84]
---
Predecessors: [0x9f8]
Successors: [0xb71]
---
0xa00 JUMPDEST
0xa01 PUSH2 0xa85
0xa04 PUSH1 0x4
0xa06 DUP1
0xa07 DUP1
0xa08 CALLDATALOAD
0xa09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1e AND
0xa1f SWAP1
0xa20 PUSH1 0x20
0xa22 ADD
0xa23 SWAP1
0xa24 SWAP2
0xa25 SWAP1
0xa26 DUP1
0xa27 CALLDATALOAD
0xa28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3d AND
0xa3e SWAP1
0xa3f PUSH1 0x20
0xa41 ADD
0xa42 SWAP1
0xa43 SWAP2
0xa44 SWAP1
0xa45 DUP1
0xa46 CALLDATALOAD
0xa47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5c AND
0xa5d SWAP1
0xa5e PUSH1 0x20
0xa60 ADD
0xa61 SWAP1
0xa62 SWAP2
0xa63 SWAP1
0xa64 DUP1
0xa65 CALLDATALOAD
0xa66 SWAP1
0xa67 PUSH1 0x20
0xa69 ADD
0xa6a SWAP1
0xa6b SWAP2
0xa6c SWAP1
0xa6d DUP1
0xa6e CALLDATALOAD
0xa6f SWAP1
0xa70 PUSH1 0x20
0xa72 ADD
0xa73 SWAP1
0xa74 SWAP2
0xa75 SWAP1
0xa76 DUP1
0xa77 CALLDATALOAD
0xa78 SWAP1
0xa79 PUSH1 0x20
0xa7b ADD
0xa7c SWAP1
0xa7d SWAP2
0xa7e SWAP1
0xa7f POP
0xa80 POP
0xa81 PUSH2 0xb71
0xa84 JUMP
---
0xa00: JUMPDEST 
0xa01: V828 = 0xa85
0xa04: V829 = 0x4
0xa08: V830 = CALLDATALOAD 0x4
0xa09: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1e: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V830
0xa20: V833 = 0x20
0xa22: V834 = ADD 0x20 0x4
0xa27: V835 = CALLDATALOAD 0x24
0xa28: V836 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff V835
0xa3f: V838 = 0x20
0xa41: V839 = ADD 0x20 0x24
0xa46: V840 = CALLDATALOAD 0x44
0xa47: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5c: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0xa5e: V843 = 0x20
0xa60: V844 = ADD 0x20 0x44
0xa65: V845 = CALLDATALOAD 0x64
0xa67: V846 = 0x20
0xa69: V847 = ADD 0x20 0x64
0xa6e: V848 = CALLDATALOAD 0x84
0xa70: V849 = 0x20
0xa72: V850 = ADD 0x20 0x84
0xa77: V851 = CALLDATALOAD 0xa4
0xa79: V852 = 0x20
0xa7b: V853 = ADD 0x20 0xa4
0xa81: V854 = 0xb71
0xa84: JUMP 0xb71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa85, V832, V837, V842, V845, V848, V851]
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]

================================

Block 0xa85
[0xa85:0xa86]
---
Predecessors: [0xcc0]
Successors: []
---
0xa85 JUMPDEST
0xa86 STOP
---
0xa85: JUMPDEST 
0xa86: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa87
[0xa87:0xa8d]
---
Predecessors: [0x76]
Successors: [0xa8e, 0xa8f]
---
0xa87 JUMPDEST
0xa88 CALLVALUE
0xa89 ISZERO
0xa8a PUSH2 0xa8f
0xa8d JUMPI
---
0xa87: JUMPDEST 
0xa88: V855 = CALLVALUE
0xa89: V856 = ISZERO V855
0xa8a: V857 = 0xa8f
0xa8d: JUMPI 0xa8f V856
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa8e
[0xa8e:0xa8e]
---
Predecessors: [0xa87]
Successors: []
---
0xa8e INVALID
---
0xa8e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa8f
[0xa8f:0xa96]
---
Predecessors: [0xa87]
Successors: [0xcc8]
---
0xa8f JUMPDEST
0xa90 PUSH2 0xa97
0xa93 PUSH2 0xcc8
0xa96 JUMP
---
0xa8f: JUMPDEST 
0xa90: V858 = 0xa97
0xa93: V859 = 0xcc8
0xa96: JUMP 0xcc8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa97]
Exit stack: [V10, 0xa97]

================================

Block 0xa97
[0xa97:0xaac]
---
Predecessors: [0xcc8]
Successors: []
---
0xa97 JUMPDEST
0xa98 PUSH1 0x40
0xa9a MLOAD
0xa9b DUP1
0xa9c DUP3
0xa9d DUP2
0xa9e MSTORE
0xa9f PUSH1 0x20
0xaa1 ADD
0xaa2 SWAP2
0xaa3 POP
0xaa4 POP
0xaa5 PUSH1 0x40
0xaa7 MLOAD
0xaa8 DUP1
0xaa9 SWAP2
0xaaa SUB
0xaab SWAP1
0xaac RETURN
---
0xa97: JUMPDEST 
0xa98: V860 = 0x40
0xa9a: V861 = M[0x40]
0xa9e: M[V861] = V993
0xa9f: V862 = 0x20
0xaa1: V863 = ADD 0x20 V861
0xaa5: V864 = 0x40
0xaa7: V865 = M[0x40]
0xaaa: V866 = SUB V863 V865
0xaac: RETURN V865 V866
---
Entry stack: [V10, 0xa97, V993]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa97]

================================

Block 0xaad
[0xaad:0xab3]
---
Predecessors: [0x81]
Successors: [0xab4, 0xab5]
---
0xaad JUMPDEST
0xaae CALLVALUE
0xaaf ISZERO
0xab0 PUSH2 0xab5
0xab3 JUMPI
---
0xaad: JUMPDEST 
0xaae: V867 = CALLVALUE
0xaaf: V868 = ISZERO V867
0xab0: V869 = 0xab5
0xab3: JUMPI 0xab5 V868
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xab4
[0xab4:0xab4]
---
Predecessors: [0xaad]
Successors: []
---
0xab4 INVALID
---
0xab4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xab5
[0xab5:0xabc]
---
Predecessors: [0xaad]
Successors: [0xcce]
---
0xab5 JUMPDEST
0xab6 PUSH2 0xabd
0xab9 PUSH2 0xcce
0xabc JUMP
---
0xab5: JUMPDEST 
0xab6: V870 = 0xabd
0xab9: V871 = 0xcce
0xabc: JUMP 0xcce
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xabd]
Exit stack: [V10, 0xabd]

================================

Block 0xabd
[0xabd:0xad2]
---
Predecessors: [0xcce]
Successors: []
---
0xabd JUMPDEST
0xabe PUSH1 0x40
0xac0 MLOAD
0xac1 DUP1
0xac2 DUP3
0xac3 DUP2
0xac4 MSTORE
0xac5 PUSH1 0x20
0xac7 ADD
0xac8 SWAP2
0xac9 POP
0xaca POP
0xacb PUSH1 0x40
0xacd MLOAD
0xace DUP1
0xacf SWAP2
0xad0 SUB
0xad1 SWAP1
0xad2 RETURN
---
0xabd: JUMPDEST 
0xabe: V872 = 0x40
0xac0: V873 = M[0x40]
0xac4: M[V873] = V995
0xac5: V874 = 0x20
0xac7: V875 = ADD 0x20 V873
0xacb: V876 = 0x40
0xacd: V877 = M[0x40]
0xad0: V878 = SUB V875 V877
0xad2: RETURN V877 V878
---
Entry stack: [V10, 0xabd, V995]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xabd]

================================

Block 0xad3
[0xad3:0xaf8]
---
Predecessors: [0x892]
Successors: [0x89a]
---
0xad3 JUMPDEST
0xad4 PUSH1 0x0
0xad6 PUSH1 0x0
0xad8 SWAP1
0xad9 SLOAD
0xada SWAP1
0xadb PUSH2 0x100
0xade EXP
0xadf SWAP1
0xae0 DIV
0xae1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf6 AND
0xaf7 DUP2
0xaf8 JUMP
---
0xad3: JUMPDEST 
0xad4: V879 = 0x0
0xad6: V880 = 0x0
0xad9: V881 = S[0x0]
0xadb: V882 = 0x100
0xade: V883 = EXP 0x100 0x0
0xae0: V884 = DIV V881 0x1
0xae1: V885 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf6: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0xaf8: JUMP 0x89a
---
Entry stack: [V10, 0x89a]
Stack pops: 1
Stack additions: [S0, V886]
Exit stack: [V10, 0x89a, V886]

================================

Block 0xaf9
[0xaf9:0xb1e]
---
Predecessors: [0x8e4]
Successors: [0x8ec]
---
0xaf9 JUMPDEST
0xafa PUSH1 0x2
0xafc PUSH1 0x0
0xafe SWAP1
0xaff SLOAD
0xb00 SWAP1
0xb01 PUSH2 0x100
0xb04 EXP
0xb05 SWAP1
0xb06 DIV
0xb07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1c AND
0xb1d DUP2
0xb1e JUMP
---
0xaf9: JUMPDEST 
0xafa: V887 = 0x2
0xafc: V888 = 0x0
0xaff: V889 = S[0x2]
0xb01: V890 = 0x100
0xb04: V891 = EXP 0x100 0x0
0xb06: V892 = DIV V889 0x1
0xb07: V893 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1c: V894 = AND 0xffffffffffffffffffffffffffffffffffffffff V892
0xb1e: JUMP 0x8ec
---
Entry stack: [V10, 0x8ec]
Stack pops: 1
Stack additions: [S0, V894]
Exit stack: [V10, 0x8ec, V894]

================================

Block 0xb1f
[0xb1f:0xb24]
---
Predecessors: [0x936]
Successors: [0x93e]
---
0xb1f JUMPDEST
0xb20 PUSH1 0x6
0xb22 SLOAD
0xb23 DUP2
0xb24 JUMP
---
0xb1f: JUMPDEST 
0xb20: V895 = 0x6
0xb22: V896 = S[0x6]
0xb24: JUMP 0x93e
---
Entry stack: [V10, 0x93e]
Stack pops: 1
Stack additions: [S0, V896]
Exit stack: [V10, 0x93e, V896]

================================

Block 0xb25
[0xb25:0xb4a]
---
Predecessors: [0x95c]
Successors: [0x964]
---
0xb25 JUMPDEST
0xb26 PUSH1 0x1
0xb28 PUSH1 0x0
0xb2a SWAP1
0xb2b SLOAD
0xb2c SWAP1
0xb2d PUSH2 0x100
0xb30 EXP
0xb31 SWAP1
0xb32 DIV
0xb33 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb48 AND
0xb49 DUP2
0xb4a JUMP
---
0xb25: JUMPDEST 
0xb26: V897 = 0x1
0xb28: V898 = 0x0
0xb2b: V899 = S[0x1]
0xb2d: V900 = 0x100
0xb30: V901 = EXP 0x100 0x0
0xb32: V902 = DIV V899 0x1
0xb33: V903 = 0xffffffffffffffffffffffffffffffffffffffff
0xb48: V904 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0xb4a: JUMP 0x964
---
Entry stack: [V10, 0x964]
Stack pops: 1
Stack additions: [S0, V904]
Exit stack: [V10, 0x964, V904]

================================

Block 0xb4b
[0xb4b:0xb70]
---
Predecessors: [0x9ae]
Successors: [0x9b6]
---
0xb4b JUMPDEST
0xb4c PUSH1 0x3
0xb4e PUSH1 0x0
0xb50 SWAP1
0xb51 SLOAD
0xb52 SWAP1
0xb53 PUSH2 0x100
0xb56 EXP
0xb57 SWAP1
0xb58 DIV
0xb59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6e AND
0xb6f DUP2
0xb70 JUMP
---
0xb4b: JUMPDEST 
0xb4c: V905 = 0x3
0xb4e: V906 = 0x0
0xb51: V907 = S[0x3]
0xb53: V908 = 0x100
0xb56: V909 = EXP 0x100 0x0
0xb58: V910 = DIV V907 0x1
0xb59: V911 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6e: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V910
0xb70: JUMP 0x9b6
---
Entry stack: [V10, 0x9b6]
Stack pops: 1
Stack additions: [S0, V912]
Exit stack: [V10, 0x9b6, V912]

================================

Block 0xb71
[0xb71:0xb7c]
---
Predecessors: [0xa00]
Successors: [0xb7d, 0xb7e]
---
0xb71 JUMPDEST
0xb72 PUSH1 0x8
0xb74 PUSH1 0x8
0xb76 DUP2
0xb77 GT
0xb78 ISZERO
0xb79 PUSH2 0xb7e
0xb7c JUMPI
---
0xb71: JUMPDEST 
0xb72: V913 = 0x8
0xb74: V914 = 0x8
0xb77: V915 = GT 0x8 0x8
0xb78: V916 = ISZERO 0x0
0xb79: V917 = 0xb7e
0xb7c: JUMPI 0xb7e 0x1
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]
Stack pops: 0
Stack additions: [0x8]
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8]

================================

Block 0xb7d
[0xb7d:0xb7d]
---
Predecessors: [0xb71]
Successors: []
---
0xb7d INVALID
---
0xb7d: INVALID 
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8]

================================

Block 0xb7e
[0xb7e:0xb97]
---
Predecessors: [0xb71]
Successors: [0xb98, 0xb99]
---
0xb7e JUMPDEST
0xb7f PUSH1 0x7
0xb81 PUSH1 0x0
0xb83 SWAP1
0xb84 SLOAD
0xb85 SWAP1
0xb86 PUSH2 0x100
0xb89 EXP
0xb8a SWAP1
0xb8b DIV
0xb8c PUSH1 0xff
0xb8e AND
0xb8f PUSH1 0x8
0xb91 DUP2
0xb92 GT
0xb93 ISZERO
0xb94 PUSH2 0xb99
0xb97 JUMPI
---
0xb7e: JUMPDEST 
0xb7f: V918 = 0x7
0xb81: V919 = 0x0
0xb84: V920 = S[0x7]
0xb86: V921 = 0x100
0xb89: V922 = EXP 0x100 0x0
0xb8b: V923 = DIV V920 0x1
0xb8c: V924 = 0xff
0xb8e: V925 = AND 0xff V923
0xb8f: V926 = 0x8
0xb92: V927 = GT V925 0x8
0xb93: V928 = ISZERO V927
0xb94: V929 = 0xb99
0xb97: JUMPI 0xb99 V928
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8]
Stack pops: 0
Stack additions: [V925]
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8, V925]

================================

Block 0xb98
[0xb98:0xb98]
---
Predecessors: [0xb7e]
Successors: []
---
0xb98 INVALID
---
0xb98: INVALID 
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8, V925]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8, V925]

================================

Block 0xb99
[0xb99:0xba0]
---
Predecessors: [0xb7e]
Successors: [0xba1, 0xba6]
---
0xb99 JUMPDEST
0xb9a EQ
0xb9b ISZERO
0xb9c ISZERO
0xb9d PUSH2 0xba6
0xba0 JUMPI
---
0xb99: JUMPDEST 
0xb9a: V930 = EQ V925 0x8
0xb9b: V931 = ISZERO V930
0xb9c: V932 = ISZERO V931
0xb9d: V933 = 0xba6
0xba0: JUMPI 0xba6 V932
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851, 0x8, V925]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]

================================

Block 0xba1
[0xba1:0xba5]
---
Predecessors: [0xb99]
Successors: []
---
0xba1 PUSH1 0x0
0xba3 PUSH1 0x0
0xba5 REVERT
---
0xba1: V934 = 0x0
0xba3: V935 = 0x0
0xba5: REVERT 0x0 0x0
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]

================================

Block 0xba6
[0xba6:0xcbf]
---
Predecessors: [0xb99]
Successors: [0xcc0]
---
0xba6 JUMPDEST
0xba7 CALLER
0xba8 PUSH1 0x3
0xbaa PUSH1 0x0
0xbac PUSH2 0x100
0xbaf EXP
0xbb0 DUP2
0xbb1 SLOAD
0xbb2 DUP2
0xbb3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc8 MUL
0xbc9 NOT
0xbca AND
0xbcb SWAP1
0xbcc DUP4
0xbcd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe2 AND
0xbe3 MUL
0xbe4 OR
0xbe5 SWAP1
0xbe6 SSTORE
0xbe7 POP
0xbe8 DUP6
0xbe9 PUSH1 0x0
0xbeb PUSH1 0x0
0xbed PUSH2 0x100
0xbf0 EXP
0xbf1 DUP2
0xbf2 SLOAD
0xbf3 DUP2
0xbf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc09 MUL
0xc0a NOT
0xc0b AND
0xc0c SWAP1
0xc0d DUP4
0xc0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc23 AND
0xc24 MUL
0xc25 OR
0xc26 SWAP1
0xc27 SSTORE
0xc28 POP
0xc29 DUP5
0xc2a PUSH1 0x1
0xc2c PUSH1 0x0
0xc2e PUSH2 0x100
0xc31 EXP
0xc32 DUP2
0xc33 SLOAD
0xc34 DUP2
0xc35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4a MUL
0xc4b NOT
0xc4c AND
0xc4d SWAP1
0xc4e DUP4
0xc4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc64 AND
0xc65 MUL
0xc66 OR
0xc67 SWAP1
0xc68 SSTORE
0xc69 POP
0xc6a DUP4
0xc6b PUSH1 0x2
0xc6d PUSH1 0x0
0xc6f PUSH2 0x100
0xc72 EXP
0xc73 DUP2
0xc74 SLOAD
0xc75 DUP2
0xc76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8b MUL
0xc8c NOT
0xc8d AND
0xc8e SWAP1
0xc8f DUP4
0xc90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca5 AND
0xca6 MUL
0xca7 OR
0xca8 SWAP1
0xca9 SSTORE
0xcaa POP
0xcab DUP3
0xcac PUSH1 0x5
0xcae DUP2
0xcaf SWAP1
0xcb0 SSTORE
0xcb1 POP
0xcb2 DUP2
0xcb3 PUSH1 0x6
0xcb5 DUP2
0xcb6 SWAP1
0xcb7 SSTORE
0xcb8 POP
0xcb9 DUP1
0xcba PUSH1 0x4
0xcbc DUP2
0xcbd SWAP1
0xcbe SSTORE
0xcbf POP
---
0xba6: JUMPDEST 
0xba7: V936 = CALLER
0xba8: V937 = 0x3
0xbaa: V938 = 0x0
0xbac: V939 = 0x100
0xbaf: V940 = EXP 0x100 0x0
0xbb1: V941 = S[0x3]
0xbb3: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc8: V943 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbc9: V944 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbca: V945 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V941
0xbcd: V946 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe2: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V936
0xbe3: V948 = MUL V947 0x1
0xbe4: V949 = OR V948 V945
0xbe6: S[0x3] = V949
0xbe9: V950 = 0x0
0xbeb: V951 = 0x0
0xbed: V952 = 0x100
0xbf0: V953 = EXP 0x100 0x0
0xbf2: V954 = S[0x0]
0xbf4: V955 = 0xffffffffffffffffffffffffffffffffffffffff
0xc09: V956 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc0a: V957 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc0b: V958 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V954
0xc0e: V959 = 0xffffffffffffffffffffffffffffffffffffffff
0xc23: V960 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xc24: V961 = MUL V960 0x1
0xc25: V962 = OR V961 V958
0xc27: S[0x0] = V962
0xc2a: V963 = 0x1
0xc2c: V964 = 0x0
0xc2e: V965 = 0x100
0xc31: V966 = EXP 0x100 0x0
0xc33: V967 = S[0x1]
0xc35: V968 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4a: V969 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc4b: V970 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc4c: V971 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V967
0xc4f: V972 = 0xffffffffffffffffffffffffffffffffffffffff
0xc64: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff V837
0xc65: V974 = MUL V973 0x1
0xc66: V975 = OR V974 V971
0xc68: S[0x1] = V975
0xc6b: V976 = 0x2
0xc6d: V977 = 0x0
0xc6f: V978 = 0x100
0xc72: V979 = EXP 0x100 0x0
0xc74: V980 = S[0x2]
0xc76: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8b: V982 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc8c: V983 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc8d: V984 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V980
0xc90: V985 = 0xffffffffffffffffffffffffffffffffffffffff
0xca5: V986 = AND 0xffffffffffffffffffffffffffffffffffffffff V842
0xca6: V987 = MUL V986 0x1
0xca7: V988 = OR V987 V984
0xca9: S[0x2] = V988
0xcac: V989 = 0x5
0xcb0: S[0x5] = V845
0xcb3: V990 = 0x6
0xcb7: S[0x6] = V848
0xcba: V991 = 0x4
0xcbe: S[0x4] = V851
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]

================================

Block 0xcc0
[0xcc0:0xcc7]
---
Predecessors: [0xba6]
Successors: [0xa85]
---
0xcc0 JUMPDEST
0xcc1 POP
0xcc2 POP
0xcc3 POP
0xcc4 POP
0xcc5 POP
0xcc6 POP
0xcc7 JUMP
---
0xcc0: JUMPDEST 
0xcc7: JUMP 0xa85
---
Entry stack: [V10, 0xa85, V832, V837, V842, V845, V848, V851]
Stack pops: 7
Stack additions: []
Exit stack: [V10]

================================

Block 0xcc8
[0xcc8:0xccd]
---
Predecessors: [0xa8f]
Successors: [0xa97]
---
0xcc8 JUMPDEST
0xcc9 PUSH1 0x5
0xccb SLOAD
0xccc DUP2
0xccd JUMP
---
0xcc8: JUMPDEST 
0xcc9: V992 = 0x5
0xccb: V993 = S[0x5]
0xccd: JUMP 0xa97
---
Entry stack: [V10, 0xa97]
Stack pops: 1
Stack additions: [S0, V993]
Exit stack: [V10, 0xa97, V993]

================================

Block 0xcce
[0xcce:0xcd3]
---
Predecessors: [0xab5]
Successors: [0xabd]
---
0xcce JUMPDEST
0xccf PUSH1 0x4
0xcd1 SLOAD
0xcd2 DUP2
0xcd3 JUMP
---
0xcce: JUMPDEST 
0xccf: V994 = 0x4
0xcd1: V995 = S[0x4]
0xcd3: JUMP 0xabd
---
Entry stack: [V10, 0xabd]
Stack pops: 1
Stack additions: [S0, V995]
Exit stack: [V10, 0xabd, V995]

================================

Block 0xcd4
[0xcd4:0xcfa]
---
Predecessors: []
Successors: [0xcfb]
Has unresolved jump.
---
0xcd4 STOP
0xcd5 LOG1
0xcd6 PUSH6 0x627a7a723058
0xcdd SHA3
0xcde DELEGATECALL
0xcdf DELEGATECALL
0xce0 MISSING 0x23
0xce1 ADDRESS
0xce2 DUP14
0xce3 MISSING 0xb2
0xce4 MISSING 0xe9
0xce5 MISSING 0xca
0xce6 MISSING 0xcb
0xce7 INVALID
0xce8 MISSING 0xd4
0xce9 MISSING 0xe8
0xcea MISSING 0x5c
0xceb JUMPDEST
0xcec DUP13
0xced MISSING 0xdc
0xcee MISSING 0xd
0xcef MISSING 0xb1
0xcf0 INVALID
0xcf1 MISSING 0xcc
0xcf2 EXTCODESIZE
0xcf3 MISSING 0x2f
0xcf4 SWAP2
0xcf5 MISSING 0xc1
0xcf6 MISSING 0xa7
0xcf7 RETURNDATASIZE
0xcf8 MISSING 0xe9
0xcf9 MISSING 0x28
0xcfa JUMPI
---
0xcd4: STOP 
0xcd5: LOG S0 S1 S2
0xcd6: V996 = 0x627a7a723058
0xcdd: V997 = SHA3 0x627a7a723058 S3
0xcde: V998 = DELEGATECALL V997 S4 S5 S6 S7 S8
0xcdf: V999 = DELEGATECALL V998 S9 S10 S11 S12 S13
0xce0: MISSING 0x23
0xce1: V1000 = ADDRESS
0xce3: MISSING 0xb2
0xce4: MISSING 0xe9
0xce5: MISSING 0xca
0xce6: MISSING 0xcb
0xce7: INVALID 
0xce8: MISSING 0xd4
0xce9: MISSING 0xe8
0xcea: MISSING 0x5c
0xceb: JUMPDEST 
0xced: MISSING 0xdc
0xcee: MISSING 0xd
0xcef: MISSING 0xb1
0xcf0: INVALID 
0xcf1: MISSING 0xcc
0xcf2: V1001 = EXTCODESIZE S0
0xcf3: MISSING 0x2f
0xcf5: MISSING 0xc1
0xcf6: MISSING 0xa7
0xcf7: V1002 = RETURNDATASIZE
0xcf8: MISSING 0xe9
0xcf9: MISSING 0x28
0xcfa: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V999, S12, V1000, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V1001, S2, S1, S0, V1002]
Exit stack: []

================================

Block 0xcfb
[0xcfb:0xcff]
---
Predecessors: [0xcd4]
Successors: []
---
0xcfb MISSING 0xed
0xcfc AND
0xcfd MULMOD
0xcfe STOP
0xcff MISSING 0x29
---
0xcfb: MISSING 0xed
0xcfc: V1003 = AND S0 S1
0xcfd: V1004 = MULMOD V1003 S2 S3
0xcfe: STOP 
0xcff: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1004]
Exit stack: []

================================

Function 0:
Public function signature: 0x8551a53
Entry block: 0x88a
Exit block: 0x89a
Body: 0x88a, 0x891, 0x892, 0x89a, 0xad3

Function 1:
Public function signature: 0xba75be9
Entry block: 0x8dc
Exit block: 0x8ec
Body: 0x8dc, 0x8e3, 0x8e4, 0x8ec, 0xaf9

Function 2:
Public function signature: 0x14c6861f
Entry block: 0x92e
Exit block: 0x93e
Body: 0x92e, 0x935, 0x936, 0x93e, 0xb1f

Function 3:
Public function signature: 0x66905b19
Entry block: 0x954
Exit block: 0x964
Body: 0x954, 0x95b, 0x95c, 0x964, 0xb25

Function 4:
Public function signature: 0x7150d8ae
Entry block: 0x9a6
Exit block: 0x9b6
Body: 0x9a6, 0x9ad, 0x9ae, 0x9b6, 0xb4b

Function 5:
Public function signature: 0x992e096f
Entry block: 0x9f8
Exit block: 0xa85
Body: 0x9f8, 0x9ff, 0xa00, 0xa85, 0xb71, 0xb7d, 0xb7e, 0xb98, 0xb99, 0xba1, 0xba6, 0xcc0

Function 6:
Public function signature: 0xa01290c1
Entry block: 0xa87
Exit block: 0xa97
Body: 0xa87, 0xa8e, 0xa8f, 0xa97, 0xcc8

Function 7:
Public function signature: 0xdefd6c5f
Entry block: 0xaad
Exit block: 0xabd
Body: 0xaad, 0xab4, 0xab5, 0xabd, 0xcce

Function 8:
Public fallback function
Entry block: 0x8c
Exit block: 0x75d
Body: 0x8c, 0x90, 0x9c, 0x9d, 0xb7, 0xb8, 0xbf, 0xc4, 0x11c, 0x128, 0x129, 0x143, 0x144, 0x147, 0x14e, 0x15a, 0x15b, 0x175, 0x176, 0x179, 0x17f, 0x184, 0x1dc, 0x1e8, 0x1e9, 0x203, 0x204, 0x207, 0x20e, 0x21a, 0x21b, 0x235, 0x236, 0x239, 0x23f, 0x244, 0x29c, 0x2a8, 0x2a9, 0x2c3, 0x2c4, 0x2c7, 0x2ce, 0x2da, 0x2db, 0x2f5, 0x2f6, 0x2f9, 0x2ff, 0x304, 0x35c, 0x368, 0x369, 0x383, 0x384, 0x387, 0x38e, 0x39a, 0x39b, 0x3b5, 0x3b6, 0x3b9, 0x3bf, 0x3c4, 0x3d0, 0x3d1, 0x3eb, 0x3ec, 0x3f4, 0x406, 0x40c, 0x411, 0x41d, 0x41e, 0x438, 0x439, 0x441, 0x448, 0x44e, 0x453, 0x45f, 0x460, 0x47a, 0x47b, 0x482, 0x49f, 0x4a0, 0x4aa, 0x4b6, 0x4b7, 0x4d1, 0x4d2, 0x4d9, 0x4f6, 0x4f7, 0x501, 0x50d, 0x50e, 0x528, 0x529, 0x530, 0x54d, 0x54e, 0x558, 0x564, 0x565, 0x57f, 0x580, 0x587, 0x5a4, 0x5a5, 0x5af, 0x5bb, 0x5bc, 0x5d6, 0x5d7, 0x5de, 0x5fb, 0x5fc, 0x606, 0x612, 0x613, 0x62d, 0x62e, 0x635, 0x652, 0x653, 0x6ba, 0x6c6, 0x6c7, 0x6e1, 0x6e2, 0x6e9, 0x706, 0x707, 0x711, 0x71d, 0x71e, 0x738, 0x739, 0x740, 0x75d, 0x75e, 0x87e, 0x87f, 0x880, 0x881, 0x882, 0x883, 0x884, 0x885, 0x886, 0x888

