Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x39]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0xe8b1d0f3
0x2e EQ
0x2f PUSH2 0x39
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0xe8b1d0f3
0x2e: V7 = EQ 0xe8b1d0f3 V5
0x2f: V8 = 0x39
0x32: JUMPI 0x39 V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x36]
---
Predecessors: [0x0]
Successors: [0x37]
---
0x33 PUSH2 0x37
0x36 JUMP
---
0x33: V9 = 0x37
0x36: JUMP 0x37
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x37
[0x37:0x38]
---
Predecessors: [0x33]
Successors: []
---
0x37 JUMPDEST
0x38 STOP
---
0x37: JUMPDEST 
0x38: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x39
[0x39:0x94]
---
Predecessors: [0x0]
Successors: [0xab]
---
0x39 JUMPDEST
0x3a PUSH2 0x95
0x3d PUSH1 0x4
0x3f DUP1
0x40 CALLDATALOAD
0x41 SWAP1
0x42 PUSH1 0x20
0x44 ADD
0x45 DUP1
0x46 CALLDATALOAD
0x47 SWAP1
0x48 PUSH1 0x20
0x4a ADD
0x4b DUP1
0x4c CALLDATALOAD
0x4d SWAP1
0x4e PUSH1 0x20
0x50 ADD
0x51 SWAP1
0x52 PUSH1 0x4
0x54 ADD
0x55 DUP1
0x56 CALLDATALOAD
0x57 SWAP1
0x58 PUSH1 0x20
0x5a ADD
0x5b SWAP2
0x5c SWAP2
0x5d SWAP1
0x5e DUP1
0x5f DUP1
0x60 PUSH1 0x1f
0x62 ADD
0x63 PUSH1 0x20
0x65 DUP1
0x66 SWAP2
0x67 DIV
0x68 MUL
0x69 PUSH1 0x20
0x6b ADD
0x6c PUSH1 0x40
0x6e MLOAD
0x6f SWAP1
0x70 DUP2
0x71 ADD
0x72 PUSH1 0x40
0x74 MSTORE
0x75 DUP1
0x76 SWAP4
0x77 SWAP3
0x78 SWAP2
0x79 SWAP1
0x7a DUP2
0x7b DUP2
0x7c MSTORE
0x7d PUSH1 0x20
0x7f ADD
0x80 DUP4
0x81 DUP4
0x82 DUP1
0x83 DUP3
0x84 DUP5
0x85 CALLDATACOPY
0x86 DUP3
0x87 ADD
0x88 SWAP2
0x89 POP
0x8a POP
0x8b POP
0x8c POP
0x8d POP
0x8e POP
0x8f SWAP1
0x90 POP
0x91 PUSH2 0xab
0x94 JUMP
---
0x39: JUMPDEST 
0x3a: V10 = 0x95
0x3d: V11 = 0x4
0x40: V12 = CALLDATALOAD 0x4
0x42: V13 = 0x20
0x44: V14 = ADD 0x20 0x4
0x46: V15 = CALLDATALOAD 0x24
0x48: V16 = 0x20
0x4a: V17 = ADD 0x20 0x24
0x4c: V18 = CALLDATALOAD 0x44
0x4e: V19 = 0x20
0x50: V20 = ADD 0x20 0x44
0x52: V21 = 0x4
0x54: V22 = ADD 0x4 V18
0x56: V23 = CALLDATALOAD V22
0x58: V24 = 0x20
0x5a: V25 = ADD 0x20 V22
0x60: V26 = 0x1f
0x62: V27 = ADD 0x1f V23
0x63: V28 = 0x20
0x67: V29 = DIV V27 0x20
0x68: V30 = MUL V29 0x20
0x69: V31 = 0x20
0x6b: V32 = ADD 0x20 V30
0x6c: V33 = 0x40
0x6e: V34 = M[0x40]
0x71: V35 = ADD V34 V32
0x72: V36 = 0x40
0x74: M[0x40] = V35
0x7c: M[V34] = V23
0x7d: V37 = 0x20
0x7f: V38 = ADD 0x20 V34
0x85: CALLDATACOPY V38 V25 V23
0x87: V39 = ADD V38 V23
0x91: V40 = 0xab
0x94: JUMP 0xab
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x95, V12, V15, V34]
Exit stack: [V5, 0x95, V12, V15, V34]

================================

Block 0x95
[0x95:0xaa]
---
Predecessors: [0x1d9]
Successors: []
---
0x95 JUMPDEST
0x96 PUSH1 0x40
0x98 MLOAD
0x99 DUP1
0x9a DUP3
0x9b DUP2
0x9c MSTORE
0x9d PUSH1 0x20
0x9f ADD
0xa0 SWAP2
0xa1 POP
0xa2 POP
0xa3 PUSH1 0x40
0xa5 MLOAD
0xa6 DUP1
0xa7 SWAP2
0xa8 SUB
0xa9 SWAP1
0xaa RETURN
---
0x95: JUMPDEST 
0x96: V41 = 0x40
0x98: V42 = M[0x40]
0x9c: M[V42] = V117
0x9d: V43 = 0x20
0x9f: V44 = ADD 0x20 V42
0xa3: V45 = 0x40
0xa5: V46 = M[0x40]
0xa8: V47 = SUB V44 V46
0xaa: RETURN V46 V47
---
Entry stack: [V5, V117]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0xab
[0xab:0x104]
---
Predecessors: [0x39]
Successors: [0x105, 0x10d]
---
0xab JUMPDEST
0xac PUSH1 0x0
0xae PUSH1 0x0
0xb0 PUSH1 0x0
0xb2 SWAP1
0xb3 SLOAD
0xb4 SWAP1
0xb5 PUSH2 0x100
0xb8 EXP
0xb9 SWAP1
0xba DIV
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 AND
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 CALLER
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe EQ
0xff ISZERO
0x100 ISZERO
0x101 PUSH2 0x10d
0x104 JUMPI
---
0xab: JUMPDEST 
0xac: V48 = 0x0
0xae: V49 = 0x0
0xb0: V50 = 0x0
0xb3: V51 = S[0x0]
0xb5: V52 = 0x100
0xb8: V53 = EXP 0x100 0x0
0xba: V54 = DIV V51 0x1
0xbb: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xd1: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xe7: V59 = CALLER
0xe8: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0xfe: V62 = EQ V61 V58
0xff: V63 = ISZERO V62
0x100: V64 = ISZERO V63
0x101: V65 = 0x10d
0x104: JUMPI 0x10d V64
---
Entry stack: [V5, 0x95, V12, V15, V34]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V5, 0x95, V12, V15, V34, 0x0]

================================

Block 0x105
[0x105:0x10b]
---
Predecessors: [0xab]
Successors: [0x1e0]
---
0x105 PUSH2 0x10c
0x108 PUSH2 0x1e0
0x10b JUMP
---
0x105: V66 = 0x10c
0x108: V67 = 0x1e0
0x10b: JUMP 0x1e0
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V5, 0x95, V12, V15, V34, 0x0, 0x10c]

================================

Block 0x10c
[0x10c:0x10c]
---
Predecessors: [0x1ff]
Successors: [0x10d]
---
0x10c JUMPDEST
---
0x10c: JUMPDEST 
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x95, V12, V15, V34, 0x0]

================================

Block 0x10d
[0x10d:0x19e]
---
Predecessors: [0xab, 0x10c]
Successors: [0x19f, 0x1b8]
---
0x10d JUMPDEST
0x10e DUP4
0x10f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x124 AND
0x125 DUP4
0x126 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x144 SWAP1
0x145 DIV
0x146 DUP4
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP3
0x14b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x169 MUL
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x4
0x16e ADD
0x16f DUP1
0x170 DUP3
0x171 DUP1
0x172 MLOAD
0x173 SWAP1
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP1
0x178 DUP1
0x179 DUP4
0x17a DUP4
0x17b DUP3
0x17c SWAP1
0x17d PUSH1 0x0
0x17f PUSH1 0x4
0x181 PUSH1 0x20
0x183 DUP5
0x184 PUSH1 0x1f
0x186 ADD
0x187 DIV
0x188 PUSH1 0x3
0x18a MUL
0x18b PUSH1 0xf
0x18d ADD
0x18e CALL
0x18f POP
0x190 SWAP1
0x191 POP
0x192 SWAP1
0x193 DUP2
0x194 ADD
0x195 SWAP1
0x196 PUSH1 0x1f
0x198 AND
0x199 DUP1
0x19a ISZERO
0x19b PUSH2 0x1b8
0x19e JUMPI
---
0x10d: JUMPDEST 
0x10f: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V12
0x126: V70 = 0x100000000000000000000000000000000000000000000000000000000
0x145: V71 = DIV V15 0x100000000000000000000000000000000000000000000000000000000
0x147: V72 = 0x40
0x149: V73 = M[0x40]
0x14b: V74 = 0x100000000000000000000000000000000000000000000000000000000
0x169: V75 = MUL 0x100000000000000000000000000000000000000000000000000000000 V71
0x16b: M[V73] = V75
0x16c: V76 = 0x4
0x16e: V77 = ADD 0x4 V73
0x172: V78 = M[V34]
0x174: V79 = 0x20
0x176: V80 = ADD 0x20 V34
0x17d: V81 = 0x0
0x17f: V82 = 0x4
0x181: V83 = 0x20
0x184: V84 = 0x1f
0x186: V85 = ADD 0x1f V78
0x187: V86 = DIV V85 0x20
0x188: V87 = 0x3
0x18a: V88 = MUL 0x3 V86
0x18b: V89 = 0xf
0x18d: V90 = ADD 0xf V88
0x18e: V91 = CALL V90 0x4 0x0 V80 V78 V77 V78
0x194: V92 = ADD V78 V77
0x196: V93 = 0x1f
0x198: V94 = AND 0x1f V78
0x19a: V95 = ISZERO V94
0x19b: V96 = 0x1b8
0x19e: JUMPI 0x1b8 V95
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V69, V71, S1, V77, V92, V94]
Exit stack: [V5, 0x95, V12, V15, V34, 0x0, V69, V71, V34, V77, V92, V94]

================================

Block 0x19f
[0x19f:0x1b7]
---
Predecessors: [0x10d]
Successors: [0x1b8]
---
0x19f DUP1
0x1a0 DUP3
0x1a1 SUB
0x1a2 DUP1
0x1a3 MLOAD
0x1a4 PUSH1 0x1
0x1a6 DUP4
0x1a7 PUSH1 0x20
0x1a9 SUB
0x1aa PUSH2 0x100
0x1ad EXP
0x1ae SUB
0x1af NOT
0x1b0 AND
0x1b1 DUP2
0x1b2 MSTORE
0x1b3 PUSH1 0x20
0x1b5 ADD
0x1b6 SWAP2
0x1b7 POP
---
0x1a1: V97 = SUB V92 V94
0x1a3: V98 = M[V97]
0x1a4: V99 = 0x1
0x1a7: V100 = 0x20
0x1a9: V101 = SUB 0x20 V94
0x1aa: V102 = 0x100
0x1ad: V103 = EXP 0x100 V101
0x1ae: V104 = SUB V103 0x1
0x1af: V105 = NOT V104
0x1b0: V106 = AND V105 V98
0x1b2: M[V97] = V106
0x1b3: V107 = 0x20
0x1b5: V108 = ADD 0x20 V97
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0, V69, V71, V34, V77, V92, V94]
Stack pops: 2
Stack additions: [V108, S0]
Exit stack: [V5, 0x95, V12, V15, V34, 0x0, V69, V71, V34, V77, V108, V94]

================================

Block 0x1b8
[0x1b8:0x1d8]
---
Predecessors: [0x10d, 0x19f]
Successors: [0x1d9]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba SWAP2
0x1bb POP
0x1bc POP
0x1bd PUSH1 0x0
0x1bf PUSH1 0x40
0x1c1 MLOAD
0x1c2 DUP1
0x1c3 DUP4
0x1c4 SUB
0x1c5 DUP2
0x1c6 PUSH1 0x0
0x1c8 DUP8
0x1c9 PUSH2 0x61da
0x1cc GAS
0x1cd SUB
0x1ce CALL
0x1cf SWAP3
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 SWAP1
0x1d4 POP
0x1d5 PUSH2 0x1d9
0x1d8 JUMP
---
0x1b8: JUMPDEST 
0x1bd: V109 = 0x0
0x1bf: V110 = 0x40
0x1c1: V111 = M[0x40]
0x1c4: V112 = SUB S1 V111
0x1c6: V113 = 0x0
0x1c9: V114 = 0x61da
0x1cc: V115 = GAS
0x1cd: V116 = SUB V115 0x61da
0x1ce: V117 = CALL V116 V69 0x0 V111 V112 V111 0x0
0x1d5: V118 = 0x1d9
0x1d8: JUMP 0x1d9
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0, V69, V71, V34, V77, S1, V94]
Stack pops: 7
Stack additions: [V117]
Exit stack: [V5, 0x95, V12, V15, V34, V117]

================================

Block 0x1d9
[0x1d9:0x1df]
---
Predecessors: [0x1b8]
Successors: [0x95]
---
0x1d9 JUMPDEST
0x1da SWAP4
0x1db SWAP3
0x1dc POP
0x1dd POP
0x1de POP
0x1df JUMP
---
0x1d9: JUMPDEST 
0x1df: JUMP 0x95
---
Entry stack: [V5, 0x95, V12, V15, V34, V117]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V5, V117]

================================

Block 0x1e0
[0x1e0:0x1ee]
---
Predecessors: [0x105]
Successors: [0x1ef]
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 PUSH1 0x1
0x1e6 DUP2
0x1e7 SLOAD
0x1e8 DUP2
0x1e9 LT
0x1ea ISZERO
0x1eb PUSH2 0x2
0x1ee JUMPI
---
0x1e0: JUMPDEST 
0x1e1: V119 = 0x0
0x1e4: V120 = 0x1
0x1e7: V121 = S[0x0]
0x1e9: V122 = LT 0x1 V121
0x1ea: V123 = ISZERO V122
0x1eb: V124 = 0x2
0x1ee: THROWI V123
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0, 0x10c]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1]
Exit stack: [V5, 0x95, V12, V15, V34, 0x0, 0x10c, 0x0, 0x0, 0x1]

================================

Block 0x1ef
[0x1ef:0x1fe]
---
Predecessors: [0x1e0]
Successors: [0x1ff]
---
0x1ef SWAP1
0x1f0 PUSH1 0x0
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 PUSH1 0x0
0x1f7 SHA3
0x1f8 SWAP1
0x1f9 ADD
0x1fa PUSH1 0x0
0x1fc POP
0x1fd SLOAD
0x1fe POP
---
0x1f0: V125 = 0x0
0x1f2: M[0x0] = 0x0
0x1f3: V126 = 0x20
0x1f5: V127 = 0x0
0x1f7: V128 = SHA3 0x0 0x20
0x1f9: V129 = ADD 0x1 V128
0x1fa: V130 = 0x0
0x1fd: V131 = S[V129]
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0, 0x10c, 0x0, 0x0, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V5, 0x95, V12, V15, V34, 0x0, 0x10c, 0x0]

================================

Block 0x1ff
[0x1ff:0x201]
---
Predecessors: [0x1ef]
Successors: [0x10c]
---
0x1ff JUMPDEST
0x200 POP
0x201 JUMP
---
0x1ff: JUMPDEST 
0x201: JUMP 0x10c
---
Entry stack: [V5, 0x95, V12, V15, V34, 0x0, 0x10c, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V5, 0x95, V12, V15, V34, 0x0]

================================

Function 0:
Public function signature: 0xe8b1d0f3
Entry block: 0x39
Exit block: 0x95
Body: 0x39, 0x95, 0xab, 0x105, 0x10c, 0x10d, 0x19f, 0x1b8, 0x1d9, 0x1e0, 0x1ef, 0x1ff

Function 1:
Public fallback function
Entry block: 0x33
Exit block: 0x37
Body: 0x33, 0x37

