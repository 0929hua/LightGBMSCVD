Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x71]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x71
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x71
0xc: JUMPI 0x71 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x39]
---
Predecessors: [0x0]
Successors: [0x3a, 0x80]
---
0xd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b PUSH1 0x0
0x2d CALLDATALOAD
0x2e DIV
0x2f PUSH4 0x205c2878
0x34 DUP2
0x35 EQ
0x36 PUSH2 0x80
0x39 JUMPI
---
0xd: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2b: V7 = 0x0
0x2d: V8 = CALLDATALOAD 0x0
0x2e: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0x205c2878
0x35: V11 = EQ V9 0x205c2878
0x36: V12 = 0x80
0x39: JUMPI 0x80 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0xd]
Successors: [0x45, 0xcb]
---
0x3a DUP1
0x3b PUSH4 0x2e1a7d4d
0x40 EQ
0x41 PUSH2 0xcb
0x44 JUMPI
---
0x3b: V13 = 0x2e1a7d4d
0x40: V14 = EQ 0x2e1a7d4d V9
0x41: V15 = 0xcb
0x44: JUMPI 0xcb V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0xf5]
---
0x45 DUP1
0x46 PUSH4 0x70a08231
0x4b EQ
0x4c PUSH2 0xf5
0x4f JUMPI
---
0x46: V16 = 0x70a08231
0x4b: V17 = EQ 0x70a08231 V9
0x4c: V18 = 0xf5
0x4f: JUMPI 0xf5 V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0x128]
---
0x50 DUP1
0x51 PUSH4 0x95d89b41
0x56 EQ
0x57 PUSH2 0x128
0x5a JUMPI
---
0x51: V19 = 0x95d89b41
0x56: V20 = EQ 0x95d89b41 V9
0x57: V21 = 0x128
0x5a: JUMPI 0x128 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5b
[0x5b:0x65]
---
Predecessors: [0x50]
Successors: [0x66, 0x1b2]
---
0x5b DUP1
0x5c PUSH4 0xb760faf9
0x61 EQ
0x62 PUSH2 0x1b2
0x65 JUMPI
---
0x5c: V22 = 0xb760faf9
0x61: V23 = EQ 0xb760faf9 V9
0x62: V24 = 0x1b2
0x65: JUMPI 0x1b2 V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x66
[0x66:0x70]
---
Predecessors: [0x5b]
Successors: [0x71, 0x1ec]
---
0x66 DUP1
0x67 PUSH4 0xd0e30db0
0x6c EQ
0x6d PUSH2 0x1ec
0x70 JUMPI
---
0x67: V25 = 0xd0e30db0
0x6c: V26 = EQ 0xd0e30db0 V9
0x6d: V27 = 0x1ec
0x70: JUMPI 0x1ec V26
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x71
[0x71:0x78]
---
Predecessors: [0x0, 0x66]
Successors: [0x79, 0x7d]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 DUP1
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x74: V29 = ISZERO V28
0x75: V30 = 0x7d
0x78: JUMPI 0x7d V29
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V9, V28]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x71]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V31 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V9, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V28]

================================

Block 0x7d
[0x7d:0x7f]
---
Predecessors: [0x71]
Successors: []
---
0x7d JUMPDEST
0x7e POP
0x7f STOP
---
0x7d: JUMPDEST 
0x7f: STOP 
---
Entry stack: [V9, V28]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x80
[0x80:0x87]
---
Predecessors: [0xd]
Successors: [0x88, 0x8c]
---
0x80 JUMPDEST
0x81 CALLVALUE
0x82 DUP1
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x80: JUMPDEST 
0x81: V32 = CALLVALUE
0x83: V33 = ISZERO V32
0x84: V34 = 0x8c
0x87: JUMPI 0x8c V33
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V32]
Exit stack: [V9, V32]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x80]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V35 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V9, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V32]

================================

Block 0x8c
[0x8c:0x9e]
---
Predecessors: [0x80]
Successors: [0x9f, 0xa3]
---
0x8c JUMPDEST
0x8d POP
0x8e PUSH2 0xb9
0x91 PUSH1 0x4
0x93 DUP1
0x94 CALLDATASIZE
0x95 SUB
0x96 PUSH1 0x40
0x98 DUP2
0x99 LT
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x8c: JUMPDEST 
0x8e: V36 = 0xb9
0x91: V37 = 0x4
0x94: V38 = CALLDATASIZE
0x95: V39 = SUB V38 0x4
0x96: V40 = 0x40
0x99: V41 = LT V39 0x40
0x9a: V42 = ISZERO V41
0x9b: V43 = 0xa3
0x9e: JUMPI 0xa3 V42
---
Entry stack: [V9, V32]
Stack pops: 1
Stack additions: [0xb9, 0x4, V39]
Exit stack: [V9, 0xb9, 0x4, V39]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x8c]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V44 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V9, 0xb9, 0x4, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xb9, 0x4, V39]

================================

Block 0xa3
[0xa3:0xb8]
---
Predecessors: [0x8c]
Successors: [0x1f4]
---
0xa3 JUMPDEST
0xa4 POP
0xa5 PUSH1 0x1
0xa7 PUSH1 0xa0
0xa9 PUSH1 0x2
0xab EXP
0xac SUB
0xad DUP2
0xae CALLDATALOAD
0xaf AND
0xb0 SWAP1
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 CALLDATALOAD
0xb5 PUSH2 0x1f4
0xb8 JUMP
---
0xa3: JUMPDEST 
0xa5: V45 = 0x1
0xa7: V46 = 0xa0
0xa9: V47 = 0x2
0xab: V48 = EXP 0x2 0xa0
0xac: V49 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae: V50 = CALLDATALOAD 0x4
0xaf: V51 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V52 = 0x20
0xb3: V53 = ADD 0x20 0x4
0xb4: V54 = CALLDATALOAD 0x24
0xb5: V55 = 0x1f4
0xb8: JUMP 0x1f4
---
Entry stack: [V9, 0xb9, 0x4, V39]
Stack pops: 2
Stack additions: [V51, V54]
Exit stack: [V9, 0xb9, V51, V54]

================================

Block 0xb9
[0xb9:0xca]
---
Predecessors: [0x200, 0x213, 0x219]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x40
0xbc DUP1
0xbd MLOAD
0xbe SWAP2
0xbf DUP3
0xc0 MSTORE
0xc1 MLOAD
0xc2 SWAP1
0xc3 DUP2
0xc4 SWAP1
0xc5 SUB
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 SWAP1
0xca RETURN
---
0xb9: JUMPDEST 
0xba: V56 = 0x40
0xbd: V57 = M[0x40]
0xc0: M[V57] = S0
0xc1: V58 = M[0x40]
0xc5: V59 = SUB V57 V58
0xc6: V60 = 0x20
0xc8: V61 = ADD 0x20 V59
0xca: RETURN V58 V61
---
Entry stack: [V9, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S3, S2, S1]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0x3a]
Successors: [0xd3, 0xd7]
---
0xcb JUMPDEST
0xcc CALLVALUE
0xcd DUP1
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcb: JUMPDEST 
0xcc: V62 = CALLVALUE
0xce: V63 = ISZERO V62
0xcf: V64 = 0xd7
0xd2: JUMPI 0xd7 V63
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V9, V62]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcb]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V65 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V9, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V62]

================================

Block 0xd7
[0xd7:0xe9]
---
Predecessors: [0xcb]
Successors: [0xea, 0xee]
---
0xd7 JUMPDEST
0xd8 POP
0xd9 PUSH2 0xb9
0xdc PUSH1 0x4
0xde DUP1
0xdf CALLDATASIZE
0xe0 SUB
0xe1 PUSH1 0x20
0xe3 DUP2
0xe4 LT
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xd7: JUMPDEST 
0xd9: V66 = 0xb9
0xdc: V67 = 0x4
0xdf: V68 = CALLDATASIZE
0xe0: V69 = SUB V68 0x4
0xe1: V70 = 0x20
0xe4: V71 = LT V69 0x20
0xe5: V72 = ISZERO V71
0xe6: V73 = 0xee
0xe9: JUMPI 0xee V72
---
Entry stack: [V9, V62]
Stack pops: 1
Stack additions: [0xb9, 0x4, V69]
Exit stack: [V9, 0xb9, 0x4, V69]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xd7]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V74 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V9, 0xb9, 0x4, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xb9, 0x4, V69]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0xd7]
Successors: [0x207]
---
0xee JUMPDEST
0xef POP
0xf0 CALLDATALOAD
0xf1 PUSH2 0x207
0xf4 JUMP
---
0xee: JUMPDEST 
0xf0: V75 = CALLDATALOAD 0x4
0xf1: V76 = 0x207
0xf4: JUMP 0x207
---
Entry stack: [V9, 0xb9, 0x4, V69]
Stack pops: 2
Stack additions: [V75]
Exit stack: [V9, 0xb9, V75]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0x45]
Successors: [0xfd, 0x101]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf5: JUMPDEST 
0xf6: V77 = CALLVALUE
0xf8: V78 = ISZERO V77
0xf9: V79 = 0x101
0xfc: JUMPI 0x101 V78
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V9, V77]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf5]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V80 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V9, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V77]

================================

Block 0x101
[0x101:0x113]
---
Predecessors: [0xf5]
Successors: [0x114, 0x118]
---
0x101 JUMPDEST
0x102 POP
0x103 PUSH2 0xb9
0x106 PUSH1 0x4
0x108 DUP1
0x109 CALLDATASIZE
0x10a SUB
0x10b PUSH1 0x20
0x10d DUP2
0x10e LT
0x10f ISZERO
0x110 PUSH2 0x118
0x113 JUMPI
---
0x101: JUMPDEST 
0x103: V81 = 0xb9
0x106: V82 = 0x4
0x109: V83 = CALLDATASIZE
0x10a: V84 = SUB V83 0x4
0x10b: V85 = 0x20
0x10e: V86 = LT V84 0x20
0x10f: V87 = ISZERO V86
0x110: V88 = 0x118
0x113: JUMPI 0x118 V87
---
Entry stack: [V9, V77]
Stack pops: 1
Stack additions: [0xb9, 0x4, V84]
Exit stack: [V9, 0xb9, 0x4, V84]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0x101]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V89 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V9, 0xb9, 0x4, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xb9, 0x4, V84]

================================

Block 0x118
[0x118:0x127]
---
Predecessors: [0x101]
Successors: [0x219]
---
0x118 JUMPDEST
0x119 POP
0x11a CALLDATALOAD
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 AND
0x124 PUSH2 0x219
0x127 JUMP
---
0x118: JUMPDEST 
0x11a: V90 = CALLDATALOAD 0x4
0x11b: V91 = 0x1
0x11d: V92 = 0xa0
0x11f: V93 = 0x2
0x121: V94 = EXP 0x2 0xa0
0x122: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x123: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x124: V97 = 0x219
0x127: JUMP 0x219
---
Entry stack: [V9, 0xb9, 0x4, V84]
Stack pops: 2
Stack additions: [V96]
Exit stack: [V9, 0xb9, V96]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x50]
Successors: [0x130, 0x134]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a DUP1
0x12b ISZERO
0x12c PUSH2 0x134
0x12f JUMPI
---
0x128: JUMPDEST 
0x129: V98 = CALLVALUE
0x12b: V99 = ISZERO V98
0x12c: V100 = 0x134
0x12f: JUMPI 0x134 V99
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V98]
Exit stack: [V9, V98]

================================

Block 0x130
[0x130:0x133]
---
Predecessors: [0x128]
Successors: []
---
0x130 PUSH1 0x0
0x132 DUP1
0x133 REVERT
---
0x130: V101 = 0x0
0x133: REVERT 0x0 0x0
---
Entry stack: [V9, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V98]

================================

Block 0x134
[0x134:0x13c]
---
Predecessors: [0x128]
Successors: [0x234]
---
0x134 JUMPDEST
0x135 POP
0x136 PUSH2 0x13d
0x139 PUSH2 0x234
0x13c JUMP
---
0x134: JUMPDEST 
0x136: V102 = 0x13d
0x139: V103 = 0x234
0x13c: JUMP 0x234
---
Entry stack: [V9, V98]
Stack pops: 1
Stack additions: [0x13d]
Exit stack: [V9, 0x13d]

================================

Block 0x13d
[0x13d:0x15e]
---
Predecessors: [0x2b9]
Successors: [0x15f]
---
0x13d JUMPDEST
0x13e PUSH1 0x40
0x140 DUP1
0x141 MLOAD
0x142 PUSH1 0x20
0x144 DUP1
0x145 DUP3
0x146 MSTORE
0x147 DUP4
0x148 MLOAD
0x149 DUP2
0x14a DUP4
0x14b ADD
0x14c MSTORE
0x14d DUP4
0x14e MLOAD
0x14f SWAP2
0x150 SWAP3
0x151 DUP4
0x152 SWAP3
0x153 SWAP1
0x154 DUP4
0x155 ADD
0x156 SWAP2
0x157 DUP6
0x158 ADD
0x159 SWAP1
0x15a DUP1
0x15b DUP4
0x15c DUP4
0x15d PUSH1 0x0
---
0x13d: JUMPDEST 
0x13e: V104 = 0x40
0x141: V105 = M[0x40]
0x142: V106 = 0x20
0x146: M[V105] = 0x20
0x148: V107 = M[V191]
0x14b: V108 = ADD V105 0x20
0x14c: M[V108] = V107
0x14e: V109 = M[V191]
0x155: V110 = ADD V105 0x40
0x158: V111 = ADD V191 0x20
0x15d: V112 = 0x0
---
Entry stack: [V9, 0x13d, V191]
Stack pops: 1
Stack additions: [S0, V105, V105, V110, V111, V109, V109, V110, V111, 0x0]
Exit stack: [V9, 0x13d, V191, V105, V105, V110, V111, V109, V109, V110, V111, 0x0]

================================

Block 0x15f
[0x15f:0x167]
---
Predecessors: [0x13d, 0x168]
Successors: [0x168, 0x177]
---
0x15f JUMPDEST
0x160 DUP4
0x161 DUP2
0x162 LT
0x163 ISZERO
0x164 PUSH2 0x177
0x167 JUMPI
---
0x15f: JUMPDEST 
0x162: V113 = LT S0 V109
0x163: V114 = ISZERO V113
0x164: V115 = 0x177
0x167: JUMPI 0x177 V114
---
Entry stack: [V9, 0x13d, V191, V105, V105, V110, V111, V109, V109, V110, V111, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, 0x13d, V191, V105, V105, V110, V111, V109, V109, V110, V111, S0]

================================

Block 0x168
[0x168:0x176]
---
Predecessors: [0x15f]
Successors: [0x15f]
---
0x168 DUP2
0x169 DUP2
0x16a ADD
0x16b MLOAD
0x16c DUP4
0x16d DUP3
0x16e ADD
0x16f MSTORE
0x170 PUSH1 0x20
0x172 ADD
0x173 PUSH2 0x15f
0x176 JUMP
---
0x16a: V116 = ADD S0 V111
0x16b: V117 = M[V116]
0x16e: V118 = ADD S0 V110
0x16f: M[V118] = V117
0x170: V119 = 0x20
0x172: V120 = ADD 0x20 S0
0x173: V121 = 0x15f
0x176: JUMP 0x15f
---
Entry stack: [V9, 0x13d, V191, V105, V105, V110, V111, V109, V109, V110, V111, S0]
Stack pops: 3
Stack additions: [S2, S1, V120]
Exit stack: [V9, 0x13d, V191, V105, V105, V110, V111, V109, V109, V110, V111, V120]

================================

Block 0x177
[0x177:0x18a]
---
Predecessors: [0x15f]
Successors: [0x18b, 0x1a4]
---
0x177 JUMPDEST
0x178 POP
0x179 POP
0x17a POP
0x17b POP
0x17c SWAP1
0x17d POP
0x17e SWAP1
0x17f DUP2
0x180 ADD
0x181 SWAP1
0x182 PUSH1 0x1f
0x184 AND
0x185 DUP1
0x186 ISZERO
0x187 PUSH2 0x1a4
0x18a JUMPI
---
0x177: JUMPDEST 
0x180: V122 = ADD V109 V110
0x182: V123 = 0x1f
0x184: V124 = AND 0x1f V109
0x186: V125 = ISZERO V124
0x187: V126 = 0x1a4
0x18a: JUMPI 0x1a4 V125
---
Entry stack: [V9, 0x13d, V191, V105, V105, V110, V111, V109, V109, V110, V111, S0]
Stack pops: 7
Stack additions: [V122, V124]
Exit stack: [V9, 0x13d, V191, V105, V105, V122, V124]

================================

Block 0x18b
[0x18b:0x1a3]
---
Predecessors: [0x177]
Successors: [0x1a4]
---
0x18b DUP1
0x18c DUP3
0x18d SUB
0x18e DUP1
0x18f MLOAD
0x190 PUSH1 0x1
0x192 DUP4
0x193 PUSH1 0x20
0x195 SUB
0x196 PUSH2 0x100
0x199 EXP
0x19a SUB
0x19b NOT
0x19c AND
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 SWAP2
0x1a3 POP
---
0x18d: V127 = SUB V122 V124
0x18f: V128 = M[V127]
0x190: V129 = 0x1
0x193: V130 = 0x20
0x195: V131 = SUB 0x20 V124
0x196: V132 = 0x100
0x199: V133 = EXP 0x100 V131
0x19a: V134 = SUB V133 0x1
0x19b: V135 = NOT V134
0x19c: V136 = AND V135 V128
0x19e: M[V127] = V136
0x19f: V137 = 0x20
0x1a1: V138 = ADD 0x20 V127
---
Entry stack: [V9, 0x13d, V191, V105, V105, V122, V124]
Stack pops: 2
Stack additions: [V138, S0]
Exit stack: [V9, 0x13d, V191, V105, V105, V138, V124]

================================

Block 0x1a4
[0x1a4:0x1b1]
---
Predecessors: [0x177, 0x18b]
Successors: []
---
0x1a4 JUMPDEST
0x1a5 POP
0x1a6 SWAP3
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad DUP1
0x1ae SWAP2
0x1af SUB
0x1b0 SWAP1
0x1b1 RETURN
---
0x1a4: JUMPDEST 
0x1aa: V139 = 0x40
0x1ac: V140 = M[0x40]
0x1af: V141 = SUB S1 V140
0x1b1: RETURN V140 V141
---
Entry stack: [V9, 0x13d, V191, V105, V105, S1, V124]
Stack pops: 5
Stack additions: []
Exit stack: [V9, 0x13d]

================================

Block 0x1b2
[0x1b2:0x1c3]
---
Predecessors: [0x5b]
Successors: [0x1c4, 0x1c8]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x1d8
0x1b6 PUSH1 0x4
0x1b8 DUP1
0x1b9 CALLDATASIZE
0x1ba SUB
0x1bb PUSH1 0x20
0x1bd DUP2
0x1be LT
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V142 = 0x1d8
0x1b6: V143 = 0x4
0x1b9: V144 = CALLDATASIZE
0x1ba: V145 = SUB V144 0x4
0x1bb: V146 = 0x20
0x1be: V147 = LT V145 0x20
0x1bf: V148 = ISZERO V147
0x1c0: V149 = 0x1c8
0x1c3: JUMPI 0x1c8 V148
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x1d8, 0x4, V145]
Exit stack: [V9, 0x1d8, 0x4, V145]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1b2]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V150 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1d8, 0x4, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1d8, 0x4, V145]

================================

Block 0x1c8
[0x1c8:0x1d7]
---
Predecessors: [0x1b2]
Successors: [0x2c1]
---
0x1c8 JUMPDEST
0x1c9 POP
0x1ca CALLDATALOAD
0x1cb PUSH1 0x1
0x1cd PUSH1 0xa0
0x1cf PUSH1 0x2
0x1d1 EXP
0x1d2 SUB
0x1d3 AND
0x1d4 PUSH2 0x2c1
0x1d7 JUMP
---
0x1c8: JUMPDEST 
0x1ca: V151 = CALLDATALOAD 0x4
0x1cb: V152 = 0x1
0x1cd: V153 = 0xa0
0x1cf: V154 = 0x2
0x1d1: V155 = EXP 0x2 0xa0
0x1d2: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d3: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x1d4: V158 = 0x2c1
0x1d7: JUMP 0x2c1
---
Entry stack: [V9, 0x1d8, 0x4, V145]
Stack pops: 2
Stack additions: [V157]
Exit stack: [V9, 0x1d8, V157]

================================

Block 0x1d8
[0x1d8:0x1eb]
---
Predecessors: [0x316, 0x364]
Successors: []
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x40
0x1db DUP1
0x1dc MLOAD
0x1dd SWAP2
0x1de ISZERO
0x1df ISZERO
0x1e0 DUP3
0x1e1 MSTORE
0x1e2 MLOAD
0x1e3 SWAP1
0x1e4 DUP2
0x1e5 SWAP1
0x1e6 SUB
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea SWAP1
0x1eb RETURN
---
0x1d8: JUMPDEST 
0x1d9: V159 = 0x40
0x1dc: V160 = M[0x40]
0x1de: V161 = ISZERO 0x1
0x1df: V162 = ISZERO 0x0
0x1e1: M[V160] = 0x1
0x1e2: V163 = M[0x40]
0x1e6: V164 = SUB V160 V163
0x1e7: V165 = 0x20
0x1e9: V166 = ADD 0x20 V164
0x1eb: RETURN V163 V166
---
Entry stack: [V9, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S1]

================================

Block 0x1ec
[0x1ec:0x1f3]
---
Predecessors: [0x66]
Successors: [0x321]
---
0x1ec JUMPDEST
0x1ed PUSH2 0x1d8
0x1f0 PUSH2 0x321
0x1f3 JUMP
---
0x1ec: JUMPDEST 
0x1ed: V167 = 0x1d8
0x1f0: V168 = 0x321
0x1f3: JUMP 0x321
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x1d8]
Exit stack: [V9, 0x1d8]

================================

Block 0x1f4
[0x1f4:0x1ff]
---
Predecessors: [0xa3]
Successors: [0x36d]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x0
0x1f7 PUSH2 0x200
0x1fa DUP4
0x1fb DUP4
0x1fc PUSH2 0x36d
0x1ff JUMP
---
0x1f4: JUMPDEST 
0x1f5: V169 = 0x0
0x1f7: V170 = 0x200
0x1fc: V171 = 0x36d
0x1ff: JUMP 0x36d
---
Entry stack: [V9, 0xb9, V51, V54]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x200, S1, S0]
Exit stack: [V9, 0xb9, V51, V54, 0x0, 0x200, V51, V54]

================================

Block 0x200
[0x200:0x206]
---
Predecessors: [0x4df, 0x4e6]
Successors: [0xb9, 0x2ea, 0x316, 0x341, 0x364]
---
0x200 JUMPDEST
0x201 SWAP4
0x202 SWAP3
0x203 POP
0x204 POP
0x205 POP
0x206 JUMP
---
0x200: JUMPDEST 
0x206: JUMP S4
---
Entry stack: [V9, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V9, S7, S6, S5, S0]

================================

Block 0x207
[0x207:0x212]
---
Predecessors: [0xee]
Successors: [0x36d]
---
0x207 JUMPDEST
0x208 PUSH1 0x0
0x20a PUSH2 0x213
0x20d CALLER
0x20e DUP4
0x20f PUSH2 0x36d
0x212 JUMP
---
0x207: JUMPDEST 
0x208: V172 = 0x0
0x20a: V173 = 0x213
0x20d: V174 = CALLER
0x20f: V175 = 0x36d
0x212: JUMP 0x36d
---
Entry stack: [V9, 0xb9, V75]
Stack pops: 1
Stack additions: [S0, 0x0, 0x213, V174, S0]
Exit stack: [V9, 0xb9, V75, 0x0, 0x213, V174, V75]

================================

Block 0x213
[0x213:0x218]
---
Predecessors: [0x4df]
Successors: [0xb9]
---
0x213 JUMPDEST
0x214 SWAP3
0x215 SWAP2
0x216 POP
0x217 POP
0x218 JUMP
---
0x213: JUMPDEST 
0x218: JUMP S3
---
Entry stack: [V9, S4, S3, S2, 0x0, {0x0, 0x135, 0x136, 0x137}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V9, S4, {0x0, 0x135, 0x136, 0x137}]

================================

Block 0x219
[0x219:0x233]
---
Predecessors: [0x118]
Successors: [0xb9]
---
0x219 JUMPDEST
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 AND
0x223 PUSH1 0x0
0x225 SWAP1
0x226 DUP2
0x227 MSTORE
0x228 PUSH1 0x2
0x22a PUSH1 0x20
0x22c MSTORE
0x22d PUSH1 0x40
0x22f SWAP1
0x230 SHA3
0x231 SLOAD
0x232 SWAP1
0x233 JUMP
---
0x219: JUMPDEST 
0x21a: V176 = 0x1
0x21c: V177 = 0xa0
0x21e: V178 = 0x2
0x220: V179 = EXP 0x2 0xa0
0x221: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x223: V182 = 0x0
0x227: M[0x0] = V181
0x228: V183 = 0x2
0x22a: V184 = 0x20
0x22c: M[0x20] = 0x2
0x22d: V185 = 0x40
0x230: V186 = SHA3 0x0 0x40
0x231: V187 = S[V186]
0x233: JUMP 0xb9
---
Entry stack: [V9, 0xb9, V96]
Stack pops: 2
Stack additions: [V187]
Exit stack: [V9, V187]

================================

Block 0x234
[0x234:0x272]
---
Predecessors: [0x134]
Successors: [0x273, 0x2b9]
---
0x234 JUMPDEST
0x235 PUSH1 0x1
0x237 DUP1
0x238 SLOAD
0x239 PUSH1 0x40
0x23b DUP1
0x23c MLOAD
0x23d PUSH1 0x20
0x23f PUSH1 0x2
0x241 DUP5
0x242 DUP7
0x243 AND
0x244 ISZERO
0x245 PUSH2 0x100
0x248 MUL
0x249 PUSH1 0x0
0x24b NOT
0x24c ADD
0x24d SWAP1
0x24e SWAP5
0x24f AND
0x250 SWAP4
0x251 SWAP1
0x252 SWAP4
0x253 DIV
0x254 PUSH1 0x1f
0x256 DUP2
0x257 ADD
0x258 DUP5
0x259 SWAP1
0x25a DIV
0x25b DUP5
0x25c MUL
0x25d DUP3
0x25e ADD
0x25f DUP5
0x260 ADD
0x261 SWAP1
0x262 SWAP3
0x263 MSTORE
0x264 DUP2
0x265 DUP2
0x266 MSTORE
0x267 SWAP3
0x268 SWAP2
0x269 DUP4
0x26a ADD
0x26b DUP3
0x26c DUP3
0x26d DUP1
0x26e ISZERO
0x26f PUSH2 0x2b9
0x272 JUMPI
---
0x234: JUMPDEST 
0x235: V188 = 0x1
0x238: V189 = S[0x1]
0x239: V190 = 0x40
0x23c: V191 = M[0x40]
0x23d: V192 = 0x20
0x23f: V193 = 0x2
0x243: V194 = AND 0x1 V189
0x244: V195 = ISZERO V194
0x245: V196 = 0x100
0x248: V197 = MUL 0x100 V195
0x249: V198 = 0x0
0x24b: V199 = NOT 0x0
0x24c: V200 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V197
0x24f: V201 = AND V189 V200
0x253: V202 = DIV V201 0x2
0x254: V203 = 0x1f
0x257: V204 = ADD V202 0x1f
0x25a: V205 = DIV V204 0x20
0x25c: V206 = MUL 0x20 V205
0x25e: V207 = ADD V191 V206
0x260: V208 = ADD 0x20 V207
0x263: M[0x40] = V208
0x266: M[V191] = V202
0x26a: V209 = ADD V191 0x20
0x26e: V210 = ISZERO V202
0x26f: V211 = 0x2b9
0x272: JUMPI 0x2b9 V210
---
Entry stack: [V9, 0x13d]
Stack pops: 0
Stack additions: [V191, 0x1, V202, V209, 0x1, V202]
Exit stack: [V9, 0x13d, V191, 0x1, V202, V209, 0x1, V202]

================================

Block 0x273
[0x273:0x27a]
---
Predecessors: [0x234]
Successors: [0x27b, 0x28e]
---
0x273 DUP1
0x274 PUSH1 0x1f
0x276 LT
0x277 PUSH2 0x28e
0x27a JUMPI
---
0x274: V212 = 0x1f
0x276: V213 = LT 0x1f V202
0x277: V214 = 0x28e
0x27a: JUMPI 0x28e V213
---
Entry stack: [V9, 0x13d, V191, 0x1, V202, V209, 0x1, V202]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x13d, V191, 0x1, V202, V209, 0x1, V202]

================================

Block 0x27b
[0x27b:0x28d]
---
Predecessors: [0x273]
Successors: [0x2b9]
---
0x27b PUSH2 0x100
0x27e DUP1
0x27f DUP4
0x280 SLOAD
0x281 DIV
0x282 MUL
0x283 DUP4
0x284 MSTORE
0x285 SWAP2
0x286 PUSH1 0x20
0x288 ADD
0x289 SWAP2
0x28a PUSH2 0x2b9
0x28d JUMP
---
0x27b: V215 = 0x100
0x280: V216 = S[0x1]
0x281: V217 = DIV V216 0x100
0x282: V218 = MUL V217 0x100
0x284: M[V209] = V218
0x286: V219 = 0x20
0x288: V220 = ADD 0x20 V209
0x28a: V221 = 0x2b9
0x28d: JUMP 0x2b9
---
Entry stack: [V9, 0x13d, V191, 0x1, V202, V209, 0x1, V202]
Stack pops: 3
Stack additions: [V220, S1, S0]
Exit stack: [V9, 0x13d, V191, 0x1, V202, V220, 0x1, V202]

================================

Block 0x28e
[0x28e:0x29b]
---
Predecessors: [0x273]
Successors: [0x29c]
---
0x28e JUMPDEST
0x28f DUP3
0x290 ADD
0x291 SWAP2
0x292 SWAP1
0x293 PUSH1 0x0
0x295 MSTORE
0x296 PUSH1 0x20
0x298 PUSH1 0x0
0x29a SHA3
0x29b SWAP1
---
0x28e: JUMPDEST 
0x290: V222 = ADD V209 V202
0x293: V223 = 0x0
0x295: M[0x0] = 0x1
0x296: V224 = 0x20
0x298: V225 = 0x0
0x29a: V226 = SHA3 0x0 0x20
---
Entry stack: [V9, 0x13d, V191, 0x1, V202, V209, 0x1, V202]
Stack pops: 3
Stack additions: [V222, V226, S2]
Exit stack: [V9, 0x13d, V191, 0x1, V202, V222, V226, V209]

================================

Block 0x29c
[0x29c:0x2af]
---
Predecessors: [0x28e, 0x29c]
Successors: [0x29c, 0x2b0]
---
0x29c JUMPDEST
0x29d DUP2
0x29e SLOAD
0x29f DUP2
0x2a0 MSTORE
0x2a1 SWAP1
0x2a2 PUSH1 0x1
0x2a4 ADD
0x2a5 SWAP1
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 DUP1
0x2aa DUP4
0x2ab GT
0x2ac PUSH2 0x29c
0x2af JUMPI
---
0x29c: JUMPDEST 
0x29e: V227 = S[S1]
0x2a0: M[S0] = V227
0x2a2: V228 = 0x1
0x2a4: V229 = ADD 0x1 S1
0x2a6: V230 = 0x20
0x2a8: V231 = ADD 0x20 S0
0x2ab: V232 = GT V222 V231
0x2ac: V233 = 0x29c
0x2af: JUMPI 0x29c V232
---
Entry stack: [V9, 0x13d, V191, 0x1, V202, V222, S1, S0]
Stack pops: 3
Stack additions: [S2, V229, V231]
Exit stack: [V9, 0x13d, V191, 0x1, V202, V222, V229, V231]

================================

Block 0x2b0
[0x2b0:0x2b8]
---
Predecessors: [0x29c]
Successors: [0x2b9]
---
0x2b0 DUP3
0x2b1 SWAP1
0x2b2 SUB
0x2b3 PUSH1 0x1f
0x2b5 AND
0x2b6 DUP3
0x2b7 ADD
0x2b8 SWAP2
---
0x2b2: V234 = SUB V231 V222
0x2b3: V235 = 0x1f
0x2b5: V236 = AND 0x1f V234
0x2b7: V237 = ADD V222 V236
---
Entry stack: [V9, 0x13d, V191, 0x1, V202, V222, V229, V231]
Stack pops: 3
Stack additions: [V237, S1, S2]
Exit stack: [V9, 0x13d, V191, 0x1, V202, V237, V229, V222]

================================

Block 0x2b9
[0x2b9:0x2c0]
---
Predecessors: [0x234, 0x27b, 0x2b0]
Successors: [0x13d]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd POP
0x2be POP
0x2bf DUP2
0x2c0 JUMP
---
0x2b9: JUMPDEST 
0x2c0: JUMP 0x13d
---
Entry stack: [V9, 0x13d, V191, 0x1, V202, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V9, 0x13d, V191]

================================

Block 0x2c1
[0x2c1:0x2e9]
---
Predecessors: [0x1c8]
Successors: [0x4e6]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0xa0
0x2c6 PUSH1 0x2
0x2c8 EXP
0x2c9 SUB
0x2ca DUP2
0x2cb AND
0x2cc PUSH1 0x0
0x2ce SWAP1
0x2cf DUP2
0x2d0 MSTORE
0x2d1 PUSH1 0x2
0x2d3 PUSH1 0x20
0x2d5 MSTORE
0x2d6 PUSH1 0x40
0x2d8 DUP2
0x2d9 SHA3
0x2da SLOAD
0x2db PUSH2 0x2ea
0x2de SWAP1
0x2df CALLVALUE
0x2e0 PUSH4 0xffffffff
0x2e5 PUSH2 0x4e6
0x2e8 AND
0x2e9 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V238 = 0x1
0x2c4: V239 = 0xa0
0x2c6: V240 = 0x2
0x2c8: V241 = EXP 0x2 0xa0
0x2c9: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cb: V243 = AND V157 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V244 = 0x0
0x2d0: M[0x0] = V243
0x2d1: V245 = 0x2
0x2d3: V246 = 0x20
0x2d5: M[0x20] = 0x2
0x2d6: V247 = 0x40
0x2d9: V248 = SHA3 0x0 0x40
0x2da: V249 = S[V248]
0x2db: V250 = 0x2ea
0x2df: V251 = CALLVALUE
0x2e0: V252 = 0xffffffff
0x2e5: V253 = 0x4e6
0x2e8: V254 = AND 0x4e6 0xffffffff
0x2e9: JUMP 0x4e6
---
Entry stack: [V9, 0x1d8, V157]
Stack pops: 1
Stack additions: [S0, 0x0, 0x2ea, V249, V251]
Exit stack: [V9, 0x1d8, V157, 0x0, 0x2ea, V249, V251]

================================

Block 0x2ea
[0x2ea:0x315]
---
Predecessors: [0x200]
Successors: [0x4e6]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x1
0x2ed PUSH1 0xa0
0x2ef PUSH1 0x2
0x2f1 EXP
0x2f2 SUB
0x2f3 DUP4
0x2f4 AND
0x2f5 PUSH1 0x0
0x2f7 SWAP1
0x2f8 DUP2
0x2f9 MSTORE
0x2fa PUSH1 0x2
0x2fc PUSH1 0x20
0x2fe MSTORE
0x2ff PUSH1 0x40
0x301 SWAP1
0x302 SHA3
0x303 SSTORE
0x304 PUSH1 0x3
0x306 SLOAD
0x307 PUSH2 0x316
0x30a SWAP1
0x30b CALLVALUE
0x30c PUSH4 0xffffffff
0x311 PUSH2 0x4e6
0x314 AND
0x315 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V255 = 0x1
0x2ed: V256 = 0xa0
0x2ef: V257 = 0x2
0x2f1: V258 = EXP 0x2 0xa0
0x2f2: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V260 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V261 = 0x0
0x2f9: M[0x0] = V260
0x2fa: V262 = 0x2
0x2fc: V263 = 0x20
0x2fe: M[0x20] = 0x2
0x2ff: V264 = 0x40
0x302: V265 = SHA3 0x0 0x40
0x303: S[V265] = S0
0x304: V266 = 0x3
0x306: V267 = S[0x3]
0x307: V268 = 0x316
0x30b: V269 = CALLVALUE
0x30c: V270 = 0xffffffff
0x311: V271 = 0x4e6
0x314: V272 = AND 0x4e6 0xffffffff
0x315: JUMP 0x4e6
---
Entry stack: [V9, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x316, V267, V269]
Exit stack: [V9, S3, S2, S1, 0x316, V267, V269]

================================

Block 0x316
[0x316:0x320]
---
Predecessors: [0x200]
Successors: [0x1d8]
---
0x316 JUMPDEST
0x317 PUSH1 0x3
0x319 SSTORE
0x31a POP
0x31b PUSH1 0x1
0x31d SWAP2
0x31e SWAP1
0x31f POP
0x320 JUMP
---
0x316: JUMPDEST 
0x317: V273 = 0x3
0x319: S[0x3] = S0
0x31b: V274 = 0x1
0x320: JUMP S3
---
Entry stack: [V9, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V9, 0x1]

================================

Block 0x321
[0x321:0x340]
---
Predecessors: [0x1ec]
Successors: [0x4e6]
---
0x321 JUMPDEST
0x322 CALLER
0x323 PUSH1 0x0
0x325 SWAP1
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x2
0x32a PUSH1 0x20
0x32c MSTORE
0x32d PUSH1 0x40
0x32f DUP2
0x330 SHA3
0x331 SLOAD
0x332 PUSH2 0x341
0x335 SWAP1
0x336 CALLVALUE
0x337 PUSH4 0xffffffff
0x33c PUSH2 0x4e6
0x33f AND
0x340 JUMP
---
0x321: JUMPDEST 
0x322: V275 = CALLER
0x323: V276 = 0x0
0x327: M[0x0] = V275
0x328: V277 = 0x2
0x32a: V278 = 0x20
0x32c: M[0x20] = 0x2
0x32d: V279 = 0x40
0x330: V280 = SHA3 0x0 0x40
0x331: V281 = S[V280]
0x332: V282 = 0x341
0x336: V283 = CALLVALUE
0x337: V284 = 0xffffffff
0x33c: V285 = 0x4e6
0x33f: V286 = AND 0x4e6 0xffffffff
0x340: JUMP 0x4e6
---
Entry stack: [V9, 0x1d8]
Stack pops: 0
Stack additions: [0x0, 0x341, V281, V283]
Exit stack: [V9, 0x1d8, 0x0, 0x341, V281, V283]

================================

Block 0x341
[0x341:0x363]
---
Predecessors: [0x200]
Successors: [0x4e6]
---
0x341 JUMPDEST
0x342 CALLER
0x343 PUSH1 0x0
0x345 SWAP1
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x2
0x34a PUSH1 0x20
0x34c MSTORE
0x34d PUSH1 0x40
0x34f SWAP1
0x350 SHA3
0x351 SSTORE
0x352 PUSH1 0x3
0x354 SLOAD
0x355 PUSH2 0x364
0x358 SWAP1
0x359 CALLVALUE
0x35a PUSH4 0xffffffff
0x35f PUSH2 0x4e6
0x362 AND
0x363 JUMP
---
0x341: JUMPDEST 
0x342: V287 = CALLER
0x343: V288 = 0x0
0x347: M[0x0] = V287
0x348: V289 = 0x2
0x34a: V290 = 0x20
0x34c: M[0x20] = 0x2
0x34d: V291 = 0x40
0x350: V292 = SHA3 0x0 0x40
0x351: S[V292] = S0
0x352: V293 = 0x3
0x354: V294 = S[0x3]
0x355: V295 = 0x364
0x359: V296 = CALLVALUE
0x35a: V297 = 0xffffffff
0x35f: V298 = 0x4e6
0x362: V299 = AND 0x4e6 0xffffffff
0x363: JUMP 0x4e6
---
Entry stack: [V9, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x364, V294, V296]
Exit stack: [V9, S3, S2, S1, 0x364, V294, V296]

================================

Block 0x364
[0x364:0x36c]
---
Predecessors: [0x200]
Successors: [0x1d8]
---
0x364 JUMPDEST
0x365 PUSH1 0x3
0x367 SSTORE
0x368 POP
0x369 PUSH1 0x1
0x36b SWAP1
0x36c JUMP
---
0x364: JUMPDEST 
0x365: V300 = 0x3
0x367: S[0x3] = S0
0x369: V301 = 0x1
0x36c: JUMP S2
---
Entry stack: [V9, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V9, S3, 0x1]

================================

Block 0x36d
[0x36d:0x387]
---
Predecessors: [0x1f4, 0x207]
Successors: [0x388, 0x391]
---
0x36d JUMPDEST
0x36e PUSH1 0x0
0x370 DUP1
0x371 SLOAD
0x372 PUSH1 0x1
0x374 ADD
0x375 DUP1
0x376 DUP3
0x377 SSTORE
0x378 PUSH1 0x1
0x37a PUSH1 0xa0
0x37c PUSH1 0x2
0x37e EXP
0x37f SUB
0x380 DUP5
0x381 AND
0x382 ISZERO
0x383 ISZERO
0x384 PUSH2 0x391
0x387 JUMPI
---
0x36d: JUMPDEST 
0x36e: V302 = 0x0
0x371: V303 = S[0x0]
0x372: V304 = 0x1
0x374: V305 = ADD 0x1 V303
0x377: S[0x0] = V305
0x378: V306 = 0x1
0x37a: V307 = 0xa0
0x37c: V308 = 0x2
0x37e: V309 = EXP 0x2 0xa0
0x37f: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x381: V311 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x382: V312 = ISZERO V311
0x383: V313 = ISZERO V312
0x384: V314 = 0x391
0x387: JUMPI 0x391 V313
---
Entry stack: [V9, S6, S5, S4, 0x0, {0x200, 0x213}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V305]
Exit stack: [V9, S6, S5, S4, 0x0, {0x200, 0x213}, S1, S0, 0x0, V305]

================================

Block 0x388
[0x388:0x390]
---
Predecessors: [0x36d]
Successors: [0x46f]
---
0x388 PUSH2 0x135
0x38b SWAP2
0x38c POP
0x38d PUSH2 0x46f
0x390 JUMP
---
0x388: V315 = 0x135
0x38d: V316 = 0x46f
0x390: JUMP 0x46f
---
Entry stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x0, V305]
Stack pops: 2
Stack additions: [0x135, S0]
Exit stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x135, V305]

================================

Block 0x391
[0x391:0x3a8]
---
Predecessors: [0x36d]
Successors: [0x3a9, 0x3b2]
---
0x391 JUMPDEST
0x392 CALLER
0x393 PUSH1 0x0
0x395 SWAP1
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x2
0x39a PUSH1 0x20
0x39c MSTORE
0x39d PUSH1 0x40
0x39f SWAP1
0x3a0 SHA3
0x3a1 SLOAD
0x3a2 DUP4
0x3a3 GT
0x3a4 ISZERO
0x3a5 PUSH2 0x3b2
0x3a8 JUMPI
---
0x391: JUMPDEST 
0x392: V317 = CALLER
0x393: V318 = 0x0
0x397: M[0x0] = V317
0x398: V319 = 0x2
0x39a: V320 = 0x20
0x39c: M[0x20] = 0x2
0x39d: V321 = 0x40
0x3a0: V322 = SHA3 0x0 0x40
0x3a1: V323 = S[V322]
0x3a3: V324 = GT S2 V323
0x3a4: V325 = ISZERO V324
0x3a5: V326 = 0x3b2
0x3a8: JUMPI 0x3b2 V325
---
Entry stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x0, V305]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x0, V305]

================================

Block 0x3a9
[0x3a9:0x3b1]
---
Predecessors: [0x391]
Successors: [0x46f]
---
0x3a9 PUSH2 0x136
0x3ac SWAP2
0x3ad POP
0x3ae PUSH2 0x46f
0x3b1 JUMP
---
0x3a9: V327 = 0x136
0x3ae: V328 = 0x46f
0x3b1: JUMP 0x46f
---
Entry stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x0, V305]
Stack pops: 2
Stack additions: [0x136, S0]
Exit stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x136, V305]

================================

Block 0x3b2
[0x3b2:0x3c4]
---
Predecessors: [0x391]
Successors: [0x55a]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x3
0x3b5 SLOAD
0x3b6 PUSH2 0x3c5
0x3b9 SWAP1
0x3ba DUP5
0x3bb PUSH4 0xffffffff
0x3c0 PUSH2 0x55a
0x3c3 AND
0x3c4 JUMP
---
0x3b2: JUMPDEST 
0x3b3: V329 = 0x3
0x3b5: V330 = S[0x3]
0x3b6: V331 = 0x3c5
0x3bb: V332 = 0xffffffff
0x3c0: V333 = 0x55a
0x3c3: V334 = AND 0x55a 0xffffffff
0x3c4: JUMP 0x55a
---
Entry stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x0, V305]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x3c5, V330, S2]
Exit stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, 0x0, V305, 0x3c5, V330, S2]

================================

Block 0x3c5
[0x3c5:0x3e7]
---
Predecessors: [0x5cb]
Successors: [0x55a]
---
0x3c5 JUMPDEST
0x3c6 PUSH1 0x3
0x3c8 SSTORE
0x3c9 CALLER
0x3ca PUSH1 0x0
0x3cc SWAP1
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x2
0x3d1 PUSH1 0x20
0x3d3 MSTORE
0x3d4 PUSH1 0x40
0x3d6 SWAP1
0x3d7 SHA3
0x3d8 SLOAD
0x3d9 PUSH2 0x3e8
0x3dc SWAP1
0x3dd DUP5
0x3de PUSH4 0xffffffff
0x3e3 PUSH2 0x55a
0x3e6 AND
0x3e7 JUMP
---
0x3c5: JUMPDEST 
0x3c6: V335 = 0x3
0x3c8: S[0x3] = V451
0x3c9: V336 = CALLER
0x3ca: V337 = 0x0
0x3ce: M[0x0] = V336
0x3cf: V338 = 0x2
0x3d1: V339 = 0x20
0x3d3: M[0x20] = 0x2
0x3d4: V340 = 0x40
0x3d7: V341 = SHA3 0x0 0x40
0x3d8: V342 = S[V341]
0x3d9: V343 = 0x3e8
0x3de: V344 = 0xffffffff
0x3e3: V345 = 0x55a
0x3e6: V346 = AND 0x55a 0xffffffff
0x3e7: JUMP 0x55a
---
Entry stack: [V9, S9, S8, S7, 0x0, {0x200, 0x213}, S4, S3, 0x0, S1, V451]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x3e8, V342, S3]
Exit stack: [V9, S9, S8, S7, 0x0, {0x200, 0x213}, S4, S3, 0x0, S1, 0x3e8, V342, S3]

================================

Block 0x3e8
[0x3e8:0x429]
---
Predecessors: [0x5cb]
Successors: [0x42a, 0x44b]
---
0x3e8 JUMPDEST
0x3e9 CALLER
0x3ea PUSH1 0x0
0x3ec SWAP1
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH1 0x2
0x3f1 PUSH1 0x20
0x3f3 MSTORE
0x3f4 PUSH1 0x40
0x3f6 DUP1
0x3f7 DUP3
0x3f8 SHA3
0x3f9 SWAP3
0x3fa SWAP1
0x3fb SWAP3
0x3fc SSTORE
0x3fd SWAP1
0x3fe MLOAD
0x3ff PUSH1 0x60
0x401 SWAP1
0x402 PUSH1 0x1
0x404 PUSH1 0xa0
0x406 PUSH1 0x2
0x408 EXP
0x409 SUB
0x40a DUP8
0x40b AND
0x40c SWAP1
0x40d PUSH2 0xc350
0x410 SWAP1
0x411 DUP8
0x412 SWAP1
0x413 DUP6
0x414 DUP2
0x415 DUP2
0x416 DUP2
0x417 DUP6
0x418 DUP9
0x419 DUP9
0x41a CALL
0x41b SWAP4
0x41c POP
0x41d POP
0x41e POP
0x41f POP
0x420 RETURNDATASIZE
0x421 DUP1
0x422 PUSH1 0x0
0x424 DUP2
0x425 EQ
0x426 PUSH2 0x44b
0x429 JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V347 = CALLER
0x3ea: V348 = 0x0
0x3ee: M[0x0] = V347
0x3ef: V349 = 0x2
0x3f1: V350 = 0x20
0x3f3: M[0x20] = 0x2
0x3f4: V351 = 0x40
0x3f8: V352 = SHA3 0x0 0x40
0x3fc: S[V352] = V451
0x3fe: V353 = M[0x40]
0x3ff: V354 = 0x60
0x402: V355 = 0x1
0x404: V356 = 0xa0
0x406: V357 = 0x2
0x408: V358 = EXP 0x2 0xa0
0x409: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40b: V360 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V361 = 0xc350
0x41a: V362 = CALL 0xc350 V360 S3 V353 0x0 V353 0x0
0x420: V363 = RETURNDATASIZE
0x422: V364 = 0x0
0x425: V365 = EQ V363 0x0
0x426: V366 = 0x44b
0x429: JUMPI 0x44b V365
---
Entry stack: [V9, S9, S8, S7, 0x0, {0x200, 0x213}, S4, S3, 0x0, S1, V451]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x0, 0x60, V362, V363, V363]
Exit stack: [V9, S9, S8, S7, 0x0, {0x200, 0x213}, S4, S3, 0x0, S1, 0x0, 0x60, V362, V363, V363]

================================

Block 0x42a
[0x42a:0x44a]
---
Predecessors: [0x3e8]
Successors: [0x450]
---
0x42a PUSH1 0x40
0x42c MLOAD
0x42d SWAP2
0x42e POP
0x42f PUSH1 0x1f
0x431 NOT
0x432 PUSH1 0x3f
0x434 RETURNDATASIZE
0x435 ADD
0x436 AND
0x437 DUP3
0x438 ADD
0x439 PUSH1 0x40
0x43b MSTORE
0x43c RETURNDATASIZE
0x43d DUP3
0x43e MSTORE
0x43f RETURNDATASIZE
0x440 PUSH1 0x0
0x442 PUSH1 0x20
0x444 DUP5
0x445 ADD
0x446 RETURNDATACOPY
0x447 PUSH2 0x450
0x44a JUMP
---
0x42a: V367 = 0x40
0x42c: V368 = M[0x40]
0x42f: V369 = 0x1f
0x431: V370 = NOT 0x1f
0x432: V371 = 0x3f
0x434: V372 = RETURNDATASIZE
0x435: V373 = ADD V372 0x3f
0x436: V374 = AND V373 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x438: V375 = ADD V368 V374
0x439: V376 = 0x40
0x43b: M[0x40] = V375
0x43c: V377 = RETURNDATASIZE
0x43e: M[V368] = V377
0x43f: V378 = RETURNDATASIZE
0x440: V379 = 0x0
0x442: V380 = 0x20
0x445: V381 = ADD V368 0x20
0x446: RETURNDATACOPY V381 0x0 V378
0x447: V382 = 0x450
0x44a: JUMP 0x450
---
Entry stack: [V9, S13, S12, S11, 0x0, {0x200, 0x213}, S8, S7, 0x0, S5, 0x0, 0x60, V362, V363, V363]
Stack pops: 2
Stack additions: [V368, S0]
Exit stack: [V9, S13, S12, S11, 0x0, {0x200, 0x213}, S8, S7, 0x0, S5, 0x0, 0x60, V362, V368, V363]

================================

Block 0x44b
[0x44b:0x44f]
---
Predecessors: [0x3e8]
Successors: [0x450]
---
0x44b JUMPDEST
0x44c PUSH1 0x60
0x44e SWAP2
0x44f POP
---
0x44b: JUMPDEST 
0x44c: V383 = 0x60
---
Entry stack: [V9, S13, S12, S11, 0x0, {0x200, 0x213}, S8, S7, 0x0, S5, 0x0, 0x60, V362, V363, V363]
Stack pops: 2
Stack additions: [0x60, S0]
Exit stack: [V9, S13, S12, S11, 0x0, {0x200, 0x213}, S8, S7, 0x0, S5, 0x0, 0x60, V362, 0x60, V363]

================================

Block 0x450
[0x450:0x45c]
---
Predecessors: [0x42a, 0x44b]
Successors: [0x45d, 0x468]
---
0x450 JUMPDEST
0x451 POP
0x452 SWAP2
0x453 POP
0x454 SWAP2
0x455 POP
0x456 DUP2
0x457 ISZERO
0x458 ISZERO
0x459 PUSH2 0x468
0x45c JUMPI
---
0x450: JUMPDEST 
0x457: V384 = ISZERO V362
0x458: V385 = ISZERO V384
0x459: V386 = 0x468
0x45c: JUMPI 0x468 V385
---
Entry stack: [V9, S13, S12, S11, 0x0, {0x200, 0x213}, S8, S7, 0x0, S5, 0x0, 0x60, V362, S1, V363]
Stack pops: 5
Stack additions: [S2, S1]
Exit stack: [V9, S13, S12, S11, 0x0, {0x200, 0x213}, S8, S7, 0x0, S5, V362, S1]

================================

Block 0x45d
[0x45d:0x467]
---
Predecessors: [0x450]
Successors: [0x46f]
---
0x45d PUSH2 0x137
0x460 SWAP4
0x461 POP
0x462 POP
0x463 POP
0x464 PUSH2 0x46f
0x467 JUMP
---
0x45d: V387 = 0x137
0x464: V388 = 0x46f
0x467: JUMP 0x46f
---
Entry stack: [V9, S10, S9, S8, 0x0, {0x200, 0x213}, S5, S4, 0x0, S2, V362, S0]
Stack pops: 4
Stack additions: [0x137, S2]
Exit stack: [V9, S10, S9, S8, 0x0, {0x200, 0x213}, S5, S4, 0x137, S2]

================================

Block 0x468
[0x468:0x46e]
---
Predecessors: [0x450]
Successors: [0x46f]
---
0x468 JUMPDEST
0x469 PUSH1 0x0
0x46b SWAP4
0x46c POP
0x46d POP
0x46e POP
---
0x468: JUMPDEST 
0x469: V389 = 0x0
---
Entry stack: [V9, S10, S9, S8, 0x0, {0x200, 0x213}, S5, S4, 0x0, S2, V362, S0]
Stack pops: 4
Stack additions: [0x0, S2]
Exit stack: [V9, S10, S9, S8, 0x0, {0x200, 0x213}, S5, S4, 0x0, S2]

================================

Block 0x46f
[0x46f:0x478]
---
Predecessors: [0x388, 0x3a9, 0x45d, 0x468]
Successors: [0x479, 0x4df]
---
0x46f JUMPDEST
0x470 PUSH1 0x0
0x472 SLOAD
0x473 DUP2
0x474 EQ
0x475 PUSH2 0x4df
0x478 JUMPI
---
0x46f: JUMPDEST 
0x470: V390 = 0x0
0x472: V391 = S[0x0]
0x474: V392 = EQ S0 V391
0x475: V393 = 0x4df
0x478: JUMPI 0x4df V392
---
Entry stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, {0x0, 0x135, 0x136, 0x137}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, {0x0, 0x135, 0x136, 0x137}, S0]

================================

Block 0x479
[0x479:0x4de]
---
Predecessors: [0x46f]
Successors: []
---
0x479 PUSH1 0x40
0x47b DUP1
0x47c MLOAD
0x47d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x20
0x4a2 PUSH1 0x4
0x4a4 DUP3
0x4a5 ADD
0x4a6 MSTORE
0x4a7 PUSH1 0xc
0x4a9 PUSH1 0x24
0x4ab DUP3
0x4ac ADD
0x4ad MSTORE
0x4ae PUSH32 0x6e6f6e5265656e7472616e740000000000000000000000000000000000000000
0x4cf PUSH1 0x44
0x4d1 DUP3
0x4d2 ADD
0x4d3 MSTORE
0x4d4 SWAP1
0x4d5 MLOAD
0x4d6 SWAP1
0x4d7 DUP2
0x4d8 SWAP1
0x4d9 SUB
0x4da PUSH1 0x64
0x4dc ADD
0x4dd SWAP1
0x4de REVERT
---
0x479: V394 = 0x40
0x47c: V395 = M[0x40]
0x47d: V396 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x49f: M[V395] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x4a0: V397 = 0x20
0x4a2: V398 = 0x4
0x4a5: V399 = ADD V395 0x4
0x4a6: M[V399] = 0x20
0x4a7: V400 = 0xc
0x4a9: V401 = 0x24
0x4ac: V402 = ADD V395 0x24
0x4ad: M[V402] = 0xc
0x4ae: V403 = 0x6e6f6e5265656e7472616e740000000000000000000000000000000000000000
0x4cf: V404 = 0x44
0x4d2: V405 = ADD V395 0x44
0x4d3: M[V405] = 0x6e6f6e5265656e7472616e740000000000000000000000000000000000000000
0x4d5: V406 = M[0x40]
0x4d9: V407 = SUB V395 V406
0x4da: V408 = 0x64
0x4dc: V409 = ADD 0x64 V407
0x4de: REVERT V406 V409
---
Entry stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, {0x0, 0x135, 0x136, 0x137}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, {0x0, 0x135, 0x136, 0x137}, S0]

================================

Block 0x4df
[0x4df:0x4e5]
---
Predecessors: [0x46f]
Successors: [0x200, 0x213]
---
0x4df JUMPDEST
0x4e0 POP
0x4e1 SWAP3
0x4e2 SWAP2
0x4e3 POP
0x4e4 POP
0x4e5 JUMP
---
0x4df: JUMPDEST 
0x4e5: JUMP {0x200, 0x213}
---
Entry stack: [V9, S8, S7, S6, 0x0, {0x200, 0x213}, S3, S2, {0x0, 0x135, 0x136, 0x137}, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V9, S8, S7, S6, 0x0, {0x0, 0x135, 0x136, 0x137}]

================================

Block 0x4e6
[0x4e6:0x4f3]
---
Predecessors: [0x2c1, 0x2ea, 0x321, 0x341]
Successors: [0x200, 0x4f4]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x0
0x4e9 DUP3
0x4ea DUP3
0x4eb ADD
0x4ec DUP4
0x4ed DUP2
0x4ee LT
0x4ef ISZERO
0x4f0 PUSH2 0x200
0x4f3 JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V410 = 0x0
0x4eb: V411 = ADD S0 S1
0x4ee: V412 = LT V411 S1
0x4ef: V413 = ISZERO V412
0x4f0: V414 = 0x200
0x4f3: JUMPI 0x200 V413
---
Entry stack: [V9, S5, S4, S3, {0x2ea, 0x316, 0x341, 0x364}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V411]
Exit stack: [V9, S5, S4, S3, {0x2ea, 0x316, 0x341, 0x364}, S1, S0, 0x0, V411]

================================

Block 0x4f4
[0x4f4:0x559]
---
Predecessors: [0x4e6]
Successors: []
---
0x4f4 PUSH1 0x40
0x4f6 DUP1
0x4f7 MLOAD
0x4f8 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x519 DUP2
0x51a MSTORE
0x51b PUSH1 0x20
0x51d PUSH1 0x4
0x51f DUP3
0x520 ADD
0x521 MSTORE
0x522 PUSH1 0xd
0x524 PUSH1 0x24
0x526 DUP3
0x527 ADD
0x528 MSTORE
0x529 PUSH32 0x536166654d6174682c2061646400000000000000000000000000000000000000
0x54a PUSH1 0x44
0x54c DUP3
0x54d ADD
0x54e MSTORE
0x54f SWAP1
0x550 MLOAD
0x551 SWAP1
0x552 DUP2
0x553 SWAP1
0x554 SUB
0x555 PUSH1 0x64
0x557 ADD
0x558 SWAP1
0x559 REVERT
---
0x4f4: V415 = 0x40
0x4f7: V416 = M[0x40]
0x4f8: V417 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x51a: M[V416] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x51b: V418 = 0x20
0x51d: V419 = 0x4
0x520: V420 = ADD V416 0x4
0x521: M[V420] = 0x20
0x522: V421 = 0xd
0x524: V422 = 0x24
0x527: V423 = ADD V416 0x24
0x528: M[V423] = 0xd
0x529: V424 = 0x536166654d6174682c2061646400000000000000000000000000000000000000
0x54a: V425 = 0x44
0x54d: V426 = ADD V416 0x44
0x54e: M[V426] = 0x536166654d6174682c2061646400000000000000000000000000000000000000
0x550: V427 = M[0x40]
0x554: V428 = SUB V416 V427
0x555: V429 = 0x64
0x557: V430 = ADD 0x64 V428
0x559: REVERT V427 V430
---
Entry stack: [V9, S7, S6, S5, {0x2ea, 0x316, 0x341, 0x364}, S3, S2, 0x0, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S7, S6, S5, {0x2ea, 0x316, 0x341, 0x364}, S3, S2, 0x0, V411]

================================

Block 0x55a
[0x55a:0x564]
---
Predecessors: [0x3b2, 0x3c5]
Successors: [0x565, 0x5cb]
---
0x55a JUMPDEST
0x55b PUSH1 0x0
0x55d DUP3
0x55e DUP3
0x55f GT
0x560 ISZERO
0x561 PUSH2 0x5cb
0x564 JUMPI
---
0x55a: JUMPDEST 
0x55b: V431 = 0x0
0x55f: V432 = GT S0 S1
0x560: V433 = ISZERO V432
0x561: V434 = 0x5cb
0x564: JUMPI 0x5cb V433
---
Entry stack: [V9, S11, S10, S9, 0x0, {0x200, 0x213}, S6, S5, 0x0, S3, {0x3c5, 0x3e8}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V9, S11, S10, S9, 0x0, {0x200, 0x213}, S6, S5, 0x0, S3, {0x3c5, 0x3e8}, S1, S0, 0x0]

================================

Block 0x565
[0x565:0x5ca]
---
Predecessors: [0x55a]
Successors: []
---
0x565 PUSH1 0x40
0x567 DUP1
0x568 MLOAD
0x569 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x58a DUP2
0x58b MSTORE
0x58c PUSH1 0x20
0x58e PUSH1 0x4
0x590 DUP3
0x591 ADD
0x592 MSTORE
0x593 PUSH1 0xd
0x595 PUSH1 0x24
0x597 DUP3
0x598 ADD
0x599 MSTORE
0x59a PUSH32 0x536166654d6174682c2073756200000000000000000000000000000000000000
0x5bb PUSH1 0x44
0x5bd DUP3
0x5be ADD
0x5bf MSTORE
0x5c0 SWAP1
0x5c1 MLOAD
0x5c2 SWAP1
0x5c3 DUP2
0x5c4 SWAP1
0x5c5 SUB
0x5c6 PUSH1 0x64
0x5c8 ADD
0x5c9 SWAP1
0x5ca REVERT
---
0x565: V435 = 0x40
0x568: V436 = M[0x40]
0x569: V437 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x58b: M[V436] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x58c: V438 = 0x20
0x58e: V439 = 0x4
0x591: V440 = ADD V436 0x4
0x592: M[V440] = 0x20
0x593: V441 = 0xd
0x595: V442 = 0x24
0x598: V443 = ADD V436 0x24
0x599: M[V443] = 0xd
0x59a: V444 = 0x536166654d6174682c2073756200000000000000000000000000000000000000
0x5bb: V445 = 0x44
0x5be: V446 = ADD V436 0x44
0x5bf: M[V446] = 0x536166654d6174682c2073756200000000000000000000000000000000000000
0x5c1: V447 = M[0x40]
0x5c5: V448 = SUB V436 V447
0x5c6: V449 = 0x64
0x5c8: V450 = ADD 0x64 V448
0x5ca: REVERT V447 V450
---
Entry stack: [V9, S12, S11, S10, 0x0, {0x200, 0x213}, S7, S6, 0x0, S4, {0x3c5, 0x3e8}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S12, S11, S10, 0x0, {0x200, 0x213}, S7, S6, 0x0, S4, {0x3c5, 0x3e8}, S2, S1, 0x0]

================================

Block 0x5cb
[0x5cb:0x5d0]
---
Predecessors: [0x55a]
Successors: [0x3c5, 0x3e8]
---
0x5cb JUMPDEST
0x5cc POP
0x5cd SWAP1
0x5ce SUB
0x5cf SWAP1
0x5d0 JUMP
---
0x5cb: JUMPDEST 
0x5ce: V451 = SUB S2 S1
0x5d0: JUMP {0x3c5, 0x3e8}
---
Entry stack: [V9, S12, S11, S10, 0x0, {0x200, 0x213}, S7, S6, 0x0, S4, {0x3c5, 0x3e8}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V451]
Exit stack: [V9, S12, S11, S10, 0x0, {0x200, 0x213}, S7, S6, 0x0, S4, V451]

================================

Block 0x5d1
[0x5d1:0x5fc]
---
Predecessors: []
Successors: []
---
0x5d1 INVALID
0x5d2 LOG1
0x5d3 PUSH6 0x627a7a723058
0x5da SHA3
0x5db CODECOPY
0x5dc PUSH29 0xfa580b8adc0012b6d6005274207afd11b9756d3e475e0f501991405889
0x5fa SWAP2
0x5fb STOP
0x5fc MISSING 0x29
---
0x5d1: INVALID 
0x5d2: LOG S0 S1 S2
0x5d3: V452 = 0x627a7a723058
0x5da: V453 = SHA3 0x627a7a723058 S3
0x5db: CODECOPY V453 S4 S5
0x5dc: V454 = 0xfa580b8adc0012b6d6005274207afd11b9756d3e475e0f501991405889
0x5fb: STOP 
0x5fc: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, S6, 0xfa580b8adc0012b6d6005274207afd11b9756d3e475e0f501991405889]
Exit stack: []

================================

Function 0:
Public function signature: 0x205c2878
Entry block: 0x80
Exit block: 0x1d8
Body: 0x80, 0x88, 0x8c, 0x9f, 0xa3, 0xb9, 0x1d8, 0x1f4, 0x200, 0x2ea, 0x316, 0x341, 0x364

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0xcb
Exit block: 0xb9
Body: 0xb9, 0xcb, 0xd3, 0xd7, 0xea, 0xee, 0x207, 0x213

Function 2:
Public function signature: 0x70a08231
Entry block: 0xf5
Exit block: 0xb9
Body: 0xb9, 0xf5, 0xfd, 0x101, 0x114, 0x118, 0x219

Function 3:
Public function signature: 0x95d89b41
Entry block: 0x128
Exit block: 0x1a4
Body: 0x128, 0x130, 0x134, 0x13d, 0x15f, 0x168, 0x177, 0x18b, 0x1a4, 0x234, 0x273, 0x27b, 0x28e, 0x29c, 0x2b0, 0x2b9

Function 4:
Public function signature: 0xb760faf9
Entry block: 0x1b2
Exit block: 0x1d8
Body: 0x1b2, 0x1c4, 0x1c8, 0x1d8, 0x2c1, 0x2ea

Function 5:
Public function signature: 0xd0e30db0
Entry block: 0x1ec
Exit block: 0x1d8
Body: 0x1d8, 0x1ec, 0x321, 0x341

Function 6:
Public fallback function
Entry block: 0x71
Exit block: 0x79
Body: 0x71, 0x79, 0x7d

Function 7:
Private function
Entry block: 0x36d
Exit block: 0x4df
Body: 0x36d, 0x388, 0x391, 0x3a9, 0x3b2, 0x3c5, 0x3c5, 0x3e8, 0x42a, 0x44b, 0x450, 0x45d, 0x468, 0x46f, 0x4df, 0x55a, 0x5cb

Function 8:
Private function
Entry block: 0x55a
Exit block: 0x5cb
Body: 0x55a, 0x5cb

Function 9:
Private function
Entry block: 0x4e6
Exit block: 0x200
Body: 0x200, 0x4e6

